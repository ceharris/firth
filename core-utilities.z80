; .s print stack (non-destructively)
mCODE ".s",2,0,dots                   ; ( -- )
    ENTER
    dw spfetch                          ; psp
    dw sp0, fetch                       ; psp0
    dw SUBB
    dw lit, 0, greaterThan
    cif
        dw sp0, fetch, lit, 2, plus
        cdo
            dw DUPP
            dw spfetch, lit, 2, SUBB
            dw swap, SUBB, zequal
        cuntil
            dw DUPP, fetch, dot
            dw lit, 2, plus
        cenddo
        dw drop
    cendif
    EXIT

mCODE "words", 5, 0, WORDS
    push BC
    call listWords
    pop BC
    NEXT

listWords:
    ld DE, (VAR_LATEST)             ; search dictionary backwards from LATEST
    _do
        checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
    _until z
        push DE                     ; save ptr to header
        inc DE                      ; skip over first field
        inc DE
        ld A, (DE)                  ; a = flags+length field
        and MSK_HIDDEN | MSK_LENGTH ; %al = name length
        ld B,0
        ld C,A
        inc DE
        call printStr
        call printSpace
        call putc
        pop HL                      ; HL = link to previous header
        ld E,(HL)
        inc HL
        ld D,(HL)                   ; DE = previous word
    _enddo
    call printCR
    ret

