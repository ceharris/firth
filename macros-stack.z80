; Macros to deal with the param stack.
.macro PTUCK, regHI, regLO
    ld (IX+0), regLO     ; POP register pair from ret stk
    inc IX
    ld (IX+0), regHI
    inc IX
.endm

.macro PNIP, regHI, regLO
    dec IX              ; PUSH register pair on ret stack
    ld regHI, (IX+0)
    dec IX
    ld regLO, (IX+0)
.endm

.macro PDUP
    PTUCK B,C
.endm

.macro PDROP
    PNIP B,C
.endm

    ; Macros to deal with the param stack with TOS in BC
.macro PPUSH, regHI, regLO
    PDUP             ; push TOS reg pair
    setTOS regHI,regLO
.endm

.macro PPOP, regHI, regLO
    getTOS regHI,regLO
    PDROP
.endm

.macro ppushValue, val
    PDUP
    ld BC, val
.endm

.macro ppushText, s1, len
    ppushValue tpt_text%%M
    ppushValue len
    _skip
tpt_text%%M:
        db s1
    _endskip
.endm

.macro ppushPText, s1
    ppushValue tpt_text%%M
    ld BC, tpt_text%%M
    _skip
tpt_text%%M:
        .pstr s1
    _endskip
.endm

; Macros to deal with the return stack.
.macro PUSH_RET, regHI, regLO
    push regHIregLO
.endm

.macro POP_RET, regHI, regLO
    pop regHIregLO
.endm

