; words must preserve: BC, DE, SP, IX
; words may destroy: HL, IY, AF, AF', BC', DE' HL'

mCODE "words", 5, 0, WORDS
    push BC
    call listWords
    pop BC
    NEXT

mCODE "print",5,0,PRINT
    ppop D,E
    call printPStr
    NEXT

; 1*      n1/u1 -- n2/u2            do nothing
mCODE "noop",4,0,noop
    NEXT

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; memory access
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
mCODE "chars",5,0,CHARS
    jp noop


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; arithmetic
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;


; R@ r-fetch

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; definitions
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

mCODE "immediate",9,MSK_IMMED,IMMEDIATE
    ld HL, (VAR_LATEST)                 ; get head of latest word
    inc HL                              ; point to flags byte
    inc HL
    ld a, MSK_IMMED
    xor (HL)                            ; toggle the IMMED bit.
    ld (HL),a
    NEXT


; DOES> does

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;;
;; device
;;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

mCODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
    ppop D,E                        ; DE = adr2, BC = len
    push DE
    ppop0 H,L                       ; HL = adr1
    ld A,C
    ld (DE),A                       ; write length byte to adr2
    inc DE                          ; adr2 += 1
    ldir
    pop BC                          ; TOS = adr2
    NEXT

