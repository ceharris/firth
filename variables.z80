
                DS RET_STACK_SIZE   ; return stack size
RET_STACK:                          ; return stack, grows down
RPP:                                ; RP0 grows down (into TIBB)

DATA_STACK:     
                DS DATA_STACK_SIZE  ; TODO: change remove double data stack size
SPP:                                ; SP0 (should) grow down

                .align $100
serBuf:         ds SER_BUFSIZE
serInPtr:       dw 0
serRdPtr:       dw 0
serBufUsed:     dw 0
lineBufStart    dw 0
lineBufSize     dw 0
currkey:        dw 0
lineBufTop:     dw 0
lineBuf:        ds LINE_BUFSIZE

wordBuf:        ds 64
wordBuf2:       ds 64
VAR_PAD:        ds PAD_SIZE

exitAddr:       dw 0
IS_LITERAL:     dw 0            ; Flag used to record if reading a literal
VAR_HERE:       dw 0
VAR_INTP_STOP:  dw 0
VAR_STATE:      dw 0
VAR_NESTING:    dw 0
VAR_SP0:        dw 0            ;PAR_STACK
VAR_BASE:       dw 0
VAR_LATEST_STR: dw 0
VAR_LATEST:     dw 0

.if TESTMODE

    ; used for mocking getc

    char_pointer:   dw 0

.endif
