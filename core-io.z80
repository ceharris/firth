CODE "type",4,0,TYPE             ; ( str len -- )
    PNIP D,E                       ; DE = str BC = length
    call printStr
    PDROP                       ; clear TOS
    NEXT

CODE "cr",2,0,cr                 ; ( -- )
    call printcr
    NEXT

    CODE "accept",6,0,ACCEPT              ; ( addr max -- len )
    PPOP D,E                    ; max - up to 255
	PNIP H,L                          ; addr
    call getline
    NEXT

CODE "key",3,0,KEY                ; ( -- c )
	call getKey
    ld b, 0
    ld c, a
    NEXT

CODE "emit",4,0,EMIT              ; print the character on the stack
	ld A, C                     ; (c -- )
	call putc
    PDROP                      ; clear stack
    NEXT

CODE "key?",4,0,QKEY              ; ( -- c )
	PDUP		                ; save TOS
	call inputReady
    ld BC, 1                    ; TOS = true
    _if z
        ld BC, 0                    ; TOS = false
    _endif
    NEXT

CODE "bl",2,0,bl
    ENTER
    dw LIT, $20                         ; compile branch on zero
    EXIT

CODE "print",5,0,PRINT
    PPOP D,E
    call printPStr
    NEXT

; ." print string"
CODE {".",$22},2,IMMED,dotquote
    ENTER
    dw qt
    dw state, AT, zequal
    dw QBRAN, dotquote1
        dw type
        dw BRAN, dotquote2
dotquote1:
        dw LIT, type, comma
dotquote2:
    EXIT


