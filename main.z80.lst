0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   0   
0000                MEM_SIZE:   EQU   $10000   ; MEM is 64K
0000                ROM_SIZE:   EQU   $2000   ; ROM is 8K
0000                RAM_SIZE:   EQU   MEM_SIZE - ROM_SIZE   ; RAM is 64K - 8K
0000                BM:       EQU   0   ; bottom of ROM memory
0000                EM:       EQU   BM + MEM_SIZE   
0000                START_ROM:   EQU   BM   ; inclusive
0000                END_ROM:   EQU   BM + ROM_SIZE   ; exclusive
0000                START_RAM:   EQU   BM + ROM_SIZE   ; inclusive
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   ; exclusive
0000                RET_STACK_SIZE:   EQU   $100   ; return stack
0000                DATA_STACK_SIZE:   EQU   $100   ; data stack
0000                PAD_SIZE:   EQU   $100   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                IMMED:   EQU   $80   
0000                HIDE:   EQU   $40   
0000                LENMASK:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; STORE the chain of links.
0000                LINK:     .SET   0   
0000                .macro CODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro MVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                CODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro MCONST,name,namelen,flags,label,value
0000                             ; 
0000                CODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro XBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW XBRAN, 6
0000                 DW XBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW XQBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, XQBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW XBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW XBRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW XBRAN, CPL_TOP - $ - 2
0000                 XBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro ENTER,
0000                             ; 
0000                 ENTER                             ; enter forth
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 ENTER
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 67 00               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 1F 0F               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 C9 10               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                START:       
0067   31 00 21               LD   SP,RET_STACK   ; Initialise the return stack.
006A   CD A0 10               CALL   initSerial   
006D   CD E4 0E               CALL   initForth   
0070                          IF   TESTMODE   
                              JP   TESTS_START   
0070                          ELSE      
0070                          ;*Macro unroll:  PRINT_STR TXT_INTRO
0070                          ;*Macro unroll:  ppush0 D,E
0070   DD 73 00               LD   (IX+0),E   
0073   DD 23                  INC   IX   
0075   DD 72 00               LD   (IX+0),D   
0078   DD 23                  INC   IX   
007A   11 5C 10               LD   DE,TXT_INTRO   
007D   CD 2E 12               CALL   printPStr   
0080                          ;*Macro unroll:  ppop0 D,E
0080   DD 2B                  DEC   IX   
0082   DD 56 00               LD   D,(IX+0)   
0085   DD 2B                  DEC   IX   
0087   DD 5E 00               LD   E,(IX+0)   
008A   C3 9E 0B               JP   QUIT   
008D                          ENDIF      
008D                             ;   0<          ( n -- t )
008D                             ;               Return true if n is negative.
008D                          ;*Macro unroll: CODE '0<',2,0,ZLESS
008D                HEADER_ZLESS:      
008D   00 00                  DW   link   
008F                LINK:     .SET   HEADER_ZLESS   
008F   02                     DB   0 + 2   
0090   30 3C                  DB   "0<"   
0092                ZLESS:       
0092   CB 20                  SLA   B   ; sign bit -> cy flag
0094   9F                     SBC   A,A   ; propagate cy through A
0095   47                     LD   B,A   ; put 0000 or FFFF in TOS
0096   4F                     LD   C,A   
0097                          ;*Macro unroll: 	NEXT
0097   C3 1F 0F               JP   enter   
009A                             ; and    x1 x2 -- x3            logical and
009A                          ;*Macro unroll: CODE "and",3,0,ANDD	        ; bitwise and
009A                HEADER_ANDD:      ; bitwise and
009A   8D 00                  DW   link   
009C                LINK:     .SET   HEADER_ANDD   
009C   03                     DB   0 + 3   
009D   61 6E 64               DB   "and"   
00A0                ANDD:        
00A0                          ;*Macro unroll:  PPOP0 H,L
00A0   DD 2B                  DEC   IX   
00A2   DD 66 00               LD   H,(IX+0)   
00A5   DD 2B                  DEC   IX   
00A7   DD 6E 00               LD   L,(IX+0)   
00AA   78                     LD   A,B   
00AB   A4                     AND   H   
00AC   47                     LD   B,A   
00AD   79                     LD   A,C   
00AE   A5                     AND   L   
00AF   4F                     LD   C,A   
00B0                          ;*Macro unroll:  NEXT
00B0   C3 1F 0F               JP   enter   
00B3                             ; OR    x1 x2 -- x3             logical OR
00B3                          ;*Macro unroll: CODE "or",2,0,ORR	            ; bitwise OR
00B3                HEADER_ORR:      ; bitwise OR
00B3   9A 00                  DW   link   
00B5                LINK:     .SET   HEADER_ORR   
00B5   02                     DB   0 + 2   
00B6   6F 72                  DB   "or"   
00B8                ORR:         
00B8                          ;*Macro unroll:  ppop0 H,L
00B8   DD 2B                  DEC   IX   
00BA   DD 66 00               LD   H,(IX+0)   
00BD   DD 2B                  DEC   IX   
00BF   DD 6E 00               LD   L,(IX+0)   
00C2   78                     LD   A,B   
00C3   B4                     OR   H   
00C4   47                     LD   B,A   
00C5   79                     LD   A,C   
00C6   B5                     OR   L   
00C7   4F                     LD   C,A   
00C8                          ;*Macro unroll:  NEXT
00C8   C3 1F 0F               JP   enter   
00CB                             ; xor    x1 x2 -- x3            logical xor
00CB                          ;*Macro unroll: CODE "xor",3,0,XORR	        ; bitwise xor
00CB                HEADER_XORR:      ; bitwise xor
00CB   B3 00                  DW   link   
00CD                LINK:     .SET   HEADER_XORR   
00CD   03                     DB   0 + 3   
00CE   78 6F 72               DB   "xor"   
00D1                XORR:        
00D1                          ;*Macro unroll:  ppop0 H,L
00D1   DD 2B                  DEC   IX   
00D3   DD 66 00               LD   H,(IX+0)   
00D6   DD 2B                  DEC   IX   
00D8   DD 6E 00               LD   L,(IX+0)   
00DB   78                     LD   A,B   
00DC   AC                     XOR   H   
00DD   47                     LD   B,A   
00DE   79                     LD   A,C   
00DF   AD                     XOR   L   
00E0   4F                     LD   C,A   
00E1                          ;*Macro unroll:  NEXT
00E1   C3 1F 0F               JP   enter   
00E4                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
00E4                          ;*Macro unroll: CODE "+",1,0,PLUS
00E4                HEADER_PLUS:      
00E4   CB 00                  DW   link   
00E6                LINK:     .SET   HEADER_PLUS   
00E6   01                     DB   0 + 1   
00E7   2B                     DB   "+"   
00E8                PLUS:        
00E8                          ;*Macro unroll:  ppop0 H,L
00E8   DD 2B                  DEC   IX   
00EA   DD 66 00               LD   H,(IX+0)   
00ED   DD 2B                  DEC   IX   
00EF   DD 6E 00               LD   L,(IX+0)   
00F2   09                     ADD   HL,BC   
00F3                          ;*Macro unroll:  loadWord B,C, H,L
00F3   4D                     LD   C,L   
00F4   44                     LD   B,H   
00F5                          ;*Macro unroll:  NEXT
00F5   C3 1F 0F               JP   enter   
00F8                             ; INVERT x1 -- x2               ; bitwise complement
00F8                          ;*Macro unroll: CODE "not",6,0,INVER
00F8                HEADER_INVER:      
00F8   E4 00                  DW   link   
00FA                LINK:     .SET   HEADER_INVER   
00FA   06                     DB   0 + 6   
00FB   6E 6F 74               DB   "not"   
00FE                INVER:       
00FE                          ;*Macro unroll:  ENTER
00FE   CF                     RST   $08   
00FF   5E 12 FF FF D1 00 30 0F DW   LIT,-1,XORR,EXIT   
0107                             ; negate  n1 -- n2                      negate n1
0107                          ;*Macro unroll: CODE "negate",6,0,NEGAT
0107                HEADER_NEGAT:      
0107   F8 00                  DW   link   
0109                LINK:     .SET   HEADER_NEGAT   
0109   06                     DB   0 + 6   
010A   6E 65 67 61 74 65      DB   "negate"   
0110                NEGAT:       
0110                          ;*Macro unroll:  ENTER
0110   CF                     RST   $08   
0111   FE 00 9A 03 30 0F      DW   INVER,ONEP,EXIT   
0117                             ; negate  n1 -- n2                      negate n1
0117                          ;*Macro unroll: CODE "dnegate",7,0,DNEGA
0117                HEADER_DNEGA:      
0117   07 01                  DW   link   
0119                LINK:     .SET   HEADER_DNEGA   
0119   07                     DB   0 + 7   
011A   64 6E 65 67 61 74 65   DB   "dnegate"   
0121                DNEGA:       
0121                          ;*Macro unroll:  ENTER
0121   CF                     RST   $08   
0122   FE 00 4F 13 FE 00      DW   INVER,TOR,INVER   
0128   5E 12 01 00 08 02      DW   LIT,1,UPLUS   
012E   64 13 E8 00 30 0F      DW   RFROM,PLUS,EXIT   
0134                          ;*Macro unroll: CODE "-",1,0,SUBB
0134                HEADER_SUBB:      
0134   17 01                  DW   link   
0136                LINK:     .SET   HEADER_SUBB   
0136   01                     DB   0 + 1   
0137   2D                     DB   "-"   
0138                SUBB:        
0138                          ;*Macro unroll:  ENTER
0138   CF                     RST   $08   
0139   10 01 E8 00 30 0F      DW   NEGAT,Plus,EXIT   
013F                             ; abs   n -- u                          absolute value
013F                          ;*Macro unroll: CODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
013F                HEADER_ABS:      ; case sensitive for ABS label for some reason
013F   34 01                  DW   link   
0141                LINK:     .SET   HEADER_ABS   
0141   03                     DB   0 + 3   
0142   61 62 73               DB   "abs"   
0145                ABS:         
0145                          ;*Macro unroll:  ENTER
0145   CF                     RST   $08   
0146   DF 12 92 00 EF 07 50 01 DW   DUPP,ZLESS,QBRAN,ABS1   
014E   10 01                  DW   NEGAT   
0150                ABS1:        
0150   30 0F                  DW   EXIT   
0152                             ; =      x1 x2 -- flag         test x1=x2
0152                          ;*Macro unroll: CODE "=",1,0,EQUAL
0152                HEADER_EQUAL:      
0152   3F 01                  DW   link   
0154                LINK:     .SET   HEADER_EQUAL   
0154   01                     DB   0 + 1   
0155   3D                     DB   "="   
0156                EQUAL:       
0156                          ;*Macro unroll:  ENTER
0156   CF                     RST   $08   
0157   D1 00                  DW   XORR   
0159   EF 07 63 01            DW   QBRAN,EQU1   
015D   5E 12 00 00 30 0F      DW   LIT,0,EXIT   ;false flag
0163                EQU1:        
0163   5E 12 FF FF 30 0F      DW   LIT,-1,EXIT   ;true flag
0169                             ;   U<          ( u u -- t )
0169                             ;               Unsigned compare of top two items.
0169                          ;*Macro unroll: CODE "U<",2,0,ULESS	        ; less than
0169                HEADER_ULESS:      ; less than
0169   52 01                  DW   link   
016B                LINK:     .SET   HEADER_ULESS   
016B   02                     DB   0 + 2   
016C   55 3C                  DB   "U<"   
016E                ULESS:       
016E                          ;*Macro unroll:  ENTER
016E   CF                     RST   $08   
016F   8A 13 D1 00 92 00      DW   DDUP,XORR,ZLESS   
0175   EF 07 81 01            DW   QBRAN,ULES1   
0179   F3 12 13 13 92 00 30 0F DW   SWAP,DROP,ZLESS,EXIT   
0181                ULES1:       
0181   38 01 92 00 30 0F      DW   SUBB,ZLESS,EXIT   
0187                             ;   <           ( n1 n2 -- t )
0187                             ;               is less than
0187                          ;*Macro unroll: CODE "<",1,0,LESS	        ; less than
0187                HEADER_LESS:      ; less than
0187   69 01                  DW   link   
0189                LINK:     .SET   HEADER_LESS   
0189   01                     DB   0 + 1   
018A   3C                     DB   "<"   
018B                LESS:        
018B                          ;*Macro unroll:  ENTER
018B   CF                     RST   $08   
018C   8A 13 D1 00 92 00 EF 07 9C 01 DW   DDUP,XORR,ZLESS,QBRAN,LESS1   
0196   13 13 92 00 30 0F      DW   DROP,ZLESS,EXIT   
019C                LESS1:       
019C   38 01 92 00 30 0F      DW   SUBB,ZLESS,EXIT   
01A2                             ; >      n1 n2 -- flag          test n1 > n2
01A2                          ;*Macro unroll: CODE ">",1,0,GREATR	        ; less than
01A2                HEADER_GREATERTHAN:      ; less than
01A2   87 01                  DW   link   
01A4                LINK:     .SET   HEADER_GREATERTHAN   
01A4   01                     DB   0 + 1   
01A5   3E                     DB   ">"   
01A6                GREATR:      
01A6                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
01A6   DD 2B                  DEC   IX   ; swap operands
01A8   DD 66 00               LD   H,(IX+0)   
01AB   DD 2B                  DEC   IX   
01AD   DD 6E 00               LD   L,(IX+0)   
01B0                          ;*Macro unroll:  ppush H,L
01B0                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
01B0   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
01B3   DD 23                  INC   IX   
01B5   DD 70 00               LD   (IX+0),B   
01B8   DD 23                  INC   IX   
01BA   44                     LD   B,H   
01BB   4D                     LD   C,L   
01BC   18 CD                  JR   LESS   
01BE                             ; max   n1 n2 -- u                      maximum
01BE                          ;*Macro unroll: CODE "max",3,0,MAX
01BE                HEADER_MAX:      
01BE   A2 01                  DW   link   
01C0                LINK:     .SET   HEADER_MAX   
01C0   03                     DB   0 + 3   
01C1   6D 61 78               DB   "max"   
01C4                MAX:         
01C4                          ;*Macro unroll:  ENTER
01C4   CF                     RST   $08   
01C5   8A 13 8B 01 EF 07 CF 01 DW   DDUP,LESS,QBRAN,MAX1   
01CD   F3 12                  DW   SWAP   
01CF                MAX1:        
01CF   13 13 30 0F            DW   DROP,EXIT   
01D3                             ; min   n1 n2 -- u                      minimum
01D3                          ;*Macro unroll: CODE "min",3,0,MIN
01D3                HEADER_MIN:      
01D3   BE 01                  DW   link   
01D5                LINK:     .SET   HEADER_MIN   
01D5   03                     DB   0 + 3   
01D6   6D 69 6E               DB   "min"   
01D9                MIN:         
01D9                          ;*Macro unroll:  ENTER
01D9   CF                     RST   $08   
01DA   8A 13 F3 12 8B 01      DW   DDUP,SWAP,LESS   
01E0   EF 07 E6 01            DW   QBRAN,MIN1   
01E4   F3 12                  DW   SWAP   
01E6                MIN1:        
01E6   13 13 30 0F            DW   DROP,EXIT   
01EA                             ;   WITHIN      ( u ul uh -- t )
01EA                             ;               Return true if u is within the range of ul and uh.
01EA                          ;*Macro unroll: CODE 'WITHIN',6,0,WITHI
01EA                HEADER_WITHI:      
01EA   D3 01                  DW   link   
01EC                LINK:     .SET   HEADER_WITHI   
01EC   06                     DB   0 + 6   
01ED   57 49 54 48 49 4E      DB   "WITHIN"   
01F3                WITHI:       
01F3                          ;*Macro unroll: 	ENTER
01F3   CF                     RST   $08   
01F4   27 13 38 01 4F 13      DW   OVER,SUBB,TOR   ;ul <= u < uh
01FA   38 01 64 13 6E 01 30 0F DW   SUBB,RFROM,ULESS,EXIT   
0202                             ;   UM+         ( w w -- w cy )
0202                             ;               Add two numbers, return the sum and carry flag.
0202                          ;*Macro unroll: CODE "UM+",6,0,UPLUS
0202                HEADER_UPLUS:      
0202   EA 01                  DW   link   
0204                LINK:     .SET   HEADER_UPLUS   
0204   06                     DB   0 + 6   
0205   55 4D 2B               DB   "UM+"   
0208                UPLUS:       
0208                          ;*Macro unroll:  ppop0 H,L
0208   DD 2B                  DEC   IX   
020A   DD 66 00               LD   H,(IX+0)   
020D   DD 2B                  DEC   IX   
020F   DD 6E 00               LD   L,(IX+0)   
0212   09                     ADD   HL,BC   ;11t
0213                          ;*Macro unroll:  ppush0 H,L
0213   DD 75 00               LD   (IX+0),L   
0216   DD 23                  INC   IX   
0218   DD 74 00               LD   (IX+0),H   
021B   DD 23                  INC   IX   
021D   01 00 00               LD   BC,0   ;10t
0220   30 01                  JR   NC,UMP1   ;12/7t
0222                UMP2:        
0222   03                     INC   BC   ; 6t
0223                UMP1:        
0223                          ;*Macro unroll:  NEXT
0223   C3 1F 0F               JP   enter   
0226                             ;   UM/MOD      ( udl udh u -- ur uq )
0226                             ;               Unsigned divide of a double by a single. Return mod and quotient.
0226                          ;*Macro unroll: CODE  'UM/MOD',6,0,UMMOD
0226                HEADER_UMMOD:      
0226   02 02                  DW   link   
0228                LINK:     .SET   HEADER_UMMOD   
0228   06                     DB   0 + 6   
0229   55 4D 2F 4D 4F 44      DB   "UM/MOD"   
022F                UMMOD:       
022F                          ;*Macro unroll:  ENTER
022F   CF                     RST   $08   
0230   8A 13 6E 01            DW   DDUP,ULESS   
0234   EF 07 84 02            DW   QBRAN,UMM4   
0238   10 01 5E 12 0F 00 4F 13 DW   NEGAT,LIT,15,TOR   
0240                UMM1:        
0240   4F 13 DF 12 08 02      DW   TOR,DUPP,UPLUS   
0246   4F 13 4F 13 DF 12 08 02 DW   TOR,TOR,DUPP,UPLUS   
024E   64 13 E8 00 DF 12      DW   RFROM,PLUS,DUPP   
0254   64 13 52 10 F3 12 4F 13 DW   RFROM,RAT,SWAP,TOR   
025C   08 02 64 13 B8 00      DW   UPLUS,RFROM,ORR   
0262   EF 07 76 02            DW   QBRAN,UMM2   
0266   4F 13 13 13 5E 12 01 00 E8 00 64 13 DW   TOR,DROP,LIT,1,PLUS,RFROM   
0272   0C 08 78 02            DW   BRAN,UMM3   
0276                UMM2:        
0276   13 13                  DW   DROP   
0278                UMM3:        
0278   64 13                  DW   RFROM   
027A   1B 08 40 02            DW   DONXT,UMM1   
027E   13 13 F3 12 30 0F      DW   DROP,SWAP,EXIT   
0284                UMM4:        
0284   13 13 7C 13            DW   DROP,DDROP   
0288   5E 12 FF FF DF 12 30 0F DW   LIT,-1,DUPP,EXIT   ;overflow, return max
0290                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
0290                          ;*Macro unroll: CODE "u/mod",5,0,USLASHMOD
0290                HEADER_USLASHMOD:      
0290   26 02                  DW   link   
0292                LINK:     .SET   HEADER_USLASHMOD   
0292   05                     DB   0 + 5   
0293   75 2F 6D 6F 64         DB   "u/mod"   
0298                USLASHMOD:      
0298                          ;*Macro unroll:  ppop D,E                ; DE = divisor
0298   50                     LD   D,B   ; DE = divisor
0299   59                     LD   E,C   
029A                          ;*Macro unroll:  ppop0 B,C
029A   DD 2B                  DEC   IX   
029C   DD 46 00               LD   B,(IX+0)   
029F   DD 2B                  DEC   IX   
02A1   DD 4E 00               LD   C,(IX+0)   
02A4                             ; BC = dividend
02A4   CD FC 03               CALL   divideWordByWord   
02A7                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
02A7   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
02AA   DD 23                  INC   IX   
02AC   DD 74 00               LD   (IX+0),H   
02AF   DD 23                  INC   IX   
02B1                          ;*Macro unroll:  NEXT
02B1   C3 1F 0F               JP   enter   
02B4                          ;*Macro unroll: CODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
02B4                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
02B4   90 02                  DW   link   
02B6                LINK:     .SET   HEADER_slashmod   
02B6   04                     DB   0 + 4   
02B7   2F 6D 6F 64            DB   "/mod"   
02BB                SLASHMOD:      
02BB                          ;*Macro unroll:  ENTER
02BB   CF                     RST   $08   
02BC   27 13 27 13            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
02C0   D1 00                  DW   XORR   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
02C2   92 00                  DW   ZLESS   ; true if high bit still set
02C4   AA 12                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
02C6   27 13                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
02C8   92 00                  DW   ZLESS   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
02CA   AA 12                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
02CC   45 01 F3 12 45 01 F3 12 DW   ABS,swap,ABS,swap   ; remove sign from both args
02D4   98 02                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
02D6   F3 12                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
02D8   76 12                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
02DA   EF 07 E0 02            DW   QBRAN,SLASHMOD1   
02DE   10 01                  DW   NEGAT   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
02E0                SLASHMOD1:      
02E0   AA 12                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
02E2   F3 12                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
02E4   EF 07 EA 02            DW   QBRAN,SLASHMOD2   
02E8   10 01                  DW   NEGAT   ;     -r q b1 -- -r -q       if signs differ then negate answer
02EA                SLASHMOD2:      
02EA                          ;*Macro unroll:  EXIT
02EA   30 0F                  DW   exit   
02EC   C3 1F 0F               JP   enter   
02EF                          ;*Macro unroll: CODE "mod",3,0,mod                   ; dvend dvisr -- remainder
02EF                HEADER_MOD:      ; dvend dvisr -- remainder
02EF   B4 02                  DW   link   
02F1                LINK:     .SET   HEADER_mod   
02F1   03                     DB   0 + 3   
02F2   6D 6F 64               DB   "mod"   
02F5                MOD:         
02F5                          ;*Macro unroll:  ENTER
02F5   CF                     RST   $08   
02F6   BB 02 13 13 30 0F      DW   slashmod,DROP,EXIT   ; drop quotient
02FC                          ;*Macro unroll: CODE "/",1,0,slash                   ; dvend dvisr -- quot
02FC                HEADER_SLASH:      ; dvend dvisr -- quot
02FC   EF 02                  DW   link   
02FE                LINK:     .SET   HEADER_slash   
02FE   01                     DB   0 + 1   
02FF   2F                     DB   "/"   
0300                SLASH:       
0300                          ;*Macro unroll:  ENTER
0300   CF                     RST   $08   
0301   BB 02 F3 12 13 13 30 0F DW   slashmod,swap,drop,EXIT   ; drop remainder
0309                             ; U*   u1 u2 -- ud   unsigned mutliply
0309                          ;*Macro unroll: CODE "u*",2,0,USTAR              ; u1 u2 -- ud
0309                HEADER_USTAR:      ; u1 u2 -- ud
0309   FC 02                  DW   link   
030B                LINK:     .SET   HEADER_USTAR   
030B   02                     DB   0 + 2   
030C   75 2A                  DB   "u*"   
030E                USTAR:       
030E                             ; u2 in BC
030E                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
030E   DD 2B                  DEC   IX   ; u1 in DE
0310   DD 56 00               LD   D,(IX+0)   
0313   DD 2B                  DEC   IX   
0315   DD 5E 00               LD   E,(IX+0)   
0318   CD 36 04               CALL   unsignedMultiply   
031B                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
031B   DD 73 00               LD   (IX+0),E   ; udlo result
031E   DD 23                  INC   IX   
0320   DD 72 00               LD   (IX+0),D   
0323   DD 23                  INC   IX   
0325                             ; udhi result
0325                          ;*Macro unroll:  NEXT
0325   C3 1F 0F               JP   enter   
0328                          ;*Macro unroll: CODE "*",1,0,STAR                    ; u1 u2 -- ud
0328                HEADER_STAR:      ; u1 u2 -- ud
0328   09 03                  DW   link   
032A                LINK:     .SET   HEADER_STAR   
032A   01                     DB   0 + 1   
032B   2A                     DB   "*"   
032C                STAR:        
032C                          ;*Macro unroll:  ENTER
032C   CF                     RST   $08   
032D   27 13 27 13            DW   over,over   ; dupe both args
0331   45 01 F3 12 45 01      DW   ABS,swap,ABS   ; remove sign from both args
0337   0E 03 13 13            DW   ustar,drop   ; unsigned multiply, drop hi-word
033B   AA 12                  DW   nrot   ; move to bottom
033D   D1 00                  DW   XORR   ; zero if signs are the same
033F   92 00                  DW   ZLESS   ; if high bit set
0341   EF 07 47 03            DW   QBRAN,STAR1   
0345   10 01                  DW   NEGAT   ; if signs differ then negate answer
0347                STAR1:       
0347                          ;*Macro unroll:  EXIT
0347   30 0F                  DW   exit   
0349   C3 1F 0F               JP   enter   
034C                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
034C                          ;*Macro unroll: CODE "cell+",5,0,CELLP
034C                HEADER_CELLP:      
034C   28 03                  DW   link   
034E                LINK:     .SET   HEADER_CELLP   
034E   05                     DB   0 + 5   
034F   63 65 6C 6C 2B         DB   "cell+"   
0354                CELLP:       
0354   C3 AC 03               JP   TWOP   
0357                          ;*Macro unroll: CODE "cell-",5,0,CELLM
0357                HEADER_CELLM:      
0357   4C 03                  DW   link   
0359                LINK:     .SET   HEADER_CELLM   
0359   05                     DB   0 + 5   
035A   63 65 6C 6C 2D         DB   "cell-"   
035F                CELLM:       
035F   C3 B6 03               JP   TWOM   
0362                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
0362                          ;*Macro unroll: CODE "cells",5,0,CELLS
0362                HEADER_CELLS:      
0362   57 03                  DW   link   
0364                LINK:     .SET   HEADER_CELLS   
0364   05                     DB   0 + 5   
0365   63 65 6C 6C 73         DB   "cells"   
036A                CELLS:       
036A   C3 C0 03               JP   TWOST   
036D                             ; 0= zero-equal
036D                          ;*Macro unroll: CODE "0=",2,0,ZEQUAL
036D                HEADER_ZEQUAL:      
036D   62 03                  DW   link   
036F                LINK:     .SET   HEADER_ZEQUAL   
036F   02                     DB   0 + 2   
0370   30 3D                  DB   "0="   
0372                ZEQUAL:      
0372                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0372   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0373   B0                     OR   B   
0374                          ;*Macro unroll:  _if nz
0374   C2 7A 03               JP   nz,L_M_840S256   
0377   C3 77 03               JP   $   
037A                          ;*Macro unroll:  STRUC_PUSH $
037A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
037A                STRUC_12:   .SET   STRUC_11   
037A                STRUC_11:   .SET   STRUC_10   
037A                STRUC_10:   .SET   STRUC_9   
037A                STRUC_9:   .SET   STRUC_8   
037A                STRUC_8:   .SET   STRUC_7   
037A                STRUC_7:   .SET   STRUC_6   
037A                STRUC_6:   .SET   STRUC_5   
037A                STRUC_5:   .SET   STRUC_4   
037A                STRUC_4:   .SET   STRUC_3   
037A                STRUC_3:   .SET   STRUC_2   
037A                STRUC_2:   .SET   STRUC_TOP   
037A                STRUC_TOP:   .SET   $   
037A                L_M_840S256:      
037A   01 FF FF               LD   BC,-1   
037D                          ;*Macro unroll:  _endif
037D                          ;*Macro unroll:  STRUC_FWD
037D                CUR_ADR:   .SET   $   
0378                          .ORG   STRUC_TOP - 2   
0378   7D 03                  DW   CUR_ADR   
037D                          .ORG   CUR_ADR   
037D                          ;*Macro unroll:  STRUC_POP
037D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
037D                STRUC_TOP:   .SET   STRUC_2   
037D                STRUC_2:   .SET   STRUC_3   
037D                STRUC_3:   .SET   STRUC_4   
037D                STRUC_4:   .SET   STRUC_5   
037D                STRUC_5:   .SET   STRUC_6   
037D                STRUC_6:   .SET   STRUC_7   
037D                STRUC_7:   .SET   STRUC_8   
037D                STRUC_8:   .SET   STRUC_9   
037D                STRUC_9:   .SET   STRUC_10   
037D                STRUC_10:   .SET   STRUC_11   
037D                STRUC_11:   .SET   STRUC_12   
037D                STRUC_12:   .SET   0   
037D   03                     INC   BC   
037E                          ;*Macro unroll:  NEXT
037E   C3 1F 0F               JP   enter   
0381                          ;*Macro unroll: CODE "0<>",3,0,ZNEQU
0381                HEADER_ZNEQU:      
0381   6D 03                  DW   link   
0383                LINK:     .SET   HEADER_ZNEQU   
0383   03                     DB   0 + 3   
0384   30 3C 3E               DB   "0<>"   
0387                ZNEQU:       
0387                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0387   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0388   B0                     OR   B   
0389                          ;*Macro unroll:  _if nz
0389   C2 8F 03               JP   nz,L_M_847S264   
038C   C3 8C 03               JP   $   
038F                          ;*Macro unroll:  STRUC_PUSH $
038F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
038F                STRUC_12:   .SET   STRUC_11   
038F                STRUC_11:   .SET   STRUC_10   
038F                STRUC_10:   .SET   STRUC_9   
038F                STRUC_9:   .SET   STRUC_8   
038F                STRUC_8:   .SET   STRUC_7   
038F                STRUC_7:   .SET   STRUC_6   
038F                STRUC_6:   .SET   STRUC_5   
038F                STRUC_5:   .SET   STRUC_4   
038F                STRUC_4:   .SET   STRUC_3   
038F                STRUC_3:   .SET   STRUC_2   
038F                STRUC_2:   .SET   STRUC_TOP   
038F                STRUC_TOP:   .SET   $   
038F                L_M_847S264:      
038F   01 01 00               LD   BC,1   
0392                          ;*Macro unroll:  _endif
0392                          ;*Macro unroll:  STRUC_FWD
0392                CUR_ADR:   .SET   $   
038D                          .ORG   STRUC_TOP - 2   
038D   92 03                  DW   CUR_ADR   
0392                          .ORG   CUR_ADR   
0392                          ;*Macro unroll:  STRUC_POP
0392                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0392                STRUC_TOP:   .SET   STRUC_2   
0392                STRUC_2:   .SET   STRUC_3   
0392                STRUC_3:   .SET   STRUC_4   
0392                STRUC_4:   .SET   STRUC_5   
0392                STRUC_5:   .SET   STRUC_6   
0392                STRUC_6:   .SET   STRUC_7   
0392                STRUC_7:   .SET   STRUC_8   
0392                STRUC_8:   .SET   STRUC_9   
0392                STRUC_9:   .SET   STRUC_10   
0392                STRUC_10:   .SET   STRUC_11   
0392                STRUC_11:   .SET   STRUC_12   
0392                STRUC_12:   .SET   0   
0392                          ;*Macro unroll:  NEXT
0392   C3 1F 0F               JP   enter   
0395                             ; 1+      n -- n                    add 1 to TOS
0395                          ;*Macro unroll: CODE "1+",2,0,ONEP
0395                HEADER_ONEP:      
0395   81 03                  DW   link   
0397                LINK:     .SET   HEADER_ONEP   
0397   02                     DB   0 + 2   
0398   31 2B                  DB   "1+"   
039A                ONEP:        
039A   03                     INC   BC   
039B                          ;*Macro unroll:  NEXT
039B   C3 1F 0F               JP   enter   
039E                             ; 1-      n -- n            sub 1 to TOS
039E                          ;*Macro unroll: CODE "1-",2,0,ONEM
039E                HEADER_ONEM:      
039E   95 03                  DW   link   
03A0                LINK:     .SET   HEADER_ONEM   
03A0   02                     DB   0 + 2   
03A1   31 2D                  DB   "1-"   
03A3                ONEM:        
03A3   0B                     DEC   BC   
03A4                          ;*Macro unroll:  NEXT
03A4   C3 1F 0F               JP   enter   
03A7                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
03A7                          ;*Macro unroll: CODE "2+",2,0,TWOP
03A7                HEADER_TWOP:      
03A7   9E 03                  DW   link   
03A9                LINK:     .SET   HEADER_TWOP   
03A9   02                     DB   0 + 2   
03AA   32 2B                  DB   "2+"   
03AC                TWOP:        
03AC   03                     INC   BC   
03AD   03                     INC   BC   
03AE                          ;*Macro unroll:  NEXT
03AE   C3 1F 0F               JP   enter   
03B1                          ;*Macro unroll: CODE "2-",2,0,TWOM
03B1                HEADER_TWOM:      
03B1   A7 03                  DW   link   
03B3                LINK:     .SET   HEADER_TWOM   
03B3   02                     DB   0 + 2   
03B4   32 2D                  DB   "2-"   
03B6                TWOM:        
03B6   0B                     DEC   BC   
03B7   0B                     DEC   BC   
03B8                          ;*Macro unroll:  NEXT
03B8   C3 1F 0F               JP   enter   
03BB                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
03BB                          ;*Macro unroll: CODE "2*",2,0,TWOST
03BB                HEADER_TWOST:      
03BB   B1 03                  DW   link   
03BD                LINK:     .SET   HEADER_TWOST   
03BD   02                     DB   0 + 2   
03BE   32 2A                  DB   "2*"   
03C0                TWOST:       
03C0   CB 21                  SLA   C   
03C2   CB 10                  RL   B   
03C4                          ;*Macro unroll:  NEXT
03C4   C3 1F 0F               JP   enter   
03C7                             ; 2/      x1 -- x2                  arithmetic right shift
03C7                          ;*Macro unroll: CODE "2/",2,0,TWOSLASH
03C7                HEADER_TWOSLASH:      
03C7   BB 03                  DW   link   
03C9                LINK:     .SET   HEADER_TWOSLASH   
03C9   02                     DB   0 + 2   
03CA   32 2F                  DB   "2/"   
03CC                TWOSLASH:      
03CC   CB 28                  SRA   B   
03CE   CB 19                  RR   C   
03D0                          ;*Macro unroll:  NEXT
03D0   C3 1F 0F               JP   enter   
03D3                             ; 
03D3                             ; negate ***
03D3                             ; params: HL = number
03D3                             ; 
03D3                NEGATENUM:      
03D3                             ; Negate HL (using two's complement)
03D3   AF                     XOR   A   
03D4   95                     SUB   L   
03D5   6F                     LD   L,A   
03D6   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
03D8   9C                     SBC   A,H   
03D9   67                     LD   H,A   
03DA   C9                     RET      
03DB                             ; 
03DB                             ; divide word by byte ***
03DB                             ; params: HL = dividend, C = divisor
03DB                             ; returns: HL = result, A = remainder
03DB                             ; destroys: ?
03DB                             ; 
03DB                DIVIDEWORDBYBYTE:      
03DB   06 10                  LD   B,16   
03DD   AF                     XOR   A   
03DE                          ;*Macro unroll:  _do
03DE   18 03                  JR   L_M_900S327   
03E0   C3 E0 03               JP   $   
03E3                          ;*Macro unroll:  DLOOP_PUSH $
03E3                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03E3                DLOOP_12:   .SET   DLOOP_11   
03E3                DLOOP_11:   .SET   DLOOP_10   
03E3                DLOOP_10:   .SET   DLOOP_9   
03E3                DLOOP_9:   .SET   DLOOP_8   
03E3                DLOOP_8:   .SET   DLOOP_7   
03E3                DLOOP_7:   .SET   DLOOP_6   
03E3                DLOOP_6:   .SET   DLOOP_5   
03E3                DLOOP_5:   .SET   DLOOP_4   
03E3                DLOOP_4:   .SET   DLOOP_3   
03E3                DLOOP_3:   .SET   DLOOP_2   
03E3                DLOOP_2:   .SET   DLOOP_TOP   
03E3                DLOOP_TOP:   .SET   $   
03E3                L_M_900S327:      
03E3   29                     ADD   HL,HL   
03E4   17                     RLA      
03E5                          ;*Macro unroll:  _if c
03E5   DA EB 03               JP   c,L_M_903S330   
03E8   C3 E8 03               JP   $   
03EB                          ;*Macro unroll:  STRUC_PUSH $
03EB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03EB                STRUC_12:   .SET   STRUC_11   
03EB                STRUC_11:   .SET   STRUC_10   
03EB                STRUC_10:   .SET   STRUC_9   
03EB                STRUC_9:   .SET   STRUC_8   
03EB                STRUC_8:   .SET   STRUC_7   
03EB                STRUC_7:   .SET   STRUC_6   
03EB                STRUC_6:   .SET   STRUC_5   
03EB                STRUC_5:   .SET   STRUC_4   
03EB                STRUC_4:   .SET   STRUC_3   
03EB                STRUC_3:   .SET   STRUC_2   
03EB                STRUC_2:   .SET   STRUC_TOP   
03EB                STRUC_TOP:   .SET   $   
03EB                L_M_903S330:      
03EB   91                     SUB   C   
03EC   2C                     INC   L   
03ED                          ;*Macro unroll:  _else
03ED   C3 ED 03               JP   $   
03F0                          ;*Macro unroll:  STRUC_FWD
03F0                CUR_ADR:   .SET   $   
03E9                          .ORG   STRUC_TOP - 2   
03E9   F0 03                  DW   CUR_ADR   
03F0                          .ORG   CUR_ADR   
03F0                STRUC_TOP:   .SET   $   
03F0   B9                     CP   C   
03F1                          ;*Macro unroll:  _if nc
03F1   D2 F7 03               JP   nc,L_M_908S335   
03F4   C3 F4 03               JP   $   
03F7                          ;*Macro unroll:  STRUC_PUSH $
03F7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03F7                STRUC_12:   .SET   STRUC_11   
03F7                STRUC_11:   .SET   STRUC_10   
03F7                STRUC_10:   .SET   STRUC_9   
03F7                STRUC_9:   .SET   STRUC_8   
03F7                STRUC_8:   .SET   STRUC_7   
03F7                STRUC_7:   .SET   STRUC_6   
03F7                STRUC_6:   .SET   STRUC_5   
03F7                STRUC_5:   .SET   STRUC_4   
03F7                STRUC_4:   .SET   STRUC_3   
03F7                STRUC_3:   .SET   STRUC_2   
03F7                STRUC_2:   .SET   STRUC_TOP   
03F7                STRUC_TOP:   .SET   $   
03F7                L_M_908S335:      
03F7   91                     SUB   C   
03F8   2C                     INC   L   
03F9                          ;*Macro unroll:  _endif
03F9                          ;*Macro unroll:  STRUC_FWD
03F9                CUR_ADR:   .SET   $   
03F5                          .ORG   STRUC_TOP - 2   
03F5   F9 03                  DW   CUR_ADR   
03F9                          .ORG   CUR_ADR   
03F9                          ;*Macro unroll:  STRUC_POP
03F9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03F9                STRUC_TOP:   .SET   STRUC_2   
03F9                STRUC_2:   .SET   STRUC_3   
03F9                STRUC_3:   .SET   STRUC_4   
03F9                STRUC_4:   .SET   STRUC_5   
03F9                STRUC_5:   .SET   STRUC_6   
03F9                STRUC_6:   .SET   STRUC_7   
03F9                STRUC_7:   .SET   STRUC_8   
03F9                STRUC_8:   .SET   STRUC_9   
03F9                STRUC_9:   .SET   STRUC_10   
03F9                STRUC_10:   .SET   STRUC_11   
03F9                STRUC_11:   .SET   STRUC_12   
03F9                STRUC_12:   .SET   0   
03F9                          ;*Macro unroll:  _endif
03F9                          ;*Macro unroll:  STRUC_FWD
03F9                CUR_ADR:   .SET   $   
03EE                          .ORG   STRUC_TOP - 2   
03EE   F9 03                  DW   CUR_ADR   
03F9                          .ORG   CUR_ADR   
03F9                          ;*Macro unroll:  STRUC_POP
03F9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03F9                STRUC_TOP:   .SET   STRUC_2   
03F9                STRUC_2:   .SET   STRUC_3   
03F9                STRUC_3:   .SET   STRUC_4   
03F9                STRUC_4:   .SET   STRUC_5   
03F9                STRUC_5:   .SET   STRUC_6   
03F9                STRUC_6:   .SET   STRUC_7   
03F9                STRUC_7:   .SET   STRUC_8   
03F9                STRUC_8:   .SET   STRUC_9   
03F9                STRUC_9:   .SET   STRUC_10   
03F9                STRUC_10:   .SET   STRUC_11   
03F9                STRUC_11:   .SET   STRUC_12   
03F9                STRUC_12:   .SET   0   
03F9                          ;*Macro unroll:  _djnz
03F9   10 E8                  DJNZ   DLOOP_TOP   
03FB                          ;*Macro unroll:  DLOOP_FWD
03FB                CUR_ADR:   .SET   $   
03E1                          .ORG   DLOOP_TOP - 2   
03E1   FB 03                  DW   CUR_ADR   
03FB                          .ORG   CUR_ADR   
03FB                          ;*Macro unroll:  DLOOP_POP
03FB                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03FB                DLOOP_TOP:   .SET   DLOOP_2   
03FB                DLOOP_2:   .SET   DLOOP_3   
03FB                DLOOP_3:   .SET   DLOOP_4   
03FB                DLOOP_4:   .SET   DLOOP_5   
03FB                DLOOP_5:   .SET   DLOOP_6   
03FB                DLOOP_6:   .SET   DLOOP_7   
03FB                DLOOP_7:   .SET   DLOOP_8   
03FB                DLOOP_8:   .SET   DLOOP_9   
03FB                DLOOP_9:   .SET   DLOOP_10   
03FB                DLOOP_10:   .SET   DLOOP_11   
03FB                DLOOP_11:   .SET   DLOOP_12   
03FB                DLOOP_12:   .SET   0   
03FB   C9                     RET      
03FC                             ; 
03FC                             ; Divide word by word ***
03FC                             ; params: BC = dividend, DE = divisor
03FC                             ; returns: BC = result, HL = remainder
03FC                             ; destroys: ?
03FC                             ; 
03FC                DIVIDEWORDBYWORD:      
03FC   D5                     PUSH   DE   
03FD   21 00 00               LD   HL,0   
0400   78                     LD   A,B   
0401   06 08                  LD   B,8   
0403                          ;*Macro unroll:  _do
0403   18 03                  JR   L_M_926S355   
0405   C3 05 04               JP   $   
0408                          ;*Macro unroll:  DLOOP_PUSH $
0408                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0408                DLOOP_12:   .SET   DLOOP_11   
0408                DLOOP_11:   .SET   DLOOP_10   
0408                DLOOP_10:   .SET   DLOOP_9   
0408                DLOOP_9:   .SET   DLOOP_8   
0408                DLOOP_8:   .SET   DLOOP_7   
0408                DLOOP_7:   .SET   DLOOP_6   
0408                DLOOP_6:   .SET   DLOOP_5   
0408                DLOOP_5:   .SET   DLOOP_4   
0408                DLOOP_4:   .SET   DLOOP_3   
0408                DLOOP_3:   .SET   DLOOP_2   
0408                DLOOP_2:   .SET   DLOOP_TOP   
0408                DLOOP_TOP:   .SET   $   
0408                L_M_926S355:      
0408   17                     RLA      
0409   ED 6A                  ADC   HL,HL   
040B   ED 52                  SBC   HL,DE   
040D                          ;*Macro unroll:  _if c
040D   DA 13 04               JP   c,L_M_930S359   
0410   C3 10 04               JP   $   
0413                          ;*Macro unroll:  STRUC_PUSH $
0413                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0413                STRUC_12:   .SET   STRUC_11   
0413                STRUC_11:   .SET   STRUC_10   
0413                STRUC_10:   .SET   STRUC_9   
0413                STRUC_9:   .SET   STRUC_8   
0413                STRUC_8:   .SET   STRUC_7   
0413                STRUC_7:   .SET   STRUC_6   
0413                STRUC_6:   .SET   STRUC_5   
0413                STRUC_5:   .SET   STRUC_4   
0413                STRUC_4:   .SET   STRUC_3   
0413                STRUC_3:   .SET   STRUC_2   
0413                STRUC_2:   .SET   STRUC_TOP   
0413                STRUC_TOP:   .SET   $   
0413                L_M_930S359:      
0413   19                     ADD   HL,DE   
0414                          ;*Macro unroll:  _endif
0414                          ;*Macro unroll:  STRUC_FWD
0414                CUR_ADR:   .SET   $   
0411                          .ORG   STRUC_TOP - 2   
0411   14 04                  DW   CUR_ADR   
0414                          .ORG   CUR_ADR   
0414                          ;*Macro unroll:  STRUC_POP
0414                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0414                STRUC_TOP:   .SET   STRUC_2   
0414                STRUC_2:   .SET   STRUC_3   
0414                STRUC_3:   .SET   STRUC_4   
0414                STRUC_4:   .SET   STRUC_5   
0414                STRUC_5:   .SET   STRUC_6   
0414                STRUC_6:   .SET   STRUC_7   
0414                STRUC_7:   .SET   STRUC_8   
0414                STRUC_8:   .SET   STRUC_9   
0414                STRUC_9:   .SET   STRUC_10   
0414                STRUC_10:   .SET   STRUC_11   
0414                STRUC_11:   .SET   STRUC_12   
0414                STRUC_12:   .SET   0   
0414                          ;*Macro unroll:  _djnz
0414   10 F2                  DJNZ   DLOOP_TOP   
0416                          ;*Macro unroll:  DLOOP_FWD
0416                CUR_ADR:   .SET   $   
0406                          .ORG   DLOOP_TOP - 2   
0406   16 04                  DW   CUR_ADR   
0416                          .ORG   CUR_ADR   
0416                          ;*Macro unroll:  DLOOP_POP
0416                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0416                DLOOP_TOP:   .SET   DLOOP_2   
0416                DLOOP_2:   .SET   DLOOP_3   
0416                DLOOP_3:   .SET   DLOOP_4   
0416                DLOOP_4:   .SET   DLOOP_5   
0416                DLOOP_5:   .SET   DLOOP_6   
0416                DLOOP_6:   .SET   DLOOP_7   
0416                DLOOP_7:   .SET   DLOOP_8   
0416                DLOOP_8:   .SET   DLOOP_9   
0416                DLOOP_9:   .SET   DLOOP_10   
0416                DLOOP_10:   .SET   DLOOP_11   
0416                DLOOP_11:   .SET   DLOOP_12   
0416                DLOOP_12:   .SET   0   
0416   17                     RLA      
0417   2F                     CPL      
0418   47                     LD   B,A   
0419   79                     LD   A,C   
041A   48                     LD   C,B   
041B   06 08                  LD   B,8   
041D                          ;*Macro unroll:  _do
041D   18 03                  JR   L_M_940S369   
041F   C3 1F 04               JP   $   
0422                          ;*Macro unroll:  DLOOP_PUSH $
0422                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0422                DLOOP_12:   .SET   DLOOP_11   
0422                DLOOP_11:   .SET   DLOOP_10   
0422                DLOOP_10:   .SET   DLOOP_9   
0422                DLOOP_9:   .SET   DLOOP_8   
0422                DLOOP_8:   .SET   DLOOP_7   
0422                DLOOP_7:   .SET   DLOOP_6   
0422                DLOOP_6:   .SET   DLOOP_5   
0422                DLOOP_5:   .SET   DLOOP_4   
0422                DLOOP_4:   .SET   DLOOP_3   
0422                DLOOP_3:   .SET   DLOOP_2   
0422                DLOOP_2:   .SET   DLOOP_TOP   
0422                DLOOP_TOP:   .SET   $   
0422                L_M_940S369:      
0422   17                     RLA      
0423   ED 6A                  ADC   HL,HL   
0425   ED 52                  SBC   HL,DE   
0427                          ;*Macro unroll:  _if c
0427   DA 2D 04               JP   c,L_M_944S373   
042A   C3 2A 04               JP   $   
042D                          ;*Macro unroll:  STRUC_PUSH $
042D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
042D                STRUC_12:   .SET   STRUC_11   
042D                STRUC_11:   .SET   STRUC_10   
042D                STRUC_10:   .SET   STRUC_9   
042D                STRUC_9:   .SET   STRUC_8   
042D                STRUC_8:   .SET   STRUC_7   
042D                STRUC_7:   .SET   STRUC_6   
042D                STRUC_6:   .SET   STRUC_5   
042D                STRUC_5:   .SET   STRUC_4   
042D                STRUC_4:   .SET   STRUC_3   
042D                STRUC_3:   .SET   STRUC_2   
042D                STRUC_2:   .SET   STRUC_TOP   
042D                STRUC_TOP:   .SET   $   
042D                L_M_944S373:      
042D   19                     ADD   HL,DE   
042E                          ;*Macro unroll:  _endif
042E                          ;*Macro unroll:  STRUC_FWD
042E                CUR_ADR:   .SET   $   
042B                          .ORG   STRUC_TOP - 2   
042B   2E 04                  DW   CUR_ADR   
042E                          .ORG   CUR_ADR   
042E                          ;*Macro unroll:  STRUC_POP
042E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
042E                STRUC_TOP:   .SET   STRUC_2   
042E                STRUC_2:   .SET   STRUC_3   
042E                STRUC_3:   .SET   STRUC_4   
042E                STRUC_4:   .SET   STRUC_5   
042E                STRUC_5:   .SET   STRUC_6   
042E                STRUC_6:   .SET   STRUC_7   
042E                STRUC_7:   .SET   STRUC_8   
042E                STRUC_8:   .SET   STRUC_9   
042E                STRUC_9:   .SET   STRUC_10   
042E                STRUC_10:   .SET   STRUC_11   
042E                STRUC_11:   .SET   STRUC_12   
042E                STRUC_12:   .SET   0   
042E                          ;*Macro unroll:  _djnz
042E   10 F2                  DJNZ   DLOOP_TOP   
0430                          ;*Macro unroll:  DLOOP_FWD
0430                CUR_ADR:   .SET   $   
0420                          .ORG   DLOOP_TOP - 2   
0420   30 04                  DW   CUR_ADR   
0430                          .ORG   CUR_ADR   
0430                          ;*Macro unroll:  DLOOP_POP
0430                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0430                DLOOP_TOP:   .SET   DLOOP_2   
0430                DLOOP_2:   .SET   DLOOP_3   
0430                DLOOP_3:   .SET   DLOOP_4   
0430                DLOOP_4:   .SET   DLOOP_5   
0430                DLOOP_5:   .SET   DLOOP_6   
0430                DLOOP_6:   .SET   DLOOP_7   
0430                DLOOP_7:   .SET   DLOOP_8   
0430                DLOOP_8:   .SET   DLOOP_9   
0430                DLOOP_9:   .SET   DLOOP_10   
0430                DLOOP_10:   .SET   DLOOP_11   
0430                DLOOP_11:   .SET   DLOOP_12   
0430                DLOOP_12:   .SET   0   
0430   17                     RLA      
0431   2F                     CPL      
0432   41                     LD   B,C   
0433   4F                     LD   C,A   
0434   D1                     POP   DE   
0435   C9                     RET      
0436                             ; 
0436                             ; unsignedMultiply -  unsigned multiply ***
0436                             ; 
0436                             ; params:  u1 in BC, u2 in DE
0436                             ; returns: result in HLDE
0436                             ; destroys: AF
0436                             ; 
0436                UNSIGNEDMULTIPLY:      
0436   21 00 00               LD   HL,0   
0439   3E 11                  LD   A,17   ; loop counter
043B   B7                     OR   A   ; clear carry
043C                          ;*Macro unroll:  _do
043C   18 03                  JR   L_M_965S396   
043E   C3 3E 04               JP   $   
0441                          ;*Macro unroll:  DLOOP_PUSH $
0441                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0441                DLOOP_12:   .SET   DLOOP_11   
0441                DLOOP_11:   .SET   DLOOP_10   
0441                DLOOP_10:   .SET   DLOOP_9   
0441                DLOOP_9:   .SET   DLOOP_8   
0441                DLOOP_8:   .SET   DLOOP_7   
0441                DLOOP_7:   .SET   DLOOP_6   
0441                DLOOP_6:   .SET   DLOOP_5   
0441                DLOOP_5:   .SET   DLOOP_4   
0441                DLOOP_4:   .SET   DLOOP_3   
0441                DLOOP_3:   .SET   DLOOP_2   
0441                DLOOP_2:   .SET   DLOOP_TOP   
0441                DLOOP_TOP:   .SET   $   
0441                L_M_965S396:      
0441   CB 1C                  RR   H   
0443   CB 1D                  RR   L   
0445   CB 1A                  RR   D   
0447   CB 1B                  RR   E   
0449                          ;*Macro unroll:  _if c
0449   DA 4F 04               JP   c,L_M_970S401   
044C   C3 4C 04               JP   $   
044F                          ;*Macro unroll:  STRUC_PUSH $
044F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
044F                STRUC_12:   .SET   STRUC_11   
044F                STRUC_11:   .SET   STRUC_10   
044F                STRUC_10:   .SET   STRUC_9   
044F                STRUC_9:   .SET   STRUC_8   
044F                STRUC_8:   .SET   STRUC_7   
044F                STRUC_7:   .SET   STRUC_6   
044F                STRUC_6:   .SET   STRUC_5   
044F                STRUC_5:   .SET   STRUC_4   
044F                STRUC_4:   .SET   STRUC_3   
044F                STRUC_3:   .SET   STRUC_2   
044F                STRUC_2:   .SET   STRUC_TOP   
044F                STRUC_TOP:   .SET   $   
044F                L_M_970S401:      
044F   09                     ADD   HL,BC   
0450                          ;*Macro unroll:  _endif
0450                          ;*Macro unroll:  STRUC_FWD
0450                CUR_ADR:   .SET   $   
044D                          .ORG   STRUC_TOP - 2   
044D   50 04                  DW   CUR_ADR   
0450                          .ORG   CUR_ADR   
0450                          ;*Macro unroll:  STRUC_POP
0450                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0450                STRUC_TOP:   .SET   STRUC_2   
0450                STRUC_2:   .SET   STRUC_3   
0450                STRUC_3:   .SET   STRUC_4   
0450                STRUC_4:   .SET   STRUC_5   
0450                STRUC_5:   .SET   STRUC_6   
0450                STRUC_6:   .SET   STRUC_7   
0450                STRUC_7:   .SET   STRUC_8   
0450                STRUC_8:   .SET   STRUC_9   
0450                STRUC_9:   .SET   STRUC_10   
0450                STRUC_10:   .SET   STRUC_11   
0450                STRUC_11:   .SET   STRUC_12   
0450                STRUC_12:   .SET   0   
0450   3D                     DEC   A   
0451                          ;*Macro unroll:  _until z
0451   CA 3E 04               JP   z,DLOOP_TOP - 3   
0454                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0454                CUR_ADR:   .SET   $   ; needed?
043F                          .ORG   DLOOP_TOP - 2   
043F   54 04                  DW   CUR_ADR   
0454                          .ORG   CUR_ADR   
0454                          ;*Macro unroll:  _enddo
0454   C3 41 04               JP   DLOOP_TOP   
0457                          ;*Macro unroll:  DLOOP_FWD
0457                CUR_ADR:   .SET   $   
043F                          .ORG   DLOOP_TOP - 2   
043F   57 04                  DW   CUR_ADR   
0457                          .ORG   CUR_ADR   
0457                          ;*Macro unroll:  DLOOP_POP
0457                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0457                DLOOP_TOP:   .SET   DLOOP_2   
0457                DLOOP_2:   .SET   DLOOP_3   
0457                DLOOP_3:   .SET   DLOOP_4   
0457                DLOOP_4:   .SET   DLOOP_5   
0457                DLOOP_5:   .SET   DLOOP_6   
0457                DLOOP_6:   .SET   DLOOP_7   
0457                DLOOP_7:   .SET   DLOOP_8   
0457                DLOOP_8:   .SET   DLOOP_9   
0457                DLOOP_9:   .SET   DLOOP_10   
0457                DLOOP_10:   .SET   DLOOP_11   
0457                DLOOP_11:   .SET   DLOOP_12   
0457                DLOOP_12:   .SET   0   
0457   C9                     RET      
0458                             ; ;   '           ( -- ca )
0458                             ; ;               Search context vocabularies for the next word in input stream.
0458                             ; CODE  1,"'",TICK
0458                             ;     ENTER
0458                             ;     DW      TOKEN,NAMEQ             ;?defined
0458                             ;     DW      QBRAN,TICK1
0458                             ;     DW      EXIT                    ;yes, push code address
0458                             ; TICK1:
0458                             ;     DW      THROW                   ;no, error
0458                             ; ;   [COMPILE]   ( -- ; <string> )
0458                             ; ;               Compile the next immediate word into code dictionary.
0458                             ; CODE "[COMPILE]",9,IMMED,BCOMP
0458                             ;     ENTER
0458                             ;     DW TICK,COMMA,EXIT
0458                             ;   COMPILE     ( -- )
0458                             ;               Compile the next address in colon list to code dictionary.
0458                          ;*Macro unroll: CODE 'COMPILE',7,0,COMPI
0458                HEADER_COMPI:      
0458   C7 03                  DW   link   
045A                LINK:     .SET   HEADER_COMPI   
045A   07                     DB   0 + 7   
045B   43 4F 4D 50 49 4C 45   DB   "COMPILE"   
0462                COMPI:       
0462                          ;*Macro unroll:  ENTER
0462   CF                     RST   $08   
0463   64 13 DF 12 63 0F 08 10 DW   RFROM,DUPP,AT,COMMA   ;compile address
046B   54 03 4F 13 30 0F      DW   CELLP,TOR,EXIT   ;adjust return address
0471                          ;*Macro unroll: CODE ":",1,0,colon
0471                HEADER_COLON:      
0471   58 04                  DW   link   
0473                LINK:     .SET   HEADER_colon   
0473   01                     DB   0 + 1   
0474   3A                     DB   ":"   
0475                COLON:       
0475                          ;*Macro unroll:  ENTER
0475   CF                     RST   $08   
0476   11 05                  DW   create   ; create the dictionary entry / header
0478   0C 09 63 0F            DW   here,AT   ; back up 3 bytes to start of data area
047C   5E 12 03 00 38 01      DW   LIT,3,SUBB   
0482   0C 09 42 0F            DW   here,STORE   
0486   5E 12 CF 00 24 10      DW   LIT,rst08_opcode,ccomma   ; write z80 jp opcode to word
048C   06 15 63 0F E5 05      DW   latest,AT,hidden   ; make the word hidden (see below for definition).
0492   0B 06                  DW   rbrac   ; go into compile mode.
0494                          ;*Macro unroll:  EXIT                                ; return from the function.
0494   30 0F                  DW   exit   ; return from the function.
0496   C3 1F 0F               JP   enter   
0499                          ;*Macro unroll: CODE ";",1,IMMED,semicolon
0499                HEADER_SEMICOLON:      
0499   71 04                  DW   link   
049B                LINK:     .SET   HEADER_semicolon   
049B   81                     DB   IMMED + 1   
049C   3B                     DB   ";"   
049D                SEMICOLON:      
049D                          ;*Macro unroll:  ENTER
049D   CF                     RST   $08   
049E   5E 12 30 0F 08 10      DW   LIT,exit,comma   ; append exit (so the word will return).
04A4   06 15 63 0F E5 05      DW   latest,AT,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
04AA   FE 05                  DW   lbrac   ; go back to immediate mode.
04AC                          ;*Macro unroll:  EXIT                                ; return from the function.
04AC   30 0F                  DW   exit   ; return from the function.
04AE   C3 1F 0F               JP   enter   
04B1                          ;*Macro unroll: CODE ":noname",7,0,colonNoName
04B1                HEADER_COLONNONAME:      
04B1   99 04                  DW   link   
04B3                LINK:     .SET   HEADER_colonNoName   
04B3   07                     DB   0 + 7   
04B4   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
04BB                COLONNONAME:      
04BB                          ;*Macro unroll:  ENTER
04BB   CF                     RST   $08   
04BC   0C 09 63 0F            DW   here,AT   ; TOS = here
04C0   5E 12 CF 00 24 10      DW   LIT,rst08_opcode,ccomma   ; write z80 jp opcode to word
04C6   0B 06                  DW   rbrac   ; go into compile mode.
04C8                          ;*Macro unroll:  EXIT                                ; return from the function.
04C8   30 0F                  DW   exit   ; return from the function.
04CA   C3 1F 0F               JP   enter   
04CD                          ;*Macro unroll: CODE "variable",8,0,variable         ; ( n -- ) get name from input
04CD                HEADER_VARIABLE:      ; ( n -- ) get name from input
04CD   B1 04                  DW   link   
04CF                LINK:     .SET   HEADER_variable   
04CF   08                     DB   0 + 8   
04D0   76 61 72 69 61 62 6C 65 DB   "variable"   
04D8                VARIABLE:      
04D8                          ;*Macro unroll:  ENTER
04D8   CF                     RST   $08   
04D9   5E 12 01 00 6A 03      DW   LIT,1,cells   
04DF   0C 09 63 0F F3 12      DW   here,AT,swap   ; n -- here n
04E5   E6 0F                  DW   allot   ; allocate n bytes, push addr
04E7   7C 05                  DW   constant   
04E9                          ;*Macro unroll:  EXIT
04E9   30 0F                  DW   exit   
04EB   C3 1F 0F               JP   enter   
04EE                          ;*Macro unroll: CODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
04EE                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
04EE   CD 04                  DW   link   
04F0                LINK:     .SET   HEADER_bufferColon   
04F0   07                     DB   0 + 7   
04F1   62 75 66 66 65 72 3A   DB   "buffer:"   
04F8                BUFFERCOLON:      
04F8                          ;*Macro unroll:  ENTER
04F8   CF                     RST   $08   
04F9   0C 09 63 0F F3 12      DW   here,AT,swap   ; n -- here n
04FF   E6 0F                  DW   allot   ; allocate n bytes, push addr
0501   7C 05                  DW   constant   
0503                          ;*Macro unroll:  EXIT
0503   30 0F                  DW   exit   
0505   C3 1F 0F               JP   enter   
0508                          ;*Macro unroll: CODE "create",6,0,create             ; --
0508                HEADER_CREATE:      ; --
0508   EE 04                  DW   link   
050A                LINK:     .SET   HEADER_create   
050A   06                     DB   0 + 6   
050B   63 72 65 61 74 65      DB   "create"   
0511                CREATE:      
0511                          ;*Macro unroll:  ENTER
0511   CF                     RST   $08   
0512   0C 09 63 0F            DW   here,AT   ; get old "here"
0516   06 15 63 0F 08 10      DW   latest,AT,comma   ; write link to previous word to "here"
051C   06 15 42 0F            DW   latest,STORE   ; update latest to old "here"
0520   9D 0E B3 0B            DW   bl,word   ; read word token
0524   90 0F 9A 03 E6 0F      DW   CAT,ONEP,allot   ; 
052A   5E 12 C3 00 24 10      DW   LIT,jp_opcode,cComma   ; compile default behavious
0530   5E 12 3B 05 08 10      DW   LIT,xcreate,comma   ; i.e. push addr of data area
0536                          ;*Macro unroll:  EXIT                                ; exit from forth
0536   30 0F                  DW   exit   ; exit from forth
0538   C3 1F 0F               JP   enter   
053B                XCREATE:      
053B                          ;*Macro unroll:  ENTER
053B   CF                     RST   $08   
053C   64 13                  DW   rfrom   ; push onto stack
053E                          ;*Macro unroll:  EXIT
053E   30 0F                  DW   exit   
0540   C3 1F 0F               JP   enter   
0543                          ;*Macro unroll: CODE "does>", 5, IMMED, does         ; --
0543                HEADER_DOES:      ; --
0543   08 05                  DW   link   
0545                LINK:     .SET   HEADER_does   
0545   85                     DB   IMMED + 5   
0546   64 6F 65 73 3E         DB   "does>"   
054B                DOES:        
054B                          ;*Macro unroll:  ENTER
054B   CF                     RST   $08   
054C   5E 12 24 06 08 10      DW   LIT,xdoes,comma   
0552   5E 12 14 06            DW   LIT,dodoes   
0556   0C 09 63 0F            DW   here,AT   
055A   5E 12 CD 00            DW   LIT,call_opcode   
055E   27 13 71 0F            DW   over,cstore   
0562   9A 03 42 0F            DW   ONEP,STORE   
0566   5E 12 03 00 E6 0F      DW   LIT,3,allot   
056C                          ;*Macro unroll:  EXIT
056C   30 0F                  DW   exit   
056E   C3 1F 0F               JP   enter   
0571                          ;*Macro unroll: CODE "constant",8,0,constant         ; --
0571                HEADER_CONSTANT:      ; --
0571   43 05                  DW   link   
0573                LINK:     .SET   HEADER_constant   
0573   08                     DB   0 + 8   
0574   63 6F 6E 73 74 61 6E 74 DB   "constant"   
057C                CONSTANT:      
057C                          ;*Macro unroll:  ENTER
057C   CF                     RST   $08   
057D   11 05 08 10 24 06      DW   create,comma,xdoes   
0583   CF                     RST   $08   
0584   64 13                  DW   rfrom   ; push onto stack
0586   63 0F                  DW   AT   
0588                          ;*Macro unroll:  EXIT
0588   30 0F                  DW   exit   
058A   C3 1F 0F               JP   enter   
058D                          ;*Macro unroll: CODE "'",1,0,tick                    ; quotes next word
058D                HEADER_TICK:      ; quotes next word
058D   71 05                  DW   link   
058F                LINK:     .SET   HEADER_tick   
058F   01                     DB   0 + 1   
0590   27                     DB   "'"   
0591                TICK:        
0591                          ;*Macro unroll:  ENTER
0591   CF                     RST   $08   
0592   9D 0E B3 0B CA 05 72 03 DW   bl,word,find,zEqual   
059A   64 13 AB 13 27 13 27 13 E8 00 4F 13 DW   rFrom,count,over,over,plus,toR   
05A6                          ;*Macro unroll:  EXIT
05A6   30 0F                  DW   exit   
05A8   C3 1F 0F               JP   enter   
05AB                          ;*Macro unroll: CODE "immediate",9,IMMED,IMMEDIATE
05AB                HEADER_IMMEDIATE:      
05AB   8D 05                  DW   link   
05AD                LINK:     .SET   HEADER_IMMEDIATE   
05AD   89                     DB   IMMED + 9   
05AE   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
05B7                IMMEDIATE:      
05B7   2A 5F 24               LD   HL,(VAR_LATEST)   ; get head of latest word
05BA   23                     INC   HL   ; point to flags byte
05BB   23                     INC   HL   
05BC   3E 80                  LD   a,IMMED   
05BE   AE                     XOR   (HL)   ; toggle the IMMED bit.
05BF   77                     LD   (HL),a   
05C0                          ;*Macro unroll:  NEXT
05C0   C3 1F 0F               JP   enter   
05C3                          ;*Macro unroll: CODE "find",4,0,FIND
05C3                HEADER_FIND:      
05C3   AB 05                  DW   link   
05C5                LINK:     .SET   HEADER_FIND   
05C5   04                     DB   0 + 4   
05C6   66 69 6E 64            DB   "find"   
05CA                FIND:        
05CA                          ;*Macro unroll:  ppop0 H,L
05CA   DD 2B                  DEC   IX   
05CC   DD 66 00               LD   H,(IX+0)   
05CF   DD 2B                  DEC   IX   
05D1   DD 6E 00               LD   L,(IX+0)   
05D4   CD 26 0C               CALL   lookup   ; params: HL = string address, BC = string length
05D7                             ; returns: DE = found header ptr or 0
05D7                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
05D7   4B                     LD   C,E   ; move to TOS
05D8   42                     LD   B,D   
05D9                          ;*Macro unroll:  NEXT
05D9   C3 1F 0F               JP   enter   
05DC                          ;*Macro unroll: CODE "hidden",6,0,HIDDEN
05DC                HEADER_HIDDEN:      
05DC   C3 05                  DW   link   
05DE                LINK:     .SET   HEADER_HIDDEN   
05DE   06                     DB   0 + 6   
05DF   68 69 64 64 65 6E      DB   "hidden"   
05E5                HIDDEN:      
05E5                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
05E5   60                     LD   H,B   ; HL = Dictionary entry.
05E6   69                     LD   L,C   
05E7                          ;*Macro unroll:  ppop0 B,C
05E7   DD 2B                  DEC   IX   
05E9   DD 46 00               LD   B,(IX+0)   
05EC   DD 2B                  DEC   IX   
05EE   DD 4E 00               LD   C,(IX+0)   
05F1   23                     INC   HL   
05F2   23                     INC   HL   ; Point to name/flags byte.
05F3   7E                     LD   A,(HL)   
05F4   EE 40                  XOR   HIDE   ; Toggle the HIDDEN bit.
05F6   77                     LD   (HL),A   
05F7                          ;*Macro unroll:  NEXT
05F7   C3 1F 0F               JP   enter   
05FA                          ;*Macro unroll: CODE "[",1,IMMED,LBRAC
05FA                HEADER_LBRAC:      
05FA   DC 05                  DW   link   
05FC                LINK:     .SET   HEADER_LBRAC   
05FC   81                     DB   IMMED + 1   
05FD   5B                     DB   "["   
05FE                LBRAC:       
05FE   21 00 00               LD   HL,0   
0601   22 55 24               LD   (VAR_STATE),HL   ; Set STATE to 0.
0604                          ;*Macro unroll:  NEXT
0604   C3 1F 0F               JP   enter   
0607                          ;*Macro unroll: CODE "]",1,0,RBRAC
0607                HEADER_RBRAC:      
0607   FA 05                  DW   link   
0609                LINK:     .SET   HEADER_RBRAC   
0609   01                     DB   0 + 1   
060A   5D                     DB   "]"   
060B                RBRAC:       
060B   21 01 00               LD   HL,1   
060E   22 55 24               LD   (VAR_STATE),HL   ; Set STATE to 1.
0611                          ;*Macro unroll:  NEXT
0611   C3 1F 0F               JP   enter   
0614                DODOES:      ; -- a-addr
0614                          ;*Macro unroll:  ppush0 B,C
0614   DD 71 00               LD   (IX+0),C   
0617   DD 23                  INC   IX   
0619   DD 70 00               LD   (IX+0),B   
061C   DD 23                  INC   IX   
061E   E1                     POP   HL   ; parameter field address
061F   C1                     POP   BC   
0620   E5                     PUSH   HL   
0621                          ;*Macro unroll:  NEXT
0621   C3 1F 0F               JP   enter   
0624                XDOES:       ; --
0624                          ;*Macro unroll:  ENTER
0624   CF                     RST   $08   
0625   64 13                  DW   rfrom   
0627   06 15 63 0F CA 0B      DW   latest,AT,tcfa   
062D   5E 12 CD 00            DW   LIT,call_opcode   
0631   27 13 71 0F            DW   over,cstore   
0635   9A 03 42 0F            DW   ONEP,STORE   
0639                          ;*Macro unroll:  EXIT
0639   30 0F                  DW   exit   
063B   C3 1F 0F               JP   enter   
063E                          ;*Macro unroll: CODE "postpone",8,IMMED,postpone ; --
063E                HEADER_POSTPONE:      ; --
063E   07 06                  DW   link   
0640                LINK:     .SET   HEADER_postpone   
0640   88                     DB   IMMED + 8   
0641   70 6F 73 74 70 6F 6E 65 DB   "postpone"   
0649                POSTPONE:      
0649   CF                     RST   $08   
064A   9D 0E B3 0B AB 13      DW   bl,word,count   ; pstr -- ptr len
0650   DF 12 72 03            DW   DUPP,zEqual   
0654                          ;*Macro unroll:  cIf
0654   EF 07 00 00            DW   QBRAN,0   
0658                          ;*Macro unroll:  CPL_PUSH $
0658                CPL_COUNT:   .SET   CPL_COUNT + 1   
0658                CPL_10:   .SET   CPL_9   
0658                CPL_9:    .SET   CPL_8   
0658                CPL_8:    .SET   CPL_7   
0658                CPL_7:    .SET   CPL_6   
0658                CPL_6:    .SET   CPL_5   
0658                CPL_5:    .SET   CPL_4   
0658                CPL_4:    .SET   CPL_3   
0658                CPL_3:    .SET   CPL_2   
0658                CPL_2:    .SET   CPL_TOP   
0658                CPL_TOP:   .SET   $   
0658   13 13 13 13            DW   drop,drop   ; ptr len --
065C                          ;*Macro unroll:  cElse
065C   0C 08 00 00            DW   BRAN,0   
0660                          ;*Macro unroll:  cBRANCH_FWD
0660                CUR_ADR:   .SET   $   
0656                          .ORG   CPL_TOP - 2   
0656   60 06                  DW   CUR_ADR   
0660                          .ORG   CUR_ADR   
0660                CPL_TOP:   .SET   $   
0660   67 06                  DW   postponeToken   ; interpret the next word
0662                          ;*Macro unroll:  cEndif
0662                          ;*Macro unroll:  cBRANCH_FWD
0662                CUR_ADR:   .SET   $   
065E                          .ORG   CPL_TOP - 2   
065E   62 06                  DW   CUR_ADR   
0662                          .ORG   CUR_ADR   
0662                          ;*Macro unroll:  CPL_POP
0662                CPL_COUNT:   .SET   CPL_COUNT - 1   
0662                CPL_TOP:   .SET   CPL_2   
0662                CPL_2:    .SET   CPL_3   
0662                CPL_3:    .SET   CPL_4   
0662                CPL_4:    .SET   CPL_5   
0662                CPL_5:    .SET   CPL_6   
0662                CPL_6:    .SET   CPL_7   
0662                CPL_7:    .SET   CPL_8   
0662                CPL_8:    .SET   CPL_9   
0662                CPL_9:    .SET   CPL_10   
0662                CPL_10:   .SET   0   
0662                          ;*Macro unroll:  EXIT
0662   30 0F                  DW   exit   
0664   C3 1F 0F               JP   enter   
0667                POSTPONETOKEN:      ; --
0667   CF                     RST   $08   
0668   27 13 27 13 CA 05      DW   over,over,find   ; ptr len -- ptr len addr
066E   DF 12 87 03            DW   DUPP,ZNEQU   
0672                          ;*Macro unroll:  cIf
0672   EF 07 00 00            DW   QBRAN,0   
0676                          ;*Macro unroll:  CPL_PUSH $
0676                CPL_COUNT:   .SET   CPL_COUNT + 1   
0676                CPL_10:   .SET   CPL_9   
0676                CPL_9:    .SET   CPL_8   
0676                CPL_8:    .SET   CPL_7   
0676                CPL_7:    .SET   CPL_6   
0676                CPL_6:    .SET   CPL_5   
0676                CPL_5:    .SET   CPL_4   
0676                CPL_4:    .SET   CPL_3   
0676                CPL_3:    .SET   CPL_2   
0676                CPL_2:    .SET   CPL_TOP   
0676                CPL_TOP:   .SET   $   
0676   83 06                  DW   postponeWord   
0678                          ;*Macro unroll:  cElse
0678   0C 08 00 00            DW   BRAN,0   
067C                          ;*Macro unroll:  cBRANCH_FWD
067C                CUR_ADR:   .SET   $   
0674                          .ORG   CPL_TOP - 2   
0674   7C 06                  DW   CUR_ADR   
067C                          .ORG   CUR_ADR   
067C                CPL_TOP:   .SET   $   
067C   BF 06                  DW   postponeLiteral   
067E                          ;*Macro unroll:  cEndif
067E                          ;*Macro unroll:  cBRANCH_FWD
067E                CUR_ADR:   .SET   $   
067A                          .ORG   CPL_TOP - 2   
067A   7E 06                  DW   CUR_ADR   
067E                          .ORG   CUR_ADR   
067E                          ;*Macro unroll:  CPL_POP
067E                CPL_COUNT:   .SET   CPL_COUNT - 1   
067E                CPL_TOP:   .SET   CPL_2   
067E                CPL_2:    .SET   CPL_3   
067E                CPL_3:    .SET   CPL_4   
067E                CPL_4:    .SET   CPL_5   
067E                CPL_5:    .SET   CPL_6   
067E                CPL_6:    .SET   CPL_7   
067E                CPL_7:    .SET   CPL_8   
067E                CPL_8:    .SET   CPL_9   
067E                CPL_9:    .SET   CPL_10   
067E                CPL_10:   .SET   0   
067E                          ;*Macro unroll:  EXIT
067E   30 0F                  DW   exit   
0680   C3 1F 0F               JP   enter   
0683                POSTPONEWORD:      ; ( headptr -- )
0683   CF                     RST   $08   ; enter forth
0684   F3 12 13 13 F3 12 13 13 DW   swap,drop,swap,drop   ; ptr len addr -- addr
068C   DF 12 5E 12 02 00 E8 00 90 0F DW   DUPP,LIT,2,plus,CAT   ; ( headptr -- headptr flags ) add 2 to headptr
0696   5E 12 80 00 A0 00      DW   LIT,IMMED,ANDD   ; ( headptr flags -- headptr immedflag )
069C   72 03                  DW   zEqual   
069E                          ;*Macro unroll:  cIf
069E   EF 07 00 00            DW   QBRAN,0   
06A2                          ;*Macro unroll:  CPL_PUSH $
06A2                CPL_COUNT:   .SET   CPL_COUNT + 1   
06A2                CPL_10:   .SET   CPL_9   
06A2                CPL_9:    .SET   CPL_8   
06A2                CPL_8:    .SET   CPL_7   
06A2                CPL_7:    .SET   CPL_6   
06A2                CPL_6:    .SET   CPL_5   
06A2                CPL_5:    .SET   CPL_4   
06A2                CPL_4:    .SET   CPL_3   
06A2                CPL_3:    .SET   CPL_2   
06A2                CPL_2:    .SET   CPL_TOP   
06A2                CPL_TOP:   .SET   $   
06A2   5E 12 5E 12 08 10      DW   LIT,LIT,comma   
06A8   CA 0B 08 10            DW   tcfa,comma   
06AC   5E 12 08 10 08 10      DW   LIT,comma,comma   
06B2                          ;*Macro unroll:  cElse
06B2   0C 08 00 00            DW   BRAN,0   
06B6                          ;*Macro unroll:  cBRANCH_FWD
06B6                CUR_ADR:   .SET   $   
06A0                          .ORG   CPL_TOP - 2   
06A0   B6 06                  DW   CUR_ADR   
06B6                          .ORG   CUR_ADR   
06B6                CPL_TOP:   .SET   $   
06B6   CA 0B 08 10            DW   tcfa,comma   
06BA                          ;*Macro unroll:  cEndIf
06BA                          ;*Macro unroll:  cBRANCH_FWD
06BA                CUR_ADR:   .SET   $   
06B4                          .ORG   CPL_TOP - 2   
06B4   BA 06                  DW   CUR_ADR   
06BA                          .ORG   CUR_ADR   
06BA                          ;*Macro unroll:  CPL_POP
06BA                CPL_COUNT:   .SET   CPL_COUNT - 1   
06BA                CPL_TOP:   .SET   CPL_2   
06BA                CPL_2:    .SET   CPL_3   
06BA                CPL_3:    .SET   CPL_4   
06BA                CPL_4:    .SET   CPL_5   
06BA                CPL_5:    .SET   CPL_6   
06BA                CPL_6:    .SET   CPL_7   
06BA                CPL_7:    .SET   CPL_8   
06BA                CPL_8:    .SET   CPL_9   
06BA                CPL_9:    .SET   CPL_10   
06BA                CPL_10:   .SET   0   
06BA                          ;*Macro unroll:  EXIT
06BA   30 0F                  DW   exit   
06BC   C3 1F 0F               JP   enter   
06BF                POSTPONELITERAL:      ; ( ptr len -- )
06BF   CF                     RST   $08   ; enter forth
06C0   13 13                  DW   drop   ; ptr len addr - ptr len
06C2   51 0B 72 03            DW   number,zEqual   ; parse to number
06C6                          ;*Macro unroll:  cif
06C6   EF 07 00 00            DW   QBRAN,0   
06CA                          ;*Macro unroll:  CPL_PUSH $
06CA                CPL_COUNT:   .SET   CPL_COUNT + 1   
06CA                CPL_10:   .SET   CPL_9   
06CA                CPL_9:    .SET   CPL_8   
06CA                CPL_8:    .SET   CPL_7   
06CA                CPL_7:    .SET   CPL_6   
06CA                CPL_6:    .SET   CPL_5   
06CA                CPL_5:    .SET   CPL_4   
06CA                CPL_4:    .SET   CPL_3   
06CA                CPL_3:    .SET   CPL_2   
06CA                CPL_2:    .SET   CPL_TOP   
06CA                CPL_TOP:   .SET   $   
06CA   5E 12 5E 12            DW   LIT,LIT   ; (val -- val "LIT" )
06CE   08 10 08 10            DW   comma,comma   ; compile "LIT" val
06D2                          ;*Macro unroll:  cElse
06D2   0C 08 00 00            DW   BRAN,0   
06D6                          ;*Macro unroll:  cBRANCH_FWD
06D6                CUR_ADR:   .SET   $   
06C8                          .ORG   CPL_TOP - 2   
06C8   D6 06                  DW   CUR_ADR   
06D6                          .ORG   CUR_ADR   
06D6                CPL_TOP:   .SET   $   
06D6   13 13                  DW   drop   ; ( ptr len zero -- ptr len ), not found
06D8   91 13                  DW   litstr   ; err != 0, parse error
06DA   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
06E9   04 0E                  DW   type   
06EB                          ;*Macro unroll:  cEndIf
06EB                          ;*Macro unroll:  cBRANCH_FWD
06EB                CUR_ADR:   .SET   $   
06D4                          .ORG   CPL_TOP - 2   
06D4   EB 06                  DW   CUR_ADR   
06EB                          .ORG   CUR_ADR   
06EB                          ;*Macro unroll:  CPL_POP
06EB                CPL_COUNT:   .SET   CPL_COUNT - 1   
06EB                CPL_TOP:   .SET   CPL_2   
06EB                CPL_2:    .SET   CPL_3   
06EB                CPL_3:    .SET   CPL_4   
06EB                CPL_4:    .SET   CPL_5   
06EB                CPL_5:    .SET   CPL_6   
06EB                CPL_6:    .SET   CPL_7   
06EB                CPL_7:    .SET   CPL_8   
06EB                CPL_8:    .SET   CPL_9   
06EB                CPL_9:    .SET   CPL_10   
06EB                CPL_10:   .SET   0   
06EB                          ;*Macro unroll:  EXIT
06EB   30 0F                  DW   exit   
06ED   C3 1F 0F               JP   enter   
06F0                          ;*Macro unroll: CODE "if",2,IMMED,if
06F0                HEADER_IF:      
06F0   3E 06                  DW   link   
06F2                LINK:     .SET   HEADER_if   
06F2   82                     DB   IMMED + 2   
06F3   69 66                  DB   "if"   
06F5                IF:          
06F5                          ;*Macro unroll:  ENTER
06F5   CF                     RST   $08   
06F6   B7 09                  DW   lbrace   
06F8   5E 12 BE 07 08 10      DW   LIT,XQBRAN,comma   ; compile ?branch
06FE   0C 09 63 0F DF 12 08 10 DW   here,AT,DUPP,comma   ; compile here and also push on stack
0706                          ;*Macro unroll:  EXIT
0706   30 0F                  DW   exit   
0708   C3 1F 0F               JP   enter   
070B                          ;*Macro unroll: CODE "else",4,IMMED,else
070B                HEADER_ELSE:      
070B   F0 06                  DW   link   
070D                LINK:     .SET   HEADER_else   
070D   84                     DB   IMMED + 4   
070E   65 6C 73 65            DB   "else"   
0712                ELSE:        
0712                          ;*Macro unroll:  ENTER
0712   CF                     RST   $08   
0713   5E 12 DC 07 08 10      DW   LIT,XBRAN,comma   ; definite branch to just over the false-part
0719   0C 09 63 0F            DW   here,AT   ; save here on stack
071D   5E 12 00 00 08 10      DW   LIT,0,comma   ; compile a dummy offset
0723   F3 12                  DW   swap   ; now back-fill the original (if) offset
0725   3E 07                  DW   xendif   ; must call xendif not endif
0727                          ;*Macro unroll:  EXIT
0727   30 0F                  DW   exit   
0729   C3 1F 0F               JP   enter   
072C                          ;*Macro unroll: CODE "endif",5,IMMED,endif
072C                HEADER_ENDIF:      
072C   0B 07                  DW   link   
072E                LINK:     .SET   HEADER_endif   
072E   85                     DB   IMMED + 5   
072F   65 6E 64 69 66         DB   "endif"   
0734                ENDIF:       
0734                          ;*Macro unroll:  ENTER
0734   CF                     RST   $08   
0735   3E 07                  DW   xendif   ; must call xendif not endif
0737   07 0A                  DW   rbraceExec   
0739                          ;*Macro unroll:  EXIT
0739   30 0F                  DW   exit   
073B   C3 1F 0F               JP   enter   
073E                XENDIF:      ; must call xendif not endif
073E                          ;*Macro unroll:  ENTER
073E   CF                     RST   $08   
073F   DF 12                  DW   DUPP   
0741   0C 09 63 0F F3 12 38 01 DW   here,AT,swap,SUBB   ; calculate the offset from the address saved on the stack
0749   F3 12 42 0F            DW   swap,STORE   ; STORE the offset in the back-filled location
074D                          ;*Macro unroll:  EXIT
074D   30 0F                  DW   exit   
074F   C3 1F 0F               JP   enter   
0752                             ; begin condition while ... repeat
0752                          ;*Macro unroll: CODE "begin",5,IMMED,begin
0752                HEADER_BEGIN:      
0752   2C 07                  DW   link   
0754                LINK:     .SET   HEADER_begin   
0754   85                     DB   IMMED + 5   
0755   62 65 67 69 6E         DB   "begin"   
075A                BEGIN:       
075A                          ;*Macro unroll:  ENTER
075A   CF                     RST   $08   
075B   B7 09                  DW   lbrace   
075D   0C 09 63 0F            DW   here,AT   ; save here on stack (here1)
0761                          ;*Macro unroll:  EXIT
0761   30 0F                  DW   exit   
0763   C3 1F 0F               JP   enter   
0766                          ;*Macro unroll: CODE "while",5,IMMED,while
0766                HEADER_WHILE:      
0766   52 07                  DW   link   
0768                LINK:     .SET   HEADER_while   
0768   85                     DB   IMMED + 5   
0769   77 68 69 6C 65         DB   "while"   
076E                WHILE:       
076E                          ;*Macro unroll:  ENTER
076E   CF                     RST   $08   
076F   5E 12 BE 07 08 10      DW   LIT,XQBRAN,comma   ; compile branch on zero
0775   0C 09 63 0F            DW   here,AT   ; save here in stack (here2)
0779   5E 12 00 00 08 10      DW   LIT,0,comma   ; compile dummy offset
077F                          ;*Macro unroll:  EXIT
077F   30 0F                  DW   exit   
0781   C3 1F 0F               JP   enter   
0784                          ;*Macro unroll: CODE "repeat",6,IMMED,repeat
0784                HEADER_REPEAT:      
0784   66 07                  DW   link   
0786                LINK:     .SET   HEADER_repeat   
0786   86                     DB   IMMED + 6   
0787   72 65 70 65 61 74      DB   "repeat"   
078D                REPEAT:      
078D                          ;*Macro unroll:  ENTER
078D   CF                     RST   $08   
078E   5E 12 DC 07 08 10      DW   LIT,XBRAN,comma   ; compile branch
0794   F3 12                  DW   swap   ; tos = here1
0796   0C 09 63 0F 38 01 08 10 DW   here,AT,SUBB,comma   ; compile offset (here1 - here3)
079E   DF 12                  DW   DUPP   
07A0   0C 09 63 0F F3 12 38 01 DW   here,AT,swap,SUBB   ; compile offset (here2 - here3)
07A8   F3 12 42 0F            DW   swap,STORE   ; save offset in here2
07AC   07 0A                  DW   rbraceExec   
07AE                          ;*Macro unroll:  EXIT
07AE   30 0F                  DW   exit   
07B0   C3 1F 0F               JP   enter   
07B3                             ; ?branch   x --              branch if TOS zero
07B3                          ;*Macro unroll: CODE "x?branch",7,0,XQBRAN
07B3                HEADER_XQBRAN:      
07B3   84 07                  DW   link   
07B5                LINK:     .SET   HEADER_XQBRAN   
07B5   07                     DB   0 + 7   
07B6   78 3F 62 72 61 6E 63 68 DB   "x?branch"   
07BE                XQBRAN:      
07BE                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
07BE   79                     LD   A,C   ; test old TOS
07BF   B0                     OR   B   
07C0                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
07C0   DD 2B                  DEC   IX   ; POP new TOS
07C2   DD 46 00               LD   B,(IX+0)   
07C5   DD 2B                  DEC   IX   
07C7   DD 4E 00               LD   C,(IX+0)   
07CA   28 10                  JR   z,XBRAN   ; if old TOS=0, branch
07CC   E1                     POP   HL   
07CD   23                     INC   HL   ; else skip inline value
07CE   23                     INC   HL   
07CF                          ;*Macro unroll:  NEXT1
07CF   C3 20 0F               JP   enter1   
07D2                          ;*Macro unroll: CODE "xbranch",6,0,XBRAN         ; relative branching
07D2                HEADER_XBRAN:      ; relative branching
07D2   B3 07                  DW   link   
07D4                LINK:     .SET   HEADER_XBRAN   
07D4   06                     DB   0 + 6   
07D5   78 62 72 61 6E 63 68   DB   "xbranch"   
07DC                XBRAN:       
07DC   E1                     POP   HL   ; add the offset to the instruction pointer
07DD   5E                     LD   E,(HL)   
07DE   23                     INC   HL   
07DF   56                     LD   D,(HL)   
07E0   2B                     DEC   HL   
07E1   19                     ADD   HL,DE   
07E2                          ;*Macro unroll:  NEXT1
07E2   C3 20 0F               JP   enter1   
07E5                             ; ?branch   x --              branch if TOS zero
07E5                          ;*Macro unroll: CODE "?branch",7,0,QBRAN
07E5                HEADER_QBRAN:      
07E5   D2 07                  DW   link   
07E7                LINK:     .SET   HEADER_QBRAN   
07E7   07                     DB   0 + 7   
07E8   3F 62 72 61 6E 63 68   DB   "?branch"   
07EF                QBRAN:       
07EF                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
07EF   79                     LD   A,C   ; test old TOS
07F0   B0                     OR   B   
07F1                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
07F1   DD 2B                  DEC   IX   ; POP new TOS
07F3   DD 46 00               LD   B,(IX+0)   
07F6   DD 2B                  DEC   IX   
07F8   DD 4E 00               LD   C,(IX+0)   
07FB   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
07FD   E1                     POP   HL   
07FE   23                     INC   HL   ; else skip inline value
07FF   23                     INC   HL   
0800                          ;*Macro unroll:  NEXT1
0800   C3 20 0F               JP   enter1   
0803                          ;*Macro unroll: CODE "branch",6,0,BRAN         ; relative branching
0803                HEADER_BRAN:      ; relative branching
0803   E5 07                  DW   link   
0805                LINK:     .SET   HEADER_BRAN   
0805   06                     DB   0 + 6   
0806   62 72 61 6E 63 68      DB   "branch"   
080C                BRAN:        
080C   E1                     POP   HL   ; add the offset to the instruction pointer
080D   5E                     LD   E,(HL)   
080E   23                     INC   HL   
080F   56                     LD   D,(HL)   
0810   EB                     EX   DE,HL   
0811                          ;*Macro unroll:  NEXT1
0811   C3 20 0F               JP   enter1   
0814                             ;   next        ( -- )
0814                             ;               Run time code for the single index loop.
0814                             ;               : next ( -- ) \ hilevel model
0814                             ;                 r> r> dup if 1 - >r @ >r exit then drop cell+ >r ;
0814                          ;*Macro unroll: CODE   'next',4,0,DONXT
0814                HEADER_DONXT:      
0814   03 08                  DW   link   
0816                LINK:     .SET   HEADER_DONXT   
0816   04                     DB   0 + 4   
0817   6E 65 78 74            DB   "next"   
081B                DONXT:       
081B   DD E5                  PUSH   IX   
081D   E1                     POP   HL   ; load rp into HL
081E   7E                     LD   A,(HL)   ; a = low byte of r@
081F   B7                     OR   A   
0820   20 10                  JR   NZ,DECLOW   ; low > 0 goto dec low
0822   23                     INC   HL   
0823   7E                     LD   A,(HL)   ; a = high byte of r@
0824   B7                     OR   A   
0825   20 09                  JR   NZ,DECHILO   ; high > 0 goto dec hi dec lo
0827   23                     INC   HL   
0828   E5                     PUSH   HL   
0829   DD E1                  POP   IX   ; pop r@
082B   13                     INC   DE   ; IP = skip following word
082C   13                     INC   DE   
082D                          ;*Macro unroll:  NEXT                               ; continue
082D   C3 1F 0F               JP   enter   ; continue
0830                DECHILO:      
0830   35                     DEC   (HL)   ; dec high byte of r@
0831   2B                     DEC   HL   
0832                DECLOW:      
0832   35                     DEC   (HL)   ; dec low byte of r@
0833   6B                     LD   L,E   ; DE points to location of loop address
0834   62                     LD   H,D   
0835   5E                     LD   E,(HL)   ; DE points to loop address
0836   23                     INC   HL   
0837   56                     LD   D,(HL)   
0838                          ;*Macro unroll:  NEXT                               ; continue to loop address
0838   C3 1F 0F               JP   enter   ; continue to loop address
083B                          ;*Macro unroll: mCONST "version",7,0,version,1
083B                          ;*Macro unroll: CODE "version",7,0,version
083B                HEADER_VERSION:      
083B   14 08                  DW   link   
083D                LINK:     .SET   HEADER_version   
083D   07                     DB   0 + 7   
083E   76 65 72 73 69 6F 6E   DB   "version"   
0845                VERSION:      
0845                          ;*Macro unroll:  ppush0 B,C
0845   DD 71 00               LD   (IX+0),C   
0848   DD 23                  INC   IX   
084A   DD 70 00               LD   (IX+0),B   
084D   DD 23                  INC   IX   
084F   01 01 00               LD   BC,1   
0852                          ;*Macro unroll:  NEXT
0852   C3 1F 0F               JP   enter   
0855                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
0855                          ;*Macro unroll: CODE "r0",2,0,rz
0855                HEADER_RZ:      
0855   3B 08                  DW   link   
0857                LINK:     .SET   HEADER_rz   
0857   02                     DB   0 + 2   
0858   72 30                  DB   "r0"   
085A                RZ:          
085A                          ;*Macro unroll:  ppush0 B,C
085A   DD 71 00               LD   (IX+0),C   
085D   DD 23                  INC   IX   
085F   DD 70 00               LD   (IX+0),B   
0862   DD 23                  INC   IX   
0864   01 00 21               LD   BC,ret_stack   
0867                          ;*Macro unroll:  NEXT
0867   C3 1F 0F               JP   enter   
086A                          ;*Macro unroll: mCONST "IMMED",9,0,__msk_immed,IMMED
086A                          ;*Macro unroll: CODE "IMMED",9,0,__msk_immed
086A                HEADER___MSK_IMMED:      
086A   55 08                  DW   link   
086C                LINK:     .SET   HEADER___msk_immed   
086C   09                     DB   0 + 9   
086D   6D 73 6B 5F 69 6D 6D 65 64 DB   "IMMED"   
0876                __MSK_IMMED:      
0876                          ;*Macro unroll:  ppush0 B,C
0876   DD 71 00               LD   (IX+0),C   
0879   DD 23                  INC   IX   
087B   DD 70 00               LD   (IX+0),B   
087E   DD 23                  INC   IX   
0880   01 80 00               LD   BC,IMMED   
0883                          ;*Macro unroll:  NEXT
0883   C3 1F 0F               JP   enter   
0886                          ;*Macro unroll: mCONST "HIDE",10,0,__msk_hidden,HIDE
0886                          ;*Macro unroll: CODE "HIDE",10,0,__msk_hidden
0886                HEADER___MSK_HIDDEN:      
0886   6A 08                  DW   link   
0888                LINK:     .SET   HEADER___msk_hidden   
0888   0A                     DB   0 + 10   
0889   6D 73 6B 5F 68 69 64 64 65 6E DB   "HIDE"   
0893                __MSK_HIDDEN:      
0893                          ;*Macro unroll:  ppush0 B,C
0893   DD 71 00               LD   (IX+0),C   
0896   DD 23                  INC   IX   
0898   DD 70 00               LD   (IX+0),B   
089B   DD 23                  INC   IX   
089D   01 40 00               LD   BC,HIDE   
08A0                          ;*Macro unroll:  NEXT
08A0   C3 1F 0F               JP   enter   
08A3                          ;*Macro unroll: mCONST "LENMASK",10,0,__msk_length,LENMASK
08A3                          ;*Macro unroll: CODE "LENMASK",10,0,__msk_length
08A3                HEADER___MSK_LENGTH:      
08A3   86 08                  DW   link   
08A5                LINK:     .SET   HEADER___msk_length   
08A5   0A                     DB   0 + 10   
08A6   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "LENMASK"   
08B0                __MSK_LENGTH:      
08B0                          ;*Macro unroll:  ppush0 B,C
08B0   DD 71 00               LD   (IX+0),C   
08B3   DD 23                  INC   IX   
08B5   DD 70 00               LD   (IX+0),B   
08B8   DD 23                  INC   IX   
08BA   01 3F 00               LD   BC,LENMASK   
08BD                          ;*Macro unroll:  NEXT
08BD   C3 1F 0F               JP   enter   
08C0                          ;*Macro unroll: mCONST "TRUE",4,0,TRUE,-1
08C0                          ;*Macro unroll: CODE "TRUE",4,0,TRUE
08C0                HEADER_TRUE:      
08C0   A3 08                  DW   link   
08C2                LINK:     .SET   HEADER_TRUE   
08C2   04                     DB   0 + 4   
08C3   54 52 55 45            DB   "TRUE"   
08C7                TRUE:        
08C7                          ;*Macro unroll:  ppush0 B,C
08C7   DD 71 00               LD   (IX+0),C   
08CA   DD 23                  INC   IX   
08CC   DD 70 00               LD   (IX+0),B   
08CF   DD 23                  INC   IX   
08D1   01 FF FF               LD   BC,-1   
08D4                          ;*Macro unroll:  NEXT
08D4   C3 1F 0F               JP   enter   
08D7                          ;*Macro unroll: mCONST "FALSE",5,0,FALSE,0
08D7                          ;*Macro unroll: CODE "FALSE",5,0,FALSE
08D7                HEADER_FALSE:      
08D7   C0 08                  DW   link   
08D9                LINK:     .SET   HEADER_FALSE   
08D9   05                     DB   0 + 5   
08DA   46 41 4C 53 45         DB   "FALSE"   
08DF                FALSE:       
08DF                          ;*Macro unroll:  ppush0 B,C
08DF   DD 71 00               LD   (IX+0),C   
08E2   DD 23                  INC   IX   
08E4   DD 70 00               LD   (IX+0),B   
08E7   DD 23                  INC   IX   
08E9   01 00 00               LD   BC,0   
08EC                          ;*Macro unroll:  NEXT
08EC   C3 1F 0F               JP   enter   
08EF                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
08EF                          ;*Macro unroll: CODE "pad",3,0,pad
08EF                HEADER_PAD:      
08EF   D7 08                  DW   link   
08F1                LINK:     .SET   HEADER_pad   
08F1   03                     DB   0 + 3   
08F2   70 61 64               DB   "pad"   
08F5                PAD:         
08F5                          ;*Macro unroll:  ppush0 B,C
08F5   DD 71 00               LD   (IX+0),C   
08F8   DD 23                  INC   IX   
08FA   DD 70 00               LD   (IX+0),B   
08FD   DD 23                  INC   IX   
08FF   01 4D 23               LD   BC,var_pad   
0902                          ;*Macro unroll:  NEXT
0902   C3 1F 0F               JP   enter   
0905                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
0905                          ;*Macro unroll: CODE "here",4,0,here
0905                HEADER_HERE:      
0905   EF 08                  DW   link   
0907                LINK:     .SET   HEADER_here   
0907   04                     DB   0 + 4   
0908   68 65 72 65            DB   "here"   
090C                HERE:        
090C                          ;*Macro unroll:  ppush0 B,C
090C   DD 71 00               LD   (IX+0),C   
090F   DD 23                  INC   IX   
0911   DD 70 00               LD   (IX+0),B   
0914   DD 23                  INC   IX   
0916   01 51 24               LD   BC,var_here   
0919                          ;*Macro unroll:  NEXT
0919   C3 1F 0F               JP   enter   
091C                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
091C                          ;*Macro unroll: CODE "intp_stop",9,0,intp_stop
091C                HEADER_INTP_STOP:      
091C   05 09                  DW   link   
091E                LINK:     .SET   HEADER_intp_stop   
091E   09                     DB   0 + 9   
091F   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
0928                INTP_STOP:      
0928                          ;*Macro unroll:  ppush0 B,C
0928   DD 71 00               LD   (IX+0),C   
092B   DD 23                  INC   IX   
092D   DD 70 00               LD   (IX+0),B   
0930   DD 23                  INC   IX   
0932   01 53 24               LD   BC,var_intp_stop   
0935                          ;*Macro unroll:  NEXT
0935   C3 1F 0F               JP   enter   
0938                          ;*Macro unroll: mVAR "state",5,0,state, var_state
0938                          ;*Macro unroll: CODE "state",5,0,state
0938                HEADER_STATE:      
0938   1C 09                  DW   link   
093A                LINK:     .SET   HEADER_state   
093A   05                     DB   0 + 5   
093B   73 74 61 74 65         DB   "state"   
0940                STATE:       
0940                          ;*Macro unroll:  ppush0 B,C
0940   DD 71 00               LD   (IX+0),C   
0943   DD 23                  INC   IX   
0945   DD 70 00               LD   (IX+0),B   
0948   DD 23                  INC   IX   
094A   01 55 24               LD   BC,var_state   
094D                          ;*Macro unroll:  NEXT
094D   C3 1F 0F               JP   enter   
0950                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
0950                          ;*Macro unroll: CODE "nesting",7,0,nesting
0950                HEADER_NESTING:      
0950   38 09                  DW   link   
0952                LINK:     .SET   HEADER_nesting   
0952   07                     DB   0 + 7   
0953   6E 65 73 74 69 6E 67   DB   "nesting"   
095A                NESTING:      
095A                          ;*Macro unroll:  ppush0 B,C
095A   DD 71 00               LD   (IX+0),C   
095D   DD 23                  INC   IX   
095F   DD 70 00               LD   (IX+0),B   
0962   DD 23                  INC   IX   
0964   01 57 24               LD   BC,var_nesting   
0967                          ;*Macro unroll:  NEXT
0967   C3 1F 0F               JP   enter   
096A                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
096A                          ;*Macro unroll: CODE "sp0",3,0,sp0
096A                HEADER_SP0:      
096A   50 09                  DW   link   
096C                LINK:     .SET   HEADER_sp0   
096C   03                     DB   0 + 3   
096D   73 70 30               DB   "sp0"   
0970                SP0:         
0970                          ;*Macro unroll:  ppush0 B,C
0970   DD 71 00               LD   (IX+0),C   
0973   DD 23                  INC   IX   
0975   DD 70 00               LD   (IX+0),B   
0978   DD 23                  INC   IX   
097A   01 59 24               LD   BC,var_sp0   
097D                          ;*Macro unroll:  NEXT
097D   C3 1F 0F               JP   enter   
0980                          ;*Macro unroll: mVAR "base",4,0,base, var_base
0980                          ;*Macro unroll: CODE "base",4,0,base
0980                HEADER_BASE:      
0980   6A 09                  DW   link   
0982                LINK:     .SET   HEADER_base   
0982   04                     DB   0 + 4   
0983   62 61 73 65            DB   "base"   
0987                BASE:        
0987                          ;*Macro unroll:  ppush0 B,C
0987   DD 71 00               LD   (IX+0),C   
098A   DD 23                  INC   IX   
098C   DD 70 00               LD   (IX+0),B   
098F   DD 23                  INC   IX   
0991   01 5B 24               LD   BC,var_base   
0994                          ;*Macro unroll:  NEXT
0994   C3 1F 0F               JP   enter   
0997                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
0997                          ;*Macro unroll: CODE "latestStr",6,0,latestStr
0997                HEADER_LATESTSTR:      
0997   80 09                  DW   link   
0999                LINK:     .SET   HEADER_latestStr   
0999   06                     DB   0 + 6   
099A   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
09A3                LATESTSTR:      
09A3                          ;*Macro unroll:  ppush0 B,C
09A3   DD 71 00               LD   (IX+0),C   
09A6   DD 23                  INC   IX   
09A8   DD 70 00               LD   (IX+0),B   
09AB   DD 23                  INC   IX   
09AD   01 5D 24               LD   BC,var_latest_str   
09B0                          ;*Macro unroll:  NEXT
09B0   C3 1F 0F               JP   enter   
09B3                          ;*Macro unroll: CODE "{",1,IMMED,LBRACE
09B3                HEADER_LBRACE:      
09B3   97 09                  DW   link   
09B5                LINK:     .SET   HEADER_LBRACE   
09B5   81                     DB   IMMED + 1   
09B6   7B                     DB   "{"   
09B7                LBRACE:      
09B7                          ;*Macro unroll:  ENTER
09B7   CF                     RST   $08   
09B8   40 09 63 0F 72 03      DW   state,AT,ZEQUAL   
09BE   5A 09 63 0F 72 03      DW   nesting,AT,ZEQUAL   
09C4   A0 00                  DW   ANDD   
09C6   EF 07 D4 09            DW   QBRAN,LBRACE1   
09CA   0C 09 63 0F            DW   here,AT   ; TOS = here
09CE   5E 12 CF 00 24 10      DW   LIT,rst08_opcode,ccomma   ; write z80 jp opcode to word
09D4                LBRACE1:      
09D4   E9 0D                  DW   nestPlus   ; increase nesting
09D6                          ;*Macro unroll:  EXIT                             ; return from the function.
09D6   30 0F                  DW   exit   ; return from the function.
09D8   C3 1F 0F               JP   enter   
09DB                          ;*Macro unroll: CODE "}",1,IMMED,RBRACE
09DB                HEADER_RBRACE:      
09DB   B3 09                  DW   link   
09DD                LINK:     .SET   HEADER_RBRACE   
09DD   81                     DB   IMMED + 1   
09DE   7D                     DB   "}"   
09DF                RBRACE:      
09DF                          ;*Macro unroll:  ENTER
09DF   CF                     RST   $08   
09E0   F3 0D                  DW   nestMinus   ; reduce nesting
09E2   40 09 63 0F 72 03      DW   state,AT,ZEQUAL   
09E8   5A 09 63 0F 72 03      DW   nesting,AT,ZEQUAL   
09EE   A0 00                  DW   ANDD   
09F0   EF 07 FA 09            DW   QBRAN,RBRACE1   
09F4   5E 12 30 0F 08 10      DW   LIT,exit,comma   ; append exit (so the word will return).
09FA                RBRACE1:      
09FA                          ;*Macro unroll:  EXIT                             ; return from the function.
09FA   30 0F                  DW   exit   ; return from the function.
09FC   C3 1F 0F               JP   enter   
09FF                          ;*Macro unroll: CODE "}exec",5,IMMED,rbraceExec
09FF                HEADER_RBRACEEXEC:      
09FF   DB 09                  DW   link   
0A01                LINK:     .SET   HEADER_rbraceExec   
0A01   85                     DB   IMMED + 5   
0A02   7D 65 78 65 63         DB   "}exec"   
0A07                RBRACEEXEC:      
0A07                          ;*Macro unroll:  ENTER
0A07   CF                     RST   $08   
0A08   DF 09                  DW   rbrace   
0A0A   40 09 63 0F 72 03      DW   state,AT,ZEQUAL   
0A10   5A 09 63 0F 72 03      DW   nesting,AT,ZEQUAL   
0A16   A0 00                  DW   ANDD   
0A18   EF 07 24 0A            DW   QBRAN,RBRACEEXEC1   
0A1C   DF 12                  DW   DUPP   
0A1E   0C 09 42 0F            DW   here,STORE   
0A22   EA 0B                  DW   execute   
0A24                RBRACEEXEC1:      
0A24                          ;*Macro unroll:  EXIT                             ; return from the function.
0A24   30 0F                  DW   exit   ; return from the function.
0A26   C3 1F 0F               JP   enter   
0A29                          ;*Macro unroll: CODE ".",1,0,DOT                 ; print top of stack in BASE
0A29                HEADER_DOT:      ; print top of stack in BASE
0A29   FF 09                  DW   link   
0A2B                LINK:     .SET   HEADER_DOT   
0A2B   01                     DB   0 + 1   
0A2C   2E                     DB   "."   
0A2D                DOT:         
0A2D   E5                     PUSH   HL   
0A2E   D5                     PUSH   DE   
0A2F   C5                     PUSH   BC   
0A30                          ;*Macro unroll:  loadWord H,L, B,C
0A30   69                     LD   L,C   
0A31   60                     LD   H,B   
0A32   3A 5B 24               LD   A,(VAR_BASE)   
0A35   4F                     LD   C,A   
0A36   11 CD 22               LD   DE,wordBuf   
0A39   CD 6B 0A               CALL   formatNum   
0A3C   CD 3D 12               CALL   printStr   
0A3F   CD 50 12               CALL   printSpace   
0A42   C1                     POP   BC   
0A43   D1                     POP   DE   
0A44   E1                     POP   HL   
0A45                          ;*Macro unroll:  ppop0 B,C
0A45   DD 2B                  DEC   IX   
0A47   DD 46 00               LD   B,(IX+0)   
0A4A   DD 2B                  DEC   IX   
0A4C   DD 4E 00               LD   C,(IX+0)   
0A4F                          ;*Macro unroll:  NEXT
0A4F   C3 1F 0F               JP   enter   
0A52                PRINTNUM:      
0A52   E5                     PUSH   HL   
0A53   D5                     PUSH   DE   
0A54   C5                     PUSH   BC   
0A55                          ;*Macro unroll:  loadWord H,L, B,C
0A55   69                     LD   L,C   
0A56   60                     LD   H,B   
0A57   3A 5B 24               LD   A,(VAR_BASE)   
0A5A   4F                     LD   C,A   
0A5B   11 CD 22               LD   DE,wordBuf   
0A5E   CD 6B 0A               CALL   formatNum   
0A61   CD 3D 12               CALL   printStr   
0A64   CD 50 12               CALL   printSpace   
0A67   C1                     POP   BC   
0A68   D1                     POP   DE   
0A69   E1                     POP   HL   
0A6A   C9                     RET      
0A6B                             ; 
0A6B                             ; HL = data, DE = ptr to lineBuf, C = base ***
0A6B                             ; DE = ptr to string, BC = length
0A6B                             ; 
0A6B                FORMATNUM:      
0A6B                             ; Detect sign of HL.
0A6B   CB 7C                  BIT   7,H   
0A6D                          ;*Macro unroll:  _if nz
0A6D   C2 73 0A               JP   nz,L_M_1357S42   
0A70   C3 70 0A               JP   $   
0A73                          ;*Macro unroll:  STRUC_PUSH $
0A73                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A73                STRUC_12:   .SET   STRUC_11   
0A73                STRUC_11:   .SET   STRUC_10   
0A73                STRUC_10:   .SET   STRUC_9   
0A73                STRUC_9:   .SET   STRUC_8   
0A73                STRUC_8:   .SET   STRUC_7   
0A73                STRUC_7:   .SET   STRUC_6   
0A73                STRUC_6:   .SET   STRUC_5   
0A73                STRUC_5:   .SET   STRUC_4   
0A73                STRUC_4:   .SET   STRUC_3   
0A73                STRUC_3:   .SET   STRUC_2   
0A73                STRUC_2:   .SET   STRUC_TOP   
0A73                STRUC_TOP:   .SET   $   
0A73                L_M_1357S42:      
0A73                             ; HL is negative. Output "-" to string and negate HL.
0A73   3E 2D                  LD   A,"-"   
0A75   12                     LD   (DE),A   
0A76   13                     INC   DE   
0A77   CD D3 03               CALL   negateNum   
0A7A                          ;*Macro unroll:  _endif
0A7A                          ;*Macro unroll:  STRUC_FWD
0A7A                CUR_ADR:   .SET   $   
0A71                          .ORG   STRUC_TOP - 2   
0A71   7A 0A                  DW   CUR_ADR   
0A7A                          .ORG   CUR_ADR   
0A7A                          ;*Macro unroll:  STRUC_POP
0A7A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A7A                STRUC_TOP:   .SET   STRUC_2   
0A7A                STRUC_2:   .SET   STRUC_3   
0A7A                STRUC_3:   .SET   STRUC_4   
0A7A                STRUC_4:   .SET   STRUC_5   
0A7A                STRUC_5:   .SET   STRUC_6   
0A7A                STRUC_6:   .SET   STRUC_7   
0A7A                STRUC_7:   .SET   STRUC_8   
0A7A                STRUC_8:   .SET   STRUC_9   
0A7A                STRUC_9:   .SET   STRUC_10   
0A7A                STRUC_10:   .SET   STRUC_11   
0A7A                STRUC_11:   .SET   STRUC_12   
0A7A                STRUC_12:   .SET   0   
0A7A   06 00                  LD   B,0   ; B will count character length of number
0A7C                          ;*Macro unroll:  _do
0A7C   18 03                  JR   L_M_1365S51   
0A7E   C3 7E 0A               JP   $   
0A81                          ;*Macro unroll:  DLOOP_PUSH $
0A81                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A81                DLOOP_12:   .SET   DLOOP_11   
0A81                DLOOP_11:   .SET   DLOOP_10   
0A81                DLOOP_10:   .SET   DLOOP_9   
0A81                DLOOP_9:   .SET   DLOOP_8   
0A81                DLOOP_8:   .SET   DLOOP_7   
0A81                DLOOP_7:   .SET   DLOOP_6   
0A81                DLOOP_6:   .SET   DLOOP_5   
0A81                DLOOP_5:   .SET   DLOOP_4   
0A81                DLOOP_4:   .SET   DLOOP_3   
0A81                DLOOP_3:   .SET   DLOOP_2   
0A81                DLOOP_2:   .SET   DLOOP_TOP   
0A81                DLOOP_TOP:   .SET   $   
0A81                L_M_1365S51:      
0A81   C5                     PUSH   BC   
0A82   CD DB 03               CALL   divideWordByByte   ; HL = HL / A, A = remainder
0A85   C1                     POP   BC   
0A86   F5                     PUSH   AF   
0A87   04                     INC   B   
0A88                          ;*Macro unroll:  checkZeroWord H,L
0A88   7D                     LD   A,L   
0A89   B4                     OR   H   
0A8A                          ;*Macro unroll:  _until z
0A8A   CA 7E 0A               JP   z,DLOOP_TOP - 3   
0A8D                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A8D                CUR_ADR:   .SET   $   ; needed?
0A7F                          .ORG   DLOOP_TOP - 2   
0A7F   8D 0A                  DW   CUR_ADR   
0A8D                          .ORG   CUR_ADR   
0A8D                          ;*Macro unroll:  _enddo
0A8D   C3 81 0A               JP   DLOOP_TOP   
0A90                          ;*Macro unroll:  DLOOP_FWD
0A90                CUR_ADR:   .SET   $   
0A7F                          .ORG   DLOOP_TOP - 2   
0A7F   90 0A                  DW   CUR_ADR   
0A90                          .ORG   CUR_ADR   
0A90                          ;*Macro unroll:  DLOOP_POP
0A90                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A90                DLOOP_TOP:   .SET   DLOOP_2   
0A90                DLOOP_2:   .SET   DLOOP_3   
0A90                DLOOP_3:   .SET   DLOOP_4   
0A90                DLOOP_4:   .SET   DLOOP_5   
0A90                DLOOP_5:   .SET   DLOOP_6   
0A90                DLOOP_6:   .SET   DLOOP_7   
0A90                DLOOP_7:   .SET   DLOOP_8   
0A90                DLOOP_8:   .SET   DLOOP_9   
0A90                DLOOP_9:   .SET   DLOOP_10   
0A90                DLOOP_10:   .SET   DLOOP_11   
0A90                DLOOP_11:   .SET   DLOOP_12   
0A90                DLOOP_12:   .SET   0   
0A90                          ;*Macro unroll:  _do
0A90   18 03                  JR   L_M_1374S60   
0A92   C3 92 0A               JP   $   
0A95                          ;*Macro unroll:  DLOOP_PUSH $
0A95                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A95                DLOOP_12:   .SET   DLOOP_11   
0A95                DLOOP_11:   .SET   DLOOP_10   
0A95                DLOOP_10:   .SET   DLOOP_9   
0A95                DLOOP_9:   .SET   DLOOP_8   
0A95                DLOOP_8:   .SET   DLOOP_7   
0A95                DLOOP_7:   .SET   DLOOP_6   
0A95                DLOOP_6:   .SET   DLOOP_5   
0A95                DLOOP_5:   .SET   DLOOP_4   
0A95                DLOOP_4:   .SET   DLOOP_3   
0A95                DLOOP_3:   .SET   DLOOP_2   
0A95                DLOOP_2:   .SET   DLOOP_TOP   
0A95                DLOOP_TOP:   .SET   $   
0A95                L_M_1374S60:      
0A95   F1                     POP   AF   
0A96   C6 30                  ADD   A,$30   ; convert digit to ASCII
0A98   FE 3A                  CP   $3A   
0A9A                          ;*Macro unroll:  _if nc
0A9A   D2 A0 0A               JP   nc,L_M_1378S64   
0A9D   C3 9D 0A               JP   $   
0AA0                          ;*Macro unroll:  STRUC_PUSH $
0AA0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AA0                STRUC_12:   .SET   STRUC_11   
0AA0                STRUC_11:   .SET   STRUC_10   
0AA0                STRUC_10:   .SET   STRUC_9   
0AA0                STRUC_9:   .SET   STRUC_8   
0AA0                STRUC_8:   .SET   STRUC_7   
0AA0                STRUC_7:   .SET   STRUC_6   
0AA0                STRUC_6:   .SET   STRUC_5   
0AA0                STRUC_5:   .SET   STRUC_4   
0AA0                STRUC_4:   .SET   STRUC_3   
0AA0                STRUC_3:   .SET   STRUC_2   
0AA0                STRUC_2:   .SET   STRUC_TOP   
0AA0                STRUC_TOP:   .SET   $   
0AA0                L_M_1378S64:      
0AA0   C6 07                  ADD   A,7   
0AA2                          ;*Macro unroll:  _endif
0AA2                          ;*Macro unroll:  STRUC_FWD
0AA2                CUR_ADR:   .SET   $   
0A9E                          .ORG   STRUC_TOP - 2   
0A9E   A2 0A                  DW   CUR_ADR   
0AA2                          .ORG   CUR_ADR   
0AA2                          ;*Macro unroll:  STRUC_POP
0AA2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AA2                STRUC_TOP:   .SET   STRUC_2   
0AA2                STRUC_2:   .SET   STRUC_3   
0AA2                STRUC_3:   .SET   STRUC_4   
0AA2                STRUC_4:   .SET   STRUC_5   
0AA2                STRUC_5:   .SET   STRUC_6   
0AA2                STRUC_6:   .SET   STRUC_7   
0AA2                STRUC_7:   .SET   STRUC_8   
0AA2                STRUC_8:   .SET   STRUC_9   
0AA2                STRUC_9:   .SET   STRUC_10   
0AA2                STRUC_10:   .SET   STRUC_11   
0AA2                STRUC_11:   .SET   STRUC_12   
0AA2                STRUC_12:   .SET   0   
0AA2   12                     LD   (DE),A   
0AA3   13                     INC   DE   
0AA4                          ;*Macro unroll:  _djnz
0AA4   10 EF                  DJNZ   DLOOP_TOP   
0AA6                          ;*Macro unroll:  DLOOP_FWD
0AA6                CUR_ADR:   .SET   $   
0A93                          .ORG   DLOOP_TOP - 2   
0A93   A6 0A                  DW   CUR_ADR   
0AA6                          .ORG   CUR_ADR   
0AA6                          ;*Macro unroll:  DLOOP_POP
0AA6                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0AA6                DLOOP_TOP:   .SET   DLOOP_2   
0AA6                DLOOP_2:   .SET   DLOOP_3   
0AA6                DLOOP_3:   .SET   DLOOP_4   
0AA6                DLOOP_4:   .SET   DLOOP_5   
0AA6                DLOOP_5:   .SET   DLOOP_6   
0AA6                DLOOP_6:   .SET   DLOOP_7   
0AA6                DLOOP_7:   .SET   DLOOP_8   
0AA6                DLOOP_8:   .SET   DLOOP_9   
0AA6                DLOOP_9:   .SET   DLOOP_10   
0AA6                DLOOP_10:   .SET   DLOOP_11   
0AA6                DLOOP_11:   .SET   DLOOP_12   
0AA6                DLOOP_12:   .SET   0   
0AA6   21 CD 22               LD   HL,wordBuf   ;calc length
0AA9   EB                     EX   DE,HL   
0AAA   B7                     OR   A   
0AAB   ED 52                  SBC   HL,DE   
0AAD                          ;*Macro unroll:  loadWord B,C, H,L
0AAD   4D                     LD   C,L   
0AAE   44                     LD   B,H   
0AAF   C9                     RET      
0AB0                             ; 
0AB0                             ; toNumber -  converts string to number in the ***
0AB0                             ; base strored in VAR_BASE
0AB0                             ; 
0AB0                             ; params: HL = string address, BC = string length
0AB0                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
0AB0                             ; destroys: AF
0AB0                             ; 
0AB0                TONUMBER:      
0AB0   FD E5                  PUSH   IY   ; save regs
0AB2   E5                     PUSH   HL   
0AB3   E5                     PUSH   HL   ; IY = HL
0AB4   FD E1                  POP   IY   
0AB6   11 00 00               LD   DE,0   ; 16 bit accum
0AB9   21 00 00               LD   HL,0   ; 8 bit char
0ABC                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
0ABC   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
0ABD   B0                     OR   B   
0ABE                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
0ABE   CA C4 0A               JP   z,L_M_1406S97   ; trying to parse a zero-length string is an error, But will return 0.
0AC1   C3 C1 0A               JP   $   
0AC4                          ;*Macro unroll:  STRUC_PUSH $
0AC4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AC4                STRUC_12:   .SET   STRUC_11   
0AC4                STRUC_11:   .SET   STRUC_10   
0AC4                STRUC_10:   .SET   STRUC_9   
0AC4                STRUC_9:   .SET   STRUC_8   
0AC4                STRUC_8:   .SET   STRUC_7   
0AC4                STRUC_7:   .SET   STRUC_6   
0AC4                STRUC_6:   .SET   STRUC_5   
0AC4                STRUC_5:   .SET   STRUC_4   
0AC4                STRUC_4:   .SET   STRUC_3   
0AC4                STRUC_3:   .SET   STRUC_2   
0AC4                STRUC_2:   .SET   STRUC_TOP   
0AC4                STRUC_TOP:   .SET   $   
0AC4                L_M_1406S97:      
0AC4   E1                     POP   HL   
0AC5   FD E1                  POP   IY   
0AC7   C9                     RET      ; de = number, BC = err
0AC8                          ;*Macro unroll:  _endif
0AC8                          ;*Macro unroll:  STRUC_FWD
0AC8                CUR_ADR:   .SET   $   
0AC2                          .ORG   STRUC_TOP - 2   
0AC2   C8 0A                  DW   CUR_ADR   
0AC8                          .ORG   CUR_ADR   
0AC8                          ;*Macro unroll:  STRUC_POP
0AC8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AC8                STRUC_TOP:   .SET   STRUC_2   
0AC8                STRUC_2:   .SET   STRUC_3   
0AC8                STRUC_3:   .SET   STRUC_4   
0AC8                STRUC_4:   .SET   STRUC_5   
0AC8                STRUC_5:   .SET   STRUC_6   
0AC8                STRUC_6:   .SET   STRUC_7   
0AC8                STRUC_7:   .SET   STRUC_8   
0AC8                STRUC_8:   .SET   STRUC_9   
0AC8                STRUC_9:   .SET   STRUC_10   
0AC8                STRUC_10:   .SET   STRUC_11   
0AC8                STRUC_11:   .SET   STRUC_12   
0AC8                STRUC_12:   .SET   0   
0AC8                             ; Check if first character is "-".
0AC8   FD 7E 00               LD   A,(IY)   ; l = first character in string
0ACB   FD 23                  INC   IY   
0ACD   D5                     PUSH   DE   ; push 0 on stack
0ACE   FE 2D                  CP   "-"   ; negative number?
0AD0                          ;*Macro unroll:  _if z
0AD0   CA D6 0A               JP   z,L_M_1416S107   
0AD3   C3 D3 0A               JP   $   
0AD6                          ;*Macro unroll:  STRUC_PUSH $
0AD6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AD6                STRUC_12:   .SET   STRUC_11   
0AD6                STRUC_11:   .SET   STRUC_10   
0AD6                STRUC_10:   .SET   STRUC_9   
0AD6                STRUC_9:   .SET   STRUC_8   
0AD6                STRUC_8:   .SET   STRUC_7   
0AD6                STRUC_7:   .SET   STRUC_6   
0AD6                STRUC_6:   .SET   STRUC_5   
0AD6                STRUC_5:   .SET   STRUC_4   
0AD6                STRUC_4:   .SET   STRUC_3   
0AD6                STRUC_3:   .SET   STRUC_2   
0AD6                STRUC_2:   .SET   STRUC_TOP   
0AD6                STRUC_TOP:   .SET   $   
0AD6                L_M_1416S107:      
0AD6   D1                     POP   DE   
0AD7   21 01 00               LD   HL,1   
0ADA   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
0ADB   0B                     DEC   BC   
0ADC                          ;*Macro unroll:  checkZeroWord B,C
0ADC   79                     LD   A,C   
0ADD   B0                     OR   B   
0ADE                          ;*Macro unroll:  _if z
0ADE   CA E4 0A               JP   z,L_M_1422S113   
0AE1   C3 E1 0A               JP   $   
0AE4                          ;*Macro unroll:  STRUC_PUSH $
0AE4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AE4                STRUC_12:   .SET   STRUC_11   
0AE4                STRUC_11:   .SET   STRUC_10   
0AE4                STRUC_10:   .SET   STRUC_9   
0AE4                STRUC_9:   .SET   STRUC_8   
0AE4                STRUC_8:   .SET   STRUC_7   
0AE4                STRUC_7:   .SET   STRUC_6   
0AE4                STRUC_6:   .SET   STRUC_5   
0AE4                STRUC_5:   .SET   STRUC_4   
0AE4                STRUC_4:   .SET   STRUC_3   
0AE4                STRUC_3:   .SET   STRUC_2   
0AE4                STRUC_2:   .SET   STRUC_TOP   
0AE4                STRUC_TOP:   .SET   $   
0AE4                L_M_1422S113:      
0AE4   E1                     POP   HL   ; error: string is only "-".
0AE5   01 01 00               LD   BC,1   
0AE8   E1                     POP   HL   
0AE9   FD E1                  POP   IY   
0AEB   C9                     RET      ; de = number, BC = err
0AEC                          ;*Macro unroll:  _endif
0AEC                          ;*Macro unroll:  STRUC_FWD
0AEC                CUR_ADR:   .SET   $   
0AE2                          .ORG   STRUC_TOP - 2   
0AE2   EC 0A                  DW   CUR_ADR   
0AEC                          .ORG   CUR_ADR   
0AEC                          ;*Macro unroll:  STRUC_POP
0AEC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AEC                STRUC_TOP:   .SET   STRUC_2   
0AEC                STRUC_2:   .SET   STRUC_3   
0AEC                STRUC_3:   .SET   STRUC_4   
0AEC                STRUC_4:   .SET   STRUC_5   
0AEC                STRUC_5:   .SET   STRUC_6   
0AEC                STRUC_6:   .SET   STRUC_7   
0AEC                STRUC_7:   .SET   STRUC_8   
0AEC                STRUC_8:   .SET   STRUC_9   
0AEC                STRUC_9:   .SET   STRUC_10   
0AEC                STRUC_10:   .SET   STRUC_11   
0AEC                STRUC_11:   .SET   STRUC_12   
0AEC                STRUC_12:   .SET   0   
0AEC                             ; Loop reading digits.
0AEC   C5                     PUSH   BC   
0AED   ED 4B 5B 24            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0AF1   CD 36 04               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0AF4   C1                     POP   BC   
0AF5   FD 7E 00               LD   A,(IY)   ; a = next character in string
0AF8   FD 23                  INC   IY   
0AFA                          ;*Macro unroll:  _endif
0AFA                          ;*Macro unroll:  STRUC_FWD
0AFA                CUR_ADR:   .SET   $   
0AD4                          .ORG   STRUC_TOP - 2   
0AD4   FA 0A                  DW   CUR_ADR   
0AFA                          .ORG   CUR_ADR   
0AFA                          ;*Macro unroll:  STRUC_POP
0AFA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AFA                STRUC_TOP:   .SET   STRUC_2   
0AFA                STRUC_2:   .SET   STRUC_3   
0AFA                STRUC_3:   .SET   STRUC_4   
0AFA                STRUC_4:   .SET   STRUC_5   
0AFA                STRUC_5:   .SET   STRUC_6   
0AFA                STRUC_6:   .SET   STRUC_7   
0AFA                STRUC_7:   .SET   STRUC_8   
0AFA                STRUC_8:   .SET   STRUC_9   
0AFA                STRUC_9:   .SET   STRUC_10   
0AFA                STRUC_10:   .SET   STRUC_11   
0AFA                STRUC_11:   .SET   STRUC_12   
0AFA                STRUC_12:   .SET   0   
0AFA                             ; Convert 0-9, A-z to a number 0-35.
0AFA                          ;*Macro unroll:  _do
0AFA   18 03                  JR   L_M_1438S130   
0AFC   C3 FC 0A               JP   $   
0AFF                          ;*Macro unroll:  DLOOP_PUSH $
0AFF                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0AFF                DLOOP_12:   .SET   DLOOP_11   
0AFF                DLOOP_11:   .SET   DLOOP_10   
0AFF                DLOOP_10:   .SET   DLOOP_9   
0AFF                DLOOP_9:   .SET   DLOOP_8   
0AFF                DLOOP_8:   .SET   DLOOP_7   
0AFF                DLOOP_7:   .SET   DLOOP_6   
0AFF                DLOOP_6:   .SET   DLOOP_5   
0AFF                DLOOP_5:   .SET   DLOOP_4   
0AFF                DLOOP_4:   .SET   DLOOP_3   
0AFF                DLOOP_3:   .SET   DLOOP_2   
0AFF                DLOOP_2:   .SET   DLOOP_TOP   
0AFF                DLOOP_TOP:   .SET   $   
0AFF                L_M_1438S130:      
0AFF   D6 30                  SUB   "0"   ; < "0"?
0B01   38 33                  JR   c,toNumberExit   ; invalid char, end of number
0B03   FE 0A                  CP   10   ; <= "9"?
0B05                          ;*Macro unroll:  _if nc
0B05   D2 0B 0B               JP   nc,L_M_1442S134   
0B08   C3 08 0B               JP   $   
0B0B                          ;*Macro unroll:  STRUC_PUSH $
0B0B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B0B                STRUC_12:   .SET   STRUC_11   
0B0B                STRUC_11:   .SET   STRUC_10   
0B0B                STRUC_10:   .SET   STRUC_9   
0B0B                STRUC_9:   .SET   STRUC_8   
0B0B                STRUC_8:   .SET   STRUC_7   
0B0B                STRUC_7:   .SET   STRUC_6   
0B0B                STRUC_6:   .SET   STRUC_5   
0B0B                STRUC_5:   .SET   STRUC_4   
0B0B                STRUC_4:   .SET   STRUC_3   
0B0B                STRUC_3:   .SET   STRUC_2   
0B0B                STRUC_2:   .SET   STRUC_TOP   
0B0B                STRUC_TOP:   .SET   $   
0B0B                L_M_1442S134:      
0B0B   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0B0D                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0B0D   DA FC 0A               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0B10                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0B10                CUR_ADR:   .SET   $   ; needed?
0AFD                          .ORG   DLOOP_TOP - 2   
0AFD   10 0B                  DW   CUR_ADR   
0B10                          .ORG   CUR_ADR   
0B10   C6 0A                  ADD   a,10   
0B12                          ;*Macro unroll:  _endif
0B12                          ;*Macro unroll:  STRUC_FWD
0B12                CUR_ADR:   .SET   $   
0B09                          .ORG   STRUC_TOP - 2   
0B09   12 0B                  DW   CUR_ADR   
0B12                          .ORG   CUR_ADR   
0B12                          ;*Macro unroll:  STRUC_POP
0B12                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0B12                STRUC_TOP:   .SET   STRUC_2   
0B12                STRUC_2:   .SET   STRUC_3   
0B12                STRUC_3:   .SET   STRUC_4   
0B12                STRUC_4:   .SET   STRUC_5   
0B12                STRUC_5:   .SET   STRUC_6   
0B12                STRUC_6:   .SET   STRUC_7   
0B12                STRUC_7:   .SET   STRUC_8   
0B12                STRUC_8:   .SET   STRUC_9   
0B12                STRUC_9:   .SET   STRUC_10   
0B12                STRUC_10:   .SET   STRUC_11   
0B12                STRUC_11:   .SET   STRUC_12   
0B12                STRUC_12:   .SET   0   
0B12   2A 5B 24               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
0B15   BD                     CP   L   ; >= BASE? then invalid char, end of number
0B16                          ;*Macro unroll:  _until nc
0B16   D2 FC 0A               JP   nc,DLOOP_TOP - 3   
0B19                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0B19                CUR_ADR:   .SET   $   ; needed?
0AFD                          .ORG   DLOOP_TOP - 2   
0AFD   19 0B                  DW   CUR_ADR   
0B19                          .ORG   CUR_ADR   
0B19   83                     ADD   A,E   
0B1A   5F                     LD   E,A   
0B1B   3E 00                  LD   A,0   
0B1D   8A                     ADC   a,d   
0B1E   57                     LD   D,A   
0B1F   0B                     DEC   BC   ; dec char count
0B20                          ;*Macro unroll:  checkZeroWord B,C
0B20   79                     LD   A,C   
0B21   B0                     OR   B   
0B22                          ;*Macro unroll:  _until z
0B22   CA FC 0A               JP   z,DLOOP_TOP - 3   
0B25                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0B25                CUR_ADR:   .SET   $   ; needed?
0AFD                          .ORG   DLOOP_TOP - 2   
0AFD   25 0B                  DW   CUR_ADR   
0B25                          .ORG   CUR_ADR   
0B25   C5                     PUSH   BC   
0B26   ED 4B 5B 24            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0B2A   CD 36 04               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0B2D   C1                     POP   BC   
0B2E   FD 7E 00               LD   A,(IY)   ; a = next character in string
0B31   FD 23                  INC   IY   
0B33                          ;*Macro unroll:  _enddo
0B33   C3 FF 0A               JP   DLOOP_TOP   
0B36                          ;*Macro unroll:  DLOOP_FWD
0B36                CUR_ADR:   .SET   $   
0AFD                          .ORG   DLOOP_TOP - 2   
0AFD   36 0B                  DW   CUR_ADR   
0B36                          .ORG   CUR_ADR   
0B36                          ;*Macro unroll:  DLOOP_POP
0B36                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0B36                DLOOP_TOP:   .SET   DLOOP_2   
0B36                DLOOP_2:   .SET   DLOOP_3   
0B36                DLOOP_3:   .SET   DLOOP_4   
0B36                DLOOP_4:   .SET   DLOOP_5   
0B36                DLOOP_5:   .SET   DLOOP_6   
0B36                DLOOP_6:   .SET   DLOOP_7   
0B36                DLOOP_7:   .SET   DLOOP_8   
0B36                DLOOP_8:   .SET   DLOOP_9   
0B36                DLOOP_9:   .SET   DLOOP_10   
0B36                DLOOP_10:   .SET   DLOOP_11   
0B36                DLOOP_11:   .SET   DLOOP_12   
0B36                DLOOP_12:   .SET   0   
0B36                TONUMBEREXIT:      
0B36   E1                     POP   HL   
0B37                          ;*Macro unroll:  checkZeroWord H,L
0B37   7D                     LD   A,L   
0B38   B4                     OR   H   
0B39                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0B39   C2 3F 0B               JP   nz,L_M_1468S163   ; if not -ve then skip
0B3C   C3 3C 0B               JP   $   
0B3F                          ;*Macro unroll:  STRUC_PUSH $
0B3F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B3F                STRUC_12:   .SET   STRUC_11   
0B3F                STRUC_11:   .SET   STRUC_10   
0B3F                STRUC_10:   .SET   STRUC_9   
0B3F                STRUC_9:   .SET   STRUC_8   
0B3F                STRUC_8:   .SET   STRUC_7   
0B3F                STRUC_7:   .SET   STRUC_6   
0B3F                STRUC_6:   .SET   STRUC_5   
0B3F                STRUC_5:   .SET   STRUC_4   
0B3F                STRUC_4:   .SET   STRUC_3   
0B3F                STRUC_3:   .SET   STRUC_2   
0B3F                STRUC_2:   .SET   STRUC_TOP   
0B3F                STRUC_TOP:   .SET   $   
0B3F                L_M_1468S163:      
0B3F   EB                     EX   DE,HL   ; negate de
0B40   CD D3 03               CALL   negateNum   
0B43   EB                     EX   DE,HL   
0B44                          ;*Macro unroll:  _endif
0B44                          ;*Macro unroll:  STRUC_FWD
0B44                CUR_ADR:   .SET   $   
0B3D                          .ORG   STRUC_TOP - 2   
0B3D   44 0B                  DW   CUR_ADR   
0B44                          .ORG   CUR_ADR   
0B44                          ;*Macro unroll:  STRUC_POP
0B44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0B44                STRUC_TOP:   .SET   STRUC_2   
0B44                STRUC_2:   .SET   STRUC_3   
0B44                STRUC_3:   .SET   STRUC_4   
0B44                STRUC_4:   .SET   STRUC_5   
0B44                STRUC_5:   .SET   STRUC_6   
0B44                STRUC_6:   .SET   STRUC_7   
0B44                STRUC_7:   .SET   STRUC_8   
0B44                STRUC_8:   .SET   STRUC_9   
0B44                STRUC_9:   .SET   STRUC_10   
0B44                STRUC_10:   .SET   STRUC_11   
0B44                STRUC_11:   .SET   STRUC_12   
0B44                STRUC_12:   .SET   0   
0B44   E1                     POP   HL   
0B45   FD E1                  POP   IY   
0B47   C9                     RET      ; de = number, BC = err
0B48                          ;*Macro unroll: CODE "number",6,0,NUMBER         ; ( ptr len -- num err )
0B48                HEADER_NUMBER:      ; ( ptr len -- num err )
0B48   29 0A                  DW   link   
0B4A                LINK:     .SET   HEADER_NUMBER   
0B4A   06                     DB   0 + 6   
0B4B   6E 75 6D 62 65 72      DB   "number"   
0B51                NUMBER:      
0B51                          ;*Macro unroll:  ppop0 H,L
0B51   DD 2B                  DEC   IX   
0B53   DD 66 00               LD   H,(IX+0)   
0B56   DD 2B                  DEC   IX   
0B58   DD 6E 00               LD   L,(IX+0)   
0B5B   CD B0 0A               CALL   toNumber   ; params: HL = string address, BC = string length
0B5E                             ; Returns the parsed number in DE,
0B5E                             ; BC = 0, success
0B5E                          ;*Macro unroll:  ppush0 D,E
0B5E   DD 73 00               LD   (IX+0),E   
0B61   DD 23                  INC   IX   
0B63   DD 72 00               LD   (IX+0),D   
0B66   DD 23                  INC   IX   
0B68                          ;*Macro unroll:  NEXT
0B68   C3 1F 0F               JP   enter   
0B6B                          ;*Macro unroll: CODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
0B6B                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
0B6B   48 0B                  DW   link   
0B6D                LINK:     .SET   HEADER_decimal   
0B6D   07                     DB   0 + 7   
0B6E   64 65 63 69 6D 61 6C   DB   "decimal"   
0B75                DECIMAL:      
0B75                          ;*Macro unroll:  ENTER
0B75   CF                     RST   $08   
0B76   5E 12 0A 00 87 09 42 0F DW   LIT,10,base,STORE   
0B7E                          ;*Macro unroll:  EXIT
0B7E   30 0F                  DW   exit   
0B80   C3 1F 0F               JP   enter   
0B83                          ;*Macro unroll: CODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
0B83                HEADER_HEX:      ; pushes ptr to string and length on stack
0B83   6B 0B                  DW   link   
0B85                LINK:     .SET   HEADER_hex   
0B85   03                     DB   0 + 3   
0B86   68 65 78               DB   "hex"   
0B89                HEX:         
0B89                          ;*Macro unroll:  ENTER
0B89   CF                     RST   $08   
0B8A   5E 12 10 00 87 09 42 0F DW   LIT,16,base,STORE   
0B92                          ;*Macro unroll:  EXIT
0B92   30 0F                  DW   exit   
0B94   C3 1F 0F               JP   enter   
0B97                          ;*Macro unroll: CODE "quit",4,0,quit
0B97                HEADER_QUIT:      
0B97   83 0B                  DW   link   
0B99                LINK:     .SET   HEADER_quit   
0B99   04                     DB   0 + 4   
0B9A   71 75 69 74            DB   "quit"   
0B9E                QUIT:        
0B9E                          ;*Macro unroll:  ENTER
0B9E   CF                     RST   $08   
0B9F   70 09 63 0F CC 0F      DW   sp0,AT,spStore   
0BA5   03 0C                  DW   interpret   
0BA7                          ;*Macro unroll:  EXIT
0BA7   30 0F                  DW   exit   
0BA9   C3 1F 0F               JP   enter   
0BAC                          ;*Macro unroll: CODE "word",5,0,WORD                 ; delim -- c-addr
0BAC                HEADER_WORD:      ; delim -- c-addr
0BAC   97 0B                  DW   link   
0BAE                LINK:     .SET   HEADER_WORD   
0BAE   05                     DB   0 + 5   
0BAF   77 6F 72 64            DB   "word"   
0BB3                WORD:        
0BB3                          ;*Macro unroll:  ENTER
0BB3   CF                     RST   $08   
0BB4   5E 12 40 00            DW   LIT,64   ; limit
0BB8   0C 09 63 0F            DW   here,AT   
0BBC   63 0C                  DW   xword   ; writes to HERE!
0BBE                          ;*Macro unroll:  EXIT
0BBE   30 0F                  DW   exit   
0BC0   C3 1F 0F               JP   enter   
0BC3                          ;*Macro unroll: CODE ">cfa",4,0,tcfa
0BC3                HEADER_TCFA:      
0BC3   AC 0B                  DW   link   
0BC5                LINK:     .SET   HEADER_tcfa   
0BC5   04                     DB   0 + 4   
0BC6   3E 63 66 61            DB   ">cfa"   
0BCA                TCFA:        
0BCA                          ;*Macro unroll:  ENTER
0BCA   CF                     RST   $08   
0BCB   5E 12 02 00 E8 00      DW   LIT,2,plus   
0BD1   AB 13                  DW   count   
0BD3   5E 12 3F 00 A0 00      DW   LIT,LENMASK,ANDD   
0BD9   E8 00                  DW   plus   
0BDB                          ;*Macro unroll:  EXIT
0BDB   30 0F                  DW   exit   
0BDD   C3 1F 0F               JP   enter   
0BE0                          ;*Macro unroll: CODE "execute",7,0,EXECUTE
0BE0                HEADER_EXECUTE:      
0BE0   C3 0B                  DW   link   
0BE2                LINK:     .SET   HEADER_EXECUTE   
0BE2   07                     DB   0 + 7   
0BE3   65 78 65 63 75 74 65   DB   "execute"   
0BEA                EXECUTE:      
0BEA                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0BEA   60                     LD   H,B   ; POP TOS into HL
0BEB   69                     LD   L,C   
0BEC                          ;*Macro unroll:  ppop0 B,C
0BEC   DD 2B                  DEC   IX   
0BEE   DD 46 00               LD   B,(IX+0)   
0BF1   DD 2B                  DEC   IX   
0BF3   DD 4E 00               LD   C,(IX+0)   
0BF6   E9                     JP   (hl)   ; go do Forth word
0BF7                          ;*Macro unroll: CODE "interpret",6,0,INTERPRET
0BF7                HEADER_INTERPRET:      
0BF7   E0 0B                  DW   link   
0BF9                LINK:     .SET   HEADER_INTERPRET   
0BF9   06                     DB   0 + 6   
0BFA   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0C03                INTERPRET:      
0C03                          ;*Macro unroll:  ENTER
0C03   CF                     RST   $08   
0C04                INTERPRET1:      
0C04   9D 0E B3 0B AB 13      DW   bl,word,count   ; pstr -- ptr len
0C0A   DF 12 72 03            DW   DUPP,zEqual   
0C0E                          ;*Macro unroll:  cIf
0C0E   EF 07 00 00            DW   QBRAN,0   
0C12                          ;*Macro unroll:  CPL_PUSH $
0C12                CPL_COUNT:   .SET   CPL_COUNT + 1   
0C12                CPL_10:   .SET   CPL_9   
0C12                CPL_9:    .SET   CPL_8   
0C12                CPL_8:    .SET   CPL_7   
0C12                CPL_7:    .SET   CPL_6   
0C12                CPL_6:    .SET   CPL_5   
0C12                CPL_5:    .SET   CPL_4   
0C12                CPL_4:    .SET   CPL_3   
0C12                CPL_3:    .SET   CPL_2   
0C12                CPL_2:    .SET   CPL_TOP   
0C12                CPL_TOP:   .SET   $   
0C12   13 13 13 13            DW   drop,drop   ; ptr len --
0C16                          ;*Macro unroll:  EXIT
0C16   30 0F                  DW   exit   
0C18   C3 1F 0F               JP   enter   
0C1B                          ;*Macro unroll:  cEndif
0C1B                          ;*Macro unroll:  cBRANCH_FWD
0C1B                CUR_ADR:   .SET   $   
0C10                          .ORG   CPL_TOP - 2   
0C10   1B 0C                  DW   CUR_ADR   
0C1B                          .ORG   CUR_ADR   
0C1B                          ;*Macro unroll:  CPL_POP
0C1B                CPL_COUNT:   .SET   CPL_COUNT - 1   
0C1B                CPL_TOP:   .SET   CPL_2   
0C1B                CPL_2:    .SET   CPL_3   
0C1B                CPL_3:    .SET   CPL_4   
0C1B                CPL_4:    .SET   CPL_5   
0C1B                CPL_5:    .SET   CPL_6   
0C1B                CPL_6:    .SET   CPL_7   
0C1B                CPL_7:    .SET   CPL_8   
0C1B                CPL_8:    .SET   CPL_9   
0C1B                CPL_9:    .SET   CPL_10   
0C1B                CPL_10:   .SET   0   
0C1B   4A 0D                  DW   interpToken   ; interpret the next word
0C1D   0C 08 04 0C            DW   BRAN,INTERPRET1   
0C21                          ;*Macro unroll:  EXIT
0C21   30 0F                  DW   exit   
0C23   C3 1F 0F               JP   enter   
0C26                             ; 
0C26                             ; lookup - lookup header in dictionary ***
0C26                             ; 
0C26                             ; params: HL = string address, BC = string length
0C26                             ; returns: DE = found header ptr or 0
0C26                             ; destroys: AF
0C26                             ; 
0C26                LOOKUP:      
0C26   ED 5B 5F 24            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0C2A                          ;*Macro unroll:  _do
0C2A   18 03                  JR   L_M_1533S49   
0C2C   C3 2C 0C               JP   $   
0C2F                          ;*Macro unroll:  DLOOP_PUSH $
0C2F                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C2F                DLOOP_12:   .SET   DLOOP_11   
0C2F                DLOOP_11:   .SET   DLOOP_10   
0C2F                DLOOP_10:   .SET   DLOOP_9   
0C2F                DLOOP_9:   .SET   DLOOP_8   
0C2F                DLOOP_8:   .SET   DLOOP_7   
0C2F                DLOOP_7:   .SET   DLOOP_6   
0C2F                DLOOP_6:   .SET   DLOOP_5   
0C2F                DLOOP_5:   .SET   DLOOP_4   
0C2F                DLOOP_4:   .SET   DLOOP_3   
0C2F                DLOOP_3:   .SET   DLOOP_2   
0C2F                DLOOP_2:   .SET   DLOOP_TOP   
0C2F                DLOOP_TOP:   .SET   $   
0C2F                L_M_1533S49:      
0C2F                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0C2F   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0C30   B2                     OR   D   
0C31   C8                     RET   z   
0C32                             ; Compare the length expected and the length of the word.
0C32                             ; Note that if the HIDE flag is set on the word, then by a bit of trickery
0C32                             ; this won't pick the word (the length will appear to be wrong).
0C32   D5                     PUSH   DE   ; save ptr to header
0C33   13                     INC   DE   ; skip over first field
0C34   13                     INC   DE   
0C35   1A                     LD   A,(DE)   ; a = flags+length field
0C36   E6 7F                  AND   HIDE | LENMASK   ; %al = name length
0C38   B9                     CP   C   ; Length is the same?
0C39                          ;*Macro unroll:  _if z
0C39   CA 3F 0C               JP   z,L_M_1545S65   
0C3C   C3 3C 0C               JP   $   
0C3F                          ;*Macro unroll:  STRUC_PUSH $
0C3F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C3F                STRUC_12:   .SET   STRUC_11   
0C3F                STRUC_11:   .SET   STRUC_10   
0C3F                STRUC_10:   .SET   STRUC_9   
0C3F                STRUC_9:   .SET   STRUC_8   
0C3F                STRUC_8:   .SET   STRUC_7   
0C3F                STRUC_7:   .SET   STRUC_6   
0C3F                STRUC_6:   .SET   STRUC_5   
0C3F                STRUC_5:   .SET   STRUC_4   
0C3F                STRUC_4:   .SET   STRUC_3   
0C3F                STRUC_3:   .SET   STRUC_2   
0C3F                STRUC_2:   .SET   STRUC_TOP   
0C3F                STRUC_TOP:   .SET   $   
0C3F                L_M_1545S65:      
0C3F                             ; Compare the strings in detail.
0C3F   13                     INC   DE   ; DE = Dictionary string we are checking against.
0C40   E5                     PUSH   HL   ; save HL, BC
0C41   C5                     PUSH   BC   
0C42   CD 1C 14               CALL   compareStr   ; Compare the strings. BC = len
0C45   C1                     POP   BC   
0C46   E1                     POP   HL   
0C47   B7                     OR   A   ; if A == 0 then matched
0C48                          ;*Macro unroll:  _if z
0C48   CA 4E 0C               JP   z,L_M_1554S76   
0C4B   C3 4B 0C               JP   $   
0C4E                          ;*Macro unroll:  STRUC_PUSH $
0C4E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C4E                STRUC_12:   .SET   STRUC_11   
0C4E                STRUC_11:   .SET   STRUC_10   
0C4E                STRUC_10:   .SET   STRUC_9   
0C4E                STRUC_9:   .SET   STRUC_8   
0C4E                STRUC_8:   .SET   STRUC_7   
0C4E                STRUC_7:   .SET   STRUC_6   
0C4E                STRUC_6:   .SET   STRUC_5   
0C4E                STRUC_5:   .SET   STRUC_4   
0C4E                STRUC_4:   .SET   STRUC_3   
0C4E                STRUC_3:   .SET   STRUC_2   
0C4E                STRUC_2:   .SET   STRUC_TOP   
0C4E                STRUC_TOP:   .SET   $   
0C4E                L_M_1554S76:      
0C4E   D1                     POP   DE   ; matched, restore DE and return
0C4F   C9                     RET      
0C50                          ;*Macro unroll:  _endif
0C50                          ;*Macro unroll:  STRUC_FWD
0C50                CUR_ADR:   .SET   $   
0C4C                          .ORG   STRUC_TOP - 2   
0C4C   50 0C                  DW   CUR_ADR   
0C50                          .ORG   CUR_ADR   
0C50                          ;*Macro unroll:  STRUC_POP
0C50                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C50                STRUC_TOP:   .SET   STRUC_2   
0C50                STRUC_2:   .SET   STRUC_3   
0C50                STRUC_3:   .SET   STRUC_4   
0C50                STRUC_4:   .SET   STRUC_5   
0C50                STRUC_5:   .SET   STRUC_6   
0C50                STRUC_6:   .SET   STRUC_7   
0C50                STRUC_7:   .SET   STRUC_8   
0C50                STRUC_8:   .SET   STRUC_9   
0C50                STRUC_9:   .SET   STRUC_10   
0C50                STRUC_10:   .SET   STRUC_11   
0C50                STRUC_11:   .SET   STRUC_12   
0C50                STRUC_12:   .SET   0   
0C50                          ;*Macro unroll:  _endif
0C50                          ;*Macro unroll:  STRUC_FWD
0C50                CUR_ADR:   .SET   $   
0C3D                          .ORG   STRUC_TOP - 2   
0C3D   50 0C                  DW   CUR_ADR   
0C50                          .ORG   CUR_ADR   
0C50                          ;*Macro unroll:  STRUC_POP
0C50                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C50                STRUC_TOP:   .SET   STRUC_2   
0C50                STRUC_2:   .SET   STRUC_3   
0C50                STRUC_3:   .SET   STRUC_4   
0C50                STRUC_4:   .SET   STRUC_5   
0C50                STRUC_5:   .SET   STRUC_6   
0C50                STRUC_6:   .SET   STRUC_7   
0C50                STRUC_7:   .SET   STRUC_8   
0C50                STRUC_8:   .SET   STRUC_9   
0C50                STRUC_9:   .SET   STRUC_10   
0C50                STRUC_10:   .SET   STRUC_11   
0C50                STRUC_11:   .SET   STRUC_12   
0C50                STRUC_12:   .SET   0   
0C50   D1                     POP   DE   ; restore DE
0C51   1A                     LD   A,(DE)   
0C52   08                     EX   AF,AF'   
0C53   13                     INC   DE   
0C54   1A                     LD   A,(DE)   
0C55   57                     LD   D,A   
0C56   08                     EX   AF,AF'   
0C57   5F                     LD   E,A   
0C58                          ;*Macro unroll:  _enddo
0C58   C3 2F 0C               JP   DLOOP_TOP   
0C5B                          ;*Macro unroll:  DLOOP_FWD
0C5B                CUR_ADR:   .SET   $   
0C2D                          .ORG   DLOOP_TOP - 2   
0C2D   5B 0C                  DW   CUR_ADR   
0C5B                          .ORG   CUR_ADR   
0C5B                          ;*Macro unroll:  DLOOP_POP
0C5B                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C5B                DLOOP_TOP:   .SET   DLOOP_2   
0C5B                DLOOP_2:   .SET   DLOOP_3   
0C5B                DLOOP_3:   .SET   DLOOP_4   
0C5B                DLOOP_4:   .SET   DLOOP_5   
0C5B                DLOOP_5:   .SET   DLOOP_6   
0C5B                DLOOP_6:   .SET   DLOOP_7   
0C5B                DLOOP_7:   .SET   DLOOP_8   
0C5B                DLOOP_8:   .SET   DLOOP_9   
0C5B                DLOOP_9:   .SET   DLOOP_10   
0C5B                DLOOP_10:   .SET   DLOOP_11   
0C5B                DLOOP_11:   .SET   DLOOP_12   
0C5B                DLOOP_12:   .SET   0   
0C5B                          ;*Macro unroll: CODE "xword",6,0,xword               ; delim limit addr -- c-addr
0C5B                HEADER_XWORD:      ; delim limit addr -- c-addr
0C5B   F7 0B                  DW   link   
0C5D                LINK:     .SET   HEADER_xword   
0C5D   06                     DB   0 + 6   
0C5E   78 77 6F 72 64         DB   "xword"   
0C63                XWORD:       
0C63   CD 6C 0C               CALL   xwordSkip   
0C66   CD 00 0D               CALL   xwordRead   
0C69                          ;*Macro unroll:  NEXT
0C69   C3 1F 0F               JP   enter   
0C6C                XWORDSKIP:      ; delim addr -- delim addr char
0C6C                          ;*Macro unroll:  ppop H,L
0C6C   60                     LD   H,B   
0C6D   69                     LD   L,C   
0C6E                          ;*Macro unroll:  ppop0 B,C
0C6E   DD 2B                  DEC   IX   
0C70   DD 46 00               LD   B,(IX+0)   
0C73   DD 2B                  DEC   IX   
0C75   DD 4E 00               LD   C,(IX+0)   
0C78                          ;*Macro unroll:  ppop D,E
0C78   50                     LD   D,B   
0C79   59                     LD   E,C   
0C7A                          ;*Macro unroll:  ppop0 B,C
0C7A   DD 2B                  DEC   IX   
0C7C   DD 46 00               LD   B,(IX+0)   
0C7F   DD 2B                  DEC   IX   
0C81   DD 4E 00               LD   C,(IX+0)   
0C84                          ;*Macro unroll:  ppush0 B,C
0C84   DD 71 00               LD   (IX+0),C   
0C87   DD 23                  INC   IX   
0C89   DD 70 00               LD   (IX+0),B   
0C8C   DD 23                  INC   IX   
0C8E                          ;*Macro unroll:  ppush0 D,E
0C8E   DD 73 00               LD   (IX+0),E   
0C91   DD 23                  INC   IX   
0C93   DD 72 00               LD   (IX+0),D   
0C96   DD 23                  INC   IX   
0C98                          ;*Macro unroll:  ppush0 H,L
0C98   DD 75 00               LD   (IX+0),L   
0C9B   DD 23                  INC   IX   
0C9D   DD 74 00               LD   (IX+0),H   
0CA0   DD 23                  INC   IX   
0CA2                          ;*Macro unroll:  _do
0CA2   18 03                  JR   L_M_1578S103   
0CA4   C3 A4 0C               JP   $   
0CA7                          ;*Macro unroll:  DLOOP_PUSH $
0CA7                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0CA7                DLOOP_12:   .SET   DLOOP_11   
0CA7                DLOOP_11:   .SET   DLOOP_10   
0CA7                DLOOP_10:   .SET   DLOOP_9   
0CA7                DLOOP_9:   .SET   DLOOP_8   
0CA7                DLOOP_8:   .SET   DLOOP_7   
0CA7                DLOOP_7:   .SET   DLOOP_6   
0CA7                DLOOP_6:   .SET   DLOOP_5   
0CA7                DLOOP_5:   .SET   DLOOP_4   
0CA7                DLOOP_4:   .SET   DLOOP_3   
0CA7                DLOOP_3:   .SET   DLOOP_2   
0CA7                DLOOP_2:   .SET   DLOOP_TOP   
0CA7                DLOOP_TOP:   .SET   $   
0CA7                L_M_1578S103:      
0CA7   CD F9 11               CALL   getKey   ; get next key, returned in A
0CAA                          ;*Macro unroll:  _switch
0CAA   18 03                  JR   L_M_1580S106   
0CAC   C3 AC 0C               JP   $   
0CAF                          ;*Macro unroll:  STRUC_PUSH $
0CAF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CAF                STRUC_12:   .SET   STRUC_11   
0CAF                STRUC_11:   .SET   STRUC_10   
0CAF                STRUC_10:   .SET   STRUC_9   
0CAF                STRUC_9:   .SET   STRUC_8   
0CAF                STRUC_8:   .SET   STRUC_7   
0CAF                STRUC_7:   .SET   STRUC_6   
0CAF                STRUC_6:   .SET   STRUC_5   
0CAF                STRUC_5:   .SET   STRUC_4   
0CAF                STRUC_4:   .SET   STRUC_3   
0CAF                STRUC_3:   .SET   STRUC_2   
0CAF                STRUC_2:   .SET   STRUC_TOP   
0CAF                STRUC_TOP:   .SET   $   
0CAF                L_M_1580S106:      
0CAF   CB 7F                  BIT   7,A   ; check end of input
0CB1                          ;*Macro unroll:  _if nz
0CB1   C2 B7 0C               JP   nz,L_M_1582S109   
0CB4   C3 B4 0C               JP   $   
0CB7                          ;*Macro unroll:  STRUC_PUSH $
0CB7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CB7                STRUC_12:   .SET   STRUC_11   
0CB7                STRUC_11:   .SET   STRUC_10   
0CB7                STRUC_10:   .SET   STRUC_9   
0CB7                STRUC_9:   .SET   STRUC_8   
0CB7                STRUC_8:   .SET   STRUC_7   
0CB7                STRUC_7:   .SET   STRUC_6   
0CB7                STRUC_6:   .SET   STRUC_5   
0CB7                STRUC_5:   .SET   STRUC_4   
0CB7                STRUC_4:   .SET   STRUC_3   
0CB7                STRUC_3:   .SET   STRUC_2   
0CB7                STRUC_2:   .SET   STRUC_TOP   
0CB7                STRUC_TOP:   .SET   $   
0CB7                L_M_1582S109:      
0CB7   36 00                  LD   (HL),0   
0CB9   3E 00                  LD   A,0   
0CBB                          ;*Macro unroll:  _break
0CBB   C3 A4 0C               JP   DLOOP_TOP - 3   
0CBE                          ;*Macro unroll:  _endif
0CBE                          ;*Macro unroll:  STRUC_FWD
0CBE                CUR_ADR:   .SET   $   
0CB5                          .ORG   STRUC_TOP - 2   
0CB5   BE 0C                  DW   CUR_ADR   
0CBE                          .ORG   CUR_ADR   
0CBE                          ;*Macro unroll:  STRUC_POP
0CBE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CBE                STRUC_TOP:   .SET   STRUC_2   
0CBE                STRUC_2:   .SET   STRUC_3   
0CBE                STRUC_3:   .SET   STRUC_4   
0CBE                STRUC_4:   .SET   STRUC_5   
0CBE                STRUC_5:   .SET   STRUC_6   
0CBE                STRUC_6:   .SET   STRUC_7   
0CBE                STRUC_7:   .SET   STRUC_8   
0CBE                STRUC_8:   .SET   STRUC_9   
0CBE                STRUC_9:   .SET   STRUC_10   
0CBE                STRUC_10:   .SET   STRUC_11   
0CBE                STRUC_11:   .SET   STRUC_12   
0CBE                STRUC_12:   .SET   0   
0CBE   FE 5C                  CP   $5C   ; \ start of a comment?
0CC0                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0CC0   CA C6 0C               JP   z,L_M_1588S116   ; if yes skip to end of line
0CC3   C3 C3 0C               JP   $   
0CC6                          ;*Macro unroll:  STRUC_PUSH $
0CC6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CC6                STRUC_12:   .SET   STRUC_11   
0CC6                STRUC_11:   .SET   STRUC_10   
0CC6                STRUC_10:   .SET   STRUC_9   
0CC6                STRUC_9:   .SET   STRUC_8   
0CC6                STRUC_8:   .SET   STRUC_7   
0CC6                STRUC_7:   .SET   STRUC_6   
0CC6                STRUC_6:   .SET   STRUC_5   
0CC6                STRUC_5:   .SET   STRUC_4   
0CC6                STRUC_4:   .SET   STRUC_3   
0CC6                STRUC_3:   .SET   STRUC_2   
0CC6                STRUC_2:   .SET   STRUC_TOP   
0CC6                STRUC_TOP:   .SET   $   
0CC6                L_M_1588S116:      
0CC6                          ;*Macro unroll:  _do
0CC6   18 03                  JR   L_M_1589S117   
0CC8   C3 C8 0C               JP   $   
0CCB                          ;*Macro unroll:  DLOOP_PUSH $
0CCB                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0CCB                DLOOP_12:   .SET   DLOOP_11   
0CCB                DLOOP_11:   .SET   DLOOP_10   
0CCB                DLOOP_10:   .SET   DLOOP_9   
0CCB                DLOOP_9:   .SET   DLOOP_8   
0CCB                DLOOP_8:   .SET   DLOOP_7   
0CCB                DLOOP_7:   .SET   DLOOP_6   
0CCB                DLOOP_6:   .SET   DLOOP_5   
0CCB                DLOOP_5:   .SET   DLOOP_4   
0CCB                DLOOP_4:   .SET   DLOOP_3   
0CCB                DLOOP_3:   .SET   DLOOP_2   
0CCB                DLOOP_2:   .SET   DLOOP_TOP   
0CCB                DLOOP_TOP:   .SET   $   
0CCB                L_M_1589S117:      
0CCB   CD F9 11               CALL   getKey   
0CCE   FE 0D                  CP   "\r"   ; end of line yet?
0CD0                          ;*Macro unroll:  _if nz
0CD0   C2 D6 0C               JP   nz,L_M_1592S120   
0CD3   C3 D3 0C               JP   $   
0CD6                          ;*Macro unroll:  STRUC_PUSH $
0CD6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CD6                STRUC_12:   .SET   STRUC_11   
0CD6                STRUC_11:   .SET   STRUC_10   
0CD6                STRUC_10:   .SET   STRUC_9   
0CD6                STRUC_9:   .SET   STRUC_8   
0CD6                STRUC_8:   .SET   STRUC_7   
0CD6                STRUC_7:   .SET   STRUC_6   
0CD6                STRUC_6:   .SET   STRUC_5   
0CD6                STRUC_5:   .SET   STRUC_4   
0CD6                STRUC_4:   .SET   STRUC_3   
0CD6                STRUC_3:   .SET   STRUC_2   
0CD6                STRUC_2:   .SET   STRUC_TOP   
0CD6                STRUC_TOP:   .SET   $   
0CD6                L_M_1592S120:      
0CD6   FE 0A                  CP   "\n"   ; end of line yet?
0CD8                          ;*Macro unroll:  _endif
0CD8                          ;*Macro unroll:  STRUC_FWD
0CD8                CUR_ADR:   .SET   $   
0CD4                          .ORG   STRUC_TOP - 2   
0CD4   D8 0C                  DW   CUR_ADR   
0CD8                          .ORG   CUR_ADR   
0CD8                          ;*Macro unroll:  STRUC_POP
0CD8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CD8                STRUC_TOP:   .SET   STRUC_2   
0CD8                STRUC_2:   .SET   STRUC_3   
0CD8                STRUC_3:   .SET   STRUC_4   
0CD8                STRUC_4:   .SET   STRUC_5   
0CD8                STRUC_5:   .SET   STRUC_6   
0CD8                STRUC_6:   .SET   STRUC_7   
0CD8                STRUC_7:   .SET   STRUC_8   
0CD8                STRUC_8:   .SET   STRUC_9   
0CD8                STRUC_9:   .SET   STRUC_10   
0CD8                STRUC_10:   .SET   STRUC_11   
0CD8                STRUC_11:   .SET   STRUC_12   
0CD8                STRUC_12:   .SET   0   
0CD8                          ;*Macro unroll:  _until z
0CD8   CA C8 0C               JP   z,DLOOP_TOP - 3   
0CDB                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0CDB                CUR_ADR:   .SET   $   ; needed?
0CC9                          .ORG   DLOOP_TOP - 2   
0CC9   DB 0C                  DW   CUR_ADR   
0CDB                          .ORG   CUR_ADR   
0CDB                          ;*Macro unroll:  _enddo
0CDB   C3 CB 0C               JP   DLOOP_TOP   
0CDE                          ;*Macro unroll:  DLOOP_FWD
0CDE                CUR_ADR:   .SET   $   
0CC9                          .ORG   DLOOP_TOP - 2   
0CC9   DE 0C                  DW   CUR_ADR   
0CDE                          .ORG   CUR_ADR   
0CDE                          ;*Macro unroll:  DLOOP_POP
0CDE                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CDE                DLOOP_TOP:   .SET   DLOOP_2   
0CDE                DLOOP_2:   .SET   DLOOP_3   
0CDE                DLOOP_3:   .SET   DLOOP_4   
0CDE                DLOOP_4:   .SET   DLOOP_5   
0CDE                DLOOP_5:   .SET   DLOOP_6   
0CDE                DLOOP_6:   .SET   DLOOP_7   
0CDE                DLOOP_7:   .SET   DLOOP_8   
0CDE                DLOOP_8:   .SET   DLOOP_9   
0CDE                DLOOP_9:   .SET   DLOOP_10   
0CDE                DLOOP_10:   .SET   DLOOP_11   
0CDE                DLOOP_11:   .SET   DLOOP_12   
0CDE                DLOOP_12:   .SET   0   
0CDE                          ;*Macro unroll:  _endcase
0CDE   C3 AC 0C               JP   STRUC_2 - 3   
0CE1                          ;*Macro unroll:  STRUC_FWD
0CE1                CUR_ADR:   .SET   $   
0CC4                          .ORG   STRUC_TOP - 2   
0CC4   E1 0C                  DW   CUR_ADR   
0CE1                          .ORG   CUR_ADR   
0CE1                          ;*Macro unroll:  STRUC_POP
0CE1                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CE1                STRUC_TOP:   .SET   STRUC_2   
0CE1                STRUC_2:   .SET   STRUC_3   
0CE1                STRUC_3:   .SET   STRUC_4   
0CE1                STRUC_4:   .SET   STRUC_5   
0CE1                STRUC_5:   .SET   STRUC_6   
0CE1                STRUC_6:   .SET   STRUC_7   
0CE1                STRUC_7:   .SET   STRUC_8   
0CE1                STRUC_8:   .SET   STRUC_9   
0CE1                STRUC_9:   .SET   STRUC_10   
0CE1                STRUC_10:   .SET   STRUC_11   
0CE1                STRUC_11:   .SET   STRUC_12   
0CE1                STRUC_12:   .SET   0   
0CE1   B9                     CP   C   ; = space?
0CE2                          ;*Macro unroll:  _case z
0CE2   CA E8 0C               JP   z,L_M_1599S128   
0CE5   C3 E5 0C               JP   $   
0CE8                          ;*Macro unroll:  STRUC_PUSH $
0CE8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CE8                STRUC_12:   .SET   STRUC_11   
0CE8                STRUC_11:   .SET   STRUC_10   
0CE8                STRUC_10:   .SET   STRUC_9   
0CE8                STRUC_9:   .SET   STRUC_8   
0CE8                STRUC_8:   .SET   STRUC_7   
0CE8                STRUC_7:   .SET   STRUC_6   
0CE8                STRUC_6:   .SET   STRUC_5   
0CE8                STRUC_5:   .SET   STRUC_4   
0CE8                STRUC_4:   .SET   STRUC_3   
0CE8                STRUC_3:   .SET   STRUC_2   
0CE8                STRUC_2:   .SET   STRUC_TOP   
0CE8                STRUC_TOP:   .SET   $   
0CE8                L_M_1599S128:      
0CE8                          ;*Macro unroll:  _endcase
0CE8   C3 AC 0C               JP   STRUC_2 - 3   
0CEB                          ;*Macro unroll:  STRUC_FWD
0CEB                CUR_ADR:   .SET   $   
0CE6                          .ORG   STRUC_TOP - 2   
0CE6   EB 0C                  DW   CUR_ADR   
0CEB                          .ORG   CUR_ADR   
0CEB                          ;*Macro unroll:  STRUC_POP
0CEB                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CEB                STRUC_TOP:   .SET   STRUC_2   
0CEB                STRUC_2:   .SET   STRUC_3   
0CEB                STRUC_3:   .SET   STRUC_4   
0CEB                STRUC_4:   .SET   STRUC_5   
0CEB                STRUC_5:   .SET   STRUC_6   
0CEB                STRUC_6:   .SET   STRUC_7   
0CEB                STRUC_7:   .SET   STRUC_8   
0CEB                STRUC_8:   .SET   STRUC_9   
0CEB                STRUC_9:   .SET   STRUC_10   
0CEB                STRUC_10:   .SET   STRUC_11   
0CEB                STRUC_11:   .SET   STRUC_12   
0CEB                STRUC_12:   .SET   0   
0CEB   FE 20                  CP   " "   ; < space?
0CED                          ;*Macro unroll:  _case c
0CED   DA F3 0C               JP   c,L_M_1602S132   
0CF0   C3 F0 0C               JP   $   
0CF3                          ;*Macro unroll:  STRUC_PUSH $
0CF3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CF3                STRUC_12:   .SET   STRUC_11   
0CF3                STRUC_11:   .SET   STRUC_10   
0CF3                STRUC_10:   .SET   STRUC_9   
0CF3                STRUC_9:   .SET   STRUC_8   
0CF3                STRUC_8:   .SET   STRUC_7   
0CF3                STRUC_7:   .SET   STRUC_6   
0CF3                STRUC_6:   .SET   STRUC_5   
0CF3                STRUC_5:   .SET   STRUC_4   
0CF3                STRUC_4:   .SET   STRUC_3   
0CF3                STRUC_3:   .SET   STRUC_2   
0CF3                STRUC_2:   .SET   STRUC_TOP   
0CF3                STRUC_TOP:   .SET   $   
0CF3                L_M_1602S132:      
0CF3                          ;*Macro unroll:  _endcase
0CF3   C3 AC 0C               JP   STRUC_2 - 3   
0CF6                          ;*Macro unroll:  STRUC_FWD
0CF6                CUR_ADR:   .SET   $   
0CF1                          .ORG   STRUC_TOP - 2   
0CF1   F6 0C                  DW   CUR_ADR   
0CF6                          .ORG   CUR_ADR   
0CF6                          ;*Macro unroll:  STRUC_POP
0CF6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CF6                STRUC_TOP:   .SET   STRUC_2   
0CF6                STRUC_2:   .SET   STRUC_3   
0CF6                STRUC_3:   .SET   STRUC_4   
0CF6                STRUC_4:   .SET   STRUC_5   
0CF6                STRUC_5:   .SET   STRUC_6   
0CF6                STRUC_6:   .SET   STRUC_7   
0CF6                STRUC_7:   .SET   STRUC_8   
0CF6                STRUC_8:   .SET   STRUC_9   
0CF6                STRUC_9:   .SET   STRUC_10   
0CF6                STRUC_10:   .SET   STRUC_11   
0CF6                STRUC_11:   .SET   STRUC_12   
0CF6                STRUC_12:   .SET   0   
0CF6                             ; default case
0CF6                          ;*Macro unroll:  _break
0CF6   C3 A4 0C               JP   DLOOP_TOP - 3   
0CF9                          ;*Macro unroll:  _endswitch
0CF9                          ;*Macro unroll:  STRUC_FWD
0CF9                CUR_ADR:   .SET   $   
0CAD                          .ORG   STRUC_TOP - 2   
0CAD   F9 0C                  DW   CUR_ADR   
0CF9                          .ORG   CUR_ADR   
0CF9                          ;*Macro unroll:  STRUC_POP
0CF9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CF9                STRUC_TOP:   .SET   STRUC_2   
0CF9                STRUC_2:   .SET   STRUC_3   
0CF9                STRUC_3:   .SET   STRUC_4   
0CF9                STRUC_4:   .SET   STRUC_5   
0CF9                STRUC_5:   .SET   STRUC_6   
0CF9                STRUC_6:   .SET   STRUC_7   
0CF9                STRUC_7:   .SET   STRUC_8   
0CF9                STRUC_8:   .SET   STRUC_9   
0CF9                STRUC_9:   .SET   STRUC_10   
0CF9                STRUC_10:   .SET   STRUC_11   
0CF9                STRUC_11:   .SET   STRUC_12   
0CF9                STRUC_12:   .SET   0   
0CF9                          ;*Macro unroll:  _enddo
0CF9   C3 A7 0C               JP   DLOOP_TOP   
0CFC                          ;*Macro unroll:  DLOOP_FWD
0CFC                CUR_ADR:   .SET   $   
0CA5                          .ORG   DLOOP_TOP - 2   
0CA5   FC 0C                  DW   CUR_ADR   
0CFC                          .ORG   CUR_ADR   
0CFC                          ;*Macro unroll:  DLOOP_POP
0CFC                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CFC                DLOOP_TOP:   .SET   DLOOP_2   
0CFC                DLOOP_2:   .SET   DLOOP_3   
0CFC                DLOOP_3:   .SET   DLOOP_4   
0CFC                DLOOP_4:   .SET   DLOOP_5   
0CFC                DLOOP_5:   .SET   DLOOP_6   
0CFC                DLOOP_6:   .SET   DLOOP_7   
0CFC                DLOOP_7:   .SET   DLOOP_8   
0CFC                DLOOP_8:   .SET   DLOOP_9   
0CFC                DLOOP_9:   .SET   DLOOP_10   
0CFC                DLOOP_10:   .SET   DLOOP_11   
0CFC                DLOOP_11:   .SET   DLOOP_12   
0CFC                DLOOP_12:   .SET   0   
0CFC   06 00                  LD   B,0   
0CFE   4F                     LD   C,A   
0CFF   C9                     RET      
0D00                XWORDREAD:      ; delim addr char -- c-addr
0D00   79                     LD   A,C   
0D01                          ;*Macro unroll:  ppop0 B,C
0D01   DD 2B                  DEC   IX   
0D03   DD 46 00               LD   B,(IX+0)   
0D06   DD 2B                  DEC   IX   
0D08   DD 4E 00               LD   C,(IX+0)   
0D0B                          ;*Macro unroll:  ppop H,L
0D0B   60                     LD   H,B   
0D0C   69                     LD   L,C   
0D0D                          ;*Macro unroll:  ppop0 B,C
0D0D   DD 2B                  DEC   IX   
0D0F   DD 46 00               LD   B,(IX+0)   
0D12   DD 2B                  DEC   IX   
0D14   DD 4E 00               LD   C,(IX+0)   
0D17                          ;*Macro unroll:  ppop D,E
0D17   50                     LD   D,B   
0D18   59                     LD   E,C   
0D19                          ;*Macro unroll:  ppop0 B,C
0D19   DD 2B                  DEC   IX   
0D1B   DD 46 00               LD   B,(IX+0)   
0D1E   DD 2B                  DEC   IX   
0D20   DD 4E 00               LD   C,(IX+0)   
0D23   16 00                  LD   D,0   
0D25   B7                     OR   A   
0D26                          ;*Macro unroll:  _if nz
0D26   C2 2C 0D               JP   nz,L_M_1618S151   
0D29   C3 29 0D               JP   $   
0D2C                          ;*Macro unroll:  STRUC_PUSH $
0D2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0D2C                STRUC_12:   .SET   STRUC_11   
0D2C                STRUC_11:   .SET   STRUC_10   
0D2C                STRUC_10:   .SET   STRUC_9   
0D2C                STRUC_9:   .SET   STRUC_8   
0D2C                STRUC_8:   .SET   STRUC_7   
0D2C                STRUC_7:   .SET   STRUC_6   
0D2C                STRUC_6:   .SET   STRUC_5   
0D2C                STRUC_5:   .SET   STRUC_4   
0D2C                STRUC_4:   .SET   STRUC_3   
0D2C                STRUC_3:   .SET   STRUC_2   
0D2C                STRUC_2:   .SET   STRUC_TOP   
0D2C                STRUC_TOP:   .SET   $   
0D2C                L_M_1618S151:      
0D2C   E5                     PUSH   HL   ; save a copy of HL
0D2D   23                     INC   HL   ; move to leave space for length byte
0D2E   43                     LD   B,E   
0D2F                          ;*Macro unroll:  _do
0D2F   18 03                  JR   L_M_1622S155   
0D31   C3 31 0D               JP   $   
0D34                          ;*Macro unroll:  DLOOP_PUSH $
0D34                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0D34                DLOOP_12:   .SET   DLOOP_11   
0D34                DLOOP_11:   .SET   DLOOP_10   
0D34                DLOOP_10:   .SET   DLOOP_9   
0D34                DLOOP_9:   .SET   DLOOP_8   
0D34                DLOOP_8:   .SET   DLOOP_7   
0D34                DLOOP_7:   .SET   DLOOP_6   
0D34                DLOOP_6:   .SET   DLOOP_5   
0D34                DLOOP_5:   .SET   DLOOP_4   
0D34                DLOOP_4:   .SET   DLOOP_3   
0D34                DLOOP_3:   .SET   DLOOP_2   
0D34                DLOOP_2:   .SET   DLOOP_TOP   
0D34                DLOOP_TOP:   .SET   $   
0D34                L_M_1622S155:      
0D34   77                     LD   (HL),A   ; add character to return lineBuf
0D35   23                     INC   HL   
0D36   14                     INC   D   
0D37   CD F9 11               CALL   getKey   ; get next key
0D3A   B9                     CP   C   ; = delim?
0D3B                          ;*Macro unroll:  _until z
0D3B   CA 31 0D               JP   z,DLOOP_TOP - 3   
0D3E                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0D3E                CUR_ADR:   .SET   $   ; needed?
0D32                          .ORG   DLOOP_TOP - 2   
0D32   3E 0D                  DW   CUR_ADR   
0D3E                          .ORG   CUR_ADR   
0D3E   FE 20                  CP   " "   ; < space? i.e. control chars
0D40                          ;*Macro unroll:  _until c
0D40   DA 31 0D               JP   c,DLOOP_TOP - 3   
0D43                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0D43                CUR_ADR:   .SET   $   ; needed?
0D32                          .ORG   DLOOP_TOP - 2   
0D32   43 0D                  DW   CUR_ADR   
0D43                          .ORG   CUR_ADR   
0D43                          ;*Macro unroll:  _djnz
0D43   10 EF                  DJNZ   DLOOP_TOP   
0D45                          ;*Macro unroll:  DLOOP_FWD
0D45                CUR_ADR:   .SET   $   
0D32                          .ORG   DLOOP_TOP - 2   
0D32   45 0D                  DW   CUR_ADR   
0D45                          .ORG   CUR_ADR   
0D45                          ;*Macro unroll:  DLOOP_POP
0D45                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0D45                DLOOP_TOP:   .SET   DLOOP_2   
0D45                DLOOP_2:   .SET   DLOOP_3   
0D45                DLOOP_3:   .SET   DLOOP_4   
0D45                DLOOP_4:   .SET   DLOOP_5   
0D45                DLOOP_5:   .SET   DLOOP_6   
0D45                DLOOP_6:   .SET   DLOOP_7   
0D45                DLOOP_7:   .SET   DLOOP_8   
0D45                DLOOP_8:   .SET   DLOOP_9   
0D45                DLOOP_9:   .SET   DLOOP_10   
0D45                DLOOP_10:   .SET   DLOOP_11   
0D45                DLOOP_11:   .SET   DLOOP_12   
0D45                DLOOP_12:   .SET   0   
0D45   E1                     POP   HL   ; restore HL
0D46                          ;*Macro unroll:  _endif
0D46                          ;*Macro unroll:  STRUC_FWD
0D46                CUR_ADR:   .SET   $   
0D2A                          .ORG   STRUC_TOP - 2   
0D2A   46 0D                  DW   CUR_ADR   
0D46                          .ORG   CUR_ADR   
0D46                          ;*Macro unroll:  STRUC_POP
0D46                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0D46                STRUC_TOP:   .SET   STRUC_2   
0D46                STRUC_2:   .SET   STRUC_3   
0D46                STRUC_3:   .SET   STRUC_4   
0D46                STRUC_4:   .SET   STRUC_5   
0D46                STRUC_5:   .SET   STRUC_6   
0D46                STRUC_6:   .SET   STRUC_7   
0D46                STRUC_7:   .SET   STRUC_8   
0D46                STRUC_8:   .SET   STRUC_9   
0D46                STRUC_9:   .SET   STRUC_10   
0D46                STRUC_10:   .SET   STRUC_11   
0D46                STRUC_11:   .SET   STRUC_12   
0D46                STRUC_12:   .SET   0   
0D46   72                     LD   (HL),D   ; write length
0D47                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0D47   4D                     LD   C,L   ; TOS = str ptr
0D48   44                     LD   B,H   
0D49   C9                     RET      
0D4A                INTERPTOKEN:      ; ptr len --
0D4A   CF                     RST   $08   
0D4B   27 13 27 13 CA 05      DW   over,over,find   ; ptr len -- ptr len addr
0D51   DF 12 87 03            DW   DUPP,ZNEQU   
0D55                          ;*Macro unroll:  cIf
0D55   EF 07 00 00            DW   QBRAN,0   
0D59                          ;*Macro unroll:  CPL_PUSH $
0D59                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D59                CPL_10:   .SET   CPL_9   
0D59                CPL_9:    .SET   CPL_8   
0D59                CPL_8:    .SET   CPL_7   
0D59                CPL_7:    .SET   CPL_6   
0D59                CPL_6:    .SET   CPL_5   
0D59                CPL_5:    .SET   CPL_4   
0D59                CPL_4:    .SET   CPL_3   
0D59                CPL_3:    .SET   CPL_2   
0D59                CPL_2:    .SET   CPL_TOP   
0D59                CPL_TOP:   .SET   $   
0D59   66 0D                  DW   interpWord   
0D5B                          ;*Macro unroll:  cElse
0D5B   0C 08 00 00            DW   BRAN,0   
0D5F                          ;*Macro unroll:  cBRANCH_FWD
0D5F                CUR_ADR:   .SET   $   
0D57                          .ORG   CPL_TOP - 2   
0D57   5F 0D                  DW   CUR_ADR   
0D5F                          .ORG   CUR_ADR   
0D5F                CPL_TOP:   .SET   $   
0D5F   AA 0D                  DW   interpLiteral   
0D61                          ;*Macro unroll:  cEndif
0D61                          ;*Macro unroll:  cBRANCH_FWD
0D61                CUR_ADR:   .SET   $   
0D5D                          .ORG   CPL_TOP - 2   
0D5D   61 0D                  DW   CUR_ADR   
0D61                          .ORG   CUR_ADR   
0D61                          ;*Macro unroll:  CPL_POP
0D61                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D61                CPL_TOP:   .SET   CPL_2   
0D61                CPL_2:    .SET   CPL_3   
0D61                CPL_3:    .SET   CPL_4   
0D61                CPL_4:    .SET   CPL_5   
0D61                CPL_5:    .SET   CPL_6   
0D61                CPL_6:    .SET   CPL_7   
0D61                CPL_7:    .SET   CPL_8   
0D61                CPL_8:    .SET   CPL_9   
0D61                CPL_9:    .SET   CPL_10   
0D61                CPL_10:   .SET   0   
0D61                          ;*Macro unroll:  EXIT
0D61   30 0F                  DW   exit   
0D63   C3 1F 0F               JP   enter   
0D66                INTERPWORD:      ; ptr len addr --
0D66   CF                     RST   $08   ; enter forth
0D67   F3 12 13 13 F3 12 13 13 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0D6F   DF 12 5E 12 02 00 E8 00 90 0F DW   DUPP,LIT,2,plus,CAT   ; ( headptr -- headptr flags ) add 2 to headptr
0D79   5E 12 80 00 A0 00      DW   LIT,IMMED,ANDD   ; ( headptr flags -- headptr immedflag )
0D7F   72 03                  DW   zEqual   
0D81                          ;*Macro unroll:  cif
0D81   EF 07 00 00            DW   QBRAN,0   
0D85                          ;*Macro unroll:  CPL_PUSH $
0D85                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D85                CPL_10:   .SET   CPL_9   
0D85                CPL_9:    .SET   CPL_8   
0D85                CPL_8:    .SET   CPL_7   
0D85                CPL_7:    .SET   CPL_6   
0D85                CPL_6:    .SET   CPL_5   
0D85                CPL_5:    .SET   CPL_4   
0D85                CPL_4:    .SET   CPL_3   
0D85                CPL_3:    .SET   CPL_2   
0D85                CPL_2:    .SET   CPL_TOP   
0D85                CPL_TOP:   .SET   $   
0D85   CA 0B                  DW   tcfa   ; ( headptr -- xt )
0D87   40 09 63 0F            DW   state,AT   
0D8B   5A 09 63 0F            DW   nesting,AT   
0D8F   B8 00                  DW   ORR   
0D91                          ;*Macro unroll:  cif
0D91   EF 07 00 00            DW   QBRAN,0   
0D95                          ;*Macro unroll:  CPL_PUSH $
0D95                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D95                CPL_10:   .SET   CPL_9   
0D95                CPL_9:    .SET   CPL_8   
0D95                CPL_8:    .SET   CPL_7   
0D95                CPL_7:    .SET   CPL_6   
0D95                CPL_6:    .SET   CPL_5   
0D95                CPL_5:    .SET   CPL_4   
0D95                CPL_4:    .SET   CPL_3   
0D95                CPL_3:    .SET   CPL_2   
0D95                CPL_2:    .SET   CPL_TOP   
0D95                CPL_TOP:   .SET   $   
0D95   08 10                  DW   comma   ; compile xt
0D97                          ;*Macro unroll:  cElse
0D97   0C 08 00 00            DW   BRAN,0   
0D9B                          ;*Macro unroll:  cBRANCH_FWD
0D9B                CUR_ADR:   .SET   $   
0D93                          .ORG   CPL_TOP - 2   
0D93   9B 0D                  DW   CUR_ADR   
0D9B                          .ORG   CUR_ADR   
0D9B                CPL_TOP:   .SET   $   
0D9B   EA 0B                  DW   execute   ; execute xt
0D9D                          ;*Macro unroll:  cendif
0D9D                          ;*Macro unroll:  cBRANCH_FWD
0D9D                CUR_ADR:   .SET   $   
0D99                          .ORG   CPL_TOP - 2   
0D99   9D 0D                  DW   CUR_ADR   
0D9D                          .ORG   CUR_ADR   
0D9D                          ;*Macro unroll:  CPL_POP
0D9D                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D9D                CPL_TOP:   .SET   CPL_2   
0D9D                CPL_2:    .SET   CPL_3   
0D9D                CPL_3:    .SET   CPL_4   
0D9D                CPL_4:    .SET   CPL_5   
0D9D                CPL_5:    .SET   CPL_6   
0D9D                CPL_6:    .SET   CPL_7   
0D9D                CPL_7:    .SET   CPL_8   
0D9D                CPL_8:    .SET   CPL_9   
0D9D                CPL_9:    .SET   CPL_10   
0D9D                CPL_10:   .SET   0   
0D9D                          ;*Macro unroll:  cElse
0D9D   0C 08 00 00            DW   BRAN,0   
0DA1                          ;*Macro unroll:  cBRANCH_FWD
0DA1                CUR_ADR:   .SET   $   
0D83                          .ORG   CPL_TOP - 2   
0D83   A1 0D                  DW   CUR_ADR   
0DA1                          .ORG   CUR_ADR   
0DA1                CPL_TOP:   .SET   $   
0DA1   CA 0B EA 0B            DW   tcfa,execute   ; execute xt
0DA5                          ;*Macro unroll:  cendif
0DA5                          ;*Macro unroll:  cBRANCH_FWD
0DA5                CUR_ADR:   .SET   $   
0D9F                          .ORG   CPL_TOP - 2   
0D9F   A5 0D                  DW   CUR_ADR   
0DA5                          .ORG   CUR_ADR   
0DA5                          ;*Macro unroll:  CPL_POP
0DA5                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DA5                CPL_TOP:   .SET   CPL_2   
0DA5                CPL_2:    .SET   CPL_3   
0DA5                CPL_3:    .SET   CPL_4   
0DA5                CPL_4:    .SET   CPL_5   
0DA5                CPL_5:    .SET   CPL_6   
0DA5                CPL_6:    .SET   CPL_7   
0DA5                CPL_7:    .SET   CPL_8   
0DA5                CPL_8:    .SET   CPL_9   
0DA5                CPL_9:    .SET   CPL_10   
0DA5                CPL_10:   .SET   0   
0DA5                          ;*Macro unroll:  EXIT
0DA5   30 0F                  DW   exit   
0DA7   C3 1F 0F               JP   enter   
0DAA                INTERPLITERAL:      ; ptr len addr --
0DAA   CF                     RST   $08   ; enter forth
0DAB   13 13                  DW   drop   ; ptr len addr - ptr len
0DAD   51 0B 72 03            DW   number,zEqual   ; parse to number
0DB1                          ;*Macro unroll:  cif
0DB1   EF 07 00 00            DW   QBRAN,0   
0DB5                          ;*Macro unroll:  CPL_PUSH $
0DB5                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DB5                CPL_10:   .SET   CPL_9   
0DB5                CPL_9:    .SET   CPL_8   
0DB5                CPL_8:    .SET   CPL_7   
0DB5                CPL_7:    .SET   CPL_6   
0DB5                CPL_6:    .SET   CPL_5   
0DB5                CPL_5:    .SET   CPL_4   
0DB5                CPL_4:    .SET   CPL_3   
0DB5                CPL_3:    .SET   CPL_2   
0DB5                CPL_2:    .SET   CPL_TOP   
0DB5                CPL_TOP:   .SET   $   
0DB5   40 09 63 0F            DW   state,AT   
0DB9   5A 09 63 0F            DW   nesting,AT   
0DBD   B8 00                  DW   ORR   
0DBF                          ;*Macro unroll:  cIf
0DBF   EF 07 00 00            DW   QBRAN,0   
0DC3                          ;*Macro unroll:  CPL_PUSH $
0DC3                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DC3                CPL_10:   .SET   CPL_9   
0DC3                CPL_9:    .SET   CPL_8   
0DC3                CPL_8:    .SET   CPL_7   
0DC3                CPL_7:    .SET   CPL_6   
0DC3                CPL_6:    .SET   CPL_5   
0DC3                CPL_5:    .SET   CPL_4   
0DC3                CPL_4:    .SET   CPL_3   
0DC3                CPL_3:    .SET   CPL_2   
0DC3                CPL_2:    .SET   CPL_TOP   
0DC3                CPL_TOP:   .SET   $   
0DC3   5E 12 5E 12            DW   LIT,LIT   ; (val -- val "LIT" )
0DC7   08 10 08 10            DW   comma,comma   ; compile "LIT" val
0DCB                          ;*Macro unroll:  cEndIf
0DCB                          ;*Macro unroll:  cBRANCH_FWD
0DCB                CUR_ADR:   .SET   $   
0DC1                          .ORG   CPL_TOP - 2   
0DC1   CB 0D                  DW   CUR_ADR   
0DCB                          .ORG   CUR_ADR   
0DCB                          ;*Macro unroll:  CPL_POP
0DCB                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DCB                CPL_TOP:   .SET   CPL_2   
0DCB                CPL_2:    .SET   CPL_3   
0DCB                CPL_3:    .SET   CPL_4   
0DCB                CPL_4:    .SET   CPL_5   
0DCB                CPL_5:    .SET   CPL_6   
0DCB                CPL_6:    .SET   CPL_7   
0DCB                CPL_7:    .SET   CPL_8   
0DCB                CPL_8:    .SET   CPL_9   
0DCB                CPL_9:    .SET   CPL_10   
0DCB                CPL_10:   .SET   0   
0DCB                          ;*Macro unroll:  cElse
0DCB   0C 08 00 00            DW   BRAN,0   
0DCF                          ;*Macro unroll:  cBRANCH_FWD
0DCF                CUR_ADR:   .SET   $   
0DB3                          .ORG   CPL_TOP - 2   
0DB3   CF 0D                  DW   CUR_ADR   
0DCF                          .ORG   CUR_ADR   
0DCF                CPL_TOP:   .SET   $   
0DCF   13 13                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0DD1   91 13                  DW   litstr   ; err != 0, parse error
0DD3   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0DE2   04 0E                  DW   type   
0DE4                          ;*Macro unroll:  cEndIf
0DE4                          ;*Macro unroll:  cBRANCH_FWD
0DE4                CUR_ADR:   .SET   $   
0DCD                          .ORG   CPL_TOP - 2   
0DCD   E4 0D                  DW   CUR_ADR   
0DE4                          .ORG   CUR_ADR   
0DE4                          ;*Macro unroll:  CPL_POP
0DE4                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DE4                CPL_TOP:   .SET   CPL_2   
0DE4                CPL_2:    .SET   CPL_3   
0DE4                CPL_3:    .SET   CPL_4   
0DE4                CPL_4:    .SET   CPL_5   
0DE4                CPL_5:    .SET   CPL_6   
0DE4                CPL_6:    .SET   CPL_7   
0DE4                CPL_7:    .SET   CPL_8   
0DE4                CPL_8:    .SET   CPL_9   
0DE4                CPL_9:    .SET   CPL_10   
0DE4                CPL_10:   .SET   0   
0DE4                          ;*Macro unroll:  EXIT
0DE4   30 0F                  DW   exit   
0DE6   C3 1F 0F               JP   enter   
0DE9                NESTPLUS:      
0DE9   2A 57 24               LD   HL,(VAR_NESTING)   
0DEC   23                     INC   HL   
0DED   22 57 24               LD   (VAR_NESTING),HL   
0DF0                          ;*Macro unroll:  NEXT
0DF0   C3 1F 0F               JP   enter   
0DF3                NESTMINUS:      
0DF3   2A 57 24               LD   HL,(VAR_NESTING)   
0DF6   2B                     DEC   HL   
0DF7   22 57 24               LD   (VAR_NESTING),HL   
0DFA                          ;*Macro unroll:  NEXT
0DFA   C3 1F 0F               JP   enter   
0DFD                          ;*Macro unroll: CODE "type",4,0,TYPE             ; ( str len -- )
0DFD                HEADER_TYPE:      ; ( str len -- )
0DFD   5B 0C                  DW   link   
0DFF                LINK:     .SET   HEADER_TYPE   
0DFF   04                     DB   0 + 4   
0E00   74 79 70 65            DB   "type"   
0E04                TYPE:        
0E04                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
0E04   DD 2B                  DEC   IX   ; DE = str BC = length
0E06   DD 56 00               LD   D,(IX+0)   
0E09   DD 2B                  DEC   IX   
0E0B   DD 5E 00               LD   E,(IX+0)   
0E0E   CD 3D 12               CALL   printStr   
0E11                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0E11   DD 2B                  DEC   IX   ; clear TOS
0E13   DD 46 00               LD   B,(IX+0)   
0E16   DD 2B                  DEC   IX   
0E18   DD 4E 00               LD   C,(IX+0)   
0E1B                          ;*Macro unroll:  NEXT
0E1B   C3 1F 0F               JP   enter   
0E1E                          ;*Macro unroll: CODE "cr",2,0,cr                 ; ( -- )
0E1E                HEADER_CR:      ; ( -- )
0E1E   FD 0D                  DW   link   
0E20                LINK:     .SET   HEADER_cr   
0E20   02                     DB   0 + 2   
0E21   63 72                  DB   "cr"   
0E23                CR:          
0E23   CD 47 12               CALL   printcr   
0E26                          ;*Macro unroll:  NEXT
0E26   C3 1F 0F               JP   enter   
0E29                          ;*Macro unroll:  CODE "accept",6,0,ACCEPT              ; ( addr max -- len )
0E29                HEADER_ACCEPT:      ; ( addr max -- len )
0E29   1E 0E                  DW   link   
0E2B                LINK:     .SET   HEADER_ACCEPT   
0E2B   06                     DB   0 + 6   
0E2C   61 63 63 65 70 74      DB   "accept"   
0E32                ACCEPT:      
0E32                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
0E32   50                     LD   D,B   ; max - up to 255
0E33   59                     LD   E,C   
0E34                          ;*Macro unroll:  ppop0 B,C
0E34   DD 2B                  DEC   IX   
0E36   DD 46 00               LD   B,(IX+0)   
0E39   DD 2B                  DEC   IX   
0E3B   DD 4E 00               LD   C,(IX+0)   
0E3E                          ;*Macro unroll: 	ppop0 H,L                          ; addr
0E3E   DD 2B                  DEC   IX   ; addr
0E40   DD 66 00               LD   H,(IX+0)   
0E43   DD 2B                  DEC   IX   
0E45   DD 6E 00               LD   L,(IX+0)   
0E48   CD 69 11               CALL   getline   
0E4B                          ;*Macro unroll:  NEXT
0E4B   C3 1F 0F               JP   enter   
0E4E                          ;*Macro unroll: CODE "key",3,0,KEY                ; ( -- c )
0E4E                HEADER_KEY:      ; ( -- c )
0E4E   29 0E                  DW   link   
0E50                LINK:     .SET   HEADER_KEY   
0E50   03                     DB   0 + 3   
0E51   6B 65 79               DB   "key"   
0E54                KEY:         
0E54   CD F9 11               CALL   getKey   
0E57   06 00                  LD   b,0   
0E59   4F                     LD   c,a   
0E5A                          ;*Macro unroll:  NEXT
0E5A   C3 1F 0F               JP   enter   
0E5D                          ;*Macro unroll: CODE "emit",4,0,EMIT              ; print the character on the stack
0E5D                HEADER_EMIT:      ; print the character on the stack
0E5D   4E 0E                  DW   link   
0E5F                LINK:     .SET   HEADER_EMIT   
0E5F   04                     DB   0 + 4   
0E60   65 6D 69 74            DB   "emit"   
0E64                EMIT:        
0E64   79                     LD   A,C   ; (c -- )
0E65   CD 4F 11               CALL   putc   
0E68                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
0E68   DD 2B                  DEC   IX   ; clear stack
0E6A   DD 46 00               LD   B,(IX+0)   
0E6D   DD 2B                  DEC   IX   
0E6F   DD 4E 00               LD   C,(IX+0)   
0E72                          ;*Macro unroll:  NEXT
0E72   C3 1F 0F               JP   enter   
0E75                          ;*Macro unroll: CODE "key?",4,0,QKEY              ; ( -- c )
0E75                HEADER_QKEY:      ; ( -- c )
0E75   5D 0E                  DW   link   
0E77                LINK:     .SET   HEADER_QKEY   
0E77   04                     DB   0 + 4   
0E78   6B 65 79 3F            DB   "key?"   
0E7C                QKEY:        
0E7C                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
0E7C   DD 71 00               LD   (IX+0),C   ; save TOS
0E7F   DD 23                  INC   IX   
0E81   DD 70 00               LD   (IX+0),B   
0E84   DD 23                  INC   IX   
0E86   CD 63 11               CALL   inputReady   
0E89   01 01 00               LD   BC,1   ; TOS = true
0E8C                          ;*Macro unroll:  _if z
0E8C   CA 92 0E               JP   z,L_M_1723S33   
0E8F   C3 8F 0E               JP   $   
0E92                          ;*Macro unroll:  STRUC_PUSH $
0E92                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0E92                STRUC_12:   .SET   STRUC_11   
0E92                STRUC_11:   .SET   STRUC_10   
0E92                STRUC_10:   .SET   STRUC_9   
0E92                STRUC_9:   .SET   STRUC_8   
0E92                STRUC_8:   .SET   STRUC_7   
0E92                STRUC_7:   .SET   STRUC_6   
0E92                STRUC_6:   .SET   STRUC_5   
0E92                STRUC_5:   .SET   STRUC_4   
0E92                STRUC_4:   .SET   STRUC_3   
0E92                STRUC_3:   .SET   STRUC_2   
0E92                STRUC_2:   .SET   STRUC_TOP   
0E92                STRUC_TOP:   .SET   $   
0E92                L_M_1723S33:      
0E92   01 00 00               LD   BC,0   ; TOS = false
0E95                          ;*Macro unroll:  _endif
0E95                          ;*Macro unroll:  STRUC_FWD
0E95                CUR_ADR:   .SET   $   
0E90                          .ORG   STRUC_TOP - 2   
0E90   95 0E                  DW   CUR_ADR   
0E95                          .ORG   CUR_ADR   
0E95                          ;*Macro unroll:  STRUC_POP
0E95                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0E95                STRUC_TOP:   .SET   STRUC_2   
0E95                STRUC_2:   .SET   STRUC_3   
0E95                STRUC_3:   .SET   STRUC_4   
0E95                STRUC_4:   .SET   STRUC_5   
0E95                STRUC_5:   .SET   STRUC_6   
0E95                STRUC_6:   .SET   STRUC_7   
0E95                STRUC_7:   .SET   STRUC_8   
0E95                STRUC_8:   .SET   STRUC_9   
0E95                STRUC_9:   .SET   STRUC_10   
0E95                STRUC_10:   .SET   STRUC_11   
0E95                STRUC_11:   .SET   STRUC_12   
0E95                STRUC_12:   .SET   0   
0E95                          ;*Macro unroll:  NEXT
0E95   C3 1F 0F               JP   enter   
0E98                          ;*Macro unroll: CODE "bl",2,0,bl
0E98                HEADER_BL:      
0E98   75 0E                  DW   link   
0E9A                LINK:     .SET   HEADER_bl   
0E9A   02                     DB   0 + 2   
0E9B   62 6C                  DB   "bl"   
0E9D                BL:          
0E9D                          ;*Macro unroll:  ENTER
0E9D   CF                     RST   $08   
0E9E   5E 12 20 00            DW   LIT,$20   ; compile branch on zero
0EA2                          ;*Macro unroll:  EXIT
0EA2   30 0F                  DW   exit   
0EA4   C3 1F 0F               JP   enter   
0EA7                          ;*Macro unroll: CODE "print",5,0,PRINT
0EA7                HEADER_PRINT:      
0EA7   98 0E                  DW   link   
0EA9                LINK:     .SET   HEADER_PRINT   
0EA9   05                     DB   0 + 5   
0EAA   70 72 69 6E 74         DB   "print"   
0EAF                PRINT:       
0EAF                          ;*Macro unroll:  ppop D,E
0EAF   50                     LD   D,B   
0EB0   59                     LD   E,C   
0EB1                          ;*Macro unroll:  ppop0 B,C
0EB1   DD 2B                  DEC   IX   
0EB3   DD 46 00               LD   B,(IX+0)   
0EB6   DD 2B                  DEC   IX   
0EB8   DD 4E 00               LD   C,(IX+0)   
0EBB   CD 2E 12               CALL   printPStr   
0EBE                          ;*Macro unroll:  NEXT
0EBE   C3 1F 0F               JP   enter   
0EC1                             ; ." print string"
0EC1                          ;*Macro unroll: CODE {".",$22},2,IMMED,dotquote
0EC1                HEADER_DOTQUOTE:      
0EC1   A7 0E                  DW   link   
0EC3                LINK:     .SET   HEADER_dotquote   
0EC3   82                     DB   IMMED + 2   
0EC4   2E 22                  DB   ".",$22   
0EC6                DOTQUOTE:      
0EC6                          ;*Macro unroll:  ENTER
0EC6   CF                     RST   $08   
0EC7   C8 13                  DW   qt   
0EC9   40 09 63 0F 72 03      DW   state,AT,zequal   
0ECF                          ;*Macro unroll:  cIf
0ECF   EF 07 00 00            DW   QBRAN,0   
0ED3                          ;*Macro unroll:  CPL_PUSH $
0ED3                CPL_COUNT:   .SET   CPL_COUNT + 1   
0ED3                CPL_10:   .SET   CPL_9   
0ED3                CPL_9:    .SET   CPL_8   
0ED3                CPL_8:    .SET   CPL_7   
0ED3                CPL_7:    .SET   CPL_6   
0ED3                CPL_6:    .SET   CPL_5   
0ED3                CPL_5:    .SET   CPL_4   
0ED3                CPL_4:    .SET   CPL_3   
0ED3                CPL_3:    .SET   CPL_2   
0ED3                CPL_2:    .SET   CPL_TOP   
0ED3                CPL_TOP:   .SET   $   
0ED3   04 0E                  DW   type   
0ED5                          ;*Macro unroll:  cElse
0ED5   0C 08 00 00            DW   BRAN,0   
0ED9                          ;*Macro unroll:  cBRANCH_FWD
0ED9                CUR_ADR:   .SET   $   
0ED1                          .ORG   CPL_TOP - 2   
0ED1   D9 0E                  DW   CUR_ADR   
0ED9                          .ORG   CUR_ADR   
0ED9                CPL_TOP:   .SET   $   
0ED9   5E 12 04 0E 08 10      DW   LIT,type,comma   
0EDF                          ;*Macro unroll:  cEndIf
0EDF                          ;*Macro unroll:  cBRANCH_FWD
0EDF                CUR_ADR:   .SET   $   
0ED7                          .ORG   CPL_TOP - 2   
0ED7   DF 0E                  DW   CUR_ADR   
0EDF                          .ORG   CUR_ADR   
0EDF                          ;*Macro unroll:  CPL_POP
0EDF                CPL_COUNT:   .SET   CPL_COUNT - 1   
0EDF                CPL_TOP:   .SET   CPL_2   
0EDF                CPL_2:    .SET   CPL_3   
0EDF                CPL_3:    .SET   CPL_4   
0EDF                CPL_4:    .SET   CPL_5   
0EDF                CPL_5:    .SET   CPL_6   
0EDF                CPL_6:    .SET   CPL_7   
0EDF                CPL_7:    .SET   CPL_8   
0EDF                CPL_8:    .SET   CPL_9   
0EDF                CPL_9:    .SET   CPL_10   
0EDF                CPL_10:   .SET   0   
0EDF                          ;*Macro unroll:  EXIT
0EDF   30 0F                  DW   exit   
0EE1   C3 1F 0F               JP   enter   
0EE4                INITFORTH:      
0EE4   DD 21 00 21            LD   IX,data_stack   ; initialise the param stack.
0EE8   FD 21 1F 0F            LD   IY,enter   
0EEC   DD 22 59 24            LD   (var_sp0),IX   
0EF0   01 00 00               LD   BC,0   ; tos
0EF3   21 00 00               LD   HL,0   
0EF6   22 53 24               LD   (var_intp_stop),HL   
0EF9   22 4F 24               LD   (is_literal),HL   
0EFC   22 57 24               LD   (var_nesting),HL   
0EFF   22 55 24               LD   (var_state),HL   
0F02   21 0A 00               LD   HL,10   
0F05   22 5B 24               LD   (var_base),HL   
0F08   21 61 24               LD   HL,start_user   
0F0B   22 51 24               LD   (var_here),HL   
0F0E   21 FD 14               LD   HL,header_latest   
0F11   22 5F 24               LD   (var_latest),HL   
0F14   22 5D 24               LD   (var_latest_str),HL   
0F17   3E 96                  LD   A,rts_low   
0F19   D3 80                  OUT   ($80),A   ; initialise acia
0F1B   ED 56                  IM   1   
0F1D   FB                     EI      
0F1E   C9                     RET      
0F1F                ENTER:       
0F1F   E1                     POP   HL   
0F20                ENTER1:      
0F20   5E                     LD   E,(HL)   
0F21   23                     INC   HL   
0F22   56                     LD   D,(HL)   
0F23   23                     INC   HL   
0F24   E5                     PUSH   HL   
0F25   EB                     EX   DE,HL   
0F26   E9                     JP   (HL)   
0F27                FORTH:       ; for calling forth words from assembly
0F27   21 4D 24               LD   HL,exitAddr   
0F2A   E3                     EX   (SP),HL   
0F2B   22 4D 24               LD   (exitAddr),HL   
0F2E   EB                     EX   DE,HL   
0F2F   E9                     JP   (HL)   
0F30                EXIT:        
0F30   E1                     POP   HL   
0F31   FD E9                  JP   (IY)   
0F33                EXIT_FORTH:      
0F33   C9                     RET      
0F34                          ;*Macro unroll: CODE "noop",4,0,noop
0F34                HEADER_NOOP:      
0F34   C1 0E                  DW   link   
0F36                LINK:     .SET   HEADER_noop   
0F36   04                     DB   0 + 4   
0F37   6E 6F 6F 70            DB   "noop"   
0F3B                NOOP:        
0F3B                          ;*Macro unroll:  NEXT
0F3B   C3 1F 0F               JP   enter   
0F3E                             ; !        x a-addr --   STORE cell in memory
0F3E                          ;*Macro unroll: CODE "!",1,0,STORE
0F3E                HEADER_STORE:      
0F3E   34 0F                  DW   link   
0F40                LINK:     .SET   HEADER_STORE   
0F40   01                     DB   0 + 1   
0F41   21                     DB   "!"   
0F42                STORE:       
0F42                          ;*Macro unroll:  ppop H,L
0F42   60                     LD   H,B   
0F43   69                     LD   L,C   
0F44                          ;*Macro unroll:  ppop0 B,C
0F44   DD 2B                  DEC   IX   
0F46   DD 46 00               LD   B,(IX+0)   
0F49   DD 2B                  DEC   IX   
0F4B   DD 4E 00               LD   C,(IX+0)   
0F4E                          ;*Macro unroll:  writeWord HL, B,C
0F4E                          ;*Macro unroll:  writeByte HL, C
0F4E   71                     LD   (HL),C   
0F4F   23                     INC   HL   
0F50                          ;*Macro unroll:  writeByte HL, B
0F50   70                     LD   (HL),B   
0F51   23                     INC   HL   
0F52                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0F52   DD 2B                  DEC   IX   ; POP new TOS
0F54   DD 46 00               LD   B,(IX+0)   
0F57   DD 2B                  DEC   IX   
0F59   DD 4E 00               LD   C,(IX+0)   
0F5C                          ;*Macro unroll:  NEXT
0F5C   C3 1F 0F               JP   enter   
0F5F                          ;*Macro unroll: CODE "@",1,0,AT
0F5F                HEADER_AT:      
0F5F   3E 0F                  DW   link   
0F61                LINK:     .SET   HEADER_AT   
0F61   01                     DB   0 + 1   
0F62   40                     DB   "@"   
0F63                AT:          
0F63                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0F63   69                     LD   L,C   ; HL = TOS
0F64   60                     LD   H,B   
0F65                          ;*Macro unroll:  readWord HL, B,C
0F65   4E                     LD   C,(HL)   
0F66   23                     INC   HL   
0F67   46                     LD   B,(HL)   
0F68   23                     INC   HL   
0F69                          ;*Macro unroll:  NEXT
0F69   C3 1F 0F               JP   enter   
0F6C                             ; C!      char c-addr --    STORE char in memory
0F6C                          ;*Macro unroll: CODE "c!",2,0,CSTORE
0F6C                HEADER_CSTORE:      
0F6C   5F 0F                  DW   link   
0F6E                LINK:     .SET   HEADER_CSTORE   
0F6E   02                     DB   0 + 2   
0F6F   63 21                  DB   "c!"   
0F71                CSTORE:      
0F71                          ;*Macro unroll:  ppop H,L
0F71   60                     LD   H,B   
0F72   69                     LD   L,C   
0F73                          ;*Macro unroll:  ppop0 B,C
0F73   DD 2B                  DEC   IX   
0F75   DD 46 00               LD   B,(IX+0)   
0F78   DD 2B                  DEC   IX   
0F7A   DD 4E 00               LD   C,(IX+0)   
0F7D   71                     LD   (HL),C   
0F7E                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0F7E   DD 2B                  DEC   IX   ; POP new TOS
0F80   DD 46 00               LD   B,(IX+0)   
0F83   DD 2B                  DEC   IX   
0F85   DD 4E 00               LD   C,(IX+0)   
0F88                          ;*Macro unroll:  NEXT
0F88   C3 1F 0F               JP   enter   
0F8B                             ; C@     c-addr -- char   AT char from memory
0F8B                          ;*Macro unroll: CODE "c@",2,0,CAT
0F8B                HEADER_CAT:      
0F8B   6C 0F                  DW   link   
0F8D                LINK:     .SET   HEADER_CAT   
0F8D   02                     DB   0 + 2   
0F8E   63 40                  DB   "c@"   
0F90                CAT:         
0F90   0A                     LD   A,(BC)   
0F91   4F                     LD   C,A   
0F92   06 00                  LD   B,0   
0F94                          ;*Macro unroll:  NEXT
0F94   C3 1F 0F               JP   enter   
0F97                             ;z RSP!  a-addr --                  set return stack pointer
0F97                          ;*Macro unroll: CODE "rsp!",4,0,RSPSTORE
0F97                HEADER_RSPSTORE:      
0F97   8B 0F                  DW   link   
0F99                LINK:     .SET   HEADER_RSPSTORE   
0F99   04                     DB   0 + 4   
0F9A   72 73 70 21            DB   "rsp!"   
0F9E                RSPSTORE:      
0F9E                          ;*Macro unroll:  SET_RET_SP B,C
0F9E                          ;*Macro unroll:  loadWord H,L, B,C
0F9E   69                     LD   L,C   
0F9F   60                     LD   H,B   
0FA0   F9                     LD   SP,HL   
0FA1                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
0FA1   DD 2B                  DEC   IX   ; POP TOS
0FA3   DD 46 00               LD   B,(IX+0)   
0FA6   DD 2B                  DEC   IX   
0FA8   DD 4E 00               LD   C,(IX+0)   
0FAB                          ;*Macro unroll:  NEXT
0FAB   C3 1F 0F               JP   enter   
0FAE                          ;*Macro unroll: CODE "sp@",3,0,SPAT
0FAE                HEADER_SPAT:      
0FAE   97 0F                  DW   link   
0FB0                LINK:     .SET   HEADER_SPAT   
0FB0   03                     DB   0 + 3   
0FB1   73 70 40               DB   "sp@"   
0FB4                SPAT:        
0FB4   DD E5                  PUSH   IX   
0FB6   E1                     POP   HL   
0FB7                          ;*Macro unroll:  ppush H,L
0FB7                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0FB7   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0FBA   DD 23                  INC   IX   
0FBC   DD 70 00               LD   (IX+0),B   
0FBF   DD 23                  INC   IX   
0FC1   44                     LD   B,H   
0FC2   4D                     LD   C,L   
0FC3                          ;*Macro unroll:  NEXT
0FC3   C3 1F 0F               JP   enter   
0FC6                          ;*Macro unroll: CODE "sp!",3,0,SPSTORE
0FC6                HEADER_SPSTORE:      
0FC6   AE 0F                  DW   link   
0FC8                LINK:     .SET   HEADER_SPSTORE   
0FC8   03                     DB   0 + 3   
0FC9   73 70 21               DB   "sp!"   
0FCC                SPSTORE:      
0FCC                          ;*Macro unroll:  ppop H,L
0FCC   60                     LD   H,B   
0FCD   69                     LD   L,C   
0FCE                          ;*Macro unroll:  ppop0 B,C
0FCE   DD 2B                  DEC   IX   
0FD0   DD 46 00               LD   B,(IX+0)   
0FD3   DD 2B                  DEC   IX   
0FD5   DD 4E 00               LD   C,(IX+0)   
0FD8   E5                     PUSH   HL   
0FD9   DD E1                  POP   IX   
0FDB                          ;*Macro unroll:  NEXT
0FDB   C3 1F 0F               JP   enter   
0FDE                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0FDE                          ;*Macro unroll: CODE "allot",5,0,allot               ;
0FDE                HEADER_ALLOT:      ; 
0FDE   C6 0F                  DW   link   
0FE0                LINK:     .SET   HEADER_allot   
0FE0   05                     DB   0 + 5   
0FE1   61 6C 6C 6F 74         DB   "allot"   
0FE6                ALLOT:       
0FE6                          ;*Macro unroll:  ENTER
0FE6   CF                     RST   $08   
0FE7                             ; dw here, addstore                   ; adds n to here
0FE7   0C 09 F5 0F            DW   here,PSTOR   ; adds n to here
0FEB                          ;*Macro unroll:  EXIT
0FEB   30 0F                  DW   exit   
0FED   C3 1F 0F               JP   enter   
0FF0                             ;   +!          ( n a -- )
0FF0                             ;               Add n to the contents at address a.
0FF0                          ;*Macro unroll: CODE  '+!',2,0,PSTOR
0FF0                HEADER_PSTOR:      
0FF0   DE 0F                  DW   link   
0FF2                LINK:     .SET   HEADER_PSTOR   
0FF2   02                     DB   0 + 2   
0FF3   2B 21                  DB   "+!"   
0FF5                PSTOR:       
0FF5                          ;*Macro unroll:  ENTER
0FF5   CF                     RST   $08   
0FF6   F3 12 27 13 63 0F E8 00 DW   SWAP,OVER,AT,PLUS   
0FFE   F3 12 42 0F 30 0F      DW   SWAP,STORE,EXIT   
1004                             ; CODE "+!",2,0,ADDSTORE               ; (n addr -- )
1004                             ; 	ppop H, L		            ; HL = address, TOS = amount to add
1004                             ; 	ld A,(HL)
1004                             ; 	add A,C                         ; add TOS at (HL),
1004                             ; 	ld (HL),A
1004                             ; 	inc HL
1004                             ; 	ld A,(HL)
1004                             ; 	adc A,B
1004                             ; 	ld (HL),A
1004                             ; 	ppop0 B,C                      ; clear param stack
1004                             ;     NEXT
1004                          ;*Macro unroll: CODE ",",1,0,COMMA
1004                HEADER_COMMA:      
1004   F0 0F                  DW   link   
1006                LINK:     .SET   HEADER_COMMA   
1006   01                     DB   0 + 1   
1007   2C                     DB   ","   
1008                COMMA:       
1008   2A 51 24               LD   HL,(VAR_HERE)   ; HERE
100B                          ;*Macro unroll: 	writeWord HL, B,C
100B                          ;*Macro unroll:  writeByte HL, C
100B   71                     LD   (HL),C   
100C   23                     INC   HL   
100D                          ;*Macro unroll:  writeByte HL, B
100D   70                     LD   (HL),B   
100E   23                     INC   HL   
100F   22 51 24               LD   (VAR_HERE),HL   ; Update HERE (incremented)
1012                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
1012   DD 2B                  DEC   IX   ; cleanup TOS
1014   DD 46 00               LD   B,(IX+0)   
1017   DD 2B                  DEC   IX   
1019   DD 4E 00               LD   C,(IX+0)   
101C                          ;*Macro unroll:  NEXT
101C   C3 1F 0F               JP   enter   
101F                          ;*Macro unroll: CODE "c,",1,0,CCOMMA
101F                HEADER_CCOMMA:      
101F   04 10                  DW   link   
1021                LINK:     .SET   HEADER_CCOMMA   
1021   01                     DB   0 + 1   
1022   63 2C                  DB   "c,"   
1024                CCOMMA:      
1024                          ;*Macro unroll:  ppush0 H,L
1024   DD 75 00               LD   (IX+0),L   
1027   DD 23                  INC   IX   
1029   DD 74 00               LD   (IX+0),H   
102C   DD 23                  INC   IX   
102E   2A 51 24               LD   HL,(VAR_HERE)   ; HERE
1031   71                     LD   (HL),C   ; STORE DE at memory pointed to by VAR_HERE
1032   23                     INC   HL   
1033   22 51 24               LD   (VAR_HERE),HL   ; Update HERE (incremented)
1036                          ;*Macro unroll:  ppop0 H,L
1036   DD 2B                  DEC   IX   
1038   DD 66 00               LD   H,(IX+0)   
103B   DD 2B                  DEC   IX   
103D   DD 6E 00               LD   L,(IX+0)   
1040                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
1040   DD 2B                  DEC   IX   ; cleanup TOS
1042   DD 46 00               LD   B,(IX+0)   
1045   DD 2B                  DEC   IX   
1047   DD 4E 00               LD   C,(IX+0)   
104A                          ;*Macro unroll:  NEXT
104A   C3 1F 0F               JP   enter   
104D                             ;   R@          ( -- w )
104D                             ;               Copy top of return stack to the data stack.
104D                          ;*Macro unroll: CODE	'R@',2,0,RAT
104D                HEADER_RAT:      
104D   1F 10                  DW   link   
104F                LINK:     .SET   HEADER_RAT   
104F   02                     DB   0 + 2   
1050   52 40                  DB   "R@"   
1052                RAT:         
1052   C5                     PUSH   BC   
1053   DD 4E 00               LD   C,(IX+0)   
1056   DD 46 01               LD   B,(IX+1)   
1059                          ;*Macro unroll: 	NEXT
1059   C3 1F 0F               JP   enter   
105C   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
1082   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
1085   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
108A   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
1095   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
10A0                             ; serial I/O
10A0                INITSERIAL:      
10A0   21 00 00               LD   HL,0   
10A3   22 43 22               LD   (serbufused),HL   
10A6   21 00 22               LD   HL,serbuf   
10A9   22 3F 22               LD   (serinptr),HL   
10AC   22 41 22               LD   (serrdptr),HL   
10AF   21 4D 22               LD   HL,linebuf   
10B2   22 45 22               LD   (lineBufStart),HL   
10B5   22 49 22               LD   (currkey),HL   
10B8   22 4B 22               LD   (linebuftop),HL   
10BB   21 80 00               LD   HL,LINE_BUFSIZE   
10BE   22 47 22               LD   (lineBufSize),HL   
10C1   3E 96                  LD   A,rts_low   
10C3   D3 80                  OUT   ($80),A   ; initialise acia
10C5   ED 56                  IM   1   
10C7   FB                     EI      
10C8   C9                     RET      
10C9                SERIALIN:      
10C9   F5                     PUSH   AF   
10CA   E5                     PUSH   HL   
10CB   DB 80                  IN   A,($80)   
10CD   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
10CF                          ;*Macro unroll:  _if nz
10CF   C2 D5 10               JP   nz,L_M_1901S31   
10D2   C3 D2 10               JP   $   
10D5                          ;*Macro unroll:  STRUC_PUSH $
10D5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10D5                STRUC_12:   .SET   STRUC_11   
10D5                STRUC_11:   .SET   STRUC_10   
10D5                STRUC_10:   .SET   STRUC_9   
10D5                STRUC_9:   .SET   STRUC_8   
10D5                STRUC_8:   .SET   STRUC_7   
10D5                STRUC_7:   .SET   STRUC_6   
10D5                STRUC_6:   .SET   STRUC_5   
10D5                STRUC_5:   .SET   STRUC_4   
10D5                STRUC_4:   .SET   STRUC_3   
10D5                STRUC_3:   .SET   STRUC_2   
10D5                STRUC_2:   .SET   STRUC_TOP   
10D5                STRUC_TOP:   .SET   $   
10D5                L_M_1901S31:      
10D5   DB 81                  IN   A,($81)   
10D7   F5                     PUSH   AF   
10D8   3A 43 22               LD   A,(serBufUsed)   
10DB   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
10DD                          ;*Macro unroll:  _if z
10DD   CA E3 10               JP   z,L_M_1906S36   
10E0   C3 E0 10               JP   $   
10E3                          ;*Macro unroll:  STRUC_PUSH $
10E3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10E3                STRUC_12:   .SET   STRUC_11   
10E3                STRUC_11:   .SET   STRUC_10   
10E3                STRUC_10:   .SET   STRUC_9   
10E3                STRUC_9:   .SET   STRUC_8   
10E3                STRUC_8:   .SET   STRUC_7   
10E3                STRUC_7:   .SET   STRUC_6   
10E3                STRUC_6:   .SET   STRUC_5   
10E3                STRUC_5:   .SET   STRUC_4   
10E3                STRUC_4:   .SET   STRUC_3   
10E3                STRUC_3:   .SET   STRUC_2   
10E3                STRUC_2:   .SET   STRUC_TOP   
10E3                STRUC_TOP:   .SET   $   
10E3                L_M_1906S36:      
10E3   F1                     POP   AF   
10E4                          ;*Macro unroll:  _else
10E4   C3 E4 10               JP   $   
10E7                          ;*Macro unroll:  STRUC_FWD
10E7                CUR_ADR:   .SET   $   
10E1                          .ORG   STRUC_TOP - 2   
10E1   E7 10                  DW   CUR_ADR   
10E7                          .ORG   CUR_ADR   
10E7                STRUC_TOP:   .SET   $   
10E7   2A 3F 22               LD   HL,(serInPtr)   
10EA   23                     INC   HL   
10EB   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
10EC   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
10EE                          ;*Macro unroll:  _if z
10EE   CA F4 10               JP   z,L_M_1913S43   
10F1   C3 F1 10               JP   $   
10F4                          ;*Macro unroll:  STRUC_PUSH $
10F4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10F4                STRUC_12:   .SET   STRUC_11   
10F4                STRUC_11:   .SET   STRUC_10   
10F4                STRUC_10:   .SET   STRUC_9   
10F4                STRUC_9:   .SET   STRUC_8   
10F4                STRUC_8:   .SET   STRUC_7   
10F4                STRUC_7:   .SET   STRUC_6   
10F4                STRUC_6:   .SET   STRUC_5   
10F4                STRUC_5:   .SET   STRUC_4   
10F4                STRUC_4:   .SET   STRUC_3   
10F4                STRUC_3:   .SET   STRUC_2   
10F4                STRUC_2:   .SET   STRUC_TOP   
10F4                STRUC_TOP:   .SET   $   
10F4                L_M_1913S43:      
10F4   21 00 22               LD   HL,serBuf   
10F7                          ;*Macro unroll:  _endif
10F7                          ;*Macro unroll:  STRUC_FWD
10F7                CUR_ADR:   .SET   $   
10F2                          .ORG   STRUC_TOP - 2   
10F2   F7 10                  DW   CUR_ADR   
10F7                          .ORG   CUR_ADR   
10F7                          ;*Macro unroll:  STRUC_POP
10F7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10F7                STRUC_TOP:   .SET   STRUC_2   
10F7                STRUC_2:   .SET   STRUC_3   
10F7                STRUC_3:   .SET   STRUC_4   
10F7                STRUC_4:   .SET   STRUC_5   
10F7                STRUC_5:   .SET   STRUC_6   
10F7                STRUC_6:   .SET   STRUC_7   
10F7                STRUC_7:   .SET   STRUC_8   
10F7                STRUC_8:   .SET   STRUC_9   
10F7                STRUC_9:   .SET   STRUC_10   
10F7                STRUC_10:   .SET   STRUC_11   
10F7                STRUC_11:   .SET   STRUC_12   
10F7                STRUC_12:   .SET   0   
10F7   22 3F 22               LD   (serInPtr),HL   
10FA   F1                     POP   AF   
10FB   77                     LD   (HL),A   
10FC   3A 43 22               LD   A,(serBufUsed)   
10FF   3C                     INC   A   
1100   32 43 22               LD   (serBufUsed),A   
1103   FE 30                  CP   SER_FULLSIZE   
1105                          ;*Macro unroll:  _if nc
1105   D2 0B 11               JP   nc,L_M_1923S53   
1108   C3 08 11               JP   $   
110B                          ;*Macro unroll:  STRUC_PUSH $
110B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
110B                STRUC_12:   .SET   STRUC_11   
110B                STRUC_11:   .SET   STRUC_10   
110B                STRUC_10:   .SET   STRUC_9   
110B                STRUC_9:   .SET   STRUC_8   
110B                STRUC_8:   .SET   STRUC_7   
110B                STRUC_7:   .SET   STRUC_6   
110B                STRUC_6:   .SET   STRUC_5   
110B                STRUC_5:   .SET   STRUC_4   
110B                STRUC_4:   .SET   STRUC_3   
110B                STRUC_3:   .SET   STRUC_2   
110B                STRUC_2:   .SET   STRUC_TOP   
110B                STRUC_TOP:   .SET   $   
110B                L_M_1923S53:      
110B   3E D6                  LD   A,RTS_HIGH   
110D   D3 80                  OUT   ($80),A   
110F                          ;*Macro unroll:  _endif
110F                          ;*Macro unroll:  STRUC_FWD
110F                CUR_ADR:   .SET   $   
1109                          .ORG   STRUC_TOP - 2   
1109   0F 11                  DW   CUR_ADR   
110F                          .ORG   CUR_ADR   
110F                          ;*Macro unroll:  STRUC_POP
110F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
110F                STRUC_TOP:   .SET   STRUC_2   
110F                STRUC_2:   .SET   STRUC_3   
110F                STRUC_3:   .SET   STRUC_4   
110F                STRUC_4:   .SET   STRUC_5   
110F                STRUC_5:   .SET   STRUC_6   
110F                STRUC_6:   .SET   STRUC_7   
110F                STRUC_7:   .SET   STRUC_8   
110F                STRUC_8:   .SET   STRUC_9   
110F                STRUC_9:   .SET   STRUC_10   
110F                STRUC_10:   .SET   STRUC_11   
110F                STRUC_11:   .SET   STRUC_12   
110F                STRUC_12:   .SET   0   
110F                          ;*Macro unroll:  _endif
110F                          ;*Macro unroll:  STRUC_FWD
110F                CUR_ADR:   .SET   $   
10E5                          .ORG   STRUC_TOP - 2   
10E5   0F 11                  DW   CUR_ADR   
110F                          .ORG   CUR_ADR   
110F                          ;*Macro unroll:  STRUC_POP
110F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
110F                STRUC_TOP:   .SET   STRUC_2   
110F                STRUC_2:   .SET   STRUC_3   
110F                STRUC_3:   .SET   STRUC_4   
110F                STRUC_4:   .SET   STRUC_5   
110F                STRUC_5:   .SET   STRUC_6   
110F                STRUC_6:   .SET   STRUC_7   
110F                STRUC_7:   .SET   STRUC_8   
110F                STRUC_8:   .SET   STRUC_9   
110F                STRUC_9:   .SET   STRUC_10   
110F                STRUC_10:   .SET   STRUC_11   
110F                STRUC_11:   .SET   STRUC_12   
110F                STRUC_12:   .SET   0   
110F                          ;*Macro unroll:  _endif
110F                          ;*Macro unroll:  STRUC_FWD
110F                CUR_ADR:   .SET   $   
10D3                          .ORG   STRUC_TOP - 2   
10D3   0F 11                  DW   CUR_ADR   
110F                          .ORG   CUR_ADR   
110F                          ;*Macro unroll:  STRUC_POP
110F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
110F                STRUC_TOP:   .SET   STRUC_2   
110F                STRUC_2:   .SET   STRUC_3   
110F                STRUC_3:   .SET   STRUC_4   
110F                STRUC_4:   .SET   STRUC_5   
110F                STRUC_5:   .SET   STRUC_6   
110F                STRUC_6:   .SET   STRUC_7   
110F                STRUC_7:   .SET   STRUC_8   
110F                STRUC_8:   .SET   STRUC_9   
110F                STRUC_9:   .SET   STRUC_10   
110F                STRUC_10:   .SET   STRUC_11   
110F                STRUC_11:   .SET   STRUC_12   
110F                STRUC_12:   .SET   0   
110F   E1                     POP   HL   
1110   F1                     POP   AF   
1111   FB                     EI      
1112   C9                     RET      
1113                             ; 
1113                             ; getc - input
1113                             ; returns: A = input char
1113                             ; 
1113                GETC:        
1113                          IF   TESTMODE   
                              PUSH   HL   
                              LD   HL,(char_pointer)   
                              LD   A,(HL)   
                              INC   HL   
                              LD   (char_pointer),HL   
                              POP   HL   
                              RET      
1113                          ELSE      
1113                          ;*Macro unroll:  _do
1113   18 03                  JR   L_M_1947S81   
1115   C3 15 11               JP   $   
1118                          ;*Macro unroll:  DLOOP_PUSH $
1118                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1118                DLOOP_12:   .SET   DLOOP_11   
1118                DLOOP_11:   .SET   DLOOP_10   
1118                DLOOP_10:   .SET   DLOOP_9   
1118                DLOOP_9:   .SET   DLOOP_8   
1118                DLOOP_8:   .SET   DLOOP_7   
1118                DLOOP_7:   .SET   DLOOP_6   
1118                DLOOP_6:   .SET   DLOOP_5   
1118                DLOOP_5:   .SET   DLOOP_4   
1118                DLOOP_4:   .SET   DLOOP_3   
1118                DLOOP_3:   .SET   DLOOP_2   
1118                DLOOP_2:   .SET   DLOOP_TOP   
1118                DLOOP_TOP:   .SET   $   
1118                L_M_1947S81:      
1118   3A 43 22               LD   A,(serBufUsed)   
111B   FE 00                  CP   $00   
111D                          ;*Macro unroll:  _until nz
111D   C2 15 11               JP   nz,DLOOP_TOP - 3   
1120                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1120                CUR_ADR:   .SET   $   ; needed?
1116                          .ORG   DLOOP_TOP - 2   
1116   20 11                  DW   CUR_ADR   
1120                          .ORG   CUR_ADR   
1120                          ;*Macro unroll:  _enddo
1120   C3 18 11               JP   DLOOP_TOP   
1123                          ;*Macro unroll:  DLOOP_FWD
1123                CUR_ADR:   .SET   $   
1116                          .ORG   DLOOP_TOP - 2   
1116   23 11                  DW   CUR_ADR   
1123                          .ORG   CUR_ADR   
1123                          ;*Macro unroll:  DLOOP_POP
1123                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1123                DLOOP_TOP:   .SET   DLOOP_2   
1123                DLOOP_2:   .SET   DLOOP_3   
1123                DLOOP_3:   .SET   DLOOP_4   
1123                DLOOP_4:   .SET   DLOOP_5   
1123                DLOOP_5:   .SET   DLOOP_6   
1123                DLOOP_6:   .SET   DLOOP_7   
1123                DLOOP_7:   .SET   DLOOP_8   
1123                DLOOP_8:   .SET   DLOOP_9   
1123                DLOOP_9:   .SET   DLOOP_10   
1123                DLOOP_10:   .SET   DLOOP_11   
1123                DLOOP_11:   .SET   DLOOP_12   
1123                DLOOP_12:   .SET   0   
1123   E5                     PUSH   HL   
1124   2A 41 22               LD   HL,(serRdPtr)   
1127   23                     INC   HL   
1128   7D                     LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
1129   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
112B                          ;*Macro unroll:  _if z
112B   CA 31 11               JP   z,L_M_1957S91   
112E   C3 2E 11               JP   $   
1131                          ;*Macro unroll:  STRUC_PUSH $
1131                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1131                STRUC_12:   .SET   STRUC_11   
1131                STRUC_11:   .SET   STRUC_10   
1131                STRUC_10:   .SET   STRUC_9   
1131                STRUC_9:   .SET   STRUC_8   
1131                STRUC_8:   .SET   STRUC_7   
1131                STRUC_7:   .SET   STRUC_6   
1131                STRUC_6:   .SET   STRUC_5   
1131                STRUC_5:   .SET   STRUC_4   
1131                STRUC_4:   .SET   STRUC_3   
1131                STRUC_3:   .SET   STRUC_2   
1131                STRUC_2:   .SET   STRUC_TOP   
1131                STRUC_TOP:   .SET   $   
1131                L_M_1957S91:      
1131   21 00 22               LD   HL,serBuf   
1134                          ;*Macro unroll:  _endif
1134                          ;*Macro unroll:  STRUC_FWD
1134                CUR_ADR:   .SET   $   
112F                          .ORG   STRUC_TOP - 2   
112F   34 11                  DW   CUR_ADR   
1134                          .ORG   CUR_ADR   
1134                          ;*Macro unroll:  STRUC_POP
1134                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1134                STRUC_TOP:   .SET   STRUC_2   
1134                STRUC_2:   .SET   STRUC_3   
1134                STRUC_3:   .SET   STRUC_4   
1134                STRUC_4:   .SET   STRUC_5   
1134                STRUC_5:   .SET   STRUC_6   
1134                STRUC_6:   .SET   STRUC_7   
1134                STRUC_7:   .SET   STRUC_8   
1134                STRUC_8:   .SET   STRUC_9   
1134                STRUC_9:   .SET   STRUC_10   
1134                STRUC_10:   .SET   STRUC_11   
1134                STRUC_11:   .SET   STRUC_12   
1134                STRUC_12:   .SET   0   
1134   F3                     DI      
1135   22 41 22               LD   (serRdPtr),HL   
1138   3A 43 22               LD   A,(serBufUsed)   
113B   3D                     DEC   A   
113C   32 43 22               LD   (serBufUsed),A   
113F   FE 05                  CP   SER_EMPTYSIZE   
1141                          ;*Macro unroll:  _if c
1141   DA 47 11               JP   c,L_M_1966S100   
1144   C3 44 11               JP   $   
1147                          ;*Macro unroll:  STRUC_PUSH $
1147                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1147                STRUC_12:   .SET   STRUC_11   
1147                STRUC_11:   .SET   STRUC_10   
1147                STRUC_10:   .SET   STRUC_9   
1147                STRUC_9:   .SET   STRUC_8   
1147                STRUC_8:   .SET   STRUC_7   
1147                STRUC_7:   .SET   STRUC_6   
1147                STRUC_6:   .SET   STRUC_5   
1147                STRUC_5:   .SET   STRUC_4   
1147                STRUC_4:   .SET   STRUC_3   
1147                STRUC_3:   .SET   STRUC_2   
1147                STRUC_2:   .SET   STRUC_TOP   
1147                STRUC_TOP:   .SET   $   
1147                L_M_1966S100:      
1147   3E 96                  LD   A,RTS_LOW   
1149   D3 80                  OUT   ($80),A   
114B                          ;*Macro unroll:  _endif
114B                          ;*Macro unroll:  STRUC_FWD
114B                CUR_ADR:   .SET   $   
1145                          .ORG   STRUC_TOP - 2   
1145   4B 11                  DW   CUR_ADR   
114B                          .ORG   CUR_ADR   
114B                          ;*Macro unroll:  STRUC_POP
114B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
114B                STRUC_TOP:   .SET   STRUC_2   
114B                STRUC_2:   .SET   STRUC_3   
114B                STRUC_3:   .SET   STRUC_4   
114B                STRUC_4:   .SET   STRUC_5   
114B                STRUC_5:   .SET   STRUC_6   
114B                STRUC_6:   .SET   STRUC_7   
114B                STRUC_7:   .SET   STRUC_8   
114B                STRUC_8:   .SET   STRUC_9   
114B                STRUC_9:   .SET   STRUC_10   
114B                STRUC_10:   .SET   STRUC_11   
114B                STRUC_11:   .SET   STRUC_12   
114B                STRUC_12:   .SET   0   
114B   7E                     LD   A,(HL)   
114C   FB                     EI      
114D   E1                     POP   HL   
114E   C9                     RET      ; Char ready in A
114F                          ENDIF      
114F                             ; 
114F                             ; putc - output a character
114F                             ; params: A = char to output
114F                             ; 
114F                PUTC:        
114F   F5                     PUSH   AF   ; STORE character
1150                          ;*Macro unroll:  _do
1150   18 03                  JR   L_M_1981S117   
1152   C3 52 11               JP   $   
1155                          ;*Macro unroll:  DLOOP_PUSH $
1155                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1155                DLOOP_12:   .SET   DLOOP_11   
1155                DLOOP_11:   .SET   DLOOP_10   
1155                DLOOP_10:   .SET   DLOOP_9   
1155                DLOOP_9:   .SET   DLOOP_8   
1155                DLOOP_8:   .SET   DLOOP_7   
1155                DLOOP_7:   .SET   DLOOP_6   
1155                DLOOP_6:   .SET   DLOOP_5   
1155                DLOOP_5:   .SET   DLOOP_4   
1155                DLOOP_4:   .SET   DLOOP_3   
1155                DLOOP_3:   .SET   DLOOP_2   
1155                DLOOP_2:   .SET   DLOOP_TOP   
1155                DLOOP_TOP:   .SET   $   
1155                L_M_1981S117:      
1155   DB 80                  IN   A,($80)   ; Status byte
1157   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
1159                          ;*Macro unroll:  _until nz
1159   C2 52 11               JP   nz,DLOOP_TOP - 3   
115C                          ;*Macro unroll:  DLOOP_FWD               ; needed?
115C                CUR_ADR:   .SET   $   ; needed?
1153                          .ORG   DLOOP_TOP - 2   
1153   5C 11                  DW   CUR_ADR   
115C                          .ORG   CUR_ADR   
115C                          ;*Macro unroll:  _enddo
115C   C3 55 11               JP   DLOOP_TOP   
115F                          ;*Macro unroll:  DLOOP_FWD
115F                CUR_ADR:   .SET   $   
1153                          .ORG   DLOOP_TOP - 2   
1153   5F 11                  DW   CUR_ADR   
115F                          .ORG   CUR_ADR   
115F                          ;*Macro unroll:  DLOOP_POP
115F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
115F                DLOOP_TOP:   .SET   DLOOP_2   
115F                DLOOP_2:   .SET   DLOOP_3   
115F                DLOOP_3:   .SET   DLOOP_4   
115F                DLOOP_4:   .SET   DLOOP_5   
115F                DLOOP_5:   .SET   DLOOP_6   
115F                DLOOP_6:   .SET   DLOOP_7   
115F                DLOOP_7:   .SET   DLOOP_8   
115F                DLOOP_8:   .SET   DLOOP_9   
115F                DLOOP_9:   .SET   DLOOP_10   
115F                DLOOP_10:   .SET   DLOOP_11   
115F                DLOOP_11:   .SET   DLOOP_12   
115F                DLOOP_12:   .SET   0   
115F   F1                     POP   AF   ; Retrieve character
1160   D3 81                  OUT   ($81),A   ; Output the character
1162   C9                     RET      
1163                INPUTREADY:      
1163   3A 43 22               LD   A,(serBufUsed)   
1166   FE 00                  CP   $0   
1168   C9                     RET      
1169                             ; 
1169                             ; getline - input line of text ***
1169                             ; params: HL = addr, DE = max (currently up to 255)
1169                             ; returns: BC = length - up to 255
1169                             ; 
1169                GETLINE:      
1169   F5                     PUSH   AF   
116A   E5                     PUSH   HL   
116B                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
116B                          ;*Macro unroll:  ppush0 D,E
116B   DD 73 00               LD   (IX+0),E   
116E   DD 23                  INC   IX   
1170   DD 72 00               LD   (IX+0),D   
1173   DD 23                  INC   IX   
1175   11 85 10               LD   DE,TXT_PROMPT   
1178   CD 2E 12               CALL   printPStr   
117B                          ;*Macro unroll:  ppop0 D,E
117B   DD 2B                  DEC   IX   
117D   DD 56 00               LD   D,(IX+0)   
1180   DD 2B                  DEC   IX   
1182   DD 5E 00               LD   E,(IX+0)   
1185   E1                     POP   HL   
1186   E5                     PUSH   HL   
1187   01 00 00               LD   BC,0   
118A                          ;*Macro unroll:  _do
118A   18 03                  JR   L_M_2005S144   
118C   C3 8C 11               JP   $   
118F                          ;*Macro unroll:  DLOOP_PUSH $
118F                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
118F                DLOOP_12:   .SET   DLOOP_11   
118F                DLOOP_11:   .SET   DLOOP_10   
118F                DLOOP_10:   .SET   DLOOP_9   
118F                DLOOP_9:   .SET   DLOOP_8   
118F                DLOOP_8:   .SET   DLOOP_7   
118F                DLOOP_7:   .SET   DLOOP_6   
118F                DLOOP_6:   .SET   DLOOP_5   
118F                DLOOP_5:   .SET   DLOOP_4   
118F                DLOOP_4:   .SET   DLOOP_3   
118F                DLOOP_3:   .SET   DLOOP_2   
118F                DLOOP_2:   .SET   DLOOP_TOP   
118F                DLOOP_TOP:   .SET   $   
118F                L_M_2005S144:      
118F                          ;*Macro unroll:  _do
118F   18 03                  JR   L_M_2006S145   
1191   C3 91 11               JP   $   
1194                          ;*Macro unroll:  DLOOP_PUSH $
1194                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1194                DLOOP_12:   .SET   DLOOP_11   
1194                DLOOP_11:   .SET   DLOOP_10   
1194                DLOOP_10:   .SET   DLOOP_9   
1194                DLOOP_9:   .SET   DLOOP_8   
1194                DLOOP_8:   .SET   DLOOP_7   
1194                DLOOP_7:   .SET   DLOOP_6   
1194                DLOOP_6:   .SET   DLOOP_5   
1194                DLOOP_5:   .SET   DLOOP_4   
1194                DLOOP_4:   .SET   DLOOP_3   
1194                DLOOP_3:   .SET   DLOOP_2   
1194                DLOOP_2:   .SET   DLOOP_TOP   
1194                DLOOP_TOP:   .SET   $   
1194                L_M_2006S145:      
1194   CD 13 11               CALL   getc   
1197   FE 08                  CP   $08   
1199                          ;*Macro unroll:  _if z
1199   CA 9F 11               JP   z,L_M_2009S148   
119C   C3 9C 11               JP   $   
119F                          ;*Macro unroll:  STRUC_PUSH $
119F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
119F                STRUC_12:   .SET   STRUC_11   
119F                STRUC_11:   .SET   STRUC_10   
119F                STRUC_10:   .SET   STRUC_9   
119F                STRUC_9:   .SET   STRUC_8   
119F                STRUC_8:   .SET   STRUC_7   
119F                STRUC_7:   .SET   STRUC_6   
119F                STRUC_6:   .SET   STRUC_5   
119F                STRUC_5:   .SET   STRUC_4   
119F                STRUC_4:   .SET   STRUC_3   
119F                STRUC_3:   .SET   STRUC_2   
119F                STRUC_2:   .SET   STRUC_TOP   
119F                STRUC_TOP:   .SET   $   
119F                L_M_2009S148:      
119F                          ;*Macro unroll:  checkZeroWord B,C
119F   79                     LD   A,C   
11A0   B0                     OR   B   
11A1                          ;*Macro unroll:  _if nz
11A1   C2 A7 11               JP   nz,L_M_2011S150   
11A4   C3 A4 11               JP   $   
11A7                          ;*Macro unroll:  STRUC_PUSH $
11A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
11A7                STRUC_12:   .SET   STRUC_11   
11A7                STRUC_11:   .SET   STRUC_10   
11A7                STRUC_10:   .SET   STRUC_9   
11A7                STRUC_9:   .SET   STRUC_8   
11A7                STRUC_8:   .SET   STRUC_7   
11A7                STRUC_7:   .SET   STRUC_6   
11A7                STRUC_6:   .SET   STRUC_5   
11A7                STRUC_5:   .SET   STRUC_4   
11A7                STRUC_4:   .SET   STRUC_3   
11A7                STRUC_3:   .SET   STRUC_2   
11A7                STRUC_2:   .SET   STRUC_TOP   
11A7                STRUC_TOP:   .SET   $   
11A7                L_M_2011S150:      
11A7   2B                     DEC   HL   
11A8   0B                     DEC   BC   
11A9   3E 08                  LD   a,$08   
11AB   CD 4F 11               CALL   putc   
11AE   CD 50 12               CALL   printSpace   
11B1   3E 08                  LD   A,$08   
11B3   CD 4F 11               CALL   putc   
11B6                          ;*Macro unroll:  _endif
11B6                          ;*Macro unroll:  STRUC_FWD
11B6                CUR_ADR:   .SET   $   
11A5                          .ORG   STRUC_TOP - 2   
11A5   B6 11                  DW   CUR_ADR   
11B6                          .ORG   CUR_ADR   
11B6                          ;*Macro unroll:  STRUC_POP
11B6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
11B6                STRUC_TOP:   .SET   STRUC_2   
11B6                STRUC_2:   .SET   STRUC_3   
11B6                STRUC_3:   .SET   STRUC_4   
11B6                STRUC_4:   .SET   STRUC_5   
11B6                STRUC_5:   .SET   STRUC_6   
11B6                STRUC_6:   .SET   STRUC_7   
11B6                STRUC_7:   .SET   STRUC_8   
11B6                STRUC_8:   .SET   STRUC_9   
11B6                STRUC_9:   .SET   STRUC_10   
11B6                STRUC_10:   .SET   STRUC_11   
11B6                STRUC_11:   .SET   STRUC_12   
11B6                STRUC_12:   .SET   0   
11B6                          ;*Macro unroll:  _else
11B6   C3 B6 11               JP   $   
11B9                          ;*Macro unroll:  STRUC_FWD
11B9                CUR_ADR:   .SET   $   
119D                          .ORG   STRUC_TOP - 2   
119D   B9 11                  DW   CUR_ADR   
11B9                          .ORG   CUR_ADR   
11B9                STRUC_TOP:   .SET   $   
11B9   77                     LD   (HL),A   
11BA   23                     INC   HL   
11BB   03                     INC   BC   
11BC   CB 7F                  BIT   7,a   
11BE                          ;*Macro unroll:  _if z
11BE   CA C4 11               JP   z,L_M_2025S164   
11C1   C3 C1 11               JP   $   
11C4                          ;*Macro unroll:  STRUC_PUSH $
11C4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
11C4                STRUC_12:   .SET   STRUC_11   
11C4                STRUC_11:   .SET   STRUC_10   
11C4                STRUC_10:   .SET   STRUC_9   
11C4                STRUC_9:   .SET   STRUC_8   
11C4                STRUC_8:   .SET   STRUC_7   
11C4                STRUC_7:   .SET   STRUC_6   
11C4                STRUC_6:   .SET   STRUC_5   
11C4                STRUC_5:   .SET   STRUC_4   
11C4                STRUC_4:   .SET   STRUC_3   
11C4                STRUC_3:   .SET   STRUC_2   
11C4                STRUC_2:   .SET   STRUC_TOP   
11C4                STRUC_TOP:   .SET   $   
11C4                L_M_2025S164:      
11C4   CD 4F 11               CALL   putc   
11C7                          ;*Macro unroll:  _endif
11C7                          ;*Macro unroll:  STRUC_FWD
11C7                CUR_ADR:   .SET   $   
11C2                          .ORG   STRUC_TOP - 2   
11C2   C7 11                  DW   CUR_ADR   
11C7                          .ORG   CUR_ADR   
11C7                          ;*Macro unroll:  STRUC_POP
11C7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
11C7                STRUC_TOP:   .SET   STRUC_2   
11C7                STRUC_2:   .SET   STRUC_3   
11C7                STRUC_3:   .SET   STRUC_4   
11C7                STRUC_4:   .SET   STRUC_5   
11C7                STRUC_5:   .SET   STRUC_6   
11C7                STRUC_6:   .SET   STRUC_7   
11C7                STRUC_7:   .SET   STRUC_8   
11C7                STRUC_8:   .SET   STRUC_9   
11C7                STRUC_9:   .SET   STRUC_10   
11C7                STRUC_10:   .SET   STRUC_11   
11C7                STRUC_11:   .SET   STRUC_12   
11C7                STRUC_12:   .SET   0   
11C7   FE 0D                  CP   "\r"   
11C9   28 0B                  JR   z,getLineCheck   
11CB   FE 0A                  CP   "\n"   
11CD   28 07                  JR   z,getLineCheck   
11CF   7B                     LD   A,E   
11D0   B9                     CP   C   
11D1   38 03                  JR   c,getLineCheck   
11D3                          ;*Macro unroll:  _endif
11D3                          ;*Macro unroll:  STRUC_FWD
11D3                CUR_ADR:   .SET   $   
11B7                          .ORG   STRUC_TOP - 2   
11B7   D3 11                  DW   CUR_ADR   
11D3                          .ORG   CUR_ADR   
11D3                          ;*Macro unroll:  STRUC_POP
11D3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
11D3                STRUC_TOP:   .SET   STRUC_2   
11D3                STRUC_2:   .SET   STRUC_3   
11D3                STRUC_3:   .SET   STRUC_4   
11D3                STRUC_4:   .SET   STRUC_5   
11D3                STRUC_5:   .SET   STRUC_6   
11D3                STRUC_6:   .SET   STRUC_7   
11D3                STRUC_7:   .SET   STRUC_8   
11D3                STRUC_8:   .SET   STRUC_9   
11D3                STRUC_9:   .SET   STRUC_10   
11D3                STRUC_10:   .SET   STRUC_11   
11D3                STRUC_11:   .SET   STRUC_12   
11D3                STRUC_12:   .SET   0   
11D3                          ;*Macro unroll:  _enddo
11D3   C3 94 11               JP   DLOOP_TOP   
11D6                          ;*Macro unroll:  DLOOP_FWD
11D6                CUR_ADR:   .SET   $   
1192                          .ORG   DLOOP_TOP - 2   
1192   D6 11                  DW   CUR_ADR   
11D6                          .ORG   CUR_ADR   
11D6                          ;*Macro unroll:  DLOOP_POP
11D6                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
11D6                DLOOP_TOP:   .SET   DLOOP_2   
11D6                DLOOP_2:   .SET   DLOOP_3   
11D6                DLOOP_3:   .SET   DLOOP_4   
11D6                DLOOP_4:   .SET   DLOOP_5   
11D6                DLOOP_5:   .SET   DLOOP_6   
11D6                DLOOP_6:   .SET   DLOOP_7   
11D6                DLOOP_7:   .SET   DLOOP_8   
11D6                DLOOP_8:   .SET   DLOOP_9   
11D6                DLOOP_9:   .SET   DLOOP_10   
11D6                DLOOP_10:   .SET   DLOOP_11   
11D6                DLOOP_11:   .SET   DLOOP_12   
11D6                DLOOP_12:   .SET   0   
11D6                GETLINECHECK:      
11D6   3E 00                  LD   a,0   
11D8   B9                     CP   c   
11D9                          ;*Macro unroll:  _until nz
11D9   C2 8C 11               JP   nz,DLOOP_TOP - 3   
11DC                          ;*Macro unroll:  DLOOP_FWD               ; needed?
11DC                CUR_ADR:   .SET   $   ; needed?
118D                          .ORG   DLOOP_TOP - 2   
118D   DC 11                  DW   CUR_ADR   
11DC                          .ORG   CUR_ADR   
11DC                          ;*Macro unroll:  _enddo
11DC   C3 8F 11               JP   DLOOP_TOP   
11DF                          ;*Macro unroll:  DLOOP_FWD
11DF                CUR_ADR:   .SET   $   
118D                          .ORG   DLOOP_TOP - 2   
118D   DF 11                  DW   CUR_ADR   
11DF                          .ORG   CUR_ADR   
11DF                          ;*Macro unroll:  DLOOP_POP
11DF                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
11DF                DLOOP_TOP:   .SET   DLOOP_2   
11DF                DLOOP_2:   .SET   DLOOP_3   
11DF                DLOOP_3:   .SET   DLOOP_4   
11DF                DLOOP_4:   .SET   DLOOP_5   
11DF                DLOOP_5:   .SET   DLOOP_6   
11DF                DLOOP_6:   .SET   DLOOP_7   
11DF                DLOOP_7:   .SET   DLOOP_8   
11DF                DLOOP_8:   .SET   DLOOP_9   
11DF                DLOOP_9:   .SET   DLOOP_10   
11DF                DLOOP_10:   .SET   DLOOP_11   
11DF                DLOOP_11:   .SET   DLOOP_12   
11DF                DLOOP_12:   .SET   0   
11DF   F1                     POP   AF   
11E0   E1                     POP   HL   
11E1   CD 47 12               CALL   printCR   
11E4   C9                     RET      
11E5                PRINTROUTINE:      
11E5                          ;*Macro unroll:  _do
11E5   18 03                  JR   L_M_2047S188   
11E7   C3 E7 11               JP   $   
11EA                          ;*Macro unroll:  DLOOP_PUSH $
11EA                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
11EA                DLOOP_12:   .SET   DLOOP_11   
11EA                DLOOP_11:   .SET   DLOOP_10   
11EA                DLOOP_10:   .SET   DLOOP_9   
11EA                DLOOP_9:   .SET   DLOOP_8   
11EA                DLOOP_8:   .SET   DLOOP_7   
11EA                DLOOP_7:   .SET   DLOOP_6   
11EA                DLOOP_6:   .SET   DLOOP_5   
11EA                DLOOP_5:   .SET   DLOOP_4   
11EA                DLOOP_4:   .SET   DLOOP_3   
11EA                DLOOP_3:   .SET   DLOOP_2   
11EA                DLOOP_2:   .SET   DLOOP_TOP   
11EA                DLOOP_TOP:   .SET   $   
11EA                L_M_2047S188:      
11EA   1A                     LD   A,(DE)   
11EB   CD 4F 11               CALL   putc   
11EE   13                     INC   DE   
11EF   0B                     DEC   BC   
11F0                          ;*Macro unroll:  checkZeroWord B,C
11F0   79                     LD   A,C   
11F1   B0                     OR   B   
11F2                          ;*Macro unroll:  _until z
11F2   CA E7 11               JP   z,DLOOP_TOP - 3   
11F5                          ;*Macro unroll:  DLOOP_FWD               ; needed?
11F5                CUR_ADR:   .SET   $   ; needed?
11E8                          .ORG   DLOOP_TOP - 2   
11E8   F5 11                  DW   CUR_ADR   
11F5                          .ORG   CUR_ADR   
11F5                          ;*Macro unroll:  _enddo
11F5   C3 EA 11               JP   DLOOP_TOP   
11F8                          ;*Macro unroll:  DLOOP_FWD
11F8                CUR_ADR:   .SET   $   
11E8                          .ORG   DLOOP_TOP - 2   
11E8   F8 11                  DW   CUR_ADR   
11F8                          .ORG   CUR_ADR   
11F8                          ;*Macro unroll:  DLOOP_POP
11F8                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
11F8                DLOOP_TOP:   .SET   DLOOP_2   
11F8                DLOOP_2:   .SET   DLOOP_3   
11F8                DLOOP_3:   .SET   DLOOP_4   
11F8                DLOOP_4:   .SET   DLOOP_5   
11F8                DLOOP_5:   .SET   DLOOP_6   
11F8                DLOOP_6:   .SET   DLOOP_7   
11F8                DLOOP_7:   .SET   DLOOP_8   
11F8                DLOOP_8:   .SET   DLOOP_9   
11F8                DLOOP_9:   .SET   DLOOP_10   
11F8                DLOOP_10:   .SET   DLOOP_11   
11F8                DLOOP_11:   .SET   DLOOP_12   
11F8                DLOOP_12:   .SET   0   
11F8   C9                     RET      
11F9                             ; 
11F9                             ; getKey -  inputs a line buffered character
11F9                             ; params: none
11F9                             ; returns: A = character,
11F9                             ; 
11F9                GETKEY:      
11F9   E5                     PUSH   HL   
11FA   D5                     PUSH   DE   
11FB   C5                     PUSH   BC   
11FC   2A 49 22               LD   HL,(currkey)   
11FF   ED 5B 4B 22            LD   DE,(lineBufTop)   
1203   B7                     OR   A   
1204   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
1206                          ;*Macro unroll:  _if nc
1206   D2 0C 12               JP   nc,L_M_2069S212   
1209   C3 09 12               JP   $   
120C                          ;*Macro unroll:  STRUC_PUSH $
120C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
120C                STRUC_12:   .SET   STRUC_11   
120C                STRUC_11:   .SET   STRUC_10   
120C                STRUC_10:   .SET   STRUC_9   
120C                STRUC_9:   .SET   STRUC_8   
120C                STRUC_8:   .SET   STRUC_7   
120C                STRUC_7:   .SET   STRUC_6   
120C                STRUC_6:   .SET   STRUC_5   
120C                STRUC_5:   .SET   STRUC_4   
120C                STRUC_4:   .SET   STRUC_3   
120C                STRUC_3:   .SET   STRUC_2   
120C                STRUC_2:   .SET   STRUC_TOP   
120C                STRUC_TOP:   .SET   $   
120C                L_M_2069S212:      
120C   2A 45 22               LD   HL,(lineBufStart)   ; lineBuf
120F   ED 5B 47 22            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
1213   CD 69 11               CALL   getline   
1216   21 4D 22               LD   HL,lineBuf   
1219   22 49 22               LD   (currkey),HL   
121C   B7                     OR   A   
121D   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
121F   22 4B 22               LD   (lineBufTop),HL   
1222                          ;*Macro unroll:  _endif
1222                          ;*Macro unroll:  STRUC_FWD
1222                CUR_ADR:   .SET   $   
120A                          .ORG   STRUC_TOP - 2   
120A   22 12                  DW   CUR_ADR   
1222                          .ORG   CUR_ADR   
1222                          ;*Macro unroll:  STRUC_POP
1222                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1222                STRUC_TOP:   .SET   STRUC_2   
1222                STRUC_2:   .SET   STRUC_3   
1222                STRUC_3:   .SET   STRUC_4   
1222                STRUC_4:   .SET   STRUC_5   
1222                STRUC_5:   .SET   STRUC_6   
1222                STRUC_6:   .SET   STRUC_7   
1222                STRUC_7:   .SET   STRUC_8   
1222                STRUC_8:   .SET   STRUC_9   
1222                STRUC_9:   .SET   STRUC_10   
1222                STRUC_10:   .SET   STRUC_11   
1222                STRUC_11:   .SET   STRUC_12   
1222                STRUC_12:   .SET   0   
1222   2A 49 22               LD   HL,(currkey)   
1225   7E                     LD   A,(HL)   ; get next key from input lineBuf
1226   23                     INC   HL   
1227   22 49 22               LD   (currkey),HL   ; increment currkey
122A   C1                     POP   BC   
122B   D1                     POP   DE   
122C   E1                     POP   HL   
122D   C9                     RET      
122E                             ; 
122E                             ; Output pascal string ***
122E                             ; params: DE = addr
122E                             ; 
122E                PRINTPSTR:      
122E   F5                     PUSH   AF   
122F   C5                     PUSH   BC   
1230   D5                     PUSH   DE   
1231   1A                     LD   A,(DE)   
1232   4F                     LD   C,A   
1233   06 00                  LD   B,0   
1235   13                     INC   DE   
1236   CD E5 11               CALL   printRoutine   
1239   D1                     POP   DE   
123A   C1                     POP   BC   
123B   F1                     POP   AF   
123C   C9                     RET      
123D                             ; 
123D                             ; Output string
123D                             ; params: DE = addr, BC = length
123D                             ; 
123D                PRINTSTR:      
123D   F5                     PUSH   AF   
123E   C5                     PUSH   BC   
123F   D5                     PUSH   DE   
1240   CD E5 11               CALL   printRoutine   
1243   D1                     POP   DE   
1244   C1                     POP   BC   
1245   F1                     POP   AF   
1246   C9                     RET      
1247                PRINTCR:      
1247   D5                     PUSH   DE   
1248   11 82 10               LD   DE,TXT_NEWLINE   
124B   CD 2E 12               CALL   printPStr   
124E   D1                     POP   DE   
124F   C9                     RET      
1250                PRINTSPACE:      
1250   F5                     PUSH   AF   
1251   3E 20                  LD   A," "   
1253   CD 4F 11               CALL   putc   
1256   F1                     POP   AF   
1257   C9                     RET      
1258                          ;*Macro unroll: CODE "LIT",3,0,LIT
1258                HEADER_LIT:      
1258   4D 10                  DW   link   
125A                LINK:     .SET   HEADER_LIT   
125A   03                     DB   0 + 3   
125B   6C 69 74               DB   "LIT"   
125E                LIT:         
125E                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
125E   DD 71 00               LD   (IX+0),C   ; pushTOS
1261   DD 23                  INC   IX   
1263   DD 70 00               LD   (IX+0),B   
1266   DD 23                  INC   IX   
1268   E1                     POP   HL   ; pop address of next Forth word in HL
1269                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
1269   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
126A   23                     INC   HL   
126B   46                     LD   B,(HL)   
126C   23                     INC   HL   
126D                          ;*Macro unroll:  NEXT1
126D   C3 20 0F               JP   enter1   
1270                          ;*Macro unroll: CODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
1270                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
1270   58 12                  DW   link   
1272                LINK:     .SET   HEADER_ROT   
1272   03                     DB   0 + 3   
1273   72 6F 74               DB   "rot"   
1276                ROT:         
1276                             ; x3 in BC
1276                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
1276   DD 2B                  DEC   IX   ; x2 in DE
1278   DD 56 00               LD   D,(IX+0)   
127B   DD 2B                  DEC   IX   
127D   DD 5E 00               LD   E,(IX+0)   
1280                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
1280   DD 2B                  DEC   IX   ; x1 in HL
1282   DD 66 00               LD   H,(IX+0)   
1285   DD 2B                  DEC   IX   
1287   DD 6E 00               LD   L,(IX+0)   
128A                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
128A   DD 73 00               LD   (IX+0),E   ; x2 on stack
128D   DD 23                  INC   IX   
128F   DD 72 00               LD   (IX+0),D   
1292   DD 23                  INC   IX   
1294                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
1294                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1294   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1297   DD 23                  INC   IX   
1299   DD 70 00               LD   (IX+0),B   
129C   DD 23                  INC   IX   
129E   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
129F   4D                     LD   C,L   
12A0                             ; x1 in BC
12A0                          ;*Macro unroll:  NEXT
12A0   C3 1F 0F               JP   enter   
12A3                          ;*Macro unroll: CODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
12A3                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
12A3   70 12                  DW   link   
12A5                LINK:     .SET   HEADER_NROT   
12A5   04                     DB   0 + 4   
12A6   2D 72 6F 74            DB   "-rot"   
12AA                NROT:        
12AA                             ; x3 in BC
12AA                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
12AA   DD 2B                  DEC   IX   ; x2 in DE
12AC   DD 56 00               LD   D,(IX+0)   
12AF   DD 2B                  DEC   IX   
12B1   DD 5E 00               LD   E,(IX+0)   
12B4                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
12B4   DD 2B                  DEC   IX   ; x1 in HL
12B6   DD 66 00               LD   H,(IX+0)   
12B9   DD 2B                  DEC   IX   
12BB   DD 6E 00               LD   L,(IX+0)   
12BE                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
12BE                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12BE   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
12C1   DD 23                  INC   IX   
12C3   DD 70 00               LD   (IX+0),B   
12C6   DD 23                  INC   IX   
12C8   44                     LD   B,H   ; PUSH x1 - x3 x1
12C9   4D                     LD   C,L   
12CA                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
12CA                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12CA   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
12CD   DD 23                  INC   IX   
12CF   DD 70 00               LD   (IX+0),B   
12D2   DD 23                  INC   IX   
12D4   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
12D5   4B                     LD   C,E   
12D6                             ; x2 in BC
12D6                          ;*Macro unroll:  NEXT
12D6   C3 1F 0F               JP   enter   
12D9                          ;*Macro unroll: CODE "dup",3,0,DUPP        ; x -- x x
12D9                HEADER_DUPP:      ; x -- x x
12D9   A3 12                  DW   link   
12DB                LINK:     .SET   HEADER_DUPP   
12DB   03                     DB   0 + 3   
12DC   64 75 70               DB   "dup"   
12DF                DUPP:        
12DF                          ;*Macro unroll:  ppush0 B,C
12DF   DD 71 00               LD   (IX+0),C   
12E2   DD 23                  INC   IX   
12E4   DD 70 00               LD   (IX+0),B   
12E7   DD 23                  INC   IX   
12E9                          ;*Macro unroll:  NEXT
12E9   C3 1F 0F               JP   enter   
12EC                             ; SWAP     x1 x2 -- x2 x1    swap top two items
12EC                          ;*Macro unroll: CODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
12EC                HEADER_SWAP:      ; x1 x2 -- x2 x1
12EC   D9 12                  DW   link   
12EE                LINK:     .SET   HEADER_SWAP   
12EE   04                     DB   0 + 4   
12EF   73 77 61 70            DB   "swap"   
12F3                SWAP:        
12F3                          ;*Macro unroll:  ppop0 D,E
12F3   DD 2B                  DEC   IX   
12F5   DD 56 00               LD   D,(IX+0)   
12F8   DD 2B                  DEC   IX   
12FA   DD 5E 00               LD   E,(IX+0)   
12FD                          ;*Macro unroll:  ppush D,E
12FD                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12FD   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1300   DD 23                  INC   IX   
1302   DD 70 00               LD   (IX+0),B   
1305   DD 23                  INC   IX   
1307   42                     LD   B,D   
1308   4B                     LD   C,E   
1309                          ;*Macro unroll:  NEXT
1309   C3 1F 0F               JP   enter   
130C                          ;*Macro unroll: CODE "drop",4,0,DROP      ; x --
130C                HEADER_DROP:      ; x --
130C   EC 12                  DW   link   
130E                LINK:     .SET   HEADER_DROP   
130E   04                     DB   0 + 4   
130F   64 72 6F 70            DB   "drop"   
1313                DROP:        
1313                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
1313   DD 2B                  DEC   IX   ; drop top of stack
1315   DD 46 00               LD   B,(IX+0)   
1318   DD 2B                  DEC   IX   
131A   DD 4E 00               LD   C,(IX+0)   
131D                          ;*Macro unroll:  NEXT
131D   C3 1F 0F               JP   enter   
1320                             ; OVER    x1 x2 -- x1 x2 x1
1320                          ;*Macro unroll: CODE "over",4,0,OVER
1320                HEADER_OVER:      
1320   0C 13                  DW   link   
1322                LINK:     .SET   HEADER_OVER   
1322   04                     DB   0 + 4   
1323   6F 76 65 72            DB   "over"   
1327                OVER:        
1327                          ;*Macro unroll:  ppop0 H,L
1327   DD 2B                  DEC   IX   
1329   DD 66 00               LD   H,(IX+0)   
132C   DD 2B                  DEC   IX   
132E   DD 6E 00               LD   L,(IX+0)   
1331                          ;*Macro unroll:  ppush0 H,L
1331   DD 75 00               LD   (IX+0),L   
1334   DD 23                  INC   IX   
1336   DD 74 00               LD   (IX+0),H   
1339   DD 23                  INC   IX   
133B                          ;*Macro unroll:  ppush H,L
133B                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
133B   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
133E   DD 23                  INC   IX   
1340   DD 70 00               LD   (IX+0),B   
1343   DD 23                  INC   IX   
1345   44                     LD   B,H   
1346   4D                     LD   C,L   
1347                          ;*Macro unroll:  NEXT
1347   C3 1F 0F               JP   enter   
134A                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
134A                          ;*Macro unroll: CODE ">r",2,0,TOR
134A                HEADER_TOR:      
134A   20 13                  DW   link   
134C                LINK:     .SET   HEADER_TOR   
134C   02                     DB   0 + 2   
134D   3E 72                  DB   ">r"   
134F                TOR:         
134F   E1                     POP   HL   
1350   C5                     PUSH   BC   
1351   E5                     PUSH   HL   
1352                          ;*Macro unroll:  ppop0 B,C
1352   DD 2B                  DEC   IX   
1354   DD 46 00               LD   B,(IX+0)   
1357   DD 2B                  DEC   IX   
1359   DD 4E 00               LD   C,(IX+0)   
135C                          ;*Macro unroll:  NEXT
135C   C3 1F 0F               JP   enter   
135F                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
135F                          ;*Macro unroll: CODE "r>",2,0,RFROM
135F                HEADER_RFROM:      
135F   4A 13                  DW   link   
1361                LINK:     .SET   HEADER_RFROM   
1361   02                     DB   0 + 2   
1362   72 3E                  DB   "r>"   
1364                RFROM:       
1364                          ;*Macro unroll:  ppush0 B,C
1364   DD 71 00               LD   (IX+0),C   
1367   DD 23                  INC   IX   
1369   DD 70 00               LD   (IX+0),B   
136C   DD 23                  INC   IX   
136E   E1                     POP   HL   
136F   C1                     POP   BC   
1370   E5                     PUSH   HL   
1371                          ;*Macro unroll:  NEXT
1371   C3 1F 0F               JP   enter   
1374                             ;   2DROP       ( w w -- )
1374                             ;               Discard two items on stack.
1374                          ;*Macro unroll: CODE	'2DROP',5,0,DDROP
1374                HEADER_DDROP:      
1374   5F 13                  DW   link   
1376                LINK:     .SET   HEADER_DDROP   
1376   05                     DB   0 + 5   
1377   32 44 52 4F 50         DB   "2DROP"   
137C                DDROP:       
137C                          ;*Macro unroll:  ENTER
137C   CF                     RST   $08   
137D   13 13 13 13 30 0F      DW   DROP,DROP,EXIT   
1383                             ;   2DUP        ( w1 w2 -- w1 w2 w1 w2 )
1383                             ;               Duplicate top two items.
1383                          ;*Macro unroll: CODE	'2DUP',4,0,DDUP
1383                HEADER_DDUP:      
1383   74 13                  DW   link   
1385                LINK:     .SET   HEADER_DDUP   
1385   04                     DB   0 + 4   
1386   32 44 55 50            DB   "2DUP"   
138A                DDUP:        
138A                          ;*Macro unroll:  ENTER
138A   CF                     RST   $08   
138B   27 13 27 13 30 0F      DW   OVER,OVER,EXIT   
1391                LITSTR:      ; pushes ptr to string and length on stack
1391   CF                     RST   $08   ; enter forth
1392   64 13                  DW   rfrom   
1394   AB 13 27 13 27 13 E8 00 DW   count,over,over,plus   
139C   4F 13                  DW   tor   
139E                          ;*Macro unroll:  EXIT
139E   30 0F                  DW   exit   
13A0   C3 1F 0F               JP   enter   
13A3                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
13A3                          ;*Macro unroll: CODE "count",5,0,count
13A3                HEADER_COUNT:      
13A3   83 13                  DW   link   
13A5                LINK:     .SET   HEADER_count   
13A5   05                     DB   0 + 5   
13A6   63 6F 75 6E 74         DB   "count"   
13AB                COUNT:       
13AB                          ;*Macro unroll:  ENTER
13AB   CF                     RST   $08   
13AC   DF 12 5E 12 01 00 E8 00 DW   DUPP,LIT,1,plus   ; ( ptr -- ptr ptr+1)
13B4   F3 12 90 0F            DW   swap,CAT   ; ( ptr ptr+1 -- ptr+1 len)
13B8                          ;*Macro unroll:  EXIT
13B8   30 0F                  DW   exit   
13BA   C3 1F 0F               JP   enter   
13BD                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
13BD                             ; to define the name s" using asm80
13BD                          ;*Macro unroll: CODE {"s",$22},2,IMMED,squote
13BD                HEADER_SQUOTE:      
13BD   A3 13                  DW   link   
13BF                LINK:     .SET   HEADER_squote   
13BF   82                     DB   IMMED + 2   
13C0   73 22                  DB   "s",$22   
13C2                SQUOTE:      
13C2   18 04                  JR   qt   
13C4                          ;*Macro unroll: CODE $22,1,IMMED,qt
13C4                HEADER_QT:      
13C4   BD 13                  DW   link   
13C6                LINK:     .SET   HEADER_qt   
13C6   81                     DB   IMMED + 1   
13C7   22                     DB   $22   
13C8                QT:          
13C8                          ;*Macro unroll:  ENTER
13C8   CF                     RST   $08   
13C9   40 09 63 0F 72 03      DW   state,AT,zequal   
13CF                          ;*Macro unroll:  cIf
13CF   EF 07 00 00            DW   QBRAN,0   
13D3                          ;*Macro unroll:  CPL_PUSH $
13D3                CPL_COUNT:   .SET   CPL_COUNT + 1   
13D3                CPL_10:   .SET   CPL_9   
13D3                CPL_9:    .SET   CPL_8   
13D3                CPL_8:    .SET   CPL_7   
13D3                CPL_7:    .SET   CPL_6   
13D3                CPL_6:    .SET   CPL_5   
13D3                CPL_5:    .SET   CPL_4   
13D3                CPL_4:    .SET   CPL_3   
13D3                CPL_3:    .SET   CPL_2   
13D3                CPL_2:    .SET   CPL_TOP   
13D3                CPL_TOP:   .SET   $   
13D3   5E 12 22 00            DW   LIT,$22   ; delim
13D7   5E 12 3F 00            DW   LIT,63   ; limit 63 + length
13DB   A3 09 63 0F            DW   latestStr,AT   
13DF   5E 12 CD 22 56 01      DW   LIT,wordBuf,equal   
13E5                          ;*Macro unroll:  cIf
13E5   EF 07 00 00            DW   QBRAN,0   
13E9                          ;*Macro unroll:  CPL_PUSH $
13E9                CPL_COUNT:   .SET   CPL_COUNT + 1   
13E9                CPL_10:   .SET   CPL_9   
13E9                CPL_9:    .SET   CPL_8   
13E9                CPL_8:    .SET   CPL_7   
13E9                CPL_7:    .SET   CPL_6   
13E9                CPL_6:    .SET   CPL_5   
13E9                CPL_5:    .SET   CPL_4   
13E9                CPL_4:    .SET   CPL_3   
13E9                CPL_3:    .SET   CPL_2   
13E9                CPL_2:    .SET   CPL_TOP   
13E9                CPL_TOP:   .SET   $   
13E9   5E 12 0D 23            DW   LIT,wordBuf2   
13ED                          ;*Macro unroll:  cElse
13ED   0C 08 00 00            DW   BRAN,0   
13F1                          ;*Macro unroll:  cBRANCH_FWD
13F1                CUR_ADR:   .SET   $   
13E7                          .ORG   CPL_TOP - 2   
13E7   F1 13                  DW   CUR_ADR   
13F1                          .ORG   CUR_ADR   
13F1                CPL_TOP:   .SET   $   
13F1   5E 12 CD 22            DW   LIT,wordBuf   
13F5                          ;*Macro unroll:  cEndIf
13F5                          ;*Macro unroll:  cBRANCH_FWD
13F5                CUR_ADR:   .SET   $   
13EF                          .ORG   CPL_TOP - 2   
13EF   F5 13                  DW   CUR_ADR   
13F5                          .ORG   CUR_ADR   
13F5                          ;*Macro unroll:  CPL_POP
13F5                CPL_COUNT:   .SET   CPL_COUNT - 1   
13F5                CPL_TOP:   .SET   CPL_2   
13F5                CPL_2:    .SET   CPL_3   
13F5                CPL_3:    .SET   CPL_4   
13F5                CPL_4:    .SET   CPL_5   
13F5                CPL_5:    .SET   CPL_6   
13F5                CPL_6:    .SET   CPL_7   
13F5                CPL_7:    .SET   CPL_8   
13F5                CPL_8:    .SET   CPL_9   
13F5                CPL_9:    .SET   CPL_10   
13F5                CPL_10:   .SET   0   
13F5   A3 09 42 0F            DW   latestStr,STORE   ; STORE here in latestStr
13F9   A3 09 63 0F            DW   latestStr,AT   
13FD   63 0C AB 13            DW   xword,count   
1401                          ;*Macro unroll:  cElse
1401   0C 08 00 00            DW   BRAN,0   
1405                          ;*Macro unroll:  cBRANCH_FWD
1405                CUR_ADR:   .SET   $   
13D1                          .ORG   CPL_TOP - 2   
13D1   05 14                  DW   CUR_ADR   
1405                          .ORG   CUR_ADR   
1405                CPL_TOP:   .SET   $   
1405   5E 12 91 13 08 10      DW   LIT,litstr,comma   
140B   5E 12 22 00 B3 0B      DW   LIT,$22,word   
1411   90 0F 9A 03            DW   CAT,ONEP   
1415   E6 0F                  DW   allot   
1417                          ;*Macro unroll:  cEndif
1417                          ;*Macro unroll:  cBRANCH_FWD
1417                CUR_ADR:   .SET   $   
1403                          .ORG   CPL_TOP - 2   
1403   17 14                  DW   CUR_ADR   
1417                          .ORG   CUR_ADR   
1417                          ;*Macro unroll:  CPL_POP
1417                CPL_COUNT:   .SET   CPL_COUNT - 1   
1417                CPL_TOP:   .SET   CPL_2   
1417                CPL_2:    .SET   CPL_3   
1417                CPL_3:    .SET   CPL_4   
1417                CPL_4:    .SET   CPL_5   
1417                CPL_5:    .SET   CPL_6   
1417                CPL_6:    .SET   CPL_7   
1417                CPL_7:    .SET   CPL_8   
1417                CPL_8:    .SET   CPL_9   
1417                CPL_9:    .SET   CPL_10   
1417                CPL_10:   .SET   0   
1417                          ;*Macro unroll:  EXIT
1417   30 0F                  DW   exit   
1419   C3 1F 0F               JP   enter   
141C                             ; 
141C                             ; compareStr - string equal
141C                             ; params: de = string1, HL = string2, BC = length
141C                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
141C                             ; destroys: de, HL, BC
141C                             ; 
141C                COMPARESTR:      
141C                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
141C   79                     LD   A,C   ; test for Count=0
141D   B0                     OR   B   
141E                          ;*Macro unroll:  _if nz          ; length zero = match
141E   C2 24 14               JP   nz,L_M_2238S56   ; length zero = match
1421   C3 21 14               JP   $   
1424                          ;*Macro unroll:  STRUC_PUSH $
1424                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1424                STRUC_12:   .SET   STRUC_11   
1424                STRUC_11:   .SET   STRUC_10   
1424                STRUC_10:   .SET   STRUC_9   
1424                STRUC_9:   .SET   STRUC_8   
1424                STRUC_8:   .SET   STRUC_7   
1424                STRUC_7:   .SET   STRUC_6   
1424                STRUC_6:   .SET   STRUC_5   
1424                STRUC_5:   .SET   STRUC_4   
1424                STRUC_4:   .SET   STRUC_3   
1424                STRUC_3:   .SET   STRUC_2   
1424                STRUC_2:   .SET   STRUC_TOP   
1424                STRUC_TOP:   .SET   $   
1424                L_M_2238S56:      
1424                          ;*Macro unroll:  _do
1424   18 03                  JR   L_M_2239S57   
1426   C3 26 14               JP   $   
1429                          ;*Macro unroll:  DLOOP_PUSH $
1429                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1429                DLOOP_12:   .SET   DLOOP_11   
1429                DLOOP_11:   .SET   DLOOP_10   
1429                DLOOP_10:   .SET   DLOOP_9   
1429                DLOOP_9:   .SET   DLOOP_8   
1429                DLOOP_8:   .SET   DLOOP_7   
1429                DLOOP_7:   .SET   DLOOP_6   
1429                DLOOP_6:   .SET   DLOOP_5   
1429                DLOOP_5:   .SET   DLOOP_4   
1429                DLOOP_4:   .SET   DLOOP_3   
1429                DLOOP_3:   .SET   DLOOP_2   
1429                DLOOP_2:   .SET   DLOOP_TOP   
1429                DLOOP_TOP:   .SET   $   
1429                L_M_2239S57:      
1429   1A                     LD   A,(DE)   
142A   13                     INC   DE   
142B   ED A1                  CPI      
142D                          ;*Macro unroll:  _if nz          ; char mismatch: exit
142D   C2 33 14               JP   nz,L_M_2243S61   ; char mismatch: exit
1430   C3 30 14               JP   $   
1433                          ;*Macro unroll:  STRUC_PUSH $
1433                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1433                STRUC_12:   .SET   STRUC_11   
1433                STRUC_11:   .SET   STRUC_10   
1433                STRUC_10:   .SET   STRUC_9   
1433                STRUC_9:   .SET   STRUC_8   
1433                STRUC_8:   .SET   STRUC_7   
1433                STRUC_7:   .SET   STRUC_6   
1433                STRUC_6:   .SET   STRUC_5   
1433                STRUC_5:   .SET   STRUC_4   
1433                STRUC_4:   .SET   STRUC_3   
1433                STRUC_3:   .SET   STRUC_2   
1433                STRUC_2:   .SET   STRUC_TOP   
1433                STRUC_TOP:   .SET   $   
1433                L_M_2243S61:      
1433   2B                     DEC   HL   ; point at mismatch char
1434   BE                     CP   (HL)   ; set carry if char1 < char2
1435   9F                     SBC   A,A   
1436   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
1438   C9                     RET      
1439                          ;*Macro unroll:  _endif
1439                          ;*Macro unroll:  STRUC_FWD
1439                CUR_ADR:   .SET   $   
1431                          .ORG   STRUC_TOP - 2   
1431   39 14                  DW   CUR_ADR   
1439                          .ORG   CUR_ADR   
1439                          ;*Macro unroll:  STRUC_POP
1439                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1439                STRUC_TOP:   .SET   STRUC_2   
1439                STRUC_2:   .SET   STRUC_3   
1439                STRUC_3:   .SET   STRUC_4   
1439                STRUC_4:   .SET   STRUC_5   
1439                STRUC_5:   .SET   STRUC_6   
1439                STRUC_6:   .SET   STRUC_7   
1439                STRUC_7:   .SET   STRUC_8   
1439                STRUC_8:   .SET   STRUC_9   
1439                STRUC_9:   .SET   STRUC_10   
1439                STRUC_10:   .SET   STRUC_11   
1439                STRUC_11:   .SET   STRUC_12   
1439                STRUC_12:   .SET   0   
1439                          ;*Macro unroll:  _until po
1439   E2 26 14               JP   po,DLOOP_TOP - 3   
143C                          ;*Macro unroll:  DLOOP_FWD               ; needed?
143C                CUR_ADR:   .SET   $   ; needed?
1427                          .ORG   DLOOP_TOP - 2   
1427   3C 14                  DW   CUR_ADR   
143C                          .ORG   CUR_ADR   
143C                          ;*Macro unroll:  _enddo
143C   C3 29 14               JP   DLOOP_TOP   
143F                          ;*Macro unroll:  DLOOP_FWD
143F                CUR_ADR:   .SET   $   
1427                          .ORG   DLOOP_TOP - 2   
1427   3F 14                  DW   CUR_ADR   
143F                          .ORG   CUR_ADR   
143F                          ;*Macro unroll:  DLOOP_POP
143F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
143F                DLOOP_TOP:   .SET   DLOOP_2   
143F                DLOOP_2:   .SET   DLOOP_3   
143F                DLOOP_3:   .SET   DLOOP_4   
143F                DLOOP_4:   .SET   DLOOP_5   
143F                DLOOP_5:   .SET   DLOOP_6   
143F                DLOOP_6:   .SET   DLOOP_7   
143F                DLOOP_7:   .SET   DLOOP_8   
143F                DLOOP_8:   .SET   DLOOP_9   
143F                DLOOP_9:   .SET   DLOOP_10   
143F                DLOOP_10:   .SET   DLOOP_11   
143F                DLOOP_11:   .SET   DLOOP_12   
143F                DLOOP_12:   .SET   0   
143F                          ;*Macro unroll:  _endif
143F                          ;*Macro unroll:  STRUC_FWD
143F                CUR_ADR:   .SET   $   
1422                          .ORG   STRUC_TOP - 2   
1422   3F 14                  DW   CUR_ADR   
143F                          .ORG   CUR_ADR   
143F                          ;*Macro unroll:  STRUC_POP
143F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
143F                STRUC_TOP:   .SET   STRUC_2   
143F                STRUC_2:   .SET   STRUC_3   
143F                STRUC_3:   .SET   STRUC_4   
143F                STRUC_4:   .SET   STRUC_5   
143F                STRUC_5:   .SET   STRUC_6   
143F                STRUC_6:   .SET   STRUC_7   
143F                STRUC_7:   .SET   STRUC_8   
143F                STRUC_8:   .SET   STRUC_9   
143F                STRUC_9:   .SET   STRUC_10   
143F                STRUC_10:   .SET   STRUC_11   
143F                STRUC_11:   .SET   STRUC_12   
143F                STRUC_12:   .SET   0   
143F                             ; count exhausted & no mismatch found
143F   3E 00                  LD   A,0   ; a=0 (s1=s2)
1441   C9                     RET      
1442                          ;*Macro unroll: CODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
1442                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
1442   C4 13                  DW   link   
1444                LINK:     .SET   HEADER_pack   
1444   04                     DB   0 + 4   
1445   70 61 63 6B            DB   "pack"   
1449                PACK:        
1449                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
1449   50                     LD   D,B   ; DE = adr2, BC = len
144A   59                     LD   E,C   
144B                          ;*Macro unroll:  ppop0 B,C
144B   DD 2B                  DEC   IX   
144D   DD 46 00               LD   B,(IX+0)   
1450   DD 2B                  DEC   IX   
1452   DD 4E 00               LD   C,(IX+0)   
1455   D5                     PUSH   DE   
1456                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
1456   DD 2B                  DEC   IX   ; HL = adr1
1458   DD 66 00               LD   H,(IX+0)   
145B   DD 2B                  DEC   IX   
145D   DD 6E 00               LD   L,(IX+0)   
1460   79                     LD   A,C   
1461   12                     LD   (DE),A   ; write length byte to adr2
1462   13                     INC   DE   ; adr2 += 1
1463   ED B0                  LDIR      
1465   C1                     POP   BC   ; TOS = adr2
1466                          ;*Macro unroll:  NEXT
1466   C3 1F 0F               JP   enter   
1469                             ; .s print stack (non-destructively)
1469                          ;*Macro unroll: CODE ".sx",2,0,dotsx                   ; ( -- )
1469                HEADER_DOTSX:      ; ( -- )
1469   42 14                  DW   link   
146B                LINK:     .SET   HEADER_dotsx   
146B   02                     DB   0 + 2   
146C   2E 73 78               DB   ".sx"   
146F                DOTSX:       
146F                          ;*Macro unroll:  ENTER
146F   CF                     RST   $08   
1470   B4 0F                  DW   spAT   ; psp
1472   70 09 63 0F            DW   sp0,AT   ; psp0
1476   38 01                  DW   SUBB   
1478   5E 12 00 00 A6 01      DW   LIT,0,GREATR   
147E   EF 07 BC 14            DW   QBRAN,DOTS3   
1482   70 09 63 0F 5E 12 02 00 E8 00 DW   sp0,AT,LIT,2,plus   
148C                          ;*Macro unroll:  cdo
148C   DC 07 06 00            DW   XBRAN,6   
1490   DC 07 00 00            DW   XBRAN,0   
1494                          ;*Macro unroll:  CPL_PUSH $
1494                CPL_COUNT:   .SET   CPL_COUNT + 1   
1494                CPL_10:   .SET   CPL_9   
1494                CPL_9:    .SET   CPL_8   
1494                CPL_8:    .SET   CPL_7   
1494                CPL_7:    .SET   CPL_6   
1494                CPL_6:    .SET   CPL_5   
1494                CPL_5:    .SET   CPL_4   
1494                CPL_4:    .SET   CPL_3   
1494                CPL_3:    .SET   CPL_2   
1494                CPL_2:    .SET   CPL_TOP   
1494                CPL_TOP:   .SET   $   
1494   DF 12                  DW   DUPP   
1496   B4 0F 5E 12 02 00 38 01 DW   spAT,LIT,2,SUBB   
149E   F3 12 38 01 72 03      DW   swap,SUBB,zequal   
14A4                          ;*Macro unroll:  cuntil
14A4   72 03 BE 07 E8 FF      DW   ZEQUAL,XQBRAN,CPL_TOP - $ - 8   
14AA   DF 12 63 0F 2D 0A      DW   DUPP,AT,dot   
14B0   5E 12 02 00 E8 00      DW   LIT,2,plus   
14B6                          ;*Macro unroll:  cenddo
14B6   DC 07 DC FF            DW   XBRAN,CPL_TOP - $ - 2   
14BA                          ;*Macro unroll:  XBRANCH_FWD
14BA                CUR_ADR:   .SET   $   
1492                          .ORG   CPL_TOP - 2   
1492   28 00                  DW   CUR_ADR - CPL_TOP + 2   
14BA                          .ORG   CUR_ADR   
14BA                          ;*Macro unroll:  CPL_POP
14BA                CPL_COUNT:   .SET   CPL_COUNT - 1   
14BA                CPL_TOP:   .SET   CPL_2   
14BA                CPL_2:    .SET   CPL_3   
14BA                CPL_3:    .SET   CPL_4   
14BA                CPL_4:    .SET   CPL_5   
14BA                CPL_5:    .SET   CPL_6   
14BA                CPL_6:    .SET   CPL_7   
14BA                CPL_7:    .SET   CPL_8   
14BA                CPL_8:    .SET   CPL_9   
14BA                CPL_9:    .SET   CPL_10   
14BA                CPL_10:   .SET   0   
14BA   13 13                  DW   drop   
14BC                DOTS3:       
14BC                          ;*Macro unroll:  EXIT
14BC   30 0F                  DW   exit   
14BE   C3 1F 0F               JP   enter   
14C1                          ;*Macro unroll: CODE "words", 5, 0, WORDS
14C1                HEADER_WORDS:      
14C1   69 14                  DW   link   
14C3                LINK:     .SET   HEADER_WORDS   
14C3   05                     DB   0 + 5   
14C4   77 6F 72 64 73         DB   "words"   
14C9                WORDS:       
14C9   C5                     PUSH   BC   
14CA   CD D1 14               CALL   listWords   
14CD   C1                     POP   BC   
14CE                          ;*Macro unroll:  NEXT
14CE   C3 1F 0F               JP   enter   
14D1                LISTWORDS:      
14D1   ED 5B 5F 24            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
14D5                          ;*Macro unroll:  _do
14D5   18 03                  JR   L_M_2293S30   
14D7   C3 D7 14               JP   $   
14DA                          ;*Macro unroll:  DLOOP_PUSH $
14DA                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
14DA                DLOOP_12:   .SET   DLOOP_11   
14DA                DLOOP_11:   .SET   DLOOP_10   
14DA                DLOOP_10:   .SET   DLOOP_9   
14DA                DLOOP_9:   .SET   DLOOP_8   
14DA                DLOOP_8:   .SET   DLOOP_7   
14DA                DLOOP_7:   .SET   DLOOP_6   
14DA                DLOOP_6:   .SET   DLOOP_5   
14DA                DLOOP_5:   .SET   DLOOP_4   
14DA                DLOOP_4:   .SET   DLOOP_3   
14DA                DLOOP_3:   .SET   DLOOP_2   
14DA                DLOOP_2:   .SET   DLOOP_TOP   
14DA                DLOOP_TOP:   .SET   $   
14DA                L_M_2293S30:      
14DA                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
14DA   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
14DB   B2                     OR   D   
14DC                          ;*Macro unroll:  _until z
14DC   CA D7 14               JP   z,DLOOP_TOP - 3   
14DF                          ;*Macro unroll:  DLOOP_FWD               ; needed?
14DF                CUR_ADR:   .SET   $   ; needed?
14D8                          .ORG   DLOOP_TOP - 2   
14D8   DF 14                  DW   CUR_ADR   
14DF                          .ORG   CUR_ADR   
14DF   D5                     PUSH   DE   ; save ptr to header
14E0   13                     INC   DE   ; skip over first field
14E1   13                     INC   DE   
14E2   1A                     LD   A,(DE)   ; a = flags+length field
14E3   E6 7F                  AND   HIDE | LENMASK   ; %al = name length
14E5   06 00                  LD   B,0   
14E7   4F                     LD   C,A   
14E8   13                     INC   DE   
14E9   CD 3D 12               CALL   printStr   
14EC   CD 50 12               CALL   printSpace   
14EF   CD 4F 11               CALL   putc   
14F2   E1                     POP   HL   ; HL = link to previous header
14F3   5E                     LD   E,(HL)   
14F4   23                     INC   HL   
14F5   56                     LD   D,(HL)   ; DE = previous word
14F6                          ;*Macro unroll:  _enddo
14F6   C3 DA 14               JP   DLOOP_TOP   
14F9                          ;*Macro unroll:  DLOOP_FWD
14F9                CUR_ADR:   .SET   $   
14D8                          .ORG   DLOOP_TOP - 2   
14D8   F9 14                  DW   CUR_ADR   
14F9                          .ORG   CUR_ADR   
14F9                          ;*Macro unroll:  DLOOP_POP
14F9                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
14F9                DLOOP_TOP:   .SET   DLOOP_2   
14F9                DLOOP_2:   .SET   DLOOP_3   
14F9                DLOOP_3:   .SET   DLOOP_4   
14F9                DLOOP_4:   .SET   DLOOP_5   
14F9                DLOOP_5:   .SET   DLOOP_6   
14F9                DLOOP_6:   .SET   DLOOP_7   
14F9                DLOOP_7:   .SET   DLOOP_8   
14F9                DLOOP_8:   .SET   DLOOP_9   
14F9                DLOOP_9:   .SET   DLOOP_10   
14F9                DLOOP_10:   .SET   DLOOP_11   
14F9                DLOOP_11:   .SET   DLOOP_12   
14F9                DLOOP_12:   .SET   0   
14F9   CD 47 12               CALL   printCR   
14FC   C9                     RET      
14FD                             ; "latest" must be the last word defined
14FD                          ;*Macro unroll:  mVAR "latest",6,0,latest, var_latest
14FD                          ;*Macro unroll: CODE "latest",6,0,latest
14FD                HEADER_LATEST:      
14FD   C1 14                  DW   link   
14FF                LINK:     .SET   HEADER_latest   
14FF   06                     DB   0 + 6   
1500   6C 61 74 65 73 74      DB   "latest"   
1506                LATEST:      
1506                          ;*Macro unroll:  ppush0 B,C
1506   DD 71 00               LD   (IX+0),C   
1509   DD 23                  INC   IX   
150B   DD 70 00               LD   (IX+0),B   
150E   DD 23                  INC   IX   
1510   01 5F 24               LD   BC,var_latest   
1513                          ;*Macro unroll:  NEXT
1513   C3 1F 0F               JP   enter   
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
                    TESTS_START:      
                                 ; 
                                 ; test-macros
                                 ; 
                                 ; macros to facilitate tests
                                 ; 
                    .macro TEST_SET_TEXT,s1
                                 ; 
                     ld HL, (lineBufStart)
                     ld (lineBufTop),HL
                     ld (currkey),HL
                     ld HL, tst_text%%M
                     ld (char_pointer), HL
                     _skip
                    tst_text%%M:
                     db s1,"\r\n",-1,"\r\n"
                     _endskip
                    .endm
                     
                                 ; prevents using _if macro here
                    .macro EXPECT,expect,failtxt
                                 ; 
                     call printNum
                     loadWord H,L, B,C
                     ld L, C
                     ppop0 B,C
                     CMP16 expect
                     jp z, tf_done%%M            ; asm80 macro nesting issue
                     ld DE, FAILED
                     call printPStr
                     ld DE, te_fail%%M
                     call printPStr
                     halt
                     _skip
                    te_fail%%M:
                     .pstr failtxt
                     _endskip
                    tf_done%%M:
                    .endm
                     
                                 ; 
                                 ; tests
                                 ; 
                                 ; these tests will evaluate when TESTMODE = 1
                                 ; 
                              ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2363S7   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2363S7:      
                              DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "100 const y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2365S9   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2365S9:      
                              DB   "100 const y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2367S11   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2367S11:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "expect 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2369S13   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2369S13   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2369S13:      
                              .PSTR   "100 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2369S13:      
                              ;*Macro unroll: TEST_SET_TEXT "100 constant y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2370S15   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2370S15:      
                              DB   "100 constant y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2372S17   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2372S17:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "expect 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2374S19   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2374S19   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2374S19:      
                              .PSTR   "100 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2374S19:      
                              ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2375S21   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2375S21:      
                              DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "x y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2377S23   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2377S23:      
                              DB   "x y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2379S25   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2379S25:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2381S28   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2381S28:      
                              DB   ": const create does> , ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "23 const x"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2383S30   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2383S30:      
                              DB   "23 const x","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "x ."
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2385S32   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2385S32:      
                              DB   "x .","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "23 constant y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2387S35   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2387S35:      
                              DB   "23 constant y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "y"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2389S37   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2389S37:      
                              DB   "y","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 23, "expect 23"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 23
                              LD   DE,23   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2391S39   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2391S39   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2391S39:      
                              .PSTR   "23 23"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2391S39:      
                              ;*Macro unroll: ppushValue 1
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,1   
                              ;*Macro unroll: TEST_SET_TEXT "dup"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2393S42   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2393S42:      
                              DB   "dup","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 1, "1 interpret dup"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 1
                              LD   DE,1   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2395S44   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2395S44   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2395S44:      
                              .PSTR   "1 interpret dup"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2395S44:      
                              ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 1
                              LD   DE,1   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2396S45   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2396S45   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2396S45:      
                              .PSTR   "1 interpret dup 2"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2396S45:      
                              ;*Macro unroll: TEST_SET_TEXT "123"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2397S47   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2397S47:      
                              DB   "123","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 123, "interpret 123"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 123
                              LD   DE,123   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2399S49   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2399S49   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2399S49:      
                              .PSTR   "interpret 123"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2399S49:      
                              ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2400S51   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2400S51:      
                              DB   "123 constant x123","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "x123"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2402S53   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2402S53:      
                              DB   "x123","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 123, "constant x123 = 123"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 123
                              LD   DE,123   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2404S55   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2404S55   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2404S55:      
                              .PSTR   "constant x123 = 123"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2404S55:      
                              ;*Macro unroll: TEST_SET_TEXT "variable v1"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2405S57   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2405S57:      
                              DB   "variable v1","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 123
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,123   
                              ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2408S60   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2408S60:      
                              DB   "123 v1 !","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "v1 @"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2410S62   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2410S62:      
                              DB   "v1 @","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 123, "variable v1 = 123"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 123
                              LD   DE,123   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2412S64   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2412S64   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2412S64:      
                              .PSTR   "variable v1 = 123"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2412S64:      
                              ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2413S66   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2413S66:      
                              DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 2
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,2   
                              ;*Macro unroll: TEST_SET_TEXT "dbl"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2416S69   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2416S69:      
                              DB   "dbl","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 4
                              LD   DE,4   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2418S71   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2418S71   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2418S71:      
                              .PSTR   "colon dbl 2 = 4"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2418S71:      
                              ;*Macro unroll: ppushValue 200
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,200   
                              ;*Macro unroll: ppushValue 1
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,1   
                              ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2421S75   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2421S75:      
                              DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "testif2"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2423S78   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2423S78:      
                              DB   "testif2","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2425S80   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2425S80   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2425S80:      
                              .PSTR   "1 if 100 endif --> 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2425S80:      
                              ;*Macro unroll: ppushValue 0
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,0   
                              ;*Macro unroll: TEST_SET_TEXT "testif2"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2427S83   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2427S83:      
                              DB   "testif2","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 200
                              LD   DE,200   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2429S85   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2429S85   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2429S85:      
                              .PSTR   "0 if 100 endif --> 200"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2429S85:      
                              ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2430S87   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2430S87:      
                              DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 0
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,0   
                              ;*Macro unroll: TEST_SET_TEXT "testif3"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2433S92   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2433S92:      
                              DB   "testif3","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 200, "0 --> 200"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 200
                              LD   DE,200   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2435S94   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2435S94   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2435S94:      
                              .PSTR   "0 --> 200"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2435S94:      
                              ;*Macro unroll: ppushValue 1
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,1   
                              ;*Macro unroll: TEST_SET_TEXT "testif3"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2437S98   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2437S98:      
                              DB   "testif3","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "1 --> 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2439S100   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2439S100   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2439S100:      
                              .PSTR   "1 --> 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2439S100:      
                              ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2440S102   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2440S102:      
                              DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 0
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,0   
                              ;*Macro unroll: TEST_SET_TEXT "testloop"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2443S105   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2443S105:      
                              DB   "testloop","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 5
                              LD   DE,5   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2445S107   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2445S107   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2445S107:      
                              .PSTR   "Loop until limit < 5"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2445S107:      
                              ;*Macro unroll: TEST_SET_TEXT "100"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2446S110   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2446S110:      
                              DB   "100","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 100, "interpret parse 100"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 100
                              LD   DE,100   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2448S112   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2448S112   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2448S112:      
                              .PSTR   "interpret parse 100"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2448S112:      
                              ;*Macro unroll: TEST_SET_TEXT "3 2 +"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2449S114   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2449S114:      
                              DB   "3 2 +","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 5
                              LD   DE,5   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2451S116   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2451S116   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2451S116:      
                              .PSTR   "3 + 2 = 5"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2451S116:      
                              ;*Macro unroll: TEST_SET_TEXT ": add + ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2452S118   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2452S118:      
                              DB   ": add + ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: ppushValue 2
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,2   
                              ;*Macro unroll: ppushValue 2
                              ;*Macro unroll:  ppush0 B,C
                              LD   (IX+0),C   
                              INC   IX   
                              LD   (IX+0),B   
                              INC   IX   
                              LD   BC,2   
                              ;*Macro unroll: TEST_SET_TEXT "add"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2456S123   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2456S123:      
                              DB   "add","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 4, "2 2 add = 4"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 4
                              LD   DE,4   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2458S125   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2458S125   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2458S125:      
                              .PSTR   "2 2 add = 4"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2458S125:      
                              ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2459S127   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2459S127:      
                              DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "dump"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2461S130   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2461S130:      
                              DB   "dump","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2463S133   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2463S133:      
                              DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "str type"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2465S135   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2465S135:      
                              DB   "str type","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "str"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2467S137   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2467S137:      
                              DB   "str","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 3, "str len = 3"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 3
                              LD   DE,3   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2469S139   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2469S139   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2469S139:      
                              .PSTR   "str len = 3"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2469S139:      
                              ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2470S141   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2470S141:      
                              DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "dup"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2472S143   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2472S143:      
                              DB   "dup","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 3, "str len = 3"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 3
                              LD   DE,3   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2474S145   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2474S145   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2474S145:      
                              .PSTR   "str len = 3"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2474S145:      
                              ;*Macro unroll: TEST_SET_TEXT "type"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2475S146   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2475S146:      
                              DB   "type","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                                 ; 
                                 ; ld HL, 12
                                 ; ld C, 10
                                 ; call divideWordByByte
                                 ; ld B, 0
                                 ; ld C, A
                                 ; EXPECT 2, "div 11 / 10 = 1 1"
                                 ; TEST_SET_TEXT "hello\r\n"
                                 ; call KEY
                                 ; EXPECT $68, "key 'h'"
                                 ; call KEY
                                 ; EXPECT $65, "key 'e'"
                                 ; TEST_SET_TEXT "x"
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 1, "word 'x'"
                                 ; ppop H,L   ; drop
                                 ; TEST_SET_TEXT "xyz"
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 3, "word 'xyz'"
                                 ; ppop H,L   ; drop
                                 ; TEST_SET_TEXT "a xyz "
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 1, "word 'a xyz'"
                                 ; ppushValue $20
                                 ; call WORD
                                 ; call COUNT
                                 ; EXPECT 3, "word 'a xyz'"
                                 ; ppop H,L   ; drop
                                 ; call HERE
                                 ; call AT
                                 ; EXPECT START_USER, "here"
                                 ; TEST_SET_TEXT "xyz"
                                 ; call CREATE
                                 ; call LATEST
                                 ; call AT
                                 ; EXPECT START_USER, "create xyz latest"
                                 ; call HERE
                                 ; call AT
                                 ; EXPECT START_USER + 6, "create xyz here"
                                 ; ppushValue 1
                                 ; ppushValue 2
                                 ; call DUP
                                 ; EXPECT 2, "dup 2"
                                 ; EXPECT 2, "dup 2"
                                 ; ppushValue -10
                                 ; ppushValue 10
                                 ; call STAR
                                 ; EXPECT -100, "expect -10 * 10 to be -100"
                                 ; ppushValue -10
                                 ; ppushValue -20
                                 ; call STAR
                                 ; EXPECT 200, "expect -10 * -20 to be 200"
                                 ; ppushValue 10
                                 ; ppushValue -20
                                 ; call STAR
                                 ; EXPECT -200, "expect -10 * -20 to be 200"
                                 ; ppushValue -101
                                 ; ppushValue 20
                                 ; call SLASHMOD
                                 ; EXPECT -5, "expect -101 / 20 to be -5"
                                 ; EXPECT -1, "expect -101 % 20 to be -1"
                                 ; ppushValue -101
                                 ; ppushValue -20
                                 ; call SLASHMOD
                                 ; EXPECT 5,  "expect -101 / -20 to be 5"
                                 ; EXPECT -1, "expect -101 % -20 to be -1"
                                 ; ppushValue 101
                                 ; ppushValue -20
                                 ; call SLASHMOD
                                 ; EXPECT -5,  "expect 101 / -20 to be -5"
                                 ; EXPECT 1, "expect 101 % -20 to be 1"
                                 ; TEST_SET_TEXT ": testif2 if 100 endif ;"
                                 ; ppushValue 0
                                 ; TEST_SET_TEXT "testloop"
                                 ; call INTERPRET
                                 ; EXPECT 5, "Loop until limit < 5"
                                 ; ppushPText "xyz"
                                 ; call COUNT
                                 ; EXPECT 3, "xyz length 3"
                                 ; call CAT
                                 ; EXPECT "x" + 0, "xyz --> x"
                                 ; ppushValue HEADER_LATEST
                                 ; call TCFA
                                 ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
                                 ; ppushValue 1
                                 ; ppushValue 2
                                 ; ppushValue HEADER_PLUS
                                 ; call TCFA
                                 ; call EXECUTE
                                 ; EXPECT 3, "1 2 plus = 3"
                                 ; ppushText "100",3
                                 ; call NUMBER
                                 ; EXPECT 0, "0 = no parse err"
                                 ; EXPECT 100, "parse 100"
                                 ; ppushText "latest",6
                                 ; call FIND
                                 ; EXPECT HEADER_LATEST, "find header of LATEST"
                                 ; TEST_SET_TEXT "base"
                                 ; ENTER
                                 ; dw interpret
                                 ; dw exit_forth
                                 ; call AT
                                 ; EXPECT 10, "expect base to be 10"
                                 ; ppushText "add",3
                                 ; call FIND
                                 ; ppushValue 64
                                 ; TEST_SET_TEXT "decimal"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "#h 100"
                                 ; INTERPRET
                                 ; EXPECT $100, "expect hex $100"
                                 ; TEST_SET_TEXT "hex"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "#d 100"
                                 ; INTERPRET
                                 ; EXPECT 100, "expect decimal 100"
                                 ; TEST_SET_TEXT "decimal"
                                 ; INTERPRET
                              ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2601S18   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2601S18:      
                              DB   "16 base ! 20","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 32
                              LD   DE,32   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2603S20   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2603S20   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2603S20:      
                              .PSTR   "32 $20 to be 32"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2603S20:      
                              ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2604S22   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2604S22:      
                              DB   "0A base ! 20","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 20
                              LD   DE,20   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2606S24   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2606S24   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2606S24:      
                              .PSTR   "20 decimal 20 to be 32"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2606S24:      
                              ;*Macro unroll: TEST_SET_TEXT "100 100 +"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2607S1   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2607S1:      
                              DB   "100 100 +","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 200, "100 100 + = 200"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 200
                              LD   DE,200   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2609S3   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2609S3   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2609S3:      
                              .PSTR   "100 100 + = 200"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2609S3:      
                              ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2610S5   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2610S5:      
                              DB   "100 10 + .","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: TEST_SET_TEXT "-10 abs"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2612S8   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2612S8:      
                              DB   "-10 abs","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 10
                              LD   DE,10   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2614S10   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2614S10   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2614S10:      
                              .PSTR   "10 abs -10 to be 10"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2614S10:      
                              ;*Macro unroll: TEST_SET_TEXT "10 abs"
                              LD   HL,(lineBufStart)   
                              LD   (lineBufTop),HL   
                              LD   (currkey),HL   
                              LD   HL,tst_textM_2615S12   
                              LD   (char_pointer),HL   
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TST_TEXTM_2615S12:      
                              DB   "10 abs","\r\n",-1,"\r\n"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              ;*Macro unroll: INTERPRET
                              RST   $08   
                              DW   interpret   
                              DW   exit_forth   
                              ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 10
                              LD   DE,10   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2617S14   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2617S14   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2617S14:      
                              .PSTR   "10 abs 10 to be 10"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2617S14:      
                                 ; TEST_SET_TEXT "100 buffer: xvar"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "xvar pack"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "xvar count dup"
                                 ; INTERPRET
                                 ; EXPECT 3, "str len = 3"
                                 ; TEST_SET_TEXT "type"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
                                 ; INTERPRET
                                 ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "x1"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
                                 ; INTERPRET
                                 ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
                                 ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
                                 ; INTERPRET
                                 ; EXPECT 200, "select"
                                 ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
                                 ; INTERPRET
                                 ; EXPECT 5, "Loop until limit < 5"
                                 ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
                                 ; INTERPRET
                                 ; TEST_SET_TEXT "0 q"
                                 ; INTERPRET
                                 ; EXPECT 200, "define: q 0 = 200"
                                 ; TEST_SET_TEXT "1 q"
                                 ; INTERPRET
                                 ; EXPECT 100, "define: q 1 = 100"
                                 ; ENTER
                                 ; dw litstr
                                 ; .pstr "Expected parse error"
                                 ; dw type
                                 ; dw exit_forth
                                 ; ppushValue 999
                                 ; TEST_SET_TEXT "$$123"
                                 ; INTERPRET
                                 ; EXPECT 999, "interpret $$123"
                              ;*Macro unroll:  PRINT_STR DONE
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,DONE   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              HALT      
2000                          ENDIF      
2000                          DS   RET_STACK_SIZE   ; return stack size
2100                RET_STACK:      ; return stack, grows down
2100                RPP:         ; RP0 grows down (into TIBB)
2100                DATA_STACK:      
2100                          DS   DATA_STACK_SIZE   ; TODO: change remove double data stack size
2200                SPP:         ; SP0 (should) grow down
2200                          ALIGN   $100   
2200                SERBUF:   DS   SER_BUFSIZE   
223F   00 00        SERINPTR:   DW   0   
2241   00 00        SERRDPTR:   DW   0   
2243   00 00        SERBUFUSED:   DW   0   
2245   00 00        LINEBUFSTART:   DW   0   
2247   00 00        LINEBUFSIZE:   DW   0   
2249   00 00        CURRKEY:   DW   0   
224B   00 00        LINEBUFTOP:   DW   0   
224D                LINEBUF:   DS   LINE_BUFSIZE   
22CD                WORDBUF:   DS   64   
230D                WORDBUF2:   DS   64   
234D                VAR_PAD:   DS   PAD_SIZE   
244D   00 00        EXITADDR:   DW   0   
244F   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
2451   00 00        VAR_HERE:   DW   0   
2453   00 00        VAR_INTP_STOP:   DW   0   
2455   00 00        VAR_STATE:   DW   0   
2457   00 00        VAR_NESTING:   DW   0   
2459   00 00        VAR_SP0:   DW   0   ;PAR_STACK
245B   00 00        VAR_BASE:   DW   0   
245D   00 00        VAR_LATEST_STR:   DW   0   
245F   00 00        VAR_LATEST:   DW   0   
2461                          IF   TESTMODE   
                                 ; used for mocking getc
                    CHAR_POINTER:   DW   0   
2461                          ENDIF      
2461                START_USER:      ; user allocated data starts here


TESTMODE:           0000 DEFINED AT LINE 3
MEM_SIZE:           10000 DEFINED AT LINE 1 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
ROM_SIZE:           2000 DEFINED AT LINE 2 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 3 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
BM:                 0000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
EM:                 10000 DEFINED AT LINE 6 IN constants.z80
START_ROM:          0000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 14
END_ROM:            2000 DEFINED AT LINE 9 IN constants.z80
START_RAM:          2000 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
                    > USED AT LINE 63
END_RAM:            10000 DEFINED AT LINE 12 IN constants.z80
RET_STACK_SIZE:     0100 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 2 IN variables.z80
DATA_STACK_SIZE:    0100 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 7 IN variables.z80
PAD_SIZE:           0100 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 35 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 90 IN core-serial.z80
                    > USED AT LINE 11 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 52 IN core-serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 20 IN constants.z80
                    > USED AT LINE 99 IN core-serial.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 16 IN core-serial.z80
                    > USED AT LINE 19 IN variables.z80
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 108 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 183 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 26
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
HIDE:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 127 IN core-compiler.z80
                    > USED AT LINE 26
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
LENMASK:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 26
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 84 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
                    > USED AT LINE 71 IN core-compiler.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 8 IN core-extra.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN core-serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 23 IN core-kernel.z80
                    > USED AT LINE 19 IN core-serial.z80
                    > USED AT LINE 101 IN core-serial.z80
LINK:               14FD DEFINED AT LINE 9
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
STRUC_COUNT:        143E DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
DLOOP_COUNT:        14F8 DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
CPL_COUNT:          14B9 DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 66
                    > USED AT LINE 38
                    > USED AT LINE 110
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 15
RST08:              0008 DEFINED AT LINE 20
RST38:              0038 DEFINED AT LINE 24
RST66:              0066 DEFINED AT LINE 28
START:              0067 DEFINED AT LINE 31
                    > USED AT LINE 17
HEADER_ZLESS:       008D DEFINED AT LINE 6
                    > USED AT LINE 9
ZLESS:              0092 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 190 IN core-alu.z80
                    > USED AT LINE 194 IN core-alu.z80
                    > USED AT LINE 236 IN core-alu.z80
HEADER_ANDD:        009A DEFINED AT LINE 6
                    > USED AT LINE 9
ANDD:               00A0 DEFINED AT LINE 13
                    > USED AT LINE 5 IN core-extra.z80
                    > USED AT LINE 18 IN core-extra.z80
                    > USED AT LINE 29 IN core-extra.z80
HEADER_ORR:         00B3 DEFINED AT LINE 6
                    > USED AT LINE 9
ORR:                00B8 DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-interpreter.z80
                    > USED AT LINE 210 IN core-interpreter.z80
HEADER_XORR:        00CB DEFINED AT LINE 6
                    > USED AT LINE 9
XORR:               00D1 DEFINED AT LINE 13
                    > USED AT LINE 82 IN core-alu.z80
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 189 IN core-alu.z80
                    > USED AT LINE 235 IN core-alu.z80
HEADER_PLUS:        00E4 DEFINED AT LINE 6
                    > USED AT LINE 9
PLUS:               00E8 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 160 IN core-alu.z80
                    > USED AT LINE 19 IN core-interpreter.z80
HEADER_INVER:       00F8 DEFINED AT LINE 6
                    > USED AT LINE 9
INVER:              00FE DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 63 IN core-alu.z80
HEADER_NEGAT:       0107 DEFINED AT LINE 6
                    > USED AT LINE 9
NEGAT:              0110 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 75 IN core-alu.z80
                    > USED AT LINE 156 IN core-alu.z80
                    > USED AT LINE 202 IN core-alu.z80
                    > USED AT LINE 207 IN core-alu.z80
                    > USED AT LINE 238 IN core-alu.z80
HEADER_DNEGA:       0117 DEFINED AT LINE 6
                    > USED AT LINE 9
DNEGA:              0121 DEFINED AT LINE 13
HEADER_SUBB:        0134 DEFINED AT LINE 6
                    > USED AT LINE 9
SUBB:               0138 DEFINED AT LINE 13
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 6 IN core-utilities.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_ABS:         013F DEFINED AT LINE 6
                    > USED AT LINE 9
ABS:                0145 DEFINED AT LINE 13
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
ABS1:               0150 DEFINED AT LINE 76 IN core-alu.z80
HEADER_EQUAL:       0152 DEFINED AT LINE 6
                    > USED AT LINE 9
EQUAL:              0156 DEFINED AT LINE 13
EQU1:               0163 DEFINED AT LINE 85 IN core-alu.z80
                    > USED AT LINE 83 IN core-alu.z80
HEADER_ULESS:       0169 DEFINED AT LINE 6
                    > USED AT LINE 9
ULESS:              016E DEFINED AT LINE 13
                    > USED AT LINE 154 IN core-alu.z80
ULES1:              0181 DEFINED AT LINE 95 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
HEADER_LESS:        0187 DEFINED AT LINE 6
                    > USED AT LINE 9
LESS:               018B DEFINED AT LINE 13
                    > USED AT LINE 111 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
LESS1:              019C DEFINED AT LINE 104 IN core-alu.z80
HEADER_GREATERTHAN: 01A2 DEFINED AT LINE 6
                    > USED AT LINE 9
GREATR:        01A6 DEFINED AT LINE 13
HEADER_MAX:         01BE DEFINED AT LINE 6
                    > USED AT LINE 9
MAX:                01C4 DEFINED AT LINE 13
MAX1:               01CF DEFINED AT LINE 118 IN core-alu.z80
HEADER_MIN:         01D3 DEFINED AT LINE 6
                    > USED AT LINE 9
MIN:                01D9 DEFINED AT LINE 13
MIN1:               01E6 DEFINED AT LINE 127 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
HEADER_WITHI:       01EA DEFINED AT LINE 6
                    > USED AT LINE 9
WITHI:              01F3 DEFINED AT LINE 13
HEADER_UPLUS:       0202 DEFINED AT LINE 6
                    > USED AT LINE 9
UPLUS:              0208 DEFINED AT LINE 13
                    > USED AT LINE 162 IN core-alu.z80
UMP2:               0222 DEFINED AT LINE 145 IN core-alu.z80
UMP1:               0223 DEFINED AT LINE 147 IN core-alu.z80
                    > USED AT LINE 144 IN core-alu.z80
HEADER_UMMOD:       0226 DEFINED AT LINE 6
                    > USED AT LINE 9
UMMOD:              022F DEFINED AT LINE 13
UMM1:               0240 DEFINED AT LINE 157 IN core-alu.z80
                    > USED AT LINE 170 IN core-alu.z80
UMM2:               0276 DEFINED AT LINE 166 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
UMM3:               0278 DEFINED AT LINE 168 IN core-alu.z80
                    > USED AT LINE 165 IN core-alu.z80
UMM4:               0284 DEFINED AT LINE 172 IN core-alu.z80
                    > USED AT LINE 155 IN core-alu.z80
HEADER_USLASHMOD:   0290 DEFINED AT LINE 6
                    > USED AT LINE 9
USLASHMOD:          0298 DEFINED AT LINE 13
                    > USED AT LINE 198 IN core-alu.z80
HEADER_SLASHMOD:    02B4 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASHMOD:           02BB DEFINED AT LINE 13
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 217 IN core-alu.z80
SLASHMOD1:          02E0 DEFINED AT LINE 203 IN core-alu.z80
                    > USED AT LINE 201 IN core-alu.z80
SLASHMOD2:          02EA DEFINED AT LINE 208 IN core-alu.z80
                    > USED AT LINE 206 IN core-alu.z80
HEADER_MOD:         02EF DEFINED AT LINE 6
                    > USED AT LINE 9
MOD:                02F5 DEFINED AT LINE 13
HEADER_SLASH:       02FC DEFINED AT LINE 6
                    > USED AT LINE 9
SLASH:              0300 DEFINED AT LINE 13
HEADER_USTAR:       0309 DEFINED AT LINE 6
                    > USED AT LINE 9
USTAR:              030E DEFINED AT LINE 13
                    > USED AT LINE 233 IN core-alu.z80
HEADER_STAR:        0328 DEFINED AT LINE 6
                    > USED AT LINE 9
STAR:               032C DEFINED AT LINE 13
STAR1:              0347 DEFINED AT LINE 239 IN core-alu.z80
                    > USED AT LINE 237 IN core-alu.z80
HEADER_CELLP:       034C DEFINED AT LINE 6
                    > USED AT LINE 9
CELLP:              0354 DEFINED AT LINE 13
                    > USED AT LINE 22 IN core-compiler.z80
HEADER_CELLM:       0357 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLM:              035F DEFINED AT LINE 13
HEADER_CELLS:       0362 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLS:              036A DEFINED AT LINE 13
HEADER_ZEQUAL:      036D DEFINED AT LINE 6
                    > USED AT LINE 9
ZEQUAL:             0372 DEFINED AT LINE 13
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 184 IN core-compiler.z80
                    > USED AT LINE 197 IN core-compiler.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 187 IN core-interpreter.z80
                    > USED AT LINE 206 IN core-interpreter.z80
                    > USED AT LINE 98
L_M_840S256:        037A DEFINED AT LINE 75
                    > USED AT LINE 72
CUR_ADR:            14F9 DEFINED AT LINE 63
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 67
                    > USED AT LINE 68
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
HEADER_ZNEQU:       0381 DEFINED AT LINE 6
                    > USED AT LINE 9
ZNEQU:              0387 DEFINED AT LINE 13
                    > USED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 174 IN core-interpreter.z80
L_M_847S264:        038F DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ONEP:        0395 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEP:               039A DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 70 IN core-compiler.z80
                    > USED AT LINE 86 IN core-compiler.z80
                    > USED AT LINE 154 IN core-compiler.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_ONEM:        039E DEFINED AT LINE 6
                    > USED AT LINE 9
ONEM:               03A3 DEFINED AT LINE 13
HEADER_TWOP:        03A7 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOP:               03AC DEFINED AT LINE 13
                    > USED AT LINE 244 IN core-alu.z80
HEADER_TWOM:        03B1 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOM:               03B6 DEFINED AT LINE 13
                    > USED AT LINE 247 IN core-alu.z80
HEADER_TWOST:       03BB DEFINED AT LINE 6
                    > USED AT LINE 9
TWOST:              03C0 DEFINED AT LINE 13
                    > USED AT LINE 251 IN core-alu.z80
HEADER_TWOSLASH:    03C7 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSLASH:           03CC DEFINED AT LINE 13
NEGATENUM:          03D3 DEFINED AT LINE 307 IN core-alu.z80
                    > USED AT LINE 47 IN core-format.z80
                    > USED AT LINE 165 IN core-format.z80
DIVIDEWORDBYBYTE:   03DB DEFINED AT LINE 324 IN core-alu.z80
                    > USED AT LINE 53 IN core-format.z80
L_M_900S327:        03E3 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_903S330:        03EB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_908S335:        03F7 DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   03FC DEFINED AT LINE 350 IN core-alu.z80
                    > USED AT LINE 181 IN core-alu.z80
L_M_926S355:        0408 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_930S359:        0413 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_940S369:        0422 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_944S373:        042D DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   0436 DEFINED AT LINE 392 IN core-alu.z80
                    > USED AT LINE 224 IN core-alu.z80
                    > USED AT LINE 123 IN core-format.z80
                    > USED AT LINE 153 IN core-format.z80
L_M_965S396:        0441 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_970S401:        044F DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_COMPI:       0458 DEFINED AT LINE 6
                    > USED AT LINE 9
COMPI:              0462 DEFINED AT LINE 13
HEADER_COLON:       0471 DEFINED AT LINE 6
                    > USED AT LINE 9
COLON:              0475 DEFINED AT LINE 13
HEADER_SEMICOLON:   0499 DEFINED AT LINE 6
                    > USED AT LINE 9
SEMICOLON:          049D DEFINED AT LINE 13
HEADER_COLONNONAME: 04B1 DEFINED AT LINE 6
                    > USED AT LINE 9
COLONNONAME:        04BB DEFINED AT LINE 13
HEADER_VARIABLE:    04CD DEFINED AT LINE 6
                    > USED AT LINE 9
VARIABLE:           04D8 DEFINED AT LINE 13
HEADER_BUFFERCOLON: 04EE DEFINED AT LINE 6
                    > USED AT LINE 9
BUFFERCOLON:        04F8 DEFINED AT LINE 13
HEADER_CREATE:      0508 DEFINED AT LINE 6
                    > USED AT LINE 9
CREATE:             0511 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-compiler.z80
                    > USED AT LINE 92 IN core-compiler.z80
XCREATE:            053B DEFINED AT LINE 74 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
HEADER_DOES:        0543 DEFINED AT LINE 6
                    > USED AT LINE 9
DOES:               054B DEFINED AT LINE 13
HEADER_CONSTANT:    0571 DEFINED AT LINE 6
                    > USED AT LINE 9
CONSTANT:           057C DEFINED AT LINE 13
                    > USED AT LINE 54 IN core-compiler.z80
                    > USED AT LINE 61 IN core-compiler.z80
HEADER_TICK:        058D DEFINED AT LINE 6
                    > USED AT LINE 9
TICK:               0591 DEFINED AT LINE 13
HEADER_IMMEDIATE:   05AB DEFINED AT LINE 6
                    > USED AT LINE 9
IMMEDIATE:          05B7 DEFINED AT LINE 13
HEADER_FIND:        05C3 DEFINED AT LINE 6
                    > USED AT LINE 9
FIND:               05CA DEFINED AT LINE 13
HEADER_HIDDEN:      05DC DEFINED AT LINE 6
                    > USED AT LINE 9
HIDDEN:             05E5 DEFINED AT LINE 13
HEADER_LBRAC:       05FA DEFINED AT LINE 6
                    > USED AT LINE 9
LBRAC:              05FE DEFINED AT LINE 13
                    > USED AT LINE 39 IN core-compiler.z80
HEADER_RBRAC:       0607 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRAC:              060B DEFINED AT LINE 13
                    > USED AT LINE 32 IN core-compiler.z80
                    > USED AT LINE 46 IN core-compiler.z80
DODOES:             0614 DEFINED AT LINE 141 IN core-compiler.z80
                    > USED AT LINE 82 IN core-compiler.z80
XDOES:              0624 DEFINED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 81 IN core-compiler.z80
HEADER_POSTPONE:    063E DEFINED AT LINE 6
                    > USED AT LINE 9
POSTPONE:           0649 DEFINED AT LINE 13
POSTPONETOKEN:      0667 DEFINED AT LINE 168 IN core-compiler.z80
                    > USED AT LINE 164 IN core-compiler.z80
POSTPONEWORD:       0683 DEFINED AT LINE 179 IN core-compiler.z80
                    > USED AT LINE 173 IN core-compiler.z80
POSTPONELITERAL:    06BF DEFINED AT LINE 194 IN core-compiler.z80
                    > USED AT LINE 175 IN core-compiler.z80
HEADER_IF:          06F0 DEFINED AT LINE 6
                    > USED AT LINE 9
IF:                 06F5 DEFINED AT LINE 13
HEADER_ELSE:        070B DEFINED AT LINE 6
                    > USED AT LINE 9
ELSE:               0712 DEFINED AT LINE 13
HEADER_ENDIF:       072C DEFINED AT LINE 6
                    > USED AT LINE 9
ENDIF:              0734 DEFINED AT LINE 13
XENDIF:             073E DEFINED AT LINE 23 IN core-control.z80
                    > USED AT LINE 14 IN core-control.z80
                    > USED AT LINE 19 IN core-control.z80
HEADER_BEGIN:       0752 DEFINED AT LINE 6
                    > USED AT LINE 9
BEGIN:              075A DEFINED AT LINE 13
HEADER_WHILE:       0766 DEFINED AT LINE 6
                    > USED AT LINE 9
WHILE:              076E DEFINED AT LINE 13
HEADER_REPEAT:      0784 DEFINED AT LINE 6
                    > USED AT LINE 9
REPEAT:             078D DEFINED AT LINE 13
HEADER_XQBRAN:      07B3 DEFINED AT LINE 6
                    > USED AT LINE 9
XQBRAN:             07BE DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 98
HEADER_XBRAN:       07D2 DEFINED AT LINE 6
                    > USED AT LINE 9
XBRAN:              07DC DEFINED AT LINE 13
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 60 IN core-control.z80
                    > USED AT LINE 88
                    > USED AT LINE 89
                    > USED AT LINE 110
HEADER_QBRAN:       07E5 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN:              07EF DEFINED AT LINE 13
                    > USED AT LINE 83 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
                    > USED AT LINE 155 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
                    > USED AT LINE 201 IN core-alu.z80
                    > USED AT LINE 206 IN core-alu.z80
                    > USED AT LINE 237 IN core-alu.z80
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 6 IN core-extra.z80
                    > USED AT LINE 19 IN core-extra.z80
                    > USED AT LINE 30 IN core-extra.z80
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 72
                    > USED AT LINE 8 IN core-utilities.z80
HEADER_BRAN:        0803 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN:               080C DEFINED AT LINE 13
                    > USED AT LINE 165 IN core-alu.z80
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 79 IN core-control.z80
                    > USED AT LINE 36 IN core-interpreter.z80
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
                    > USED AT LINE 77
HEADER_DONXT:       0814 DEFINED AT LINE 6
                    > USED AT LINE 9
DONXT:              081B DEFINED AT LINE 13
                    > USED AT LINE 170 IN core-alu.z80
DECHILO:            0830 DEFINED AT LINE 113 IN core-control.z80
                    > USED AT LINE 106 IN core-control.z80
DECLOW:             0832 DEFINED AT LINE 116 IN core-control.z80
                    > USED AT LINE 102 IN core-control.z80
HEADER_VERSION:     083B DEFINED AT LINE 6
                    > USED AT LINE 9
VERSION:            0845 DEFINED AT LINE 13
HEADER_RZ:          0855 DEFINED AT LINE 6
                    > USED AT LINE 9
RZ:                 085A DEFINED AT LINE 13
HEADER___MSK_IMMED: 086A DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_HIDDEN: 0886 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_LENGTH: 08A3 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER_TRUE:        08C0 DEFINED AT LINE 6
                    > USED AT LINE 9
TRUE:               08C7 DEFINED AT LINE 13
HEADER_FALSE:       08D7 DEFINED AT LINE 6
                    > USED AT LINE 9
FALSE:              08DF DEFINED AT LINE 13
HEADER_PAD:         08EF DEFINED AT LINE 6
                    > USED AT LINE 9
PAD:                08F5 DEFINED AT LINE 13
HEADER_HERE:        0905 DEFINED AT LINE 6
                    > USED AT LINE 9
HERE:               090C DEFINED AT LINE 13
                    > USED AT LINE 27 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 52 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 66 IN core-compiler.z80
                    > USED AT LINE 83 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 49 IN core-memory.z80
HEADER_INTP_STOP:   091C DEFINED AT LINE 6
                    > USED AT LINE 9
INTP_STOP:          0928 DEFINED AT LINE 13
HEADER_STATE:       0938 DEFINED AT LINE 6
                    > USED AT LINE 9
STATE:              0940 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
HEADER_NESTING:     0950 DEFINED AT LINE 6
                    > USED AT LINE 9
NESTING:            095A DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
HEADER_SP0:         096A DEFINED AT LINE 6
                    > USED AT LINE 9
SP0:                0970 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
HEADER_BASE:        0980 DEFINED AT LINE 6
                    > USED AT LINE 9
BASE:               0987 DEFINED AT LINE 13
HEADER_LATESTSTR:   0997 DEFINED AT LINE 6
                    > USED AT LINE 9
LATESTSTR:          09A3 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 33 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
HEADER_LBRACE:      09B3 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRACE:             09B7 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-control.z80
                    > USED AT LINE 34 IN core-control.z80
LBRACE1:            09D4 DEFINED AT LINE 9 IN core-extra.z80
                    > USED AT LINE 6 IN core-extra.z80
HEADER_RBRACE:      09DB DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACE:             09DF DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-extra.z80
RBRACE1:            09FA DEFINED AT LINE 21 IN core-extra.z80
                    > USED AT LINE 19 IN core-extra.z80
HEADER_RBRACEEXEC:  09FF DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACEEXEC:         0A07 DEFINED AT LINE 13
                    > USED AT LINE 20 IN core-control.z80
                    > USED AT LINE 53 IN core-control.z80
RBRACEEXEC1:        0A24 DEFINED AT LINE 34 IN core-extra.z80
                    > USED AT LINE 30 IN core-extra.z80
HEADER_DOT:         0A29 DEFINED AT LINE 6
                    > USED AT LINE 9
DOT:                0A2D DEFINED AT LINE 13
PRINTNUM:           0A52 DEFINED AT LINE 18 IN core-format.z80
FORMATNUM:          0A6B DEFINED AT LINE 39 IN core-format.z80
                    > USED AT LINE 9 IN core-format.z80
                    > USED AT LINE 26 IN core-format.z80
L_M_1357S42:        0A73 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1365S51:        0A81 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1374S60:        0A95 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1378S64:        0AA0 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           0AB0 DEFINED AT LINE 87 IN core-format.z80
                    > USED AT LINE 174 IN core-format.z80
L_M_1406S97:        0AC4 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1416S107:       0AD6 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1422S113:       0AE4 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1438S130:       0AFF DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1442S134:       0B0B DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0B36 DEFINED AT LINE 160 IN core-format.z80
                    > USED AT LINE 132 IN core-format.z80
L_M_1468S163:       0B3F DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_NUMBER:      0B48 DEFINED AT LINE 6
                    > USED AT LINE 9
NUMBER:             0B51 DEFINED AT LINE 13
                    > USED AT LINE 197 IN core-compiler.z80
                    > USED AT LINE 206 IN core-interpreter.z80
HEADER_DECIMAL:     0B6B DEFINED AT LINE 6
                    > USED AT LINE 9
DECIMAL:            0B75 DEFINED AT LINE 13
HEADER_HEX:         0B83 DEFINED AT LINE 6
                    > USED AT LINE 9
HEX:                0B89 DEFINED AT LINE 13
HEADER_QUIT:        0B97 DEFINED AT LINE 6
                    > USED AT LINE 9
QUIT:               0B9E DEFINED AT LINE 13
                    > USED AT LINE 41
HEADER_WORD:        0BAC DEFINED AT LINE 6
                    > USED AT LINE 9
WORD:               0BB3 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 100 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_TCFA:        0BC3 DEFINED AT LINE 6
                    > USED AT LINE 9
TCFA:               0BCA DEFINED AT LINE 13
                    > USED AT LINE 187 IN core-compiler.z80
                    > USED AT LINE 190 IN core-compiler.z80
                    > USED AT LINE 189 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_EXECUTE:     0BE0 DEFINED AT LINE 6
                    > USED AT LINE 9
EXECUTE:            0BEA DEFINED AT LINE 13
                    > USED AT LINE 33 IN core-extra.z80
                    > USED AT LINE 196 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_INTERPRET:   0BF7 DEFINED AT LINE 6
                    > USED AT LINE 9
INTERPRET:          0C03 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-interpreter.z80
INTERPRET1:         0C04 DEFINED AT LINE 28 IN core-interpreter.z80
                    > USED AT LINE 36 IN core-interpreter.z80
LOOKUP:             0C26 DEFINED AT LINE 47 IN core-interpreter.z80
                    > USED AT LINE 116 IN core-compiler.z80
L_M_1533S49:        0C2F DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1545S65:        0C3F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1554S76:        0C4E DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_XWORD:       0C5B DEFINED AT LINE 6
                    > USED AT LINE 9
XWORD:              0C63 DEFINED AT LINE 13
                    > USED AT LINE 11 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-strings.z80
XWORDSKIP:          0C6C DEFINED AT LINE 97 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-interpreter.z80
L_M_1578S103:       0CA7 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1580S106:       0CAF DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1582S109:       0CB7 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1588S116:       0CC6 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1589S117:       0CCB DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1592S120:       0CD6 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1599S128:       0CE8 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1602S132:       0CF3 DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0D00 DEFINED AT LINE 144 IN core-interpreter.z80
                    > USED AT LINE 94 IN core-interpreter.z80
L_M_1618S151:       0D2C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1622S155:       0D34 DEFINED AT LINE 73
                    > USED AT LINE 70
INTERPTOKEN:        0D4A DEFINED AT LINE 171 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-interpreter.z80
INTERPWORD:         0D66 DEFINED AT LINE 182 IN core-interpreter.z80
                    > USED AT LINE 176 IN core-interpreter.z80
INTERPLITERAL:      0DAA DEFINED AT LINE 203 IN core-interpreter.z80
                    > USED AT LINE 178 IN core-interpreter.z80
NESTPLUS:           0DE9 DEFINED AT LINE 223 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-extra.z80
NESTMINUS:          0DF3 DEFINED AT LINE 229 IN core-interpreter.z80
                    > USED AT LINE 15 IN core-extra.z80
HEADER_TYPE:        0DFD DEFINED AT LINE 6
                    > USED AT LINE 9
TYPE:               0E04 DEFINED AT LINE 13
                    > USED AT LINE 205 IN core-compiler.z80
                    > USED AT LINE 219 IN core-interpreter.z80
                    > USED AT LINE 54 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
HEADER_CR:          0E1E DEFINED AT LINE 6
                    > USED AT LINE 9
CR:                 0E23 DEFINED AT LINE 13
HEADER_ACCEPT:      0E29 DEFINED AT LINE 6
                    > USED AT LINE 9
ACCEPT:             0E32 DEFINED AT LINE 13
HEADER_KEY:         0E4E DEFINED AT LINE 6
                    > USED AT LINE 9
KEY:                0E54 DEFINED AT LINE 13
HEADER_EMIT:        0E5D DEFINED AT LINE 6
                    > USED AT LINE 9
EMIT:               0E64 DEFINED AT LINE 13
HEADER_QKEY:        0E75 DEFINED AT LINE 6
                    > USED AT LINE 9
QKEY:               0E7C DEFINED AT LINE 13
L_M_1723S33:        0E92 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_BL:          0E98 DEFINED AT LINE 6
                    > USED AT LINE 9
BL:                 0E9D DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 100 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_PRINT:       0EA7 DEFINED AT LINE 6
                    > USED AT LINE 9
PRINT:              0EAF DEFINED AT LINE 13
HEADER_DOTQUOTE:    0EC1 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTQUOTE:           0EC6 DEFINED AT LINE 13
INITFORTH:          0EE4 DEFINED AT LINE 1 IN core-kernel.z80
                    > USED AT LINE 34
ENTER:              0F1F DEFINED AT LINE 29 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 3 IN core-kernel.z80
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
ENTER1:             0F20 DEFINED AT LINE 31 IN core-kernel.z80
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
FORTH:              0F27 DEFINED AT LINE 40 IN core-kernel.z80
EXIT:               0F30 DEFINED AT LINE 47 IN core-kernel.z80
                    > USED AT LINE 77 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
EXIT_FORTH:         0F33 DEFINED AT LINE 51 IN core-kernel.z80
HEADER_NOOP:        0F34 DEFINED AT LINE 6
                    > USED AT LINE 9
NOOP:               0F3B DEFINED AT LINE 13
HEADER_STORE:       0F3E DEFINED AT LINE 6
                    > USED AT LINE 9
STORE:              0F42 DEFINED AT LINE 13
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 68 IN core-compiler.z80
                    > USED AT LINE 86 IN core-compiler.z80
                    > USED AT LINE 154 IN core-compiler.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 57 IN core-memory.z80
                    > USED AT LINE 33 IN core-strings.z80
HEADER_AT:          0F5F DEFINED AT LINE 6
                    > USED AT LINE 9
AT:                 0F63 DEFINED AT LINE 13
                    > USED AT LINE 27 IN core-compiler.z80
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 52 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 66 IN core-compiler.z80
                    > USED AT LINE 67 IN core-compiler.z80
                    > USED AT LINE 83 IN core-compiler.z80
                    > USED AT LINE 95 IN core-compiler.z80
                    > USED AT LINE 151 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_CSTORE:      0F6C DEFINED AT LINE 6
                    > USED AT LINE 9
CSTORE:             0F71 DEFINED AT LINE 13
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 153 IN core-compiler.z80
HEADER_CAT:         0F8B DEFINED AT LINE 6
                    > USED AT LINE 9
CAT:                0F90 DEFINED AT LINE 13
                    > USED AT LINE 70 IN core-compiler.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_RSPSTORE:    0F97 DEFINED AT LINE 6
                    > USED AT LINE 9
RSPSTORE:           0F9E DEFINED AT LINE 13
HEADER_SPAT:        0FAE DEFINED AT LINE 6
                    > USED AT LINE 9
SPAT:               0FB4 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
HEADER_SPSTORE:     0FC6 DEFINED AT LINE 6
                    > USED AT LINE 9
SPSTORE:            0FCC DEFINED AT LINE 13
HEADER_ALLOT:       0FDE DEFINED AT LINE 6
                    > USED AT LINE 9
ALLOT:              0FE6 DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 40 IN core-strings.z80
HEADER_PSTOR:       0FF0 DEFINED AT LINE 6
                    > USED AT LINE 9
PSTOR:              0FF5 DEFINED AT LINE 13
                    > USED AT LINE 49 IN core-memory.z80
HEADER_COMMA:       1004 DEFINED AT LINE 6
                    > USED AT LINE 9
COMMA:              1008 DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-compiler.z80
                    > USED AT LINE 187 IN core-compiler.z80
                    > USED AT LINE 188 IN core-compiler.z80
                    > USED AT LINE 190 IN core-compiler.z80
                    > USED AT LINE 200 IN core-compiler.z80
                    > USED AT LINE 200 IN core-compiler.z80
                    > USED AT LINE 194 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
HEADER_CCOMMA:      101F DEFINED AT LINE 6
                    > USED AT LINE 9
CCOMMA:             1024 DEFINED AT LINE 13
HEADER_RAT:         104D DEFINED AT LINE 6
                    > USED AT LINE 9
RAT:                1052 DEFINED AT LINE 13
                    > USED AT LINE 161 IN core-alu.z80
TXT_INTRO:          105C DEFINED AT LINE 1 IN core-messages.z80
                    > USED AT LINE 52
TXT_NEWLINE:        1082 DEFINED AT LINE 3 IN core-messages.z80
                    > USED AT LINE 267 IN core-serial.z80
TXT_PROMPT:         1085 DEFINED AT LINE 4 IN core-messages.z80
                    > USED AT LINE 52
DONE:               108A DEFINED AT LINE 7 IN core-messages.z80
FAILED:             1095 DEFINED AT LINE 8 IN core-messages.z80
INITSERIAL:         10A0 DEFINED AT LINE 3 IN core-serial.z80
                    > USED AT LINE 33
SERIALIN:           10C9 DEFINED AT LINE 25 IN core-serial.z80
                    > USED AT LINE 25
L_M_1901S31:        10D5 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1906S36:        10E3 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1913S43:        10F4 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1923S53:        110B DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               1113 DEFINED AT LINE 69 IN core-serial.z80
                    > USED AT LINE 146 IN core-serial.z80
L_M_1947S81:        1118 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1957S91:        1131 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1966S100:       1147 DEFINED AT LINE 75
                    > USED AT LINE 72
PUTC:               114F DEFINED AT LINE 115 IN core-serial.z80
                    > USED AT LINE 25 IN core-io.z80
                    > USED AT LINE 154 IN core-serial.z80
                    > USED AT LINE 157 IN core-serial.z80
                    > USED AT LINE 165 IN core-serial.z80
                    > USED AT LINE 190 IN core-serial.z80
                    > USED AT LINE 275 IN core-serial.z80
                    > USED AT LINE 43 IN core-utilities.z80
L_M_1981S117:       1155 DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         1163 DEFINED AT LINE 126 IN core-serial.z80
                    > USED AT LINE 31 IN core-io.z80
GETLINE:            1169 DEFINED AT LINE 137 IN core-serial.z80
                    > USED AT LINE 14 IN core-io.z80
                    > USED AT LINE 215 IN core-serial.z80
L_M_2005S144:       118F DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2006S145:       1194 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2009S148:       119F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2011S150:       11A7 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2025S164:       11C4 DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       11D6 DEFINED AT LINE 177 IN core-serial.z80
                    > USED AT LINE 169 IN core-serial.z80
                    > USED AT LINE 171 IN core-serial.z80
                    > USED AT LINE 174 IN core-serial.z80
PRINTROUTINE:       11E5 DEFINED AT LINE 187 IN core-serial.z80
                    > USED AT LINE 244 IN core-serial.z80
                    > USED AT LINE 259 IN core-serial.z80
L_M_2047S188:       11EA DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             11F9 DEFINED AT LINE 204 IN core-serial.z80
                    > USED AT LINE 104 IN core-interpreter.z80
                    > USED AT LINE 118 IN core-interpreter.z80
                    > USED AT LINE 159 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-io.z80
L_M_2069S212:       120C DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          122E DEFINED AT LINE 236 IN core-serial.z80
                    > USED AT LINE 53
                    > USED AT LINE 45 IN core-io.z80
                    > USED AT LINE 53
                    > USED AT LINE 268 IN core-serial.z80
PRINTSTR:           123D DEFINED AT LINE 255 IN core-serial.z80
                    > USED AT LINE 10 IN core-format.z80
                    > USED AT LINE 27 IN core-format.z80
                    > USED AT LINE 3 IN core-io.z80
                    > USED AT LINE 41 IN core-utilities.z80
PRINTCR:            1247 DEFINED AT LINE 265 IN core-serial.z80
                    > USED AT LINE 8 IN core-io.z80
                    > USED AT LINE 184 IN core-serial.z80
                    > USED AT LINE 49 IN core-utilities.z80
PRINTSPACE:         1250 DEFINED AT LINE 272 IN core-serial.z80
                    > USED AT LINE 11 IN core-format.z80
                    > USED AT LINE 28 IN core-format.z80
                    > USED AT LINE 155 IN core-serial.z80
                    > USED AT LINE 42 IN core-utilities.z80
HEADER_LIT:         1258 DEFINED AT LINE 6
                    > USED AT LINE 9
LIT:                125E DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-alu.z80
                    > USED AT LINE 64 IN core-alu.z80
                    > USED AT LINE 84 IN core-alu.z80
                    > USED AT LINE 86 IN core-alu.z80
                    > USED AT LINE 156 IN core-alu.z80
                    > USED AT LINE 174 IN core-alu.z80
                    > USED AT LINE 28 IN core-compiler.z80
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 51 IN core-compiler.z80
                    > USED AT LINE 71 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
                    > USED AT LINE 81 IN core-compiler.z80
                    > USED AT LINE 82 IN core-compiler.z80
                    > USED AT LINE 84 IN core-compiler.z80
                    > USED AT LINE 87 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 183 IN core-compiler.z80
                    > USED AT LINE 186 IN core-compiler.z80
                    > USED AT LINE 186 IN core-compiler.z80
                    > USED AT LINE 188 IN core-compiler.z80
                    > USED AT LINE 199 IN core-compiler.z80
                    > USED AT LINE 199 IN core-compiler.z80
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 12 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 42 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 8 IN core-extra.z80
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 182 IN core-format.z80
                    > USED AT LINE 187 IN core-format.z80
                    > USED AT LINE 9 IN core-interpreter.z80
                    > USED AT LINE 16 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 40 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 24 IN core-strings.z80
                    > USED AT LINE 25 IN core-strings.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 29 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
                    > USED AT LINE 37 IN core-strings.z80
                    > USED AT LINE 38 IN core-strings.z80
                    > USED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 16 IN core-utilities.z80
HEADER_ROT:         1270 DEFINED AT LINE 6
                    > USED AT LINE 9
ROT:                1276 DEFINED AT LINE 13
                    > USED AT LINE 200 IN core-alu.z80
HEADER_NROT:        12A3 DEFINED AT LINE 6
                    > USED AT LINE 9
NROT:               12AA DEFINED AT LINE 13
                    > USED AT LINE 191 IN core-alu.z80
                    > USED AT LINE 195 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 234 IN core-alu.z80
HEADER_DUPP:        12D9 DEFINED AT LINE 6
                    > USED AT LINE 9
DUPP:               12DF DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 158 IN core-alu.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 25 IN core-control.z80
                    > USED AT LINE 50 IN core-control.z80
                    > USED AT LINE 31 IN core-extra.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 174 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 11 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_SWAP:        12EC DEFINED AT LINE 6
                    > USED AT LINE 9
SWAP:               12F3 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 117 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 126 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 199 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
                    > USED AT LINE 217 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
                    > USED AT LINE 181 IN core-compiler.z80
                    > USED AT LINE 13 IN core-control.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 48 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 56 IN core-memory.z80
                    > USED AT LINE 57 IN core-memory.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_DROP:        130C DEFINED AT LINE 6
                    > USED AT LINE 9
DROP:               1313 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 167 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 173 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 233 IN core-alu.z80
                    > USED AT LINE 162 IN core-compiler.z80
                    > USED AT LINE 162 IN core-compiler.z80
                    > USED AT LINE 181 IN core-compiler.z80
                    > USED AT LINE 196 IN core-compiler.z80
                    > USED AT LINE 202 IN core-compiler.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 205 IN core-interpreter.z80
                    > USED AT LINE 216 IN core-interpreter.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 18 IN core-utilities.z80
HEADER_OVER:        1320 DEFINED AT LINE 6
                    > USED AT LINE 9
OVER:               1327 DEFINED AT LINE 13
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 188 IN core-alu.z80
                    > USED AT LINE 188 IN core-alu.z80
                    > USED AT LINE 193 IN core-alu.z80
                    > USED AT LINE 231 IN core-alu.z80
                    > USED AT LINE 231 IN core-alu.z80
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 153 IN core-compiler.z80
                    > USED AT LINE 170 IN core-compiler.z80
                    > USED AT LINE 170 IN core-compiler.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 56 IN core-memory.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 4 IN core-strings.z80
HEADER_TOR:         134A DEFINED AT LINE 6
                    > USED AT LINE 9
TOR:                134F DEFINED AT LINE 13
                    > USED AT LINE 63 IN core-alu.z80
                    > USED AT LINE 158 IN core-alu.z80
                    > USED AT LINE 159 IN core-alu.z80
                    > USED AT LINE 159 IN core-alu.z80
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 5 IN core-strings.z80
HEADER_RFROM:       135F DEFINED AT LINE 6
                    > USED AT LINE 9
RFROM:              1364 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 160 IN core-alu.z80
                    > USED AT LINE 161 IN core-alu.z80
                    > USED AT LINE 162 IN core-alu.z80
                    > USED AT LINE 169 IN core-alu.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 76 IN core-compiler.z80
                    > USED AT LINE 94 IN core-compiler.z80
                    > USED AT LINE 101 IN core-compiler.z80
                    > USED AT LINE 150 IN core-compiler.z80
                    > USED AT LINE 3 IN core-strings.z80
HEADER_DDROP:       1374 DEFINED AT LINE 6
                    > USED AT LINE 9
DDROP:              137C DEFINED AT LINE 13
                    > USED AT LINE 173 IN core-alu.z80
HEADER_DDUP:        1383 DEFINED AT LINE 6
                    > USED AT LINE 9
DDUP:               138A DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 154 IN core-alu.z80
LITSTR:             1391 DEFINED AT LINE 1 IN core-strings.z80
                    > USED AT LINE 203 IN core-compiler.z80
                    > USED AT LINE 217 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-strings.z80
HEADER_COUNT:       13A3 DEFINED AT LINE 6
                    > USED AT LINE 9
COUNT:              13AB DEFINED AT LINE 13
                    > USED AT LINE 101 IN core-compiler.z80
                    > USED AT LINE 17 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
                    > USED AT LINE 35 IN core-strings.z80
HEADER_SQUOTE:      13BD DEFINED AT LINE 6
                    > USED AT LINE 9
SQUOTE:             13C2 DEFINED AT LINE 13
HEADER_QT:          13C4 DEFINED AT LINE 6
                    > USED AT LINE 9
QT:                 13C8 DEFINED AT LINE 13
                    > USED AT LINE 51 IN core-io.z80
                    > USED AT LINE 18 IN core-strings.z80
COMPARESTR:         141C DEFINED AT LINE 53 IN core-strings.z80
                    > USED AT LINE 71 IN core-interpreter.z80
L_M_2238S56:        1424 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2239S57:        1429 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2243S61:        1433 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        1442 DEFINED AT LINE 6
                    > USED AT LINE 9
PACK:               1449 DEFINED AT LINE 13
HEADER_DOTSX:       1469 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTSX:              146F DEFINED AT LINE 13
DOTS3:              14BC DEFINED AT LINE 19 IN core-utilities.z80
                    > USED AT LINE 8 IN core-utilities.z80
HEADER_WORDS:       14C1 DEFINED AT LINE 6
                    > USED AT LINE 9
WORDS:              14C9 DEFINED AT LINE 13
LISTWORDS:          14D1 DEFINED AT LINE 28 IN core-utilities.z80
                    > USED AT LINE 24 IN core-utilities.z80
L_M_2293S30:        14DA DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_LATEST:      14FD DEFINED AT LINE 6
                    > USED AT LINE 19 IN core-kernel.z80
                    > USED AT LINE 9
LATEST:             1506 DEFINED AT LINE 13
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
                    > USED AT LINE 67 IN core-compiler.z80
                    > USED AT LINE 68 IN core-compiler.z80
                    > USED AT LINE 151 IN core-compiler.z80
RET_STACK:          2100 DEFINED AT LINE 3 IN variables.z80
                    > USED AT LINE 32
                    > USED AT LINE 26
RPP:                2100 DEFINED AT LINE 4 IN variables.z80
DATA_STACK:         2100 DEFINED AT LINE 6 IN variables.z80
                    > USED AT LINE 2 IN core-kernel.z80
SPP:                2200 DEFINED AT LINE 8 IN variables.z80
SERBUF:             2200 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 7 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 44 IN core-serial.z80
                    > USED AT LINE 90 IN core-serial.z80
                    > USED AT LINE 92 IN core-serial.z80
SERINPTR:           223F DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 8 IN core-serial.z80
                    > USED AT LINE 39 IN core-serial.z80
                    > USED AT LINE 46 IN core-serial.z80
SERRDPTR:           2241 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 9 IN core-serial.z80
                    > USED AT LINE 87 IN core-serial.z80
                    > USED AT LINE 95 IN core-serial.z80
SERBUFUSED:         2243 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 5 IN core-serial.z80
                    > USED AT LINE 34 IN core-serial.z80
                    > USED AT LINE 49 IN core-serial.z80
                    > USED AT LINE 51 IN core-serial.z80
                    > USED AT LINE 82 IN core-serial.z80
                    > USED AT LINE 96 IN core-serial.z80
                    > USED AT LINE 98 IN core-serial.z80
                    > USED AT LINE 127 IN core-serial.z80
LINEBUFSTART:       2245 DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 12 IN core-serial.z80
                    > USED AT LINE 213 IN core-serial.z80
LINEBUFSIZE:        2247 DEFINED AT LINE 16 IN variables.z80
                    > USED AT LINE 17 IN core-serial.z80
                    > USED AT LINE 214 IN core-serial.z80
CURRKEY:            2249 DEFINED AT LINE 17 IN variables.z80
                    > USED AT LINE 13 IN core-serial.z80
                    > USED AT LINE 208 IN core-serial.z80
                    > USED AT LINE 217 IN core-serial.z80
                    > USED AT LINE 222 IN core-serial.z80
                    > USED AT LINE 225 IN core-serial.z80
LINEBUFTOP:         224B DEFINED AT LINE 18 IN variables.z80
                    > USED AT LINE 14 IN core-serial.z80
                    > USED AT LINE 209 IN core-serial.z80
                    > USED AT LINE 220 IN core-serial.z80
LINEBUF:            224D DEFINED AT LINE 19 IN variables.z80
                    > USED AT LINE 11 IN core-serial.z80
                    > USED AT LINE 216 IN core-serial.z80
WORDBUF:            22CD DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 8 IN core-format.z80
                    > USED AT LINE 25 IN core-format.z80
                    > USED AT LINE 71 IN core-format.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
WORDBUF2:           230D DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 29 IN core-strings.z80
VAR_PAD:            234D DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 19
EXITADDR:           244D DEFINED AT LINE 25 IN variables.z80
                    > USED AT LINE 41 IN core-kernel.z80
                    > USED AT LINE 43 IN core-kernel.z80
IS_LITERAL:         244F DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 9 IN core-kernel.z80
VAR_HERE:           2451 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 17 IN core-kernel.z80
                    > USED AT LINE 72 IN core-memory.z80
                    > USED AT LINE 74 IN core-memory.z80
                    > USED AT LINE 80 IN core-memory.z80
                    > USED AT LINE 83 IN core-memory.z80
VAR_INTP_STOP:      2453 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 8 IN core-kernel.z80
VAR_STATE:          2455 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 133 IN core-compiler.z80
                    > USED AT LINE 138 IN core-compiler.z80
                    > USED AT LINE 19
                    > USED AT LINE 11 IN core-kernel.z80
VAR_NESTING:        2457 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 224 IN core-interpreter.z80
                    > USED AT LINE 226 IN core-interpreter.z80
                    > USED AT LINE 230 IN core-interpreter.z80
                    > USED AT LINE 232 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-kernel.z80
VAR_SP0:            2459 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 4 IN core-kernel.z80
VAR_BASE:           245B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 6 IN core-format.z80
                    > USED AT LINE 23 IN core-format.z80
                    > USED AT LINE 122 IN core-format.z80
                    > USED AT LINE 140 IN core-format.z80
                    > USED AT LINE 152 IN core-format.z80
                    > USED AT LINE 14 IN core-kernel.z80
VAR_LATEST_STR:     245D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 21 IN core-kernel.z80
VAR_LATEST:         245F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 105 IN core-compiler.z80
                    > USED AT LINE 48 IN core-interpreter.z80
                    > USED AT LINE 20 IN core-kernel.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 19
START_USER:         2461 DEFINED AT LINE 82
                    > USED AT LINE 16 IN core-kernel.z80
