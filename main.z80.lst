0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   1   
0000                             ; 
0000                             ; constants
0000                             ; 
0000                ROM_SIZE:   EQU   $2000   
0000                RAM_SIZE:   EQU   $10000 - ROM_SIZE   
0000                RET_STACK_SIZE:   EQU   $80   ; return stack
0000                DATA_STACK_SIZE:   EQU   $80   ; data stack
0000                PAD_SIZE:   EQU   $80   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                START_ROM:   EQU   0   
0000                START_RAM:   EQU   START_ROM + ROM_SIZE   
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   
0000                RET_STACK:   EQU   END_RAM   ; return stack, grows down
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; 
0000                             ; macros
0000                             ; 
0000                             ; macros used by forth and a few utility routines
0000                             ; 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro mCODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro mVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro mCONST,name,namelen,flags,label,value
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRAN, 6
0000                 DW BRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 9C 14               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 A8 07               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 90 00               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                             ; serial I/O
0067                INITSERIAL:      
0067   21 00 00               LD   HL,0   
006A   22 00 2E               LD   (serbufused),HL   
006D   21 BD 2D               LD   HL,serbuf   
0070   22 FC 2D               LD   (serinptr),HL   
0073   22 FE 2D               LD   (serrdptr),HL   
0076   21 0A 2E               LD   HL,linebuf   
0079   22 02 2E               LD   (lineBufStart),HL   
007C   22 06 2E               LD   (currkey),HL   
007F   22 08 2E               LD   (linebuftop),HL   
0082   21 80 00               LD   HL,LINE_BUFSIZE   
0085   22 04 2E               LD   (lineBufSize),HL   
0088   3E 96                  LD   A,rts_low   
008A   D3 80                  OUT   ($80),A   ; initialise acia
008C   ED 56                  IM   1   
008E   FB                     EI      
008F   C9                     RET      
0090                SERIALIN:      
0090   F5                     PUSH   AF   
0091   E5                     PUSH   HL   
0092   DB 80                  IN   A,($80)   
0094   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
0096                          ;*Macro unroll:  _if nz
0096   C2 9C 00               JP   nz,L_M_623S31   
0099   C3 99 00               JP   $   
009C                          ;*Macro unroll:  STRUC_PUSH $
009C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
009C                STRUC_12:   .SET   STRUC_11   
009C                STRUC_11:   .SET   STRUC_10   
009C                STRUC_10:   .SET   STRUC_9   
009C                STRUC_9:   .SET   STRUC_8   
009C                STRUC_8:   .SET   STRUC_7   
009C                STRUC_7:   .SET   STRUC_6   
009C                STRUC_6:   .SET   STRUC_5   
009C                STRUC_5:   .SET   STRUC_4   
009C                STRUC_4:   .SET   STRUC_3   
009C                STRUC_3:   .SET   STRUC_2   
009C                STRUC_2:   .SET   STRUC_TOP   
009C                STRUC_TOP:   .SET   $   
009C                L_M_623S31:      
009C   DB 81                  IN   A,($81)   
009E   F5                     PUSH   AF   
009F   3A 00 2E               LD   A,(serBufUsed)   
00A2   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
00A4                          ;*Macro unroll:  _if z
00A4   CA AA 00               JP   z,L_M_628S36   
00A7   C3 A7 00               JP   $   
00AA                          ;*Macro unroll:  STRUC_PUSH $
00AA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00AA                STRUC_12:   .SET   STRUC_11   
00AA                STRUC_11:   .SET   STRUC_10   
00AA                STRUC_10:   .SET   STRUC_9   
00AA                STRUC_9:   .SET   STRUC_8   
00AA                STRUC_8:   .SET   STRUC_7   
00AA                STRUC_7:   .SET   STRUC_6   
00AA                STRUC_6:   .SET   STRUC_5   
00AA                STRUC_5:   .SET   STRUC_4   
00AA                STRUC_4:   .SET   STRUC_3   
00AA                STRUC_3:   .SET   STRUC_2   
00AA                STRUC_2:   .SET   STRUC_TOP   
00AA                STRUC_TOP:   .SET   $   
00AA                L_M_628S36:      
00AA   F1                     POP   AF   
00AB                          ;*Macro unroll:  _else
00AB   C3 AB 00               JP   $   
00AE                          ;*Macro unroll:  STRUC_FWD
00AE                CUR_ADR:   .SET   $   
00A8                          .ORG   STRUC_TOP - 2   
00A8   AE 00                  DW   CUR_ADR   
00AE                          .ORG   CUR_ADR   
00AE                STRUC_TOP:   .SET   $   
00AE   2A FC 2D               LD   HL,(serInPtr)   
00B1   23                     INC   HL   
00B2   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
00B3   FE FC                  CP   (serBuf + SER_BUFSIZE) & $FF   
00B5                          ;*Macro unroll:  _if z
00B5   CA BB 00               JP   z,L_M_635S43   
00B8   C3 B8 00               JP   $   
00BB                          ;*Macro unroll:  STRUC_PUSH $
00BB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00BB                STRUC_12:   .SET   STRUC_11   
00BB                STRUC_11:   .SET   STRUC_10   
00BB                STRUC_10:   .SET   STRUC_9   
00BB                STRUC_9:   .SET   STRUC_8   
00BB                STRUC_8:   .SET   STRUC_7   
00BB                STRUC_7:   .SET   STRUC_6   
00BB                STRUC_6:   .SET   STRUC_5   
00BB                STRUC_5:   .SET   STRUC_4   
00BB                STRUC_4:   .SET   STRUC_3   
00BB                STRUC_3:   .SET   STRUC_2   
00BB                STRUC_2:   .SET   STRUC_TOP   
00BB                STRUC_TOP:   .SET   $   
00BB                L_M_635S43:      
00BB   21 BD 2D               LD   HL,serBuf   
00BE                          ;*Macro unroll:  _endif
00BE                          ;*Macro unroll:  STRUC_FWD
00BE                CUR_ADR:   .SET   $   
00B9                          .ORG   STRUC_TOP - 2   
00B9   BE 00                  DW   CUR_ADR   
00BE                          .ORG   CUR_ADR   
00BE                          ;*Macro unroll:  STRUC_POP
00BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00BE                STRUC_TOP:   .SET   STRUC_2   
00BE                STRUC_2:   .SET   STRUC_3   
00BE                STRUC_3:   .SET   STRUC_4   
00BE                STRUC_4:   .SET   STRUC_5   
00BE                STRUC_5:   .SET   STRUC_6   
00BE                STRUC_6:   .SET   STRUC_7   
00BE                STRUC_7:   .SET   STRUC_8   
00BE                STRUC_8:   .SET   STRUC_9   
00BE                STRUC_9:   .SET   STRUC_10   
00BE                STRUC_10:   .SET   STRUC_11   
00BE                STRUC_11:   .SET   STRUC_12   
00BE                STRUC_12:   .SET   0   
00BE   22 FC 2D               LD   (serInPtr),HL   
00C1   F1                     POP   AF   
00C2   77                     LD   (HL),A   
00C3   3A 00 2E               LD   A,(serBufUsed)   
00C6   3C                     INC   A   
00C7   32 00 2E               LD   (serBufUsed),A   
00CA   FE 30                  CP   SER_FULLSIZE   
00CC                          ;*Macro unroll:  _if nc
00CC   D2 D2 00               JP   nc,L_M_645S53   
00CF   C3 CF 00               JP   $   
00D2                          ;*Macro unroll:  STRUC_PUSH $
00D2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
00D2                STRUC_12:   .SET   STRUC_11   
00D2                STRUC_11:   .SET   STRUC_10   
00D2                STRUC_10:   .SET   STRUC_9   
00D2                STRUC_9:   .SET   STRUC_8   
00D2                STRUC_8:   .SET   STRUC_7   
00D2                STRUC_7:   .SET   STRUC_6   
00D2                STRUC_6:   .SET   STRUC_5   
00D2                STRUC_5:   .SET   STRUC_4   
00D2                STRUC_4:   .SET   STRUC_3   
00D2                STRUC_3:   .SET   STRUC_2   
00D2                STRUC_2:   .SET   STRUC_TOP   
00D2                STRUC_TOP:   .SET   $   
00D2                L_M_645S53:      
00D2   3E D6                  LD   A,RTS_HIGH   
00D4   D3 80                  OUT   ($80),A   
00D6                          ;*Macro unroll:  _endif
00D6                          ;*Macro unroll:  STRUC_FWD
00D6                CUR_ADR:   .SET   $   
00D0                          .ORG   STRUC_TOP - 2   
00D0   D6 00                  DW   CUR_ADR   
00D6                          .ORG   CUR_ADR   
00D6                          ;*Macro unroll:  STRUC_POP
00D6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00D6                STRUC_TOP:   .SET   STRUC_2   
00D6                STRUC_2:   .SET   STRUC_3   
00D6                STRUC_3:   .SET   STRUC_4   
00D6                STRUC_4:   .SET   STRUC_5   
00D6                STRUC_5:   .SET   STRUC_6   
00D6                STRUC_6:   .SET   STRUC_7   
00D6                STRUC_7:   .SET   STRUC_8   
00D6                STRUC_8:   .SET   STRUC_9   
00D6                STRUC_9:   .SET   STRUC_10   
00D6                STRUC_10:   .SET   STRUC_11   
00D6                STRUC_11:   .SET   STRUC_12   
00D6                STRUC_12:   .SET   0   
00D6                          ;*Macro unroll:  _endif
00D6                          ;*Macro unroll:  STRUC_FWD
00D6                CUR_ADR:   .SET   $   
00AC                          .ORG   STRUC_TOP - 2   
00AC   D6 00                  DW   CUR_ADR   
00D6                          .ORG   CUR_ADR   
00D6                          ;*Macro unroll:  STRUC_POP
00D6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00D6                STRUC_TOP:   .SET   STRUC_2   
00D6                STRUC_2:   .SET   STRUC_3   
00D6                STRUC_3:   .SET   STRUC_4   
00D6                STRUC_4:   .SET   STRUC_5   
00D6                STRUC_5:   .SET   STRUC_6   
00D6                STRUC_6:   .SET   STRUC_7   
00D6                STRUC_7:   .SET   STRUC_8   
00D6                STRUC_8:   .SET   STRUC_9   
00D6                STRUC_9:   .SET   STRUC_10   
00D6                STRUC_10:   .SET   STRUC_11   
00D6                STRUC_11:   .SET   STRUC_12   
00D6                STRUC_12:   .SET   0   
00D6                          ;*Macro unroll:  _endif
00D6                          ;*Macro unroll:  STRUC_FWD
00D6                CUR_ADR:   .SET   $   
009A                          .ORG   STRUC_TOP - 2   
009A   D6 00                  DW   CUR_ADR   
00D6                          .ORG   CUR_ADR   
00D6                          ;*Macro unroll:  STRUC_POP
00D6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
00D6                STRUC_TOP:   .SET   STRUC_2   
00D6                STRUC_2:   .SET   STRUC_3   
00D6                STRUC_3:   .SET   STRUC_4   
00D6                STRUC_4:   .SET   STRUC_5   
00D6                STRUC_5:   .SET   STRUC_6   
00D6                STRUC_6:   .SET   STRUC_7   
00D6                STRUC_7:   .SET   STRUC_8   
00D6                STRUC_8:   .SET   STRUC_9   
00D6                STRUC_9:   .SET   STRUC_10   
00D6                STRUC_10:   .SET   STRUC_11   
00D6                STRUC_11:   .SET   STRUC_12   
00D6                STRUC_12:   .SET   0   
00D6   E1                     POP   HL   
00D7   F1                     POP   AF   
00D8   FB                     EI      
00D9   C9                     RET      
00DA                             ; 
00DA                             ; getc - input
00DA                             ; returns: A = input char
00DA                             ; 
00DA                GETC:        
00DA                          IF   TESTMODE   
00DA   E5                     PUSH   HL   
00DB   2A 20 30               LD   HL,(char_pointer)   
00DE   7E                     LD   A,(HL)   
00DF   23                     INC   HL   
00E0   22 20 30               LD   (char_pointer),HL   
00E3   E1                     POP   HL   
00E4   C9                     RET      
00E5                          ELSE      
                              ;*Macro unroll:  _do
                              JR   L_M_669S81   
                              JP   $   
                              ;*Macro unroll:  DLOOP_PUSH $
                    DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
                    DLOOP_12:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_TOP   
                    DLOOP_TOP:   .SET   $   
                    L_M_669S81:      
                              LD   A,(serBufUsed)   
                              CP   $00   
                              ;*Macro unroll:  _until nz
                              JP   nz,DLOOP_TOP - 3   
                              ;*Macro unroll:  DLOOP_FWD               ; needed?
                    CUR_ADR:   .SET   $   ; needed?
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  _enddo
                              JP   DLOOP_TOP   
                              ;*Macro unroll:  DLOOP_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  DLOOP_POP
                    DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
                    DLOOP_TOP:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_12   
                    DLOOP_12:   .SET   0   
                              PUSH   HL   
                              LD   HL,(serRdPtr)   
                              INC   HL   
                              LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
                              CP   (serBuf + SER_BUFSIZE) & $FF   
                              ;*Macro unroll:  _if z
                              JP   z,L_M_679S91   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_679S91:      
                              LD   HL,serBuf   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              DI      
                              LD   (serRdPtr),HL   
                              LD   A,(serBufUsed)   
                              DEC   A   
                              LD   (serBufUsed),A   
                              CP   SER_EMPTYSIZE   
                              ;*Macro unroll:  _if c
                              JP   c,L_M_688S100   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_688S100:      
                              LD   A,RTS_LOW   
                              OUT   ($80),A   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              LD   A,(HL)   
                              EI      
                              POP   HL   
                              RET      ; Char ready in A
00E5                          ENDIF      
00E5                             ; 
00E5                             ; putc - output a character
00E5                             ; params: A = char to output
00E5                             ; 
00E5                PUTC:        
00E5   F5                     PUSH   AF   ; Store character
00E6                          ;*Macro unroll:  _do
00E6   18 03                  JR   L_M_703S117   
00E8   C3 E8 00               JP   $   
00EB                          ;*Macro unroll:  DLOOP_PUSH $
00EB                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
00EB                DLOOP_12:   .SET   DLOOP_11   
00EB                DLOOP_11:   .SET   DLOOP_10   
00EB                DLOOP_10:   .SET   DLOOP_9   
00EB                DLOOP_9:   .SET   DLOOP_8   
00EB                DLOOP_8:   .SET   DLOOP_7   
00EB                DLOOP_7:   .SET   DLOOP_6   
00EB                DLOOP_6:   .SET   DLOOP_5   
00EB                DLOOP_5:   .SET   DLOOP_4   
00EB                DLOOP_4:   .SET   DLOOP_3   
00EB                DLOOP_3:   .SET   DLOOP_2   
00EB                DLOOP_2:   .SET   DLOOP_TOP   
00EB                DLOOP_TOP:   .SET   $   
00EB                L_M_703S117:      
00EB   DB 80                  IN   A,($80)   ; Status byte
00ED   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
00EF                          ;*Macro unroll:  _until nz
00EF   C2 E8 00               JP   nz,DLOOP_TOP - 3   
00F2                          ;*Macro unroll:  DLOOP_FWD               ; needed?
00F2                CUR_ADR:   .SET   $   ; needed?
00E9                          .ORG   DLOOP_TOP - 2   
00E9   F2 00                  DW   CUR_ADR   
00F2                          .ORG   CUR_ADR   
00F2                          ;*Macro unroll:  _enddo
00F2   C3 EB 00               JP   DLOOP_TOP   
00F5                          ;*Macro unroll:  DLOOP_FWD
00F5                CUR_ADR:   .SET   $   
00E9                          .ORG   DLOOP_TOP - 2   
00E9   F5 00                  DW   CUR_ADR   
00F5                          .ORG   CUR_ADR   
00F5                          ;*Macro unroll:  DLOOP_POP
00F5                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
00F5                DLOOP_TOP:   .SET   DLOOP_2   
00F5                DLOOP_2:   .SET   DLOOP_3   
00F5                DLOOP_3:   .SET   DLOOP_4   
00F5                DLOOP_4:   .SET   DLOOP_5   
00F5                DLOOP_5:   .SET   DLOOP_6   
00F5                DLOOP_6:   .SET   DLOOP_7   
00F5                DLOOP_7:   .SET   DLOOP_8   
00F5                DLOOP_8:   .SET   DLOOP_9   
00F5                DLOOP_9:   .SET   DLOOP_10   
00F5                DLOOP_10:   .SET   DLOOP_11   
00F5                DLOOP_11:   .SET   DLOOP_12   
00F5                DLOOP_12:   .SET   0   
00F5   F1                     POP   AF   ; Retrieve character
00F6   D3 81                  OUT   ($81),A   ; Output the character
00F8   C9                     RET      
00F9                INPUTREADY:      
00F9   3A 00 2E               LD   A,(serBufUsed)   
00FC   FE 00                  CP   $0   
00FE   C9                     RET      
00FF                             ; 
00FF                             ; getline - input line of text ***
00FF                             ; params: HL = addr, DE = max (currently up to 255)
00FF                             ; returns: BC = length - up to 255
00FF                             ; 
00FF                GETLINE:      
00FF   F5                     PUSH   AF   
0100   E5                     PUSH   HL   
0101                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
0101                          ;*Macro unroll:  ppush0 D,E
0101   DD 73 00               LD   (IX+0),E   
0104   DD 23                  INC   IX   
0106   DD 72 00               LD   (IX+0),D   
0109   DD 23                  INC   IX   
010B   11 F1 01               LD   DE,TXT_PROMPT   
010E   CD C4 01               CALL   printPStr   
0111                          ;*Macro unroll:  ppop0 D,E
0111   DD 2B                  DEC   IX   
0113   DD 56 00               LD   D,(IX+0)   
0116   DD 2B                  DEC   IX   
0118   DD 5E 00               LD   E,(IX+0)   
011B   E1                     POP   HL   
011C   E5                     PUSH   HL   
011D   01 00 00               LD   BC,0   
0120                          ;*Macro unroll:  _do
0120   18 03                  JR   L_M_727S144   
0122   C3 22 01               JP   $   
0125                          ;*Macro unroll:  DLOOP_PUSH $
0125                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0125                DLOOP_12:   .SET   DLOOP_11   
0125                DLOOP_11:   .SET   DLOOP_10   
0125                DLOOP_10:   .SET   DLOOP_9   
0125                DLOOP_9:   .SET   DLOOP_8   
0125                DLOOP_8:   .SET   DLOOP_7   
0125                DLOOP_7:   .SET   DLOOP_6   
0125                DLOOP_6:   .SET   DLOOP_5   
0125                DLOOP_5:   .SET   DLOOP_4   
0125                DLOOP_4:   .SET   DLOOP_3   
0125                DLOOP_3:   .SET   DLOOP_2   
0125                DLOOP_2:   .SET   DLOOP_TOP   
0125                DLOOP_TOP:   .SET   $   
0125                L_M_727S144:      
0125                          ;*Macro unroll:  _do
0125   18 03                  JR   L_M_728S145   
0127   C3 27 01               JP   $   
012A                          ;*Macro unroll:  DLOOP_PUSH $
012A                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
012A                DLOOP_12:   .SET   DLOOP_11   
012A                DLOOP_11:   .SET   DLOOP_10   
012A                DLOOP_10:   .SET   DLOOP_9   
012A                DLOOP_9:   .SET   DLOOP_8   
012A                DLOOP_8:   .SET   DLOOP_7   
012A                DLOOP_7:   .SET   DLOOP_6   
012A                DLOOP_6:   .SET   DLOOP_5   
012A                DLOOP_5:   .SET   DLOOP_4   
012A                DLOOP_4:   .SET   DLOOP_3   
012A                DLOOP_3:   .SET   DLOOP_2   
012A                DLOOP_2:   .SET   DLOOP_TOP   
012A                DLOOP_TOP:   .SET   $   
012A                L_M_728S145:      
012A   CD DA 00               CALL   getc   
012D   FE 08                  CP   $08   
012F                          ;*Macro unroll:  _if z
012F   CA 35 01               JP   z,L_M_731S148   
0132   C3 32 01               JP   $   
0135                          ;*Macro unroll:  STRUC_PUSH $
0135                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0135                STRUC_12:   .SET   STRUC_11   
0135                STRUC_11:   .SET   STRUC_10   
0135                STRUC_10:   .SET   STRUC_9   
0135                STRUC_9:   .SET   STRUC_8   
0135                STRUC_8:   .SET   STRUC_7   
0135                STRUC_7:   .SET   STRUC_6   
0135                STRUC_6:   .SET   STRUC_5   
0135                STRUC_5:   .SET   STRUC_4   
0135                STRUC_4:   .SET   STRUC_3   
0135                STRUC_3:   .SET   STRUC_2   
0135                STRUC_2:   .SET   STRUC_TOP   
0135                STRUC_TOP:   .SET   $   
0135                L_M_731S148:      
0135                          ;*Macro unroll:  checkZeroWord B,C
0135   79                     LD   A,C   
0136   B0                     OR   B   
0137                          ;*Macro unroll:  _if nz
0137   C2 3D 01               JP   nz,L_M_733S150   
013A   C3 3A 01               JP   $   
013D                          ;*Macro unroll:  STRUC_PUSH $
013D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
013D                STRUC_12:   .SET   STRUC_11   
013D                STRUC_11:   .SET   STRUC_10   
013D                STRUC_10:   .SET   STRUC_9   
013D                STRUC_9:   .SET   STRUC_8   
013D                STRUC_8:   .SET   STRUC_7   
013D                STRUC_7:   .SET   STRUC_6   
013D                STRUC_6:   .SET   STRUC_5   
013D                STRUC_5:   .SET   STRUC_4   
013D                STRUC_4:   .SET   STRUC_3   
013D                STRUC_3:   .SET   STRUC_2   
013D                STRUC_2:   .SET   STRUC_TOP   
013D                STRUC_TOP:   .SET   $   
013D                L_M_733S150:      
013D   2B                     DEC   HL   
013E   0B                     DEC   BC   
013F   3E 08                  LD   a,$08   
0141   CD E5 00               CALL   putc   
0144   CD E6 01               CALL   printSpace   
0147   3E 08                  LD   A,$08   
0149   CD E5 00               CALL   putc   
014C                          ;*Macro unroll:  _endif
014C                          ;*Macro unroll:  STRUC_FWD
014C                CUR_ADR:   .SET   $   
013B                          .ORG   STRUC_TOP - 2   
013B   4C 01                  DW   CUR_ADR   
014C                          .ORG   CUR_ADR   
014C                          ;*Macro unroll:  STRUC_POP
014C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
014C                STRUC_TOP:   .SET   STRUC_2   
014C                STRUC_2:   .SET   STRUC_3   
014C                STRUC_3:   .SET   STRUC_4   
014C                STRUC_4:   .SET   STRUC_5   
014C                STRUC_5:   .SET   STRUC_6   
014C                STRUC_6:   .SET   STRUC_7   
014C                STRUC_7:   .SET   STRUC_8   
014C                STRUC_8:   .SET   STRUC_9   
014C                STRUC_9:   .SET   STRUC_10   
014C                STRUC_10:   .SET   STRUC_11   
014C                STRUC_11:   .SET   STRUC_12   
014C                STRUC_12:   .SET   0   
014C                          ;*Macro unroll:  _else
014C   C3 4C 01               JP   $   
014F                          ;*Macro unroll:  STRUC_FWD
014F                CUR_ADR:   .SET   $   
0133                          .ORG   STRUC_TOP - 2   
0133   4F 01                  DW   CUR_ADR   
014F                          .ORG   CUR_ADR   
014F                STRUC_TOP:   .SET   $   
014F   77                     LD   (HL),A   
0150   23                     INC   HL   
0151   03                     INC   BC   
0152   CB 7F                  BIT   7,a   
0154                          ;*Macro unroll:  _if z
0154   CA 5A 01               JP   z,L_M_747S164   
0157   C3 57 01               JP   $   
015A                          ;*Macro unroll:  STRUC_PUSH $
015A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
015A                STRUC_12:   .SET   STRUC_11   
015A                STRUC_11:   .SET   STRUC_10   
015A                STRUC_10:   .SET   STRUC_9   
015A                STRUC_9:   .SET   STRUC_8   
015A                STRUC_8:   .SET   STRUC_7   
015A                STRUC_7:   .SET   STRUC_6   
015A                STRUC_6:   .SET   STRUC_5   
015A                STRUC_5:   .SET   STRUC_4   
015A                STRUC_4:   .SET   STRUC_3   
015A                STRUC_3:   .SET   STRUC_2   
015A                STRUC_2:   .SET   STRUC_TOP   
015A                STRUC_TOP:   .SET   $   
015A                L_M_747S164:      
015A   CD E5 00               CALL   putc   
015D                          ;*Macro unroll:  _endif
015D                          ;*Macro unroll:  STRUC_FWD
015D                CUR_ADR:   .SET   $   
0158                          .ORG   STRUC_TOP - 2   
0158   5D 01                  DW   CUR_ADR   
015D                          .ORG   CUR_ADR   
015D                          ;*Macro unroll:  STRUC_POP
015D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
015D                STRUC_TOP:   .SET   STRUC_2   
015D                STRUC_2:   .SET   STRUC_3   
015D                STRUC_3:   .SET   STRUC_4   
015D                STRUC_4:   .SET   STRUC_5   
015D                STRUC_5:   .SET   STRUC_6   
015D                STRUC_6:   .SET   STRUC_7   
015D                STRUC_7:   .SET   STRUC_8   
015D                STRUC_8:   .SET   STRUC_9   
015D                STRUC_9:   .SET   STRUC_10   
015D                STRUC_10:   .SET   STRUC_11   
015D                STRUC_11:   .SET   STRUC_12   
015D                STRUC_12:   .SET   0   
015D   FE 0D                  CP   "\r"   
015F   28 0B                  JR   z,getLineCheck   
0161   FE 0A                  CP   "\n"   
0163   28 07                  JR   z,getLineCheck   
0165   7B                     LD   A,E   
0166   B9                     CP   C   
0167   38 03                  JR   c,getLineCheck   
0169                          ;*Macro unroll:  _endif
0169                          ;*Macro unroll:  STRUC_FWD
0169                CUR_ADR:   .SET   $   
014D                          .ORG   STRUC_TOP - 2   
014D   69 01                  DW   CUR_ADR   
0169                          .ORG   CUR_ADR   
0169                          ;*Macro unroll:  STRUC_POP
0169                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0169                STRUC_TOP:   .SET   STRUC_2   
0169                STRUC_2:   .SET   STRUC_3   
0169                STRUC_3:   .SET   STRUC_4   
0169                STRUC_4:   .SET   STRUC_5   
0169                STRUC_5:   .SET   STRUC_6   
0169                STRUC_6:   .SET   STRUC_7   
0169                STRUC_7:   .SET   STRUC_8   
0169                STRUC_8:   .SET   STRUC_9   
0169                STRUC_9:   .SET   STRUC_10   
0169                STRUC_10:   .SET   STRUC_11   
0169                STRUC_11:   .SET   STRUC_12   
0169                STRUC_12:   .SET   0   
0169                          ;*Macro unroll:  _enddo
0169   C3 2A 01               JP   DLOOP_TOP   
016C                          ;*Macro unroll:  DLOOP_FWD
016C                CUR_ADR:   .SET   $   
0128                          .ORG   DLOOP_TOP - 2   
0128   6C 01                  DW   CUR_ADR   
016C                          .ORG   CUR_ADR   
016C                          ;*Macro unroll:  DLOOP_POP
016C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
016C                DLOOP_TOP:   .SET   DLOOP_2   
016C                DLOOP_2:   .SET   DLOOP_3   
016C                DLOOP_3:   .SET   DLOOP_4   
016C                DLOOP_4:   .SET   DLOOP_5   
016C                DLOOP_5:   .SET   DLOOP_6   
016C                DLOOP_6:   .SET   DLOOP_7   
016C                DLOOP_7:   .SET   DLOOP_8   
016C                DLOOP_8:   .SET   DLOOP_9   
016C                DLOOP_9:   .SET   DLOOP_10   
016C                DLOOP_10:   .SET   DLOOP_11   
016C                DLOOP_11:   .SET   DLOOP_12   
016C                DLOOP_12:   .SET   0   
016C                GETLINECHECK:      
016C   3E 00                  LD   a,0   
016E   B9                     CP   c   
016F                          ;*Macro unroll:  _until nz
016F   C2 22 01               JP   nz,DLOOP_TOP - 3   
0172                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0172                CUR_ADR:   .SET   $   ; needed?
0123                          .ORG   DLOOP_TOP - 2   
0123   72 01                  DW   CUR_ADR   
0172                          .ORG   CUR_ADR   
0172                          ;*Macro unroll:  _enddo
0172   C3 25 01               JP   DLOOP_TOP   
0175                          ;*Macro unroll:  DLOOP_FWD
0175                CUR_ADR:   .SET   $   
0123                          .ORG   DLOOP_TOP - 2   
0123   75 01                  DW   CUR_ADR   
0175                          .ORG   CUR_ADR   
0175                          ;*Macro unroll:  DLOOP_POP
0175                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0175                DLOOP_TOP:   .SET   DLOOP_2   
0175                DLOOP_2:   .SET   DLOOP_3   
0175                DLOOP_3:   .SET   DLOOP_4   
0175                DLOOP_4:   .SET   DLOOP_5   
0175                DLOOP_5:   .SET   DLOOP_6   
0175                DLOOP_6:   .SET   DLOOP_7   
0175                DLOOP_7:   .SET   DLOOP_8   
0175                DLOOP_8:   .SET   DLOOP_9   
0175                DLOOP_9:   .SET   DLOOP_10   
0175                DLOOP_10:   .SET   DLOOP_11   
0175                DLOOP_11:   .SET   DLOOP_12   
0175                DLOOP_12:   .SET   0   
0175   F1                     POP   AF   
0176   E1                     POP   HL   
0177   CD DD 01               CALL   printCR   
017A   C9                     RET      
017B                PRINTROUTINE:      
017B                          ;*Macro unroll:  _do
017B   18 03                  JR   L_M_769S188   
017D   C3 7D 01               JP   $   
0180                          ;*Macro unroll:  DLOOP_PUSH $
0180                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0180                DLOOP_12:   .SET   DLOOP_11   
0180                DLOOP_11:   .SET   DLOOP_10   
0180                DLOOP_10:   .SET   DLOOP_9   
0180                DLOOP_9:   .SET   DLOOP_8   
0180                DLOOP_8:   .SET   DLOOP_7   
0180                DLOOP_7:   .SET   DLOOP_6   
0180                DLOOP_6:   .SET   DLOOP_5   
0180                DLOOP_5:   .SET   DLOOP_4   
0180                DLOOP_4:   .SET   DLOOP_3   
0180                DLOOP_3:   .SET   DLOOP_2   
0180                DLOOP_2:   .SET   DLOOP_TOP   
0180                DLOOP_TOP:   .SET   $   
0180                L_M_769S188:      
0180   1A                     LD   A,(DE)   
0181   CD E5 00               CALL   putc   
0184   13                     INC   DE   
0185   0B                     DEC   BC   
0186                          ;*Macro unroll:  checkZeroWord B,C
0186   79                     LD   A,C   
0187   B0                     OR   B   
0188                          ;*Macro unroll:  _until z
0188   CA 7D 01               JP   z,DLOOP_TOP - 3   
018B                          ;*Macro unroll:  DLOOP_FWD               ; needed?
018B                CUR_ADR:   .SET   $   ; needed?
017E                          .ORG   DLOOP_TOP - 2   
017E   8B 01                  DW   CUR_ADR   
018B                          .ORG   CUR_ADR   
018B                          ;*Macro unroll:  _enddo
018B   C3 80 01               JP   DLOOP_TOP   
018E                          ;*Macro unroll:  DLOOP_FWD
018E                CUR_ADR:   .SET   $   
017E                          .ORG   DLOOP_TOP - 2   
017E   8E 01                  DW   CUR_ADR   
018E                          .ORG   CUR_ADR   
018E                          ;*Macro unroll:  DLOOP_POP
018E                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
018E                DLOOP_TOP:   .SET   DLOOP_2   
018E                DLOOP_2:   .SET   DLOOP_3   
018E                DLOOP_3:   .SET   DLOOP_4   
018E                DLOOP_4:   .SET   DLOOP_5   
018E                DLOOP_5:   .SET   DLOOP_6   
018E                DLOOP_6:   .SET   DLOOP_7   
018E                DLOOP_7:   .SET   DLOOP_8   
018E                DLOOP_8:   .SET   DLOOP_9   
018E                DLOOP_9:   .SET   DLOOP_10   
018E                DLOOP_10:   .SET   DLOOP_11   
018E                DLOOP_11:   .SET   DLOOP_12   
018E                DLOOP_12:   .SET   0   
018E   C9                     RET      
018F                             ; 
018F                             ; getKey -  inputs a line buffered character
018F                             ; params: none
018F                             ; returns: A = character,
018F                             ; 
018F                GETKEY:      
018F   E5                     PUSH   HL   
0190   D5                     PUSH   DE   
0191   C5                     PUSH   BC   
0192   2A 06 2E               LD   HL,(currkey)   
0195   ED 5B 08 2E            LD   DE,(lineBufTop)   
0199   B7                     OR   A   
019A   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
019C                          ;*Macro unroll:  _if nc
019C   D2 A2 01               JP   nc,L_M_791S212   
019F   C3 9F 01               JP   $   
01A2                          ;*Macro unroll:  STRUC_PUSH $
01A2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01A2                STRUC_12:   .SET   STRUC_11   
01A2                STRUC_11:   .SET   STRUC_10   
01A2                STRUC_10:   .SET   STRUC_9   
01A2                STRUC_9:   .SET   STRUC_8   
01A2                STRUC_8:   .SET   STRUC_7   
01A2                STRUC_7:   .SET   STRUC_6   
01A2                STRUC_6:   .SET   STRUC_5   
01A2                STRUC_5:   .SET   STRUC_4   
01A2                STRUC_4:   .SET   STRUC_3   
01A2                STRUC_3:   .SET   STRUC_2   
01A2                STRUC_2:   .SET   STRUC_TOP   
01A2                STRUC_TOP:   .SET   $   
01A2                L_M_791S212:      
01A2   2A 02 2E               LD   HL,(lineBufStart)   ; lineBuf
01A5   ED 5B 04 2E            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
01A9   CD FF 00               CALL   getline   
01AC   21 0A 2E               LD   HL,lineBuf   
01AF   22 06 2E               LD   (currkey),HL   
01B2   B7                     OR   A   
01B3   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
01B5   22 08 2E               LD   (lineBufTop),HL   
01B8                          ;*Macro unroll:  _endif
01B8                          ;*Macro unroll:  STRUC_FWD
01B8                CUR_ADR:   .SET   $   
01A0                          .ORG   STRUC_TOP - 2   
01A0   B8 01                  DW   CUR_ADR   
01B8                          .ORG   CUR_ADR   
01B8                          ;*Macro unroll:  STRUC_POP
01B8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01B8                STRUC_TOP:   .SET   STRUC_2   
01B8                STRUC_2:   .SET   STRUC_3   
01B8                STRUC_3:   .SET   STRUC_4   
01B8                STRUC_4:   .SET   STRUC_5   
01B8                STRUC_5:   .SET   STRUC_6   
01B8                STRUC_6:   .SET   STRUC_7   
01B8                STRUC_7:   .SET   STRUC_8   
01B8                STRUC_8:   .SET   STRUC_9   
01B8                STRUC_9:   .SET   STRUC_10   
01B8                STRUC_10:   .SET   STRUC_11   
01B8                STRUC_11:   .SET   STRUC_12   
01B8                STRUC_12:   .SET   0   
01B8   2A 06 2E               LD   HL,(currkey)   
01BB   7E                     LD   A,(HL)   ; get next key from input lineBuf
01BC   23                     INC   HL   
01BD   22 06 2E               LD   (currkey),HL   ; increment currkey
01C0   C1                     POP   BC   
01C1   D1                     POP   DE   
01C2   E1                     POP   HL   
01C3   C9                     RET      
01C4                             ; 
01C4                             ; Output pascal string ***
01C4                             ; params: DE = addr
01C4                             ; 
01C4                PRINTPSTR:      
01C4   F5                     PUSH   AF   
01C5   C5                     PUSH   BC   
01C6   D5                     PUSH   DE   
01C7   1A                     LD   A,(DE)   
01C8   4F                     LD   C,A   
01C9   06 00                  LD   B,0   
01CB   13                     INC   DE   
01CC   CD 7B 01               CALL   printRoutine   
01CF   D1                     POP   DE   
01D0   C1                     POP   BC   
01D1   F1                     POP   AF   
01D2   C9                     RET      
01D3                             ; 
01D3                             ; Output string
01D3                             ; params: DE = addr, BC = length
01D3                             ; 
01D3                PRINTSTR:      
01D3   F5                     PUSH   AF   
01D4   C5                     PUSH   BC   
01D5   D5                     PUSH   DE   
01D6   CD 7B 01               CALL   printRoutine   
01D9   D1                     POP   DE   
01DA   C1                     POP   BC   
01DB   F1                     POP   AF   
01DC   C9                     RET      
01DD                PRINTCR:      
01DD   D5                     PUSH   DE   
01DE   11 EE 01               LD   DE,TXT_NEWLINE   
01E1   CD C4 01               CALL   printPStr   
01E4   D1                     POP   DE   
01E5   C9                     RET      
01E6                PRINTSPACE:      
01E6   F5                     PUSH   AF   
01E7   3E 20                  LD   A," "   
01E9   CD E5 00               CALL   putc   
01EC   F1                     POP   AF   
01ED   C9                     RET      
01EE   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
01F1   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
01F6   03 3D 3E 20  STACKPROMPT:   .PSTR   "=> "   
01FA   23 54 45 43 2D 31 20 4D 6F 6E 69 74 6F 72 20 33 2E 30 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_MONITOR_INTRO:   .PSTR   "TEC-1 Monitor 3.0 by John Hardy\r\n\r\n"   
021E                             ; ; words must preserve: BC, DE, SP, IX
021E                             ; ; words may destroy: HL, IY, AF, AF", BC", DE" HL"
021E                          ;*Macro unroll: mCODE "xword",6,0,xword               ; delim limit addr -- c-addr
021E                HEADER_XWORD:      ; delim limit addr -- c-addr
021E   00 00                  DW   link   
0220                LINK:     .SET   HEADER_xword   
0220   06                     DB   0 + 6   
0221   78 77 6F 72 64         DB   "xword"   
0226                XWORD:       
0226   CD BB 09               CALL   xwordSkip   
0229   CD 4F 0A               CALL   xwordRead   
022C                          ;*Macro unroll:  NEXT
022C   C3 A8 07               JP   enter   
022F                          ;*Macro unroll: mCODE "find",4,0,FIND
022F                HEADER_FIND:      
022F   1E 02                  DW   link   
0231                LINK:     .SET   HEADER_FIND   
0231   04                     DB   0 + 4   
0232   66 69 6E 64            DB   "find"   
0236                FIND:        
0236                          ;*Macro unroll:  ppop0 H,L
0236   DD 2B                  DEC   IX   
0238   DD 66 00               LD   H,(IX+0)   
023B   DD 2B                  DEC   IX   
023D   DD 6E 00               LD   L,(IX+0)   
0240   CD 5A 09               CALL   lookup   ; params: HL = string address, BC = string length
0243                             ; returns: DE = found header ptr or 0
0243                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
0243   4B                     LD   C,E   ; move to TOS
0244   42                     LD   B,D   
0245                          ;*Macro unroll:  NEXT
0245   C3 A8 07               JP   enter   
0248                          ;*Macro unroll: mCODE "execute",7,0,EXECUTE
0248                HEADER_EXECUTE:      
0248   2F 02                  DW   link   
024A                LINK:     .SET   HEADER_EXECUTE   
024A   07                     DB   0 + 7   
024B   65 78 65 63 75 74 65   DB   "execute"   
0252                EXECUTE:      
0252                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0252   60                     LD   H,B   ; POP TOS into HL
0253   69                     LD   L,C   
0254                          ;*Macro unroll:  ppop0 B,C
0254   DD 2B                  DEC   IX   
0256   DD 46 00               LD   B,(IX+0)   
0259   DD 2B                  DEC   IX   
025B   DD 4E 00               LD   C,(IX+0)   
025E   E9                     JP   (hl)   ; go do Forth word
025F                          ;*Macro unroll: mCODE "number",6,0,NUMBER         ; ( ptr len -- num err )
025F                HEADER_NUMBER:      ; ( ptr len -- num err )
025F   48 02                  DW   link   
0261                LINK:     .SET   HEADER_NUMBER   
0261   06                     DB   0 + 6   
0262   6E 75 6D 62 65 72      DB   "number"   
0268                NUMBER:      
0268                          ;*Macro unroll:  ppop0 H,L
0268   DD 2B                  DEC   IX   
026A   DD 66 00               LD   H,(IX+0)   
026D   DD 2B                  DEC   IX   
026F   DD 6E 00               LD   L,(IX+0)   
0272   CD 7A 08               CALL   toNumber   ; params: HL = string address, BC = string length
0275                             ; Returns the parsed number in DE,
0275                             ; BC = 0, success
0275                          ;*Macro unroll:  ppush0 D,E
0275   DD 73 00               LD   (IX+0),E   
0278   DD 23                  INC   IX   
027A   DD 72 00               LD   (IX+0),D   
027D   DD 23                  INC   IX   
027F                          ;*Macro unroll:  NEXT
027F   C3 A8 07               JP   enter   
0282                          ;*Macro unroll: mCODE "+!",2,0,ADDSTORE               ; (n addr -- )
0282                HEADER_ADDSTORE:      ; (n addr -- )
0282   5F 02                  DW   link   
0284                LINK:     .SET   HEADER_ADDSTORE   
0284   02                     DB   0 + 2   
0285   2B 21                  DB   "+!"   
0287                ADDSTORE:      
0287                          ;*Macro unroll: 	ppop H, L		            ; HL = address, TOS = amount to add
0287   60                     LD   H,B   ; HL = address, TOS = amount to add
0288   69                     LD   L,C   
0289                          ;*Macro unroll:  ppop0 B,C
0289   DD 2B                  DEC   IX   
028B   DD 46 00               LD   B,(IX+0)   
028E   DD 2B                  DEC   IX   
0290   DD 4E 00               LD   C,(IX+0)   
0293   7E                     LD   A,(HL)   
0294   81                     ADD   A,C   ; add TOS at (HL),
0295   77                     LD   (HL),A   
0296   23                     INC   HL   
0297   7E                     LD   A,(HL)   
0298   88                     ADC   A,B   
0299   77                     LD   (HL),A   
029A                          ;*Macro unroll: 	ppop0 B,C                      ; clear param stack
029A   DD 2B                  DEC   IX   ; clear param stack
029C   DD 46 00               LD   B,(IX+0)   
029F   DD 2B                  DEC   IX   
02A1   DD 4E 00               LD   C,(IX+0)   
02A4                          ;*Macro unroll:  NEXT
02A4   C3 A8 07               JP   enter   
02A7                          ;*Macro unroll: mCODE "hidden",6,0,HIDDEN
02A7                HEADER_HIDDEN:      
02A7   82 02                  DW   link   
02A9                LINK:     .SET   HEADER_HIDDEN   
02A9   06                     DB   0 + 6   
02AA   68 69 64 64 65 6E      DB   "hidden"   
02B0                HIDDEN:      
02B0                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
02B0   60                     LD   H,B   ; HL = Dictionary entry.
02B1   69                     LD   L,C   
02B2                          ;*Macro unroll:  ppop0 B,C
02B2   DD 2B                  DEC   IX   
02B4   DD 46 00               LD   B,(IX+0)   
02B7   DD 2B                  DEC   IX   
02B9   DD 4E 00               LD   C,(IX+0)   
02BC   23                     INC   HL   
02BD   23                     INC   HL   ; Point to name/flags byte.
02BE   7E                     LD   A,(HL)   
02BF   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
02C1   77                     LD   (HL),A   
02C2                          ;*Macro unroll:  NEXT
02C2   C3 A8 07               JP   enter   
02C5                             ; 1+      n1/u1 -- n2/u2            add 1 to TOS
02C5                          ;*Macro unroll: mCODE "1+",2,0,onePlus
02C5                HEADER_ONEPLUS:      
02C5   A7 02                  DW   link   
02C7                LINK:     .SET   HEADER_onePlus   
02C7   02                     DB   0 + 2   
02C8   31 2B                  DB   "1+"   
02CA                ONEPLUS:      
02CA   03                     INC   BC   
02CB                          ;*Macro unroll:  NEXT
02CB   C3 A8 07               JP   enter   
02CE                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
02CE                          ;*Macro unroll: mCODE "2+",2,0,twoPlus
02CE                HEADER_TWOPLUS:      
02CE   C5 02                  DW   link   
02D0                LINK:     .SET   HEADER_twoPlus   
02D0   02                     DB   0 + 2   
02D1   32 2B                  DB   "2+"   
02D3                TWOPLUS:      
02D3   03                     INC   BC   
02D4   03                     INC   BC   
02D5                          ;*Macro unroll:  NEXT
02D5   C3 A8 07               JP   enter   
02D8                             ; ?branch   x --              branch if TOS zero
02D8                          ;*Macro unroll: mCODE "?branch",7,0,QBRAN
02D8                HEADER_ZBRANCH:      
02D8   CE 02                  DW   link   
02DA                LINK:     .SET   HEADER_ZBRANCH   
02DA   07                     DB   0 + 7   
02DB   30 62 72 61 6E 63 68   DB   "?branch"   
02E2                QBRAN:      
02E2                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
02E2   79                     LD   A,C   ; test old TOS
02E3   B0                     OR   B   
02E4                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
02E4   DD 2B                  DEC   IX   ; POP new TOS
02E6   DD 46 00               LD   B,(IX+0)   
02E9   DD 2B                  DEC   IX   
02EB   DD 4E 00               LD   C,(IX+0)   
02EE   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
02F0   E1                     POP   HL   
02F1   23                     INC   HL   ; else skip inline value
02F2   23                     INC   HL   
02F3                          ;*Macro unroll:  NEXT1
02F3   C3 A9 07               JP   enter1   
02F6                          ;*Macro unroll: mCODE "branch",6,0,BRAN         ; relative branching
02F6                HEADER_BRANCH:      ; relative branching
02F6   D8 02                  DW   link   
02F8                LINK:     .SET   HEADER_BRANCH   
02F8   06                     DB   0 + 6   
02F9   62 72 61 6E 63 68      DB   "branch"   
02FF                BRAN:      
02FF   E1                     POP   HL   ; add the offset to the instruction pointer
0300   5E                     LD   E,(HL)   
0301   23                     INC   HL   
0302   56                     LD   D,(HL)   
0303   2B                     DEC   HL   
0304   19                     ADD   HL,DE   
0305                          ;*Macro unroll:  NEXT1
0305   C3 A9 07               JP   enter1   
0308                          ;*Macro unroll: mCODE "lit",3,0,LIT
0308                HEADER_LIT:      
0308   F6 02                  DW   link   
030A                LINK:     .SET   HEADER_LIT   
030A   03                     DB   0 + 3   
030B   6C 69 74               DB   "lit"   
030E                LIT:         
030E                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
030E   DD 71 00               LD   (IX+0),C   ; pushTOS
0311   DD 23                  INC   IX   
0313   DD 70 00               LD   (IX+0),B   
0316   DD 23                  INC   IX   
0318   E1                     POP   HL   ; pop address of next Forth word in HL
0319                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
0319   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
031A   23                     INC   HL   
031B   46                     LD   B,(HL)   
031C   23                     INC   HL   
031D                          ;*Macro unroll:  NEXT1
031D   C3 A9 07               JP   enter1   
0320                             ; 0<     n -- flag                  true if TOS negative
0320                          ;*Macro unroll: mCODE "0<",2,0,ZEROLESS
0320                HEADER_ZEROLESS:      
0320   08 03                  DW   link   
0322                LINK:     .SET   HEADER_ZEROLESS   
0322   02                     DB   0 + 2   
0323   30 3C                  DB   "0<"   
0325                ZEROLESS:      
0325   CB 20                  SLA   b   ; sign bit -> cy flag
0327   9F                     SBC   a,a   
0328   E6 01                  AND   1   ; <0 = -1, >0 = 0
032A   06 00                  LD   b,0   
032C   4F                     LD   c,a   
032D                          ;*Macro unroll:  NEXT
032D   C3 A8 07               JP   enter   
0330                             ; INVERT x1 -- x2               ; bitwise complement
0330                          ;*Macro unroll: mCODE "invert",6,0,INVERT
0330                HEADER_INVERT:      
0330   20 03                  DW   link   
0332                LINK:     .SET   HEADER_INVERT   
0332   06                     DB   0 + 6   
0333   69 6E 76 65 72 74      DB   "invert"   
0339                INVERT:      
0339   78                     LD   A,B   
033A   2F                     CPL      
033B   47                     LD   B,A   
033C   79                     LD   A,C   
033D   2F                     CPL      
033E   4F                     LD   C,A   
033F                          ;*Macro unroll:  NEXT
033F   C3 A8 07               JP   enter   
0342                             ; 
0342                             ; 
0342                             ; logic
0342                             ; 
0342                             ; 
0342                             ; TRUE
0342                          ;*Macro unroll: mCODE "true",4,0,TRUE
0342                HEADER_TRUE:      
0342   30 03                  DW   link   
0344                LINK:     .SET   HEADER_TRUE   
0344   04                     DB   0 + 4   
0345   74 72 75 65            DB   "true"   
0349                TRUE:        
0349                          ;*Macro unroll:  ppush0 B,C
0349   DD 71 00               LD   (IX+0),C   
034C   DD 23                  INC   IX   
034E   DD 70 00               LD   (IX+0),B   
0351   DD 23                  INC   IX   
0353   01 01 00               LD   BC,1   
0356                          ;*Macro unroll:  NEXT
0356   C3 A8 07               JP   enter   
0359                             ; FALSE
0359                          ;*Macro unroll: mCODE "false",5,0,FALSE
0359                HEADER_FALSE:      
0359   42 03                  DW   link   
035B                LINK:     .SET   HEADER_FALSE   
035B   05                     DB   0 + 5   
035C   66 61 6C 73 65         DB   "false"   
0361                FALSE:       
0361                          ;*Macro unroll:  ppush0 B,C
0361   DD 71 00               LD   (IX+0),C   
0364   DD 23                  INC   IX   
0366   DD 70 00               LD   (IX+0),B   
0369   DD 23                  INC   IX   
036B   01 00 00               LD   BC,0   
036E                          ;*Macro unroll:  NEXT
036E   C3 A8 07               JP   enter   
0371                             ; =      x1 x2 -- flag         test x1=x2
0371                          ;*Macro unroll: mCODE "=",1,0,equal
0371                HEADER_EQUAL:      
0371   59 03                  DW   link   
0373                LINK:     .SET   HEADER_equal   
0373   01                     DB   0 + 1   
0374   3D                     DB   "="   
0375                EQUAL:       
0375                          ;*Macro unroll:  ppop0 H,L
0375   DD 2B                  DEC   IX   
0377   DD 66 00               LD   H,(IX+0)   
037A   DD 2B                  DEC   IX   
037C   DD 6E 00               LD   L,(IX+0)   
037F   B7                     OR   A   
0380   ED 42                  SBC   HL,BC   ; x1-x2 in HL, SZVC valid
0382                          ;*Macro unroll:  _if nz
0382   C2 88 03               JP   nz,L_M_964S129   
0385   C3 85 03               JP   $   
0388                          ;*Macro unroll:  STRUC_PUSH $
0388                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0388                STRUC_12:   .SET   STRUC_11   
0388                STRUC_11:   .SET   STRUC_10   
0388                STRUC_10:   .SET   STRUC_9   
0388                STRUC_9:   .SET   STRUC_8   
0388                STRUC_8:   .SET   STRUC_7   
0388                STRUC_7:   .SET   STRUC_6   
0388                STRUC_6:   .SET   STRUC_5   
0388                STRUC_5:   .SET   STRUC_4   
0388                STRUC_4:   .SET   STRUC_3   
0388                STRUC_3:   .SET   STRUC_2   
0388                STRUC_2:   .SET   STRUC_TOP   
0388                STRUC_TOP:   .SET   $   
0388                L_M_964S129:      
0388   01 01 00               LD   BC,1   ;   if -ve, result true
038B                          ;*Macro unroll:  _endif
038B                          ;*Macro unroll:  STRUC_FWD
038B                CUR_ADR:   .SET   $   
0386                          .ORG   STRUC_TOP - 2   
0386   8B 03                  DW   CUR_ADR   
038B                          .ORG   CUR_ADR   
038B                          ;*Macro unroll:  STRUC_POP
038B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
038B                STRUC_TOP:   .SET   STRUC_2   
038B                STRUC_2:   .SET   STRUC_3   
038B                STRUC_3:   .SET   STRUC_4   
038B                STRUC_4:   .SET   STRUC_5   
038B                STRUC_5:   .SET   STRUC_6   
038B                STRUC_6:   .SET   STRUC_7   
038B                STRUC_7:   .SET   STRUC_8   
038B                STRUC_8:   .SET   STRUC_9   
038B                STRUC_9:   .SET   STRUC_10   
038B                STRUC_10:   .SET   STRUC_11   
038B                STRUC_11:   .SET   STRUC_12   
038B                STRUC_12:   .SET   0   
038B   03                     INC   BC   
038C                          ;*Macro unroll:  NEXT
038C   C3 A8 07               JP   enter   
038F                             ; <      n1 n2 -- flag          test n1<n2
038F                          ;*Macro unroll: mCODE "<",1,0,LESSTHAN	        ; less than
038F                HEADER_LESSTHAN:      ; less than
038F   71 03                  DW   link   
0391                LINK:     .SET   HEADER_LESSTHAN   
0391   01                     DB   0 + 1   
0392   3C                     DB   "<"   
0393                LESSTHAN:      
0393                          ;*Macro unroll:  ppop0 H,L
0393   DD 2B                  DEC   IX   
0395   DD 66 00               LD   H,(IX+0)   
0398   DD 2B                  DEC   IX   
039A   DD 6E 00               LD   L,(IX+0)   
039D   B7                     OR   A   
039E   ED 42                  SBC   HL,BC   ; n1-n2 in HL, SZVC valid
03A0                          ;*Macro unroll:  _if pe
03A0   EA A6 03               JP   pe,L_M_974S140   
03A3   C3 A3 03               JP   $   
03A6                          ;*Macro unroll:  STRUC_PUSH $
03A6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03A6                STRUC_12:   .SET   STRUC_11   
03A6                STRUC_11:   .SET   STRUC_10   
03A6                STRUC_10:   .SET   STRUC_9   
03A6                STRUC_9:   .SET   STRUC_8   
03A6                STRUC_8:   .SET   STRUC_7   
03A6                STRUC_7:   .SET   STRUC_6   
03A6                STRUC_6:   .SET   STRUC_5   
03A6                STRUC_5:   .SET   STRUC_4   
03A6                STRUC_4:   .SET   STRUC_3   
03A6                STRUC_3:   .SET   STRUC_2   
03A6                STRUC_2:   .SET   STRUC_TOP   
03A6                STRUC_TOP:   .SET   $   
03A6                L_M_974S140:      
03A6                          ;*Macro unroll:  _if m
03A6   FA AC 03               JP   m,L_M_975S141   
03A9   C3 A9 03               JP   $   
03AC                          ;*Macro unroll:  STRUC_PUSH $
03AC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03AC                STRUC_12:   .SET   STRUC_11   
03AC                STRUC_11:   .SET   STRUC_10   
03AC                STRUC_10:   .SET   STRUC_9   
03AC                STRUC_9:   .SET   STRUC_8   
03AC                STRUC_8:   .SET   STRUC_7   
03AC                STRUC_7:   .SET   STRUC_6   
03AC                STRUC_6:   .SET   STRUC_5   
03AC                STRUC_5:   .SET   STRUC_4   
03AC                STRUC_4:   .SET   STRUC_3   
03AC                STRUC_3:   .SET   STRUC_2   
03AC                STRUC_2:   .SET   STRUC_TOP   
03AC                STRUC_TOP:   .SET   $   
03AC                L_M_975S141:      
03AC   01 00 00               LD   bc,0   
03AF                          ;*Macro unroll:  _else
03AF   C3 AF 03               JP   $   
03B2                          ;*Macro unroll:  STRUC_FWD
03B2                CUR_ADR:   .SET   $   
03AA                          .ORG   STRUC_TOP - 2   
03AA   B2 03                  DW   CUR_ADR   
03B2                          .ORG   CUR_ADR   
03B2                STRUC_TOP:   .SET   $   
03B2   01 01 00               LD   bc,1   ;   if -ve, result true
03B5                          ;*Macro unroll:  _endif
03B5                          ;*Macro unroll:  STRUC_FWD
03B5                CUR_ADR:   .SET   $   
03B0                          .ORG   STRUC_TOP - 2   
03B0   B5 03                  DW   CUR_ADR   
03B5                          .ORG   CUR_ADR   
03B5                          ;*Macro unroll:  STRUC_POP
03B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03B5                STRUC_TOP:   .SET   STRUC_2   
03B5                STRUC_2:   .SET   STRUC_3   
03B5                STRUC_3:   .SET   STRUC_4   
03B5                STRUC_4:   .SET   STRUC_5   
03B5                STRUC_5:   .SET   STRUC_6   
03B5                STRUC_6:   .SET   STRUC_7   
03B5                STRUC_7:   .SET   STRUC_8   
03B5                STRUC_8:   .SET   STRUC_9   
03B5                STRUC_9:   .SET   STRUC_10   
03B5                STRUC_10:   .SET   STRUC_11   
03B5                STRUC_11:   .SET   STRUC_12   
03B5                STRUC_12:   .SET   0   
03B5                          ;*Macro unroll:  _else
03B5   C3 B5 03               JP   $   
03B8                          ;*Macro unroll:  STRUC_FWD
03B8                CUR_ADR:   .SET   $   
03A4                          .ORG   STRUC_TOP - 2   
03A4   B8 03                  DW   CUR_ADR   
03B8                          .ORG   CUR_ADR   
03B8                STRUC_TOP:   .SET   $   
03B8                          ;*Macro unroll:  _if p
03B8   F2 BE 03               JP   p,L_M_981S147   
03BB   C3 BB 03               JP   $   
03BE                          ;*Macro unroll:  STRUC_PUSH $
03BE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03BE                STRUC_12:   .SET   STRUC_11   
03BE                STRUC_11:   .SET   STRUC_10   
03BE                STRUC_10:   .SET   STRUC_9   
03BE                STRUC_9:   .SET   STRUC_8   
03BE                STRUC_8:   .SET   STRUC_7   
03BE                STRUC_7:   .SET   STRUC_6   
03BE                STRUC_6:   .SET   STRUC_5   
03BE                STRUC_5:   .SET   STRUC_4   
03BE                STRUC_4:   .SET   STRUC_3   
03BE                STRUC_3:   .SET   STRUC_2   
03BE                STRUC_2:   .SET   STRUC_TOP   
03BE                STRUC_TOP:   .SET   $   
03BE                L_M_981S147:      
03BE   01 00 00               LD   bc,0   
03C1                          ;*Macro unroll:  _else
03C1   C3 C1 03               JP   $   
03C4                          ;*Macro unroll:  STRUC_FWD
03C4                CUR_ADR:   .SET   $   
03BC                          .ORG   STRUC_TOP - 2   
03BC   C4 03                  DW   CUR_ADR   
03C4                          .ORG   CUR_ADR   
03C4                STRUC_TOP:   .SET   $   
03C4   01 01 00               LD   bc,1   ;   if -ve, result true
03C7                          ;*Macro unroll:  _endif
03C7                          ;*Macro unroll:  STRUC_FWD
03C7                CUR_ADR:   .SET   $   
03C2                          .ORG   STRUC_TOP - 2   
03C2   C7 03                  DW   CUR_ADR   
03C7                          .ORG   CUR_ADR   
03C7                          ;*Macro unroll:  STRUC_POP
03C7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03C7                STRUC_TOP:   .SET   STRUC_2   
03C7                STRUC_2:   .SET   STRUC_3   
03C7                STRUC_3:   .SET   STRUC_4   
03C7                STRUC_4:   .SET   STRUC_5   
03C7                STRUC_5:   .SET   STRUC_6   
03C7                STRUC_6:   .SET   STRUC_7   
03C7                STRUC_7:   .SET   STRUC_8   
03C7                STRUC_8:   .SET   STRUC_9   
03C7                STRUC_9:   .SET   STRUC_10   
03C7                STRUC_10:   .SET   STRUC_11   
03C7                STRUC_11:   .SET   STRUC_12   
03C7                STRUC_12:   .SET   0   
03C7                          ;*Macro unroll:  _endif
03C7                          ;*Macro unroll:  STRUC_FWD
03C7                CUR_ADR:   .SET   $   
03B6                          .ORG   STRUC_TOP - 2   
03B6   C7 03                  DW   CUR_ADR   
03C7                          .ORG   CUR_ADR   
03C7                          ;*Macro unroll:  STRUC_POP
03C7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03C7                STRUC_TOP:   .SET   STRUC_2   
03C7                STRUC_2:   .SET   STRUC_3   
03C7                STRUC_3:   .SET   STRUC_4   
03C7                STRUC_4:   .SET   STRUC_5   
03C7                STRUC_5:   .SET   STRUC_6   
03C7                STRUC_6:   .SET   STRUC_7   
03C7                STRUC_7:   .SET   STRUC_8   
03C7                STRUC_8:   .SET   STRUC_9   
03C7                STRUC_9:   .SET   STRUC_10   
03C7                STRUC_10:   .SET   STRUC_11   
03C7                STRUC_11:   .SET   STRUC_12   
03C7                STRUC_12:   .SET   0   
03C7                          ;*Macro unroll:  NEXT
03C7   C3 A8 07               JP   enter   
03CA                             ; >      n1 n2 -- flag          test n1 > n2
03CA                          ;*Macro unroll: mCODE ">",1,0,GREATERTHAN	        ; less than
03CA                HEADER_GREATERTHAN:      ; less than
03CA   8F 03                  DW   link   
03CC                LINK:     .SET   HEADER_GREATERTHAN   
03CC   01                     DB   0 + 1   
03CD   3E                     DB   ">"   
03CE                GREATERTHAN:      
03CE                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
03CE   DD 2B                  DEC   IX   ; swap operands
03D0   DD 66 00               LD   H,(IX+0)   
03D3   DD 2B                  DEC   IX   
03D5   DD 6E 00               LD   L,(IX+0)   
03D8                          ;*Macro unroll:  ppush H,L
03D8                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
03D8   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
03DB   DD 23                  INC   IX   
03DD   DD 70 00               LD   (IX+0),B   
03E0   DD 23                  INC   IX   
03E2   44                     LD   B,H   
03E3   4D                     LD   C,L   
03E4   18 AD                  JR   LESSTHAN   
03E6                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
03E6                             ; ;;
03E6                             ; ;; memory access
03E6                             ; ;;
03E6                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
03E6                             ; !        x a-addr --   store cell in memory
03E6                          ;*Macro unroll: mCODE "!",1,0,STORE
03E6                HEADER_STORE:      
03E6   CA 03                  DW   link   
03E8                LINK:     .SET   HEADER_STORE   
03E8   01                     DB   0 + 1   
03E9   21                     DB   "!"   
03EA                STORE:       
03EA                          ;*Macro unroll:  ppop H,L
03EA   60                     LD   H,B   
03EB   69                     LD   L,C   
03EC                          ;*Macro unroll:  ppop0 B,C
03EC   DD 2B                  DEC   IX   
03EE   DD 46 00               LD   B,(IX+0)   
03F1   DD 2B                  DEC   IX   
03F3   DD 4E 00               LD   C,(IX+0)   
03F6                          ;*Macro unroll:  writeWord HL, B,C
03F6                          ;*Macro unroll:  writeByte HL, C
03F6   71                     LD   (HL),C   
03F7   23                     INC   HL   
03F8                          ;*Macro unroll:  writeByte HL, B
03F8   70                     LD   (HL),B   
03F9   23                     INC   HL   
03FA                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
03FA   DD 2B                  DEC   IX   ; POP new TOS
03FC   DD 46 00               LD   B,(IX+0)   
03FF   DD 2B                  DEC   IX   
0401   DD 4E 00               LD   C,(IX+0)   
0404                          ;*Macro unroll:  NEXT
0404   C3 A8 07               JP   enter   
0407                          ;*Macro unroll: mCODE ",",1,0,COMMA
0407                HEADER_COMMA:      
0407   E6 03                  DW   link   
0409                LINK:     .SET   HEADER_COMMA   
0409   01                     DB   0 + 1   
040A   2C                     DB   ","   
040B                COMMA:       
040B   2A 10 30               LD   HL,(VAR_HERE)   ; HERE
040E                          ;*Macro unroll: 	writeWord HL, B,C
040E                          ;*Macro unroll:  writeByte HL, C
040E   71                     LD   (HL),C   
040F   23                     INC   HL   
0410                          ;*Macro unroll:  writeByte HL, B
0410   70                     LD   (HL),B   
0411   23                     INC   HL   
0412   22 10 30               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0415                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0415   DD 2B                  DEC   IX   ; cleanup TOS
0417   DD 46 00               LD   B,(IX+0)   
041A   DD 2B                  DEC   IX   
041C   DD 4E 00               LD   C,(IX+0)   
041F                          ;*Macro unroll:  NEXT
041F   C3 A8 07               JP   enter   
0422                          ;*Macro unroll: mCODE "@",1,0,FETCH
0422                HEADER_FETCH:      
0422   07 04                  DW   link   
0424                LINK:     .SET   HEADER_FETCH   
0424   01                     DB   0 + 1   
0425   40                     DB   "@"   
0426                FETCH:       
0426                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0426   69                     LD   L,C   ; HL = TOS
0427   60                     LD   H,B   
0428                          ;*Macro unroll:  readWord HL, B,C
0428   4E                     LD   C,(HL)   
0429   23                     INC   HL   
042A   46                     LD   B,(HL)   
042B   23                     INC   HL   
042C                          ;*Macro unroll:  NEXT
042C   C3 A8 07               JP   enter   
042F                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
042F                          ;*Macro unroll: mCODE "cells",5,0,CELLS
042F                HEADER_CELLS:      
042F   22 04                  DW   link   
0431                LINK:     .SET   HEADER_CELLS   
0431   05                     DB   0 + 5   
0432   63 65 6C 6C 73         DB   "cells"   
0437                CELLS:       
0437   C3 AC 04               JP   twostar   
043A                             ; C!      char c-addr --    store char in memory
043A                          ;*Macro unroll: mCODE "c!",2,0,CSTORE
043A                HEADER_CSTORE:      
043A   2F 04                  DW   link   
043C                LINK:     .SET   HEADER_CSTORE   
043C   02                     DB   0 + 2   
043D   63 21                  DB   "c!"   
043F                CSTORE:      
043F                          ;*Macro unroll:  ppop H,L
043F   60                     LD   H,B   
0440   69                     LD   L,C   
0441                          ;*Macro unroll:  ppop0 B,C
0441   DD 2B                  DEC   IX   
0443   DD 46 00               LD   B,(IX+0)   
0446   DD 2B                  DEC   IX   
0448   DD 4E 00               LD   C,(IX+0)   
044B   71                     LD   (HL),C   
044C                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
044C   DD 2B                  DEC   IX   ; POP new TOS
044E   DD 46 00               LD   B,(IX+0)   
0451   DD 2B                  DEC   IX   
0453   DD 4E 00               LD   C,(IX+0)   
0456                          ;*Macro unroll:  NEXT
0456   C3 A8 07               JP   enter   
0459                          ;*Macro unroll: mCODE "c,",1,0,CCOMMA
0459                HEADER_CCOMMA:      
0459   3A 04                  DW   link   
045B                LINK:     .SET   HEADER_CCOMMA   
045B   01                     DB   0 + 1   
045C   63 2C                  DB   "c,"   
045E                CCOMMA:      
045E                          ;*Macro unroll:  ppush0 H,L
045E   DD 75 00               LD   (IX+0),L   
0461   DD 23                  INC   IX   
0463   DD 74 00               LD   (IX+0),H   
0466   DD 23                  INC   IX   
0468   2A 10 30               LD   HL,(VAR_HERE)   ; HERE
046B   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
046C   23                     INC   HL   
046D   22 10 30               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0470                          ;*Macro unroll:  ppop0 H,L
0470   DD 2B                  DEC   IX   
0472   DD 66 00               LD   H,(IX+0)   
0475   DD 2B                  DEC   IX   
0477   DD 6E 00               LD   L,(IX+0)   
047A                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
047A   DD 2B                  DEC   IX   ; cleanup TOS
047C   DD 46 00               LD   B,(IX+0)   
047F   DD 2B                  DEC   IX   
0481   DD 4E 00               LD   C,(IX+0)   
0484                          ;*Macro unroll:  NEXT
0484   C3 A8 07               JP   enter   
0487                             ; C@     c-addr -- char   fetch char from memory
0487                          ;*Macro unroll: mCODE "c@",2,0,CFETCH
0487                HEADER_CFETCH:      
0487   59 04                  DW   link   
0489                LINK:     .SET   HEADER_CFETCH   
0489   02                     DB   0 + 2   
048A   63 40                  DB   "c@"   
048C                CFETCH:      
048C   0A                     LD   A,(BC)   
048D   4F                     LD   C,A   
048E   06 00                  LD   B,0   
0490                          ;*Macro unroll:  NEXT
0490   C3 A8 07               JP   enter   
0493                             ; 
0493                             ; 
0493                             ; arithmetic
0493                             ; 
0493                             ; 
0493                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
0493                          ;*Macro unroll: mCODE "+",1,0,PLUS
0493                HEADER_PLUS:      
0493   87 04                  DW   link   
0495                LINK:     .SET   HEADER_PLUS   
0495   01                     DB   0 + 1   
0496   2B                     DB   "+"   
0497                PLUS:        
0497                          ;*Macro unroll:  ppop0 H,L
0497   DD 2B                  DEC   IX   
0499   DD 66 00               LD   H,(IX+0)   
049C   DD 2B                  DEC   IX   
049E   DD 6E 00               LD   L,(IX+0)   
04A1   09                     ADD   HL,BC   
04A2                          ;*Macro unroll:  loadWord B,C, H,L
04A2   4D                     LD   C,L   
04A3   44                     LD   B,H   
04A4                          ;*Macro unroll:  NEXT
04A4   C3 A8 07               JP   enter   
04A7                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
04A7                          ;*Macro unroll: mCODE "2*",2,0,TWOSTAR
04A7                HEADER_TWOSTAR:      
04A7   93 04                  DW   link   
04A9                LINK:     .SET   HEADER_TWOSTAR   
04A9   02                     DB   0 + 2   
04AA   32 2A                  DB   "2*"   
04AC                TWOSTAR:      
04AC   CB 21                  SLA   C   
04AE   CB 10                  RL   B   
04B0                          ;*Macro unroll:  NEXT
04B0   C3 A8 07               JP   enter   
04B3                          ;*Macro unroll: mCODE "-",1,0,MINUS
04B3                HEADER_MINUS:      
04B3   A7 04                  DW   link   
04B5                LINK:     .SET   HEADER_MINUS   
04B5   01                     DB   0 + 1   
04B6   2D                     DB   "-"   
04B7                MINUS:       
04B7                          ;*Macro unroll:  ppop0 H,L
04B7   DD 2B                  DEC   IX   
04B9   DD 66 00               LD   H,(IX+0)   
04BC   DD 2B                  DEC   IX   
04BE   DD 6E 00               LD   L,(IX+0)   
04C1   B7                     OR   A   
04C2   ED 42                  SBC   HL,BC   
04C4                          ;*Macro unroll:  loadWord B,C, H,L
04C4   4D                     LD   C,L   
04C5   44                     LD   B,H   
04C6                          ;*Macro unroll:  NEXT
04C6   C3 A8 07               JP   enter   
04C9                             ; U*   u1 u2 -- ud   unsigned mutliply
04C9                          ;*Macro unroll: mCODE "u*",2,0,USTAR              ; u1 u2 -- ud
04C9                HEADER_USTAR:      ; u1 u2 -- ud
04C9   B3 04                  DW   link   
04CB                LINK:     .SET   HEADER_USTAR   
04CB   02                     DB   0 + 2   
04CC   75 2A                  DB   "u*"   
04CE                USTAR:       
04CE                             ; u2 in BC
04CE                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
04CE   DD 2B                  DEC   IX   ; u1 in DE
04D0   DD 56 00               LD   D,(IX+0)   
04D3   DD 2B                  DEC   IX   
04D5   DD 5E 00               LD   E,(IX+0)   
04D8   CD 12 09               CALL   unsignedMultiply   
04DB                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
04DB   DD 73 00               LD   (IX+0),E   ; udlo result
04DE   DD 23                  INC   IX   
04E0   DD 72 00               LD   (IX+0),D   
04E3   DD 23                  INC   IX   
04E5                             ; udhi result
04E5                          ;*Macro unroll:  NEXT
04E5   C3 A8 07               JP   enter   
04E8                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
04E8                          ;*Macro unroll: mCODE "u/mod",5,0,USLASHMOD
04E8                HEADER_USLASHMOD:      
04E8   C9 04                  DW   link   
04EA                LINK:     .SET   HEADER_USLASHMOD   
04EA   05                     DB   0 + 5   
04EB   75 2F 6D 6F 64         DB   "u/mod"   
04F0                USLASHMOD:      
04F0                          ;*Macro unroll:  ppop D,E                ; DE = divisor
04F0   50                     LD   D,B   ; DE = divisor
04F1   59                     LD   E,C   
04F2                          ;*Macro unroll:  ppop0 B,C
04F2   DD 2B                  DEC   IX   
04F4   DD 46 00               LD   B,(IX+0)   
04F7   DD 2B                  DEC   IX   
04F9   DD 4E 00               LD   C,(IX+0)   
04FC                             ; BC = dividend
04FC   CD 40 08               CALL   divideWordByWord   
04FF                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
04FF   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
0502   DD 23                  INC   IX   
0504   DD 74 00               LD   (IX+0),H   
0507   DD 23                  INC   IX   
0509                          ;*Macro unroll:  NEXT
0509   C3 A8 07               JP   enter   
050C                             ; 
050C                             ; 
050C                             ; logic
050C                             ; 
050C                             ; 
050C                          ;*Macro unroll: mCODE "[",1,MSK_IMMED,LBRAC
050C                HEADER_LBRAC:      
050C   E8 04                  DW   link   
050E                LINK:     .SET   HEADER_LBRAC   
050E   81                     DB   MSK_IMMED + 1   
050F   5B                     DB   "["   
0510                LBRAC:       
0510   21 00 00               LD   HL,0   
0513   22 14 30               LD   (VAR_STATE),HL   ; Set STATE to 0.
0516                          ;*Macro unroll:  NEXT
0516   C3 A8 07               JP   enter   
0519                          ;*Macro unroll: mCODE "]",1,0,RBRAC
0519                HEADER_RBRAC:      
0519   0C 05                  DW   link   
051B                LINK:     .SET   HEADER_RBRAC   
051B   01                     DB   0 + 1   
051C   5D                     DB   "]"   
051D                RBRAC:       
051D   21 01 00               LD   HL,1   
0520   22 14 30               LD   (VAR_STATE),HL   ; Set STATE to 1.
0523                          ;*Macro unroll:  NEXT
0523   C3 A8 07               JP   enter   
0526                             ; 0= zero-equal
0526                          ;*Macro unroll: mCODE "0=",2,0,zEqual
0526                HEADER_ZEQUAL:      
0526   19 05                  DW   link   
0528                LINK:     .SET   HEADER_zEqual   
0528   02                     DB   0 + 2   
0529   30 3D                  DB   "0="   
052B                ZEQUAL:      
052B                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
052B   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
052C   B0                     OR   B   
052D                          ;*Macro unroll:  _if nz
052D   C2 33 05               JP   nz,L_M_1091S278   
0530   C3 30 05               JP   $   
0533                          ;*Macro unroll:  STRUC_PUSH $
0533                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0533                STRUC_12:   .SET   STRUC_11   
0533                STRUC_11:   .SET   STRUC_10   
0533                STRUC_10:   .SET   STRUC_9   
0533                STRUC_9:   .SET   STRUC_8   
0533                STRUC_8:   .SET   STRUC_7   
0533                STRUC_7:   .SET   STRUC_6   
0533                STRUC_6:   .SET   STRUC_5   
0533                STRUC_5:   .SET   STRUC_4   
0533                STRUC_4:   .SET   STRUC_3   
0533                STRUC_3:   .SET   STRUC_2   
0533                STRUC_2:   .SET   STRUC_TOP   
0533                STRUC_TOP:   .SET   $   
0533                L_M_1091S278:      
0533   01 FF FF               LD   BC,-1   
0536                          ;*Macro unroll:  _endif
0536                          ;*Macro unroll:  STRUC_FWD
0536                CUR_ADR:   .SET   $   
0531                          .ORG   STRUC_TOP - 2   
0531   36 05                  DW   CUR_ADR   
0536                          .ORG   CUR_ADR   
0536                          ;*Macro unroll:  STRUC_POP
0536                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0536                STRUC_TOP:   .SET   STRUC_2   
0536                STRUC_2:   .SET   STRUC_3   
0536                STRUC_3:   .SET   STRUC_4   
0536                STRUC_4:   .SET   STRUC_5   
0536                STRUC_5:   .SET   STRUC_6   
0536                STRUC_6:   .SET   STRUC_7   
0536                STRUC_7:   .SET   STRUC_8   
0536                STRUC_8:   .SET   STRUC_9   
0536                STRUC_9:   .SET   STRUC_10   
0536                STRUC_10:   .SET   STRUC_11   
0536                STRUC_11:   .SET   STRUC_12   
0536                STRUC_12:   .SET   0   
0536   03                     INC   BC   
0537                          ;*Macro unroll:  NEXT
0537   C3 A8 07               JP   enter   
053A                          ;*Macro unroll: mCODE "0<>",3,0,zNotEqual
053A                HEADER_ZNOTEQUAL:      
053A   26 05                  DW   link   
053C                LINK:     .SET   HEADER_zNotEqual   
053C   03                     DB   0 + 3   
053D   30 3C 3E               DB   "0<>"   
0540                ZNOTEQUAL:      
0540                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0540   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0541   B0                     OR   B   
0542                          ;*Macro unroll:  _if nz
0542   C2 48 05               JP   nz,L_M_1098S286   
0545   C3 45 05               JP   $   
0548                          ;*Macro unroll:  STRUC_PUSH $
0548                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0548                STRUC_12:   .SET   STRUC_11   
0548                STRUC_11:   .SET   STRUC_10   
0548                STRUC_10:   .SET   STRUC_9   
0548                STRUC_9:   .SET   STRUC_8   
0548                STRUC_8:   .SET   STRUC_7   
0548                STRUC_7:   .SET   STRUC_6   
0548                STRUC_6:   .SET   STRUC_5   
0548                STRUC_5:   .SET   STRUC_4   
0548                STRUC_4:   .SET   STRUC_3   
0548                STRUC_3:   .SET   STRUC_2   
0548                STRUC_2:   .SET   STRUC_TOP   
0548                STRUC_TOP:   .SET   $   
0548                L_M_1098S286:      
0548   01 01 00               LD   BC,1   
054B                          ;*Macro unroll:  _endif
054B                          ;*Macro unroll:  STRUC_FWD
054B                CUR_ADR:   .SET   $   
0546                          .ORG   STRUC_TOP - 2   
0546   4B 05                  DW   CUR_ADR   
054B                          .ORG   CUR_ADR   
054B                          ;*Macro unroll:  STRUC_POP
054B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
054B                STRUC_TOP:   .SET   STRUC_2   
054B                STRUC_2:   .SET   STRUC_3   
054B                STRUC_3:   .SET   STRUC_4   
054B                STRUC_4:   .SET   STRUC_5   
054B                STRUC_5:   .SET   STRUC_6   
054B                STRUC_6:   .SET   STRUC_7   
054B                STRUC_7:   .SET   STRUC_8   
054B                STRUC_8:   .SET   STRUC_9   
054B                STRUC_9:   .SET   STRUC_10   
054B                STRUC_10:   .SET   STRUC_11   
054B                STRUC_11:   .SET   STRUC_12   
054B                STRUC_12:   .SET   0   
054B                          ;*Macro unroll:  NEXT
054B   C3 A8 07               JP   enter   
054E                             ; and    x1 x2 -- x3            logical and
054E                          ;*Macro unroll: mCODE "and",3,0,and	        ; bitwise and
054E                HEADER_AND:      ; bitwise and
054E   3A 05                  DW   link   
0550                LINK:     .SET   HEADER_and   
0550   03                     DB   0 + 3   
0551   61 6E 64               DB   "and"   
0554                AND:         
0554                          ;*Macro unroll:  ppop0 H,L
0554   DD 2B                  DEC   IX   
0556   DD 66 00               LD   H,(IX+0)   
0559   DD 2B                  DEC   IX   
055B   DD 6E 00               LD   L,(IX+0)   
055E   78                     LD   A,b   
055F   A4                     AND   H   
0560   47                     LD   B,A   
0561   79                     LD   A,C   
0562   A5                     AND   L   
0563   4F                     LD   C,A   
0564                          ;*Macro unroll:  NEXT
0564   C3 A8 07               JP   enter   
0567                             ; OR    x1 x2 -- x3             logical OR
0567                          ;*Macro unroll: mCODE "or",2,0,OR	            ; bitwise OR
0567                HEADER_OR:      ; bitwise OR
0567   4E 05                  DW   link   
0569                LINK:     .SET   HEADER_OR   
0569   02                     DB   0 + 2   
056A   6F 72                  DB   "or"   
056C                OR:          
056C                          ;*Macro unroll:  ppop0 H,L
056C   DD 2B                  DEC   IX   
056E   DD 66 00               LD   H,(IX+0)   
0571   DD 2B                  DEC   IX   
0573   DD 6E 00               LD   L,(IX+0)   
0576   78                     LD   A,B   
0577   B4                     OR   H   
0578   47                     LD   B,A   
0579   79                     LD   A,C   
057A   B5                     OR   L   
057B   4F                     LD   C,A   
057C                          ;*Macro unroll:  NEXT
057C   C3 A8 07               JP   enter   
057F                             ; xor    x1 x2 -- x3            logical xor
057F                          ;*Macro unroll: mCODE "xor",3,0,xor	        ; bitwise xor
057F                HEADER_XOR:      ; bitwise xor
057F   67 05                  DW   link   
0581                LINK:     .SET   HEADER_xor   
0581   03                     DB   0 + 3   
0582   78 6F 72               DB   "xor"   
0585                XOR:         
0585                          ;*Macro unroll:  ppop0 H,L
0585   DD 2B                  DEC   IX   
0587   DD 66 00               LD   H,(IX+0)   
058A   DD 2B                  DEC   IX   
058C   DD 6E 00               LD   L,(IX+0)   
058F   78                     LD   A,B   
0590   AC                     XOR   H   
0591   47                     LD   B,A   
0592   79                     LD   A,C   
0593   AD                     XOR   L   
0594   4F                     LD   C,A   
0595                          ;*Macro unroll:  NEXT
0595   C3 A8 07               JP   enter   
0598                             ; 
0598                             ; 
0598                             ; stack
0598                             ; 
0598                             ; 
0598                          ;*Macro unroll: mCODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
0598                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
0598   7F 05                  DW   link   
059A                LINK:     .SET   HEADER_ROT   
059A   03                     DB   0 + 3   
059B   72 6F 74               DB   "rot"   
059E                ROT:         
059E                             ; x3 in BC
059E                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
059E   DD 2B                  DEC   IX   ; x2 in DE
05A0   DD 56 00               LD   D,(IX+0)   
05A3   DD 2B                  DEC   IX   
05A5   DD 5E 00               LD   E,(IX+0)   
05A8                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
05A8   DD 2B                  DEC   IX   ; x1 in HL
05AA   DD 66 00               LD   H,(IX+0)   
05AD   DD 2B                  DEC   IX   
05AF   DD 6E 00               LD   L,(IX+0)   
05B2                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
05B2   DD 73 00               LD   (IX+0),E   ; x2 on stack
05B5   DD 23                  INC   IX   
05B7   DD 72 00               LD   (IX+0),D   
05BA   DD 23                  INC   IX   
05BC                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
05BC                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
05BC   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
05BF   DD 23                  INC   IX   
05C1   DD 70 00               LD   (IX+0),B   
05C4   DD 23                  INC   IX   
05C6   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
05C7   4D                     LD   C,L   
05C8                             ; x1 in BC
05C8                          ;*Macro unroll:  NEXT
05C8   C3 A8 07               JP   enter   
05CB                          ;*Macro unroll: mCODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
05CB                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
05CB   98 05                  DW   link   
05CD                LINK:     .SET   HEADER_NROT   
05CD   04                     DB   0 + 4   
05CE   2D 72 6F 74            DB   "-rot"   
05D2                NROT:        
05D2                             ; x3 in BC
05D2                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
05D2   DD 2B                  DEC   IX   ; x2 in DE
05D4   DD 56 00               LD   D,(IX+0)   
05D7   DD 2B                  DEC   IX   
05D9   DD 5E 00               LD   E,(IX+0)   
05DC                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
05DC   DD 2B                  DEC   IX   ; x1 in HL
05DE   DD 66 00               LD   H,(IX+0)   
05E1   DD 2B                  DEC   IX   
05E3   DD 6E 00               LD   L,(IX+0)   
05E6                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
05E6                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
05E6   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
05E9   DD 23                  INC   IX   
05EB   DD 70 00               LD   (IX+0),B   
05EE   DD 23                  INC   IX   
05F0   44                     LD   B,H   ; PUSH x1 - x3 x1
05F1   4D                     LD   C,L   
05F2                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
05F2                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
05F2   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
05F5   DD 23                  INC   IX   
05F7   DD 70 00               LD   (IX+0),B   
05FA   DD 23                  INC   IX   
05FC   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
05FD   4B                     LD   C,E   
05FE                             ; x2 in BC
05FE                          ;*Macro unroll:  NEXT
05FE   C3 A8 07               JP   enter   
0601                          ;*Macro unroll: mCODE "dup",3,0,DUP        ; x -- x x
0601                HEADER_DUP:      ; x -- x x
0601   CB 05                  DW   link   
0603                LINK:     .SET   HEADER_DUP   
0603   03                     DB   0 + 3   
0604   64 75 70               DB   "dup"   
0607                DUP:         
0607                          ;*Macro unroll:  ppush0 B,C
0607   DD 71 00               LD   (IX+0),C   
060A   DD 23                  INC   IX   
060C   DD 70 00               LD   (IX+0),B   
060F   DD 23                  INC   IX   
0611                          ;*Macro unroll:  NEXT
0611   C3 A8 07               JP   enter   
0614                             ; SWAP     x1 x2 -- x2 x1    swap top two items
0614                          ;*Macro unroll: mCODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
0614                HEADER_SWAP:      ; x1 x2 -- x2 x1
0614   01 06                  DW   link   
0616                LINK:     .SET   HEADER_SWAP   
0616   04                     DB   0 + 4   
0617   73 77 61 70            DB   "swap"   
061B                SWAP:        
061B                          ;*Macro unroll:  ppop0 D,E
061B   DD 2B                  DEC   IX   
061D   DD 56 00               LD   D,(IX+0)   
0620   DD 2B                  DEC   IX   
0622   DD 5E 00               LD   E,(IX+0)   
0625                          ;*Macro unroll:  ppush D,E
0625                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0625   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0628   DD 23                  INC   IX   
062A   DD 70 00               LD   (IX+0),B   
062D   DD 23                  INC   IX   
062F   42                     LD   B,D   
0630   4B                     LD   C,E   
0631                          ;*Macro unroll:  NEXT
0631   C3 A8 07               JP   enter   
0634                          ;*Macro unroll: mCODE "drop",4,0,DROP      ; x --
0634                HEADER_DROP:      ; x --
0634   14 06                  DW   link   
0636                LINK:     .SET   HEADER_DROP   
0636   04                     DB   0 + 4   
0637   64 72 6F 70            DB   "drop"   
063B                DROP:        
063B                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
063B   DD 2B                  DEC   IX   ; drop top of stack
063D   DD 46 00               LD   B,(IX+0)   
0640   DD 2B                  DEC   IX   
0642   DD 4E 00               LD   C,(IX+0)   
0645                          ;*Macro unroll:  NEXT
0645   C3 A8 07               JP   enter   
0648                             ; OVER    x1 x2 -- x1 x2 x1
0648                          ;*Macro unroll: mCODE "over",4,0,OVER
0648                HEADER_OVER:      
0648   34 06                  DW   link   
064A                LINK:     .SET   HEADER_OVER   
064A   04                     DB   0 + 4   
064B   6F 76 65 72            DB   "over"   
064F                OVER:        
064F                          ;*Macro unroll:  ppop0 H,L
064F   DD 2B                  DEC   IX   
0651   DD 66 00               LD   H,(IX+0)   
0654   DD 2B                  DEC   IX   
0656   DD 6E 00               LD   L,(IX+0)   
0659                          ;*Macro unroll:  ppush0 H,L
0659   DD 75 00               LD   (IX+0),L   
065C   DD 23                  INC   IX   
065E   DD 74 00               LD   (IX+0),H   
0661   DD 23                  INC   IX   
0663                          ;*Macro unroll:  ppush H,L
0663                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0663   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0666   DD 23                  INC   IX   
0668   DD 70 00               LD   (IX+0),B   
066B   DD 23                  INC   IX   
066D   44                     LD   B,H   
066E   4D                     LD   C,L   
066F                          ;*Macro unroll:  NEXT
066F   C3 A8 07               JP   enter   
0672                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
0672                          ;*Macro unroll: mCODE ">r",2,0,TOR
0672                HEADER_TOR:      
0672   48 06                  DW   link   
0674                LINK:     .SET   HEADER_TOR   
0674   02                     DB   0 + 2   
0675   3E 72                  DB   ">r"   
0677                TOR:         
0677   E1                     POP   HL   
0678   C5                     PUSH   BC   
0679   E5                     PUSH   HL   
067A                          ;*Macro unroll:  ppop0 B,C
067A   DD 2B                  DEC   IX   
067C   DD 46 00               LD   B,(IX+0)   
067F   DD 2B                  DEC   IX   
0681   DD 4E 00               LD   C,(IX+0)   
0684                          ;*Macro unroll:  NEXT
0684   C3 A8 07               JP   enter   
0687                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
0687                          ;*Macro unroll: mCODE "r>",2,0,RFROM
0687                HEADER_RFROM:      
0687   72 06                  DW   link   
0689                LINK:     .SET   HEADER_RFROM   
0689   02                     DB   0 + 2   
068A   72 3E                  DB   "r>"   
068C                RFROM:       
068C                          ;*Macro unroll:  ppush0 B,C
068C   DD 71 00               LD   (IX+0),C   
068F   DD 23                  INC   IX   
0691   DD 70 00               LD   (IX+0),B   
0694   DD 23                  INC   IX   
0696   E1                     POP   HL   
0697   C1                     POP   BC   
0698   E5                     PUSH   HL   
0699                          ;*Macro unroll:  NEXT
0699   C3 A8 07               JP   enter   
069C                             ; 
069C                             ; 
069C                             ; output
069C                             ; 
069C                             ; 
069C                          ;*Macro unroll: mCODE ".",1,0,DOT                 ; print top of stack in BASE
069C                HEADER_DOT:      ; print top of stack in BASE
069C   87 06                  DW   link   
069E                LINK:     .SET   HEADER_DOT   
069E   01                     DB   0 + 1   
069F   2E                     DB   "."   
06A0                DOT:         
06A0   E5                     PUSH   HL   
06A1   D5                     PUSH   DE   
06A2   C5                     PUSH   BC   
06A3                          ;*Macro unroll:  loadWord H,L, B,C
06A3   69                     LD   L,C   
06A4   60                     LD   H,B   
06A5   3A 1A 30               LD   A,(VAR_BASE)   
06A8   4F                     LD   C,A   
06A9   11 8C 2E               LD   DE,wordBuf   
06AC   CD D2 07               CALL   formatNum   
06AF   CD D3 01               CALL   printStr   
06B2   CD E6 01               CALL   printSpace   
06B5   C1                     POP   BC   
06B6   D1                     POP   DE   
06B7   E1                     POP   HL   
06B8                          ;*Macro unroll:  ppop0 B,C
06B8   DD 2B                  DEC   IX   
06BA   DD 46 00               LD   B,(IX+0)   
06BD   DD 2B                  DEC   IX   
06BF   DD 4E 00               LD   C,(IX+0)   
06C2                          ;*Macro unroll:  NEXT
06C2   C3 A8 07               JP   enter   
06C5                          ;*Macro unroll: mCODE "type",4,0,TYPE             ; ( str len -- )
06C5                HEADER_TYPE:      ; ( str len -- )
06C5   9C 06                  DW   link   
06C7                LINK:     .SET   HEADER_TYPE   
06C7   04                     DB   0 + 4   
06C8   74 79 70 65            DB   "type"   
06CC                TYPE:        
06CC                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
06CC   DD 2B                  DEC   IX   ; DE = str BC = length
06CE   DD 56 00               LD   D,(IX+0)   
06D1   DD 2B                  DEC   IX   
06D3   DD 5E 00               LD   E,(IX+0)   
06D6   CD D3 01               CALL   printStr   
06D9                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
06D9   DD 2B                  DEC   IX   ; clear TOS
06DB   DD 46 00               LD   B,(IX+0)   
06DE   DD 2B                  DEC   IX   
06E0   DD 4E 00               LD   C,(IX+0)   
06E3                          ;*Macro unroll:  NEXT
06E3   C3 A8 07               JP   enter   
06E6                          ;*Macro unroll: mCODE "cr",2,0,cr                 ; ( -- )
06E6                HEADER_CR:      ; ( -- )
06E6   C5 06                  DW   link   
06E8                LINK:     .SET   HEADER_cr   
06E8   02                     DB   0 + 2   
06E9   63 72                  DB   "cr"   
06EB                CR:          
06EB   CD DD 01               CALL   printcr   
06EE                          ;*Macro unroll:  NEXT
06EE   C3 A8 07               JP   enter   
06F1                             ; dw dup, 0<                      ; ptr data data
06F1                             ; cIf
06F1                             ;     dw swap                     ; data ptr
06F1                             ;     dw dup, lit, "-"            ; data ptr ptr "-"
06F1                             ;     dw swap, store              ; data ptr
06F1                             ; cEndif
06F1                             ; 
06F1                             ; HL = data, DE = ptr to lineBuf, C = base ***
06F1                             ; DE = ptr to string, BC = length
06F1                             ; 
06F1                             ; formatNumber:                       ; base data ptr -- ptr length
06F1                             ; bit 7, H
06F1                             ; _if nz
06F1                             ;     ; HL is negative. Output "-" to string and negate HL.
06F1                             ;     ld A, "-"
06F1                             ;     ld (DE), A
06F1                             ;     inc DE
06F1                             ;     call negateNum
06F1                             ; _endif
06F1                             ; ld B, 0     ; B will count character length of number
06F1                             ; _do
06F1                             ;     push BC
06F1                             ;     call divideWordByByte  ; HL = HL / A, A = remainder
06F1                             ;     pop BC
06F1                             ;     push AF
06F1                             ;     inc B
06F1                             ;     checkZeroWord H,L
06F1                             ; _until z
06F1                             ; _enddo
06F1                             ; _do
06F1                             ;     pop AF
06F1                             ;     add A,$30                     ; convert digit to ASCII
06F1                             ;     cp $3A
06F1                             ;     _if nc
06F1                             ;         add A,7
06F1                             ;     _endif
06F1                             ;     ld (DE), A
06F1                             ;     inc DE
06F1                             ; _djnz
06F1                             ; ld HL,wordBuf           ;calc length
06F1                             ; ex DE,HL
06F1                             ; or A
06F1                             ; sbc HL,DE
06F1                             ; loadWord B,C, H,L
06F1                             ; ret
06F1                             ; utilities
06F1                             ; low-level machine code routines
06F1   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
0717                TXT_STACK_UNDERFLOW:      
0717   18 45 72 72 6F 72 3A 20 53 74 61 63 6B 20 75 6E 64 65 72 66 6C 6F 77 0D 0A .PSTR   "Error: Stack underflow\r\n"   
0730   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
073B   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
0746   23 45 72 72 6F 72 3A 20 44 65 66 69 6E 69 74 69 6F 6E 73 20 63 61 6E 6E 6F 74 20 62 65 20 6E 65 73 74 65 64 NESTINGERR:   .PSTR   "Error: Definitions cannot be nested"   
076A                INITFORTH:      
076A   DD 21 0C 2F            LD   IX,data_stack   ; initialise the param stack.
076E   FD 21 A8 07            LD   IY,enter   
0772   DD 22 18 30            LD   (var_sp0),IX   
0776   01 00 00               LD   BC,0   ; tos
0779   21 00 00               LD   HL,0   
077C   22 8E 2F               LD   (var_framePtr),HL   
077F   22 12 30               LD   (var_intp_stop),HL   
0782   22 8C 2F               LD   (is_literal),HL   
0785   22 16 30               LD   (var_nesting),HL   
0788   22 14 30               LD   (var_state),HL   
078B   21 0A 00               LD   HL,10   
078E   22 1A 30               LD   (var_base),HL   
0791   21 22 30               LD   HL,start_user   
0794   22 10 30               LD   (var_here),HL   
0797   21 83 14               LD   HL,header_latest   
079A   22 1E 30               LD   (var_latest),HL   
079D   22 1C 30               LD   (var_latest_str),HL   
07A0   3E 96                  LD   A,rts_low   
07A2   D3 80                  OUT   ($80),A   ; initialise acia
07A4   ED 56                  IM   1   
07A6   FB                     EI      
07A7   C9                     RET      
07A8                ENTER:       
07A8   E1                     POP   HL   
07A9                ENTER1:      
07A9   5E                     LD   E,(HL)   
07AA   23                     INC   HL   
07AB   56                     LD   D,(HL)   
07AC   23                     INC   HL   
07AD   E5                     PUSH   HL   
07AE   EB                     EX   DE,HL   
07AF   E9                     JP   (HL)   
07B0                FORTH:       ; for calling forth words from assembly
07B0   21 8A 2E               LD   HL,exitAddr   
07B3   E3                     EX   (SP),HL   
07B4   22 8A 2E               LD   (exitAddr),HL   
07B7   EB                     EX   DE,HL   
07B8   E9                     JP   (HL)   
07B9                PRINTNUM:      
07B9   E5                     PUSH   HL   
07BA   D5                     PUSH   DE   
07BB   C5                     PUSH   BC   
07BC                          ;*Macro unroll:  loadWord H,L, B,C
07BC   69                     LD   L,C   
07BD   60                     LD   H,B   
07BE   3A 1A 30               LD   A,(VAR_BASE)   
07C1   4F                     LD   C,A   
07C2   11 8C 2E               LD   DE,wordBuf   
07C5   CD D2 07               CALL   formatNum   
07C8   CD D3 01               CALL   printStr   
07CB   CD E6 01               CALL   printSpace   
07CE   C1                     POP   BC   
07CF   D1                     POP   DE   
07D0   E1                     POP   HL   
07D1   C9                     RET      
07D2                             ; 
07D2                             ; HL = data, DE = ptr to lineBuf, C = base ***
07D2                             ; DE = ptr to string, BC = length
07D2                             ; 
07D2                FORMATNUM:      
07D2                             ; Detect sign of HL.
07D2   CB 7C                  BIT   7,H   
07D4                          ;*Macro unroll:  _if nz
07D4   C2 DA 07               JP   nz,L_M_1327S83   
07D7   C3 D7 07               JP   $   
07DA                          ;*Macro unroll:  STRUC_PUSH $
07DA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
07DA                STRUC_12:   .SET   STRUC_11   
07DA                STRUC_11:   .SET   STRUC_10   
07DA                STRUC_10:   .SET   STRUC_9   
07DA                STRUC_9:   .SET   STRUC_8   
07DA                STRUC_8:   .SET   STRUC_7   
07DA                STRUC_7:   .SET   STRUC_6   
07DA                STRUC_6:   .SET   STRUC_5   
07DA                STRUC_5:   .SET   STRUC_4   
07DA                STRUC_4:   .SET   STRUC_3   
07DA                STRUC_3:   .SET   STRUC_2   
07DA                STRUC_2:   .SET   STRUC_TOP   
07DA                STRUC_TOP:   .SET   $   
07DA                L_M_1327S83:      
07DA                             ; HL is negative. Output "-" to string and negate HL.
07DA   3E 2D                  LD   A,"-"   
07DC   12                     LD   (DE),A   
07DD   13                     INC   DE   
07DE   CD 17 08               CALL   negateNum   
07E1                          ;*Macro unroll:  _endif
07E1                          ;*Macro unroll:  STRUC_FWD
07E1                CUR_ADR:   .SET   $   
07D8                          .ORG   STRUC_TOP - 2   
07D8   E1 07                  DW   CUR_ADR   
07E1                          .ORG   CUR_ADR   
07E1                          ;*Macro unroll:  STRUC_POP
07E1                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
07E1                STRUC_TOP:   .SET   STRUC_2   
07E1                STRUC_2:   .SET   STRUC_3   
07E1                STRUC_3:   .SET   STRUC_4   
07E1                STRUC_4:   .SET   STRUC_5   
07E1                STRUC_5:   .SET   STRUC_6   
07E1                STRUC_6:   .SET   STRUC_7   
07E1                STRUC_7:   .SET   STRUC_8   
07E1                STRUC_8:   .SET   STRUC_9   
07E1                STRUC_9:   .SET   STRUC_10   
07E1                STRUC_10:   .SET   STRUC_11   
07E1                STRUC_11:   .SET   STRUC_12   
07E1                STRUC_12:   .SET   0   
07E1   06 00                  LD   B,0   ; B will count character length of number
07E3                          ;*Macro unroll:  _do
07E3   18 03                  JR   L_M_1335S92   
07E5   C3 E5 07               JP   $   
07E8                          ;*Macro unroll:  DLOOP_PUSH $
07E8                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
07E8                DLOOP_12:   .SET   DLOOP_11   
07E8                DLOOP_11:   .SET   DLOOP_10   
07E8                DLOOP_10:   .SET   DLOOP_9   
07E8                DLOOP_9:   .SET   DLOOP_8   
07E8                DLOOP_8:   .SET   DLOOP_7   
07E8                DLOOP_7:   .SET   DLOOP_6   
07E8                DLOOP_6:   .SET   DLOOP_5   
07E8                DLOOP_5:   .SET   DLOOP_4   
07E8                DLOOP_4:   .SET   DLOOP_3   
07E8                DLOOP_3:   .SET   DLOOP_2   
07E8                DLOOP_2:   .SET   DLOOP_TOP   
07E8                DLOOP_TOP:   .SET   $   
07E8                L_M_1335S92:      
07E8   C5                     PUSH   BC   
07E9   CD 1F 08               CALL   divideWordByByte   ; HL = HL / A, A = remainder
07EC   C1                     POP   BC   
07ED   F5                     PUSH   AF   
07EE   04                     INC   B   
07EF                          ;*Macro unroll:  checkZeroWord H,L
07EF   7D                     LD   A,L   
07F0   B4                     OR   H   
07F1                          ;*Macro unroll:  _until z
07F1   CA E5 07               JP   z,DLOOP_TOP - 3   
07F4                          ;*Macro unroll:  DLOOP_FWD               ; needed?
07F4                CUR_ADR:   .SET   $   ; needed?
07E6                          .ORG   DLOOP_TOP - 2   
07E6   F4 07                  DW   CUR_ADR   
07F4                          .ORG   CUR_ADR   
07F4                          ;*Macro unroll:  _enddo
07F4   C3 E8 07               JP   DLOOP_TOP   
07F7                          ;*Macro unroll:  DLOOP_FWD
07F7                CUR_ADR:   .SET   $   
07E6                          .ORG   DLOOP_TOP - 2   
07E6   F7 07                  DW   CUR_ADR   
07F7                          .ORG   CUR_ADR   
07F7                          ;*Macro unroll:  DLOOP_POP
07F7                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
07F7                DLOOP_TOP:   .SET   DLOOP_2   
07F7                DLOOP_2:   .SET   DLOOP_3   
07F7                DLOOP_3:   .SET   DLOOP_4   
07F7                DLOOP_4:   .SET   DLOOP_5   
07F7                DLOOP_5:   .SET   DLOOP_6   
07F7                DLOOP_6:   .SET   DLOOP_7   
07F7                DLOOP_7:   .SET   DLOOP_8   
07F7                DLOOP_8:   .SET   DLOOP_9   
07F7                DLOOP_9:   .SET   DLOOP_10   
07F7                DLOOP_10:   .SET   DLOOP_11   
07F7                DLOOP_11:   .SET   DLOOP_12   
07F7                DLOOP_12:   .SET   0   
07F7                          ;*Macro unroll:  _do
07F7   18 03                  JR   L_M_1344S101   
07F9   C3 F9 07               JP   $   
07FC                          ;*Macro unroll:  DLOOP_PUSH $
07FC                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
07FC                DLOOP_12:   .SET   DLOOP_11   
07FC                DLOOP_11:   .SET   DLOOP_10   
07FC                DLOOP_10:   .SET   DLOOP_9   
07FC                DLOOP_9:   .SET   DLOOP_8   
07FC                DLOOP_8:   .SET   DLOOP_7   
07FC                DLOOP_7:   .SET   DLOOP_6   
07FC                DLOOP_6:   .SET   DLOOP_5   
07FC                DLOOP_5:   .SET   DLOOP_4   
07FC                DLOOP_4:   .SET   DLOOP_3   
07FC                DLOOP_3:   .SET   DLOOP_2   
07FC                DLOOP_2:   .SET   DLOOP_TOP   
07FC                DLOOP_TOP:   .SET   $   
07FC                L_M_1344S101:      
07FC   F1                     POP   AF   
07FD   C6 30                  ADD   A,$30   ; convert digit to ASCII
07FF   FE 3A                  CP   $3A   
0801                          ;*Macro unroll:  _if nc
0801   D2 07 08               JP   nc,L_M_1348S105   
0804   C3 04 08               JP   $   
0807                          ;*Macro unroll:  STRUC_PUSH $
0807                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0807                STRUC_12:   .SET   STRUC_11   
0807                STRUC_11:   .SET   STRUC_10   
0807                STRUC_10:   .SET   STRUC_9   
0807                STRUC_9:   .SET   STRUC_8   
0807                STRUC_8:   .SET   STRUC_7   
0807                STRUC_7:   .SET   STRUC_6   
0807                STRUC_6:   .SET   STRUC_5   
0807                STRUC_5:   .SET   STRUC_4   
0807                STRUC_4:   .SET   STRUC_3   
0807                STRUC_3:   .SET   STRUC_2   
0807                STRUC_2:   .SET   STRUC_TOP   
0807                STRUC_TOP:   .SET   $   
0807                L_M_1348S105:      
0807   C6 07                  ADD   A,7   
0809                          ;*Macro unroll:  _endif
0809                          ;*Macro unroll:  STRUC_FWD
0809                CUR_ADR:   .SET   $   
0805                          .ORG   STRUC_TOP - 2   
0805   09 08                  DW   CUR_ADR   
0809                          .ORG   CUR_ADR   
0809                          ;*Macro unroll:  STRUC_POP
0809                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0809                STRUC_TOP:   .SET   STRUC_2   
0809                STRUC_2:   .SET   STRUC_3   
0809                STRUC_3:   .SET   STRUC_4   
0809                STRUC_4:   .SET   STRUC_5   
0809                STRUC_5:   .SET   STRUC_6   
0809                STRUC_6:   .SET   STRUC_7   
0809                STRUC_7:   .SET   STRUC_8   
0809                STRUC_8:   .SET   STRUC_9   
0809                STRUC_9:   .SET   STRUC_10   
0809                STRUC_10:   .SET   STRUC_11   
0809                STRUC_11:   .SET   STRUC_12   
0809                STRUC_12:   .SET   0   
0809   12                     LD   (DE),A   
080A   13                     INC   DE   
080B                          ;*Macro unroll:  _djnz
080B   10 EF                  DJNZ   DLOOP_TOP   
080D                          ;*Macro unroll:  DLOOP_FWD
080D                CUR_ADR:   .SET   $   
07FA                          .ORG   DLOOP_TOP - 2   
07FA   0D 08                  DW   CUR_ADR   
080D                          .ORG   CUR_ADR   
080D                          ;*Macro unroll:  DLOOP_POP
080D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
080D                DLOOP_TOP:   .SET   DLOOP_2   
080D                DLOOP_2:   .SET   DLOOP_3   
080D                DLOOP_3:   .SET   DLOOP_4   
080D                DLOOP_4:   .SET   DLOOP_5   
080D                DLOOP_5:   .SET   DLOOP_6   
080D                DLOOP_6:   .SET   DLOOP_7   
080D                DLOOP_7:   .SET   DLOOP_8   
080D                DLOOP_8:   .SET   DLOOP_9   
080D                DLOOP_9:   .SET   DLOOP_10   
080D                DLOOP_10:   .SET   DLOOP_11   
080D                DLOOP_11:   .SET   DLOOP_12   
080D                DLOOP_12:   .SET   0   
080D   21 8C 2E               LD   HL,wordBuf   ;calc length
0810   EB                     EX   DE,HL   
0811   B7                     OR   A   
0812   ED 52                  SBC   HL,DE   
0814                          ;*Macro unroll:  loadWord B,C, H,L
0814   4D                     LD   C,L   
0815   44                     LD   B,H   
0816   C9                     RET      
0817                             ; 
0817                             ; negate ***
0817                             ; params: HL = number
0817                             ; 
0817                NEGATENUM:      
0817                             ; Negate HL (using two's complement)
0817   AF                     XOR   A   
0818   95                     SUB   L   
0819   6F                     LD   L,A   
081A   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
081C   9C                     SBC   A,H   
081D   67                     LD   H,A   
081E   C9                     RET      
081F                             ; 
081F                             ; divide word by byte ***
081F                             ; params: HL = dividend, C = divisor
081F                             ; returns: HL = result, A = remainder
081F                             ; destroys: ?
081F                             ; 
081F                DIVIDEWORDBYBYTE:      
081F   06 10                  LD   B,16   
0821   AF                     XOR   A   
0822                          ;*Macro unroll:  _do
0822   18 03                  JR   L_M_1382S144   
0824   C3 24 08               JP   $   
0827                          ;*Macro unroll:  DLOOP_PUSH $
0827                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0827                DLOOP_12:   .SET   DLOOP_11   
0827                DLOOP_11:   .SET   DLOOP_10   
0827                DLOOP_10:   .SET   DLOOP_9   
0827                DLOOP_9:   .SET   DLOOP_8   
0827                DLOOP_8:   .SET   DLOOP_7   
0827                DLOOP_7:   .SET   DLOOP_6   
0827                DLOOP_6:   .SET   DLOOP_5   
0827                DLOOP_5:   .SET   DLOOP_4   
0827                DLOOP_4:   .SET   DLOOP_3   
0827                DLOOP_3:   .SET   DLOOP_2   
0827                DLOOP_2:   .SET   DLOOP_TOP   
0827                DLOOP_TOP:   .SET   $   
0827                L_M_1382S144:      
0827   29                     ADD   HL,HL   
0828   17                     RLA      
0829                          ;*Macro unroll:  _if c
0829   DA 2F 08               JP   c,L_M_1385S147   
082C   C3 2C 08               JP   $   
082F                          ;*Macro unroll:  STRUC_PUSH $
082F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
082F                STRUC_12:   .SET   STRUC_11   
082F                STRUC_11:   .SET   STRUC_10   
082F                STRUC_10:   .SET   STRUC_9   
082F                STRUC_9:   .SET   STRUC_8   
082F                STRUC_8:   .SET   STRUC_7   
082F                STRUC_7:   .SET   STRUC_6   
082F                STRUC_6:   .SET   STRUC_5   
082F                STRUC_5:   .SET   STRUC_4   
082F                STRUC_4:   .SET   STRUC_3   
082F                STRUC_3:   .SET   STRUC_2   
082F                STRUC_2:   .SET   STRUC_TOP   
082F                STRUC_TOP:   .SET   $   
082F                L_M_1385S147:      
082F   91                     SUB   C   
0830   2C                     INC   L   
0831                          ;*Macro unroll:  _else
0831   C3 31 08               JP   $   
0834                          ;*Macro unroll:  STRUC_FWD
0834                CUR_ADR:   .SET   $   
082D                          .ORG   STRUC_TOP - 2   
082D   34 08                  DW   CUR_ADR   
0834                          .ORG   CUR_ADR   
0834                STRUC_TOP:   .SET   $   
0834   B9                     CP   C   
0835                          ;*Macro unroll:  _if nc
0835   D2 3B 08               JP   nc,L_M_1390S152   
0838   C3 38 08               JP   $   
083B                          ;*Macro unroll:  STRUC_PUSH $
083B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
083B                STRUC_12:   .SET   STRUC_11   
083B                STRUC_11:   .SET   STRUC_10   
083B                STRUC_10:   .SET   STRUC_9   
083B                STRUC_9:   .SET   STRUC_8   
083B                STRUC_8:   .SET   STRUC_7   
083B                STRUC_7:   .SET   STRUC_6   
083B                STRUC_6:   .SET   STRUC_5   
083B                STRUC_5:   .SET   STRUC_4   
083B                STRUC_4:   .SET   STRUC_3   
083B                STRUC_3:   .SET   STRUC_2   
083B                STRUC_2:   .SET   STRUC_TOP   
083B                STRUC_TOP:   .SET   $   
083B                L_M_1390S152:      
083B   91                     SUB   C   
083C   2C                     INC   L   
083D                          ;*Macro unroll:  _endif
083D                          ;*Macro unroll:  STRUC_FWD
083D                CUR_ADR:   .SET   $   
0839                          .ORG   STRUC_TOP - 2   
0839   3D 08                  DW   CUR_ADR   
083D                          .ORG   CUR_ADR   
083D                          ;*Macro unroll:  STRUC_POP
083D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
083D                STRUC_TOP:   .SET   STRUC_2   
083D                STRUC_2:   .SET   STRUC_3   
083D                STRUC_3:   .SET   STRUC_4   
083D                STRUC_4:   .SET   STRUC_5   
083D                STRUC_5:   .SET   STRUC_6   
083D                STRUC_6:   .SET   STRUC_7   
083D                STRUC_7:   .SET   STRUC_8   
083D                STRUC_8:   .SET   STRUC_9   
083D                STRUC_9:   .SET   STRUC_10   
083D                STRUC_10:   .SET   STRUC_11   
083D                STRUC_11:   .SET   STRUC_12   
083D                STRUC_12:   .SET   0   
083D                          ;*Macro unroll:  _endif
083D                          ;*Macro unroll:  STRUC_FWD
083D                CUR_ADR:   .SET   $   
0832                          .ORG   STRUC_TOP - 2   
0832   3D 08                  DW   CUR_ADR   
083D                          .ORG   CUR_ADR   
083D                          ;*Macro unroll:  STRUC_POP
083D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
083D                STRUC_TOP:   .SET   STRUC_2   
083D                STRUC_2:   .SET   STRUC_3   
083D                STRUC_3:   .SET   STRUC_4   
083D                STRUC_4:   .SET   STRUC_5   
083D                STRUC_5:   .SET   STRUC_6   
083D                STRUC_6:   .SET   STRUC_7   
083D                STRUC_7:   .SET   STRUC_8   
083D                STRUC_8:   .SET   STRUC_9   
083D                STRUC_9:   .SET   STRUC_10   
083D                STRUC_10:   .SET   STRUC_11   
083D                STRUC_11:   .SET   STRUC_12   
083D                STRUC_12:   .SET   0   
083D                          ;*Macro unroll:  _djnz
083D   10 E8                  DJNZ   DLOOP_TOP   
083F                          ;*Macro unroll:  DLOOP_FWD
083F                CUR_ADR:   .SET   $   
0825                          .ORG   DLOOP_TOP - 2   
0825   3F 08                  DW   CUR_ADR   
083F                          .ORG   CUR_ADR   
083F                          ;*Macro unroll:  DLOOP_POP
083F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
083F                DLOOP_TOP:   .SET   DLOOP_2   
083F                DLOOP_2:   .SET   DLOOP_3   
083F                DLOOP_3:   .SET   DLOOP_4   
083F                DLOOP_4:   .SET   DLOOP_5   
083F                DLOOP_5:   .SET   DLOOP_6   
083F                DLOOP_6:   .SET   DLOOP_7   
083F                DLOOP_7:   .SET   DLOOP_8   
083F                DLOOP_8:   .SET   DLOOP_9   
083F                DLOOP_9:   .SET   DLOOP_10   
083F                DLOOP_10:   .SET   DLOOP_11   
083F                DLOOP_11:   .SET   DLOOP_12   
083F                DLOOP_12:   .SET   0   
083F   C9                     RET      
0840                             ; 
0840                             ; Divide word by word ***
0840                             ; params: BC = dividend, DE = divisor
0840                             ; returns: BC = result, HL = remainder
0840                             ; destroys: ?
0840                             ; 
0840                DIVIDEWORDBYWORD:      
0840   D5                     PUSH   DE   
0841   21 00 00               LD   HL,0   
0844   78                     LD   A,B   
0845   06 08                  LD   B,8   
0847                          ;*Macro unroll:  _do
0847   18 03                  JR   L_M_1408S172   
0849   C3 49 08               JP   $   
084C                          ;*Macro unroll:  DLOOP_PUSH $
084C                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
084C                DLOOP_12:   .SET   DLOOP_11   
084C                DLOOP_11:   .SET   DLOOP_10   
084C                DLOOP_10:   .SET   DLOOP_9   
084C                DLOOP_9:   .SET   DLOOP_8   
084C                DLOOP_8:   .SET   DLOOP_7   
084C                DLOOP_7:   .SET   DLOOP_6   
084C                DLOOP_6:   .SET   DLOOP_5   
084C                DLOOP_5:   .SET   DLOOP_4   
084C                DLOOP_4:   .SET   DLOOP_3   
084C                DLOOP_3:   .SET   DLOOP_2   
084C                DLOOP_2:   .SET   DLOOP_TOP   
084C                DLOOP_TOP:   .SET   $   
084C                L_M_1408S172:      
084C   17                     RLA      
084D   ED 6A                  ADC   HL,HL   
084F   ED 52                  SBC   HL,DE   
0851                          ;*Macro unroll:  _if c
0851   DA 57 08               JP   c,L_M_1412S176   
0854   C3 54 08               JP   $   
0857                          ;*Macro unroll:  STRUC_PUSH $
0857                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0857                STRUC_12:   .SET   STRUC_11   
0857                STRUC_11:   .SET   STRUC_10   
0857                STRUC_10:   .SET   STRUC_9   
0857                STRUC_9:   .SET   STRUC_8   
0857                STRUC_8:   .SET   STRUC_7   
0857                STRUC_7:   .SET   STRUC_6   
0857                STRUC_6:   .SET   STRUC_5   
0857                STRUC_5:   .SET   STRUC_4   
0857                STRUC_4:   .SET   STRUC_3   
0857                STRUC_3:   .SET   STRUC_2   
0857                STRUC_2:   .SET   STRUC_TOP   
0857                STRUC_TOP:   .SET   $   
0857                L_M_1412S176:      
0857   19                     ADD   HL,DE   
0858                          ;*Macro unroll:  _endif
0858                          ;*Macro unroll:  STRUC_FWD
0858                CUR_ADR:   .SET   $   
0855                          .ORG   STRUC_TOP - 2   
0855   58 08                  DW   CUR_ADR   
0858                          .ORG   CUR_ADR   
0858                          ;*Macro unroll:  STRUC_POP
0858                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0858                STRUC_TOP:   .SET   STRUC_2   
0858                STRUC_2:   .SET   STRUC_3   
0858                STRUC_3:   .SET   STRUC_4   
0858                STRUC_4:   .SET   STRUC_5   
0858                STRUC_5:   .SET   STRUC_6   
0858                STRUC_6:   .SET   STRUC_7   
0858                STRUC_7:   .SET   STRUC_8   
0858                STRUC_8:   .SET   STRUC_9   
0858                STRUC_9:   .SET   STRUC_10   
0858                STRUC_10:   .SET   STRUC_11   
0858                STRUC_11:   .SET   STRUC_12   
0858                STRUC_12:   .SET   0   
0858                          ;*Macro unroll:  _djnz
0858   10 F2                  DJNZ   DLOOP_TOP   
085A                          ;*Macro unroll:  DLOOP_FWD
085A                CUR_ADR:   .SET   $   
084A                          .ORG   DLOOP_TOP - 2   
084A   5A 08                  DW   CUR_ADR   
085A                          .ORG   CUR_ADR   
085A                          ;*Macro unroll:  DLOOP_POP
085A                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
085A                DLOOP_TOP:   .SET   DLOOP_2   
085A                DLOOP_2:   .SET   DLOOP_3   
085A                DLOOP_3:   .SET   DLOOP_4   
085A                DLOOP_4:   .SET   DLOOP_5   
085A                DLOOP_5:   .SET   DLOOP_6   
085A                DLOOP_6:   .SET   DLOOP_7   
085A                DLOOP_7:   .SET   DLOOP_8   
085A                DLOOP_8:   .SET   DLOOP_9   
085A                DLOOP_9:   .SET   DLOOP_10   
085A                DLOOP_10:   .SET   DLOOP_11   
085A                DLOOP_11:   .SET   DLOOP_12   
085A                DLOOP_12:   .SET   0   
085A   17                     RLA      
085B   2F                     CPL      
085C   47                     LD   B,A   
085D   79                     LD   A,C   
085E   48                     LD   C,B   
085F   06 08                  LD   B,8   
0861                          ;*Macro unroll:  _do
0861   18 03                  JR   L_M_1422S186   
0863   C3 63 08               JP   $   
0866                          ;*Macro unroll:  DLOOP_PUSH $
0866                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0866                DLOOP_12:   .SET   DLOOP_11   
0866                DLOOP_11:   .SET   DLOOP_10   
0866                DLOOP_10:   .SET   DLOOP_9   
0866                DLOOP_9:   .SET   DLOOP_8   
0866                DLOOP_8:   .SET   DLOOP_7   
0866                DLOOP_7:   .SET   DLOOP_6   
0866                DLOOP_6:   .SET   DLOOP_5   
0866                DLOOP_5:   .SET   DLOOP_4   
0866                DLOOP_4:   .SET   DLOOP_3   
0866                DLOOP_3:   .SET   DLOOP_2   
0866                DLOOP_2:   .SET   DLOOP_TOP   
0866                DLOOP_TOP:   .SET   $   
0866                L_M_1422S186:      
0866   17                     RLA      
0867   ED 6A                  ADC   HL,HL   
0869   ED 52                  SBC   HL,DE   
086B                          ;*Macro unroll:  _if c
086B   DA 71 08               JP   c,L_M_1426S190   
086E   C3 6E 08               JP   $   
0871                          ;*Macro unroll:  STRUC_PUSH $
0871                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0871                STRUC_12:   .SET   STRUC_11   
0871                STRUC_11:   .SET   STRUC_10   
0871                STRUC_10:   .SET   STRUC_9   
0871                STRUC_9:   .SET   STRUC_8   
0871                STRUC_8:   .SET   STRUC_7   
0871                STRUC_7:   .SET   STRUC_6   
0871                STRUC_6:   .SET   STRUC_5   
0871                STRUC_5:   .SET   STRUC_4   
0871                STRUC_4:   .SET   STRUC_3   
0871                STRUC_3:   .SET   STRUC_2   
0871                STRUC_2:   .SET   STRUC_TOP   
0871                STRUC_TOP:   .SET   $   
0871                L_M_1426S190:      
0871   19                     ADD   HL,DE   
0872                          ;*Macro unroll:  _endif
0872                          ;*Macro unroll:  STRUC_FWD
0872                CUR_ADR:   .SET   $   
086F                          .ORG   STRUC_TOP - 2   
086F   72 08                  DW   CUR_ADR   
0872                          .ORG   CUR_ADR   
0872                          ;*Macro unroll:  STRUC_POP
0872                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0872                STRUC_TOP:   .SET   STRUC_2   
0872                STRUC_2:   .SET   STRUC_3   
0872                STRUC_3:   .SET   STRUC_4   
0872                STRUC_4:   .SET   STRUC_5   
0872                STRUC_5:   .SET   STRUC_6   
0872                STRUC_6:   .SET   STRUC_7   
0872                STRUC_7:   .SET   STRUC_8   
0872                STRUC_8:   .SET   STRUC_9   
0872                STRUC_9:   .SET   STRUC_10   
0872                STRUC_10:   .SET   STRUC_11   
0872                STRUC_11:   .SET   STRUC_12   
0872                STRUC_12:   .SET   0   
0872                          ;*Macro unroll:  _djnz
0872   10 F2                  DJNZ   DLOOP_TOP   
0874                          ;*Macro unroll:  DLOOP_FWD
0874                CUR_ADR:   .SET   $   
0864                          .ORG   DLOOP_TOP - 2   
0864   74 08                  DW   CUR_ADR   
0874                          .ORG   CUR_ADR   
0874                          ;*Macro unroll:  DLOOP_POP
0874                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0874                DLOOP_TOP:   .SET   DLOOP_2   
0874                DLOOP_2:   .SET   DLOOP_3   
0874                DLOOP_3:   .SET   DLOOP_4   
0874                DLOOP_4:   .SET   DLOOP_5   
0874                DLOOP_5:   .SET   DLOOP_6   
0874                DLOOP_6:   .SET   DLOOP_7   
0874                DLOOP_7:   .SET   DLOOP_8   
0874                DLOOP_8:   .SET   DLOOP_9   
0874                DLOOP_9:   .SET   DLOOP_10   
0874                DLOOP_10:   .SET   DLOOP_11   
0874                DLOOP_11:   .SET   DLOOP_12   
0874                DLOOP_12:   .SET   0   
0874   17                     RLA      
0875   2F                     CPL      
0876   41                     LD   B,C   
0877   4F                     LD   C,A   
0878   D1                     POP   DE   
0879   C9                     RET      
087A                             ; 
087A                             ; toNumber -  converts string to number in the ***
087A                             ; base strored in VAR_BASE
087A                             ; 
087A                             ; params: HL = string address, BC = string length
087A                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
087A                             ; destroys: AF
087A                             ; 
087A                TONUMBER:      
087A   FD E5                  PUSH   IY   ; save regs
087C   E5                     PUSH   HL   
087D   E5                     PUSH   HL   ; IY = HL
087E   FD E1                  POP   IY   
0880   11 00 00               LD   DE,0   ; 16 bit accum
0883   21 00 00               LD   HL,0   ; 8 bit char
0886                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
0886   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
0887   B0                     OR   B   
0888                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
0888   CA 8E 08               JP   z,L_M_1452S220   ; trying to parse a zero-length string is an error, But will return 0.
088B   C3 8B 08               JP   $   
088E                          ;*Macro unroll:  STRUC_PUSH $
088E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
088E                STRUC_12:   .SET   STRUC_11   
088E                STRUC_11:   .SET   STRUC_10   
088E                STRUC_10:   .SET   STRUC_9   
088E                STRUC_9:   .SET   STRUC_8   
088E                STRUC_8:   .SET   STRUC_7   
088E                STRUC_7:   .SET   STRUC_6   
088E                STRUC_6:   .SET   STRUC_5   
088E                STRUC_5:   .SET   STRUC_4   
088E                STRUC_4:   .SET   STRUC_3   
088E                STRUC_3:   .SET   STRUC_2   
088E                STRUC_2:   .SET   STRUC_TOP   
088E                STRUC_TOP:   .SET   $   
088E                L_M_1452S220:      
088E   E1                     POP   HL   
088F   FD E1                  POP   IY   
0891   C9                     RET      ; de = number, BC = err
0892                          ;*Macro unroll:  _endif
0892                          ;*Macro unroll:  STRUC_FWD
0892                CUR_ADR:   .SET   $   
088C                          .ORG   STRUC_TOP - 2   
088C   92 08                  DW   CUR_ADR   
0892                          .ORG   CUR_ADR   
0892                          ;*Macro unroll:  STRUC_POP
0892                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0892                STRUC_TOP:   .SET   STRUC_2   
0892                STRUC_2:   .SET   STRUC_3   
0892                STRUC_3:   .SET   STRUC_4   
0892                STRUC_4:   .SET   STRUC_5   
0892                STRUC_5:   .SET   STRUC_6   
0892                STRUC_6:   .SET   STRUC_7   
0892                STRUC_7:   .SET   STRUC_8   
0892                STRUC_8:   .SET   STRUC_9   
0892                STRUC_9:   .SET   STRUC_10   
0892                STRUC_10:   .SET   STRUC_11   
0892                STRUC_11:   .SET   STRUC_12   
0892                STRUC_12:   .SET   0   
0892                             ; Check if first character is "-".
0892   FD 7E 00               LD   A,(IY)   ; l = first character in string
0895   FD 23                  INC   IY   
0897   D5                     PUSH   DE   ; push 0 on stack
0898   FE 2D                  CP   "-"   ; negative number?
089A                          ;*Macro unroll:  _if z
089A   CA A0 08               JP   z,L_M_1462S230   
089D   C3 9D 08               JP   $   
08A0                          ;*Macro unroll:  STRUC_PUSH $
08A0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
08A0                STRUC_12:   .SET   STRUC_11   
08A0                STRUC_11:   .SET   STRUC_10   
08A0                STRUC_10:   .SET   STRUC_9   
08A0                STRUC_9:   .SET   STRUC_8   
08A0                STRUC_8:   .SET   STRUC_7   
08A0                STRUC_7:   .SET   STRUC_6   
08A0                STRUC_6:   .SET   STRUC_5   
08A0                STRUC_5:   .SET   STRUC_4   
08A0                STRUC_4:   .SET   STRUC_3   
08A0                STRUC_3:   .SET   STRUC_2   
08A0                STRUC_2:   .SET   STRUC_TOP   
08A0                STRUC_TOP:   .SET   $   
08A0                L_M_1462S230:      
08A0   D1                     POP   DE   
08A1   21 01 00               LD   HL,1   
08A4   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
08A5   0B                     DEC   BC   
08A6                          ;*Macro unroll:  checkZeroWord B,C
08A6   79                     LD   A,C   
08A7   B0                     OR   B   
08A8                          ;*Macro unroll:  _if z
08A8   CA AE 08               JP   z,L_M_1468S236   
08AB   C3 AB 08               JP   $   
08AE                          ;*Macro unroll:  STRUC_PUSH $
08AE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
08AE                STRUC_12:   .SET   STRUC_11   
08AE                STRUC_11:   .SET   STRUC_10   
08AE                STRUC_10:   .SET   STRUC_9   
08AE                STRUC_9:   .SET   STRUC_8   
08AE                STRUC_8:   .SET   STRUC_7   
08AE                STRUC_7:   .SET   STRUC_6   
08AE                STRUC_6:   .SET   STRUC_5   
08AE                STRUC_5:   .SET   STRUC_4   
08AE                STRUC_4:   .SET   STRUC_3   
08AE                STRUC_3:   .SET   STRUC_2   
08AE                STRUC_2:   .SET   STRUC_TOP   
08AE                STRUC_TOP:   .SET   $   
08AE                L_M_1468S236:      
08AE   E1                     POP   HL   ; error: string is only "-".
08AF   01 01 00               LD   BC,1   
08B2   E1                     POP   HL   
08B3   FD E1                  POP   IY   
08B5   C9                     RET      ; de = number, BC = err
08B6                          ;*Macro unroll:  _endif
08B6                          ;*Macro unroll:  STRUC_FWD
08B6                CUR_ADR:   .SET   $   
08AC                          .ORG   STRUC_TOP - 2   
08AC   B6 08                  DW   CUR_ADR   
08B6                          .ORG   CUR_ADR   
08B6                          ;*Macro unroll:  STRUC_POP
08B6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
08B6                STRUC_TOP:   .SET   STRUC_2   
08B6                STRUC_2:   .SET   STRUC_3   
08B6                STRUC_3:   .SET   STRUC_4   
08B6                STRUC_4:   .SET   STRUC_5   
08B6                STRUC_5:   .SET   STRUC_6   
08B6                STRUC_6:   .SET   STRUC_7   
08B6                STRUC_7:   .SET   STRUC_8   
08B6                STRUC_8:   .SET   STRUC_9   
08B6                STRUC_9:   .SET   STRUC_10   
08B6                STRUC_10:   .SET   STRUC_11   
08B6                STRUC_11:   .SET   STRUC_12   
08B6                STRUC_12:   .SET   0   
08B6                             ; Loop reading digits.
08B6   C5                     PUSH   BC   
08B7   ED 4B 1A 30            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
08BB   CD 12 09               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
08BE   C1                     POP   BC   
08BF   FD 7E 00               LD   A,(IY)   ; a = next character in string
08C2   FD 23                  INC   IY   
08C4                          ;*Macro unroll:  _endif
08C4                          ;*Macro unroll:  STRUC_FWD
08C4                CUR_ADR:   .SET   $   
089E                          .ORG   STRUC_TOP - 2   
089E   C4 08                  DW   CUR_ADR   
08C4                          .ORG   CUR_ADR   
08C4                          ;*Macro unroll:  STRUC_POP
08C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
08C4                STRUC_TOP:   .SET   STRUC_2   
08C4                STRUC_2:   .SET   STRUC_3   
08C4                STRUC_3:   .SET   STRUC_4   
08C4                STRUC_4:   .SET   STRUC_5   
08C4                STRUC_5:   .SET   STRUC_6   
08C4                STRUC_6:   .SET   STRUC_7   
08C4                STRUC_7:   .SET   STRUC_8   
08C4                STRUC_8:   .SET   STRUC_9   
08C4                STRUC_9:   .SET   STRUC_10   
08C4                STRUC_10:   .SET   STRUC_11   
08C4                STRUC_11:   .SET   STRUC_12   
08C4                STRUC_12:   .SET   0   
08C4                             ; Convert 0-9, A-z to a number 0-35.
08C4                          ;*Macro unroll:  _do
08C4   18 03                  JR   L_M_1484S253   
08C6   C3 C6 08               JP   $   
08C9                          ;*Macro unroll:  DLOOP_PUSH $
08C9                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
08C9                DLOOP_12:   .SET   DLOOP_11   
08C9                DLOOP_11:   .SET   DLOOP_10   
08C9                DLOOP_10:   .SET   DLOOP_9   
08C9                DLOOP_9:   .SET   DLOOP_8   
08C9                DLOOP_8:   .SET   DLOOP_7   
08C9                DLOOP_7:   .SET   DLOOP_6   
08C9                DLOOP_6:   .SET   DLOOP_5   
08C9                DLOOP_5:   .SET   DLOOP_4   
08C9                DLOOP_4:   .SET   DLOOP_3   
08C9                DLOOP_3:   .SET   DLOOP_2   
08C9                DLOOP_2:   .SET   DLOOP_TOP   
08C9                DLOOP_TOP:   .SET   $   
08C9                L_M_1484S253:      
08C9   D6 30                  SUB   "0"   ; < "0"?
08CB   38 33                  JR   c,toNumberExit   ; invalid char, end of number
08CD   FE 0A                  CP   10   ; <= "9"?
08CF                          ;*Macro unroll:  _if nc
08CF   D2 D5 08               JP   nc,L_M_1488S257   
08D2   C3 D2 08               JP   $   
08D5                          ;*Macro unroll:  STRUC_PUSH $
08D5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
08D5                STRUC_12:   .SET   STRUC_11   
08D5                STRUC_11:   .SET   STRUC_10   
08D5                STRUC_10:   .SET   STRUC_9   
08D5                STRUC_9:   .SET   STRUC_8   
08D5                STRUC_8:   .SET   STRUC_7   
08D5                STRUC_7:   .SET   STRUC_6   
08D5                STRUC_6:   .SET   STRUC_5   
08D5                STRUC_5:   .SET   STRUC_4   
08D5                STRUC_4:   .SET   STRUC_3   
08D5                STRUC_3:   .SET   STRUC_2   
08D5                STRUC_2:   .SET   STRUC_TOP   
08D5                STRUC_TOP:   .SET   $   
08D5                L_M_1488S257:      
08D5   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
08D7                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
08D7   DA C6 08               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
08DA                          ;*Macro unroll:  DLOOP_FWD               ; needed?
08DA                CUR_ADR:   .SET   $   ; needed?
08C7                          .ORG   DLOOP_TOP - 2   
08C7   DA 08                  DW   CUR_ADR   
08DA                          .ORG   CUR_ADR   
08DA   C6 0A                  ADD   a,10   
08DC                          ;*Macro unroll:  _endif
08DC                          ;*Macro unroll:  STRUC_FWD
08DC                CUR_ADR:   .SET   $   
08D3                          .ORG   STRUC_TOP - 2   
08D3   DC 08                  DW   CUR_ADR   
08DC                          .ORG   CUR_ADR   
08DC                          ;*Macro unroll:  STRUC_POP
08DC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
08DC                STRUC_TOP:   .SET   STRUC_2   
08DC                STRUC_2:   .SET   STRUC_3   
08DC                STRUC_3:   .SET   STRUC_4   
08DC                STRUC_4:   .SET   STRUC_5   
08DC                STRUC_5:   .SET   STRUC_6   
08DC                STRUC_6:   .SET   STRUC_7   
08DC                STRUC_7:   .SET   STRUC_8   
08DC                STRUC_8:   .SET   STRUC_9   
08DC                STRUC_9:   .SET   STRUC_10   
08DC                STRUC_10:   .SET   STRUC_11   
08DC                STRUC_11:   .SET   STRUC_12   
08DC                STRUC_12:   .SET   0   
08DC   2A 1A 30               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
08DF   BD                     CP   L   ; >= BASE? then invalid char, end of number
08E0                          ;*Macro unroll:  _until nc
08E0   D2 C6 08               JP   nc,DLOOP_TOP - 3   
08E3                          ;*Macro unroll:  DLOOP_FWD               ; needed?
08E3                CUR_ADR:   .SET   $   ; needed?
08C7                          .ORG   DLOOP_TOP - 2   
08C7   E3 08                  DW   CUR_ADR   
08E3                          .ORG   CUR_ADR   
08E3   83                     ADD   A,E   
08E4   5F                     LD   E,A   
08E5   3E 00                  LD   A,0   
08E7   8A                     ADC   a,d   
08E8   57                     LD   D,A   
08E9   0B                     DEC   BC   ; dec char count
08EA                          ;*Macro unroll:  checkZeroWord B,C
08EA   79                     LD   A,C   
08EB   B0                     OR   B   
08EC                          ;*Macro unroll:  _until z
08EC   CA C6 08               JP   z,DLOOP_TOP - 3   
08EF                          ;*Macro unroll:  DLOOP_FWD               ; needed?
08EF                CUR_ADR:   .SET   $   ; needed?
08C7                          .ORG   DLOOP_TOP - 2   
08C7   EF 08                  DW   CUR_ADR   
08EF                          .ORG   CUR_ADR   
08EF   C5                     PUSH   BC   
08F0   ED 4B 1A 30            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
08F4   CD 12 09               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
08F7   C1                     POP   BC   
08F8   FD 7E 00               LD   A,(IY)   ; a = next character in string
08FB   FD 23                  INC   IY   
08FD                          ;*Macro unroll:  _enddo
08FD   C3 C9 08               JP   DLOOP_TOP   
0900                          ;*Macro unroll:  DLOOP_FWD
0900                CUR_ADR:   .SET   $   
08C7                          .ORG   DLOOP_TOP - 2   
08C7   00 09                  DW   CUR_ADR   
0900                          .ORG   CUR_ADR   
0900                          ;*Macro unroll:  DLOOP_POP
0900                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0900                DLOOP_TOP:   .SET   DLOOP_2   
0900                DLOOP_2:   .SET   DLOOP_3   
0900                DLOOP_3:   .SET   DLOOP_4   
0900                DLOOP_4:   .SET   DLOOP_5   
0900                DLOOP_5:   .SET   DLOOP_6   
0900                DLOOP_6:   .SET   DLOOP_7   
0900                DLOOP_7:   .SET   DLOOP_8   
0900                DLOOP_8:   .SET   DLOOP_9   
0900                DLOOP_9:   .SET   DLOOP_10   
0900                DLOOP_10:   .SET   DLOOP_11   
0900                DLOOP_11:   .SET   DLOOP_12   
0900                DLOOP_12:   .SET   0   
0900                TONUMBEREXIT:      
0900   E1                     POP   HL   
0901                          ;*Macro unroll:  checkZeroWord H,L
0901   7D                     LD   A,L   
0902   B4                     OR   H   
0903                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0903   C2 09 09               JP   nz,L_M_1514S287   ; if not -ve then skip
0906   C3 06 09               JP   $   
0909                          ;*Macro unroll:  STRUC_PUSH $
0909                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0909                STRUC_12:   .SET   STRUC_11   
0909                STRUC_11:   .SET   STRUC_10   
0909                STRUC_10:   .SET   STRUC_9   
0909                STRUC_9:   .SET   STRUC_8   
0909                STRUC_8:   .SET   STRUC_7   
0909                STRUC_7:   .SET   STRUC_6   
0909                STRUC_6:   .SET   STRUC_5   
0909                STRUC_5:   .SET   STRUC_4   
0909                STRUC_4:   .SET   STRUC_3   
0909                STRUC_3:   .SET   STRUC_2   
0909                STRUC_2:   .SET   STRUC_TOP   
0909                STRUC_TOP:   .SET   $   
0909                L_M_1514S287:      
0909   EB                     EX   DE,HL   ; negate de
090A   CD 17 08               CALL   negateNum   
090D   EB                     EX   DE,HL   
090E                          ;*Macro unroll:  _endif
090E                          ;*Macro unroll:  STRUC_FWD
090E                CUR_ADR:   .SET   $   
0907                          .ORG   STRUC_TOP - 2   
0907   0E 09                  DW   CUR_ADR   
090E                          .ORG   CUR_ADR   
090E                          ;*Macro unroll:  STRUC_POP
090E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
090E                STRUC_TOP:   .SET   STRUC_2   
090E                STRUC_2:   .SET   STRUC_3   
090E                STRUC_3:   .SET   STRUC_4   
090E                STRUC_4:   .SET   STRUC_5   
090E                STRUC_5:   .SET   STRUC_6   
090E                STRUC_6:   .SET   STRUC_7   
090E                STRUC_7:   .SET   STRUC_8   
090E                STRUC_8:   .SET   STRUC_9   
090E                STRUC_9:   .SET   STRUC_10   
090E                STRUC_10:   .SET   STRUC_11   
090E                STRUC_11:   .SET   STRUC_12   
090E                STRUC_12:   .SET   0   
090E   E1                     POP   HL   
090F   FD E1                  POP   IY   
0911   C9                     RET      ; de = number, BC = err
0912                             ; 
0912                             ; unsignedMultiply -  unsigned multiply ***
0912                             ; 
0912                             ; params:  u1 in BC, u2 in DE
0912                             ; returns: result in HLDE
0912                             ; destroys: AF
0912                             ; 
0912                UNSIGNEDMULTIPLY:      
0912   21 00 00               LD   HL,0   
0915   3E 11                  LD   A,17   ; loop counter
0917   B7                     OR   A   ; clear carry
0918                          ;*Macro unroll:  _do
0918   18 03                  JR   L_M_1533S308   
091A   C3 1A 09               JP   $   
091D                          ;*Macro unroll:  DLOOP_PUSH $
091D                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
091D                DLOOP_12:   .SET   DLOOP_11   
091D                DLOOP_11:   .SET   DLOOP_10   
091D                DLOOP_10:   .SET   DLOOP_9   
091D                DLOOP_9:   .SET   DLOOP_8   
091D                DLOOP_8:   .SET   DLOOP_7   
091D                DLOOP_7:   .SET   DLOOP_6   
091D                DLOOP_6:   .SET   DLOOP_5   
091D                DLOOP_5:   .SET   DLOOP_4   
091D                DLOOP_4:   .SET   DLOOP_3   
091D                DLOOP_3:   .SET   DLOOP_2   
091D                DLOOP_2:   .SET   DLOOP_TOP   
091D                DLOOP_TOP:   .SET   $   
091D                L_M_1533S308:      
091D   CB 1C                  RR   H   
091F   CB 1D                  RR   L   
0921   CB 1A                  RR   D   
0923   CB 1B                  RR   E   
0925                          ;*Macro unroll:  _if c
0925   DA 2B 09               JP   c,L_M_1538S313   
0928   C3 28 09               JP   $   
092B                          ;*Macro unroll:  STRUC_PUSH $
092B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
092B                STRUC_12:   .SET   STRUC_11   
092B                STRUC_11:   .SET   STRUC_10   
092B                STRUC_10:   .SET   STRUC_9   
092B                STRUC_9:   .SET   STRUC_8   
092B                STRUC_8:   .SET   STRUC_7   
092B                STRUC_7:   .SET   STRUC_6   
092B                STRUC_6:   .SET   STRUC_5   
092B                STRUC_5:   .SET   STRUC_4   
092B                STRUC_4:   .SET   STRUC_3   
092B                STRUC_3:   .SET   STRUC_2   
092B                STRUC_2:   .SET   STRUC_TOP   
092B                STRUC_TOP:   .SET   $   
092B                L_M_1538S313:      
092B   09                     ADD   HL,BC   
092C                          ;*Macro unroll:  _endif
092C                          ;*Macro unroll:  STRUC_FWD
092C                CUR_ADR:   .SET   $   
0929                          .ORG   STRUC_TOP - 2   
0929   2C 09                  DW   CUR_ADR   
092C                          .ORG   CUR_ADR   
092C                          ;*Macro unroll:  STRUC_POP
092C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
092C                STRUC_TOP:   .SET   STRUC_2   
092C                STRUC_2:   .SET   STRUC_3   
092C                STRUC_3:   .SET   STRUC_4   
092C                STRUC_4:   .SET   STRUC_5   
092C                STRUC_5:   .SET   STRUC_6   
092C                STRUC_6:   .SET   STRUC_7   
092C                STRUC_7:   .SET   STRUC_8   
092C                STRUC_8:   .SET   STRUC_9   
092C                STRUC_9:   .SET   STRUC_10   
092C                STRUC_10:   .SET   STRUC_11   
092C                STRUC_11:   .SET   STRUC_12   
092C                STRUC_12:   .SET   0   
092C   3D                     DEC   A   
092D                          ;*Macro unroll:  _until z
092D   CA 1A 09               JP   z,DLOOP_TOP - 3   
0930                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0930                CUR_ADR:   .SET   $   ; needed?
091B                          .ORG   DLOOP_TOP - 2   
091B   30 09                  DW   CUR_ADR   
0930                          .ORG   CUR_ADR   
0930                          ;*Macro unroll:  _enddo
0930   C3 1D 09               JP   DLOOP_TOP   
0933                          ;*Macro unroll:  DLOOP_FWD
0933                CUR_ADR:   .SET   $   
091B                          .ORG   DLOOP_TOP - 2   
091B   33 09                  DW   CUR_ADR   
0933                          .ORG   CUR_ADR   
0933                          ;*Macro unroll:  DLOOP_POP
0933                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0933                DLOOP_TOP:   .SET   DLOOP_2   
0933                DLOOP_2:   .SET   DLOOP_3   
0933                DLOOP_3:   .SET   DLOOP_4   
0933                DLOOP_4:   .SET   DLOOP_5   
0933                DLOOP_5:   .SET   DLOOP_6   
0933                DLOOP_6:   .SET   DLOOP_7   
0933                DLOOP_7:   .SET   DLOOP_8   
0933                DLOOP_8:   .SET   DLOOP_9   
0933                DLOOP_9:   .SET   DLOOP_10   
0933                DLOOP_10:   .SET   DLOOP_11   
0933                DLOOP_11:   .SET   DLOOP_12   
0933                DLOOP_12:   .SET   0   
0933   C9                     RET      
0934                             ; 
0934                             ; compareStr - string equal
0934                             ; params: de = string1, HL = string2, BC = length
0934                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
0934                             ; destroys: de, HL, BC
0934                             ; 
0934                COMPARESTR:      
0934                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
0934   79                     LD   A,C   ; test for Count=0
0935   B0                     OR   B   
0936                          ;*Macro unroll:  _if nz          ; length zero = match
0936   C2 3C 09               JP   nz,L_M_1553S331   ; length zero = match
0939   C3 39 09               JP   $   
093C                          ;*Macro unroll:  STRUC_PUSH $
093C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
093C                STRUC_12:   .SET   STRUC_11   
093C                STRUC_11:   .SET   STRUC_10   
093C                STRUC_10:   .SET   STRUC_9   
093C                STRUC_9:   .SET   STRUC_8   
093C                STRUC_8:   .SET   STRUC_7   
093C                STRUC_7:   .SET   STRUC_6   
093C                STRUC_6:   .SET   STRUC_5   
093C                STRUC_5:   .SET   STRUC_4   
093C                STRUC_4:   .SET   STRUC_3   
093C                STRUC_3:   .SET   STRUC_2   
093C                STRUC_2:   .SET   STRUC_TOP   
093C                STRUC_TOP:   .SET   $   
093C                L_M_1553S331:      
093C                          ;*Macro unroll:  _do
093C   18 03                  JR   L_M_1554S332   
093E   C3 3E 09               JP   $   
0941                          ;*Macro unroll:  DLOOP_PUSH $
0941                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0941                DLOOP_12:   .SET   DLOOP_11   
0941                DLOOP_11:   .SET   DLOOP_10   
0941                DLOOP_10:   .SET   DLOOP_9   
0941                DLOOP_9:   .SET   DLOOP_8   
0941                DLOOP_8:   .SET   DLOOP_7   
0941                DLOOP_7:   .SET   DLOOP_6   
0941                DLOOP_6:   .SET   DLOOP_5   
0941                DLOOP_5:   .SET   DLOOP_4   
0941                DLOOP_4:   .SET   DLOOP_3   
0941                DLOOP_3:   .SET   DLOOP_2   
0941                DLOOP_2:   .SET   DLOOP_TOP   
0941                DLOOP_TOP:   .SET   $   
0941                L_M_1554S332:      
0941   1A                     LD   A,(DE)   
0942   13                     INC   DE   
0943   ED A1                  CPI      
0945                          ;*Macro unroll:  _if nz          ; char mismatch: exit
0945   C2 4B 09               JP   nz,L_M_1558S336   ; char mismatch: exit
0948   C3 48 09               JP   $   
094B                          ;*Macro unroll:  STRUC_PUSH $
094B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
094B                STRUC_12:   .SET   STRUC_11   
094B                STRUC_11:   .SET   STRUC_10   
094B                STRUC_10:   .SET   STRUC_9   
094B                STRUC_9:   .SET   STRUC_8   
094B                STRUC_8:   .SET   STRUC_7   
094B                STRUC_7:   .SET   STRUC_6   
094B                STRUC_6:   .SET   STRUC_5   
094B                STRUC_5:   .SET   STRUC_4   
094B                STRUC_4:   .SET   STRUC_3   
094B                STRUC_3:   .SET   STRUC_2   
094B                STRUC_2:   .SET   STRUC_TOP   
094B                STRUC_TOP:   .SET   $   
094B                L_M_1558S336:      
094B   2B                     DEC   HL   ; point at mismatch char
094C   BE                     CP   (HL)   ; set carry if char1 < char2
094D   9F                     SBC   A,A   
094E   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
0950   C9                     RET      
0951                          ;*Macro unroll:  _endif
0951                          ;*Macro unroll:  STRUC_FWD
0951                CUR_ADR:   .SET   $   
0949                          .ORG   STRUC_TOP - 2   
0949   51 09                  DW   CUR_ADR   
0951                          .ORG   CUR_ADR   
0951                          ;*Macro unroll:  STRUC_POP
0951                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0951                STRUC_TOP:   .SET   STRUC_2   
0951                STRUC_2:   .SET   STRUC_3   
0951                STRUC_3:   .SET   STRUC_4   
0951                STRUC_4:   .SET   STRUC_5   
0951                STRUC_5:   .SET   STRUC_6   
0951                STRUC_6:   .SET   STRUC_7   
0951                STRUC_7:   .SET   STRUC_8   
0951                STRUC_8:   .SET   STRUC_9   
0951                STRUC_9:   .SET   STRUC_10   
0951                STRUC_10:   .SET   STRUC_11   
0951                STRUC_11:   .SET   STRUC_12   
0951                STRUC_12:   .SET   0   
0951                          ;*Macro unroll:  _until po
0951   E2 3E 09               JP   po,DLOOP_TOP - 3   
0954                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0954                CUR_ADR:   .SET   $   ; needed?
093F                          .ORG   DLOOP_TOP - 2   
093F   54 09                  DW   CUR_ADR   
0954                          .ORG   CUR_ADR   
0954                          ;*Macro unroll:  _enddo
0954   C3 41 09               JP   DLOOP_TOP   
0957                          ;*Macro unroll:  DLOOP_FWD
0957                CUR_ADR:   .SET   $   
093F                          .ORG   DLOOP_TOP - 2   
093F   57 09                  DW   CUR_ADR   
0957                          .ORG   CUR_ADR   
0957                          ;*Macro unroll:  DLOOP_POP
0957                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0957                DLOOP_TOP:   .SET   DLOOP_2   
0957                DLOOP_2:   .SET   DLOOP_3   
0957                DLOOP_3:   .SET   DLOOP_4   
0957                DLOOP_4:   .SET   DLOOP_5   
0957                DLOOP_5:   .SET   DLOOP_6   
0957                DLOOP_6:   .SET   DLOOP_7   
0957                DLOOP_7:   .SET   DLOOP_8   
0957                DLOOP_8:   .SET   DLOOP_9   
0957                DLOOP_9:   .SET   DLOOP_10   
0957                DLOOP_10:   .SET   DLOOP_11   
0957                DLOOP_11:   .SET   DLOOP_12   
0957                DLOOP_12:   .SET   0   
0957                          ;*Macro unroll:  _endif
0957                          ;*Macro unroll:  STRUC_FWD
0957                CUR_ADR:   .SET   $   
093A                          .ORG   STRUC_TOP - 2   
093A   57 09                  DW   CUR_ADR   
0957                          .ORG   CUR_ADR   
0957                          ;*Macro unroll:  STRUC_POP
0957                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0957                STRUC_TOP:   .SET   STRUC_2   
0957                STRUC_2:   .SET   STRUC_3   
0957                STRUC_3:   .SET   STRUC_4   
0957                STRUC_4:   .SET   STRUC_5   
0957                STRUC_5:   .SET   STRUC_6   
0957                STRUC_6:   .SET   STRUC_7   
0957                STRUC_7:   .SET   STRUC_8   
0957                STRUC_8:   .SET   STRUC_9   
0957                STRUC_9:   .SET   STRUC_10   
0957                STRUC_10:   .SET   STRUC_11   
0957                STRUC_11:   .SET   STRUC_12   
0957                STRUC_12:   .SET   0   
0957                             ; count exhausted & no mismatch found
0957   3E 00                  LD   A,0   ; a=0 (s1=s2)
0959   C9                     RET      
095A                             ; 
095A                             ; lookup - lookup header in dictionary ***
095A                             ; 
095A                             ; params: HL = string address, BC = string length
095A                             ; returns: DE = found header ptr or 0
095A                             ; destroys: AF
095A                             ; 
095A                LOOKUP:      
095A   ED 5B 1E 30            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
095E                          ;*Macro unroll:  _do
095E   18 03                  JR   L_M_1580S360   
0960   C3 60 09               JP   $   
0963                          ;*Macro unroll:  DLOOP_PUSH $
0963                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0963                DLOOP_12:   .SET   DLOOP_11   
0963                DLOOP_11:   .SET   DLOOP_10   
0963                DLOOP_10:   .SET   DLOOP_9   
0963                DLOOP_9:   .SET   DLOOP_8   
0963                DLOOP_8:   .SET   DLOOP_7   
0963                DLOOP_7:   .SET   DLOOP_6   
0963                DLOOP_6:   .SET   DLOOP_5   
0963                DLOOP_5:   .SET   DLOOP_4   
0963                DLOOP_4:   .SET   DLOOP_3   
0963                DLOOP_3:   .SET   DLOOP_2   
0963                DLOOP_2:   .SET   DLOOP_TOP   
0963                DLOOP_TOP:   .SET   $   
0963                L_M_1580S360:      
0963                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0963   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0964   B2                     OR   D   
0965   C8                     RET   z   
0966                             ; Compare the length expected and the length of the word.
0966                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0966                             ; this won't pick the word (the length will appear to be wrong).
0966   D5                     PUSH   DE   ; save ptr to header
0967   13                     INC   DE   ; skip over first field
0968   13                     INC   DE   
0969   1A                     LD   A,(DE)   ; a = flags+length field
096A   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
096C   B9                     CP   C   ; Length is the same?
096D                          ;*Macro unroll:  _if z
096D   CA 73 09               JP   z,L_M_1592S376   
0970   C3 70 09               JP   $   
0973                          ;*Macro unroll:  STRUC_PUSH $
0973                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0973                STRUC_12:   .SET   STRUC_11   
0973                STRUC_11:   .SET   STRUC_10   
0973                STRUC_10:   .SET   STRUC_9   
0973                STRUC_9:   .SET   STRUC_8   
0973                STRUC_8:   .SET   STRUC_7   
0973                STRUC_7:   .SET   STRUC_6   
0973                STRUC_6:   .SET   STRUC_5   
0973                STRUC_5:   .SET   STRUC_4   
0973                STRUC_4:   .SET   STRUC_3   
0973                STRUC_3:   .SET   STRUC_2   
0973                STRUC_2:   .SET   STRUC_TOP   
0973                STRUC_TOP:   .SET   $   
0973                L_M_1592S376:      
0973                             ; Compare the strings in detail.
0973   13                     INC   DE   ; DE = Dictionary string we are checking against.
0974   E5                     PUSH   HL   ; save HL, BC
0975   C5                     PUSH   BC   
0976   CD 34 09               CALL   compareStr   ; Compare the strings. BC = len
0979   C1                     POP   BC   
097A   E1                     POP   HL   
097B   B7                     OR   A   ; if A == 0 then matched
097C                          ;*Macro unroll:  _if z
097C   CA 82 09               JP   z,L_M_1601S387   
097F   C3 7F 09               JP   $   
0982                          ;*Macro unroll:  STRUC_PUSH $
0982                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0982                STRUC_12:   .SET   STRUC_11   
0982                STRUC_11:   .SET   STRUC_10   
0982                STRUC_10:   .SET   STRUC_9   
0982                STRUC_9:   .SET   STRUC_8   
0982                STRUC_8:   .SET   STRUC_7   
0982                STRUC_7:   .SET   STRUC_6   
0982                STRUC_6:   .SET   STRUC_5   
0982                STRUC_5:   .SET   STRUC_4   
0982                STRUC_4:   .SET   STRUC_3   
0982                STRUC_3:   .SET   STRUC_2   
0982                STRUC_2:   .SET   STRUC_TOP   
0982                STRUC_TOP:   .SET   $   
0982                L_M_1601S387:      
0982   D1                     POP   DE   ; matched, restore DE and return
0983   C9                     RET      
0984                          ;*Macro unroll:  _endif
0984                          ;*Macro unroll:  STRUC_FWD
0984                CUR_ADR:   .SET   $   
0980                          .ORG   STRUC_TOP - 2   
0980   84 09                  DW   CUR_ADR   
0984                          .ORG   CUR_ADR   
0984                          ;*Macro unroll:  STRUC_POP
0984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0984                STRUC_TOP:   .SET   STRUC_2   
0984                STRUC_2:   .SET   STRUC_3   
0984                STRUC_3:   .SET   STRUC_4   
0984                STRUC_4:   .SET   STRUC_5   
0984                STRUC_5:   .SET   STRUC_6   
0984                STRUC_6:   .SET   STRUC_7   
0984                STRUC_7:   .SET   STRUC_8   
0984                STRUC_8:   .SET   STRUC_9   
0984                STRUC_9:   .SET   STRUC_10   
0984                STRUC_10:   .SET   STRUC_11   
0984                STRUC_11:   .SET   STRUC_12   
0984                STRUC_12:   .SET   0   
0984                          ;*Macro unroll:  _endif
0984                          ;*Macro unroll:  STRUC_FWD
0984                CUR_ADR:   .SET   $   
0971                          .ORG   STRUC_TOP - 2   
0971   84 09                  DW   CUR_ADR   
0984                          .ORG   CUR_ADR   
0984                          ;*Macro unroll:  STRUC_POP
0984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0984                STRUC_TOP:   .SET   STRUC_2   
0984                STRUC_2:   .SET   STRUC_3   
0984                STRUC_3:   .SET   STRUC_4   
0984                STRUC_4:   .SET   STRUC_5   
0984                STRUC_5:   .SET   STRUC_6   
0984                STRUC_6:   .SET   STRUC_7   
0984                STRUC_7:   .SET   STRUC_8   
0984                STRUC_8:   .SET   STRUC_9   
0984                STRUC_9:   .SET   STRUC_10   
0984                STRUC_10:   .SET   STRUC_11   
0984                STRUC_11:   .SET   STRUC_12   
0984                STRUC_12:   .SET   0   
0984   D1                     POP   DE   ; restore DE
0985   1A                     LD   A,(DE)   
0986   08                     EX   AF,AF'   
0987   13                     INC   DE   
0988   1A                     LD   A,(DE)   
0989   57                     LD   D,A   
098A   08                     EX   AF,AF'   
098B   5F                     LD   E,A   
098C                          ;*Macro unroll:  _enddo
098C   C3 63 09               JP   DLOOP_TOP   
098F                          ;*Macro unroll:  DLOOP_FWD
098F                CUR_ADR:   .SET   $   
0961                          .ORG   DLOOP_TOP - 2   
0961   8F 09                  DW   CUR_ADR   
098F                          .ORG   CUR_ADR   
098F                          ;*Macro unroll:  DLOOP_POP
098F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
098F                DLOOP_TOP:   .SET   DLOOP_2   
098F                DLOOP_2:   .SET   DLOOP_3   
098F                DLOOP_3:   .SET   DLOOP_4   
098F                DLOOP_4:   .SET   DLOOP_5   
098F                DLOOP_5:   .SET   DLOOP_6   
098F                DLOOP_6:   .SET   DLOOP_7   
098F                DLOOP_7:   .SET   DLOOP_8   
098F                DLOOP_8:   .SET   DLOOP_9   
098F                DLOOP_9:   .SET   DLOOP_10   
098F                DLOOP_10:   .SET   DLOOP_11   
098F                DLOOP_11:   .SET   DLOOP_12   
098F                DLOOP_12:   .SET   0   
098F                             ; 
098F                             ; listWords - prints all the words in dictionary
098F                             ; 
098F                             ; destroys: ?
098F                             ; 
098F                LISTWORDS:      
098F   ED 5B 1E 30            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0993                          ;*Macro unroll:  _do
0993   18 03                  JR   L_M_1622S411   
0995   C3 95 09               JP   $   
0998                          ;*Macro unroll:  DLOOP_PUSH $
0998                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0998                DLOOP_12:   .SET   DLOOP_11   
0998                DLOOP_11:   .SET   DLOOP_10   
0998                DLOOP_10:   .SET   DLOOP_9   
0998                DLOOP_9:   .SET   DLOOP_8   
0998                DLOOP_8:   .SET   DLOOP_7   
0998                DLOOP_7:   .SET   DLOOP_6   
0998                DLOOP_6:   .SET   DLOOP_5   
0998                DLOOP_5:   .SET   DLOOP_4   
0998                DLOOP_4:   .SET   DLOOP_3   
0998                DLOOP_3:   .SET   DLOOP_2   
0998                DLOOP_2:   .SET   DLOOP_TOP   
0998                DLOOP_TOP:   .SET   $   
0998                L_M_1622S411:      
0998                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
0998   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0999   B2                     OR   D   
099A                          ;*Macro unroll:  _until z
099A   CA 95 09               JP   z,DLOOP_TOP - 3   
099D                          ;*Macro unroll:  DLOOP_FWD               ; needed?
099D                CUR_ADR:   .SET   $   ; needed?
0996                          .ORG   DLOOP_TOP - 2   
0996   9D 09                  DW   CUR_ADR   
099D                          .ORG   CUR_ADR   
099D   D5                     PUSH   DE   ; save ptr to header
099E   13                     INC   DE   ; skip over first field
099F   13                     INC   DE   
09A0   1A                     LD   A,(DE)   ; a = flags+length field
09A1   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
09A3   06 00                  LD   B,0   
09A5   4F                     LD   C,A   
09A6   13                     INC   DE   
09A7   CD D3 01               CALL   printStr   
09AA   CD E6 01               CALL   printSpace   
09AD   CD E5 00               CALL   putc   
09B0   E1                     POP   HL   ; HL = link to previous header
09B1   5E                     LD   E,(HL)   
09B2   23                     INC   HL   
09B3   56                     LD   D,(HL)   ; DE = previous word
09B4                          ;*Macro unroll:  _enddo
09B4   C3 98 09               JP   DLOOP_TOP   
09B7                          ;*Macro unroll:  DLOOP_FWD
09B7                CUR_ADR:   .SET   $   
0996                          .ORG   DLOOP_TOP - 2   
0996   B7 09                  DW   CUR_ADR   
09B7                          .ORG   CUR_ADR   
09B7                          ;*Macro unroll:  DLOOP_POP
09B7                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09B7                DLOOP_TOP:   .SET   DLOOP_2   
09B7                DLOOP_2:   .SET   DLOOP_3   
09B7                DLOOP_3:   .SET   DLOOP_4   
09B7                DLOOP_4:   .SET   DLOOP_5   
09B7                DLOOP_5:   .SET   DLOOP_6   
09B7                DLOOP_6:   .SET   DLOOP_7   
09B7                DLOOP_7:   .SET   DLOOP_8   
09B7                DLOOP_8:   .SET   DLOOP_9   
09B7                DLOOP_9:   .SET   DLOOP_10   
09B7                DLOOP_10:   .SET   DLOOP_11   
09B7                DLOOP_11:   .SET   DLOOP_12   
09B7                DLOOP_12:   .SET   0   
09B7   CD DD 01               CALL   printCR   
09BA   C9                     RET      
09BB                             ; 
09BB                             ; utility routines used by xword
09BB                             ; 
09BB                XWORDSKIP:      ; delim addr -- delim addr char
09BB                          ;*Macro unroll:  ppop H,L
09BB   60                     LD   H,B   
09BC   69                     LD   L,C   
09BD                          ;*Macro unroll:  ppop0 B,C
09BD   DD 2B                  DEC   IX   
09BF   DD 46 00               LD   B,(IX+0)   
09C2   DD 2B                  DEC   IX   
09C4   DD 4E 00               LD   C,(IX+0)   
09C7                          ;*Macro unroll:  ppop D,E
09C7   50                     LD   D,B   
09C8   59                     LD   E,C   
09C9                          ;*Macro unroll:  ppop0 B,C
09C9   DD 2B                  DEC   IX   
09CB   DD 46 00               LD   B,(IX+0)   
09CE   DD 2B                  DEC   IX   
09D0   DD 4E 00               LD   C,(IX+0)   
09D3                          ;*Macro unroll:  ppush0 B,C
09D3   DD 71 00               LD   (IX+0),C   
09D6   DD 23                  INC   IX   
09D8   DD 70 00               LD   (IX+0),B   
09DB   DD 23                  INC   IX   
09DD                          ;*Macro unroll:  ppush0 D,E
09DD   DD 73 00               LD   (IX+0),E   
09E0   DD 23                  INC   IX   
09E2   DD 72 00               LD   (IX+0),D   
09E5   DD 23                  INC   IX   
09E7                          ;*Macro unroll:  ppush0 H,L
09E7   DD 75 00               LD   (IX+0),L   
09EA   DD 23                  INC   IX   
09EC   DD 74 00               LD   (IX+0),H   
09EF   DD 23                  INC   IX   
09F1                          ;*Macro unroll:  _do
09F1   18 03                  JR   L_M_1652S443   
09F3   C3 F3 09               JP   $   
09F6                          ;*Macro unroll:  DLOOP_PUSH $
09F6                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09F6                DLOOP_12:   .SET   DLOOP_11   
09F6                DLOOP_11:   .SET   DLOOP_10   
09F6                DLOOP_10:   .SET   DLOOP_9   
09F6                DLOOP_9:   .SET   DLOOP_8   
09F6                DLOOP_8:   .SET   DLOOP_7   
09F6                DLOOP_7:   .SET   DLOOP_6   
09F6                DLOOP_6:   .SET   DLOOP_5   
09F6                DLOOP_5:   .SET   DLOOP_4   
09F6                DLOOP_4:   .SET   DLOOP_3   
09F6                DLOOP_3:   .SET   DLOOP_2   
09F6                DLOOP_2:   .SET   DLOOP_TOP   
09F6                DLOOP_TOP:   .SET   $   
09F6                L_M_1652S443:      
09F6   CD 8F 01               CALL   getKey   ; get next key, returned in A
09F9                          ;*Macro unroll:  _switch
09F9   18 03                  JR   L_M_1654S446   
09FB   C3 FB 09               JP   $   
09FE                          ;*Macro unroll:  STRUC_PUSH $
09FE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09FE                STRUC_12:   .SET   STRUC_11   
09FE                STRUC_11:   .SET   STRUC_10   
09FE                STRUC_10:   .SET   STRUC_9   
09FE                STRUC_9:   .SET   STRUC_8   
09FE                STRUC_8:   .SET   STRUC_7   
09FE                STRUC_7:   .SET   STRUC_6   
09FE                STRUC_6:   .SET   STRUC_5   
09FE                STRUC_5:   .SET   STRUC_4   
09FE                STRUC_4:   .SET   STRUC_3   
09FE                STRUC_3:   .SET   STRUC_2   
09FE                STRUC_2:   .SET   STRUC_TOP   
09FE                STRUC_TOP:   .SET   $   
09FE                L_M_1654S446:      
09FE   CB 7F                  BIT   7,A   ; check end of input
0A00                          ;*Macro unroll:  _if nz
0A00   C2 06 0A               JP   nz,L_M_1656S449   
0A03   C3 03 0A               JP   $   
0A06                          ;*Macro unroll:  STRUC_PUSH $
0A06                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A06                STRUC_12:   .SET   STRUC_11   
0A06                STRUC_11:   .SET   STRUC_10   
0A06                STRUC_10:   .SET   STRUC_9   
0A06                STRUC_9:   .SET   STRUC_8   
0A06                STRUC_8:   .SET   STRUC_7   
0A06                STRUC_7:   .SET   STRUC_6   
0A06                STRUC_6:   .SET   STRUC_5   
0A06                STRUC_5:   .SET   STRUC_4   
0A06                STRUC_4:   .SET   STRUC_3   
0A06                STRUC_3:   .SET   STRUC_2   
0A06                STRUC_2:   .SET   STRUC_TOP   
0A06                STRUC_TOP:   .SET   $   
0A06                L_M_1656S449:      
0A06   36 00                  LD   (HL),0   
0A08   3E 00                  LD   A,0   
0A0A                          ;*Macro unroll:  _break
0A0A   C3 F3 09               JP   DLOOP_TOP - 3   
0A0D                          ;*Macro unroll:  _endif
0A0D                          ;*Macro unroll:  STRUC_FWD
0A0D                CUR_ADR:   .SET   $   
0A04                          .ORG   STRUC_TOP - 2   
0A04   0D 0A                  DW   CUR_ADR   
0A0D                          .ORG   CUR_ADR   
0A0D                          ;*Macro unroll:  STRUC_POP
0A0D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A0D                STRUC_TOP:   .SET   STRUC_2   
0A0D                STRUC_2:   .SET   STRUC_3   
0A0D                STRUC_3:   .SET   STRUC_4   
0A0D                STRUC_4:   .SET   STRUC_5   
0A0D                STRUC_5:   .SET   STRUC_6   
0A0D                STRUC_6:   .SET   STRUC_7   
0A0D                STRUC_7:   .SET   STRUC_8   
0A0D                STRUC_8:   .SET   STRUC_9   
0A0D                STRUC_9:   .SET   STRUC_10   
0A0D                STRUC_10:   .SET   STRUC_11   
0A0D                STRUC_11:   .SET   STRUC_12   
0A0D                STRUC_12:   .SET   0   
0A0D   FE 5C                  CP   $5C   ; \ start of a comment?
0A0F                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0A0F   CA 15 0A               JP   z,L_M_1662S456   ; if yes skip to end of line
0A12   C3 12 0A               JP   $   
0A15                          ;*Macro unroll:  STRUC_PUSH $
0A15                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A15                STRUC_12:   .SET   STRUC_11   
0A15                STRUC_11:   .SET   STRUC_10   
0A15                STRUC_10:   .SET   STRUC_9   
0A15                STRUC_9:   .SET   STRUC_8   
0A15                STRUC_8:   .SET   STRUC_7   
0A15                STRUC_7:   .SET   STRUC_6   
0A15                STRUC_6:   .SET   STRUC_5   
0A15                STRUC_5:   .SET   STRUC_4   
0A15                STRUC_4:   .SET   STRUC_3   
0A15                STRUC_3:   .SET   STRUC_2   
0A15                STRUC_2:   .SET   STRUC_TOP   
0A15                STRUC_TOP:   .SET   $   
0A15                L_M_1662S456:      
0A15                          ;*Macro unroll:  _do
0A15   18 03                  JR   L_M_1663S457   
0A17   C3 17 0A               JP   $   
0A1A                          ;*Macro unroll:  DLOOP_PUSH $
0A1A                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A1A                DLOOP_12:   .SET   DLOOP_11   
0A1A                DLOOP_11:   .SET   DLOOP_10   
0A1A                DLOOP_10:   .SET   DLOOP_9   
0A1A                DLOOP_9:   .SET   DLOOP_8   
0A1A                DLOOP_8:   .SET   DLOOP_7   
0A1A                DLOOP_7:   .SET   DLOOP_6   
0A1A                DLOOP_6:   .SET   DLOOP_5   
0A1A                DLOOP_5:   .SET   DLOOP_4   
0A1A                DLOOP_4:   .SET   DLOOP_3   
0A1A                DLOOP_3:   .SET   DLOOP_2   
0A1A                DLOOP_2:   .SET   DLOOP_TOP   
0A1A                DLOOP_TOP:   .SET   $   
0A1A                L_M_1663S457:      
0A1A   CD 8F 01               CALL   getKey   
0A1D   FE 0D                  CP   "\r"   ; end of line yet?
0A1F                          ;*Macro unroll:  _if nz
0A1F   C2 25 0A               JP   nz,L_M_1666S460   
0A22   C3 22 0A               JP   $   
0A25                          ;*Macro unroll:  STRUC_PUSH $
0A25                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A25                STRUC_12:   .SET   STRUC_11   
0A25                STRUC_11:   .SET   STRUC_10   
0A25                STRUC_10:   .SET   STRUC_9   
0A25                STRUC_9:   .SET   STRUC_8   
0A25                STRUC_8:   .SET   STRUC_7   
0A25                STRUC_7:   .SET   STRUC_6   
0A25                STRUC_6:   .SET   STRUC_5   
0A25                STRUC_5:   .SET   STRUC_4   
0A25                STRUC_4:   .SET   STRUC_3   
0A25                STRUC_3:   .SET   STRUC_2   
0A25                STRUC_2:   .SET   STRUC_TOP   
0A25                STRUC_TOP:   .SET   $   
0A25                L_M_1666S460:      
0A25   FE 0A                  CP   "\n"   ; end of line yet?
0A27                          ;*Macro unroll:  _endif
0A27                          ;*Macro unroll:  STRUC_FWD
0A27                CUR_ADR:   .SET   $   
0A23                          .ORG   STRUC_TOP - 2   
0A23   27 0A                  DW   CUR_ADR   
0A27                          .ORG   CUR_ADR   
0A27                          ;*Macro unroll:  STRUC_POP
0A27                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A27                STRUC_TOP:   .SET   STRUC_2   
0A27                STRUC_2:   .SET   STRUC_3   
0A27                STRUC_3:   .SET   STRUC_4   
0A27                STRUC_4:   .SET   STRUC_5   
0A27                STRUC_5:   .SET   STRUC_6   
0A27                STRUC_6:   .SET   STRUC_7   
0A27                STRUC_7:   .SET   STRUC_8   
0A27                STRUC_8:   .SET   STRUC_9   
0A27                STRUC_9:   .SET   STRUC_10   
0A27                STRUC_10:   .SET   STRUC_11   
0A27                STRUC_11:   .SET   STRUC_12   
0A27                STRUC_12:   .SET   0   
0A27                          ;*Macro unroll:  _until z
0A27   CA 17 0A               JP   z,DLOOP_TOP - 3   
0A2A                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A2A                CUR_ADR:   .SET   $   ; needed?
0A18                          .ORG   DLOOP_TOP - 2   
0A18   2A 0A                  DW   CUR_ADR   
0A2A                          .ORG   CUR_ADR   
0A2A                          ;*Macro unroll:  _enddo
0A2A   C3 1A 0A               JP   DLOOP_TOP   
0A2D                          ;*Macro unroll:  DLOOP_FWD
0A2D                CUR_ADR:   .SET   $   
0A18                          .ORG   DLOOP_TOP - 2   
0A18   2D 0A                  DW   CUR_ADR   
0A2D                          .ORG   CUR_ADR   
0A2D                          ;*Macro unroll:  DLOOP_POP
0A2D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A2D                DLOOP_TOP:   .SET   DLOOP_2   
0A2D                DLOOP_2:   .SET   DLOOP_3   
0A2D                DLOOP_3:   .SET   DLOOP_4   
0A2D                DLOOP_4:   .SET   DLOOP_5   
0A2D                DLOOP_5:   .SET   DLOOP_6   
0A2D                DLOOP_6:   .SET   DLOOP_7   
0A2D                DLOOP_7:   .SET   DLOOP_8   
0A2D                DLOOP_8:   .SET   DLOOP_9   
0A2D                DLOOP_9:   .SET   DLOOP_10   
0A2D                DLOOP_10:   .SET   DLOOP_11   
0A2D                DLOOP_11:   .SET   DLOOP_12   
0A2D                DLOOP_12:   .SET   0   
0A2D                          ;*Macro unroll:  _endcase
0A2D   C3 FB 09               JP   STRUC_2 - 3   
0A30                          ;*Macro unroll:  STRUC_FWD
0A30                CUR_ADR:   .SET   $   
0A13                          .ORG   STRUC_TOP - 2   
0A13   30 0A                  DW   CUR_ADR   
0A30                          .ORG   CUR_ADR   
0A30                          ;*Macro unroll:  STRUC_POP
0A30                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A30                STRUC_TOP:   .SET   STRUC_2   
0A30                STRUC_2:   .SET   STRUC_3   
0A30                STRUC_3:   .SET   STRUC_4   
0A30                STRUC_4:   .SET   STRUC_5   
0A30                STRUC_5:   .SET   STRUC_6   
0A30                STRUC_6:   .SET   STRUC_7   
0A30                STRUC_7:   .SET   STRUC_8   
0A30                STRUC_8:   .SET   STRUC_9   
0A30                STRUC_9:   .SET   STRUC_10   
0A30                STRUC_10:   .SET   STRUC_11   
0A30                STRUC_11:   .SET   STRUC_12   
0A30                STRUC_12:   .SET   0   
0A30   B9                     CP   C   ; = space?
0A31                          ;*Macro unroll:  _case z
0A31   CA 37 0A               JP   z,L_M_1673S468   
0A34   C3 34 0A               JP   $   
0A37                          ;*Macro unroll:  STRUC_PUSH $
0A37                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A37                STRUC_12:   .SET   STRUC_11   
0A37                STRUC_11:   .SET   STRUC_10   
0A37                STRUC_10:   .SET   STRUC_9   
0A37                STRUC_9:   .SET   STRUC_8   
0A37                STRUC_8:   .SET   STRUC_7   
0A37                STRUC_7:   .SET   STRUC_6   
0A37                STRUC_6:   .SET   STRUC_5   
0A37                STRUC_5:   .SET   STRUC_4   
0A37                STRUC_4:   .SET   STRUC_3   
0A37                STRUC_3:   .SET   STRUC_2   
0A37                STRUC_2:   .SET   STRUC_TOP   
0A37                STRUC_TOP:   .SET   $   
0A37                L_M_1673S468:      
0A37                          ;*Macro unroll:  _endcase
0A37   C3 FB 09               JP   STRUC_2 - 3   
0A3A                          ;*Macro unroll:  STRUC_FWD
0A3A                CUR_ADR:   .SET   $   
0A35                          .ORG   STRUC_TOP - 2   
0A35   3A 0A                  DW   CUR_ADR   
0A3A                          .ORG   CUR_ADR   
0A3A                          ;*Macro unroll:  STRUC_POP
0A3A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A3A                STRUC_TOP:   .SET   STRUC_2   
0A3A                STRUC_2:   .SET   STRUC_3   
0A3A                STRUC_3:   .SET   STRUC_4   
0A3A                STRUC_4:   .SET   STRUC_5   
0A3A                STRUC_5:   .SET   STRUC_6   
0A3A                STRUC_6:   .SET   STRUC_7   
0A3A                STRUC_7:   .SET   STRUC_8   
0A3A                STRUC_8:   .SET   STRUC_9   
0A3A                STRUC_9:   .SET   STRUC_10   
0A3A                STRUC_10:   .SET   STRUC_11   
0A3A                STRUC_11:   .SET   STRUC_12   
0A3A                STRUC_12:   .SET   0   
0A3A   FE 20                  CP   " "   ; < space?
0A3C                          ;*Macro unroll:  _case c
0A3C   DA 42 0A               JP   c,L_M_1676S472   
0A3F   C3 3F 0A               JP   $   
0A42                          ;*Macro unroll:  STRUC_PUSH $
0A42                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A42                STRUC_12:   .SET   STRUC_11   
0A42                STRUC_11:   .SET   STRUC_10   
0A42                STRUC_10:   .SET   STRUC_9   
0A42                STRUC_9:   .SET   STRUC_8   
0A42                STRUC_8:   .SET   STRUC_7   
0A42                STRUC_7:   .SET   STRUC_6   
0A42                STRUC_6:   .SET   STRUC_5   
0A42                STRUC_5:   .SET   STRUC_4   
0A42                STRUC_4:   .SET   STRUC_3   
0A42                STRUC_3:   .SET   STRUC_2   
0A42                STRUC_2:   .SET   STRUC_TOP   
0A42                STRUC_TOP:   .SET   $   
0A42                L_M_1676S472:      
0A42                          ;*Macro unroll:  _endcase
0A42   C3 FB 09               JP   STRUC_2 - 3   
0A45                          ;*Macro unroll:  STRUC_FWD
0A45                CUR_ADR:   .SET   $   
0A40                          .ORG   STRUC_TOP - 2   
0A40   45 0A                  DW   CUR_ADR   
0A45                          .ORG   CUR_ADR   
0A45                          ;*Macro unroll:  STRUC_POP
0A45                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A45                STRUC_TOP:   .SET   STRUC_2   
0A45                STRUC_2:   .SET   STRUC_3   
0A45                STRUC_3:   .SET   STRUC_4   
0A45                STRUC_4:   .SET   STRUC_5   
0A45                STRUC_5:   .SET   STRUC_6   
0A45                STRUC_6:   .SET   STRUC_7   
0A45                STRUC_7:   .SET   STRUC_8   
0A45                STRUC_8:   .SET   STRUC_9   
0A45                STRUC_9:   .SET   STRUC_10   
0A45                STRUC_10:   .SET   STRUC_11   
0A45                STRUC_11:   .SET   STRUC_12   
0A45                STRUC_12:   .SET   0   
0A45                             ; default case
0A45                          ;*Macro unroll:  _break
0A45   C3 F3 09               JP   DLOOP_TOP - 3   
0A48                          ;*Macro unroll:  _endswitch
0A48                          ;*Macro unroll:  STRUC_FWD
0A48                CUR_ADR:   .SET   $   
09FC                          .ORG   STRUC_TOP - 2   
09FC   48 0A                  DW   CUR_ADR   
0A48                          .ORG   CUR_ADR   
0A48                          ;*Macro unroll:  STRUC_POP
0A48                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A48                STRUC_TOP:   .SET   STRUC_2   
0A48                STRUC_2:   .SET   STRUC_3   
0A48                STRUC_3:   .SET   STRUC_4   
0A48                STRUC_4:   .SET   STRUC_5   
0A48                STRUC_5:   .SET   STRUC_6   
0A48                STRUC_6:   .SET   STRUC_7   
0A48                STRUC_7:   .SET   STRUC_8   
0A48                STRUC_8:   .SET   STRUC_9   
0A48                STRUC_9:   .SET   STRUC_10   
0A48                STRUC_10:   .SET   STRUC_11   
0A48                STRUC_11:   .SET   STRUC_12   
0A48                STRUC_12:   .SET   0   
0A48                          ;*Macro unroll:  _enddo
0A48   C3 F6 09               JP   DLOOP_TOP   
0A4B                          ;*Macro unroll:  DLOOP_FWD
0A4B                CUR_ADR:   .SET   $   
09F4                          .ORG   DLOOP_TOP - 2   
09F4   4B 0A                  DW   CUR_ADR   
0A4B                          .ORG   CUR_ADR   
0A4B                          ;*Macro unroll:  DLOOP_POP
0A4B                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A4B                DLOOP_TOP:   .SET   DLOOP_2   
0A4B                DLOOP_2:   .SET   DLOOP_3   
0A4B                DLOOP_3:   .SET   DLOOP_4   
0A4B                DLOOP_4:   .SET   DLOOP_5   
0A4B                DLOOP_5:   .SET   DLOOP_6   
0A4B                DLOOP_6:   .SET   DLOOP_7   
0A4B                DLOOP_7:   .SET   DLOOP_8   
0A4B                DLOOP_8:   .SET   DLOOP_9   
0A4B                DLOOP_9:   .SET   DLOOP_10   
0A4B                DLOOP_10:   .SET   DLOOP_11   
0A4B                DLOOP_11:   .SET   DLOOP_12   
0A4B                DLOOP_12:   .SET   0   
0A4B   06 00                  LD   B,0   
0A4D   4F                     LD   C,A   
0A4E   C9                     RET      
0A4F                XWORDREAD:      ; delim addr char -- c-addr
0A4F   79                     LD   A,C   
0A50                          ;*Macro unroll:  ppop0 B,C
0A50   DD 2B                  DEC   IX   
0A52   DD 46 00               LD   B,(IX+0)   
0A55   DD 2B                  DEC   IX   
0A57   DD 4E 00               LD   C,(IX+0)   
0A5A                          ;*Macro unroll:  ppop H,L
0A5A   60                     LD   H,B   
0A5B   69                     LD   L,C   
0A5C                          ;*Macro unroll:  ppop0 B,C
0A5C   DD 2B                  DEC   IX   
0A5E   DD 46 00               LD   B,(IX+0)   
0A61   DD 2B                  DEC   IX   
0A63   DD 4E 00               LD   C,(IX+0)   
0A66                          ;*Macro unroll:  ppop D,E
0A66   50                     LD   D,B   
0A67   59                     LD   E,C   
0A68                          ;*Macro unroll:  ppop0 B,C
0A68   DD 2B                  DEC   IX   
0A6A   DD 46 00               LD   B,(IX+0)   
0A6D   DD 2B                  DEC   IX   
0A6F   DD 4E 00               LD   C,(IX+0)   
0A72   16 00                  LD   D,0   
0A74   B7                     OR   A   
0A75                          ;*Macro unroll:  _if nz
0A75   C2 7B 0A               JP   nz,L_M_1692S491   
0A78   C3 78 0A               JP   $   
0A7B                          ;*Macro unroll:  STRUC_PUSH $
0A7B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A7B                STRUC_12:   .SET   STRUC_11   
0A7B                STRUC_11:   .SET   STRUC_10   
0A7B                STRUC_10:   .SET   STRUC_9   
0A7B                STRUC_9:   .SET   STRUC_8   
0A7B                STRUC_8:   .SET   STRUC_7   
0A7B                STRUC_7:   .SET   STRUC_6   
0A7B                STRUC_6:   .SET   STRUC_5   
0A7B                STRUC_5:   .SET   STRUC_4   
0A7B                STRUC_4:   .SET   STRUC_3   
0A7B                STRUC_3:   .SET   STRUC_2   
0A7B                STRUC_2:   .SET   STRUC_TOP   
0A7B                STRUC_TOP:   .SET   $   
0A7B                L_M_1692S491:      
0A7B   E5                     PUSH   HL   ; save a copy of HL
0A7C   23                     INC   HL   ; move to leave space for length byte
0A7D   43                     LD   B,E   
0A7E                          ;*Macro unroll:  _do
0A7E   18 03                  JR   L_M_1696S495   
0A80   C3 80 0A               JP   $   
0A83                          ;*Macro unroll:  DLOOP_PUSH $
0A83                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A83                DLOOP_12:   .SET   DLOOP_11   
0A83                DLOOP_11:   .SET   DLOOP_10   
0A83                DLOOP_10:   .SET   DLOOP_9   
0A83                DLOOP_9:   .SET   DLOOP_8   
0A83                DLOOP_8:   .SET   DLOOP_7   
0A83                DLOOP_7:   .SET   DLOOP_6   
0A83                DLOOP_6:   .SET   DLOOP_5   
0A83                DLOOP_5:   .SET   DLOOP_4   
0A83                DLOOP_4:   .SET   DLOOP_3   
0A83                DLOOP_3:   .SET   DLOOP_2   
0A83                DLOOP_2:   .SET   DLOOP_TOP   
0A83                DLOOP_TOP:   .SET   $   
0A83                L_M_1696S495:      
0A83   77                     LD   (HL),A   ; add character to return lineBuf
0A84   23                     INC   HL   
0A85   14                     INC   D   
0A86   CD 8F 01               CALL   getKey   ; get next key
0A89   B9                     CP   C   ; = delim?
0A8A                          ;*Macro unroll:  _until z
0A8A   CA 80 0A               JP   z,DLOOP_TOP - 3   
0A8D                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A8D                CUR_ADR:   .SET   $   ; needed?
0A81                          .ORG   DLOOP_TOP - 2   
0A81   8D 0A                  DW   CUR_ADR   
0A8D                          .ORG   CUR_ADR   
0A8D   FE 20                  CP   " "   ; < space? i.e. control chars
0A8F                          ;*Macro unroll:  _until c
0A8F   DA 80 0A               JP   c,DLOOP_TOP - 3   
0A92                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A92                CUR_ADR:   .SET   $   ; needed?
0A81                          .ORG   DLOOP_TOP - 2   
0A81   92 0A                  DW   CUR_ADR   
0A92                          .ORG   CUR_ADR   
0A92                          ;*Macro unroll:  _djnz
0A92   10 EF                  DJNZ   DLOOP_TOP   
0A94                          ;*Macro unroll:  DLOOP_FWD
0A94                CUR_ADR:   .SET   $   
0A81                          .ORG   DLOOP_TOP - 2   
0A81   94 0A                  DW   CUR_ADR   
0A94                          .ORG   CUR_ADR   
0A94                          ;*Macro unroll:  DLOOP_POP
0A94                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A94                DLOOP_TOP:   .SET   DLOOP_2   
0A94                DLOOP_2:   .SET   DLOOP_3   
0A94                DLOOP_3:   .SET   DLOOP_4   
0A94                DLOOP_4:   .SET   DLOOP_5   
0A94                DLOOP_5:   .SET   DLOOP_6   
0A94                DLOOP_6:   .SET   DLOOP_7   
0A94                DLOOP_7:   .SET   DLOOP_8   
0A94                DLOOP_8:   .SET   DLOOP_9   
0A94                DLOOP_9:   .SET   DLOOP_10   
0A94                DLOOP_10:   .SET   DLOOP_11   
0A94                DLOOP_11:   .SET   DLOOP_12   
0A94                DLOOP_12:   .SET   0   
0A94   E1                     POP   HL   ; restore HL
0A95                          ;*Macro unroll:  _endif
0A95                          ;*Macro unroll:  STRUC_FWD
0A95                CUR_ADR:   .SET   $   
0A79                          .ORG   STRUC_TOP - 2   
0A79   95 0A                  DW   CUR_ADR   
0A95                          .ORG   CUR_ADR   
0A95                          ;*Macro unroll:  STRUC_POP
0A95                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A95                STRUC_TOP:   .SET   STRUC_2   
0A95                STRUC_2:   .SET   STRUC_3   
0A95                STRUC_3:   .SET   STRUC_4   
0A95                STRUC_4:   .SET   STRUC_5   
0A95                STRUC_5:   .SET   STRUC_6   
0A95                STRUC_6:   .SET   STRUC_7   
0A95                STRUC_7:   .SET   STRUC_8   
0A95                STRUC_8:   .SET   STRUC_9   
0A95                STRUC_9:   .SET   STRUC_10   
0A95                STRUC_10:   .SET   STRUC_11   
0A95                STRUC_11:   .SET   STRUC_12   
0A95                STRUC_12:   .SET   0   
0A95   72                     LD   (HL),D   ; write length
0A96                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0A96   4D                     LD   C,L   ; TOS = str ptr
0A97   44                     LD   B,H   
0A98   C9                     RET      
0A99                             ; 
0A99                             ; words
0A99                             ; 
0A99                             ; forth word defintions
0A99                             ; 
0A99                          ;*Macro unroll: mCODE "quit",4,0,quit
0A99                HEADER_QUIT:      
0A99   E6 06                  DW   link   
0A9B                LINK:     .SET   HEADER_quit   
0A9B   04                     DB   0 + 4   
0A9C   71 75 69 74            DB   "quit"   
0AA0                QUIT:        
0AA0   CF                     RST   $08   ; enter forth
0AA1   40 14 26 04 F3 10      DW   sp0,fetch,spStore   
0AA7   52 0B                  DW   interpret   
0AA9                          ;*Macro unroll:  EXIT
0AA9   84 0F                  DW   exit   
0AAB   C3 A8 07               JP   enter   
0AAE                          ;*Macro unroll: mCODE "word",5,0,WORD                 ; delim -- c-addr
0AAE                HEADER_WORD:      ; delim -- c-addr
0AAE   99 0A                  DW   link   
0AB0                LINK:     .SET   HEADER_WORD   
0AB0   05                     DB   0 + 5   
0AB1   77 6F 72 64            DB   "word"   
0AB5                WORD:        
0AB5   CF                     RST   $08   ; enter forth
0AB6   0E 03 40 00            DW   lit,64   ; limit
0ABA   DC 13 26 04            DW   here,fetch   
0ABE   26 02                  DW   xword   ; writes to HERE!
0AC0                          ;*Macro unroll:  EXIT
0AC0   84 0F                  DW   exit   
0AC2   C3 A8 07               JP   enter   
0AC5                          ;*Macro unroll: mCODE ">cfa",4,0,tcfa
0AC5                HEADER_TCFA:      
0AC5   AE 0A                  DW   link   
0AC7                LINK:     .SET   HEADER_tcfa   
0AC7   04                     DB   0 + 4   
0AC8   3E 63 66 61            DB   ">cfa"   
0ACC                TCFA:        
0ACC   CF                     RST   $08   ; enter forth
0ACD   0E 03 02 00 97 04      DW   lit,2,plus   
0AD3   EA 0A                  DW   count   
0AD5   0E 03 3F 00 54 05      DW   lit,msk_length,and   
0ADB   97 04                  DW   plus   
0ADD                          ;*Macro unroll:  EXIT
0ADD   84 0F                  DW   exit   
0ADF   C3 A8 07               JP   enter   
0AE2                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
0AE2                          ;*Macro unroll: mCODE "count",5,0,count
0AE2                HEADER_COUNT:      
0AE2   C5 0A                  DW   link   
0AE4                LINK:     .SET   HEADER_count   
0AE4   05                     DB   0 + 5   
0AE5   63 6F 75 6E 74         DB   "count"   
0AEA                COUNT:       
0AEA   CF                     RST   $08   ; enter forth
0AEB   07 06 0E 03 01 00 97 04 DW   dup,lit,1,plus   ; ( ptr -- ptr ptr+1)
0AF3   1B 06 8C 04            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
0AF7                          ;*Macro unroll:  EXIT
0AF7   84 0F                  DW   exit   
0AF9   C3 A8 07               JP   enter   
0AFC                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0AFC                          ;*Macro unroll: mCODE "allot",5,0,allot               ;
0AFC                HEADER_ALLOT:      ; 
0AFC   E2 0A                  DW   link   
0AFE                LINK:     .SET   HEADER_allot   
0AFE   05                     DB   0 + 5   
0AFF   61 6C 6C 6F 74         DB   "allot"   
0B04                ALLOT:       
0B04   CF                     RST   $08   ; enter forth
0B05   DC 13 87 02            DW   here,addstore   ; adds n to here
0B09                          ;*Macro unroll:  EXIT
0B09   84 0F                  DW   exit   
0B0B   C3 A8 07               JP   enter   
0B0E                             ; abs   n -- u                          absolute value
0B0E                          ;*Macro unroll: mCODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0B0E                HEADER_ABS:      ; case sensitive for ABS label for some reason
0B0E   FC 0A                  DW   link   
0B10                LINK:     .SET   HEADER_ABS   
0B10   03                     DB   0 + 3   
0B11   61 62 73               DB   "abs"   
0B14                ABS:         
0B14   CF                     RST   $08   ; enter forth
0B15   07 06                  DW   dup   ; copy arg
0B17   25 03                  DW   zeroless   
0B19                          ;*Macro unroll:  cif
0B19   E2 02 00 00            DW   QBRAN,0   
0B1D                          ;*Macro unroll:  CPL_PUSH $
0B1D                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B1D                CPL_10:   .SET   CPL_9   
0B1D                CPL_9:    .SET   CPL_8   
0B1D                CPL_8:    .SET   CPL_7   
0B1D                CPL_7:    .SET   CPL_6   
0B1D                CPL_6:    .SET   CPL_5   
0B1D                CPL_5:    .SET   CPL_4   
0B1D                CPL_4:    .SET   CPL_3   
0B1D                CPL_3:    .SET   CPL_2   
0B1D                CPL_2:    .SET   CPL_TOP   
0B1D                CPL_TOP:   .SET   $   
0B1D   2D 0B                  DW   negate   ; if signs differ then negate answer
0B1F                          ;*Macro unroll:  cendif
0B1F                          ;*Macro unroll:  cBRANCH_FWD
0B1F                CUR_ADR:   .SET   $   
0B1B                          .ORG   CPL_TOP - 2   
0B1B   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0B1F                          .ORG   CUR_ADR   
0B1F                          ;*Macro unroll:  CPL_POP
0B1F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B1F                CPL_TOP:   .SET   CPL_2   
0B1F                CPL_2:    .SET   CPL_3   
0B1F                CPL_3:    .SET   CPL_4   
0B1F                CPL_4:    .SET   CPL_5   
0B1F                CPL_5:    .SET   CPL_6   
0B1F                CPL_6:    .SET   CPL_7   
0B1F                CPL_7:    .SET   CPL_8   
0B1F                CPL_8:    .SET   CPL_9   
0B1F                CPL_9:    .SET   CPL_10   
0B1F                CPL_10:   .SET   0   
0B1F                          ;*Macro unroll:  EXIT
0B1F   84 0F                  DW   exit   
0B21   C3 A8 07               JP   enter   
0B24                             ; negate  n1 -- n2                      negate n1
0B24                          ;*Macro unroll: mCODE "negate",6,0,negate
0B24                HEADER_NEGATE:      
0B24   0E 0B                  DW   link   
0B26                LINK:     .SET   HEADER_negate   
0B26   06                     DB   0 + 6   
0B27   6E 65 67 61 74 65      DB   "negate"   
0B2D                NEGATE:      
0B2D   CF                     RST   $08   ; enter forth
0B2E   39 03                  DW   invert   
0B30   CA 02                  DW   oneplus   
0B32                          ;*Macro unroll:  EXIT
0B32   84 0F                  DW   exit   
0B34   C3 A8 07               JP   enter   
0B37                          ;*Macro unroll: mCODE "bl",2,0,bl
0B37                HEADER_BL:      
0B37   24 0B                  DW   link   
0B39                LINK:     .SET   HEADER_bl   
0B39   02                     DB   0 + 2   
0B3A   62 6C                  DB   "bl"   
0B3C                BL:          
0B3C   CF                     RST   $08   ; enter forth
0B3D   0E 03 20 00            DW   lit,$20   ; compile branch on zero
0B41                          ;*Macro unroll:  EXIT
0B41   84 0F                  DW   exit   
0B43   C3 A8 07               JP   enter   
0B46                          ;*Macro unroll: mCODE "interpret",6,0,interpret
0B46                HEADER_INTERPRET:      
0B46   37 0B                  DW   link   
0B48                LINK:     .SET   HEADER_interpret   
0B48   06                     DB   0 + 6   
0B49   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0B52                INTERPRET:      
0B52   CF                     RST   $08   
0B53                          ;*Macro unroll:  cDo
0B53   FF 02 06 00            DW   BRAN,6   
0B57   FF 02 00 00            DW   BRAN,0   
0B5B                          ;*Macro unroll:  CPL_PUSH $
0B5B                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B5B                CPL_10:   .SET   CPL_9   
0B5B                CPL_9:    .SET   CPL_8   
0B5B                CPL_8:    .SET   CPL_7   
0B5B                CPL_7:    .SET   CPL_6   
0B5B                CPL_6:    .SET   CPL_5   
0B5B                CPL_5:    .SET   CPL_4   
0B5B                CPL_4:    .SET   CPL_3   
0B5B                CPL_3:    .SET   CPL_2   
0B5B                CPL_2:    .SET   CPL_TOP   
0B5B                CPL_TOP:   .SET   $   
0B5B   3C 0B B5 0A EA 0A      DW   bl,word,count   ; pstr -- ptr len
0B61   07 06 2B 05            DW   dup,zEqual   
0B65                          ;*Macro unroll:  cIf
0B65   E2 02 00 00            DW   QBRAN,0   
0B69                          ;*Macro unroll:  CPL_PUSH $
0B69                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B69                CPL_10:   .SET   CPL_9   
0B69                CPL_9:    .SET   CPL_8   
0B69                CPL_8:    .SET   CPL_7   
0B69                CPL_7:    .SET   CPL_6   
0B69                CPL_6:    .SET   CPL_5   
0B69                CPL_5:    .SET   CPL_4   
0B69                CPL_4:    .SET   CPL_3   
0B69                CPL_3:    .SET   CPL_2   
0B69                CPL_2:    .SET   CPL_TOP   
0B69                CPL_TOP:   .SET   $   
0B69   3B 06 3B 06            DW   drop,drop   ; ptr len --
0B6D                          ;*Macro unroll:  EXIT
0B6D   84 0F                  DW   exit   
0B6F   C3 A8 07               JP   enter   
0B72                          ;*Macro unroll:  cEndif
0B72                          ;*Macro unroll:  cBRANCH_FWD
0B72                CUR_ADR:   .SET   $   
0B67                          .ORG   CPL_TOP - 2   
0B67   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0B72                          .ORG   CUR_ADR   
0B72                          ;*Macro unroll:  CPL_POP
0B72                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B72                CPL_TOP:   .SET   CPL_2   
0B72                CPL_2:    .SET   CPL_3   
0B72                CPL_3:    .SET   CPL_4   
0B72                CPL_4:    .SET   CPL_5   
0B72                CPL_5:    .SET   CPL_6   
0B72                CPL_6:    .SET   CPL_7   
0B72                CPL_7:    .SET   CPL_8   
0B72                CPL_8:    .SET   CPL_9   
0B72                CPL_9:    .SET   CPL_10   
0B72                CPL_10:   .SET   0   
0B72   9A 0F                  DW   interpToken   ; interpret the next word
0B74                          ;*Macro unroll:  cEndDo
0B74   FF 02 E5 FF            DW   BRAN,CPL_TOP - $ - 2   
0B78                          ;*Macro unroll:  cBRANCH_FWD
0B78                CUR_ADR:   .SET   $   
0B59                          .ORG   CPL_TOP - 2   
0B59   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0B78                          .ORG   CUR_ADR   
0B78                          ;*Macro unroll:  CPL_POP
0B78                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B78                CPL_TOP:   .SET   CPL_2   
0B78                CPL_2:    .SET   CPL_3   
0B78                CPL_3:    .SET   CPL_4   
0B78                CPL_4:    .SET   CPL_5   
0B78                CPL_5:    .SET   CPL_6   
0B78                CPL_6:    .SET   CPL_7   
0B78                CPL_7:    .SET   CPL_8   
0B78                CPL_8:    .SET   CPL_9   
0B78                CPL_9:    .SET   CPL_10   
0B78                CPL_10:   .SET   0   
0B78                          ;*Macro unroll:  EXIT
0B78   84 0F                  DW   exit   
0B7A   C3 A8 07               JP   enter   
0B7D                          ;*Macro unroll: mCODE "'",1,0,tick                    ; quotes next word
0B7D                HEADER_TICK:      ; quotes next word
0B7D   46 0B                  DW   link   
0B7F                LINK:     .SET   HEADER_tick   
0B7F   01                     DB   0 + 1   
0B80   27                     DB   "'"   
0B81                TICK:        
0B81   3C 0B B5 0A 36 02 2B 05 DW   bl,word,find,zEqual   
0B89   8C 06 EA 0A 4F 06 4F 06 97 04 77 06 DW   rFrom,count,over,over,plus,toR   
0B95   84 0F                  DW   EXIT   
0B97                          ;*Macro unroll: mCODE "*",1,0,star                    ; u1 u2 -- ud
0B97                HEADER_STAR:      ; u1 u2 -- ud
0B97   7D 0B                  DW   link   
0B99                LINK:     .SET   HEADER_star   
0B99   01                     DB   0 + 1   
0B9A   2A                     DB   "*"   
0B9B                STAR:        
0B9B   CF                     RST   $08   ; enter forth
0B9C   4F 06 4F 06            DW   over,over   ; dupe both args
0BA0   14 0B 1B 06 14 0B      DW   ABS,swap,ABS   ; remove sign from both args
0BA6   CE 04 3B 06            DW   ustar,drop   ; unsigned multiply, drop hi-word
0BAA   D2 05                  DW   nrot   ; move to bottom
0BAC   85 05                  DW   xor   ; zero if signs are the same
0BAE   25 03                  DW   zeroless   ; if high bit set
0BB0                          ;*Macro unroll:  cif
0BB0   E2 02 00 00            DW   QBRAN,0   
0BB4                          ;*Macro unroll:  CPL_PUSH $
0BB4                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BB4                CPL_10:   .SET   CPL_9   
0BB4                CPL_9:    .SET   CPL_8   
0BB4                CPL_8:    .SET   CPL_7   
0BB4                CPL_7:    .SET   CPL_6   
0BB4                CPL_6:    .SET   CPL_5   
0BB4                CPL_5:    .SET   CPL_4   
0BB4                CPL_4:    .SET   CPL_3   
0BB4                CPL_3:    .SET   CPL_2   
0BB4                CPL_2:    .SET   CPL_TOP   
0BB4                CPL_TOP:   .SET   $   
0BB4   2D 0B                  DW   negate   ; if signs differ then negate answer
0BB6                          ;*Macro unroll:  cendif
0BB6                          ;*Macro unroll:  cBRANCH_FWD
0BB6                CUR_ADR:   .SET   $   
0BB2                          .ORG   CPL_TOP - 2   
0BB2   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0BB6                          .ORG   CUR_ADR   
0BB6                          ;*Macro unroll:  CPL_POP
0BB6                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BB6                CPL_TOP:   .SET   CPL_2   
0BB6                CPL_2:    .SET   CPL_3   
0BB6                CPL_3:    .SET   CPL_4   
0BB6                CPL_4:    .SET   CPL_5   
0BB6                CPL_5:    .SET   CPL_6   
0BB6                CPL_6:    .SET   CPL_7   
0BB6                CPL_7:    .SET   CPL_8   
0BB6                CPL_8:    .SET   CPL_9   
0BB6                CPL_9:    .SET   CPL_10   
0BB6                CPL_10:   .SET   0   
0BB6                          ;*Macro unroll:  EXIT
0BB6   84 0F                  DW   exit   
0BB8   C3 A8 07               JP   enter   
0BBB                          ;*Macro unroll: mCODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
0BBB                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
0BBB   97 0B                  DW   link   
0BBD                LINK:     .SET   HEADER_slashmod   
0BBD   04                     DB   0 + 4   
0BBE   2F 6D 6F 64            DB   "/mod"   
0BC2                SLASHMOD:      
0BC2   CF                     RST   $08   ; enter forth
0BC3   4F 06 4F 06            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
0BC7   85 05                  DW   xor   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
0BC9   25 03                  DW   zeroless   ; true if high bit still set
0BCB   D2 05                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
0BCD   4F 06                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
0BCF   25 03                  DW   zeroless   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
0BD1   D2 05                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
0BD3   14 0B 1B 06 14 0B 1B 06 DW   ABS,swap,ABS,swap   ; remove sign from both args
0BDB   F0 04                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
0BDD   1B 06                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
0BDF   9E 05                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
0BE1                          ;*Macro unroll:  cif
0BE1   E2 02 00 00            DW   QBRAN,0   
0BE5                          ;*Macro unroll:  CPL_PUSH $
0BE5                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BE5                CPL_10:   .SET   CPL_9   
0BE5                CPL_9:    .SET   CPL_8   
0BE5                CPL_8:    .SET   CPL_7   
0BE5                CPL_7:    .SET   CPL_6   
0BE5                CPL_6:    .SET   CPL_5   
0BE5                CPL_5:    .SET   CPL_4   
0BE5                CPL_4:    .SET   CPL_3   
0BE5                CPL_3:    .SET   CPL_2   
0BE5                CPL_2:    .SET   CPL_TOP   
0BE5                CPL_TOP:   .SET   $   
0BE5   2D 0B                  DW   negate   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
0BE7                          ;*Macro unroll:  cendif
0BE7                          ;*Macro unroll:  cBRANCH_FWD
0BE7                CUR_ADR:   .SET   $   
0BE3                          .ORG   CPL_TOP - 2   
0BE3   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0BE7                          .ORG   CUR_ADR   
0BE7                          ;*Macro unroll:  CPL_POP
0BE7                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BE7                CPL_TOP:   .SET   CPL_2   
0BE7                CPL_2:    .SET   CPL_3   
0BE7                CPL_3:    .SET   CPL_4   
0BE7                CPL_4:    .SET   CPL_5   
0BE7                CPL_5:    .SET   CPL_6   
0BE7                CPL_6:    .SET   CPL_7   
0BE7                CPL_7:    .SET   CPL_8   
0BE7                CPL_8:    .SET   CPL_9   
0BE7                CPL_9:    .SET   CPL_10   
0BE7                CPL_10:   .SET   0   
0BE7   D2 05                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
0BE9   1B 06                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
0BEB                          ;*Macro unroll:  cif
0BEB   E2 02 00 00            DW   QBRAN,0   
0BEF                          ;*Macro unroll:  CPL_PUSH $
0BEF                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BEF                CPL_10:   .SET   CPL_9   
0BEF                CPL_9:    .SET   CPL_8   
0BEF                CPL_8:    .SET   CPL_7   
0BEF                CPL_7:    .SET   CPL_6   
0BEF                CPL_6:    .SET   CPL_5   
0BEF                CPL_5:    .SET   CPL_4   
0BEF                CPL_4:    .SET   CPL_3   
0BEF                CPL_3:    .SET   CPL_2   
0BEF                CPL_2:    .SET   CPL_TOP   
0BEF                CPL_TOP:   .SET   $   
0BEF   2D 0B                  DW   negate   ;     -r q b1 -- -r -q       if signs differ then negate answer
0BF1                          ;*Macro unroll:  cendif
0BF1                          ;*Macro unroll:  cBRANCH_FWD
0BF1                CUR_ADR:   .SET   $   
0BED                          .ORG   CPL_TOP - 2   
0BED   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0BF1                          .ORG   CUR_ADR   
0BF1                          ;*Macro unroll:  CPL_POP
0BF1                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BF1                CPL_TOP:   .SET   CPL_2   
0BF1                CPL_2:    .SET   CPL_3   
0BF1                CPL_3:    .SET   CPL_4   
0BF1                CPL_4:    .SET   CPL_5   
0BF1                CPL_5:    .SET   CPL_6   
0BF1                CPL_6:    .SET   CPL_7   
0BF1                CPL_7:    .SET   CPL_8   
0BF1                CPL_8:    .SET   CPL_9   
0BF1                CPL_9:    .SET   CPL_10   
0BF1                CPL_10:   .SET   0   
0BF1                          ;*Macro unroll:  EXIT
0BF1   84 0F                  DW   exit   
0BF3   C3 A8 07               JP   enter   
0BF6                          ;*Macro unroll: mCODE "/",1,0,slash                   ; dvend dvisr -- quot
0BF6                HEADER_SLASH:      ; dvend dvisr -- quot
0BF6   BB 0B                  DW   link   
0BF8                LINK:     .SET   HEADER_slash   
0BF8   01                     DB   0 + 1   
0BF9   2F                     DB   "/"   
0BFA                SLASH:       
0BFA   CF                     RST   $08   ; enter forth
0BFB   C2 0B                  DW   slashmod   
0BFD   1B 06 3B 06            DW   swap,drop   ; drop remainder
0C01                          ;*Macro unroll:  EXIT
0C01   84 0F                  DW   exit   
0C03   C3 A8 07               JP   enter   
0C06                          ;*Macro unroll: mCODE "mod",3,0,mod                   ; dvend dvisr -- remainder
0C06                HEADER_MOD:      ; dvend dvisr -- remainder
0C06   F6 0B                  DW   link   
0C08                LINK:     .SET   HEADER_mod   
0C08   03                     DB   0 + 3   
0C09   6D 6F 64               DB   "mod"   
0C0C                MOD:         
0C0C   CF                     RST   $08   ; enter forth
0C0D   C2 0B                  DW   slashmod   
0C0F   3B 06                  DW   drop   ; drop quotient
0C11                          ;*Macro unroll:  EXIT
0C11   84 0F                  DW   exit   
0C13   C3 A8 07               JP   enter   
0C16                             ; 
0C16                             ; 
0C16                             ; flow control
0C16                             ; 
0C16                             ; 
0C16                          ;*Macro unroll: mCODE "if",2,msk_immed,if
0C16                HEADER_IF:      
0C16   06 0C                  DW   link   
0C18                LINK:     .SET   HEADER_if   
0C18   82                     DB   msk_immed + 2   
0C19   69 66                  DB   "if"   
0C1B                IF:          
0C1B   CF                     RST   $08   ; enter forth
0C1C   3C 0D                  DW   lbrace   
0C1E   0E 03 E2 02 0B 04      DW   lit,zbranch,comma   ; compile ?branch
0C24   DC 13 26 04 07 06 0B 04 DW   here,fetch,dup,comma   ; compile here and also push on stack
0C2C                          ;*Macro unroll:  EXIT
0C2C   84 0F                  DW   exit   
0C2E   C3 A8 07               JP   enter   
0C31                          ;*Macro unroll: mCODE "else",4,msk_immed,else
0C31                HEADER_ELSE:      
0C31   16 0C                  DW   link   
0C33                LINK:     .SET   HEADER_else   
0C33   84                     DB   msk_immed + 4   
0C34   65 6C 73 65            DB   "else"   
0C38                ELSE:        
0C38   CF                     RST   $08   ; enter forth
0C39   0E 03 FF 02 0B 04      DW   lit,branch,comma   ; definite branch to just over the false-part
0C3F   DC 13 26 04            DW   here,fetch   ; save here on stack
0C43   0E 03 00 00 0B 04      DW   lit,0,comma   ; compile a dummy offset
0C49   1B 06                  DW   swap   ; now back-fill the original (if) offset
0C4B   64 0C                  DW   xendif   ; must call xendif not endif
0C4D                          ;*Macro unroll:  EXIT
0C4D   84 0F                  DW   exit   
0C4F   C3 A8 07               JP   enter   
0C52                          ;*Macro unroll: mCODE "endif",5,msk_immed,endif
0C52                HEADER_ENDIF:      
0C52   31 0C                  DW   link   
0C54                LINK:     .SET   HEADER_endif   
0C54   85                     DB   msk_immed + 5   
0C55   65 6E 64 69 66         DB   "endif"   
0C5A                ENDIF:       
0C5A   CF                     RST   $08   ; enter forth
0C5B   64 0C                  DW   xendif   ; must call xendif not endif
0C5D   8C 0D                  DW   rbraceExec   
0C5F                          ;*Macro unroll:  EXIT
0C5F   84 0F                  DW   exit   
0C61   C3 A8 07               JP   enter   
0C64                XENDIF:      ; must call xendif not endif
0C64   CF                     RST   $08   ; enter forth
0C65   07 06                  DW   dup   
0C67   DC 13 26 04 1B 06 B7 04 DW   here,fetch,swap,minus   ; calculate the offset from the address saved on the stack
0C6F   1B 06 EA 03            DW   swap,store   ; store the offset in the back-filled location
0C73                          ;*Macro unroll:  EXIT
0C73   84 0F                  DW   exit   
0C75   C3 A8 07               JP   enter   
0C78                             ; begin condition while ... repeat
0C78                          ;*Macro unroll: mCODE "begin",5,msk_immed,begin
0C78                HEADER_BEGIN:      
0C78   52 0C                  DW   link   
0C7A                LINK:     .SET   HEADER_begin   
0C7A   85                     DB   msk_immed + 5   
0C7B   62 65 67 69 6E         DB   "begin"   
0C80                BEGIN:       
0C80   CF                     RST   $08   ; enter forth
0C81   3C 0D                  DW   lbrace   
0C83   DC 13 26 04            DW   here,fetch   ; save here on stack (here1)
0C87                          ;*Macro unroll:  EXIT
0C87   84 0F                  DW   exit   
0C89   C3 A8 07               JP   enter   
0C8C                          ;*Macro unroll: mCODE "while",5,msk_immed,while
0C8C                HEADER_WHILE:      
0C8C   78 0C                  DW   link   
0C8E                LINK:     .SET   HEADER_while   
0C8E   85                     DB   msk_immed + 5   
0C8F   77 68 69 6C 65         DB   "while"   
0C94                WHILE:       
0C94   CF                     RST   $08   ; enter forth
0C95   0E 03 E2 02 0B 04      DW   lit,zbranch,comma   ; compile branch on zero
0C9B   DC 13 26 04            DW   here,fetch   ; save here in stack (here2)
0C9F   0E 03 00 00 0B 04      DW   lit,0,comma   ; compile dummy offset
0CA5                          ;*Macro unroll:  EXIT
0CA5   84 0F                  DW   exit   
0CA7   C3 A8 07               JP   enter   
0CAA                          ;*Macro unroll: mCODE "repeat",6,msk_immed,repeat
0CAA                HEADER_REPEAT:      
0CAA   8C 0C                  DW   link   
0CAC                LINK:     .SET   HEADER_repeat   
0CAC   86                     DB   msk_immed + 6   
0CAD   72 65 70 65 61 74      DB   "repeat"   
0CB3                REPEAT:      
0CB3   CF                     RST   $08   ; enter forth
0CB4   0E 03 FF 02 0B 04      DW   lit,branch,comma   ; compile branch
0CBA   1B 06                  DW   swap   ; tos = here1
0CBC   DC 13 26 04 B7 04 0B 04 DW   here,fetch,minus,comma   ; compile offset (here1 - here3)
0CC4   07 06                  DW   dup   
0CC6   DC 13 26 04 1B 06 B7 04 DW   here,fetch,swap,minus   ; compile offset (here2 - here3)
0CCE   1B 06 EA 03            DW   swap,store   ; save offset in here2
0CD2   8C 0D                  DW   rbraceExec   
0CD4                          ;*Macro unroll:  EXIT
0CD4   84 0F                  DW   exit   
0CD6   C3 A8 07               JP   enter   
0CD9                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
0CD9                             ; to define the name s" using asm80
0CD9                          ;*Macro unroll: mCODE {"s",$22},2,msk_immed,squote
0CD9                HEADER_SQUOTE:      
0CD9   AA 0C                  DW   link   
0CDB                LINK:     .SET   HEADER_squote   
0CDB   82                     DB   msk_immed + 2   
0CDC   73 22                  DB   "s",$22   
0CDE                SQUOTE:      
0CDE   18 04                  JR   qt   
0CE0                          ;*Macro unroll: mCODE $22,1,msk_immed,qt
0CE0                HEADER_QT:      
0CE0   D9 0C                  DW   link   
0CE2                LINK:     .SET   HEADER_qt   
0CE2   81                     DB   msk_immed + 1   
0CE3   22                     DB   $22   
0CE4                QT:          
0CE4   CF                     RST   $08   ; enter forth
0CE5   10 14 26 04 2B 05      DW   state,fetch,zequal   
0CEB                          ;*Macro unroll:  cIf
0CEB   E2 02 00 00            DW   QBRAN,0   
0CEF                          ;*Macro unroll:  CPL_PUSH $
0CEF                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CEF                CPL_10:   .SET   CPL_9   
0CEF                CPL_9:    .SET   CPL_8   
0CEF                CPL_8:    .SET   CPL_7   
0CEF                CPL_7:    .SET   CPL_6   
0CEF                CPL_6:    .SET   CPL_5   
0CEF                CPL_5:    .SET   CPL_4   
0CEF                CPL_4:    .SET   CPL_3   
0CEF                CPL_3:    .SET   CPL_2   
0CEF                CPL_2:    .SET   CPL_TOP   
0CEF                CPL_TOP:   .SET   $   
0CEF   0E 03 22 00            DW   lit,$22   ; delim
0CF3   0E 03 3F 00            DW   lit,63   ; limit 63 + length
0CF7   73 14 26 04            DW   latestStr,fetch   
0CFB   0E 03 8C 2E 75 03      DW   lit,wordBuf,equal   
0D01                          ;*Macro unroll:  cIf
0D01   E2 02 00 00            DW   QBRAN,0   
0D05                          ;*Macro unroll:  CPL_PUSH $
0D05                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D05                CPL_10:   .SET   CPL_9   
0D05                CPL_9:    .SET   CPL_8   
0D05                CPL_8:    .SET   CPL_7   
0D05                CPL_7:    .SET   CPL_6   
0D05                CPL_6:    .SET   CPL_5   
0D05                CPL_5:    .SET   CPL_4   
0D05                CPL_4:    .SET   CPL_3   
0D05                CPL_3:    .SET   CPL_2   
0D05                CPL_2:    .SET   CPL_TOP   
0D05                CPL_TOP:   .SET   $   
0D05   0E 03 CC 2E            DW   lit,wordBuf2   
0D09                          ;*Macro unroll:  cElse
0D09   FF 02 00 00            DW   BRAN,0   
0D0D                          ;*Macro unroll:  cBRANCH_FWD
0D0D                CUR_ADR:   .SET   $   
0D03                          .ORG   CPL_TOP - 2   
0D03   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0D0D                          .ORG   CUR_ADR   
0D0D                CPL_TOP:   .SET   $   
0D0D   0E 03 8C 2E            DW   lit,wordBuf   
0D11                          ;*Macro unroll:  cEndIf
0D11                          ;*Macro unroll:  cBRANCH_FWD
0D11                CUR_ADR:   .SET   $   
0D0B                          .ORG   CPL_TOP - 2   
0D0B   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0D11                          .ORG   CUR_ADR   
0D11                          ;*Macro unroll:  CPL_POP
0D11                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D11                CPL_TOP:   .SET   CPL_2   
0D11                CPL_2:    .SET   CPL_3   
0D11                CPL_3:    .SET   CPL_4   
0D11                CPL_4:    .SET   CPL_5   
0D11                CPL_5:    .SET   CPL_6   
0D11                CPL_6:    .SET   CPL_7   
0D11                CPL_7:    .SET   CPL_8   
0D11                CPL_8:    .SET   CPL_9   
0D11                CPL_9:    .SET   CPL_10   
0D11                CPL_10:   .SET   0   
0D11   73 14 EA 03            DW   latestStr,store   ; store here in latestStr
0D15   73 14 26 04            DW   latestStr,fetch   
0D19   26 02 EA 0A            DW   xword,count   
0D1D                          ;*Macro unroll:  cElse
0D1D   FF 02 00 00            DW   BRAN,0   
0D21                          ;*Macro unroll:  cBRANCH_FWD
0D21                CUR_ADR:   .SET   $   
0CED                          .ORG   CPL_TOP - 2   
0CED   34 00                  DW   CUR_ADR - CPL_TOP + 2   
0D21                          .ORG   CUR_ADR   
0D21                CPL_TOP:   .SET   $   
0D21   0E 03 88 0F 0B 04      DW   lit,litstr,comma   
0D27   0E 03 22 00 B5 0A      DW   lit,$22,word   
0D2D   8C 04 CA 02            DW   cfetch,oneplus   
0D31   04 0B                  DW   allot   
0D33                          ;*Macro unroll:  cEndif
0D33                          ;*Macro unroll:  cBRANCH_FWD
0D33                CUR_ADR:   .SET   $   
0D1F                          .ORG   CPL_TOP - 2   
0D1F   14 00                  DW   CUR_ADR - CPL_TOP + 2   
0D33                          .ORG   CUR_ADR   
0D33                          ;*Macro unroll:  CPL_POP
0D33                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D33                CPL_TOP:   .SET   CPL_2   
0D33                CPL_2:    .SET   CPL_3   
0D33                CPL_3:    .SET   CPL_4   
0D33                CPL_4:    .SET   CPL_5   
0D33                CPL_5:    .SET   CPL_6   
0D33                CPL_6:    .SET   CPL_7   
0D33                CPL_7:    .SET   CPL_8   
0D33                CPL_8:    .SET   CPL_9   
0D33                CPL_9:    .SET   CPL_10   
0D33                CPL_10:   .SET   0   
0D33                          ;*Macro unroll:  EXIT
0D33   84 0F                  DW   exit   
0D35   C3 A8 07               JP   enter   
0D38                             ; 
0D38                             ; non-standard words
0D38                             ; 
0D38                             ; 
0D38                          ;*Macro unroll: mCODE "{",1,msk_immed,lbrace
0D38                HEADER_LBRACE:      
0D38   E0 0C                  DW   link   
0D3A                LINK:     .SET   HEADER_lbrace   
0D3A   81                     DB   msk_immed + 1   
0D3B   7B                     DB   "{"   
0D3C                LBRACE:      
0D3C   CF                     RST   $08   ; enter forth
0D3D   10 14 26 04 2B 05      DW   state,fetch,zEqual   
0D43   2A 14 26 04 2B 05      DW   nesting,fetch,zEqual   
0D49   54 05                  DW   and   
0D4B                          ;*Macro unroll:  cIf
0D4B   E2 02 00 00            DW   QBRAN,0   
0D4F                          ;*Macro unroll:  CPL_PUSH $
0D4F                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D4F                CPL_10:   .SET   CPL_9   
0D4F                CPL_9:    .SET   CPL_8   
0D4F                CPL_8:    .SET   CPL_7   
0D4F                CPL_7:    .SET   CPL_6   
0D4F                CPL_6:    .SET   CPL_5   
0D4F                CPL_5:    .SET   CPL_4   
0D4F                CPL_4:    .SET   CPL_3   
0D4F                CPL_3:    .SET   CPL_2   
0D4F                CPL_2:    .SET   CPL_TOP   
0D4F                CPL_TOP:   .SET   $   
0D4F   DC 13 26 04            DW   here,fetch   ; TOS = here
0D53   0E 03 CF 00 5E 04      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0D59                          ;*Macro unroll:  cEndIf
0D59                          ;*Macro unroll:  cBRANCH_FWD
0D59                CUR_ADR:   .SET   $   
0D4D                          .ORG   CPL_TOP - 2   
0D4D   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
0D59                          .ORG   CUR_ADR   
0D59                          ;*Macro unroll:  CPL_POP
0D59                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D59                CPL_TOP:   .SET   CPL_2   
0D59                CPL_2:    .SET   CPL_3   
0D59                CPL_3:    .SET   CPL_4   
0D59                CPL_4:    .SET   CPL_5   
0D59                CPL_5:    .SET   CPL_6   
0D59                CPL_6:    .SET   CPL_7   
0D59                CPL_7:    .SET   CPL_8   
0D59                CPL_8:    .SET   CPL_9   
0D59                CPL_9:    .SET   CPL_10   
0D59                CPL_10:   .SET   0   
0D59   39 10                  DW   nestPlus   ; increase nesting
0D5B                          ;*Macro unroll:  EXIT                             ; return from the function.
0D5B   84 0F                  DW   exit   ; return from the function.
0D5D   C3 A8 07               JP   enter   
0D60                          ;*Macro unroll: mCODE "}",1,msk_immed,rbrace
0D60                HEADER_RBRACE:      
0D60   38 0D                  DW   link   
0D62                LINK:     .SET   HEADER_rbrace   
0D62   81                     DB   msk_immed + 1   
0D63   7D                     DB   "}"   
0D64                RBRACE:      
0D64   CF                     RST   $08   ; enter forth
0D65   43 10                  DW   nestMinus   ; reduce nesting
0D67   10 14 26 04 2B 05      DW   state,fetch,zEqual   
0D6D   2A 14 26 04 2B 05      DW   nesting,fetch,zEqual   
0D73   54 05                  DW   and   
0D75                          ;*Macro unroll:  cIf
0D75   E2 02 00 00            DW   QBRAN,0   
0D79                          ;*Macro unroll:  CPL_PUSH $
0D79                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D79                CPL_10:   .SET   CPL_9   
0D79                CPL_9:    .SET   CPL_8   
0D79                CPL_8:    .SET   CPL_7   
0D79                CPL_7:    .SET   CPL_6   
0D79                CPL_6:    .SET   CPL_5   
0D79                CPL_5:    .SET   CPL_4   
0D79                CPL_4:    .SET   CPL_3   
0D79                CPL_3:    .SET   CPL_2   
0D79                CPL_2:    .SET   CPL_TOP   
0D79                CPL_TOP:   .SET   $   
0D79   0E 03 84 0F 0B 04      DW   lit,exit,comma   ; append exit (so the word will return).
0D7F                          ;*Macro unroll:  cEndIf
0D7F                          ;*Macro unroll:  cBRANCH_FWD
0D7F                CUR_ADR:   .SET   $   
0D77                          .ORG   CPL_TOP - 2   
0D77   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0D7F                          .ORG   CUR_ADR   
0D7F                          ;*Macro unroll:  CPL_POP
0D7F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D7F                CPL_TOP:   .SET   CPL_2   
0D7F                CPL_2:    .SET   CPL_3   
0D7F                CPL_3:    .SET   CPL_4   
0D7F                CPL_4:    .SET   CPL_5   
0D7F                CPL_5:    .SET   CPL_6   
0D7F                CPL_6:    .SET   CPL_7   
0D7F                CPL_7:    .SET   CPL_8   
0D7F                CPL_8:    .SET   CPL_9   
0D7F                CPL_9:    .SET   CPL_10   
0D7F                CPL_10:   .SET   0   
0D7F                          ;*Macro unroll:  EXIT                             ; return from the function.
0D7F   84 0F                  DW   exit   ; return from the function.
0D81   C3 A8 07               JP   enter   
0D84                          ;*Macro unroll: mCODE "}exec",5,msk_immed,rbraceExec
0D84                HEADER_RBRACEEXEC:      
0D84   60 0D                  DW   link   
0D86                LINK:     .SET   HEADER_rbraceExec   
0D86   85                     DB   msk_immed + 5   
0D87   7D 65 78 65 63         DB   "}exec"   
0D8C                RBRACEEXEC:      
0D8C   CF                     RST   $08   ; enter forth
0D8D   64 0D                  DW   rbrace   
0D8F   10 14 26 04 2B 05      DW   state,fetch,zEqual   
0D95   2A 14 26 04 2B 05      DW   nesting,fetch,zEqual   
0D9B   54 05                  DW   and   
0D9D                          ;*Macro unroll:  cIf
0D9D   E2 02 00 00            DW   QBRAN,0   
0DA1                          ;*Macro unroll:  CPL_PUSH $
0DA1                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DA1                CPL_10:   .SET   CPL_9   
0DA1                CPL_9:    .SET   CPL_8   
0DA1                CPL_8:    .SET   CPL_7   
0DA1                CPL_7:    .SET   CPL_6   
0DA1                CPL_6:    .SET   CPL_5   
0DA1                CPL_5:    .SET   CPL_4   
0DA1                CPL_4:    .SET   CPL_3   
0DA1                CPL_3:    .SET   CPL_2   
0DA1                CPL_2:    .SET   CPL_TOP   
0DA1                CPL_TOP:   .SET   $   
0DA1   07 06                  DW   dup   
0DA3   DC 13 EA 03            DW   here,store   
0DA7   52 02                  DW   execute   
0DA9                          ;*Macro unroll:  cEndIf
0DA9                          ;*Macro unroll:  cBRANCH_FWD
0DA9                CUR_ADR:   .SET   $   
0D9F                          .ORG   CPL_TOP - 2   
0D9F   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0DA9                          .ORG   CUR_ADR   
0DA9                          ;*Macro unroll:  CPL_POP
0DA9                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DA9                CPL_TOP:   .SET   CPL_2   
0DA9                CPL_2:    .SET   CPL_3   
0DA9                CPL_3:    .SET   CPL_4   
0DA9                CPL_4:    .SET   CPL_5   
0DA9                CPL_5:    .SET   CPL_6   
0DA9                CPL_6:    .SET   CPL_7   
0DA9                CPL_7:    .SET   CPL_8   
0DA9                CPL_8:    .SET   CPL_9   
0DA9                CPL_9:    .SET   CPL_10   
0DA9                CPL_10:   .SET   0   
0DA9                          ;*Macro unroll:  EXIT                             ; return from the function.
0DA9   84 0F                  DW   exit   ; return from the function.
0DAB   C3 A8 07               JP   enter   
0DAE                             ; 
0DAE                             ; 
0DAE                             ; dictionary words
0DAE                             ; 
0DAE                             ; 
0DAE                          ;*Macro unroll: mCODE ":",1,0,colon
0DAE                HEADER_COLON:      
0DAE   84 0D                  DW   link   
0DB0                LINK:     .SET   HEADER_colon   
0DB0   01                     DB   0 + 1   
0DB1   3A                     DB   ":"   
0DB2                COLON:       
0DB2   CF                     RST   $08   ; enter forth
0DB3   4E 0E                  DW   create   ; create the dictionary entry / header
0DB5   DC 13 26 04            DW   here,fetch   ; back up 3 bytes to start of data area
0DB9   0E 03 03 00 B7 04      DW   lit,3,minus   
0DBF   DC 13 EA 03            DW   here,store   
0DC3   0E 03 CF 00 5E 04      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0DC9   8C 14 26 04 B0 02      DW   latest,fetch,hidden   ; make the word hidden (see below for definition).
0DCF   1D 05                  DW   rbrac   ; go into compile mode.
0DD1                          ;*Macro unroll:  EXIT                                ; return from the function.
0DD1   84 0F                  DW   exit   ; return from the function.
0DD3   C3 A8 07               JP   enter   
0DD6                          ;*Macro unroll: mCODE ";",1,msk_immed,semicolon
0DD6                HEADER_SEMICOLON:      
0DD6   AE 0D                  DW   link   
0DD8                LINK:     .SET   HEADER_semicolon   
0DD8   81                     DB   msk_immed + 1   
0DD9   3B                     DB   ";"   
0DDA                SEMICOLON:      
0DDA   CF                     RST   $08   ; enter forth
0DDB   0E 03 84 0F 0B 04      DW   lit,exit,comma   ; append exit (so the word will return).
0DE1   8C 14 26 04 B0 02      DW   latest,fetch,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
0DE7   10 05                  DW   lbrac   ; go back to immediate mode.
0DE9                          ;*Macro unroll:  EXIT                                ; return from the function.
0DE9   84 0F                  DW   exit   ; return from the function.
0DEB   C3 A8 07               JP   enter   
0DEE                          ;*Macro unroll: mCODE ":noname",7,0,colonNoName
0DEE                HEADER_COLONNONAME:      
0DEE   D6 0D                  DW   link   
0DF0                LINK:     .SET   HEADER_colonNoName   
0DF0   07                     DB   0 + 7   
0DF1   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
0DF8                COLONNONAME:      
0DF8   CF                     RST   $08   ; enter forth
0DF9   DC 13 26 04            DW   here,fetch   ; TOS = here
0DFD   0E 03 CF 00 5E 04      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0E03   1D 05                  DW   rbrac   ; go into compile mode.
0E05                          ;*Macro unroll:  EXIT                                ; return from the function.
0E05   84 0F                  DW   exit   ; return from the function.
0E07   C3 A8 07               JP   enter   
0E0A                          ;*Macro unroll: mCODE "variable",8,0,variable         ; ( n -- ) get name from input
0E0A                HEADER_VARIABLE:      ; ( n -- ) get name from input
0E0A   EE 0D                  DW   link   
0E0C                LINK:     .SET   HEADER_variable   
0E0C   08                     DB   0 + 8   
0E0D   76 61 72 69 61 62 6C 65 DB   "variable"   
0E15                VARIABLE:      
0E15   CF                     RST   $08   ; enter forth
0E16   0E 03 01 00 37 04      DW   lit,1,cells   
0E1C   DC 13 26 04 1B 06      DW   here,fetch,swap   ; n -- here n
0E22   04 0B                  DW   allot   ; allocate n bytes, push addr
0E24   B9 0E                  DW   constant   
0E26                          ;*Macro unroll:  EXIT
0E26   84 0F                  DW   exit   
0E28   C3 A8 07               JP   enter   
0E2B                          ;*Macro unroll: mCODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
0E2B                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
0E2B   0A 0E                  DW   link   
0E2D                LINK:     .SET   HEADER_bufferColon   
0E2D   07                     DB   0 + 7   
0E2E   62 75 66 66 65 72 3A   DB   "buffer:"   
0E35                BUFFERCOLON:      
0E35   CF                     RST   $08   ; enter forth
0E36   DC 13 26 04 1B 06      DW   here,fetch,swap   ; n -- here n
0E3C   04 0B                  DW   allot   ; allocate n bytes, push addr
0E3E   B9 0E                  DW   constant   
0E40                          ;*Macro unroll:  EXIT
0E40   84 0F                  DW   exit   
0E42   C3 A8 07               JP   enter   
0E45                          ;*Macro unroll: mCODE "create",6,0,create             ; --
0E45                HEADER_CREATE:      ; --
0E45   2B 0E                  DW   link   
0E47                LINK:     .SET   HEADER_create   
0E47   06                     DB   0 + 6   
0E48   63 72 65 61 74 65      DB   "create"   
0E4E                CREATE:      
0E4E   CF                     RST   $08   ; enter forth
0E4F   DC 13 26 04            DW   here,fetch   ; get old "here"
0E53   8C 14 26 04 0B 04      DW   latest,fetch,comma   ; write link to previous word to "here"
0E59   8C 14 EA 03            DW   latest,store   ; update latest to old "here"
0E5D   3C 0B B5 0A            DW   bl,word   ; read word token
0E61   8C 04 CA 02 04 0B      DW   cfetch,oneplus,allot   ; 
0E67   0E 03 C3 00 5E 04      DW   lit,jp_opcode,cComma   ; compile default behavious
0E6D   0E 03 78 0E 0B 04      DW   lit,xcreate,comma   ; i.e. push addr of data area
0E73                          ;*Macro unroll:  EXIT                                ; exit from forth
0E73   84 0F                  DW   exit   ; exit from forth
0E75   C3 A8 07               JP   enter   
0E78                XCREATE:      
0E78   CF                     RST   $08   ; enter forth
0E79   8C 06                  DW   rfrom   ; push onto stack
0E7B                          ;*Macro unroll:  EXIT
0E7B   84 0F                  DW   exit   
0E7D   C3 A8 07               JP   enter   
0E80                          ;*Macro unroll: mCODE "does>", 5, msk_immed, does         ; --
0E80                HEADER_DOES:      ; --
0E80   45 0E                  DW   link   
0E82                LINK:     .SET   HEADER_does   
0E82   85                     DB   msk_immed + 5   
0E83   64 6F 65 73 3E         DB   "does>"   
0E88                DOES:        
0E88   CF                     RST   $08   ; enter forth
0E89   0E 03 5D 10 0B 04      DW   lit,xdoes,comma   
0E8F   0E 03 4D 10            DW   lit,dodoes   
0E93   DC 13 26 04            DW   here,fetch   
0E97   0E 03 CD 00            DW   lit,call_opcode   
0E9B   4F 06 3F 04            DW   over,cstore   
0E9F   CA 02 EA 03            DW   oneplus,store   
0EA3   0E 03 03 00 04 0B      DW   lit,3,allot   
0EA9                          ;*Macro unroll:  EXIT
0EA9   84 0F                  DW   exit   
0EAB   C3 A8 07               JP   enter   
0EAE                          ;*Macro unroll: mCODE "constant",8,0,constant         ; --
0EAE                HEADER_CONSTANT:      ; --
0EAE   80 0E                  DW   link   
0EB0                LINK:     .SET   HEADER_constant   
0EB0   08                     DB   0 + 8   
0EB1   63 6F 6E 73 74 61 6E 74 DB   "constant"   
0EB9                CONSTANT:      
0EB9   CF                     RST   $08   ; enter forth
0EBA   4E 0E 0B 04 5D 10      DW   create,comma,xdoes   
0EC0   CF                     RST   $08   
0EC1   8C 06                  DW   rfrom   ; push onto stack
0EC3   26 04                  DW   fetch   
0EC5                          ;*Macro unroll:  EXIT
0EC5   84 0F                  DW   exit   
0EC7   C3 A8 07               JP   enter   
0ECA                             ; 
0ECA                             ; 
0ECA                             ; Firth extended (non-standard) words
0ECA                             ; 
0ECA                             ; 
0ECA                          ;*Macro unroll: mCODE "S[",2,0,beginFrame             ; begin a stack frame
0ECA                HEADER_BEGINFRAME:      ; begin a stack frame
0ECA   AE 0E                  DW   link   
0ECC                LINK:     .SET   HEADER_beginFrame   
0ECC   02                     DB   0 + 2   
0ECD   53 5B                  DB   "S["   
0ECF                BEGINFRAME:      
0ECF   CF                     RST   $08   ; enter forth
0ED0   AF 13 07 06            DW   framePtr,dup   ; addr addr
0ED4   26 04 1B 06            DW   fetch,swap   ; framePtr0 addr
0ED8   DB 10 1B 06            DW   spfetch,swap   ; framePtr0 addr -- framePtr0 paramSP addr
0EDC   EA 03                  DW   store   ; framePtr0 paramSP addr -- framePtr0
0EDE                          ;*Macro unroll:  EXIT                                ; TOS = framePtr0
0EDE   84 0F                  DW   exit   ; TOS = framePtr0
0EE0   C3 A8 07               JP   enter   
0EE3                             ; ]S                                    ; framePtr0 result --
0EE3                          ;*Macro unroll: mCODE "]S",2,0,endFrame               ; end a stack frame
0EE3                HEADER_ENDFRAME:      ; end a stack frame
0EE3   CA 0E                  DW   link   
0EE5                LINK:     .SET   HEADER_endFrame   
0EE5   02                     DB   0 + 2   
0EE6   5D 53                  DB   "]S"   
0EE8                ENDFRAME:      
0EE8   CF                     RST   $08   ; enter forth
0EE9                             ; TOS = framePtr0
0EE9   1B 06 07 06            DW   swap,dup   ; result framePtr0 framePtr0
0EED   AF 13 EA 03            DW   framePtr,store   ; result framePtr0
0EF1   1B 06 4F 06 CA 02      DW   swap,over,oneplus   ; framePtr0 result framePtr0+1
0EF7   EA 03                  DW   store   ; framePtr0
0EF9   F3 10                  DW   spstore   ; store framePtr0 in sp
0EFB                          ;*Macro unroll:  EXIT
0EFB   84 0F                  DW   exit   
0EFD   C3 A8 07               JP   enter   
0F00                          ;*Macro unroll: mCODE "param",5,0,param               ; n -- addr return addr of param n, -ve args, +ve locals
0F00                HEADER_PARAM:      ; n -- addr return addr of param n, -ve args, +ve locals
0F00   E3 0E                  DW   link   
0F02                LINK:     .SET   HEADER_param   
0F02   05                     DB   0 + 5   
0F03   70 61 72 61 6D         DB   "param"   
0F08                PARAM:       
0F08   CF                     RST   $08   ; enter forth
0F09   A6 10 37 04            DW   oneminus,cells   ; n *= 2
0F0D   AF 13 26 04 97 04      DW   framePtr,fetch,plus   
0F13                          ;*Macro unroll:  EXIT
0F13   84 0F                  DW   exit   
0F15   C3 A8 07               JP   enter   
0F18                          ;*Macro unroll: mCODE "p1",2,0,p1                     ;  -- p1addr
0F18                HEADER_P1:      ;  -- p1addr
0F18   00 0F                  DW   link   
0F1A                LINK:     .SET   HEADER_p1   
0F1A   02                     DB   0 + 2   
0F1B   70 31                  DB   "p1"   
0F1D                P1:          
0F1D   CF                     RST   $08   ; enter forth
0F1E   0E 03 FF FF 08 0F 26 04 DW   lit,-1,param,fetch   
0F26                          ;*Macro unroll:  EXIT
0F26   84 0F                  DW   exit   
0F28   C3 A8 07               JP   enter   
0F2B                          ;*Macro unroll: mCODE "p2",2,0,p2                     ;  -- p2addr
0F2B                HEADER_P2:      ;  -- p2addr
0F2B   18 0F                  DW   link   
0F2D                LINK:     .SET   HEADER_p2   
0F2D   02                     DB   0 + 2   
0F2E   70 32                  DB   "p2"   
0F30                P2:          
0F30   CF                     RST   $08   ; enter forth
0F31   0E 03 FE FF 08 0F 26 04 DW   lit,-2,param,fetch   
0F39                          ;*Macro unroll:  EXIT
0F39   84 0F                  DW   exit   
0F3B   C3 A8 07               JP   enter   
0F3E                          ;*Macro unroll: mCODE "p3",2,0,p3                     ;  -- p3addr
0F3E                HEADER_P3:      ;  -- p3addr
0F3E   2B 0F                  DW   link   
0F40                LINK:     .SET   HEADER_p3   
0F40   02                     DB   0 + 2   
0F41   70 33                  DB   "p3"   
0F43                P3:          
0F43   CF                     RST   $08   ; enter forth
0F44   0E 03 FD FF 08 0F 26 04 DW   lit,-3,param,fetch   
0F4C                          ;*Macro unroll:  EXIT
0F4C   84 0F                  DW   exit   
0F4E   C3 A8 07               JP   enter   
0F51                          ;*Macro unroll: mCODE "v1",2,0,v1                     ;  -- v1addr
0F51                HEADER_V1:      ;  -- v1addr
0F51   3E 0F                  DW   link   
0F53                LINK:     .SET   HEADER_v1   
0F53   02                     DB   0 + 2   
0F54   76 31                  DB   "v1"   
0F56                V1:          
0F56   CF                     RST   $08   ; enter forth
0F57   0E 03 01 00 08 0F      DW   lit,1,param   
0F5D                          ;*Macro unroll:  EXIT
0F5D   84 0F                  DW   exit   
0F5F   C3 A8 07               JP   enter   
0F62                          ;*Macro unroll: mCODE "v2",2,0,v2                     ;  -- v2addr
0F62                HEADER_V2:      ;  -- v2addr
0F62   51 0F                  DW   link   
0F64                LINK:     .SET   HEADER_v2   
0F64   02                     DB   0 + 2   
0F65   76 32                  DB   "v2"   
0F67                V2:          
0F67   CF                     RST   $08   ; enter forth
0F68   0E 03 02 00 08 0F      DW   lit,2,param   
0F6E                          ;*Macro unroll:  EXIT
0F6E   84 0F                  DW   exit   
0F70   C3 A8 07               JP   enter   
0F73                          ;*Macro unroll: mCODE "v3",2,0,v3                     ;  -- v3addr
0F73                HEADER_V3:      ;  -- v3addr
0F73   62 0F                  DW   link   
0F75                LINK:     .SET   HEADER_v3   
0F75   02                     DB   0 + 2   
0F76   76 33                  DB   "v3"   
0F78                V3:          
0F78   CF                     RST   $08   ; enter forth
0F79   0E 03 03 00 08 0F      DW   lit,3,param   
0F7F                          ;*Macro unroll:  EXIT
0F7F   84 0F                  DW   exit   
0F81   C3 A8 07               JP   enter   
0F84                             ; mCODE "#base",5,0,hashbase            ; n --      ; switch to basel for one word
0F84                             ;     rst $08
0F84                             ;     dw base,fetch                       ; 16 base0
0F84                             ;     dw swap, base, store                ; base0
0F84                             ;     dw lit, $20, word, count            ; base0 addr length
0F84                             ;     dw dup, zEqual
0F84                             ;     cIf
0F84                             ;         dw drop, drop                   ; base0
0F84                             ;     cElse
0F84                             ;         dw number                       ; base0 value error
0F84                             ;         dw zNotEqual                    ; base0 value
0F84                             ;         dw dup, dot
0F84                             ;         cif
0F84                             ;             dw drop                     ; base0
0F84                             ;             dw litstr
0F84                             ;             .pstr "Error: parsing"
0F84                             ;             dw type
0F84                             ;         cElse
0F84                             ;             dw swap                     ; value base0
0F84                             ;         cEndIf
0F84                             ;     cEndif
0F84                             ;     dw base, store                      ; restore base0
0F84                             ;     EXIT
0F84                             ; mCODE "#h",2,0,hashh                  ; switch to hex for one word
0F84                             ;     ENTER
0F84                             ;     dw lit,16,hashbase
0F84                             ;     EXIT
0F84                             ; mCODE "#d",2,0,hashd                  ; switch to decimal for one word
0F84                             ;     ENTER
0F84                             ;     dw lit,10,hashbase
0F84                             ;     EXIT
0F84                             ; mCODE "define:",7,0,defineColon
0F84                             ;     ENTER
0F84                             ;     dw create                           ; create the dictionary entry / header
0F84                             ;     dw here,fetch                       ; back up 3 bytes to start of data area
0F84                             ;     dw lit, 3, minus
0F84                             ;     dw here, store
0F84                             ;     dw lit, jp_opcode, ccomma          ; write z80 jp opcode to word
0F84                             ;     dw comma                            ; compile address TOS
0F84                             ;     EXIT                             ; return from the function.
0F84                             ; mCODE "stack",6,0,stackColon          ; ( n -- addr ) allocates memory and puts pointer at 0
0F84                             ;     ENTER
0F84                             ;     dw twoPlus, allot                   ; allocate n + 2 bytes, push addr
0F84                             ;     dw dup                              ; addr -- addr addr
0F84                             ;     dw dup, twoPlus, swap, store        ; addr addr -- addr
0F84                             ;     EXIT
0F84                             ; mCODE "stackPush",5,0,stackPush       ; value stack --
0F84                             ;     ENTER
0F84                             ;     dw dup, nrot                        ; value stack - stack value stack
0F84                             ;     dw fetch, dup, nrot                 ; stack value ptr -- stack ptr value ptr
0F84                             ;     dw store                            ; stack ptr value ptr -- stack ptr
0F84                             ;     dw twoplus, swap, store             ; stack ptr --
0F84                             ;     EXIT
0F84                             ; mCODE "stackPop",5,0,stackPop         ; stack -- value
0F84                             ;     ENTER
0F84                             ;     dw dup                              ; stack -- stack stack
0F84                             ;     dw fetch, dup                       ; stack stack -- stack ptr ptr
0F84                             ;     dw fetch, nrot                      ; stack ptr ptr -- value stack ptr
0F84                             ;     dw twominus, swap                   ; value stack ptr -- value ptr stack
0F84                             ;     dw store
0F84                             ;     EXIT
0F84                             ; litIf:
0F84                             ;     rst $08
0F84                             ;     dw rfrom, dup
0F84                             ;     dw lit, 4, plus, tor                ;
0F84                             ;     dw swap
0F84                             ;     cIf
0F84                             ;         dw fetch
0F84                             ;     cElse
0F84                             ;         dw twoplus, fetch
0F84                             ;     cEndif
0F84                             ;     EXIT
0F84                             ; litComma:                               ; pushes ptr to string and length on stack
0F84                             ;     ENTER
0F84                             ;     dw rfrom, dup
0F84                             ;     dw lit, 2, plus, tor
0F84                             ;     dw fetch, comma
0F84                             ;     EXIT
0F84                             ; litCComma:                              ; pushes ptr to string and length on stack
0F84                             ;     ENTER
0F84                             ;     dw rfrom, dup
0F84                             ;     dw lit, 2, plus, tor
0F84                             ;     dw fetch, cComma
0F84                             ;     EXIT
0F84                             ; 
0F84                             ; headless words
0F84                             ; 
0F84                             ; forth words not in dictionary
0F84                             ; 
0F84                EXIT:        
0F84   E1                     POP   HL   
0F85   FD E9                  JP   (IY)   
0F87                EXIT_FORTH:      
0F87   C9                     RET      
0F88                LITSTR:      ; pushes ptr to string and length on stack
0F88   CF                     RST   $08   ; enter forth
0F89   8C 06                  DW   rfrom   
0F8B   EA 0A 4F 06 4F 06 97 04 DW   count,over,over,plus   
0F93   77 06                  DW   tor   
0F95                          ;*Macro unroll:  EXIT
0F95   84 0F                  DW   exit   
0F97   C3 A8 07               JP   enter   
0F9A                INTERPTOKEN:      ; ptr len --
0F9A   CF                     RST   $08   
0F9B   4F 06 4F 06 36 02      DW   over,over,find   ; ptr len -- ptr len addr
0FA1   07 06 40 05            DW   dup,zNotEqual   
0FA5                          ;*Macro unroll:  cIf
0FA5   E2 02 00 00            DW   QBRAN,0   
0FA9                          ;*Macro unroll:  CPL_PUSH $
0FA9                CPL_COUNT:   .SET   CPL_COUNT + 1   
0FA9                CPL_10:   .SET   CPL_9   
0FA9                CPL_9:    .SET   CPL_8   
0FA9                CPL_8:    .SET   CPL_7   
0FA9                CPL_7:    .SET   CPL_6   
0FA9                CPL_6:    .SET   CPL_5   
0FA9                CPL_5:    .SET   CPL_4   
0FA9                CPL_4:    .SET   CPL_3   
0FA9                CPL_3:    .SET   CPL_2   
0FA9                CPL_2:    .SET   CPL_TOP   
0FA9                CPL_TOP:   .SET   $   
0FA9   B6 0F                  DW   interpWord   
0FAB                          ;*Macro unroll:  cElse
0FAB   FF 02 00 00            DW   BRAN,0   
0FAF                          ;*Macro unroll:  cBRANCH_FWD
0FAF                CUR_ADR:   .SET   $   
0FA7                          .ORG   CPL_TOP - 2   
0FA7   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0FAF                          .ORG   CUR_ADR   
0FAF                CPL_TOP:   .SET   $   
0FAF   FA 0F                  DW   interpLiteral   
0FB1                          ;*Macro unroll:  cEndif
0FB1                          ;*Macro unroll:  cBRANCH_FWD
0FB1                CUR_ADR:   .SET   $   
0FAD                          .ORG   CPL_TOP - 2   
0FAD   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0FB1                          .ORG   CUR_ADR   
0FB1                          ;*Macro unroll:  CPL_POP
0FB1                CPL_COUNT:   .SET   CPL_COUNT - 1   
0FB1                CPL_TOP:   .SET   CPL_2   
0FB1                CPL_2:    .SET   CPL_3   
0FB1                CPL_3:    .SET   CPL_4   
0FB1                CPL_4:    .SET   CPL_5   
0FB1                CPL_5:    .SET   CPL_6   
0FB1                CPL_6:    .SET   CPL_7   
0FB1                CPL_7:    .SET   CPL_8   
0FB1                CPL_8:    .SET   CPL_9   
0FB1                CPL_9:    .SET   CPL_10   
0FB1                CPL_10:   .SET   0   
0FB1                          ;*Macro unroll:  EXIT
0FB1   84 0F                  DW   exit   
0FB3   C3 A8 07               JP   enter   
0FB6                INTERPWORD:      ; ptr len addr --
0FB6   CF                     RST   $08   ; enter forth
0FB7   1B 06 3B 06 1B 06 3B 06 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0FBF   07 06 0E 03 02 00 97 04 8C 04 DW   dup,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0FC9   0E 03 80 00 54 05      DW   lit,msk_immed,and   ; ( headptr flags -- headptr immedflag )
0FCF   2B 05                  DW   zEqual   
0FD1                          ;*Macro unroll:  cif
0FD1   E2 02 00 00            DW   QBRAN,0   
0FD5                          ;*Macro unroll:  CPL_PUSH $
0FD5                CPL_COUNT:   .SET   CPL_COUNT + 1   
0FD5                CPL_10:   .SET   CPL_9   
0FD5                CPL_9:    .SET   CPL_8   
0FD5                CPL_8:    .SET   CPL_7   
0FD5                CPL_7:    .SET   CPL_6   
0FD5                CPL_6:    .SET   CPL_5   
0FD5                CPL_5:    .SET   CPL_4   
0FD5                CPL_4:    .SET   CPL_3   
0FD5                CPL_3:    .SET   CPL_2   
0FD5                CPL_2:    .SET   CPL_TOP   
0FD5                CPL_TOP:   .SET   $   
0FD5   CC 0A                  DW   tcfa   ; ( headptr -- xt )
0FD7   10 14 26 04            DW   state,fetch   
0FDB   2A 14 26 04            DW   nesting,fetch   
0FDF   6C 05                  DW   or   
0FE1                          ;*Macro unroll:  cif
0FE1   E2 02 00 00            DW   QBRAN,0   
0FE5                          ;*Macro unroll:  CPL_PUSH $
0FE5                CPL_COUNT:   .SET   CPL_COUNT + 1   
0FE5                CPL_10:   .SET   CPL_9   
0FE5                CPL_9:    .SET   CPL_8   
0FE5                CPL_8:    .SET   CPL_7   
0FE5                CPL_7:    .SET   CPL_6   
0FE5                CPL_6:    .SET   CPL_5   
0FE5                CPL_5:    .SET   CPL_4   
0FE5                CPL_4:    .SET   CPL_3   
0FE5                CPL_3:    .SET   CPL_2   
0FE5                CPL_2:    .SET   CPL_TOP   
0FE5                CPL_TOP:   .SET   $   
0FE5   0B 04                  DW   comma   ; compile xt
0FE7                          ;*Macro unroll:  cElse
0FE7   FF 02 00 00            DW   BRAN,0   
0FEB                          ;*Macro unroll:  cBRANCH_FWD
0FEB                CUR_ADR:   .SET   $   
0FE3                          .ORG   CPL_TOP - 2   
0FE3   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0FEB                          .ORG   CUR_ADR   
0FEB                CPL_TOP:   .SET   $   
0FEB   52 02                  DW   execute   ; execute xt
0FED                          ;*Macro unroll:  cendif
0FED                          ;*Macro unroll:  cBRANCH_FWD
0FED                CUR_ADR:   .SET   $   
0FE9                          .ORG   CPL_TOP - 2   
0FE9   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0FED                          .ORG   CUR_ADR   
0FED                          ;*Macro unroll:  CPL_POP
0FED                CPL_COUNT:   .SET   CPL_COUNT - 1   
0FED                CPL_TOP:   .SET   CPL_2   
0FED                CPL_2:    .SET   CPL_3   
0FED                CPL_3:    .SET   CPL_4   
0FED                CPL_4:    .SET   CPL_5   
0FED                CPL_5:    .SET   CPL_6   
0FED                CPL_6:    .SET   CPL_7   
0FED                CPL_7:    .SET   CPL_8   
0FED                CPL_8:    .SET   CPL_9   
0FED                CPL_9:    .SET   CPL_10   
0FED                CPL_10:   .SET   0   
0FED                          ;*Macro unroll:  cElse
0FED   FF 02 00 00            DW   BRAN,0   
0FF1                          ;*Macro unroll:  cBRANCH_FWD
0FF1                CUR_ADR:   .SET   $   
0FD3                          .ORG   CPL_TOP - 2   
0FD3   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0FF1                          .ORG   CUR_ADR   
0FF1                CPL_TOP:   .SET   $   
0FF1   CC 0A 52 02            DW   tcfa,execute   ; execute xt
0FF5                          ;*Macro unroll:  cendif
0FF5                          ;*Macro unroll:  cBRANCH_FWD
0FF5                CUR_ADR:   .SET   $   
0FEF                          .ORG   CPL_TOP - 2   
0FEF   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0FF5                          .ORG   CUR_ADR   
0FF5                          ;*Macro unroll:  CPL_POP
0FF5                CPL_COUNT:   .SET   CPL_COUNT - 1   
0FF5                CPL_TOP:   .SET   CPL_2   
0FF5                CPL_2:    .SET   CPL_3   
0FF5                CPL_3:    .SET   CPL_4   
0FF5                CPL_4:    .SET   CPL_5   
0FF5                CPL_5:    .SET   CPL_6   
0FF5                CPL_6:    .SET   CPL_7   
0FF5                CPL_7:    .SET   CPL_8   
0FF5                CPL_8:    .SET   CPL_9   
0FF5                CPL_9:    .SET   CPL_10   
0FF5                CPL_10:   .SET   0   
0FF5                          ;*Macro unroll:  EXIT
0FF5   84 0F                  DW   exit   
0FF7   C3 A8 07               JP   enter   
0FFA                INTERPLITERAL:      ; ptr len addr --
0FFA   CF                     RST   $08   ; enter forth
0FFB   3B 06                  DW   drop   ; ptr len addr - ptr len
0FFD   68 02 2B 05            DW   number,zEqual   ; parse to number
1001                          ;*Macro unroll:  cif
1001   E2 02 00 00            DW   QBRAN,0   
1005                          ;*Macro unroll:  CPL_PUSH $
1005                CPL_COUNT:   .SET   CPL_COUNT + 1   
1005                CPL_10:   .SET   CPL_9   
1005                CPL_9:    .SET   CPL_8   
1005                CPL_8:    .SET   CPL_7   
1005                CPL_7:    .SET   CPL_6   
1005                CPL_6:    .SET   CPL_5   
1005                CPL_5:    .SET   CPL_4   
1005                CPL_4:    .SET   CPL_3   
1005                CPL_3:    .SET   CPL_2   
1005                CPL_2:    .SET   CPL_TOP   
1005                CPL_TOP:   .SET   $   
1005   10 14 26 04            DW   state,fetch   
1009   2A 14 26 04            DW   nesting,fetch   
100D   6C 05                  DW   or   
100F                          ;*Macro unroll:  cIf
100F   E2 02 00 00            DW   QBRAN,0   
1013                          ;*Macro unroll:  CPL_PUSH $
1013                CPL_COUNT:   .SET   CPL_COUNT + 1   
1013                CPL_10:   .SET   CPL_9   
1013                CPL_9:    .SET   CPL_8   
1013                CPL_8:    .SET   CPL_7   
1013                CPL_7:    .SET   CPL_6   
1013                CPL_6:    .SET   CPL_5   
1013                CPL_5:    .SET   CPL_4   
1013                CPL_4:    .SET   CPL_3   
1013                CPL_3:    .SET   CPL_2   
1013                CPL_2:    .SET   CPL_TOP   
1013                CPL_TOP:   .SET   $   
1013   0E 03 0E 03            DW   lit,lit   ; (val -- val "lit" )
1017   0B 04 0B 04            DW   comma,comma   ; compile "lit" val
101B                          ;*Macro unroll:  cEndIf
101B                          ;*Macro unroll:  cBRANCH_FWD
101B                CUR_ADR:   .SET   $   
1011                          .ORG   CPL_TOP - 2   
1011   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
101B                          .ORG   CUR_ADR   
101B                          ;*Macro unroll:  CPL_POP
101B                CPL_COUNT:   .SET   CPL_COUNT - 1   
101B                CPL_TOP:   .SET   CPL_2   
101B                CPL_2:    .SET   CPL_3   
101B                CPL_3:    .SET   CPL_4   
101B                CPL_4:    .SET   CPL_5   
101B                CPL_5:    .SET   CPL_6   
101B                CPL_6:    .SET   CPL_7   
101B                CPL_7:    .SET   CPL_8   
101B                CPL_8:    .SET   CPL_9   
101B                CPL_9:    .SET   CPL_10   
101B                CPL_10:   .SET   0   
101B                          ;*Macro unroll:  cElse
101B   FF 02 00 00            DW   BRAN,0   
101F                          ;*Macro unroll:  cBRANCH_FWD
101F                CUR_ADR:   .SET   $   
1003                          .ORG   CPL_TOP - 2   
1003   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
101F                          .ORG   CUR_ADR   
101F                CPL_TOP:   .SET   $   
101F   3B 06                  DW   drop   ; ( ptr len zero -- ptr len ), not found
1021   88 0F                  DW   litstr   ; err != 0, parse error
1023   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
1032   CC 06                  DW   type   
1034                          ;*Macro unroll:  cEndIf
1034                          ;*Macro unroll:  cBRANCH_FWD
1034                CUR_ADR:   .SET   $   
101D                          .ORG   CPL_TOP - 2   
101D   17 00                  DW   CUR_ADR - CPL_TOP + 2   
1034                          .ORG   CUR_ADR   
1034                          ;*Macro unroll:  CPL_POP
1034                CPL_COUNT:   .SET   CPL_COUNT - 1   
1034                CPL_TOP:   .SET   CPL_2   
1034                CPL_2:    .SET   CPL_3   
1034                CPL_3:    .SET   CPL_4   
1034                CPL_4:    .SET   CPL_5   
1034                CPL_5:    .SET   CPL_6   
1034                CPL_6:    .SET   CPL_7   
1034                CPL_7:    .SET   CPL_8   
1034                CPL_8:    .SET   CPL_9   
1034                CPL_9:    .SET   CPL_10   
1034                CPL_10:   .SET   0   
1034                          ;*Macro unroll:  EXIT
1034   84 0F                  DW   exit   
1036   C3 A8 07               JP   enter   
1039                NESTPLUS:      
1039   2A 16 30               LD   HL,(VAR_NESTING)   
103C   23                     INC   HL   
103D   22 16 30               LD   (VAR_NESTING),HL   
1040                          ;*Macro unroll:  NEXT
1040   C3 A8 07               JP   enter   
1043                NESTMINUS:      
1043   2A 16 30               LD   HL,(VAR_NESTING)   
1046   2B                     DEC   HL   
1047   22 16 30               LD   (VAR_NESTING),HL   
104A                          ;*Macro unroll:  NEXT
104A   C3 A8 07               JP   enter   
104D                DODOES:      ; -- a-addr
104D                          ;*Macro unroll:  ppush0 B,C
104D   DD 71 00               LD   (IX+0),C   
1050   DD 23                  INC   IX   
1052   DD 70 00               LD   (IX+0),B   
1055   DD 23                  INC   IX   
1057   E1                     POP   HL   ; parameter field address
1058   C1                     POP   BC   
1059   E5                     PUSH   HL   
105A                          ;*Macro unroll:  NEXT
105A   C3 A8 07               JP   enter   
105D                XDOES:       ; --
105D   CF                     RST   $08   ; enter forth
105E   8C 06                  DW   rfrom   
1060   8C 14 26 04 CC 0A      DW   latest,fetch,tcfa   
1066   0E 03 CD 00            DW   lit,call_opcode   
106A   4F 06 3F 04            DW   over,cstore   
106E   CA 02 EA 03            DW   oneplus,store   
1072                          ;*Macro unroll:  EXIT
1072   84 0F                  DW   exit   
1074   C3 A8 07               JP   enter   
1077                             ; words must preserve: BC, DE, SP, IX
1077                             ; words may destroy: HL, IY, AF, AF", BC", DE" HL"
1077                          ;*Macro unroll: mCODE "words", 5, 0, WORDS
1077                HEADER_WORDS:      
1077   73 0F                  DW   link   
1079                LINK:     .SET   HEADER_WORDS   
1079   05                     DB   0 + 5   
107A   77 6F 72 64 73         DB   "words"   
107F                WORDS:       
107F   C5                     PUSH   BC   
1080   CD 8F 09               CALL   listWords   
1083   C1                     POP   BC   
1084                          ;*Macro unroll:  NEXT
1084   C3 A8 07               JP   enter   
1087                          ;*Macro unroll: mCODE "print",5,0,PRINT
1087                HEADER_PRINT:      
1087   77 10                  DW   link   
1089                LINK:     .SET   HEADER_PRINT   
1089   05                     DB   0 + 5   
108A   70 72 69 6E 74         DB   "print"   
108F                PRINT:       
108F                          ;*Macro unroll:  ppop D,E
108F   50                     LD   D,B   
1090   59                     LD   E,C   
1091                          ;*Macro unroll:  ppop0 B,C
1091   DD 2B                  DEC   IX   
1093   DD 46 00               LD   B,(IX+0)   
1096   DD 2B                  DEC   IX   
1098   DD 4E 00               LD   C,(IX+0)   
109B   CD C4 01               CALL   printPStr   
109E                          ;*Macro unroll:  NEXT
109E   C3 A8 07               JP   enter   
10A1                          ;*Macro unroll: mCODE "1-",2,0,oneMinus
10A1                HEADER_ONEMINUS:      
10A1   87 10                  DW   link   
10A3                LINK:     .SET   HEADER_oneMinus   
10A3   02                     DB   0 + 2   
10A4   31 2D                  DB   "1-"   
10A6                ONEMINUS:      
10A6   0B                     DEC   BC   
10A7                          ;*Macro unroll:  NEXT
10A7   C3 A8 07               JP   enter   
10AA                          ;*Macro unroll: mCODE "2-",2,0,twoMinus
10AA                HEADER_TWOMINUS:      
10AA   A1 10                  DW   link   
10AC                LINK:     .SET   HEADER_twoMinus   
10AC   02                     DB   0 + 2   
10AD   32 2D                  DB   "2-"   
10AF                TWOMINUS:      
10AF   0B                     DEC   BC   
10B0   0B                     DEC   BC   
10B1                          ;*Macro unroll:  NEXT
10B1   C3 A8 07               JP   enter   
10B4                             ; 1*      n1/u1 -- n2/u2            do nothing
10B4                          ;*Macro unroll: mCODE "noop",4,0,noop
10B4                HEADER_NOOP:      
10B4   AA 10                  DW   link   
10B6                LINK:     .SET   HEADER_noop   
10B6   04                     DB   0 + 4   
10B7   6E 6F 6F 70            DB   "noop"   
10BB                NOOP:        
10BB                          ;*Macro unroll:  NEXT
10BB   C3 A8 07               JP   enter   
10BE                             ;z RSP!  a-addr --                  set return stack pointer
10BE                          ;*Macro unroll: mCODE "rsp!",4,0,RSPSTORE
10BE                HEADER_RSPSTORE:      
10BE   B4 10                  DW   link   
10C0                LINK:     .SET   HEADER_RSPSTORE   
10C0   04                     DB   0 + 4   
10C1   72 73 70 21            DB   "rsp!"   
10C5                RSPSTORE:      
10C5                          ;*Macro unroll:  SET_RET_SP B,C
10C5                          ;*Macro unroll:  loadWord H,L, B,C
10C5   69                     LD   L,C   
10C6   60                     LD   H,B   
10C7   F9                     LD   SP,HL   
10C8                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
10C8   DD 2B                  DEC   IX   ; POP TOS
10CA   DD 46 00               LD   B,(IX+0)   
10CD   DD 2B                  DEC   IX   
10CF   DD 4E 00               LD   C,(IX+0)   
10D2                          ;*Macro unroll:  NEXT
10D2   C3 A8 07               JP   enter   
10D5                          ;*Macro unroll: mCODE "sp@",3,0,SPFETCH
10D5                HEADER_SPFETCH:      
10D5   BE 10                  DW   link   
10D7                LINK:     .SET   HEADER_SPFETCH   
10D7   03                     DB   0 + 3   
10D8   73 70 40               DB   "sp@"   
10DB                SPFETCH:      
10DB   DD E5                  PUSH   IX   
10DD   E1                     POP   HL   
10DE                          ;*Macro unroll:  ppush H,L
10DE                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
10DE   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
10E1   DD 23                  INC   IX   
10E3   DD 70 00               LD   (IX+0),B   
10E6   DD 23                  INC   IX   
10E8   44                     LD   B,H   
10E9   4D                     LD   C,L   
10EA                          ;*Macro unroll:  NEXT
10EA   C3 A8 07               JP   enter   
10ED                          ;*Macro unroll: mCODE "sp!",3,0,SPSTORE
10ED                HEADER_SPSTORE:      
10ED   D5 10                  DW   link   
10EF                LINK:     .SET   HEADER_SPSTORE   
10EF   03                     DB   0 + 3   
10F0   73 70 21               DB   "sp!"   
10F3                SPSTORE:      
10F3                          ;*Macro unroll:  ppop H,L
10F3   60                     LD   H,B   
10F4   69                     LD   L,C   
10F5                          ;*Macro unroll:  ppop0 B,C
10F5   DD 2B                  DEC   IX   
10F7   DD 46 00               LD   B,(IX+0)   
10FA   DD 2B                  DEC   IX   
10FC   DD 4E 00               LD   C,(IX+0)   
10FF   E5                     PUSH   HL   
1100   DD E1                  POP   IX   
1102                          ;*Macro unroll:  NEXT
1102   C3 A8 07               JP   enter   
1105                             ; 
1105                             ; 
1105                             ; memory access
1105                             ; 
1105                             ; 
1105                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
1105                          ;*Macro unroll: mCODE "cell+",5,0,CELLPLUS
1105                HEADER_CELLPLUS:      
1105   ED 10                  DW   link   
1107                LINK:     .SET   HEADER_CELLPLUS   
1107   05                     DB   0 + 5   
1108   63 65 6C 6C 2B         DB   "cell+"   
110D                CELLPLUS:      
110D   C3 D3 02               JP   twoplus   
1110                             ; CHAR+    c-addr1 -- c-addr2   add char size to addr
1110                          ;*Macro unroll: mCODE "char+",5,0,CHARPLUS
1110                HEADER_CHARPLUS:      
1110   05 11                  DW   link   
1112                LINK:     .SET   HEADER_CHARPLUS   
1112   05                     DB   0 + 5   
1113   63 68 61 72 2B         DB   "char+"   
1118                CHARPLUS:      
1118   C3 CA 02               JP   oneplus   
111B                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
111B                          ;*Macro unroll: mCODE "chars",5,0,CHARS
111B                HEADER_CHARS:      
111B   10 11                  DW   link   
111D                LINK:     .SET   HEADER_CHARS   
111D   05                     DB   0 + 5   
111E   63 68 61 72 73         DB   "chars"   
1123                CHARS:       
1123   C3 BB 10               JP   noop   
1126                             ; 
1126                             ; 
1126                             ; arithmetic
1126                             ; 
1126                             ; 
1126                             ; */MOD star-slash-mod
1126                             ; 2/      x1 -- x2                  arithmetic right shift
1126                          ;*Macro unroll: mCODE "2/",2,0,TWOSLASH
1126                HEADER_TWOSLASH:      
1126   1B 11                  DW   link   
1128                LINK:     .SET   HEADER_TWOSLASH   
1128   02                     DB   0 + 2   
1129   32 2F                  DB   "2/"   
112B                TWOSLASH:      
112B   CB 28                  SRA   B   
112D   CB 19                  RR   C   
112F                          ;*Macro unroll:  NEXT
112F   C3 A8 07               JP   enter   
1132                             ; LSHIFT  x1 u -- x2       logical L shift u places
1132                          ;*Macro unroll: mCODE "lshift",6,0,lShift
1132                HEADER_LSHIFT:      
1132   26 11                  DW   link   
1134                LINK:     .SET   HEADER_lShift   
1134   06                     DB   0 + 6   
1135   6C 73 68 69 66 74      DB   "lshift"   
113B                LSHIFT:      
113B                          ;*Macro unroll:  ppop0 H,L              ;   NB: hi 8 bits ignored!
113B   DD 2B                  DEC   IX   ;   NB: hi 8 bits ignored!
113D   DD 66 00               LD   H,(IX+0)   
1140   DD 2B                  DEC   IX   
1142   DD 6E 00               LD   L,(IX+0)   
1145   41                     LD   B,C   ; b = loop counter
1146   04                     INC   B   ; test for counter=0 case
1147   18 06                  JR   LSHIFT2   
1149                          ;*Macro unroll:  _do
1149   18 03                  JR   L_M_2302S85   
114B   C3 4B 11               JP   $   
114E                          ;*Macro unroll:  DLOOP_PUSH $
114E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
114E                DLOOP_12:   .SET   DLOOP_11   
114E                DLOOP_11:   .SET   DLOOP_10   
114E                DLOOP_10:   .SET   DLOOP_9   
114E                DLOOP_9:   .SET   DLOOP_8   
114E                DLOOP_8:   .SET   DLOOP_7   
114E                DLOOP_7:   .SET   DLOOP_6   
114E                DLOOP_6:   .SET   DLOOP_5   
114E                DLOOP_5:   .SET   DLOOP_4   
114E                DLOOP_4:   .SET   DLOOP_3   
114E                DLOOP_3:   .SET   DLOOP_2   
114E                DLOOP_2:   .SET   DLOOP_TOP   
114E                DLOOP_TOP:   .SET   $   
114E                L_M_2302S85:      
114E   29                     ADD   HL,HL   ; left shift HL, n times
114F                LSHIFT2:      
114F                          ;*Macro unroll:  _djnz
114F   10 FD                  DJNZ   DLOOP_TOP   
1151                          ;*Macro unroll:  DLOOP_FWD
1151                CUR_ADR:   .SET   $   
114C                          .ORG   DLOOP_TOP - 2   
114C   51 11                  DW   CUR_ADR   
1151                          .ORG   CUR_ADR   
1151                          ;*Macro unroll:  DLOOP_POP
1151                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1151                DLOOP_TOP:   .SET   DLOOP_2   
1151                DLOOP_2:   .SET   DLOOP_3   
1151                DLOOP_3:   .SET   DLOOP_4   
1151                DLOOP_4:   .SET   DLOOP_5   
1151                DLOOP_5:   .SET   DLOOP_6   
1151                DLOOP_6:   .SET   DLOOP_7   
1151                DLOOP_7:   .SET   DLOOP_8   
1151                DLOOP_8:   .SET   DLOOP_9   
1151                DLOOP_9:   .SET   DLOOP_10   
1151                DLOOP_10:   .SET   DLOOP_11   
1151                DLOOP_11:   .SET   DLOOP_12   
1151                DLOOP_12:   .SET   0   
1151                          ;*Macro unroll:  loadWord B,C, H,L     ; result is new TOS
1151   4D                     LD   C,L   ; result is new TOS
1152   44                     LD   B,H   
1153                          ;*Macro unroll:  NEXT
1153   C3 A8 07               JP   enter   
1156                          ;*Macro unroll: mCODE "<<",2,0,ltlt
1156                HEADER_LTLT:      
1156   32 11                  DW   link   
1158                LINK:     .SET   HEADER_ltlt   
1158   02                     DB   0 + 2   
1159   3C 3C                  DB   "<<"   
115B                LTLT:        
115B   18 DE                  JR   lShift   
115D                             ;RSHIFT  x1 u -- x2    logical R shift u places
115D                          ;*Macro unroll: mCODE "rshift",6,0,RSHIFT
115D                HEADER_RSHIFT:      
115D   56 11                  DW   link   
115F                LINK:     .SET   HEADER_RSHIFT   
115F   06                     DB   0 + 6   
1160   72 73 68 69 66 74      DB   "rshift"   
1166                RSHIFT:      
1166                          ;*Macro unroll:  ppop0 H,L         ;   NB: hi 8 bits ignored!
1166   DD 2B                  DEC   IX   ;   NB: hi 8 bits ignored!
1168   DD 66 00               LD   H,(IX+0)   
116B   DD 2B                  DEC   IX   
116D   DD 6E 00               LD   L,(IX+0)   
1170   41                     LD   B,C   ; b = loop counter
1171   04                     INC   B   ; test for counter=0 case
1172   18 09                  JR   RSHIFT2   
1174                          ;*Macro unroll:  _do
1174   18 03                  JR   L_M_2316S101   
1176   C3 76 11               JP   $   
1179                          ;*Macro unroll:  DLOOP_PUSH $
1179                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1179                DLOOP_12:   .SET   DLOOP_11   
1179                DLOOP_11:   .SET   DLOOP_10   
1179                DLOOP_10:   .SET   DLOOP_9   
1179                DLOOP_9:   .SET   DLOOP_8   
1179                DLOOP_8:   .SET   DLOOP_7   
1179                DLOOP_7:   .SET   DLOOP_6   
1179                DLOOP_6:   .SET   DLOOP_5   
1179                DLOOP_5:   .SET   DLOOP_4   
1179                DLOOP_4:   .SET   DLOOP_3   
1179                DLOOP_3:   .SET   DLOOP_2   
1179                DLOOP_2:   .SET   DLOOP_TOP   
1179                DLOOP_TOP:   .SET   $   
1179                L_M_2316S101:      
1179   CB 3C                  SRL   H   ; right shift HL, n times
117B   CB 1D                  RR   L   
117D                RSHIFT2:      
117D                          ;*Macro unroll:  _djnz
117D   10 FA                  DJNZ   DLOOP_TOP   
117F                          ;*Macro unroll:  DLOOP_FWD
117F                CUR_ADR:   .SET   $   
1177                          .ORG   DLOOP_TOP - 2   
1177   7F 11                  DW   CUR_ADR   
117F                          .ORG   CUR_ADR   
117F                          ;*Macro unroll:  DLOOP_POP
117F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
117F                DLOOP_TOP:   .SET   DLOOP_2   
117F                DLOOP_2:   .SET   DLOOP_3   
117F                DLOOP_3:   .SET   DLOOP_4   
117F                DLOOP_4:   .SET   DLOOP_5   
117F                DLOOP_5:   .SET   DLOOP_6   
117F                DLOOP_6:   .SET   DLOOP_7   
117F                DLOOP_7:   .SET   DLOOP_8   
117F                DLOOP_8:   .SET   DLOOP_9   
117F                DLOOP_9:   .SET   DLOOP_10   
117F                DLOOP_10:   .SET   DLOOP_11   
117F                DLOOP_11:   .SET   DLOOP_12   
117F                DLOOP_12:   .SET   0   
117F                          ;*Macro unroll:  loadWord B,C, H,L     ; result is new TOS
117F   4D                     LD   C,L   ; result is new TOS
1180   44                     LD   B,H   
1181                          ;*Macro unroll:  NEXT
1181   C3 A8 07               JP   enter   
1184                          ;*Macro unroll: mCODE ">>",2,0,gtgt
1184                HEADER_GTGT:      
1184   5D 11                  DW   link   
1186                LINK:     .SET   HEADER_gtgt   
1186   02                     DB   0 + 2   
1187   3E 3E                  DB   ">>"   
1189                GTGT:        
1189   18 DB                  JR   rShift   
118B                             ; R@ r-fetch
118B                             ; 
118B                             ; 
118B                             ; definitions
118B                             ; 
118B                             ; 
118B                          ;*Macro unroll: mCODE "immediate",9,MSK_IMMED,IMMEDIATE
118B                HEADER_IMMEDIATE:      
118B   84 11                  DW   link   
118D                LINK:     .SET   HEADER_IMMEDIATE   
118D   89                     DB   MSK_IMMED + 9   
118E   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
1197                IMMEDIATE:      
1197   2A 1E 30               LD   HL,(VAR_LATEST)   ; get head of latest word
119A   23                     INC   HL   ; point to flags byte
119B   23                     INC   HL   
119C   3E 80                  LD   a,MSK_IMMED   
119E   AE                     XOR   (HL)   ; toggle the IMMED bit.
119F   77                     LD   (HL),a   
11A0                          ;*Macro unroll:  NEXT
11A0   C3 A8 07               JP   enter   
11A3                             ; DOES> does
11A3                             ; 
11A3                             ; 
11A3                             ; device
11A3                             ; 
11A3                             ; 
11A3                          ;*Macro unroll: mCODE "accept",6,0,ACCEPT              ; ( addr max -- len )
11A3                HEADER_ACCEPT:      ; ( addr max -- len )
11A3   8B 11                  DW   link   
11A5                LINK:     .SET   HEADER_ACCEPT   
11A5   06                     DB   0 + 6   
11A6   61 63 63 65 70 74      DB   "accept"   
11AC                ACCEPT:      
11AC                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
11AC   50                     LD   D,B   ; max - up to 255
11AD   59                     LD   E,C   
11AE                          ;*Macro unroll:  ppop0 B,C
11AE   DD 2B                  DEC   IX   
11B0   DD 46 00               LD   B,(IX+0)   
11B3   DD 2B                  DEC   IX   
11B5   DD 4E 00               LD   C,(IX+0)   
11B8                          ;*Macro unroll: 	ppop0 H,L                          ; addr
11B8   DD 2B                  DEC   IX   ; addr
11BA   DD 66 00               LD   H,(IX+0)   
11BD   DD 2B                  DEC   IX   
11BF   DD 6E 00               LD   L,(IX+0)   
11C2   CD FF 00               CALL   getline   
11C5                          ;*Macro unroll:  NEXT
11C5   C3 A8 07               JP   enter   
11C8                          ;*Macro unroll: mCODE "key",3,0,KEY                ; ( -- c )
11C8                HEADER_KEY:      ; ( -- c )
11C8   A3 11                  DW   link   
11CA                LINK:     .SET   HEADER_KEY   
11CA   03                     DB   0 + 3   
11CB   6B 65 79               DB   "key"   
11CE                KEY:         
11CE   CD 8F 01               CALL   getKey   
11D1   06 00                  LD   b,0   
11D3   4F                     LD   c,a   
11D4                          ;*Macro unroll:  NEXT
11D4   C3 A8 07               JP   enter   
11D7                          ;*Macro unroll: mCODE "emit",4,0,EMIT              ; print the character on the stack
11D7                HEADER_EMIT:      ; print the character on the stack
11D7   C8 11                  DW   link   
11D9                LINK:     .SET   HEADER_EMIT   
11D9   04                     DB   0 + 4   
11DA   65 6D 69 74            DB   "emit"   
11DE                EMIT:        
11DE   79                     LD   A,C   ; (c -- )
11DF   CD E5 00               CALL   putc   
11E2                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
11E2   DD 2B                  DEC   IX   ; clear stack
11E4   DD 46 00               LD   B,(IX+0)   
11E7   DD 2B                  DEC   IX   
11E9   DD 4E 00               LD   C,(IX+0)   
11EC                          ;*Macro unroll:  NEXT
11EC   C3 A8 07               JP   enter   
11EF                          ;*Macro unroll: mCODE "key?",4,0,QKEY              ; ( -- c )
11EF                HEADER_QKEY:      ; ( -- c )
11EF   D7 11                  DW   link   
11F1                LINK:     .SET   HEADER_QKEY   
11F1   04                     DB   0 + 4   
11F2   6B 65 79 3F            DB   "key?"   
11F6                QKEY:        
11F6                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
11F6   DD 71 00               LD   (IX+0),C   ; save TOS
11F9   DD 23                  INC   IX   
11FB   DD 70 00               LD   (IX+0),B   
11FE   DD 23                  INC   IX   
1200   CD F9 00               CALL   inputReady   
1203   01 01 00               LD   BC,1   ; TOS = true
1206                          ;*Macro unroll:  _if z
1206   CA 0C 12               JP   z,L_M_2364S160   
1209   C3 09 12               JP   $   
120C                          ;*Macro unroll:  STRUC_PUSH $
120C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
120C                STRUC_12:   .SET   STRUC_11   
120C                STRUC_11:   .SET   STRUC_10   
120C                STRUC_10:   .SET   STRUC_9   
120C                STRUC_9:   .SET   STRUC_8   
120C                STRUC_8:   .SET   STRUC_7   
120C                STRUC_7:   .SET   STRUC_6   
120C                STRUC_6:   .SET   STRUC_5   
120C                STRUC_5:   .SET   STRUC_4   
120C                STRUC_4:   .SET   STRUC_3   
120C                STRUC_3:   .SET   STRUC_2   
120C                STRUC_2:   .SET   STRUC_TOP   
120C                STRUC_TOP:   .SET   $   
120C                L_M_2364S160:      
120C   01 00 00               LD   BC,0   ; TOS = false
120F                          ;*Macro unroll:  _endif
120F                          ;*Macro unroll:  STRUC_FWD
120F                CUR_ADR:   .SET   $   
120A                          .ORG   STRUC_TOP - 2   
120A   0F 12                  DW   CUR_ADR   
120F                          .ORG   CUR_ADR   
120F                          ;*Macro unroll:  STRUC_POP
120F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
120F                STRUC_TOP:   .SET   STRUC_2   
120F                STRUC_2:   .SET   STRUC_3   
120F                STRUC_3:   .SET   STRUC_4   
120F                STRUC_4:   .SET   STRUC_5   
120F                STRUC_5:   .SET   STRUC_6   
120F                STRUC_6:   .SET   STRUC_7   
120F                STRUC_7:   .SET   STRUC_8   
120F                STRUC_8:   .SET   STRUC_9   
120F                STRUC_9:   .SET   STRUC_10   
120F                STRUC_10:   .SET   STRUC_11   
120F                STRUC_11:   .SET   STRUC_12   
120F                STRUC_12:   .SET   0   
120F                          ;*Macro unroll:  NEXT
120F   C3 A8 07               JP   enter   
1212                          ;*Macro unroll: mCODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
1212                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
1212   EF 11                  DW   link   
1214                LINK:     .SET   HEADER_pack   
1214   04                     DB   0 + 4   
1215   70 61 63 6B            DB   "pack"   
1219                PACK:        
1219                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
1219   50                     LD   D,B   ; DE = adr2, BC = len
121A   59                     LD   E,C   
121B                          ;*Macro unroll:  ppop0 B,C
121B   DD 2B                  DEC   IX   
121D   DD 46 00               LD   B,(IX+0)   
1220   DD 2B                  DEC   IX   
1222   DD 4E 00               LD   C,(IX+0)   
1225   D5                     PUSH   DE   
1226                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
1226   DD 2B                  DEC   IX   ; HL = adr1
1228   DD 66 00               LD   H,(IX+0)   
122B   DD 2B                  DEC   IX   
122D   DD 6E 00               LD   L,(IX+0)   
1230   79                     LD   A,C   
1231   12                     LD   (DE),A   ; write length byte to adr2
1232   13                     INC   DE   ; adr2 += 1
1233   ED B0                  LDIR      
1235   C1                     POP   BC   ; TOS = adr2
1236                          ;*Macro unroll:  NEXT
1236   C3 A8 07               JP   enter   
1239                             ; extra utilities
1239                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1239                             ; ; toLowercase -  converts ASCII value register A
1239                             ; ; to lowercase
1239                             ; ;
1239                             ; ; params: A = ASCII char
1239                             ; ; returns: A = lowercase ASCII char
1239                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1239                             ; toLowercase:
1239                             ;     cp "A"
1239                             ;     _if nc
1239                             ;         cp "Z" + 1
1239                             ;         _if c
1239                             ;             or $20      ; set bit 6
1239                             ;         _endif
1239                             ;     _endif
1239                             ;     ret
1239                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1239                             ; ; reverseLookup - CFA -> header
1239                             ; ;
1239                             ; ; params: BC = CFA of word
1239                             ; ; returns: DE = found header ptr or 0
1239                             ; ; destroys: AF, HL
1239                             ; ;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
1239                             ; reverseLookup:
1239                             ;     ld DE, (VAR_LATEST)             ; search dictionary backwards from LATEST
1239                             ;     _do
1239                             ;         checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
1239                             ;     _until z
1239                             ;         push DE                     ; save ptr to header
1239                             ;         inc DE                      ; skip over first field
1239                             ;         inc DE
1239                             ;         ld A, (DE)                  ; a = flags+length field
1239                             ;         and MSK_HIDDEN | MSK_LENGTH ; %al = name length
1239                             ;         ld H,0
1239                             ;         ld L,A
1239                             ;         add HL,DE
1239                             ;         or A
1239                             ;         sbc HL,BC
1239                             ;         pop DE
1239                             ;     _until z
1239                             ;         ex DE, HL                   ; load HL with link to previous header
1239                             ;         ld E,(HL)                   ; in dictionary
1239                             ;         inc HL
1239                             ;         ld D,(HL)
1239                             ;     _enddo
1239                             ;     ret
1239                             ; 
1239                             ; extra words
1239                             ; 
1239                             ; forth word defintions
1239                             ; 
1239                          ;*Macro unroll: mCODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
1239                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
1239   12 12                  DW   link   
123B                LINK:     .SET   HEADER_decimal   
123B   07                     DB   0 + 7   
123C   64 65 63 69 6D 61 6C   DB   "decimal"   
1243                DECIMAL:      
1243   CF                     RST   $08   ; enter forth
1244   0E 03 0A 00 57 14 EA 03 DW   lit,10,base,store   
124C                          ;*Macro unroll:  EXIT
124C   84 0F                  DW   exit   
124E   C3 A8 07               JP   enter   
1251                          ;*Macro unroll: mCODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
1251                HEADER_HEX:      ; pushes ptr to string and length on stack
1251   39 12                  DW   link   
1253                LINK:     .SET   HEADER_hex   
1253   03                     DB   0 + 3   
1254   68 65 78               DB   "hex"   
1257                HEX:         
1257   CF                     RST   $08   ; enter forth
1258   0E 03 10 00 57 14 EA 03 DW   lit,16,base,store   
1260                          ;*Macro unroll:  EXIT
1260   84 0F                  DW   exit   
1262   C3 A8 07               JP   enter   
1265                             ; min   n1 n2 -- u                      minimum
1265                          ;*Macro unroll: mCODE "min",3,0,min
1265                HEADER_MIN:      
1265   51 12                  DW   link   
1267                LINK:     .SET   HEADER_min   
1267   03                     DB   0 + 3   
1268   6D 69 6E               DB   "min"   
126B                MIN:         
126B   CF                     RST   $08   
126C   4F 06 4F 06            DW   over,over   
1270   93 03                  DW   lessThan   
1272                          ;*Macro unroll:  cif
1272   E2 02 00 00            DW   QBRAN,0   
1276                          ;*Macro unroll:  CPL_PUSH $
1276                CPL_COUNT:   .SET   CPL_COUNT + 1   
1276                CPL_10:   .SET   CPL_9   
1276                CPL_9:    .SET   CPL_8   
1276                CPL_8:    .SET   CPL_7   
1276                CPL_7:    .SET   CPL_6   
1276                CPL_6:    .SET   CPL_5   
1276                CPL_5:    .SET   CPL_4   
1276                CPL_4:    .SET   CPL_3   
1276                CPL_3:    .SET   CPL_2   
1276                CPL_2:    .SET   CPL_TOP   
1276                CPL_TOP:   .SET   $   
1276   3B 06                  DW   drop   
1278                          ;*Macro unroll:  cElse
1278   FF 02 00 00            DW   BRAN,0   
127C                          ;*Macro unroll:  cBRANCH_FWD
127C                CUR_ADR:   .SET   $   
1274                          .ORG   CPL_TOP - 2   
1274   08 00                  DW   CUR_ADR - CPL_TOP + 2   
127C                          .ORG   CUR_ADR   
127C                CPL_TOP:   .SET   $   
127C   1B 06 3B 06            DW   swap,drop   
1280                          ;*Macro unroll:  cendif
1280                          ;*Macro unroll:  cBRANCH_FWD
1280                CUR_ADR:   .SET   $   
127A                          .ORG   CPL_TOP - 2   
127A   06 00                  DW   CUR_ADR - CPL_TOP + 2   
1280                          .ORG   CUR_ADR   
1280                          ;*Macro unroll:  CPL_POP
1280                CPL_COUNT:   .SET   CPL_COUNT - 1   
1280                CPL_TOP:   .SET   CPL_2   
1280                CPL_2:    .SET   CPL_3   
1280                CPL_3:    .SET   CPL_4   
1280                CPL_4:    .SET   CPL_5   
1280                CPL_5:    .SET   CPL_6   
1280                CPL_6:    .SET   CPL_7   
1280                CPL_7:    .SET   CPL_8   
1280                CPL_8:    .SET   CPL_9   
1280                CPL_9:    .SET   CPL_10   
1280                CPL_10:   .SET   0   
1280                          ;*Macro unroll:  EXIT
1280   84 0F                  DW   exit   
1282   C3 A8 07               JP   enter   
1285                             ; max   n1 n2 -- u                      maximum
1285                          ;*Macro unroll: mCODE "max",3,0,max
1285                HEADER_MAX:      
1285   65 12                  DW   link   
1287                LINK:     .SET   HEADER_max   
1287   03                     DB   0 + 3   
1288   6D 61 78               DB   "max"   
128B                MAX:         
128B   CF                     RST   $08   
128C   4F 06 4F 06            DW   over,over   
1290   93 03                  DW   lessThan   
1292                          ;*Macro unroll:  cif
1292   E2 02 00 00            DW   QBRAN,0   
1296                          ;*Macro unroll:  CPL_PUSH $
1296                CPL_COUNT:   .SET   CPL_COUNT + 1   
1296                CPL_10:   .SET   CPL_9   
1296                CPL_9:    .SET   CPL_8   
1296                CPL_8:    .SET   CPL_7   
1296                CPL_7:    .SET   CPL_6   
1296                CPL_6:    .SET   CPL_5   
1296                CPL_5:    .SET   CPL_4   
1296                CPL_4:    .SET   CPL_3   
1296                CPL_3:    .SET   CPL_2   
1296                CPL_2:    .SET   CPL_TOP   
1296                CPL_TOP:   .SET   $   
1296   1B 06 3B 06            DW   swap,drop   
129A                          ;*Macro unroll:  cElse
129A   FF 02 00 00            DW   BRAN,0   
129E                          ;*Macro unroll:  cBRANCH_FWD
129E                CUR_ADR:   .SET   $   
1294                          .ORG   CPL_TOP - 2   
1294   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
129E                          .ORG   CUR_ADR   
129E                CPL_TOP:   .SET   $   
129E   3B 06                  DW   drop   
12A0                          ;*Macro unroll:  cendif
12A0                          ;*Macro unroll:  cBRANCH_FWD
12A0                CUR_ADR:   .SET   $   
129C                          .ORG   CPL_TOP - 2   
129C   04 00                  DW   CUR_ADR - CPL_TOP + 2   
12A0                          .ORG   CUR_ADR   
12A0                          ;*Macro unroll:  CPL_POP
12A0                CPL_COUNT:   .SET   CPL_COUNT - 1   
12A0                CPL_TOP:   .SET   CPL_2   
12A0                CPL_2:    .SET   CPL_3   
12A0                CPL_3:    .SET   CPL_4   
12A0                CPL_4:    .SET   CPL_5   
12A0                CPL_5:    .SET   CPL_6   
12A0                CPL_6:    .SET   CPL_7   
12A0                CPL_7:    .SET   CPL_8   
12A0                CPL_8:    .SET   CPL_9   
12A0                CPL_9:    .SET   CPL_10   
12A0                CPL_10:   .SET   0   
12A0                          ;*Macro unroll:  EXIT
12A0   84 0F                  DW   exit   
12A2   C3 A8 07               JP   enter   
12A5                             ; .s print stack (non-destructively)
12A5                          ;*Macro unroll: mCODE ".s",2,0,dots                   ; ( -- )
12A5                HEADER_DOTS:      ; ( -- )
12A5   85 12                  DW   link   
12A7                LINK:     .SET   HEADER_dots   
12A7   02                     DB   0 + 2   
12A8   2E 73                  DB   ".s"   
12AA                DOTS:        
12AA   CF                     RST   $08   ; enter forth
12AB   DB 10                  DW   spfetch   ; psp
12AD   40 14 26 04            DW   sp0,fetch   ; psp0
12B1   B7 04                  DW   minus   
12B3   0E 03 00 00 CE 03      DW   lit,0,greaterThan   
12B9                          ;*Macro unroll:  cif
12B9   E2 02 00 00            DW   QBRAN,0   
12BD                          ;*Macro unroll:  CPL_PUSH $
12BD                CPL_COUNT:   .SET   CPL_COUNT + 1   
12BD                CPL_10:   .SET   CPL_9   
12BD                CPL_9:    .SET   CPL_8   
12BD                CPL_8:    .SET   CPL_7   
12BD                CPL_7:    .SET   CPL_6   
12BD                CPL_6:    .SET   CPL_5   
12BD                CPL_5:    .SET   CPL_4   
12BD                CPL_4:    .SET   CPL_3   
12BD                CPL_3:    .SET   CPL_2   
12BD                CPL_2:    .SET   CPL_TOP   
12BD                CPL_TOP:   .SET   $   
12BD   40 14 26 04 0E 03 02 00 97 04 DW   sp0,fetch,lit,2,plus   
12C7                          ;*Macro unroll:  cdo
12C7   FF 02 06 00            DW   BRAN,6   
12CB   FF 02 00 00            DW   BRAN,0   
12CF                          ;*Macro unroll:  CPL_PUSH $
12CF                CPL_COUNT:   .SET   CPL_COUNT + 1   
12CF                CPL_10:   .SET   CPL_9   
12CF                CPL_9:    .SET   CPL_8   
12CF                CPL_8:    .SET   CPL_7   
12CF                CPL_7:    .SET   CPL_6   
12CF                CPL_6:    .SET   CPL_5   
12CF                CPL_5:    .SET   CPL_4   
12CF                CPL_4:    .SET   CPL_3   
12CF                CPL_3:    .SET   CPL_2   
12CF                CPL_2:    .SET   CPL_TOP   
12CF                CPL_TOP:   .SET   $   
12CF   07 06                  DW   dup   
12D1   DB 10 0E 03 02 00 B7 04 DW   spfetch,lit,2,minus   
12D9   1B 06 B7 04 2B 05      DW   swap,minus,zequal   
12DF                          ;*Macro unroll:  cuntil
12DF   2B 05 E2 02 E8 FF      DW   ZEQUAL,QBRAN,CPL_TOP - $ - 8   
12E5   07 06 26 04 A0 06      DW   dup,fetch,dot   
12EB   0E 03 02 00 97 04      DW   lit,2,plus   
12F1                          ;*Macro unroll:  cenddo
12F1   FF 02 DC FF            DW   BRAN,CPL_TOP - $ - 2   
12F5                          ;*Macro unroll:  cBRANCH_FWD
12F5                CUR_ADR:   .SET   $   
12CD                          .ORG   CPL_TOP - 2   
12CD   28 00                  DW   CUR_ADR - CPL_TOP + 2   
12F5                          .ORG   CUR_ADR   
12F5                          ;*Macro unroll:  CPL_POP
12F5                CPL_COUNT:   .SET   CPL_COUNT - 1   
12F5                CPL_TOP:   .SET   CPL_2   
12F5                CPL_2:    .SET   CPL_3   
12F5                CPL_3:    .SET   CPL_4   
12F5                CPL_4:    .SET   CPL_5   
12F5                CPL_5:    .SET   CPL_6   
12F5                CPL_6:    .SET   CPL_7   
12F5                CPL_7:    .SET   CPL_8   
12F5                CPL_8:    .SET   CPL_9   
12F5                CPL_9:    .SET   CPL_10   
12F5                CPL_10:   .SET   0   
12F5   3B 06                  DW   drop   
12F7                          ;*Macro unroll:  cendif
12F7                          ;*Macro unroll:  cBRANCH_FWD
12F7                CUR_ADR:   .SET   $   
12BB                          .ORG   CPL_TOP - 2   
12BB   3C 00                  DW   CUR_ADR - CPL_TOP + 2   
12F7                          .ORG   CUR_ADR   
12F7                          ;*Macro unroll:  CPL_POP
12F7                CPL_COUNT:   .SET   CPL_COUNT - 1   
12F7                CPL_TOP:   .SET   CPL_2   
12F7                CPL_2:    .SET   CPL_3   
12F7                CPL_3:    .SET   CPL_4   
12F7                CPL_4:    .SET   CPL_5   
12F7                CPL_5:    .SET   CPL_6   
12F7                CPL_6:    .SET   CPL_7   
12F7                CPL_7:    .SET   CPL_8   
12F7                CPL_8:    .SET   CPL_9   
12F7                CPL_9:    .SET   CPL_10   
12F7                CPL_10:   .SET   0   
12F7                          ;*Macro unroll:  EXIT
12F7   84 0F                  DW   exit   
12F9   C3 A8 07               JP   enter   
12FC                             ; ." print string"
12FC                          ;*Macro unroll: mCODE {".",$22},2,msk_immed,dotquote
12FC                HEADER_DOTQUOTE:      
12FC   A5 12                  DW   link   
12FE                LINK:     .SET   HEADER_dotquote   
12FE   82                     DB   msk_immed + 2   
12FF   2E 22                  DB   ".",$22   
1301                DOTQUOTE:      
1301   CF                     RST   $08   ; enter forth
1302   E4 0C                  DW   qt   
1304   10 14 26 04 2B 05      DW   state,fetch,zequal   
130A                          ;*Macro unroll:  cIf
130A   E2 02 00 00            DW   QBRAN,0   
130E                          ;*Macro unroll:  CPL_PUSH $
130E                CPL_COUNT:   .SET   CPL_COUNT + 1   
130E                CPL_10:   .SET   CPL_9   
130E                CPL_9:    .SET   CPL_8   
130E                CPL_8:    .SET   CPL_7   
130E                CPL_7:    .SET   CPL_6   
130E                CPL_6:    .SET   CPL_5   
130E                CPL_5:    .SET   CPL_4   
130E                CPL_4:    .SET   CPL_3   
130E                CPL_3:    .SET   CPL_2   
130E                CPL_2:    .SET   CPL_TOP   
130E                CPL_TOP:   .SET   $   
130E   CC 06                  DW   type   
1310                          ;*Macro unroll:  cElse
1310   FF 02 00 00            DW   BRAN,0   
1314                          ;*Macro unroll:  cBRANCH_FWD
1314                CUR_ADR:   .SET   $   
130C                          .ORG   CPL_TOP - 2   
130C   08 00                  DW   CUR_ADR - CPL_TOP + 2   
1314                          .ORG   CUR_ADR   
1314                CPL_TOP:   .SET   $   
1314   0E 03 CC 06 0B 04      DW   lit,type,comma   
131A                          ;*Macro unroll:  cEndIf
131A                          ;*Macro unroll:  cBRANCH_FWD
131A                CUR_ADR:   .SET   $   
1312                          .ORG   CPL_TOP - 2   
1312   08 00                  DW   CUR_ADR - CPL_TOP + 2   
131A                          .ORG   CUR_ADR   
131A                          ;*Macro unroll:  CPL_POP
131A                CPL_COUNT:   .SET   CPL_COUNT - 1   
131A                CPL_TOP:   .SET   CPL_2   
131A                CPL_2:    .SET   CPL_3   
131A                CPL_3:    .SET   CPL_4   
131A                CPL_4:    .SET   CPL_5   
131A                CPL_5:    .SET   CPL_6   
131A                CPL_6:    .SET   CPL_7   
131A                CPL_7:    .SET   CPL_8   
131A                CPL_8:    .SET   CPL_9   
131A                CPL_9:    .SET   CPL_10   
131A                CPL_10:   .SET   0   
131A                          ;*Macro unroll:  EXIT
131A   84 0F                  DW   exit   
131C   C3 A8 07               JP   enter   
131F                             ; mCODE "postpone",8,msk_immed,postpone ; --
131F                             ;     rst $08
131F                             ; 	dw bl, word, count            ; pstr -- ptr len
131F                             ;     dw dup, zEqual
131F                             ;     cIf
131F                             ;         dw drop, drop                   ; ptr len --
131F                             ;     cElse
131F                             ;         dw postponeToken                ; interpret the next word
131F                             ;     cEndif
131F                             ;     EXIT
131F                             ; postponeToken:                          ; --
131F                             ;     rst $08
131F                             ;     dw over, over, find                 ; ptr len -- ptr len addr
131F                             ;     dw dup, zNotEqual
131F                             ;     cIf
131F                             ;         dw postponeWord
131F                             ;     cElse
131F                             ;         dw postponeLiteral
131F                             ;     cEndif
131F                             ;     EXIT
131F                             ; postponeWord:                               ; ( headptr -- )
131F                             ;     rst $08                                 ; enter forth
131F                             ;     dw swap, drop, swap, drop               ; ptr len addr -- addr
131F                             ;     dw dup, lit, 2, plus, cfetch            ; ( headptr -- headptr flags ) add 2 to headptr
131F                             ;     dw lit, msk_immed, and                  ; ( headptr flags -- headptr immedflag )
131F                             ;     dw zEqual
131F                             ;     cIf
131F                             ;         dw lit, lit, comma
131F                             ;         dw tcfa, comma
131F                             ;         dw lit, comma, comma
131F                             ;     cElse
131F                             ;         dw tcfa, comma
131F                             ;     cEndIf
131F                             ;     EXIT
131F                             ; postponeLiteral:                            ; ( ptr len -- )
131F                             ;     rst $08                                 ; enter forth
131F                             ;     dw drop                                 ; ptr len addr - ptr len
131F                             ;     dw number, zEqual                       ; parse to number
131F                             ;     cif
131F                             ;         dw lit, lit                     ; (val -- val "lit" )
131F                             ;         dw comma, comma                 ; compile "lit" val
131F                             ;     cElse
131F                             ;         dw drop                             ; ( ptr len zero -- ptr len ), not found
131F                             ;         dw litstr                           ; err != 0, parse error
131F                             ;         .pstr "Error: parsing"
131F                             ;         dw type
131F                             ;     cEndIf
131F                             ;     EXIT
131F                             ; 
131F                             ; constant words
131F                             ; 
131F                             ; 
131F                          ;*Macro unroll: mCONST "version",7,0,version,1
131F                          ;*Macro unroll: mCODE "version",7,0,version
131F                HEADER_VERSION:      
131F   FC 12                  DW   link   
1321                LINK:     .SET   HEADER_version   
1321   07                     DB   0 + 7   
1322   76 65 72 73 69 6F 6E   DB   "version"   
1329                VERSION:      
1329                          ;*Macro unroll:  ppush0 B,C
1329   DD 71 00               LD   (IX+0),C   
132C   DD 23                  INC   IX   
132E   DD 70 00               LD   (IX+0),B   
1331   DD 23                  INC   IX   
1333   01 01 00               LD   BC,1   
1336                          ;*Macro unroll:  NEXT
1336   C3 A8 07               JP   enter   
1339                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
1339                          ;*Macro unroll: mCODE "r0",2,0,rz
1339                HEADER_RZ:      
1339   1F 13                  DW   link   
133B                LINK:     .SET   HEADER_rz   
133B   02                     DB   0 + 2   
133C   72 30                  DB   "r0"   
133E                RZ:          
133E                          ;*Macro unroll:  ppush0 B,C
133E   DD 71 00               LD   (IX+0),C   
1341   DD 23                  INC   IX   
1343   DD 70 00               LD   (IX+0),B   
1346   DD 23                  INC   IX   
1348   01 00 00               LD   BC,ret_stack   
134B                          ;*Macro unroll:  NEXT
134B   C3 A8 07               JP   enter   
134E                          ;*Macro unroll: mCONST "msk_immed",9,0,__msk_immed,msk_immed
134E                          ;*Macro unroll: mCODE "msk_immed",9,0,__msk_immed
134E                HEADER___MSK_IMMED:      
134E   39 13                  DW   link   
1350                LINK:     .SET   HEADER___msk_immed   
1350   09                     DB   0 + 9   
1351   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
135A                __MSK_IMMED:      
135A                          ;*Macro unroll:  ppush0 B,C
135A   DD 71 00               LD   (IX+0),C   
135D   DD 23                  INC   IX   
135F   DD 70 00               LD   (IX+0),B   
1362   DD 23                  INC   IX   
1364   01 80 00               LD   BC,msk_immed   
1367                          ;*Macro unroll:  NEXT
1367   C3 A8 07               JP   enter   
136A                          ;*Macro unroll: mCONST "msk_hidden",10,0,__msk_hidden,msk_hidden
136A                          ;*Macro unroll: mCODE "msk_hidden",10,0,__msk_hidden
136A                HEADER___MSK_HIDDEN:      
136A   4E 13                  DW   link   
136C                LINK:     .SET   HEADER___msk_hidden   
136C   0A                     DB   0 + 10   
136D   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
1377                __MSK_HIDDEN:      
1377                          ;*Macro unroll:  ppush0 B,C
1377   DD 71 00               LD   (IX+0),C   
137A   DD 23                  INC   IX   
137C   DD 70 00               LD   (IX+0),B   
137F   DD 23                  INC   IX   
1381   01 40 00               LD   BC,msk_hidden   
1384                          ;*Macro unroll:  NEXT
1384   C3 A8 07               JP   enter   
1387                          ;*Macro unroll: mCONST "msk_length",10,0,__msk_length,msk_length
1387                          ;*Macro unroll: mCODE "msk_length",10,0,__msk_length
1387                HEADER___MSK_LENGTH:      
1387   6A 13                  DW   link   
1389                LINK:     .SET   HEADER___msk_length   
1389   0A                     DB   0 + 10   
138A   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
1394                __MSK_LENGTH:      
1394                          ;*Macro unroll:  ppush0 B,C
1394   DD 71 00               LD   (IX+0),C   
1397   DD 23                  INC   IX   
1399   DD 70 00               LD   (IX+0),B   
139C   DD 23                  INC   IX   
139E   01 3F 00               LD   BC,msk_length   
13A1                          ;*Macro unroll:  NEXT
13A1   C3 A8 07               JP   enter   
13A4                             ; 
13A4                             ; variable words
13A4                             ; 
13A4                             ; "latest" must be the last word defined
13A4                             ; 
13A4                          ;*Macro unroll: mVAR "framePtr", 8, 0, framePtr, var_framePtr
13A4                          ;*Macro unroll: mCODE "framePtr",8,0,framePtr
13A4                HEADER_FRAMEPTR:      
13A4   87 13                  DW   link   
13A6                LINK:     .SET   HEADER_framePtr   
13A6   08                     DB   0 + 8   
13A7   66 72 61 6D 65 50 74 72 DB   "framePtr"   
13AF                FRAMEPTR:      
13AF                          ;*Macro unroll:  ppush0 B,C
13AF   DD 71 00               LD   (IX+0),C   
13B2   DD 23                  INC   IX   
13B4   DD 70 00               LD   (IX+0),B   
13B7   DD 23                  INC   IX   
13B9   01 8E 2F               LD   BC,var_framePtr   
13BC                          ;*Macro unroll:  NEXT
13BC   C3 A8 07               JP   enter   
13BF                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
13BF                          ;*Macro unroll: mCODE "pad",3,0,pad
13BF                HEADER_PAD:      
13BF   A4 13                  DW   link   
13C1                LINK:     .SET   HEADER_pad   
13C1   03                     DB   0 + 3   
13C2   70 61 64               DB   "pad"   
13C5                PAD:         
13C5                          ;*Macro unroll:  ppush0 B,C
13C5   DD 71 00               LD   (IX+0),C   
13C8   DD 23                  INC   IX   
13CA   DD 70 00               LD   (IX+0),B   
13CD   DD 23                  INC   IX   
13CF   01 90 2F               LD   BC,var_pad   
13D2                          ;*Macro unroll:  NEXT
13D2   C3 A8 07               JP   enter   
13D5                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
13D5                          ;*Macro unroll: mCODE "here",4,0,here
13D5                HEADER_HERE:      
13D5   BF 13                  DW   link   
13D7                LINK:     .SET   HEADER_here   
13D7   04                     DB   0 + 4   
13D8   68 65 72 65            DB   "here"   
13DC                HERE:        
13DC                          ;*Macro unroll:  ppush0 B,C
13DC   DD 71 00               LD   (IX+0),C   
13DF   DD 23                  INC   IX   
13E1   DD 70 00               LD   (IX+0),B   
13E4   DD 23                  INC   IX   
13E6   01 10 30               LD   BC,var_here   
13E9                          ;*Macro unroll:  NEXT
13E9   C3 A8 07               JP   enter   
13EC                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
13EC                          ;*Macro unroll: mCODE "intp_stop",9,0,intp_stop
13EC                HEADER_INTP_STOP:      
13EC   D5 13                  DW   link   
13EE                LINK:     .SET   HEADER_intp_stop   
13EE   09                     DB   0 + 9   
13EF   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
13F8                INTP_STOP:      
13F8                          ;*Macro unroll:  ppush0 B,C
13F8   DD 71 00               LD   (IX+0),C   
13FB   DD 23                  INC   IX   
13FD   DD 70 00               LD   (IX+0),B   
1400   DD 23                  INC   IX   
1402   01 12 30               LD   BC,var_intp_stop   
1405                          ;*Macro unroll:  NEXT
1405   C3 A8 07               JP   enter   
1408                          ;*Macro unroll: mVAR "state",5,0,state, var_state
1408                          ;*Macro unroll: mCODE "state",5,0,state
1408                HEADER_STATE:      
1408   EC 13                  DW   link   
140A                LINK:     .SET   HEADER_state   
140A   05                     DB   0 + 5   
140B   73 74 61 74 65         DB   "state"   
1410                STATE:       
1410                          ;*Macro unroll:  ppush0 B,C
1410   DD 71 00               LD   (IX+0),C   
1413   DD 23                  INC   IX   
1415   DD 70 00               LD   (IX+0),B   
1418   DD 23                  INC   IX   
141A   01 14 30               LD   BC,var_state   
141D                          ;*Macro unroll:  NEXT
141D   C3 A8 07               JP   enter   
1420                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
1420                          ;*Macro unroll: mCODE "nesting",7,0,nesting
1420                HEADER_NESTING:      
1420   08 14                  DW   link   
1422                LINK:     .SET   HEADER_nesting   
1422   07                     DB   0 + 7   
1423   6E 65 73 74 69 6E 67   DB   "nesting"   
142A                NESTING:      
142A                          ;*Macro unroll:  ppush0 B,C
142A   DD 71 00               LD   (IX+0),C   
142D   DD 23                  INC   IX   
142F   DD 70 00               LD   (IX+0),B   
1432   DD 23                  INC   IX   
1434   01 16 30               LD   BC,var_nesting   
1437                          ;*Macro unroll:  NEXT
1437   C3 A8 07               JP   enter   
143A                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
143A                          ;*Macro unroll: mCODE "sp0",3,0,sp0
143A                HEADER_SP0:      
143A   20 14                  DW   link   
143C                LINK:     .SET   HEADER_sp0   
143C   03                     DB   0 + 3   
143D   73 70 30               DB   "sp0"   
1440                SP0:         
1440                          ;*Macro unroll:  ppush0 B,C
1440   DD 71 00               LD   (IX+0),C   
1443   DD 23                  INC   IX   
1445   DD 70 00               LD   (IX+0),B   
1448   DD 23                  INC   IX   
144A   01 18 30               LD   BC,var_sp0   
144D                          ;*Macro unroll:  NEXT
144D   C3 A8 07               JP   enter   
1450                          ;*Macro unroll: mVAR "base",4,0,base, var_base
1450                          ;*Macro unroll: mCODE "base",4,0,base
1450                HEADER_BASE:      
1450   3A 14                  DW   link   
1452                LINK:     .SET   HEADER_base   
1452   04                     DB   0 + 4   
1453   62 61 73 65            DB   "base"   
1457                BASE:        
1457                          ;*Macro unroll:  ppush0 B,C
1457   DD 71 00               LD   (IX+0),C   
145A   DD 23                  INC   IX   
145C   DD 70 00               LD   (IX+0),B   
145F   DD 23                  INC   IX   
1461   01 1A 30               LD   BC,var_base   
1464                          ;*Macro unroll:  NEXT
1464   C3 A8 07               JP   enter   
1467                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
1467                          ;*Macro unroll: mCODE "latestStr",6,0,latestStr
1467                HEADER_LATESTSTR:      
1467   50 14                  DW   link   
1469                LINK:     .SET   HEADER_latestStr   
1469   06                     DB   0 + 6   
146A   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
1473                LATESTSTR:      
1473                          ;*Macro unroll:  ppush0 B,C
1473   DD 71 00               LD   (IX+0),C   
1476   DD 23                  INC   IX   
1478   DD 70 00               LD   (IX+0),B   
147B   DD 23                  INC   IX   
147D   01 1C 30               LD   BC,var_latest_str   
1480                          ;*Macro unroll:  NEXT
1480   C3 A8 07               JP   enter   
1483                          ;*Macro unroll: mVAR "latest",6,0,latest, var_latest
1483                          ;*Macro unroll: mCODE "latest",6,0,latest
1483                HEADER_LATEST:      
1483   67 14                  DW   link   
1485                LINK:     .SET   HEADER_latest   
1485   06                     DB   0 + 6   
1486   6C 61 74 65 73 74      DB   "latest"   
148C                LATEST:      
148C                          ;*Macro unroll:  ppush0 B,C
148C   DD 71 00               LD   (IX+0),C   
148F   DD 23                  INC   IX   
1491   DD 70 00               LD   (IX+0),B   
1494   DD 23                  INC   IX   
1496   01 1E 30               LD   BC,var_latest   
1499                          ;*Macro unroll:  NEXT
1499   C3 A8 07               JP   enter   
149C                START:       
149C   31 00 00               LD   SP,RET_STACK   ; Initialise the return stack.
149F   CD 67 00               CALL   initSerial   
14A2   CD 6A 07               CALL   initForth   
14A5                          IF   TESTMODE   
14A5   C3 00 20               JP   TESTS_START   
14A8                          ELSE      
                              ;*Macro unroll:  PRINT_STR TXT_INTRO
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,TXT_INTRO   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              JP   QUIT   
14A8                          ENDIF      
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
2000                TESTS_START:      
2000                             ; 
2000                             ; test-macros
2000                             ; 
2000                             ; macros to facilitate tests
2000                             ; 
2000                .macro TEST_SET_TEXT,s1
2000                             ; 
2000                 ld HL, (lineBufStart)
2000                 ld (lineBufTop),HL
2000                 ld (currkey),HL
2000                 ld HL, tst_text%%M
2000                 ld (char_pointer), HL
2000                 _skip
2000                tst_text%%M:
2000                 db s1,"\r\n",-1,"\r\n"
2000                 _endskip
2000                .endm
2000                 
2000                             ; prevents using _if macro here
2000                .macro EXPECT,expect,failtxt
2000                             ; 
2000                 call printNum
2000                 loadWord H,L, B,C
2000                 ld L, C
2000                 ppop0 B,C
2000                 CMP16 expect
2000                 jp z, tf_done%%M            ; asm80 macro nesting issue
2000                 ld DE, FAILED
2000                 call printPStr
2000                 ld DE, te_fail%%M
2000                 call printPStr
2000                 halt
2000                 _skip
2000                te_fail%%M:
2000                 .pstr failtxt
2000                 _endskip
2000                tf_done%%M:
2000                .endm
2000                 
2000                          ENDIF      
2000                          IF   TESTMODE = 1   
2000                             ; 
2000                             ; tests
2000                             ; 
2000                             ; these tests will evaluate when TESTMODE = 1
2000                             ; 
2000                          ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
2000   2A 02 2E               LD   HL,(lineBufStart)   
2003   22 08 2E               LD   (lineBufTop),HL   
2006   22 06 2E               LD   (currkey),HL   
2009   21 12 20               LD   HL,tst_textM_2622S7   
200C   22 20 30               LD   (char_pointer),HL   
200F                          ;*Macro unroll:  _skip
200F   C3 0F 20               JP   $   
2012                          ;*Macro unroll:  STRUC_PUSH $
2012                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2012                STRUC_12:   .SET   STRUC_11   
2012                STRUC_11:   .SET   STRUC_10   
2012                STRUC_10:   .SET   STRUC_9   
2012                STRUC_9:   .SET   STRUC_8   
2012                STRUC_8:   .SET   STRUC_7   
2012                STRUC_7:   .SET   STRUC_6   
2012                STRUC_6:   .SET   STRUC_5   
2012                STRUC_5:   .SET   STRUC_4   
2012                STRUC_4:   .SET   STRUC_3   
2012                STRUC_3:   .SET   STRUC_2   
2012                STRUC_2:   .SET   STRUC_TOP   
2012                STRUC_TOP:   .SET   $   
2012                TST_TEXTM_2622S7:      
2012   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 2C 20 64 6F 65 73 3E 20 40 20 3B 0D 0A FF 0D 0A DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
2031                          ;*Macro unroll:  _endskip
2031                          ;*Macro unroll:  STRUC_FWD
2031                CUR_ADR:   .SET   $   
2010                          .ORG   STRUC_TOP - 2   
2010   31 20                  DW   CUR_ADR   
2031                          .ORG   CUR_ADR   
2031                          ;*Macro unroll:  STRUC_POP
2031                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2031                STRUC_TOP:   .SET   STRUC_2   
2031                STRUC_2:   .SET   STRUC_3   
2031                STRUC_3:   .SET   STRUC_4   
2031                STRUC_4:   .SET   STRUC_5   
2031                STRUC_5:   .SET   STRUC_6   
2031                STRUC_6:   .SET   STRUC_7   
2031                STRUC_7:   .SET   STRUC_8   
2031                STRUC_8:   .SET   STRUC_9   
2031                STRUC_9:   .SET   STRUC_10   
2031                STRUC_10:   .SET   STRUC_11   
2031                STRUC_11:   .SET   STRUC_12   
2031                STRUC_12:   .SET   0   
2031                          ;*Macro unroll: INTERPRET
2031   CF                     RST   $08   
2032   52 0B                  DW   interpret   
2034   87 0F                  DW   exit_forth   
2036                          ;*Macro unroll: TEST_SET_TEXT "100 const y"
2036   2A 02 2E               LD   HL,(lineBufStart)   
2039   22 08 2E               LD   (lineBufTop),HL   
203C   22 06 2E               LD   (currkey),HL   
203F   21 48 20               LD   HL,tst_textM_2624S9   
2042   22 20 30               LD   (char_pointer),HL   
2045                          ;*Macro unroll:  _skip
2045   C3 45 20               JP   $   
2048                          ;*Macro unroll:  STRUC_PUSH $
2048                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2048                STRUC_12:   .SET   STRUC_11   
2048                STRUC_11:   .SET   STRUC_10   
2048                STRUC_10:   .SET   STRUC_9   
2048                STRUC_9:   .SET   STRUC_8   
2048                STRUC_8:   .SET   STRUC_7   
2048                STRUC_7:   .SET   STRUC_6   
2048                STRUC_6:   .SET   STRUC_5   
2048                STRUC_5:   .SET   STRUC_4   
2048                STRUC_4:   .SET   STRUC_3   
2048                STRUC_3:   .SET   STRUC_2   
2048                STRUC_2:   .SET   STRUC_TOP   
2048                STRUC_TOP:   .SET   $   
2048                TST_TEXTM_2624S9:      
2048   31 30 30 20 63 6F 6E 73 74 20 79 0D 0A FF 0D 0A DB   "100 const y","\r\n",-1,"\r\n"   
2058                          ;*Macro unroll:  _endskip
2058                          ;*Macro unroll:  STRUC_FWD
2058                CUR_ADR:   .SET   $   
2046                          .ORG   STRUC_TOP - 2   
2046   58 20                  DW   CUR_ADR   
2058                          .ORG   CUR_ADR   
2058                          ;*Macro unroll:  STRUC_POP
2058                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2058                STRUC_TOP:   .SET   STRUC_2   
2058                STRUC_2:   .SET   STRUC_3   
2058                STRUC_3:   .SET   STRUC_4   
2058                STRUC_4:   .SET   STRUC_5   
2058                STRUC_5:   .SET   STRUC_6   
2058                STRUC_6:   .SET   STRUC_7   
2058                STRUC_7:   .SET   STRUC_8   
2058                STRUC_8:   .SET   STRUC_9   
2058                STRUC_9:   .SET   STRUC_10   
2058                STRUC_10:   .SET   STRUC_11   
2058                STRUC_11:   .SET   STRUC_12   
2058                STRUC_12:   .SET   0   
2058                          ;*Macro unroll: INTERPRET
2058   CF                     RST   $08   
2059   52 0B                  DW   interpret   
205B   87 0F                  DW   exit_forth   
205D                          ;*Macro unroll: TEST_SET_TEXT "y"
205D   2A 02 2E               LD   HL,(lineBufStart)   
2060   22 08 2E               LD   (lineBufTop),HL   
2063   22 06 2E               LD   (currkey),HL   
2066   21 6F 20               LD   HL,tst_textM_2626S11   
2069   22 20 30               LD   (char_pointer),HL   
206C                          ;*Macro unroll:  _skip
206C   C3 6C 20               JP   $   
206F                          ;*Macro unroll:  STRUC_PUSH $
206F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
206F                STRUC_12:   .SET   STRUC_11   
206F                STRUC_11:   .SET   STRUC_10   
206F                STRUC_10:   .SET   STRUC_9   
206F                STRUC_9:   .SET   STRUC_8   
206F                STRUC_8:   .SET   STRUC_7   
206F                STRUC_7:   .SET   STRUC_6   
206F                STRUC_6:   .SET   STRUC_5   
206F                STRUC_5:   .SET   STRUC_4   
206F                STRUC_4:   .SET   STRUC_3   
206F                STRUC_3:   .SET   STRUC_2   
206F                STRUC_2:   .SET   STRUC_TOP   
206F                STRUC_TOP:   .SET   $   
206F                TST_TEXTM_2626S11:      
206F   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2075                          ;*Macro unroll:  _endskip
2075                          ;*Macro unroll:  STRUC_FWD
2075                CUR_ADR:   .SET   $   
206D                          .ORG   STRUC_TOP - 2   
206D   75 20                  DW   CUR_ADR   
2075                          .ORG   CUR_ADR   
2075                          ;*Macro unroll:  STRUC_POP
2075                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2075                STRUC_TOP:   .SET   STRUC_2   
2075                STRUC_2:   .SET   STRUC_3   
2075                STRUC_3:   .SET   STRUC_4   
2075                STRUC_4:   .SET   STRUC_5   
2075                STRUC_5:   .SET   STRUC_6   
2075                STRUC_6:   .SET   STRUC_7   
2075                STRUC_7:   .SET   STRUC_8   
2075                STRUC_8:   .SET   STRUC_9   
2075                STRUC_9:   .SET   STRUC_10   
2075                STRUC_10:   .SET   STRUC_11   
2075                STRUC_11:   .SET   STRUC_12   
2075                STRUC_12:   .SET   0   
2075                          ;*Macro unroll: INTERPRET
2075   CF                     RST   $08   
2076   52 0B                  DW   interpret   
2078   87 0F                  DW   exit_forth   
207A                          ;*Macro unroll: EXPECT 100, "expect 100"
207A   CD B9 07               CALL   printNum   
207D                          ;*Macro unroll:  loadWord H,L, B,C
207D   69                     LD   L,C   
207E   60                     LD   H,B   
207F   69                     LD   L,C   
2080                          ;*Macro unroll:  ppop0 B,C
2080   DD 2B                  DEC   IX   
2082   DD 46 00               LD   B,(IX+0)   
2085   DD 2B                  DEC   IX   
2087   DD 4E 00               LD   C,(IX+0)   
208A                          ;*Macro unroll:  CMP16 100
208A   11 64 00               LD   DE,100   
208D   B7                     OR   A   
208E   ED 52                  SBC   HL,DE   
2090                          ;*Macro unroll:  checkZeroWord H,L
2090   7D                     LD   A,L   
2091   B4                     OR   H   
2092   CA AD 20               JP   z,tf_doneM_2628S13   
2095   11 3B 07               LD   DE,FAILED   
2098   CD C4 01               CALL   printPStr   
209B   11 A5 20               LD   DE,te_failM_2628S13   
209E   CD C4 01               CALL   printPStr   
20A1   76                     HALT      
20A2                          ;*Macro unroll:  _skip
20A2   C3 A2 20               JP   $   
20A5                          ;*Macro unroll:  STRUC_PUSH $
20A5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20A5                STRUC_12:   .SET   STRUC_11   
20A5                STRUC_11:   .SET   STRUC_10   
20A5                STRUC_10:   .SET   STRUC_9   
20A5                STRUC_9:   .SET   STRUC_8   
20A5                STRUC_8:   .SET   STRUC_7   
20A5                STRUC_7:   .SET   STRUC_6   
20A5                STRUC_6:   .SET   STRUC_5   
20A5                STRUC_5:   .SET   STRUC_4   
20A5                STRUC_4:   .SET   STRUC_3   
20A5                STRUC_3:   .SET   STRUC_2   
20A5                STRUC_2:   .SET   STRUC_TOP   
20A5                STRUC_TOP:   .SET   $   
20A5                TE_FAILM_2628S13:      
20A5   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
20AD                          ;*Macro unroll:  _endskip
20AD                          ;*Macro unroll:  STRUC_FWD
20AD                CUR_ADR:   .SET   $   
20A3                          .ORG   STRUC_TOP - 2   
20A3   AD 20                  DW   CUR_ADR   
20AD                          .ORG   CUR_ADR   
20AD                          ;*Macro unroll:  STRUC_POP
20AD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20AD                STRUC_TOP:   .SET   STRUC_2   
20AD                STRUC_2:   .SET   STRUC_3   
20AD                STRUC_3:   .SET   STRUC_4   
20AD                STRUC_4:   .SET   STRUC_5   
20AD                STRUC_5:   .SET   STRUC_6   
20AD                STRUC_6:   .SET   STRUC_7   
20AD                STRUC_7:   .SET   STRUC_8   
20AD                STRUC_8:   .SET   STRUC_9   
20AD                STRUC_9:   .SET   STRUC_10   
20AD                STRUC_10:   .SET   STRUC_11   
20AD                STRUC_11:   .SET   STRUC_12   
20AD                STRUC_12:   .SET   0   
20AD                TF_DONEM_2628S13:      
20AD                          ;*Macro unroll: TEST_SET_TEXT "100 constant y"
20AD   2A 02 2E               LD   HL,(lineBufStart)   
20B0   22 08 2E               LD   (lineBufTop),HL   
20B3   22 06 2E               LD   (currkey),HL   
20B6   21 BF 20               LD   HL,tst_textM_2629S15   
20B9   22 20 30               LD   (char_pointer),HL   
20BC                          ;*Macro unroll:  _skip
20BC   C3 BC 20               JP   $   
20BF                          ;*Macro unroll:  STRUC_PUSH $
20BF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20BF                STRUC_12:   .SET   STRUC_11   
20BF                STRUC_11:   .SET   STRUC_10   
20BF                STRUC_10:   .SET   STRUC_9   
20BF                STRUC_9:   .SET   STRUC_8   
20BF                STRUC_8:   .SET   STRUC_7   
20BF                STRUC_7:   .SET   STRUC_6   
20BF                STRUC_6:   .SET   STRUC_5   
20BF                STRUC_5:   .SET   STRUC_4   
20BF                STRUC_4:   .SET   STRUC_3   
20BF                STRUC_3:   .SET   STRUC_2   
20BF                STRUC_2:   .SET   STRUC_TOP   
20BF                STRUC_TOP:   .SET   $   
20BF                TST_TEXTM_2629S15:      
20BF   31 30 30 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "100 constant y","\r\n",-1,"\r\n"   
20D2                          ;*Macro unroll:  _endskip
20D2                          ;*Macro unroll:  STRUC_FWD
20D2                CUR_ADR:   .SET   $   
20BD                          .ORG   STRUC_TOP - 2   
20BD   D2 20                  DW   CUR_ADR   
20D2                          .ORG   CUR_ADR   
20D2                          ;*Macro unroll:  STRUC_POP
20D2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20D2                STRUC_TOP:   .SET   STRUC_2   
20D2                STRUC_2:   .SET   STRUC_3   
20D2                STRUC_3:   .SET   STRUC_4   
20D2                STRUC_4:   .SET   STRUC_5   
20D2                STRUC_5:   .SET   STRUC_6   
20D2                STRUC_6:   .SET   STRUC_7   
20D2                STRUC_7:   .SET   STRUC_8   
20D2                STRUC_8:   .SET   STRUC_9   
20D2                STRUC_9:   .SET   STRUC_10   
20D2                STRUC_10:   .SET   STRUC_11   
20D2                STRUC_11:   .SET   STRUC_12   
20D2                STRUC_12:   .SET   0   
20D2                          ;*Macro unroll: INTERPRET
20D2   CF                     RST   $08   
20D3   52 0B                  DW   interpret   
20D5   87 0F                  DW   exit_forth   
20D7                          ;*Macro unroll: TEST_SET_TEXT "y"
20D7   2A 02 2E               LD   HL,(lineBufStart)   
20DA   22 08 2E               LD   (lineBufTop),HL   
20DD   22 06 2E               LD   (currkey),HL   
20E0   21 E9 20               LD   HL,tst_textM_2631S17   
20E3   22 20 30               LD   (char_pointer),HL   
20E6                          ;*Macro unroll:  _skip
20E6   C3 E6 20               JP   $   
20E9                          ;*Macro unroll:  STRUC_PUSH $
20E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20E9                STRUC_12:   .SET   STRUC_11   
20E9                STRUC_11:   .SET   STRUC_10   
20E9                STRUC_10:   .SET   STRUC_9   
20E9                STRUC_9:   .SET   STRUC_8   
20E9                STRUC_8:   .SET   STRUC_7   
20E9                STRUC_7:   .SET   STRUC_6   
20E9                STRUC_6:   .SET   STRUC_5   
20E9                STRUC_5:   .SET   STRUC_4   
20E9                STRUC_4:   .SET   STRUC_3   
20E9                STRUC_3:   .SET   STRUC_2   
20E9                STRUC_2:   .SET   STRUC_TOP   
20E9                STRUC_TOP:   .SET   $   
20E9                TST_TEXTM_2631S17:      
20E9   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
20EF                          ;*Macro unroll:  _endskip
20EF                          ;*Macro unroll:  STRUC_FWD
20EF                CUR_ADR:   .SET   $   
20E7                          .ORG   STRUC_TOP - 2   
20E7   EF 20                  DW   CUR_ADR   
20EF                          .ORG   CUR_ADR   
20EF                          ;*Macro unroll:  STRUC_POP
20EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20EF                STRUC_TOP:   .SET   STRUC_2   
20EF                STRUC_2:   .SET   STRUC_3   
20EF                STRUC_3:   .SET   STRUC_4   
20EF                STRUC_4:   .SET   STRUC_5   
20EF                STRUC_5:   .SET   STRUC_6   
20EF                STRUC_6:   .SET   STRUC_7   
20EF                STRUC_7:   .SET   STRUC_8   
20EF                STRUC_8:   .SET   STRUC_9   
20EF                STRUC_9:   .SET   STRUC_10   
20EF                STRUC_10:   .SET   STRUC_11   
20EF                STRUC_11:   .SET   STRUC_12   
20EF                STRUC_12:   .SET   0   
20EF                          ;*Macro unroll: INTERPRET
20EF   CF                     RST   $08   
20F0   52 0B                  DW   interpret   
20F2   87 0F                  DW   exit_forth   
20F4                          ;*Macro unroll: EXPECT 100, "expect 100"
20F4   CD B9 07               CALL   printNum   
20F7                          ;*Macro unroll:  loadWord H,L, B,C
20F7   69                     LD   L,C   
20F8   60                     LD   H,B   
20F9   69                     LD   L,C   
20FA                          ;*Macro unroll:  ppop0 B,C
20FA   DD 2B                  DEC   IX   
20FC   DD 46 00               LD   B,(IX+0)   
20FF   DD 2B                  DEC   IX   
2101   DD 4E 00               LD   C,(IX+0)   
2104                          ;*Macro unroll:  CMP16 100
2104   11 64 00               LD   DE,100   
2107   B7                     OR   A   
2108   ED 52                  SBC   HL,DE   
210A                          ;*Macro unroll:  checkZeroWord H,L
210A   7D                     LD   A,L   
210B   B4                     OR   H   
210C   CA 27 21               JP   z,tf_doneM_2633S19   
210F   11 3B 07               LD   DE,FAILED   
2112   CD C4 01               CALL   printPStr   
2115   11 1F 21               LD   DE,te_failM_2633S19   
2118   CD C4 01               CALL   printPStr   
211B   76                     HALT      
211C                          ;*Macro unroll:  _skip
211C   C3 1C 21               JP   $   
211F                          ;*Macro unroll:  STRUC_PUSH $
211F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
211F                STRUC_12:   .SET   STRUC_11   
211F                STRUC_11:   .SET   STRUC_10   
211F                STRUC_10:   .SET   STRUC_9   
211F                STRUC_9:   .SET   STRUC_8   
211F                STRUC_8:   .SET   STRUC_7   
211F                STRUC_7:   .SET   STRUC_6   
211F                STRUC_6:   .SET   STRUC_5   
211F                STRUC_5:   .SET   STRUC_4   
211F                STRUC_4:   .SET   STRUC_3   
211F                STRUC_3:   .SET   STRUC_2   
211F                STRUC_2:   .SET   STRUC_TOP   
211F                STRUC_TOP:   .SET   $   
211F                TE_FAILM_2633S19:      
211F   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
2127                          ;*Macro unroll:  _endskip
2127                          ;*Macro unroll:  STRUC_FWD
2127                CUR_ADR:   .SET   $   
211D                          .ORG   STRUC_TOP - 2   
211D   27 21                  DW   CUR_ADR   
2127                          .ORG   CUR_ADR   
2127                          ;*Macro unroll:  STRUC_POP
2127                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2127                STRUC_TOP:   .SET   STRUC_2   
2127                STRUC_2:   .SET   STRUC_3   
2127                STRUC_3:   .SET   STRUC_4   
2127                STRUC_4:   .SET   STRUC_5   
2127                STRUC_5:   .SET   STRUC_6   
2127                STRUC_6:   .SET   STRUC_7   
2127                STRUC_7:   .SET   STRUC_8   
2127                STRUC_8:   .SET   STRUC_9   
2127                STRUC_9:   .SET   STRUC_10   
2127                STRUC_10:   .SET   STRUC_11   
2127                STRUC_11:   .SET   STRUC_12   
2127                STRUC_12:   .SET   0   
2127                TF_DONEM_2633S19:      
2127                          ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
2127   2A 02 2E               LD   HL,(lineBufStart)   
212A   22 08 2E               LD   (lineBufTop),HL   
212D   22 06 2E               LD   (currkey),HL   
2130   21 39 21               LD   HL,tst_textM_2634S21   
2133   22 20 30               LD   (char_pointer),HL   
2136                          ;*Macro unroll:  _skip
2136   C3 36 21               JP   $   
2139                          ;*Macro unroll:  STRUC_PUSH $
2139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2139                STRUC_12:   .SET   STRUC_11   
2139                STRUC_11:   .SET   STRUC_10   
2139                STRUC_10:   .SET   STRUC_9   
2139                STRUC_9:   .SET   STRUC_8   
2139                STRUC_8:   .SET   STRUC_7   
2139                STRUC_7:   .SET   STRUC_6   
2139                STRUC_6:   .SET   STRUC_5   
2139                STRUC_5:   .SET   STRUC_4   
2139                STRUC_4:   .SET   STRUC_3   
2139                STRUC_3:   .SET   STRUC_2   
2139                STRUC_2:   .SET   STRUC_TOP   
2139                STRUC_TOP:   .SET   $   
2139                TST_TEXTM_2634S21:      
2139   3A 20 78 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 31 20 2E 20 3B 0D 0A FF 0D 0A DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
2154                          ;*Macro unroll:  _endskip
2154                          ;*Macro unroll:  STRUC_FWD
2154                CUR_ADR:   .SET   $   
2137                          .ORG   STRUC_TOP - 2   
2137   54 21                  DW   CUR_ADR   
2154                          .ORG   CUR_ADR   
2154                          ;*Macro unroll:  STRUC_POP
2154                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2154                STRUC_TOP:   .SET   STRUC_2   
2154                STRUC_2:   .SET   STRUC_3   
2154                STRUC_3:   .SET   STRUC_4   
2154                STRUC_4:   .SET   STRUC_5   
2154                STRUC_5:   .SET   STRUC_6   
2154                STRUC_6:   .SET   STRUC_7   
2154                STRUC_7:   .SET   STRUC_8   
2154                STRUC_8:   .SET   STRUC_9   
2154                STRUC_9:   .SET   STRUC_10   
2154                STRUC_10:   .SET   STRUC_11   
2154                STRUC_11:   .SET   STRUC_12   
2154                STRUC_12:   .SET   0   
2154                          ;*Macro unroll: INTERPRET
2154   CF                     RST   $08   
2155   52 0B                  DW   interpret   
2157   87 0F                  DW   exit_forth   
2159                          ;*Macro unroll: TEST_SET_TEXT "x y"
2159   2A 02 2E               LD   HL,(lineBufStart)   
215C   22 08 2E               LD   (lineBufTop),HL   
215F   22 06 2E               LD   (currkey),HL   
2162   21 6B 21               LD   HL,tst_textM_2636S23   
2165   22 20 30               LD   (char_pointer),HL   
2168                          ;*Macro unroll:  _skip
2168   C3 68 21               JP   $   
216B                          ;*Macro unroll:  STRUC_PUSH $
216B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
216B                STRUC_12:   .SET   STRUC_11   
216B                STRUC_11:   .SET   STRUC_10   
216B                STRUC_10:   .SET   STRUC_9   
216B                STRUC_9:   .SET   STRUC_8   
216B                STRUC_8:   .SET   STRUC_7   
216B                STRUC_7:   .SET   STRUC_6   
216B                STRUC_6:   .SET   STRUC_5   
216B                STRUC_5:   .SET   STRUC_4   
216B                STRUC_4:   .SET   STRUC_3   
216B                STRUC_3:   .SET   STRUC_2   
216B                STRUC_2:   .SET   STRUC_TOP   
216B                STRUC_TOP:   .SET   $   
216B                TST_TEXTM_2636S23:      
216B   78 20 79 0D 0A FF 0D 0A DB   "x y","\r\n",-1,"\r\n"   
2173                          ;*Macro unroll:  _endskip
2173                          ;*Macro unroll:  STRUC_FWD
2173                CUR_ADR:   .SET   $   
2169                          .ORG   STRUC_TOP - 2   
2169   73 21                  DW   CUR_ADR   
2173                          .ORG   CUR_ADR   
2173                          ;*Macro unroll:  STRUC_POP
2173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2173                STRUC_TOP:   .SET   STRUC_2   
2173                STRUC_2:   .SET   STRUC_3   
2173                STRUC_3:   .SET   STRUC_4   
2173                STRUC_4:   .SET   STRUC_5   
2173                STRUC_5:   .SET   STRUC_6   
2173                STRUC_6:   .SET   STRUC_7   
2173                STRUC_7:   .SET   STRUC_8   
2173                STRUC_8:   .SET   STRUC_9   
2173                STRUC_9:   .SET   STRUC_10   
2173                STRUC_10:   .SET   STRUC_11   
2173                STRUC_11:   .SET   STRUC_12   
2173                STRUC_12:   .SET   0   
2173                          ;*Macro unroll: INTERPRET
2173   CF                     RST   $08   
2174   52 0B                  DW   interpret   
2176   87 0F                  DW   exit_forth   
2178                          ;*Macro unroll: TEST_SET_TEXT "y"
2178   2A 02 2E               LD   HL,(lineBufStart)   
217B   22 08 2E               LD   (lineBufTop),HL   
217E   22 06 2E               LD   (currkey),HL   
2181   21 8A 21               LD   HL,tst_textM_2638S25   
2184   22 20 30               LD   (char_pointer),HL   
2187                          ;*Macro unroll:  _skip
2187   C3 87 21               JP   $   
218A                          ;*Macro unroll:  STRUC_PUSH $
218A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
218A                STRUC_12:   .SET   STRUC_11   
218A                STRUC_11:   .SET   STRUC_10   
218A                STRUC_10:   .SET   STRUC_9   
218A                STRUC_9:   .SET   STRUC_8   
218A                STRUC_8:   .SET   STRUC_7   
218A                STRUC_7:   .SET   STRUC_6   
218A                STRUC_6:   .SET   STRUC_5   
218A                STRUC_5:   .SET   STRUC_4   
218A                STRUC_4:   .SET   STRUC_3   
218A                STRUC_3:   .SET   STRUC_2   
218A                STRUC_2:   .SET   STRUC_TOP   
218A                STRUC_TOP:   .SET   $   
218A                TST_TEXTM_2638S25:      
218A   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2190                          ;*Macro unroll:  _endskip
2190                          ;*Macro unroll:  STRUC_FWD
2190                CUR_ADR:   .SET   $   
2188                          .ORG   STRUC_TOP - 2   
2188   90 21                  DW   CUR_ADR   
2190                          .ORG   CUR_ADR   
2190                          ;*Macro unroll:  STRUC_POP
2190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2190                STRUC_TOP:   .SET   STRUC_2   
2190                STRUC_2:   .SET   STRUC_3   
2190                STRUC_3:   .SET   STRUC_4   
2190                STRUC_4:   .SET   STRUC_5   
2190                STRUC_5:   .SET   STRUC_6   
2190                STRUC_6:   .SET   STRUC_7   
2190                STRUC_7:   .SET   STRUC_8   
2190                STRUC_8:   .SET   STRUC_9   
2190                STRUC_9:   .SET   STRUC_10   
2190                STRUC_10:   .SET   STRUC_11   
2190                STRUC_11:   .SET   STRUC_12   
2190                STRUC_12:   .SET   0   
2190                          ;*Macro unroll: INTERPRET
2190   CF                     RST   $08   
2191   52 0B                  DW   interpret   
2193   87 0F                  DW   exit_forth   
2195                          ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
2195   2A 02 2E               LD   HL,(lineBufStart)   
2198   22 08 2E               LD   (lineBufTop),HL   
219B   22 06 2E               LD   (currkey),HL   
219E   21 A7 21               LD   HL,tst_textM_2640S28   
21A1   22 20 30               LD   (char_pointer),HL   
21A4                          ;*Macro unroll:  _skip
21A4   C3 A4 21               JP   $   
21A7                          ;*Macro unroll:  STRUC_PUSH $
21A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21A7                STRUC_12:   .SET   STRUC_11   
21A7                STRUC_11:   .SET   STRUC_10   
21A7                STRUC_10:   .SET   STRUC_9   
21A7                STRUC_9:   .SET   STRUC_8   
21A7                STRUC_8:   .SET   STRUC_7   
21A7                STRUC_7:   .SET   STRUC_6   
21A7                STRUC_6:   .SET   STRUC_5   
21A7                STRUC_5:   .SET   STRUC_4   
21A7                STRUC_4:   .SET   STRUC_3   
21A7                STRUC_3:   .SET   STRUC_2   
21A7                STRUC_2:   .SET   STRUC_TOP   
21A7                STRUC_TOP:   .SET   $   
21A7                TST_TEXTM_2640S28:      
21A7   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 2C 20 3B 0D 0A FF 0D 0A DB   ": const create does> , ;","\r\n",-1,"\r\n"   
21C4                          ;*Macro unroll:  _endskip
21C4                          ;*Macro unroll:  STRUC_FWD
21C4                CUR_ADR:   .SET   $   
21A5                          .ORG   STRUC_TOP - 2   
21A5   C4 21                  DW   CUR_ADR   
21C4                          .ORG   CUR_ADR   
21C4                          ;*Macro unroll:  STRUC_POP
21C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21C4                STRUC_TOP:   .SET   STRUC_2   
21C4                STRUC_2:   .SET   STRUC_3   
21C4                STRUC_3:   .SET   STRUC_4   
21C4                STRUC_4:   .SET   STRUC_5   
21C4                STRUC_5:   .SET   STRUC_6   
21C4                STRUC_6:   .SET   STRUC_7   
21C4                STRUC_7:   .SET   STRUC_8   
21C4                STRUC_8:   .SET   STRUC_9   
21C4                STRUC_9:   .SET   STRUC_10   
21C4                STRUC_10:   .SET   STRUC_11   
21C4                STRUC_11:   .SET   STRUC_12   
21C4                STRUC_12:   .SET   0   
21C4                          ;*Macro unroll: INTERPRET
21C4   CF                     RST   $08   
21C5   52 0B                  DW   interpret   
21C7   87 0F                  DW   exit_forth   
21C9                          ;*Macro unroll: TEST_SET_TEXT "23 const x"
21C9   2A 02 2E               LD   HL,(lineBufStart)   
21CC   22 08 2E               LD   (lineBufTop),HL   
21CF   22 06 2E               LD   (currkey),HL   
21D2   21 DB 21               LD   HL,tst_textM_2642S30   
21D5   22 20 30               LD   (char_pointer),HL   
21D8                          ;*Macro unroll:  _skip
21D8   C3 D8 21               JP   $   
21DB                          ;*Macro unroll:  STRUC_PUSH $
21DB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21DB                STRUC_12:   .SET   STRUC_11   
21DB                STRUC_11:   .SET   STRUC_10   
21DB                STRUC_10:   .SET   STRUC_9   
21DB                STRUC_9:   .SET   STRUC_8   
21DB                STRUC_8:   .SET   STRUC_7   
21DB                STRUC_7:   .SET   STRUC_6   
21DB                STRUC_6:   .SET   STRUC_5   
21DB                STRUC_5:   .SET   STRUC_4   
21DB                STRUC_4:   .SET   STRUC_3   
21DB                STRUC_3:   .SET   STRUC_2   
21DB                STRUC_2:   .SET   STRUC_TOP   
21DB                STRUC_TOP:   .SET   $   
21DB                TST_TEXTM_2642S30:      
21DB   32 33 20 63 6F 6E 73 74 20 78 0D 0A FF 0D 0A DB   "23 const x","\r\n",-1,"\r\n"   
21EA                          ;*Macro unroll:  _endskip
21EA                          ;*Macro unroll:  STRUC_FWD
21EA                CUR_ADR:   .SET   $   
21D9                          .ORG   STRUC_TOP - 2   
21D9   EA 21                  DW   CUR_ADR   
21EA                          .ORG   CUR_ADR   
21EA                          ;*Macro unroll:  STRUC_POP
21EA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21EA                STRUC_TOP:   .SET   STRUC_2   
21EA                STRUC_2:   .SET   STRUC_3   
21EA                STRUC_3:   .SET   STRUC_4   
21EA                STRUC_4:   .SET   STRUC_5   
21EA                STRUC_5:   .SET   STRUC_6   
21EA                STRUC_6:   .SET   STRUC_7   
21EA                STRUC_7:   .SET   STRUC_8   
21EA                STRUC_8:   .SET   STRUC_9   
21EA                STRUC_9:   .SET   STRUC_10   
21EA                STRUC_10:   .SET   STRUC_11   
21EA                STRUC_11:   .SET   STRUC_12   
21EA                STRUC_12:   .SET   0   
21EA                          ;*Macro unroll: INTERPRET
21EA   CF                     RST   $08   
21EB   52 0B                  DW   interpret   
21ED   87 0F                  DW   exit_forth   
21EF                          ;*Macro unroll: TEST_SET_TEXT "x ."
21EF   2A 02 2E               LD   HL,(lineBufStart)   
21F2   22 08 2E               LD   (lineBufTop),HL   
21F5   22 06 2E               LD   (currkey),HL   
21F8   21 01 22               LD   HL,tst_textM_2644S32   
21FB   22 20 30               LD   (char_pointer),HL   
21FE                          ;*Macro unroll:  _skip
21FE   C3 FE 21               JP   $   
2201                          ;*Macro unroll:  STRUC_PUSH $
2201                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2201                STRUC_12:   .SET   STRUC_11   
2201                STRUC_11:   .SET   STRUC_10   
2201                STRUC_10:   .SET   STRUC_9   
2201                STRUC_9:   .SET   STRUC_8   
2201                STRUC_8:   .SET   STRUC_7   
2201                STRUC_7:   .SET   STRUC_6   
2201                STRUC_6:   .SET   STRUC_5   
2201                STRUC_5:   .SET   STRUC_4   
2201                STRUC_4:   .SET   STRUC_3   
2201                STRUC_3:   .SET   STRUC_2   
2201                STRUC_2:   .SET   STRUC_TOP   
2201                STRUC_TOP:   .SET   $   
2201                TST_TEXTM_2644S32:      
2201   78 20 2E 0D 0A FF 0D 0A DB   "x .","\r\n",-1,"\r\n"   
2209                          ;*Macro unroll:  _endskip
2209                          ;*Macro unroll:  STRUC_FWD
2209                CUR_ADR:   .SET   $   
21FF                          .ORG   STRUC_TOP - 2   
21FF   09 22                  DW   CUR_ADR   
2209                          .ORG   CUR_ADR   
2209                          ;*Macro unroll:  STRUC_POP
2209                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2209                STRUC_TOP:   .SET   STRUC_2   
2209                STRUC_2:   .SET   STRUC_3   
2209                STRUC_3:   .SET   STRUC_4   
2209                STRUC_4:   .SET   STRUC_5   
2209                STRUC_5:   .SET   STRUC_6   
2209                STRUC_6:   .SET   STRUC_7   
2209                STRUC_7:   .SET   STRUC_8   
2209                STRUC_8:   .SET   STRUC_9   
2209                STRUC_9:   .SET   STRUC_10   
2209                STRUC_10:   .SET   STRUC_11   
2209                STRUC_11:   .SET   STRUC_12   
2209                STRUC_12:   .SET   0   
2209                          ;*Macro unroll: INTERPRET
2209   CF                     RST   $08   
220A   52 0B                  DW   interpret   
220C   87 0F                  DW   exit_forth   
220E                          ;*Macro unroll: TEST_SET_TEXT "23 constant y"
220E   2A 02 2E               LD   HL,(lineBufStart)   
2211   22 08 2E               LD   (lineBufTop),HL   
2214   22 06 2E               LD   (currkey),HL   
2217   21 20 22               LD   HL,tst_textM_2646S35   
221A   22 20 30               LD   (char_pointer),HL   
221D                          ;*Macro unroll:  _skip
221D   C3 1D 22               JP   $   
2220                          ;*Macro unroll:  STRUC_PUSH $
2220                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2220                STRUC_12:   .SET   STRUC_11   
2220                STRUC_11:   .SET   STRUC_10   
2220                STRUC_10:   .SET   STRUC_9   
2220                STRUC_9:   .SET   STRUC_8   
2220                STRUC_8:   .SET   STRUC_7   
2220                STRUC_7:   .SET   STRUC_6   
2220                STRUC_6:   .SET   STRUC_5   
2220                STRUC_5:   .SET   STRUC_4   
2220                STRUC_4:   .SET   STRUC_3   
2220                STRUC_3:   .SET   STRUC_2   
2220                STRUC_2:   .SET   STRUC_TOP   
2220                STRUC_TOP:   .SET   $   
2220                TST_TEXTM_2646S35:      
2220   32 33 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "23 constant y","\r\n",-1,"\r\n"   
2232                          ;*Macro unroll:  _endskip
2232                          ;*Macro unroll:  STRUC_FWD
2232                CUR_ADR:   .SET   $   
221E                          .ORG   STRUC_TOP - 2   
221E   32 22                  DW   CUR_ADR   
2232                          .ORG   CUR_ADR   
2232                          ;*Macro unroll:  STRUC_POP
2232                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2232                STRUC_TOP:   .SET   STRUC_2   
2232                STRUC_2:   .SET   STRUC_3   
2232                STRUC_3:   .SET   STRUC_4   
2232                STRUC_4:   .SET   STRUC_5   
2232                STRUC_5:   .SET   STRUC_6   
2232                STRUC_6:   .SET   STRUC_7   
2232                STRUC_7:   .SET   STRUC_8   
2232                STRUC_8:   .SET   STRUC_9   
2232                STRUC_9:   .SET   STRUC_10   
2232                STRUC_10:   .SET   STRUC_11   
2232                STRUC_11:   .SET   STRUC_12   
2232                STRUC_12:   .SET   0   
2232                          ;*Macro unroll: INTERPRET
2232   CF                     RST   $08   
2233   52 0B                  DW   interpret   
2235   87 0F                  DW   exit_forth   
2237                          ;*Macro unroll: TEST_SET_TEXT "y"
2237   2A 02 2E               LD   HL,(lineBufStart)   
223A   22 08 2E               LD   (lineBufTop),HL   
223D   22 06 2E               LD   (currkey),HL   
2240   21 49 22               LD   HL,tst_textM_2648S37   
2243   22 20 30               LD   (char_pointer),HL   
2246                          ;*Macro unroll:  _skip
2246   C3 46 22               JP   $   
2249                          ;*Macro unroll:  STRUC_PUSH $
2249                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2249                STRUC_12:   .SET   STRUC_11   
2249                STRUC_11:   .SET   STRUC_10   
2249                STRUC_10:   .SET   STRUC_9   
2249                STRUC_9:   .SET   STRUC_8   
2249                STRUC_8:   .SET   STRUC_7   
2249                STRUC_7:   .SET   STRUC_6   
2249                STRUC_6:   .SET   STRUC_5   
2249                STRUC_5:   .SET   STRUC_4   
2249                STRUC_4:   .SET   STRUC_3   
2249                STRUC_3:   .SET   STRUC_2   
2249                STRUC_2:   .SET   STRUC_TOP   
2249                STRUC_TOP:   .SET   $   
2249                TST_TEXTM_2648S37:      
2249   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
224F                          ;*Macro unroll:  _endskip
224F                          ;*Macro unroll:  STRUC_FWD
224F                CUR_ADR:   .SET   $   
2247                          .ORG   STRUC_TOP - 2   
2247   4F 22                  DW   CUR_ADR   
224F                          .ORG   CUR_ADR   
224F                          ;*Macro unroll:  STRUC_POP
224F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
224F                STRUC_TOP:   .SET   STRUC_2   
224F                STRUC_2:   .SET   STRUC_3   
224F                STRUC_3:   .SET   STRUC_4   
224F                STRUC_4:   .SET   STRUC_5   
224F                STRUC_5:   .SET   STRUC_6   
224F                STRUC_6:   .SET   STRUC_7   
224F                STRUC_7:   .SET   STRUC_8   
224F                STRUC_8:   .SET   STRUC_9   
224F                STRUC_9:   .SET   STRUC_10   
224F                STRUC_10:   .SET   STRUC_11   
224F                STRUC_11:   .SET   STRUC_12   
224F                STRUC_12:   .SET   0   
224F                          ;*Macro unroll: INTERPRET
224F   CF                     RST   $08   
2250   52 0B                  DW   interpret   
2252   87 0F                  DW   exit_forth   
2254                          ;*Macro unroll: EXPECT 23, "expect 23"
2254   CD B9 07               CALL   printNum   
2257                          ;*Macro unroll:  loadWord H,L, B,C
2257   69                     LD   L,C   
2258   60                     LD   H,B   
2259   69                     LD   L,C   
225A                          ;*Macro unroll:  ppop0 B,C
225A   DD 2B                  DEC   IX   
225C   DD 46 00               LD   B,(IX+0)   
225F   DD 2B                  DEC   IX   
2261   DD 4E 00               LD   C,(IX+0)   
2264                          ;*Macro unroll:  CMP16 23
2264   11 17 00               LD   DE,23   
2267   B7                     OR   A   
2268   ED 52                  SBC   HL,DE   
226A                          ;*Macro unroll:  checkZeroWord H,L
226A   7D                     LD   A,L   
226B   B4                     OR   H   
226C   CA 85 22               JP   z,tf_doneM_2650S39   
226F   11 3B 07               LD   DE,FAILED   
2272   CD C4 01               CALL   printPStr   
2275   11 7F 22               LD   DE,te_failM_2650S39   
2278   CD C4 01               CALL   printPStr   
227B   76                     HALT      
227C                          ;*Macro unroll:  _skip
227C   C3 7C 22               JP   $   
227F                          ;*Macro unroll:  STRUC_PUSH $
227F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
227F                STRUC_12:   .SET   STRUC_11   
227F                STRUC_11:   .SET   STRUC_10   
227F                STRUC_10:   .SET   STRUC_9   
227F                STRUC_9:   .SET   STRUC_8   
227F                STRUC_8:   .SET   STRUC_7   
227F                STRUC_7:   .SET   STRUC_6   
227F                STRUC_6:   .SET   STRUC_5   
227F                STRUC_5:   .SET   STRUC_4   
227F                STRUC_4:   .SET   STRUC_3   
227F                STRUC_3:   .SET   STRUC_2   
227F                STRUC_2:   .SET   STRUC_TOP   
227F                STRUC_TOP:   .SET   $   
227F                TE_FAILM_2650S39:      
227F   05 32 33 20 32 33      .PSTR   "23 23"   
2285                          ;*Macro unroll:  _endskip
2285                          ;*Macro unroll:  STRUC_FWD
2285                CUR_ADR:   .SET   $   
227D                          .ORG   STRUC_TOP - 2   
227D   85 22                  DW   CUR_ADR   
2285                          .ORG   CUR_ADR   
2285                          ;*Macro unroll:  STRUC_POP
2285                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2285                STRUC_TOP:   .SET   STRUC_2   
2285                STRUC_2:   .SET   STRUC_3   
2285                STRUC_3:   .SET   STRUC_4   
2285                STRUC_4:   .SET   STRUC_5   
2285                STRUC_5:   .SET   STRUC_6   
2285                STRUC_6:   .SET   STRUC_7   
2285                STRUC_7:   .SET   STRUC_8   
2285                STRUC_8:   .SET   STRUC_9   
2285                STRUC_9:   .SET   STRUC_10   
2285                STRUC_10:   .SET   STRUC_11   
2285                STRUC_11:   .SET   STRUC_12   
2285                STRUC_12:   .SET   0   
2285                TF_DONEM_2650S39:      
2285                          ;*Macro unroll: ppushValue 1
2285                          ;*Macro unroll:  ppush0 B,C
2285   DD 71 00               LD   (IX+0),C   
2288   DD 23                  INC   IX   
228A   DD 70 00               LD   (IX+0),B   
228D   DD 23                  INC   IX   
228F   01 01 00               LD   BC,1   
2292                          ;*Macro unroll: TEST_SET_TEXT "dup"
2292   2A 02 2E               LD   HL,(lineBufStart)   
2295   22 08 2E               LD   (lineBufTop),HL   
2298   22 06 2E               LD   (currkey),HL   
229B   21 A4 22               LD   HL,tst_textM_2652S42   
229E   22 20 30               LD   (char_pointer),HL   
22A1                          ;*Macro unroll:  _skip
22A1   C3 A1 22               JP   $   
22A4                          ;*Macro unroll:  STRUC_PUSH $
22A4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22A4                STRUC_12:   .SET   STRUC_11   
22A4                STRUC_11:   .SET   STRUC_10   
22A4                STRUC_10:   .SET   STRUC_9   
22A4                STRUC_9:   .SET   STRUC_8   
22A4                STRUC_8:   .SET   STRUC_7   
22A4                STRUC_7:   .SET   STRUC_6   
22A4                STRUC_6:   .SET   STRUC_5   
22A4                STRUC_5:   .SET   STRUC_4   
22A4                STRUC_4:   .SET   STRUC_3   
22A4                STRUC_3:   .SET   STRUC_2   
22A4                STRUC_2:   .SET   STRUC_TOP   
22A4                STRUC_TOP:   .SET   $   
22A4                TST_TEXTM_2652S42:      
22A4   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
22AC                          ;*Macro unroll:  _endskip
22AC                          ;*Macro unroll:  STRUC_FWD
22AC                CUR_ADR:   .SET   $   
22A2                          .ORG   STRUC_TOP - 2   
22A2   AC 22                  DW   CUR_ADR   
22AC                          .ORG   CUR_ADR   
22AC                          ;*Macro unroll:  STRUC_POP
22AC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22AC                STRUC_TOP:   .SET   STRUC_2   
22AC                STRUC_2:   .SET   STRUC_3   
22AC                STRUC_3:   .SET   STRUC_4   
22AC                STRUC_4:   .SET   STRUC_5   
22AC                STRUC_5:   .SET   STRUC_6   
22AC                STRUC_6:   .SET   STRUC_7   
22AC                STRUC_7:   .SET   STRUC_8   
22AC                STRUC_8:   .SET   STRUC_9   
22AC                STRUC_9:   .SET   STRUC_10   
22AC                STRUC_10:   .SET   STRUC_11   
22AC                STRUC_11:   .SET   STRUC_12   
22AC                STRUC_12:   .SET   0   
22AC                          ;*Macro unroll: INTERPRET
22AC   CF                     RST   $08   
22AD   52 0B                  DW   interpret   
22AF   87 0F                  DW   exit_forth   
22B1                          ;*Macro unroll: EXPECT 1, "1 interpret dup"
22B1   CD B9 07               CALL   printNum   
22B4                          ;*Macro unroll:  loadWord H,L, B,C
22B4   69                     LD   L,C   
22B5   60                     LD   H,B   
22B6   69                     LD   L,C   
22B7                          ;*Macro unroll:  ppop0 B,C
22B7   DD 2B                  DEC   IX   
22B9   DD 46 00               LD   B,(IX+0)   
22BC   DD 2B                  DEC   IX   
22BE   DD 4E 00               LD   C,(IX+0)   
22C1                          ;*Macro unroll:  CMP16 1
22C1   11 01 00               LD   DE,1   
22C4   B7                     OR   A   
22C5   ED 52                  SBC   HL,DE   
22C7                          ;*Macro unroll:  checkZeroWord H,L
22C7   7D                     LD   A,L   
22C8   B4                     OR   H   
22C9   CA EC 22               JP   z,tf_doneM_2654S44   
22CC   11 3B 07               LD   DE,FAILED   
22CF   CD C4 01               CALL   printPStr   
22D2   11 DC 22               LD   DE,te_failM_2654S44   
22D5   CD C4 01               CALL   printPStr   
22D8   76                     HALT      
22D9                          ;*Macro unroll:  _skip
22D9   C3 D9 22               JP   $   
22DC                          ;*Macro unroll:  STRUC_PUSH $
22DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22DC                STRUC_12:   .SET   STRUC_11   
22DC                STRUC_11:   .SET   STRUC_10   
22DC                STRUC_10:   .SET   STRUC_9   
22DC                STRUC_9:   .SET   STRUC_8   
22DC                STRUC_8:   .SET   STRUC_7   
22DC                STRUC_7:   .SET   STRUC_6   
22DC                STRUC_6:   .SET   STRUC_5   
22DC                STRUC_5:   .SET   STRUC_4   
22DC                STRUC_4:   .SET   STRUC_3   
22DC                STRUC_3:   .SET   STRUC_2   
22DC                STRUC_2:   .SET   STRUC_TOP   
22DC                STRUC_TOP:   .SET   $   
22DC                TE_FAILM_2654S44:      
22DC   0F 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 .PSTR   "1 interpret dup"   
22EC                          ;*Macro unroll:  _endskip
22EC                          ;*Macro unroll:  STRUC_FWD
22EC                CUR_ADR:   .SET   $   
22DA                          .ORG   STRUC_TOP - 2   
22DA   EC 22                  DW   CUR_ADR   
22EC                          .ORG   CUR_ADR   
22EC                          ;*Macro unroll:  STRUC_POP
22EC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22EC                STRUC_TOP:   .SET   STRUC_2   
22EC                STRUC_2:   .SET   STRUC_3   
22EC                STRUC_3:   .SET   STRUC_4   
22EC                STRUC_4:   .SET   STRUC_5   
22EC                STRUC_5:   .SET   STRUC_6   
22EC                STRUC_6:   .SET   STRUC_7   
22EC                STRUC_7:   .SET   STRUC_8   
22EC                STRUC_8:   .SET   STRUC_9   
22EC                STRUC_9:   .SET   STRUC_10   
22EC                STRUC_10:   .SET   STRUC_11   
22EC                STRUC_11:   .SET   STRUC_12   
22EC                STRUC_12:   .SET   0   
22EC                TF_DONEM_2654S44:      
22EC                          ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
22EC   CD B9 07               CALL   printNum   
22EF                          ;*Macro unroll:  loadWord H,L, B,C
22EF   69                     LD   L,C   
22F0   60                     LD   H,B   
22F1   69                     LD   L,C   
22F2                          ;*Macro unroll:  ppop0 B,C
22F2   DD 2B                  DEC   IX   
22F4   DD 46 00               LD   B,(IX+0)   
22F7   DD 2B                  DEC   IX   
22F9   DD 4E 00               LD   C,(IX+0)   
22FC                          ;*Macro unroll:  CMP16 1
22FC   11 01 00               LD   DE,1   
22FF   B7                     OR   A   
2300   ED 52                  SBC   HL,DE   
2302                          ;*Macro unroll:  checkZeroWord H,L
2302   7D                     LD   A,L   
2303   B4                     OR   H   
2304   CA 29 23               JP   z,tf_doneM_2655S45   
2307   11 3B 07               LD   DE,FAILED   
230A   CD C4 01               CALL   printPStr   
230D   11 17 23               LD   DE,te_failM_2655S45   
2310   CD C4 01               CALL   printPStr   
2313   76                     HALT      
2314                          ;*Macro unroll:  _skip
2314   C3 14 23               JP   $   
2317                          ;*Macro unroll:  STRUC_PUSH $
2317                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2317                STRUC_12:   .SET   STRUC_11   
2317                STRUC_11:   .SET   STRUC_10   
2317                STRUC_10:   .SET   STRUC_9   
2317                STRUC_9:   .SET   STRUC_8   
2317                STRUC_8:   .SET   STRUC_7   
2317                STRUC_7:   .SET   STRUC_6   
2317                STRUC_6:   .SET   STRUC_5   
2317                STRUC_5:   .SET   STRUC_4   
2317                STRUC_4:   .SET   STRUC_3   
2317                STRUC_3:   .SET   STRUC_2   
2317                STRUC_2:   .SET   STRUC_TOP   
2317                STRUC_TOP:   .SET   $   
2317                TE_FAILM_2655S45:      
2317   11 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 20 32 .PSTR   "1 interpret dup 2"   
2329                          ;*Macro unroll:  _endskip
2329                          ;*Macro unroll:  STRUC_FWD
2329                CUR_ADR:   .SET   $   
2315                          .ORG   STRUC_TOP - 2   
2315   29 23                  DW   CUR_ADR   
2329                          .ORG   CUR_ADR   
2329                          ;*Macro unroll:  STRUC_POP
2329                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2329                STRUC_TOP:   .SET   STRUC_2   
2329                STRUC_2:   .SET   STRUC_3   
2329                STRUC_3:   .SET   STRUC_4   
2329                STRUC_4:   .SET   STRUC_5   
2329                STRUC_5:   .SET   STRUC_6   
2329                STRUC_6:   .SET   STRUC_7   
2329                STRUC_7:   .SET   STRUC_8   
2329                STRUC_8:   .SET   STRUC_9   
2329                STRUC_9:   .SET   STRUC_10   
2329                STRUC_10:   .SET   STRUC_11   
2329                STRUC_11:   .SET   STRUC_12   
2329                STRUC_12:   .SET   0   
2329                TF_DONEM_2655S45:      
2329                          ;*Macro unroll: TEST_SET_TEXT "123"
2329   2A 02 2E               LD   HL,(lineBufStart)   
232C   22 08 2E               LD   (lineBufTop),HL   
232F   22 06 2E               LD   (currkey),HL   
2332   21 3B 23               LD   HL,tst_textM_2656S47   
2335   22 20 30               LD   (char_pointer),HL   
2338                          ;*Macro unroll:  _skip
2338   C3 38 23               JP   $   
233B                          ;*Macro unroll:  STRUC_PUSH $
233B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
233B                STRUC_12:   .SET   STRUC_11   
233B                STRUC_11:   .SET   STRUC_10   
233B                STRUC_10:   .SET   STRUC_9   
233B                STRUC_9:   .SET   STRUC_8   
233B                STRUC_8:   .SET   STRUC_7   
233B                STRUC_7:   .SET   STRUC_6   
233B                STRUC_6:   .SET   STRUC_5   
233B                STRUC_5:   .SET   STRUC_4   
233B                STRUC_4:   .SET   STRUC_3   
233B                STRUC_3:   .SET   STRUC_2   
233B                STRUC_2:   .SET   STRUC_TOP   
233B                STRUC_TOP:   .SET   $   
233B                TST_TEXTM_2656S47:      
233B   31 32 33 0D 0A FF 0D 0A DB   "123","\r\n",-1,"\r\n"   
2343                          ;*Macro unroll:  _endskip
2343                          ;*Macro unroll:  STRUC_FWD
2343                CUR_ADR:   .SET   $   
2339                          .ORG   STRUC_TOP - 2   
2339   43 23                  DW   CUR_ADR   
2343                          .ORG   CUR_ADR   
2343                          ;*Macro unroll:  STRUC_POP
2343                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2343                STRUC_TOP:   .SET   STRUC_2   
2343                STRUC_2:   .SET   STRUC_3   
2343                STRUC_3:   .SET   STRUC_4   
2343                STRUC_4:   .SET   STRUC_5   
2343                STRUC_5:   .SET   STRUC_6   
2343                STRUC_6:   .SET   STRUC_7   
2343                STRUC_7:   .SET   STRUC_8   
2343                STRUC_8:   .SET   STRUC_9   
2343                STRUC_9:   .SET   STRUC_10   
2343                STRUC_10:   .SET   STRUC_11   
2343                STRUC_11:   .SET   STRUC_12   
2343                STRUC_12:   .SET   0   
2343                          ;*Macro unroll: INTERPRET
2343   CF                     RST   $08   
2344   52 0B                  DW   interpret   
2346   87 0F                  DW   exit_forth   
2348                          ;*Macro unroll: EXPECT 123, "interpret 123"
2348   CD B9 07               CALL   printNum   
234B                          ;*Macro unroll:  loadWord H,L, B,C
234B   69                     LD   L,C   
234C   60                     LD   H,B   
234D   69                     LD   L,C   
234E                          ;*Macro unroll:  ppop0 B,C
234E   DD 2B                  DEC   IX   
2350   DD 46 00               LD   B,(IX+0)   
2353   DD 2B                  DEC   IX   
2355   DD 4E 00               LD   C,(IX+0)   
2358                          ;*Macro unroll:  CMP16 123
2358   11 7B 00               LD   DE,123   
235B   B7                     OR   A   
235C   ED 52                  SBC   HL,DE   
235E                          ;*Macro unroll:  checkZeroWord H,L
235E   7D                     LD   A,L   
235F   B4                     OR   H   
2360   CA 81 23               JP   z,tf_doneM_2658S49   
2363   11 3B 07               LD   DE,FAILED   
2366   CD C4 01               CALL   printPStr   
2369   11 73 23               LD   DE,te_failM_2658S49   
236C   CD C4 01               CALL   printPStr   
236F   76                     HALT      
2370                          ;*Macro unroll:  _skip
2370   C3 70 23               JP   $   
2373                          ;*Macro unroll:  STRUC_PUSH $
2373                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2373                STRUC_12:   .SET   STRUC_11   
2373                STRUC_11:   .SET   STRUC_10   
2373                STRUC_10:   .SET   STRUC_9   
2373                STRUC_9:   .SET   STRUC_8   
2373                STRUC_8:   .SET   STRUC_7   
2373                STRUC_7:   .SET   STRUC_6   
2373                STRUC_6:   .SET   STRUC_5   
2373                STRUC_5:   .SET   STRUC_4   
2373                STRUC_4:   .SET   STRUC_3   
2373                STRUC_3:   .SET   STRUC_2   
2373                STRUC_2:   .SET   STRUC_TOP   
2373                STRUC_TOP:   .SET   $   
2373                TE_FAILM_2658S49:      
2373   0D 69 6E 74 65 72 70 72 65 74 20 31 32 33 .PSTR   "interpret 123"   
2381                          ;*Macro unroll:  _endskip
2381                          ;*Macro unroll:  STRUC_FWD
2381                CUR_ADR:   .SET   $   
2371                          .ORG   STRUC_TOP - 2   
2371   81 23                  DW   CUR_ADR   
2381                          .ORG   CUR_ADR   
2381                          ;*Macro unroll:  STRUC_POP
2381                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2381                STRUC_TOP:   .SET   STRUC_2   
2381                STRUC_2:   .SET   STRUC_3   
2381                STRUC_3:   .SET   STRUC_4   
2381                STRUC_4:   .SET   STRUC_5   
2381                STRUC_5:   .SET   STRUC_6   
2381                STRUC_6:   .SET   STRUC_7   
2381                STRUC_7:   .SET   STRUC_8   
2381                STRUC_8:   .SET   STRUC_9   
2381                STRUC_9:   .SET   STRUC_10   
2381                STRUC_10:   .SET   STRUC_11   
2381                STRUC_11:   .SET   STRUC_12   
2381                STRUC_12:   .SET   0   
2381                TF_DONEM_2658S49:      
2381                          ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
2381   2A 02 2E               LD   HL,(lineBufStart)   
2384   22 08 2E               LD   (lineBufTop),HL   
2387   22 06 2E               LD   (currkey),HL   
238A   21 93 23               LD   HL,tst_textM_2659S51   
238D   22 20 30               LD   (char_pointer),HL   
2390                          ;*Macro unroll:  _skip
2390   C3 90 23               JP   $   
2393                          ;*Macro unroll:  STRUC_PUSH $
2393                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2393                STRUC_12:   .SET   STRUC_11   
2393                STRUC_11:   .SET   STRUC_10   
2393                STRUC_10:   .SET   STRUC_9   
2393                STRUC_9:   .SET   STRUC_8   
2393                STRUC_8:   .SET   STRUC_7   
2393                STRUC_7:   .SET   STRUC_6   
2393                STRUC_6:   .SET   STRUC_5   
2393                STRUC_5:   .SET   STRUC_4   
2393                STRUC_4:   .SET   STRUC_3   
2393                STRUC_3:   .SET   STRUC_2   
2393                STRUC_2:   .SET   STRUC_TOP   
2393                STRUC_TOP:   .SET   $   
2393                TST_TEXTM_2659S51:      
2393   31 32 33 20 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 0D 0A FF 0D 0A DB   "123 constant x123","\r\n",-1,"\r\n"   
23A9                          ;*Macro unroll:  _endskip
23A9                          ;*Macro unroll:  STRUC_FWD
23A9                CUR_ADR:   .SET   $   
2391                          .ORG   STRUC_TOP - 2   
2391   A9 23                  DW   CUR_ADR   
23A9                          .ORG   CUR_ADR   
23A9                          ;*Macro unroll:  STRUC_POP
23A9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23A9                STRUC_TOP:   .SET   STRUC_2   
23A9                STRUC_2:   .SET   STRUC_3   
23A9                STRUC_3:   .SET   STRUC_4   
23A9                STRUC_4:   .SET   STRUC_5   
23A9                STRUC_5:   .SET   STRUC_6   
23A9                STRUC_6:   .SET   STRUC_7   
23A9                STRUC_7:   .SET   STRUC_8   
23A9                STRUC_8:   .SET   STRUC_9   
23A9                STRUC_9:   .SET   STRUC_10   
23A9                STRUC_10:   .SET   STRUC_11   
23A9                STRUC_11:   .SET   STRUC_12   
23A9                STRUC_12:   .SET   0   
23A9                          ;*Macro unroll: INTERPRET
23A9   CF                     RST   $08   
23AA   52 0B                  DW   interpret   
23AC   87 0F                  DW   exit_forth   
23AE                          ;*Macro unroll: TEST_SET_TEXT "x123"
23AE   2A 02 2E               LD   HL,(lineBufStart)   
23B1   22 08 2E               LD   (lineBufTop),HL   
23B4   22 06 2E               LD   (currkey),HL   
23B7   21 C0 23               LD   HL,tst_textM_2661S53   
23BA   22 20 30               LD   (char_pointer),HL   
23BD                          ;*Macro unroll:  _skip
23BD   C3 BD 23               JP   $   
23C0                          ;*Macro unroll:  STRUC_PUSH $
23C0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23C0                STRUC_12:   .SET   STRUC_11   
23C0                STRUC_11:   .SET   STRUC_10   
23C0                STRUC_10:   .SET   STRUC_9   
23C0                STRUC_9:   .SET   STRUC_8   
23C0                STRUC_8:   .SET   STRUC_7   
23C0                STRUC_7:   .SET   STRUC_6   
23C0                STRUC_6:   .SET   STRUC_5   
23C0                STRUC_5:   .SET   STRUC_4   
23C0                STRUC_4:   .SET   STRUC_3   
23C0                STRUC_3:   .SET   STRUC_2   
23C0                STRUC_2:   .SET   STRUC_TOP   
23C0                STRUC_TOP:   .SET   $   
23C0                TST_TEXTM_2661S53:      
23C0   78 31 32 33 0D 0A FF 0D 0A DB   "x123","\r\n",-1,"\r\n"   
23C9                          ;*Macro unroll:  _endskip
23C9                          ;*Macro unroll:  STRUC_FWD
23C9                CUR_ADR:   .SET   $   
23BE                          .ORG   STRUC_TOP - 2   
23BE   C9 23                  DW   CUR_ADR   
23C9                          .ORG   CUR_ADR   
23C9                          ;*Macro unroll:  STRUC_POP
23C9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23C9                STRUC_TOP:   .SET   STRUC_2   
23C9                STRUC_2:   .SET   STRUC_3   
23C9                STRUC_3:   .SET   STRUC_4   
23C9                STRUC_4:   .SET   STRUC_5   
23C9                STRUC_5:   .SET   STRUC_6   
23C9                STRUC_6:   .SET   STRUC_7   
23C9                STRUC_7:   .SET   STRUC_8   
23C9                STRUC_8:   .SET   STRUC_9   
23C9                STRUC_9:   .SET   STRUC_10   
23C9                STRUC_10:   .SET   STRUC_11   
23C9                STRUC_11:   .SET   STRUC_12   
23C9                STRUC_12:   .SET   0   
23C9                          ;*Macro unroll: INTERPRET
23C9   CF                     RST   $08   
23CA   52 0B                  DW   interpret   
23CC   87 0F                  DW   exit_forth   
23CE                          ;*Macro unroll: EXPECT 123, "constant x123 = 123"
23CE   CD B9 07               CALL   printNum   
23D1                          ;*Macro unroll:  loadWord H,L, B,C
23D1   69                     LD   L,C   
23D2   60                     LD   H,B   
23D3   69                     LD   L,C   
23D4                          ;*Macro unroll:  ppop0 B,C
23D4   DD 2B                  DEC   IX   
23D6   DD 46 00               LD   B,(IX+0)   
23D9   DD 2B                  DEC   IX   
23DB   DD 4E 00               LD   C,(IX+0)   
23DE                          ;*Macro unroll:  CMP16 123
23DE   11 7B 00               LD   DE,123   
23E1   B7                     OR   A   
23E2   ED 52                  SBC   HL,DE   
23E4                          ;*Macro unroll:  checkZeroWord H,L
23E4   7D                     LD   A,L   
23E5   B4                     OR   H   
23E6   CA 0D 24               JP   z,tf_doneM_2663S55   
23E9   11 3B 07               LD   DE,FAILED   
23EC   CD C4 01               CALL   printPStr   
23EF   11 F9 23               LD   DE,te_failM_2663S55   
23F2   CD C4 01               CALL   printPStr   
23F5   76                     HALT      
23F6                          ;*Macro unroll:  _skip
23F6   C3 F6 23               JP   $   
23F9                          ;*Macro unroll:  STRUC_PUSH $
23F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23F9                STRUC_12:   .SET   STRUC_11   
23F9                STRUC_11:   .SET   STRUC_10   
23F9                STRUC_10:   .SET   STRUC_9   
23F9                STRUC_9:   .SET   STRUC_8   
23F9                STRUC_8:   .SET   STRUC_7   
23F9                STRUC_7:   .SET   STRUC_6   
23F9                STRUC_6:   .SET   STRUC_5   
23F9                STRUC_5:   .SET   STRUC_4   
23F9                STRUC_4:   .SET   STRUC_3   
23F9                STRUC_3:   .SET   STRUC_2   
23F9                STRUC_2:   .SET   STRUC_TOP   
23F9                STRUC_TOP:   .SET   $   
23F9                TE_FAILM_2663S55:      
23F9   13 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 20 3D 20 31 32 33 .PSTR   "constant x123 = 123"   
240D                          ;*Macro unroll:  _endskip
240D                          ;*Macro unroll:  STRUC_FWD
240D                CUR_ADR:   .SET   $   
23F7                          .ORG   STRUC_TOP - 2   
23F7   0D 24                  DW   CUR_ADR   
240D                          .ORG   CUR_ADR   
240D                          ;*Macro unroll:  STRUC_POP
240D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
240D                STRUC_TOP:   .SET   STRUC_2   
240D                STRUC_2:   .SET   STRUC_3   
240D                STRUC_3:   .SET   STRUC_4   
240D                STRUC_4:   .SET   STRUC_5   
240D                STRUC_5:   .SET   STRUC_6   
240D                STRUC_6:   .SET   STRUC_7   
240D                STRUC_7:   .SET   STRUC_8   
240D                STRUC_8:   .SET   STRUC_9   
240D                STRUC_9:   .SET   STRUC_10   
240D                STRUC_10:   .SET   STRUC_11   
240D                STRUC_11:   .SET   STRUC_12   
240D                STRUC_12:   .SET   0   
240D                TF_DONEM_2663S55:      
240D                          ;*Macro unroll: TEST_SET_TEXT "variable v1"
240D   2A 02 2E               LD   HL,(lineBufStart)   
2410   22 08 2E               LD   (lineBufTop),HL   
2413   22 06 2E               LD   (currkey),HL   
2416   21 1F 24               LD   HL,tst_textM_2664S57   
2419   22 20 30               LD   (char_pointer),HL   
241C                          ;*Macro unroll:  _skip
241C   C3 1C 24               JP   $   
241F                          ;*Macro unroll:  STRUC_PUSH $
241F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
241F                STRUC_12:   .SET   STRUC_11   
241F                STRUC_11:   .SET   STRUC_10   
241F                STRUC_10:   .SET   STRUC_9   
241F                STRUC_9:   .SET   STRUC_8   
241F                STRUC_8:   .SET   STRUC_7   
241F                STRUC_7:   .SET   STRUC_6   
241F                STRUC_6:   .SET   STRUC_5   
241F                STRUC_5:   .SET   STRUC_4   
241F                STRUC_4:   .SET   STRUC_3   
241F                STRUC_3:   .SET   STRUC_2   
241F                STRUC_2:   .SET   STRUC_TOP   
241F                STRUC_TOP:   .SET   $   
241F                TST_TEXTM_2664S57:      
241F   76 61 72 69 61 62 6C 65 20 76 31 0D 0A FF 0D 0A DB   "variable v1","\r\n",-1,"\r\n"   
242F                          ;*Macro unroll:  _endskip
242F                          ;*Macro unroll:  STRUC_FWD
242F                CUR_ADR:   .SET   $   
241D                          .ORG   STRUC_TOP - 2   
241D   2F 24                  DW   CUR_ADR   
242F                          .ORG   CUR_ADR   
242F                          ;*Macro unroll:  STRUC_POP
242F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
242F                STRUC_TOP:   .SET   STRUC_2   
242F                STRUC_2:   .SET   STRUC_3   
242F                STRUC_3:   .SET   STRUC_4   
242F                STRUC_4:   .SET   STRUC_5   
242F                STRUC_5:   .SET   STRUC_6   
242F                STRUC_6:   .SET   STRUC_7   
242F                STRUC_7:   .SET   STRUC_8   
242F                STRUC_8:   .SET   STRUC_9   
242F                STRUC_9:   .SET   STRUC_10   
242F                STRUC_10:   .SET   STRUC_11   
242F                STRUC_11:   .SET   STRUC_12   
242F                STRUC_12:   .SET   0   
242F                          ;*Macro unroll: INTERPRET
242F   CF                     RST   $08   
2430   52 0B                  DW   interpret   
2432   87 0F                  DW   exit_forth   
2434                          ;*Macro unroll: ppushValue 123
2434                          ;*Macro unroll:  ppush0 B,C
2434   DD 71 00               LD   (IX+0),C   
2437   DD 23                  INC   IX   
2439   DD 70 00               LD   (IX+0),B   
243C   DD 23                  INC   IX   
243E   01 7B 00               LD   BC,123   
2441                          ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
2441   2A 02 2E               LD   HL,(lineBufStart)   
2444   22 08 2E               LD   (lineBufTop),HL   
2447   22 06 2E               LD   (currkey),HL   
244A   21 53 24               LD   HL,tst_textM_2667S60   
244D   22 20 30               LD   (char_pointer),HL   
2450                          ;*Macro unroll:  _skip
2450   C3 50 24               JP   $   
2453                          ;*Macro unroll:  STRUC_PUSH $
2453                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2453                STRUC_12:   .SET   STRUC_11   
2453                STRUC_11:   .SET   STRUC_10   
2453                STRUC_10:   .SET   STRUC_9   
2453                STRUC_9:   .SET   STRUC_8   
2453                STRUC_8:   .SET   STRUC_7   
2453                STRUC_7:   .SET   STRUC_6   
2453                STRUC_6:   .SET   STRUC_5   
2453                STRUC_5:   .SET   STRUC_4   
2453                STRUC_4:   .SET   STRUC_3   
2453                STRUC_3:   .SET   STRUC_2   
2453                STRUC_2:   .SET   STRUC_TOP   
2453                STRUC_TOP:   .SET   $   
2453                TST_TEXTM_2667S60:      
2453   31 32 33 20 76 31 20 21 0D 0A FF 0D 0A DB   "123 v1 !","\r\n",-1,"\r\n"   
2460                          ;*Macro unroll:  _endskip
2460                          ;*Macro unroll:  STRUC_FWD
2460                CUR_ADR:   .SET   $   
2451                          .ORG   STRUC_TOP - 2   
2451   60 24                  DW   CUR_ADR   
2460                          .ORG   CUR_ADR   
2460                          ;*Macro unroll:  STRUC_POP
2460                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2460                STRUC_TOP:   .SET   STRUC_2   
2460                STRUC_2:   .SET   STRUC_3   
2460                STRUC_3:   .SET   STRUC_4   
2460                STRUC_4:   .SET   STRUC_5   
2460                STRUC_5:   .SET   STRUC_6   
2460                STRUC_6:   .SET   STRUC_7   
2460                STRUC_7:   .SET   STRUC_8   
2460                STRUC_8:   .SET   STRUC_9   
2460                STRUC_9:   .SET   STRUC_10   
2460                STRUC_10:   .SET   STRUC_11   
2460                STRUC_11:   .SET   STRUC_12   
2460                STRUC_12:   .SET   0   
2460                          ;*Macro unroll: INTERPRET
2460   CF                     RST   $08   
2461   52 0B                  DW   interpret   
2463   87 0F                  DW   exit_forth   
2465                          ;*Macro unroll: TEST_SET_TEXT "v1 @"
2465   2A 02 2E               LD   HL,(lineBufStart)   
2468   22 08 2E               LD   (lineBufTop),HL   
246B   22 06 2E               LD   (currkey),HL   
246E   21 77 24               LD   HL,tst_textM_2669S62   
2471   22 20 30               LD   (char_pointer),HL   
2474                          ;*Macro unroll:  _skip
2474   C3 74 24               JP   $   
2477                          ;*Macro unroll:  STRUC_PUSH $
2477                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2477                STRUC_12:   .SET   STRUC_11   
2477                STRUC_11:   .SET   STRUC_10   
2477                STRUC_10:   .SET   STRUC_9   
2477                STRUC_9:   .SET   STRUC_8   
2477                STRUC_8:   .SET   STRUC_7   
2477                STRUC_7:   .SET   STRUC_6   
2477                STRUC_6:   .SET   STRUC_5   
2477                STRUC_5:   .SET   STRUC_4   
2477                STRUC_4:   .SET   STRUC_3   
2477                STRUC_3:   .SET   STRUC_2   
2477                STRUC_2:   .SET   STRUC_TOP   
2477                STRUC_TOP:   .SET   $   
2477                TST_TEXTM_2669S62:      
2477   76 31 20 40 0D 0A FF 0D 0A DB   "v1 @","\r\n",-1,"\r\n"   
2480                          ;*Macro unroll:  _endskip
2480                          ;*Macro unroll:  STRUC_FWD
2480                CUR_ADR:   .SET   $   
2475                          .ORG   STRUC_TOP - 2   
2475   80 24                  DW   CUR_ADR   
2480                          .ORG   CUR_ADR   
2480                          ;*Macro unroll:  STRUC_POP
2480                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2480                STRUC_TOP:   .SET   STRUC_2   
2480                STRUC_2:   .SET   STRUC_3   
2480                STRUC_3:   .SET   STRUC_4   
2480                STRUC_4:   .SET   STRUC_5   
2480                STRUC_5:   .SET   STRUC_6   
2480                STRUC_6:   .SET   STRUC_7   
2480                STRUC_7:   .SET   STRUC_8   
2480                STRUC_8:   .SET   STRUC_9   
2480                STRUC_9:   .SET   STRUC_10   
2480                STRUC_10:   .SET   STRUC_11   
2480                STRUC_11:   .SET   STRUC_12   
2480                STRUC_12:   .SET   0   
2480                          ;*Macro unroll: INTERPRET
2480   CF                     RST   $08   
2481   52 0B                  DW   interpret   
2483   87 0F                  DW   exit_forth   
2485                          ;*Macro unroll: EXPECT 123, "variable v1 = 123"
2485   CD B9 07               CALL   printNum   
2488                          ;*Macro unroll:  loadWord H,L, B,C
2488   69                     LD   L,C   
2489   60                     LD   H,B   
248A   69                     LD   L,C   
248B                          ;*Macro unroll:  ppop0 B,C
248B   DD 2B                  DEC   IX   
248D   DD 46 00               LD   B,(IX+0)   
2490   DD 2B                  DEC   IX   
2492   DD 4E 00               LD   C,(IX+0)   
2495                          ;*Macro unroll:  CMP16 123
2495   11 7B 00               LD   DE,123   
2498   B7                     OR   A   
2499   ED 52                  SBC   HL,DE   
249B                          ;*Macro unroll:  checkZeroWord H,L
249B   7D                     LD   A,L   
249C   B4                     OR   H   
249D   CA C2 24               JP   z,tf_doneM_2671S64   
24A0   11 3B 07               LD   DE,FAILED   
24A3   CD C4 01               CALL   printPStr   
24A6   11 B0 24               LD   DE,te_failM_2671S64   
24A9   CD C4 01               CALL   printPStr   
24AC   76                     HALT      
24AD                          ;*Macro unroll:  _skip
24AD   C3 AD 24               JP   $   
24B0                          ;*Macro unroll:  STRUC_PUSH $
24B0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24B0                STRUC_12:   .SET   STRUC_11   
24B0                STRUC_11:   .SET   STRUC_10   
24B0                STRUC_10:   .SET   STRUC_9   
24B0                STRUC_9:   .SET   STRUC_8   
24B0                STRUC_8:   .SET   STRUC_7   
24B0                STRUC_7:   .SET   STRUC_6   
24B0                STRUC_6:   .SET   STRUC_5   
24B0                STRUC_5:   .SET   STRUC_4   
24B0                STRUC_4:   .SET   STRUC_3   
24B0                STRUC_3:   .SET   STRUC_2   
24B0                STRUC_2:   .SET   STRUC_TOP   
24B0                STRUC_TOP:   .SET   $   
24B0                TE_FAILM_2671S64:      
24B0   11 76 61 72 69 61 62 6C 65 20 76 31 20 3D 20 31 32 33 .PSTR   "variable v1 = 123"   
24C2                          ;*Macro unroll:  _endskip
24C2                          ;*Macro unroll:  STRUC_FWD
24C2                CUR_ADR:   .SET   $   
24AE                          .ORG   STRUC_TOP - 2   
24AE   C2 24                  DW   CUR_ADR   
24C2                          .ORG   CUR_ADR   
24C2                          ;*Macro unroll:  STRUC_POP
24C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24C2                STRUC_TOP:   .SET   STRUC_2   
24C2                STRUC_2:   .SET   STRUC_3   
24C2                STRUC_3:   .SET   STRUC_4   
24C2                STRUC_4:   .SET   STRUC_5   
24C2                STRUC_5:   .SET   STRUC_6   
24C2                STRUC_6:   .SET   STRUC_7   
24C2                STRUC_7:   .SET   STRUC_8   
24C2                STRUC_8:   .SET   STRUC_9   
24C2                STRUC_9:   .SET   STRUC_10   
24C2                STRUC_10:   .SET   STRUC_11   
24C2                STRUC_11:   .SET   STRUC_12   
24C2                STRUC_12:   .SET   0   
24C2                TF_DONEM_2671S64:      
24C2                          ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
24C2   2A 02 2E               LD   HL,(lineBufStart)   
24C5   22 08 2E               LD   (lineBufTop),HL   
24C8   22 06 2E               LD   (currkey),HL   
24CB   21 D4 24               LD   HL,tst_textM_2672S66   
24CE   22 20 30               LD   (char_pointer),HL   
24D1                          ;*Macro unroll:  _skip
24D1   C3 D1 24               JP   $   
24D4                          ;*Macro unroll:  STRUC_PUSH $
24D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24D4                STRUC_12:   .SET   STRUC_11   
24D4                STRUC_11:   .SET   STRUC_10   
24D4                STRUC_10:   .SET   STRUC_9   
24D4                STRUC_9:   .SET   STRUC_8   
24D4                STRUC_8:   .SET   STRUC_7   
24D4                STRUC_7:   .SET   STRUC_6   
24D4                STRUC_6:   .SET   STRUC_5   
24D4                STRUC_5:   .SET   STRUC_4   
24D4                STRUC_4:   .SET   STRUC_3   
24D4                STRUC_3:   .SET   STRUC_2   
24D4                STRUC_2:   .SET   STRUC_TOP   
24D4                STRUC_TOP:   .SET   $   
24D4                TST_TEXTM_2672S66:      
24D4   3A 20 64 62 6C 20 64 75 70 20 2B 20 3B 0D 0A FF 0D 0A DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
24E6                          ;*Macro unroll:  _endskip
24E6                          ;*Macro unroll:  STRUC_FWD
24E6                CUR_ADR:   .SET   $   
24D2                          .ORG   STRUC_TOP - 2   
24D2   E6 24                  DW   CUR_ADR   
24E6                          .ORG   CUR_ADR   
24E6                          ;*Macro unroll:  STRUC_POP
24E6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24E6                STRUC_TOP:   .SET   STRUC_2   
24E6                STRUC_2:   .SET   STRUC_3   
24E6                STRUC_3:   .SET   STRUC_4   
24E6                STRUC_4:   .SET   STRUC_5   
24E6                STRUC_5:   .SET   STRUC_6   
24E6                STRUC_6:   .SET   STRUC_7   
24E6                STRUC_7:   .SET   STRUC_8   
24E6                STRUC_8:   .SET   STRUC_9   
24E6                STRUC_9:   .SET   STRUC_10   
24E6                STRUC_10:   .SET   STRUC_11   
24E6                STRUC_11:   .SET   STRUC_12   
24E6                STRUC_12:   .SET   0   
24E6                          ;*Macro unroll: INTERPRET
24E6   CF                     RST   $08   
24E7   52 0B                  DW   interpret   
24E9   87 0F                  DW   exit_forth   
24EB                          ;*Macro unroll: ppushValue 2
24EB                          ;*Macro unroll:  ppush0 B,C
24EB   DD 71 00               LD   (IX+0),C   
24EE   DD 23                  INC   IX   
24F0   DD 70 00               LD   (IX+0),B   
24F3   DD 23                  INC   IX   
24F5   01 02 00               LD   BC,2   
24F8                          ;*Macro unroll: TEST_SET_TEXT "dbl"
24F8   2A 02 2E               LD   HL,(lineBufStart)   
24FB   22 08 2E               LD   (lineBufTop),HL   
24FE   22 06 2E               LD   (currkey),HL   
2501   21 0A 25               LD   HL,tst_textM_2675S69   
2504   22 20 30               LD   (char_pointer),HL   
2507                          ;*Macro unroll:  _skip
2507   C3 07 25               JP   $   
250A                          ;*Macro unroll:  STRUC_PUSH $
250A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
250A                STRUC_12:   .SET   STRUC_11   
250A                STRUC_11:   .SET   STRUC_10   
250A                STRUC_10:   .SET   STRUC_9   
250A                STRUC_9:   .SET   STRUC_8   
250A                STRUC_8:   .SET   STRUC_7   
250A                STRUC_7:   .SET   STRUC_6   
250A                STRUC_6:   .SET   STRUC_5   
250A                STRUC_5:   .SET   STRUC_4   
250A                STRUC_4:   .SET   STRUC_3   
250A                STRUC_3:   .SET   STRUC_2   
250A                STRUC_2:   .SET   STRUC_TOP   
250A                STRUC_TOP:   .SET   $   
250A                TST_TEXTM_2675S69:      
250A   64 62 6C 0D 0A FF 0D 0A DB   "dbl","\r\n",-1,"\r\n"   
2512                          ;*Macro unroll:  _endskip
2512                          ;*Macro unroll:  STRUC_FWD
2512                CUR_ADR:   .SET   $   
2508                          .ORG   STRUC_TOP - 2   
2508   12 25                  DW   CUR_ADR   
2512                          .ORG   CUR_ADR   
2512                          ;*Macro unroll:  STRUC_POP
2512                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2512                STRUC_TOP:   .SET   STRUC_2   
2512                STRUC_2:   .SET   STRUC_3   
2512                STRUC_3:   .SET   STRUC_4   
2512                STRUC_4:   .SET   STRUC_5   
2512                STRUC_5:   .SET   STRUC_6   
2512                STRUC_6:   .SET   STRUC_7   
2512                STRUC_7:   .SET   STRUC_8   
2512                STRUC_8:   .SET   STRUC_9   
2512                STRUC_9:   .SET   STRUC_10   
2512                STRUC_10:   .SET   STRUC_11   
2512                STRUC_11:   .SET   STRUC_12   
2512                STRUC_12:   .SET   0   
2512                          ;*Macro unroll: INTERPRET
2512   CF                     RST   $08   
2513   52 0B                  DW   interpret   
2515   87 0F                  DW   exit_forth   
2517                          ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
2517   CD B9 07               CALL   printNum   
251A                          ;*Macro unroll:  loadWord H,L, B,C
251A   69                     LD   L,C   
251B   60                     LD   H,B   
251C   69                     LD   L,C   
251D                          ;*Macro unroll:  ppop0 B,C
251D   DD 2B                  DEC   IX   
251F   DD 46 00               LD   B,(IX+0)   
2522   DD 2B                  DEC   IX   
2524   DD 4E 00               LD   C,(IX+0)   
2527                          ;*Macro unroll:  CMP16 4
2527   11 04 00               LD   DE,4   
252A   B7                     OR   A   
252B   ED 52                  SBC   HL,DE   
252D                          ;*Macro unroll:  checkZeroWord H,L
252D   7D                     LD   A,L   
252E   B4                     OR   H   
252F   CA 52 25               JP   z,tf_doneM_2677S71   
2532   11 3B 07               LD   DE,FAILED   
2535   CD C4 01               CALL   printPStr   
2538   11 42 25               LD   DE,te_failM_2677S71   
253B   CD C4 01               CALL   printPStr   
253E   76                     HALT      
253F                          ;*Macro unroll:  _skip
253F   C3 3F 25               JP   $   
2542                          ;*Macro unroll:  STRUC_PUSH $
2542                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2542                STRUC_12:   .SET   STRUC_11   
2542                STRUC_11:   .SET   STRUC_10   
2542                STRUC_10:   .SET   STRUC_9   
2542                STRUC_9:   .SET   STRUC_8   
2542                STRUC_8:   .SET   STRUC_7   
2542                STRUC_7:   .SET   STRUC_6   
2542                STRUC_6:   .SET   STRUC_5   
2542                STRUC_5:   .SET   STRUC_4   
2542                STRUC_4:   .SET   STRUC_3   
2542                STRUC_3:   .SET   STRUC_2   
2542                STRUC_2:   .SET   STRUC_TOP   
2542                STRUC_TOP:   .SET   $   
2542                TE_FAILM_2677S71:      
2542   0F 63 6F 6C 6F 6E 20 64 62 6C 20 32 20 3D 20 34 .PSTR   "colon dbl 2 = 4"   
2552                          ;*Macro unroll:  _endskip
2552                          ;*Macro unroll:  STRUC_FWD
2552                CUR_ADR:   .SET   $   
2540                          .ORG   STRUC_TOP - 2   
2540   52 25                  DW   CUR_ADR   
2552                          .ORG   CUR_ADR   
2552                          ;*Macro unroll:  STRUC_POP
2552                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2552                STRUC_TOP:   .SET   STRUC_2   
2552                STRUC_2:   .SET   STRUC_3   
2552                STRUC_3:   .SET   STRUC_4   
2552                STRUC_4:   .SET   STRUC_5   
2552                STRUC_5:   .SET   STRUC_6   
2552                STRUC_6:   .SET   STRUC_7   
2552                STRUC_7:   .SET   STRUC_8   
2552                STRUC_8:   .SET   STRUC_9   
2552                STRUC_9:   .SET   STRUC_10   
2552                STRUC_10:   .SET   STRUC_11   
2552                STRUC_11:   .SET   STRUC_12   
2552                STRUC_12:   .SET   0   
2552                TF_DONEM_2677S71:      
2552                          ;*Macro unroll: ppushValue 200
2552                          ;*Macro unroll:  ppush0 B,C
2552   DD 71 00               LD   (IX+0),C   
2555   DD 23                  INC   IX   
2557   DD 70 00               LD   (IX+0),B   
255A   DD 23                  INC   IX   
255C   01 C8 00               LD   BC,200   
255F                          ;*Macro unroll: ppushValue 1
255F                          ;*Macro unroll:  ppush0 B,C
255F   DD 71 00               LD   (IX+0),C   
2562   DD 23                  INC   IX   
2564   DD 70 00               LD   (IX+0),B   
2567   DD 23                  INC   IX   
2569   01 01 00               LD   BC,1   
256C                          ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
256C   2A 02 2E               LD   HL,(lineBufStart)   
256F   22 08 2E               LD   (lineBufTop),HL   
2572   22 06 2E               LD   (currkey),HL   
2575   21 7E 25               LD   HL,tst_textM_2680S75   
2578   22 20 30               LD   (char_pointer),HL   
257B                          ;*Macro unroll:  _skip
257B   C3 7B 25               JP   $   
257E                          ;*Macro unroll:  STRUC_PUSH $
257E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
257E                STRUC_12:   .SET   STRUC_11   
257E                STRUC_11:   .SET   STRUC_10   
257E                STRUC_10:   .SET   STRUC_9   
257E                STRUC_9:   .SET   STRUC_8   
257E                STRUC_8:   .SET   STRUC_7   
257E                STRUC_7:   .SET   STRUC_6   
257E                STRUC_6:   .SET   STRUC_5   
257E                STRUC_5:   .SET   STRUC_4   
257E                STRUC_4:   .SET   STRUC_3   
257E                STRUC_3:   .SET   STRUC_2   
257E                STRUC_2:   .SET   STRUC_TOP   
257E                STRUC_TOP:   .SET   $   
257E                TST_TEXTM_2680S75:      
257E   3A 20 74 65 73 74 69 66 32 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
259B                          ;*Macro unroll:  _endskip
259B                          ;*Macro unroll:  STRUC_FWD
259B                CUR_ADR:   .SET   $   
257C                          .ORG   STRUC_TOP - 2   
257C   9B 25                  DW   CUR_ADR   
259B                          .ORG   CUR_ADR   
259B                          ;*Macro unroll:  STRUC_POP
259B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
259B                STRUC_TOP:   .SET   STRUC_2   
259B                STRUC_2:   .SET   STRUC_3   
259B                STRUC_3:   .SET   STRUC_4   
259B                STRUC_4:   .SET   STRUC_5   
259B                STRUC_5:   .SET   STRUC_6   
259B                STRUC_6:   .SET   STRUC_7   
259B                STRUC_7:   .SET   STRUC_8   
259B                STRUC_8:   .SET   STRUC_9   
259B                STRUC_9:   .SET   STRUC_10   
259B                STRUC_10:   .SET   STRUC_11   
259B                STRUC_11:   .SET   STRUC_12   
259B                STRUC_12:   .SET   0   
259B                          ;*Macro unroll: INTERPRET
259B   CF                     RST   $08   
259C   52 0B                  DW   interpret   
259E   87 0F                  DW   exit_forth   
25A0                          ;*Macro unroll: TEST_SET_TEXT "testif2"
25A0   2A 02 2E               LD   HL,(lineBufStart)   
25A3   22 08 2E               LD   (lineBufTop),HL   
25A6   22 06 2E               LD   (currkey),HL   
25A9   21 B2 25               LD   HL,tst_textM_2682S78   
25AC   22 20 30               LD   (char_pointer),HL   
25AF                          ;*Macro unroll:  _skip
25AF   C3 AF 25               JP   $   
25B2                          ;*Macro unroll:  STRUC_PUSH $
25B2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25B2                STRUC_12:   .SET   STRUC_11   
25B2                STRUC_11:   .SET   STRUC_10   
25B2                STRUC_10:   .SET   STRUC_9   
25B2                STRUC_9:   .SET   STRUC_8   
25B2                STRUC_8:   .SET   STRUC_7   
25B2                STRUC_7:   .SET   STRUC_6   
25B2                STRUC_6:   .SET   STRUC_5   
25B2                STRUC_5:   .SET   STRUC_4   
25B2                STRUC_4:   .SET   STRUC_3   
25B2                STRUC_3:   .SET   STRUC_2   
25B2                STRUC_2:   .SET   STRUC_TOP   
25B2                STRUC_TOP:   .SET   $   
25B2                TST_TEXTM_2682S78:      
25B2   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
25BE                          ;*Macro unroll:  _endskip
25BE                          ;*Macro unroll:  STRUC_FWD
25BE                CUR_ADR:   .SET   $   
25B0                          .ORG   STRUC_TOP - 2   
25B0   BE 25                  DW   CUR_ADR   
25BE                          .ORG   CUR_ADR   
25BE                          ;*Macro unroll:  STRUC_POP
25BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
25BE                STRUC_TOP:   .SET   STRUC_2   
25BE                STRUC_2:   .SET   STRUC_3   
25BE                STRUC_3:   .SET   STRUC_4   
25BE                STRUC_4:   .SET   STRUC_5   
25BE                STRUC_5:   .SET   STRUC_6   
25BE                STRUC_6:   .SET   STRUC_7   
25BE                STRUC_7:   .SET   STRUC_8   
25BE                STRUC_8:   .SET   STRUC_9   
25BE                STRUC_9:   .SET   STRUC_10   
25BE                STRUC_10:   .SET   STRUC_11   
25BE                STRUC_11:   .SET   STRUC_12   
25BE                STRUC_12:   .SET   0   
25BE                          ;*Macro unroll: INTERPRET
25BE   CF                     RST   $08   
25BF   52 0B                  DW   interpret   
25C1   87 0F                  DW   exit_forth   
25C3                          ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
25C3   CD B9 07               CALL   printNum   
25C6                          ;*Macro unroll:  loadWord H,L, B,C
25C6   69                     LD   L,C   
25C7   60                     LD   H,B   
25C8   69                     LD   L,C   
25C9                          ;*Macro unroll:  ppop0 B,C
25C9   DD 2B                  DEC   IX   
25CB   DD 46 00               LD   B,(IX+0)   
25CE   DD 2B                  DEC   IX   
25D0   DD 4E 00               LD   C,(IX+0)   
25D3                          ;*Macro unroll:  CMP16 100
25D3   11 64 00               LD   DE,100   
25D6   B7                     OR   A   
25D7   ED 52                  SBC   HL,DE   
25D9                          ;*Macro unroll:  checkZeroWord H,L
25D9   7D                     LD   A,L   
25DA   B4                     OR   H   
25DB   CA 05 26               JP   z,tf_doneM_2684S80   
25DE   11 3B 07               LD   DE,FAILED   
25E1   CD C4 01               CALL   printPStr   
25E4   11 EE 25               LD   DE,te_failM_2684S80   
25E7   CD C4 01               CALL   printPStr   
25EA   76                     HALT      
25EB                          ;*Macro unroll:  _skip
25EB   C3 EB 25               JP   $   
25EE                          ;*Macro unroll:  STRUC_PUSH $
25EE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25EE                STRUC_12:   .SET   STRUC_11   
25EE                STRUC_11:   .SET   STRUC_10   
25EE                STRUC_10:   .SET   STRUC_9   
25EE                STRUC_9:   .SET   STRUC_8   
25EE                STRUC_8:   .SET   STRUC_7   
25EE                STRUC_7:   .SET   STRUC_6   
25EE                STRUC_6:   .SET   STRUC_5   
25EE                STRUC_5:   .SET   STRUC_4   
25EE                STRUC_4:   .SET   STRUC_3   
25EE                STRUC_3:   .SET   STRUC_2   
25EE                STRUC_2:   .SET   STRUC_TOP   
25EE                STRUC_TOP:   .SET   $   
25EE                TE_FAILM_2684S80:      
25EE   16 31 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 31 30 30 .PSTR   "1 if 100 endif --> 100"   
2605                          ;*Macro unroll:  _endskip
2605                          ;*Macro unroll:  STRUC_FWD
2605                CUR_ADR:   .SET   $   
25EC                          .ORG   STRUC_TOP - 2   
25EC   05 26                  DW   CUR_ADR   
2605                          .ORG   CUR_ADR   
2605                          ;*Macro unroll:  STRUC_POP
2605                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2605                STRUC_TOP:   .SET   STRUC_2   
2605                STRUC_2:   .SET   STRUC_3   
2605                STRUC_3:   .SET   STRUC_4   
2605                STRUC_4:   .SET   STRUC_5   
2605                STRUC_5:   .SET   STRUC_6   
2605                STRUC_6:   .SET   STRUC_7   
2605                STRUC_7:   .SET   STRUC_8   
2605                STRUC_8:   .SET   STRUC_9   
2605                STRUC_9:   .SET   STRUC_10   
2605                STRUC_10:   .SET   STRUC_11   
2605                STRUC_11:   .SET   STRUC_12   
2605                STRUC_12:   .SET   0   
2605                TF_DONEM_2684S80:      
2605                          ;*Macro unroll: ppushValue 0
2605                          ;*Macro unroll:  ppush0 B,C
2605   DD 71 00               LD   (IX+0),C   
2608   DD 23                  INC   IX   
260A   DD 70 00               LD   (IX+0),B   
260D   DD 23                  INC   IX   
260F   01 00 00               LD   BC,0   
2612                          ;*Macro unroll: TEST_SET_TEXT "testif2"
2612   2A 02 2E               LD   HL,(lineBufStart)   
2615   22 08 2E               LD   (lineBufTop),HL   
2618   22 06 2E               LD   (currkey),HL   
261B   21 24 26               LD   HL,tst_textM_2686S83   
261E   22 20 30               LD   (char_pointer),HL   
2621                          ;*Macro unroll:  _skip
2621   C3 21 26               JP   $   
2624                          ;*Macro unroll:  STRUC_PUSH $
2624                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2624                STRUC_12:   .SET   STRUC_11   
2624                STRUC_11:   .SET   STRUC_10   
2624                STRUC_10:   .SET   STRUC_9   
2624                STRUC_9:   .SET   STRUC_8   
2624                STRUC_8:   .SET   STRUC_7   
2624                STRUC_7:   .SET   STRUC_6   
2624                STRUC_6:   .SET   STRUC_5   
2624                STRUC_5:   .SET   STRUC_4   
2624                STRUC_4:   .SET   STRUC_3   
2624                STRUC_3:   .SET   STRUC_2   
2624                STRUC_2:   .SET   STRUC_TOP   
2624                STRUC_TOP:   .SET   $   
2624                TST_TEXTM_2686S83:      
2624   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
2630                          ;*Macro unroll:  _endskip
2630                          ;*Macro unroll:  STRUC_FWD
2630                CUR_ADR:   .SET   $   
2622                          .ORG   STRUC_TOP - 2   
2622   30 26                  DW   CUR_ADR   
2630                          .ORG   CUR_ADR   
2630                          ;*Macro unroll:  STRUC_POP
2630                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2630                STRUC_TOP:   .SET   STRUC_2   
2630                STRUC_2:   .SET   STRUC_3   
2630                STRUC_3:   .SET   STRUC_4   
2630                STRUC_4:   .SET   STRUC_5   
2630                STRUC_5:   .SET   STRUC_6   
2630                STRUC_6:   .SET   STRUC_7   
2630                STRUC_7:   .SET   STRUC_8   
2630                STRUC_8:   .SET   STRUC_9   
2630                STRUC_9:   .SET   STRUC_10   
2630                STRUC_10:   .SET   STRUC_11   
2630                STRUC_11:   .SET   STRUC_12   
2630                STRUC_12:   .SET   0   
2630                          ;*Macro unroll: INTERPRET
2630   CF                     RST   $08   
2631   52 0B                  DW   interpret   
2633   87 0F                  DW   exit_forth   
2635                          ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
2635   CD B9 07               CALL   printNum   
2638                          ;*Macro unroll:  loadWord H,L, B,C
2638   69                     LD   L,C   
2639   60                     LD   H,B   
263A   69                     LD   L,C   
263B                          ;*Macro unroll:  ppop0 B,C
263B   DD 2B                  DEC   IX   
263D   DD 46 00               LD   B,(IX+0)   
2640   DD 2B                  DEC   IX   
2642   DD 4E 00               LD   C,(IX+0)   
2645                          ;*Macro unroll:  CMP16 200
2645   11 C8 00               LD   DE,200   
2648   B7                     OR   A   
2649   ED 52                  SBC   HL,DE   
264B                          ;*Macro unroll:  checkZeroWord H,L
264B   7D                     LD   A,L   
264C   B4                     OR   H   
264D   CA 77 26               JP   z,tf_doneM_2688S85   
2650   11 3B 07               LD   DE,FAILED   
2653   CD C4 01               CALL   printPStr   
2656   11 60 26               LD   DE,te_failM_2688S85   
2659   CD C4 01               CALL   printPStr   
265C   76                     HALT      
265D                          ;*Macro unroll:  _skip
265D   C3 5D 26               JP   $   
2660                          ;*Macro unroll:  STRUC_PUSH $
2660                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2660                STRUC_12:   .SET   STRUC_11   
2660                STRUC_11:   .SET   STRUC_10   
2660                STRUC_10:   .SET   STRUC_9   
2660                STRUC_9:   .SET   STRUC_8   
2660                STRUC_8:   .SET   STRUC_7   
2660                STRUC_7:   .SET   STRUC_6   
2660                STRUC_6:   .SET   STRUC_5   
2660                STRUC_5:   .SET   STRUC_4   
2660                STRUC_4:   .SET   STRUC_3   
2660                STRUC_3:   .SET   STRUC_2   
2660                STRUC_2:   .SET   STRUC_TOP   
2660                STRUC_TOP:   .SET   $   
2660                TE_FAILM_2688S85:      
2660   16 30 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 32 30 30 .PSTR   "0 if 100 endif --> 200"   
2677                          ;*Macro unroll:  _endskip
2677                          ;*Macro unroll:  STRUC_FWD
2677                CUR_ADR:   .SET   $   
265E                          .ORG   STRUC_TOP - 2   
265E   77 26                  DW   CUR_ADR   
2677                          .ORG   CUR_ADR   
2677                          ;*Macro unroll:  STRUC_POP
2677                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2677                STRUC_TOP:   .SET   STRUC_2   
2677                STRUC_2:   .SET   STRUC_3   
2677                STRUC_3:   .SET   STRUC_4   
2677                STRUC_4:   .SET   STRUC_5   
2677                STRUC_5:   .SET   STRUC_6   
2677                STRUC_6:   .SET   STRUC_7   
2677                STRUC_7:   .SET   STRUC_8   
2677                STRUC_8:   .SET   STRUC_9   
2677                STRUC_9:   .SET   STRUC_10   
2677                STRUC_10:   .SET   STRUC_11   
2677                STRUC_11:   .SET   STRUC_12   
2677                STRUC_12:   .SET   0   
2677                TF_DONEM_2688S85:      
2677                          ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
2677   2A 02 2E               LD   HL,(lineBufStart)   
267A   22 08 2E               LD   (lineBufTop),HL   
267D   22 06 2E               LD   (currkey),HL   
2680   21 89 26               LD   HL,tst_textM_2689S87   
2683   22 20 30               LD   (char_pointer),HL   
2686                          ;*Macro unroll:  _skip
2686   C3 86 26               JP   $   
2689                          ;*Macro unroll:  STRUC_PUSH $
2689                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2689                STRUC_12:   .SET   STRUC_11   
2689                STRUC_11:   .SET   STRUC_10   
2689                STRUC_10:   .SET   STRUC_9   
2689                STRUC_9:   .SET   STRUC_8   
2689                STRUC_8:   .SET   STRUC_7   
2689                STRUC_7:   .SET   STRUC_6   
2689                STRUC_6:   .SET   STRUC_5   
2689                STRUC_5:   .SET   STRUC_4   
2689                STRUC_4:   .SET   STRUC_3   
2689                STRUC_3:   .SET   STRUC_2   
2689                STRUC_2:   .SET   STRUC_TOP   
2689                STRUC_TOP:   .SET   $   
2689                TST_TEXTM_2689S87:      
2689   3A 20 74 65 73 74 69 66 33 20 69 66 20 31 30 30 20 65 6C 73 65 20 32 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
26AF                          ;*Macro unroll:  _endskip
26AF                          ;*Macro unroll:  STRUC_FWD
26AF                CUR_ADR:   .SET   $   
2687                          .ORG   STRUC_TOP - 2   
2687   AF 26                  DW   CUR_ADR   
26AF                          .ORG   CUR_ADR   
26AF                          ;*Macro unroll:  STRUC_POP
26AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26AF                STRUC_TOP:   .SET   STRUC_2   
26AF                STRUC_2:   .SET   STRUC_3   
26AF                STRUC_3:   .SET   STRUC_4   
26AF                STRUC_4:   .SET   STRUC_5   
26AF                STRUC_5:   .SET   STRUC_6   
26AF                STRUC_6:   .SET   STRUC_7   
26AF                STRUC_7:   .SET   STRUC_8   
26AF                STRUC_8:   .SET   STRUC_9   
26AF                STRUC_9:   .SET   STRUC_10   
26AF                STRUC_10:   .SET   STRUC_11   
26AF                STRUC_11:   .SET   STRUC_12   
26AF                STRUC_12:   .SET   0   
26AF                          ;*Macro unroll: INTERPRET
26AF   CF                     RST   $08   
26B0   52 0B                  DW   interpret   
26B2   87 0F                  DW   exit_forth   
26B4                          ;*Macro unroll: ppushValue 0
26B4                          ;*Macro unroll:  ppush0 B,C
26B4   DD 71 00               LD   (IX+0),C   
26B7   DD 23                  INC   IX   
26B9   DD 70 00               LD   (IX+0),B   
26BC   DD 23                  INC   IX   
26BE   01 00 00               LD   BC,0   
26C1                          ;*Macro unroll: TEST_SET_TEXT "testif3"
26C1   2A 02 2E               LD   HL,(lineBufStart)   
26C4   22 08 2E               LD   (lineBufTop),HL   
26C7   22 06 2E               LD   (currkey),HL   
26CA   21 D3 26               LD   HL,tst_textM_2692S92   
26CD   22 20 30               LD   (char_pointer),HL   
26D0                          ;*Macro unroll:  _skip
26D0   C3 D0 26               JP   $   
26D3                          ;*Macro unroll:  STRUC_PUSH $
26D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
26D3                STRUC_12:   .SET   STRUC_11   
26D3                STRUC_11:   .SET   STRUC_10   
26D3                STRUC_10:   .SET   STRUC_9   
26D3                STRUC_9:   .SET   STRUC_8   
26D3                STRUC_8:   .SET   STRUC_7   
26D3                STRUC_7:   .SET   STRUC_6   
26D3                STRUC_6:   .SET   STRUC_5   
26D3                STRUC_5:   .SET   STRUC_4   
26D3                STRUC_4:   .SET   STRUC_3   
26D3                STRUC_3:   .SET   STRUC_2   
26D3                STRUC_2:   .SET   STRUC_TOP   
26D3                STRUC_TOP:   .SET   $   
26D3                TST_TEXTM_2692S92:      
26D3   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
26DF                          ;*Macro unroll:  _endskip
26DF                          ;*Macro unroll:  STRUC_FWD
26DF                CUR_ADR:   .SET   $   
26D1                          .ORG   STRUC_TOP - 2   
26D1   DF 26                  DW   CUR_ADR   
26DF                          .ORG   CUR_ADR   
26DF                          ;*Macro unroll:  STRUC_POP
26DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26DF                STRUC_TOP:   .SET   STRUC_2   
26DF                STRUC_2:   .SET   STRUC_3   
26DF                STRUC_3:   .SET   STRUC_4   
26DF                STRUC_4:   .SET   STRUC_5   
26DF                STRUC_5:   .SET   STRUC_6   
26DF                STRUC_6:   .SET   STRUC_7   
26DF                STRUC_7:   .SET   STRUC_8   
26DF                STRUC_8:   .SET   STRUC_9   
26DF                STRUC_9:   .SET   STRUC_10   
26DF                STRUC_10:   .SET   STRUC_11   
26DF                STRUC_11:   .SET   STRUC_12   
26DF                STRUC_12:   .SET   0   
26DF                          ;*Macro unroll: INTERPRET
26DF   CF                     RST   $08   
26E0   52 0B                  DW   interpret   
26E2   87 0F                  DW   exit_forth   
26E4                          ;*Macro unroll: EXPECT 200, "0 --> 200"
26E4   CD B9 07               CALL   printNum   
26E7                          ;*Macro unroll:  loadWord H,L, B,C
26E7   69                     LD   L,C   
26E8   60                     LD   H,B   
26E9   69                     LD   L,C   
26EA                          ;*Macro unroll:  ppop0 B,C
26EA   DD 2B                  DEC   IX   
26EC   DD 46 00               LD   B,(IX+0)   
26EF   DD 2B                  DEC   IX   
26F1   DD 4E 00               LD   C,(IX+0)   
26F4                          ;*Macro unroll:  CMP16 200
26F4   11 C8 00               LD   DE,200   
26F7   B7                     OR   A   
26F8   ED 52                  SBC   HL,DE   
26FA                          ;*Macro unroll:  checkZeroWord H,L
26FA   7D                     LD   A,L   
26FB   B4                     OR   H   
26FC   CA 19 27               JP   z,tf_doneM_2694S94   
26FF   11 3B 07               LD   DE,FAILED   
2702   CD C4 01               CALL   printPStr   
2705   11 0F 27               LD   DE,te_failM_2694S94   
2708   CD C4 01               CALL   printPStr   
270B   76                     HALT      
270C                          ;*Macro unroll:  _skip
270C   C3 0C 27               JP   $   
270F                          ;*Macro unroll:  STRUC_PUSH $
270F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
270F                STRUC_12:   .SET   STRUC_11   
270F                STRUC_11:   .SET   STRUC_10   
270F                STRUC_10:   .SET   STRUC_9   
270F                STRUC_9:   .SET   STRUC_8   
270F                STRUC_8:   .SET   STRUC_7   
270F                STRUC_7:   .SET   STRUC_6   
270F                STRUC_6:   .SET   STRUC_5   
270F                STRUC_5:   .SET   STRUC_4   
270F                STRUC_4:   .SET   STRUC_3   
270F                STRUC_3:   .SET   STRUC_2   
270F                STRUC_2:   .SET   STRUC_TOP   
270F                STRUC_TOP:   .SET   $   
270F                TE_FAILM_2694S94:      
270F   09 30 20 2D 2D 3E 20 32 30 30 .PSTR   "0 --> 200"   
2719                          ;*Macro unroll:  _endskip
2719                          ;*Macro unroll:  STRUC_FWD
2719                CUR_ADR:   .SET   $   
270D                          .ORG   STRUC_TOP - 2   
270D   19 27                  DW   CUR_ADR   
2719                          .ORG   CUR_ADR   
2719                          ;*Macro unroll:  STRUC_POP
2719                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2719                STRUC_TOP:   .SET   STRUC_2   
2719                STRUC_2:   .SET   STRUC_3   
2719                STRUC_3:   .SET   STRUC_4   
2719                STRUC_4:   .SET   STRUC_5   
2719                STRUC_5:   .SET   STRUC_6   
2719                STRUC_6:   .SET   STRUC_7   
2719                STRUC_7:   .SET   STRUC_8   
2719                STRUC_8:   .SET   STRUC_9   
2719                STRUC_9:   .SET   STRUC_10   
2719                STRUC_10:   .SET   STRUC_11   
2719                STRUC_11:   .SET   STRUC_12   
2719                STRUC_12:   .SET   0   
2719                TF_DONEM_2694S94:      
2719                          ;*Macro unroll: ppushValue 1
2719                          ;*Macro unroll:  ppush0 B,C
2719   DD 71 00               LD   (IX+0),C   
271C   DD 23                  INC   IX   
271E   DD 70 00               LD   (IX+0),B   
2721   DD 23                  INC   IX   
2723   01 01 00               LD   BC,1   
2726                          ;*Macro unroll: TEST_SET_TEXT "testif3"
2726   2A 02 2E               LD   HL,(lineBufStart)   
2729   22 08 2E               LD   (lineBufTop),HL   
272C   22 06 2E               LD   (currkey),HL   
272F   21 38 27               LD   HL,tst_textM_2696S98   
2732   22 20 30               LD   (char_pointer),HL   
2735                          ;*Macro unroll:  _skip
2735   C3 35 27               JP   $   
2738                          ;*Macro unroll:  STRUC_PUSH $
2738                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2738                STRUC_12:   .SET   STRUC_11   
2738                STRUC_11:   .SET   STRUC_10   
2738                STRUC_10:   .SET   STRUC_9   
2738                STRUC_9:   .SET   STRUC_8   
2738                STRUC_8:   .SET   STRUC_7   
2738                STRUC_7:   .SET   STRUC_6   
2738                STRUC_6:   .SET   STRUC_5   
2738                STRUC_5:   .SET   STRUC_4   
2738                STRUC_4:   .SET   STRUC_3   
2738                STRUC_3:   .SET   STRUC_2   
2738                STRUC_2:   .SET   STRUC_TOP   
2738                STRUC_TOP:   .SET   $   
2738                TST_TEXTM_2696S98:      
2738   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
2744                          ;*Macro unroll:  _endskip
2744                          ;*Macro unroll:  STRUC_FWD
2744                CUR_ADR:   .SET   $   
2736                          .ORG   STRUC_TOP - 2   
2736   44 27                  DW   CUR_ADR   
2744                          .ORG   CUR_ADR   
2744                          ;*Macro unroll:  STRUC_POP
2744                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2744                STRUC_TOP:   .SET   STRUC_2   
2744                STRUC_2:   .SET   STRUC_3   
2744                STRUC_3:   .SET   STRUC_4   
2744                STRUC_4:   .SET   STRUC_5   
2744                STRUC_5:   .SET   STRUC_6   
2744                STRUC_6:   .SET   STRUC_7   
2744                STRUC_7:   .SET   STRUC_8   
2744                STRUC_8:   .SET   STRUC_9   
2744                STRUC_9:   .SET   STRUC_10   
2744                STRUC_10:   .SET   STRUC_11   
2744                STRUC_11:   .SET   STRUC_12   
2744                STRUC_12:   .SET   0   
2744                          ;*Macro unroll: INTERPRET
2744   CF                     RST   $08   
2745   52 0B                  DW   interpret   
2747   87 0F                  DW   exit_forth   
2749                          ;*Macro unroll: EXPECT 100, "1 --> 100"
2749   CD B9 07               CALL   printNum   
274C                          ;*Macro unroll:  loadWord H,L, B,C
274C   69                     LD   L,C   
274D   60                     LD   H,B   
274E   69                     LD   L,C   
274F                          ;*Macro unroll:  ppop0 B,C
274F   DD 2B                  DEC   IX   
2751   DD 46 00               LD   B,(IX+0)   
2754   DD 2B                  DEC   IX   
2756   DD 4E 00               LD   C,(IX+0)   
2759                          ;*Macro unroll:  CMP16 100
2759   11 64 00               LD   DE,100   
275C   B7                     OR   A   
275D   ED 52                  SBC   HL,DE   
275F                          ;*Macro unroll:  checkZeroWord H,L
275F   7D                     LD   A,L   
2760   B4                     OR   H   
2761   CA 7E 27               JP   z,tf_doneM_2698S100   
2764   11 3B 07               LD   DE,FAILED   
2767   CD C4 01               CALL   printPStr   
276A   11 74 27               LD   DE,te_failM_2698S100   
276D   CD C4 01               CALL   printPStr   
2770   76                     HALT      
2771                          ;*Macro unroll:  _skip
2771   C3 71 27               JP   $   
2774                          ;*Macro unroll:  STRUC_PUSH $
2774                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2774                STRUC_12:   .SET   STRUC_11   
2774                STRUC_11:   .SET   STRUC_10   
2774                STRUC_10:   .SET   STRUC_9   
2774                STRUC_9:   .SET   STRUC_8   
2774                STRUC_8:   .SET   STRUC_7   
2774                STRUC_7:   .SET   STRUC_6   
2774                STRUC_6:   .SET   STRUC_5   
2774                STRUC_5:   .SET   STRUC_4   
2774                STRUC_4:   .SET   STRUC_3   
2774                STRUC_3:   .SET   STRUC_2   
2774                STRUC_2:   .SET   STRUC_TOP   
2774                STRUC_TOP:   .SET   $   
2774                TE_FAILM_2698S100:      
2774   09 31 20 2D 2D 3E 20 31 30 30 .PSTR   "1 --> 100"   
277E                          ;*Macro unroll:  _endskip
277E                          ;*Macro unroll:  STRUC_FWD
277E                CUR_ADR:   .SET   $   
2772                          .ORG   STRUC_TOP - 2   
2772   7E 27                  DW   CUR_ADR   
277E                          .ORG   CUR_ADR   
277E                          ;*Macro unroll:  STRUC_POP
277E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
277E                STRUC_TOP:   .SET   STRUC_2   
277E                STRUC_2:   .SET   STRUC_3   
277E                STRUC_3:   .SET   STRUC_4   
277E                STRUC_4:   .SET   STRUC_5   
277E                STRUC_5:   .SET   STRUC_6   
277E                STRUC_6:   .SET   STRUC_7   
277E                STRUC_7:   .SET   STRUC_8   
277E                STRUC_8:   .SET   STRUC_9   
277E                STRUC_9:   .SET   STRUC_10   
277E                STRUC_10:   .SET   STRUC_11   
277E                STRUC_11:   .SET   STRUC_12   
277E                STRUC_12:   .SET   0   
277E                TF_DONEM_2698S100:      
277E                          ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
277E   2A 02 2E               LD   HL,(lineBufStart)   
2781   22 08 2E               LD   (lineBufTop),HL   
2784   22 06 2E               LD   (currkey),HL   
2787   21 90 27               LD   HL,tst_textM_2699S102   
278A   22 20 30               LD   (char_pointer),HL   
278D                          ;*Macro unroll:  _skip
278D   C3 8D 27               JP   $   
2790                          ;*Macro unroll:  STRUC_PUSH $
2790                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2790                STRUC_12:   .SET   STRUC_11   
2790                STRUC_11:   .SET   STRUC_10   
2790                STRUC_10:   .SET   STRUC_9   
2790                STRUC_9:   .SET   STRUC_8   
2790                STRUC_8:   .SET   STRUC_7   
2790                STRUC_7:   .SET   STRUC_6   
2790                STRUC_6:   .SET   STRUC_5   
2790                STRUC_5:   .SET   STRUC_4   
2790                STRUC_4:   .SET   STRUC_3   
2790                STRUC_3:   .SET   STRUC_2   
2790                STRUC_2:   .SET   STRUC_TOP   
2790                STRUC_TOP:   .SET   $   
2790                TST_TEXTM_2699S102:      
2790   3A 20 74 65 73 74 6C 6F 6F 70 20 62 65 67 69 6E 20 64 75 70 20 35 20 3C 20 77 68 69 6C 65 20 64 75 70 20 2E 20 31 2B 20 72 65 70 65 61 74 20 3B 0D 0A FF 0D 0A DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
27C5                          ;*Macro unroll:  _endskip
27C5                          ;*Macro unroll:  STRUC_FWD
27C5                CUR_ADR:   .SET   $   
278E                          .ORG   STRUC_TOP - 2   
278E   C5 27                  DW   CUR_ADR   
27C5                          .ORG   CUR_ADR   
27C5                          ;*Macro unroll:  STRUC_POP
27C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27C5                STRUC_TOP:   .SET   STRUC_2   
27C5                STRUC_2:   .SET   STRUC_3   
27C5                STRUC_3:   .SET   STRUC_4   
27C5                STRUC_4:   .SET   STRUC_5   
27C5                STRUC_5:   .SET   STRUC_6   
27C5                STRUC_6:   .SET   STRUC_7   
27C5                STRUC_7:   .SET   STRUC_8   
27C5                STRUC_8:   .SET   STRUC_9   
27C5                STRUC_9:   .SET   STRUC_10   
27C5                STRUC_10:   .SET   STRUC_11   
27C5                STRUC_11:   .SET   STRUC_12   
27C5                STRUC_12:   .SET   0   
27C5                          ;*Macro unroll: INTERPRET
27C5   CF                     RST   $08   
27C6   52 0B                  DW   interpret   
27C8   87 0F                  DW   exit_forth   
27CA                          ;*Macro unroll: ppushValue 0
27CA                          ;*Macro unroll:  ppush0 B,C
27CA   DD 71 00               LD   (IX+0),C   
27CD   DD 23                  INC   IX   
27CF   DD 70 00               LD   (IX+0),B   
27D2   DD 23                  INC   IX   
27D4   01 00 00               LD   BC,0   
27D7                          ;*Macro unroll: TEST_SET_TEXT "testloop"
27D7   2A 02 2E               LD   HL,(lineBufStart)   
27DA   22 08 2E               LD   (lineBufTop),HL   
27DD   22 06 2E               LD   (currkey),HL   
27E0   21 E9 27               LD   HL,tst_textM_2702S105   
27E3   22 20 30               LD   (char_pointer),HL   
27E6                          ;*Macro unroll:  _skip
27E6   C3 E6 27               JP   $   
27E9                          ;*Macro unroll:  STRUC_PUSH $
27E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
27E9                STRUC_12:   .SET   STRUC_11   
27E9                STRUC_11:   .SET   STRUC_10   
27E9                STRUC_10:   .SET   STRUC_9   
27E9                STRUC_9:   .SET   STRUC_8   
27E9                STRUC_8:   .SET   STRUC_7   
27E9                STRUC_7:   .SET   STRUC_6   
27E9                STRUC_6:   .SET   STRUC_5   
27E9                STRUC_5:   .SET   STRUC_4   
27E9                STRUC_4:   .SET   STRUC_3   
27E9                STRUC_3:   .SET   STRUC_2   
27E9                STRUC_2:   .SET   STRUC_TOP   
27E9                STRUC_TOP:   .SET   $   
27E9                TST_TEXTM_2702S105:      
27E9   74 65 73 74 6C 6F 6F 70 0D 0A FF 0D 0A DB   "testloop","\r\n",-1,"\r\n"   
27F6                          ;*Macro unroll:  _endskip
27F6                          ;*Macro unroll:  STRUC_FWD
27F6                CUR_ADR:   .SET   $   
27E7                          .ORG   STRUC_TOP - 2   
27E7   F6 27                  DW   CUR_ADR   
27F6                          .ORG   CUR_ADR   
27F6                          ;*Macro unroll:  STRUC_POP
27F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27F6                STRUC_TOP:   .SET   STRUC_2   
27F6                STRUC_2:   .SET   STRUC_3   
27F6                STRUC_3:   .SET   STRUC_4   
27F6                STRUC_4:   .SET   STRUC_5   
27F6                STRUC_5:   .SET   STRUC_6   
27F6                STRUC_6:   .SET   STRUC_7   
27F6                STRUC_7:   .SET   STRUC_8   
27F6                STRUC_8:   .SET   STRUC_9   
27F6                STRUC_9:   .SET   STRUC_10   
27F6                STRUC_10:   .SET   STRUC_11   
27F6                STRUC_11:   .SET   STRUC_12   
27F6                STRUC_12:   .SET   0   
27F6                          ;*Macro unroll: INTERPRET
27F6   CF                     RST   $08   
27F7   52 0B                  DW   interpret   
27F9   87 0F                  DW   exit_forth   
27FB                          ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
27FB   CD B9 07               CALL   printNum   
27FE                          ;*Macro unroll:  loadWord H,L, B,C
27FE   69                     LD   L,C   
27FF   60                     LD   H,B   
2800   69                     LD   L,C   
2801                          ;*Macro unroll:  ppop0 B,C
2801   DD 2B                  DEC   IX   
2803   DD 46 00               LD   B,(IX+0)   
2806   DD 2B                  DEC   IX   
2808   DD 4E 00               LD   C,(IX+0)   
280B                          ;*Macro unroll:  CMP16 5
280B   11 05 00               LD   DE,5   
280E   B7                     OR   A   
280F   ED 52                  SBC   HL,DE   
2811                          ;*Macro unroll:  checkZeroWord H,L
2811   7D                     LD   A,L   
2812   B4                     OR   H   
2813   CA 3B 28               JP   z,tf_doneM_2704S107   
2816   11 3B 07               LD   DE,FAILED   
2819   CD C4 01               CALL   printPStr   
281C   11 26 28               LD   DE,te_failM_2704S107   
281F   CD C4 01               CALL   printPStr   
2822   76                     HALT      
2823                          ;*Macro unroll:  _skip
2823   C3 23 28               JP   $   
2826                          ;*Macro unroll:  STRUC_PUSH $
2826                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2826                STRUC_12:   .SET   STRUC_11   
2826                STRUC_11:   .SET   STRUC_10   
2826                STRUC_10:   .SET   STRUC_9   
2826                STRUC_9:   .SET   STRUC_8   
2826                STRUC_8:   .SET   STRUC_7   
2826                STRUC_7:   .SET   STRUC_6   
2826                STRUC_6:   .SET   STRUC_5   
2826                STRUC_5:   .SET   STRUC_4   
2826                STRUC_4:   .SET   STRUC_3   
2826                STRUC_3:   .SET   STRUC_2   
2826                STRUC_2:   .SET   STRUC_TOP   
2826                STRUC_TOP:   .SET   $   
2826                TE_FAILM_2704S107:      
2826   14 4C 6F 6F 70 20 75 6E 74 69 6C 20 6C 69 6D 69 74 20 3C 20 35 .PSTR   "Loop until limit < 5"   
283B                          ;*Macro unroll:  _endskip
283B                          ;*Macro unroll:  STRUC_FWD
283B                CUR_ADR:   .SET   $   
2824                          .ORG   STRUC_TOP - 2   
2824   3B 28                  DW   CUR_ADR   
283B                          .ORG   CUR_ADR   
283B                          ;*Macro unroll:  STRUC_POP
283B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
283B                STRUC_TOP:   .SET   STRUC_2   
283B                STRUC_2:   .SET   STRUC_3   
283B                STRUC_3:   .SET   STRUC_4   
283B                STRUC_4:   .SET   STRUC_5   
283B                STRUC_5:   .SET   STRUC_6   
283B                STRUC_6:   .SET   STRUC_7   
283B                STRUC_7:   .SET   STRUC_8   
283B                STRUC_8:   .SET   STRUC_9   
283B                STRUC_9:   .SET   STRUC_10   
283B                STRUC_10:   .SET   STRUC_11   
283B                STRUC_11:   .SET   STRUC_12   
283B                STRUC_12:   .SET   0   
283B                TF_DONEM_2704S107:      
283B                          ;*Macro unroll: TEST_SET_TEXT "100"
283B   2A 02 2E               LD   HL,(lineBufStart)   
283E   22 08 2E               LD   (lineBufTop),HL   
2841   22 06 2E               LD   (currkey),HL   
2844   21 4D 28               LD   HL,tst_textM_2705S110   
2847   22 20 30               LD   (char_pointer),HL   
284A                          ;*Macro unroll:  _skip
284A   C3 4A 28               JP   $   
284D                          ;*Macro unroll:  STRUC_PUSH $
284D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
284D                STRUC_12:   .SET   STRUC_11   
284D                STRUC_11:   .SET   STRUC_10   
284D                STRUC_10:   .SET   STRUC_9   
284D                STRUC_9:   .SET   STRUC_8   
284D                STRUC_8:   .SET   STRUC_7   
284D                STRUC_7:   .SET   STRUC_6   
284D                STRUC_6:   .SET   STRUC_5   
284D                STRUC_5:   .SET   STRUC_4   
284D                STRUC_4:   .SET   STRUC_3   
284D                STRUC_3:   .SET   STRUC_2   
284D                STRUC_2:   .SET   STRUC_TOP   
284D                STRUC_TOP:   .SET   $   
284D                TST_TEXTM_2705S110:      
284D   31 30 30 0D 0A FF 0D 0A DB   "100","\r\n",-1,"\r\n"   
2855                          ;*Macro unroll:  _endskip
2855                          ;*Macro unroll:  STRUC_FWD
2855                CUR_ADR:   .SET   $   
284B                          .ORG   STRUC_TOP - 2   
284B   55 28                  DW   CUR_ADR   
2855                          .ORG   CUR_ADR   
2855                          ;*Macro unroll:  STRUC_POP
2855                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2855                STRUC_TOP:   .SET   STRUC_2   
2855                STRUC_2:   .SET   STRUC_3   
2855                STRUC_3:   .SET   STRUC_4   
2855                STRUC_4:   .SET   STRUC_5   
2855                STRUC_5:   .SET   STRUC_6   
2855                STRUC_6:   .SET   STRUC_7   
2855                STRUC_7:   .SET   STRUC_8   
2855                STRUC_8:   .SET   STRUC_9   
2855                STRUC_9:   .SET   STRUC_10   
2855                STRUC_10:   .SET   STRUC_11   
2855                STRUC_11:   .SET   STRUC_12   
2855                STRUC_12:   .SET   0   
2855                          ;*Macro unroll: INTERPRET
2855   CF                     RST   $08   
2856   52 0B                  DW   interpret   
2858   87 0F                  DW   exit_forth   
285A                          ;*Macro unroll: EXPECT 100, "interpret parse 100"
285A   CD B9 07               CALL   printNum   
285D                          ;*Macro unroll:  loadWord H,L, B,C
285D   69                     LD   L,C   
285E   60                     LD   H,B   
285F   69                     LD   L,C   
2860                          ;*Macro unroll:  ppop0 B,C
2860   DD 2B                  DEC   IX   
2862   DD 46 00               LD   B,(IX+0)   
2865   DD 2B                  DEC   IX   
2867   DD 4E 00               LD   C,(IX+0)   
286A                          ;*Macro unroll:  CMP16 100
286A   11 64 00               LD   DE,100   
286D   B7                     OR   A   
286E   ED 52                  SBC   HL,DE   
2870                          ;*Macro unroll:  checkZeroWord H,L
2870   7D                     LD   A,L   
2871   B4                     OR   H   
2872   CA 99 28               JP   z,tf_doneM_2707S112   
2875   11 3B 07               LD   DE,FAILED   
2878   CD C4 01               CALL   printPStr   
287B   11 85 28               LD   DE,te_failM_2707S112   
287E   CD C4 01               CALL   printPStr   
2881   76                     HALT      
2882                          ;*Macro unroll:  _skip
2882   C3 82 28               JP   $   
2885                          ;*Macro unroll:  STRUC_PUSH $
2885                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2885                STRUC_12:   .SET   STRUC_11   
2885                STRUC_11:   .SET   STRUC_10   
2885                STRUC_10:   .SET   STRUC_9   
2885                STRUC_9:   .SET   STRUC_8   
2885                STRUC_8:   .SET   STRUC_7   
2885                STRUC_7:   .SET   STRUC_6   
2885                STRUC_6:   .SET   STRUC_5   
2885                STRUC_5:   .SET   STRUC_4   
2885                STRUC_4:   .SET   STRUC_3   
2885                STRUC_3:   .SET   STRUC_2   
2885                STRUC_2:   .SET   STRUC_TOP   
2885                STRUC_TOP:   .SET   $   
2885                TE_FAILM_2707S112:      
2885   13 69 6E 74 65 72 70 72 65 74 20 70 61 72 73 65 20 31 30 30 .PSTR   "interpret parse 100"   
2899                          ;*Macro unroll:  _endskip
2899                          ;*Macro unroll:  STRUC_FWD
2899                CUR_ADR:   .SET   $   
2883                          .ORG   STRUC_TOP - 2   
2883   99 28                  DW   CUR_ADR   
2899                          .ORG   CUR_ADR   
2899                          ;*Macro unroll:  STRUC_POP
2899                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2899                STRUC_TOP:   .SET   STRUC_2   
2899                STRUC_2:   .SET   STRUC_3   
2899                STRUC_3:   .SET   STRUC_4   
2899                STRUC_4:   .SET   STRUC_5   
2899                STRUC_5:   .SET   STRUC_6   
2899                STRUC_6:   .SET   STRUC_7   
2899                STRUC_7:   .SET   STRUC_8   
2899                STRUC_8:   .SET   STRUC_9   
2899                STRUC_9:   .SET   STRUC_10   
2899                STRUC_10:   .SET   STRUC_11   
2899                STRUC_11:   .SET   STRUC_12   
2899                STRUC_12:   .SET   0   
2899                TF_DONEM_2707S112:      
2899                          ;*Macro unroll: TEST_SET_TEXT "3 2 +"
2899   2A 02 2E               LD   HL,(lineBufStart)   
289C   22 08 2E               LD   (lineBufTop),HL   
289F   22 06 2E               LD   (currkey),HL   
28A2   21 AB 28               LD   HL,tst_textM_2708S114   
28A5   22 20 30               LD   (char_pointer),HL   
28A8                          ;*Macro unroll:  _skip
28A8   C3 A8 28               JP   $   
28AB                          ;*Macro unroll:  STRUC_PUSH $
28AB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28AB                STRUC_12:   .SET   STRUC_11   
28AB                STRUC_11:   .SET   STRUC_10   
28AB                STRUC_10:   .SET   STRUC_9   
28AB                STRUC_9:   .SET   STRUC_8   
28AB                STRUC_8:   .SET   STRUC_7   
28AB                STRUC_7:   .SET   STRUC_6   
28AB                STRUC_6:   .SET   STRUC_5   
28AB                STRUC_5:   .SET   STRUC_4   
28AB                STRUC_4:   .SET   STRUC_3   
28AB                STRUC_3:   .SET   STRUC_2   
28AB                STRUC_2:   .SET   STRUC_TOP   
28AB                STRUC_TOP:   .SET   $   
28AB                TST_TEXTM_2708S114:      
28AB   33 20 32 20 2B 0D 0A FF 0D 0A DB   "3 2 +","\r\n",-1,"\r\n"   
28B5                          ;*Macro unroll:  _endskip
28B5                          ;*Macro unroll:  STRUC_FWD
28B5                CUR_ADR:   .SET   $   
28A9                          .ORG   STRUC_TOP - 2   
28A9   B5 28                  DW   CUR_ADR   
28B5                          .ORG   CUR_ADR   
28B5                          ;*Macro unroll:  STRUC_POP
28B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28B5                STRUC_TOP:   .SET   STRUC_2   
28B5                STRUC_2:   .SET   STRUC_3   
28B5                STRUC_3:   .SET   STRUC_4   
28B5                STRUC_4:   .SET   STRUC_5   
28B5                STRUC_5:   .SET   STRUC_6   
28B5                STRUC_6:   .SET   STRUC_7   
28B5                STRUC_7:   .SET   STRUC_8   
28B5                STRUC_8:   .SET   STRUC_9   
28B5                STRUC_9:   .SET   STRUC_10   
28B5                STRUC_10:   .SET   STRUC_11   
28B5                STRUC_11:   .SET   STRUC_12   
28B5                STRUC_12:   .SET   0   
28B5                          ;*Macro unroll: INTERPRET
28B5   CF                     RST   $08   
28B6   52 0B                  DW   interpret   
28B8   87 0F                  DW   exit_forth   
28BA                          ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
28BA   CD B9 07               CALL   printNum   
28BD                          ;*Macro unroll:  loadWord H,L, B,C
28BD   69                     LD   L,C   
28BE   60                     LD   H,B   
28BF   69                     LD   L,C   
28C0                          ;*Macro unroll:  ppop0 B,C
28C0   DD 2B                  DEC   IX   
28C2   DD 46 00               LD   B,(IX+0)   
28C5   DD 2B                  DEC   IX   
28C7   DD 4E 00               LD   C,(IX+0)   
28CA                          ;*Macro unroll:  CMP16 5
28CA   11 05 00               LD   DE,5   
28CD   B7                     OR   A   
28CE   ED 52                  SBC   HL,DE   
28D0                          ;*Macro unroll:  checkZeroWord H,L
28D0   7D                     LD   A,L   
28D1   B4                     OR   H   
28D2   CA EF 28               JP   z,tf_doneM_2710S116   
28D5   11 3B 07               LD   DE,FAILED   
28D8   CD C4 01               CALL   printPStr   
28DB   11 E5 28               LD   DE,te_failM_2710S116   
28DE   CD C4 01               CALL   printPStr   
28E1   76                     HALT      
28E2                          ;*Macro unroll:  _skip
28E2   C3 E2 28               JP   $   
28E5                          ;*Macro unroll:  STRUC_PUSH $
28E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28E5                STRUC_12:   .SET   STRUC_11   
28E5                STRUC_11:   .SET   STRUC_10   
28E5                STRUC_10:   .SET   STRUC_9   
28E5                STRUC_9:   .SET   STRUC_8   
28E5                STRUC_8:   .SET   STRUC_7   
28E5                STRUC_7:   .SET   STRUC_6   
28E5                STRUC_6:   .SET   STRUC_5   
28E5                STRUC_5:   .SET   STRUC_4   
28E5                STRUC_4:   .SET   STRUC_3   
28E5                STRUC_3:   .SET   STRUC_2   
28E5                STRUC_2:   .SET   STRUC_TOP   
28E5                STRUC_TOP:   .SET   $   
28E5                TE_FAILM_2710S116:      
28E5   09 33 20 2B 20 32 20 3D 20 35 .PSTR   "3 + 2 = 5"   
28EF                          ;*Macro unroll:  _endskip
28EF                          ;*Macro unroll:  STRUC_FWD
28EF                CUR_ADR:   .SET   $   
28E3                          .ORG   STRUC_TOP - 2   
28E3   EF 28                  DW   CUR_ADR   
28EF                          .ORG   CUR_ADR   
28EF                          ;*Macro unroll:  STRUC_POP
28EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28EF                STRUC_TOP:   .SET   STRUC_2   
28EF                STRUC_2:   .SET   STRUC_3   
28EF                STRUC_3:   .SET   STRUC_4   
28EF                STRUC_4:   .SET   STRUC_5   
28EF                STRUC_5:   .SET   STRUC_6   
28EF                STRUC_6:   .SET   STRUC_7   
28EF                STRUC_7:   .SET   STRUC_8   
28EF                STRUC_8:   .SET   STRUC_9   
28EF                STRUC_9:   .SET   STRUC_10   
28EF                STRUC_10:   .SET   STRUC_11   
28EF                STRUC_11:   .SET   STRUC_12   
28EF                STRUC_12:   .SET   0   
28EF                TF_DONEM_2710S116:      
28EF                          ;*Macro unroll: TEST_SET_TEXT ": add + ;"
28EF   2A 02 2E               LD   HL,(lineBufStart)   
28F2   22 08 2E               LD   (lineBufTop),HL   
28F5   22 06 2E               LD   (currkey),HL   
28F8   21 01 29               LD   HL,tst_textM_2711S118   
28FB   22 20 30               LD   (char_pointer),HL   
28FE                          ;*Macro unroll:  _skip
28FE   C3 FE 28               JP   $   
2901                          ;*Macro unroll:  STRUC_PUSH $
2901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2901                STRUC_12:   .SET   STRUC_11   
2901                STRUC_11:   .SET   STRUC_10   
2901                STRUC_10:   .SET   STRUC_9   
2901                STRUC_9:   .SET   STRUC_8   
2901                STRUC_8:   .SET   STRUC_7   
2901                STRUC_7:   .SET   STRUC_6   
2901                STRUC_6:   .SET   STRUC_5   
2901                STRUC_5:   .SET   STRUC_4   
2901                STRUC_4:   .SET   STRUC_3   
2901                STRUC_3:   .SET   STRUC_2   
2901                STRUC_2:   .SET   STRUC_TOP   
2901                STRUC_TOP:   .SET   $   
2901                TST_TEXTM_2711S118:      
2901   3A 20 61 64 64 20 2B 20 3B 0D 0A FF 0D 0A DB   ": add + ;","\r\n",-1,"\r\n"   
290F                          ;*Macro unroll:  _endskip
290F                          ;*Macro unroll:  STRUC_FWD
290F                CUR_ADR:   .SET   $   
28FF                          .ORG   STRUC_TOP - 2   
28FF   0F 29                  DW   CUR_ADR   
290F                          .ORG   CUR_ADR   
290F                          ;*Macro unroll:  STRUC_POP
290F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
290F                STRUC_TOP:   .SET   STRUC_2   
290F                STRUC_2:   .SET   STRUC_3   
290F                STRUC_3:   .SET   STRUC_4   
290F                STRUC_4:   .SET   STRUC_5   
290F                STRUC_5:   .SET   STRUC_6   
290F                STRUC_6:   .SET   STRUC_7   
290F                STRUC_7:   .SET   STRUC_8   
290F                STRUC_8:   .SET   STRUC_9   
290F                STRUC_9:   .SET   STRUC_10   
290F                STRUC_10:   .SET   STRUC_11   
290F                STRUC_11:   .SET   STRUC_12   
290F                STRUC_12:   .SET   0   
290F                          ;*Macro unroll: INTERPRET
290F   CF                     RST   $08   
2910   52 0B                  DW   interpret   
2912   87 0F                  DW   exit_forth   
2914                          ;*Macro unroll: ppushValue 2
2914                          ;*Macro unroll:  ppush0 B,C
2914   DD 71 00               LD   (IX+0),C   
2917   DD 23                  INC   IX   
2919   DD 70 00               LD   (IX+0),B   
291C   DD 23                  INC   IX   
291E   01 02 00               LD   BC,2   
2921                          ;*Macro unroll: ppushValue 2
2921                          ;*Macro unroll:  ppush0 B,C
2921   DD 71 00               LD   (IX+0),C   
2924   DD 23                  INC   IX   
2926   DD 70 00               LD   (IX+0),B   
2929   DD 23                  INC   IX   
292B   01 02 00               LD   BC,2   
292E                          ;*Macro unroll: TEST_SET_TEXT "add"
292E   2A 02 2E               LD   HL,(lineBufStart)   
2931   22 08 2E               LD   (lineBufTop),HL   
2934   22 06 2E               LD   (currkey),HL   
2937   21 40 29               LD   HL,tst_textM_2715S123   
293A   22 20 30               LD   (char_pointer),HL   
293D                          ;*Macro unroll:  _skip
293D   C3 3D 29               JP   $   
2940                          ;*Macro unroll:  STRUC_PUSH $
2940                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2940                STRUC_12:   .SET   STRUC_11   
2940                STRUC_11:   .SET   STRUC_10   
2940                STRUC_10:   .SET   STRUC_9   
2940                STRUC_9:   .SET   STRUC_8   
2940                STRUC_8:   .SET   STRUC_7   
2940                STRUC_7:   .SET   STRUC_6   
2940                STRUC_6:   .SET   STRUC_5   
2940                STRUC_5:   .SET   STRUC_4   
2940                STRUC_4:   .SET   STRUC_3   
2940                STRUC_3:   .SET   STRUC_2   
2940                STRUC_2:   .SET   STRUC_TOP   
2940                STRUC_TOP:   .SET   $   
2940                TST_TEXTM_2715S123:      
2940   61 64 64 0D 0A FF 0D 0A DB   "add","\r\n",-1,"\r\n"   
2948                          ;*Macro unroll:  _endskip
2948                          ;*Macro unroll:  STRUC_FWD
2948                CUR_ADR:   .SET   $   
293E                          .ORG   STRUC_TOP - 2   
293E   48 29                  DW   CUR_ADR   
2948                          .ORG   CUR_ADR   
2948                          ;*Macro unroll:  STRUC_POP
2948                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2948                STRUC_TOP:   .SET   STRUC_2   
2948                STRUC_2:   .SET   STRUC_3   
2948                STRUC_3:   .SET   STRUC_4   
2948                STRUC_4:   .SET   STRUC_5   
2948                STRUC_5:   .SET   STRUC_6   
2948                STRUC_6:   .SET   STRUC_7   
2948                STRUC_7:   .SET   STRUC_8   
2948                STRUC_8:   .SET   STRUC_9   
2948                STRUC_9:   .SET   STRUC_10   
2948                STRUC_10:   .SET   STRUC_11   
2948                STRUC_11:   .SET   STRUC_12   
2948                STRUC_12:   .SET   0   
2948                          ;*Macro unroll: INTERPRET
2948   CF                     RST   $08   
2949   52 0B                  DW   interpret   
294B   87 0F                  DW   exit_forth   
294D                          ;*Macro unroll: EXPECT 4, "2 2 add = 4"
294D   CD B9 07               CALL   printNum   
2950                          ;*Macro unroll:  loadWord H,L, B,C
2950   69                     LD   L,C   
2951   60                     LD   H,B   
2952   69                     LD   L,C   
2953                          ;*Macro unroll:  ppop0 B,C
2953   DD 2B                  DEC   IX   
2955   DD 46 00               LD   B,(IX+0)   
2958   DD 2B                  DEC   IX   
295A   DD 4E 00               LD   C,(IX+0)   
295D                          ;*Macro unroll:  CMP16 4
295D   11 04 00               LD   DE,4   
2960   B7                     OR   A   
2961   ED 52                  SBC   HL,DE   
2963                          ;*Macro unroll:  checkZeroWord H,L
2963   7D                     LD   A,L   
2964   B4                     OR   H   
2965   CA 84 29               JP   z,tf_doneM_2717S125   
2968   11 3B 07               LD   DE,FAILED   
296B   CD C4 01               CALL   printPStr   
296E   11 78 29               LD   DE,te_failM_2717S125   
2971   CD C4 01               CALL   printPStr   
2974   76                     HALT      
2975                          ;*Macro unroll:  _skip
2975   C3 75 29               JP   $   
2978                          ;*Macro unroll:  STRUC_PUSH $
2978                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2978                STRUC_12:   .SET   STRUC_11   
2978                STRUC_11:   .SET   STRUC_10   
2978                STRUC_10:   .SET   STRUC_9   
2978                STRUC_9:   .SET   STRUC_8   
2978                STRUC_8:   .SET   STRUC_7   
2978                STRUC_7:   .SET   STRUC_6   
2978                STRUC_6:   .SET   STRUC_5   
2978                STRUC_5:   .SET   STRUC_4   
2978                STRUC_4:   .SET   STRUC_3   
2978                STRUC_3:   .SET   STRUC_2   
2978                STRUC_2:   .SET   STRUC_TOP   
2978                STRUC_TOP:   .SET   $   
2978                TE_FAILM_2717S125:      
2978   0B 32 20 32 20 61 64 64 20 3D 20 34 .PSTR   "2 2 add = 4"   
2984                          ;*Macro unroll:  _endskip
2984                          ;*Macro unroll:  STRUC_FWD
2984                CUR_ADR:   .SET   $   
2976                          .ORG   STRUC_TOP - 2   
2976   84 29                  DW   CUR_ADR   
2984                          .ORG   CUR_ADR   
2984                          ;*Macro unroll:  STRUC_POP
2984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2984                STRUC_TOP:   .SET   STRUC_2   
2984                STRUC_2:   .SET   STRUC_3   
2984                STRUC_3:   .SET   STRUC_4   
2984                STRUC_4:   .SET   STRUC_5   
2984                STRUC_5:   .SET   STRUC_6   
2984                STRUC_6:   .SET   STRUC_7   
2984                STRUC_7:   .SET   STRUC_8   
2984                STRUC_8:   .SET   STRUC_9   
2984                STRUC_9:   .SET   STRUC_10   
2984                STRUC_10:   .SET   STRUC_11   
2984                STRUC_11:   .SET   STRUC_12   
2984                STRUC_12:   .SET   0   
2984                TF_DONEM_2717S125:      
2984                          ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
2984   2A 02 2E               LD   HL,(lineBufStart)   
2987   22 08 2E               LD   (lineBufTop),HL   
298A   22 06 2E               LD   (currkey),HL   
298D   21 96 29               LD   HL,tst_textM_2718S127   
2990   22 20 30               LD   (char_pointer),HL   
2993                          ;*Macro unroll:  _skip
2993   C3 93 29               JP   $   
2996                          ;*Macro unroll:  STRUC_PUSH $
2996                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2996                STRUC_12:   .SET   STRUC_11   
2996                STRUC_11:   .SET   STRUC_10   
2996                STRUC_10:   .SET   STRUC_9   
2996                STRUC_9:   .SET   STRUC_8   
2996                STRUC_8:   .SET   STRUC_7   
2996                STRUC_7:   .SET   STRUC_6   
2996                STRUC_6:   .SET   STRUC_5   
2996                STRUC_5:   .SET   STRUC_4   
2996                STRUC_4:   .SET   STRUC_3   
2996                STRUC_3:   .SET   STRUC_2   
2996                STRUC_2:   .SET   STRUC_TOP   
2996                STRUC_TOP:   .SET   $   
2996                TST_TEXTM_2718S127:      
2996   3A 20 64 75 6D 70 20 31 36 20 62 61 73 65 20 21 20 6F 76 65 72 20 2B 20 73 77 61 70 20 62 65 67 69 6E 20 6F 76 65 72 20 6F 76 65 72 20 73 77 61 70 20 3C 20 77 68 69 6C 65 20 64 75 70 20 37 20 61 6E 64 20 30 3D 20 69 66 20 63 72 20 64 75 70 20 2E 20 65 6E 64 69 66 20 64 75 70 20 63 40 20 2E 20 31 2B 20 72 65 70 65 61 74 20 63 72 20 31 30 20 62 61 73 65 20 21 20 3B 0D 0A FF 0D 0A DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
2A15                          ;*Macro unroll:  _endskip
2A15                          ;*Macro unroll:  STRUC_FWD
2A15                CUR_ADR:   .SET   $   
2994                          .ORG   STRUC_TOP - 2   
2994   15 2A                  DW   CUR_ADR   
2A15                          .ORG   CUR_ADR   
2A15                          ;*Macro unroll:  STRUC_POP
2A15                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A15                STRUC_TOP:   .SET   STRUC_2   
2A15                STRUC_2:   .SET   STRUC_3   
2A15                STRUC_3:   .SET   STRUC_4   
2A15                STRUC_4:   .SET   STRUC_5   
2A15                STRUC_5:   .SET   STRUC_6   
2A15                STRUC_6:   .SET   STRUC_7   
2A15                STRUC_7:   .SET   STRUC_8   
2A15                STRUC_8:   .SET   STRUC_9   
2A15                STRUC_9:   .SET   STRUC_10   
2A15                STRUC_10:   .SET   STRUC_11   
2A15                STRUC_11:   .SET   STRUC_12   
2A15                STRUC_12:   .SET   0   
2A15                          ;*Macro unroll: INTERPRET
2A15   CF                     RST   $08   
2A16   52 0B                  DW   interpret   
2A18   87 0F                  DW   exit_forth   
2A1A                          ;*Macro unroll: TEST_SET_TEXT "dump"
2A1A   2A 02 2E               LD   HL,(lineBufStart)   
2A1D   22 08 2E               LD   (lineBufTop),HL   
2A20   22 06 2E               LD   (currkey),HL   
2A23   21 2C 2A               LD   HL,tst_textM_2720S130   
2A26   22 20 30               LD   (char_pointer),HL   
2A29                          ;*Macro unroll:  _skip
2A29   C3 29 2A               JP   $   
2A2C                          ;*Macro unroll:  STRUC_PUSH $
2A2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A2C                STRUC_12:   .SET   STRUC_11   
2A2C                STRUC_11:   .SET   STRUC_10   
2A2C                STRUC_10:   .SET   STRUC_9   
2A2C                STRUC_9:   .SET   STRUC_8   
2A2C                STRUC_8:   .SET   STRUC_7   
2A2C                STRUC_7:   .SET   STRUC_6   
2A2C                STRUC_6:   .SET   STRUC_5   
2A2C                STRUC_5:   .SET   STRUC_4   
2A2C                STRUC_4:   .SET   STRUC_3   
2A2C                STRUC_3:   .SET   STRUC_2   
2A2C                STRUC_2:   .SET   STRUC_TOP   
2A2C                STRUC_TOP:   .SET   $   
2A2C                TST_TEXTM_2720S130:      
2A2C   64 75 6D 70 0D 0A FF 0D 0A DB   "dump","\r\n",-1,"\r\n"   
2A35                          ;*Macro unroll:  _endskip
2A35                          ;*Macro unroll:  STRUC_FWD
2A35                CUR_ADR:   .SET   $   
2A2A                          .ORG   STRUC_TOP - 2   
2A2A   35 2A                  DW   CUR_ADR   
2A35                          .ORG   CUR_ADR   
2A35                          ;*Macro unroll:  STRUC_POP
2A35                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A35                STRUC_TOP:   .SET   STRUC_2   
2A35                STRUC_2:   .SET   STRUC_3   
2A35                STRUC_3:   .SET   STRUC_4   
2A35                STRUC_4:   .SET   STRUC_5   
2A35                STRUC_5:   .SET   STRUC_6   
2A35                STRUC_6:   .SET   STRUC_7   
2A35                STRUC_7:   .SET   STRUC_8   
2A35                STRUC_8:   .SET   STRUC_9   
2A35                STRUC_9:   .SET   STRUC_10   
2A35                STRUC_10:   .SET   STRUC_11   
2A35                STRUC_11:   .SET   STRUC_12   
2A35                STRUC_12:   .SET   0   
2A35                          ;*Macro unroll: INTERPRET
2A35   CF                     RST   $08   
2A36   52 0B                  DW   interpret   
2A38   87 0F                  DW   exit_forth   
2A3A                          ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
2A3A   2A 02 2E               LD   HL,(lineBufStart)   
2A3D   22 08 2E               LD   (lineBufTop),HL   
2A40   22 06 2E               LD   (currkey),HL   
2A43   21 4C 2A               LD   HL,tst_textM_2722S133   
2A46   22 20 30               LD   (char_pointer),HL   
2A49                          ;*Macro unroll:  _skip
2A49   C3 49 2A               JP   $   
2A4C                          ;*Macro unroll:  STRUC_PUSH $
2A4C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A4C                STRUC_12:   .SET   STRUC_11   
2A4C                STRUC_11:   .SET   STRUC_10   
2A4C                STRUC_10:   .SET   STRUC_9   
2A4C                STRUC_9:   .SET   STRUC_8   
2A4C                STRUC_8:   .SET   STRUC_7   
2A4C                STRUC_7:   .SET   STRUC_6   
2A4C                STRUC_6:   .SET   STRUC_5   
2A4C                STRUC_5:   .SET   STRUC_4   
2A4C                STRUC_4:   .SET   STRUC_3   
2A4C                STRUC_3:   .SET   STRUC_2   
2A4C                STRUC_2:   .SET   STRUC_TOP   
2A4C                STRUC_TOP:   .SET   $   
2A4C                TST_TEXTM_2722S133:      
2A4C   3A 20 73 74 72 20 73 22 20 78 79 7A 22 20 3B 0D 0A FF 0D 0A DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
2A60                          ;*Macro unroll:  _endskip
2A60                          ;*Macro unroll:  STRUC_FWD
2A60                CUR_ADR:   .SET   $   
2A4A                          .ORG   STRUC_TOP - 2   
2A4A   60 2A                  DW   CUR_ADR   
2A60                          .ORG   CUR_ADR   
2A60                          ;*Macro unroll:  STRUC_POP
2A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A60                STRUC_TOP:   .SET   STRUC_2   
2A60                STRUC_2:   .SET   STRUC_3   
2A60                STRUC_3:   .SET   STRUC_4   
2A60                STRUC_4:   .SET   STRUC_5   
2A60                STRUC_5:   .SET   STRUC_6   
2A60                STRUC_6:   .SET   STRUC_7   
2A60                STRUC_7:   .SET   STRUC_8   
2A60                STRUC_8:   .SET   STRUC_9   
2A60                STRUC_9:   .SET   STRUC_10   
2A60                STRUC_10:   .SET   STRUC_11   
2A60                STRUC_11:   .SET   STRUC_12   
2A60                STRUC_12:   .SET   0   
2A60                          ;*Macro unroll: INTERPRET
2A60   CF                     RST   $08   
2A61   52 0B                  DW   interpret   
2A63   87 0F                  DW   exit_forth   
2A65                          ;*Macro unroll: TEST_SET_TEXT "str type"
2A65   2A 02 2E               LD   HL,(lineBufStart)   
2A68   22 08 2E               LD   (lineBufTop),HL   
2A6B   22 06 2E               LD   (currkey),HL   
2A6E   21 77 2A               LD   HL,tst_textM_2724S135   
2A71   22 20 30               LD   (char_pointer),HL   
2A74                          ;*Macro unroll:  _skip
2A74   C3 74 2A               JP   $   
2A77                          ;*Macro unroll:  STRUC_PUSH $
2A77                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A77                STRUC_12:   .SET   STRUC_11   
2A77                STRUC_11:   .SET   STRUC_10   
2A77                STRUC_10:   .SET   STRUC_9   
2A77                STRUC_9:   .SET   STRUC_8   
2A77                STRUC_8:   .SET   STRUC_7   
2A77                STRUC_7:   .SET   STRUC_6   
2A77                STRUC_6:   .SET   STRUC_5   
2A77                STRUC_5:   .SET   STRUC_4   
2A77                STRUC_4:   .SET   STRUC_3   
2A77                STRUC_3:   .SET   STRUC_2   
2A77                STRUC_2:   .SET   STRUC_TOP   
2A77                STRUC_TOP:   .SET   $   
2A77                TST_TEXTM_2724S135:      
2A77   73 74 72 20 74 79 70 65 0D 0A FF 0D 0A DB   "str type","\r\n",-1,"\r\n"   
2A84                          ;*Macro unroll:  _endskip
2A84                          ;*Macro unroll:  STRUC_FWD
2A84                CUR_ADR:   .SET   $   
2A75                          .ORG   STRUC_TOP - 2   
2A75   84 2A                  DW   CUR_ADR   
2A84                          .ORG   CUR_ADR   
2A84                          ;*Macro unroll:  STRUC_POP
2A84                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A84                STRUC_TOP:   .SET   STRUC_2   
2A84                STRUC_2:   .SET   STRUC_3   
2A84                STRUC_3:   .SET   STRUC_4   
2A84                STRUC_4:   .SET   STRUC_5   
2A84                STRUC_5:   .SET   STRUC_6   
2A84                STRUC_6:   .SET   STRUC_7   
2A84                STRUC_7:   .SET   STRUC_8   
2A84                STRUC_8:   .SET   STRUC_9   
2A84                STRUC_9:   .SET   STRUC_10   
2A84                STRUC_10:   .SET   STRUC_11   
2A84                STRUC_11:   .SET   STRUC_12   
2A84                STRUC_12:   .SET   0   
2A84                          ;*Macro unroll: INTERPRET
2A84   CF                     RST   $08   
2A85   52 0B                  DW   interpret   
2A87   87 0F                  DW   exit_forth   
2A89                          ;*Macro unroll: TEST_SET_TEXT "str"
2A89   2A 02 2E               LD   HL,(lineBufStart)   
2A8C   22 08 2E               LD   (lineBufTop),HL   
2A8F   22 06 2E               LD   (currkey),HL   
2A92   21 9B 2A               LD   HL,tst_textM_2726S137   
2A95   22 20 30               LD   (char_pointer),HL   
2A98                          ;*Macro unroll:  _skip
2A98   C3 98 2A               JP   $   
2A9B                          ;*Macro unroll:  STRUC_PUSH $
2A9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A9B                STRUC_12:   .SET   STRUC_11   
2A9B                STRUC_11:   .SET   STRUC_10   
2A9B                STRUC_10:   .SET   STRUC_9   
2A9B                STRUC_9:   .SET   STRUC_8   
2A9B                STRUC_8:   .SET   STRUC_7   
2A9B                STRUC_7:   .SET   STRUC_6   
2A9B                STRUC_6:   .SET   STRUC_5   
2A9B                STRUC_5:   .SET   STRUC_4   
2A9B                STRUC_4:   .SET   STRUC_3   
2A9B                STRUC_3:   .SET   STRUC_2   
2A9B                STRUC_2:   .SET   STRUC_TOP   
2A9B                STRUC_TOP:   .SET   $   
2A9B                TST_TEXTM_2726S137:      
2A9B   73 74 72 0D 0A FF 0D 0A DB   "str","\r\n",-1,"\r\n"   
2AA3                          ;*Macro unroll:  _endskip
2AA3                          ;*Macro unroll:  STRUC_FWD
2AA3                CUR_ADR:   .SET   $   
2A99                          .ORG   STRUC_TOP - 2   
2A99   A3 2A                  DW   CUR_ADR   
2AA3                          .ORG   CUR_ADR   
2AA3                          ;*Macro unroll:  STRUC_POP
2AA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AA3                STRUC_TOP:   .SET   STRUC_2   
2AA3                STRUC_2:   .SET   STRUC_3   
2AA3                STRUC_3:   .SET   STRUC_4   
2AA3                STRUC_4:   .SET   STRUC_5   
2AA3                STRUC_5:   .SET   STRUC_6   
2AA3                STRUC_6:   .SET   STRUC_7   
2AA3                STRUC_7:   .SET   STRUC_8   
2AA3                STRUC_8:   .SET   STRUC_9   
2AA3                STRUC_9:   .SET   STRUC_10   
2AA3                STRUC_10:   .SET   STRUC_11   
2AA3                STRUC_11:   .SET   STRUC_12   
2AA3                STRUC_12:   .SET   0   
2AA3                          ;*Macro unroll: INTERPRET
2AA3   CF                     RST   $08   
2AA4   52 0B                  DW   interpret   
2AA6   87 0F                  DW   exit_forth   
2AA8                          ;*Macro unroll: EXPECT 3, "str len = 3"
2AA8   CD B9 07               CALL   printNum   
2AAB                          ;*Macro unroll:  loadWord H,L, B,C
2AAB   69                     LD   L,C   
2AAC   60                     LD   H,B   
2AAD   69                     LD   L,C   
2AAE                          ;*Macro unroll:  ppop0 B,C
2AAE   DD 2B                  DEC   IX   
2AB0   DD 46 00               LD   B,(IX+0)   
2AB3   DD 2B                  DEC   IX   
2AB5   DD 4E 00               LD   C,(IX+0)   
2AB8                          ;*Macro unroll:  CMP16 3
2AB8   11 03 00               LD   DE,3   
2ABB   B7                     OR   A   
2ABC   ED 52                  SBC   HL,DE   
2ABE                          ;*Macro unroll:  checkZeroWord H,L
2ABE   7D                     LD   A,L   
2ABF   B4                     OR   H   
2AC0   CA DF 2A               JP   z,tf_doneM_2728S139   
2AC3   11 3B 07               LD   DE,FAILED   
2AC6   CD C4 01               CALL   printPStr   
2AC9   11 D3 2A               LD   DE,te_failM_2728S139   
2ACC   CD C4 01               CALL   printPStr   
2ACF   76                     HALT      
2AD0                          ;*Macro unroll:  _skip
2AD0   C3 D0 2A               JP   $   
2AD3                          ;*Macro unroll:  STRUC_PUSH $
2AD3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AD3                STRUC_12:   .SET   STRUC_11   
2AD3                STRUC_11:   .SET   STRUC_10   
2AD3                STRUC_10:   .SET   STRUC_9   
2AD3                STRUC_9:   .SET   STRUC_8   
2AD3                STRUC_8:   .SET   STRUC_7   
2AD3                STRUC_7:   .SET   STRUC_6   
2AD3                STRUC_6:   .SET   STRUC_5   
2AD3                STRUC_5:   .SET   STRUC_4   
2AD3                STRUC_4:   .SET   STRUC_3   
2AD3                STRUC_3:   .SET   STRUC_2   
2AD3                STRUC_2:   .SET   STRUC_TOP   
2AD3                STRUC_TOP:   .SET   $   
2AD3                TE_FAILM_2728S139:      
2AD3   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2ADF                          ;*Macro unroll:  _endskip
2ADF                          ;*Macro unroll:  STRUC_FWD
2ADF                CUR_ADR:   .SET   $   
2AD1                          .ORG   STRUC_TOP - 2   
2AD1   DF 2A                  DW   CUR_ADR   
2ADF                          .ORG   CUR_ADR   
2ADF                          ;*Macro unroll:  STRUC_POP
2ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2ADF                STRUC_TOP:   .SET   STRUC_2   
2ADF                STRUC_2:   .SET   STRUC_3   
2ADF                STRUC_3:   .SET   STRUC_4   
2ADF                STRUC_4:   .SET   STRUC_5   
2ADF                STRUC_5:   .SET   STRUC_6   
2ADF                STRUC_6:   .SET   STRUC_7   
2ADF                STRUC_7:   .SET   STRUC_8   
2ADF                STRUC_8:   .SET   STRUC_9   
2ADF                STRUC_9:   .SET   STRUC_10   
2ADF                STRUC_10:   .SET   STRUC_11   
2ADF                STRUC_11:   .SET   STRUC_12   
2ADF                STRUC_12:   .SET   0   
2ADF                TF_DONEM_2728S139:      
2ADF                          ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
2ADF   2A 02 2E               LD   HL,(lineBufStart)   
2AE2   22 08 2E               LD   (lineBufTop),HL   
2AE5   22 06 2E               LD   (currkey),HL   
2AE8   21 F1 2A               LD   HL,tst_textM_2729S141   
2AEB   22 20 30               LD   (char_pointer),HL   
2AEE                          ;*Macro unroll:  _skip
2AEE   C3 EE 2A               JP   $   
2AF1                          ;*Macro unroll:  STRUC_PUSH $
2AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AF1                STRUC_12:   .SET   STRUC_11   
2AF1                STRUC_11:   .SET   STRUC_10   
2AF1                STRUC_10:   .SET   STRUC_9   
2AF1                STRUC_9:   .SET   STRUC_8   
2AF1                STRUC_8:   .SET   STRUC_7   
2AF1                STRUC_7:   .SET   STRUC_6   
2AF1                STRUC_6:   .SET   STRUC_5   
2AF1                STRUC_5:   .SET   STRUC_4   
2AF1                STRUC_4:   .SET   STRUC_3   
2AF1                STRUC_3:   .SET   STRUC_2   
2AF1                STRUC_2:   .SET   STRUC_TOP   
2AF1                STRUC_TOP:   .SET   $   
2AF1                TST_TEXTM_2729S141:      
2AF1   22 20 78 79 7A 22 0D 0A FF 0D 0A DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
2AFC                          ;*Macro unroll:  _endskip
2AFC                          ;*Macro unroll:  STRUC_FWD
2AFC                CUR_ADR:   .SET   $   
2AEF                          .ORG   STRUC_TOP - 2   
2AEF   FC 2A                  DW   CUR_ADR   
2AFC                          .ORG   CUR_ADR   
2AFC                          ;*Macro unroll:  STRUC_POP
2AFC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AFC                STRUC_TOP:   .SET   STRUC_2   
2AFC                STRUC_2:   .SET   STRUC_3   
2AFC                STRUC_3:   .SET   STRUC_4   
2AFC                STRUC_4:   .SET   STRUC_5   
2AFC                STRUC_5:   .SET   STRUC_6   
2AFC                STRUC_6:   .SET   STRUC_7   
2AFC                STRUC_7:   .SET   STRUC_8   
2AFC                STRUC_8:   .SET   STRUC_9   
2AFC                STRUC_9:   .SET   STRUC_10   
2AFC                STRUC_10:   .SET   STRUC_11   
2AFC                STRUC_11:   .SET   STRUC_12   
2AFC                STRUC_12:   .SET   0   
2AFC                          ;*Macro unroll: INTERPRET
2AFC   CF                     RST   $08   
2AFD   52 0B                  DW   interpret   
2AFF   87 0F                  DW   exit_forth   
2B01                          ;*Macro unroll: TEST_SET_TEXT "dup"
2B01   2A 02 2E               LD   HL,(lineBufStart)   
2B04   22 08 2E               LD   (lineBufTop),HL   
2B07   22 06 2E               LD   (currkey),HL   
2B0A   21 13 2B               LD   HL,tst_textM_2731S143   
2B0D   22 20 30               LD   (char_pointer),HL   
2B10                          ;*Macro unroll:  _skip
2B10   C3 10 2B               JP   $   
2B13                          ;*Macro unroll:  STRUC_PUSH $
2B13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B13                STRUC_12:   .SET   STRUC_11   
2B13                STRUC_11:   .SET   STRUC_10   
2B13                STRUC_10:   .SET   STRUC_9   
2B13                STRUC_9:   .SET   STRUC_8   
2B13                STRUC_8:   .SET   STRUC_7   
2B13                STRUC_7:   .SET   STRUC_6   
2B13                STRUC_6:   .SET   STRUC_5   
2B13                STRUC_5:   .SET   STRUC_4   
2B13                STRUC_4:   .SET   STRUC_3   
2B13                STRUC_3:   .SET   STRUC_2   
2B13                STRUC_2:   .SET   STRUC_TOP   
2B13                STRUC_TOP:   .SET   $   
2B13                TST_TEXTM_2731S143:      
2B13   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
2B1B                          ;*Macro unroll:  _endskip
2B1B                          ;*Macro unroll:  STRUC_FWD
2B1B                CUR_ADR:   .SET   $   
2B11                          .ORG   STRUC_TOP - 2   
2B11   1B 2B                  DW   CUR_ADR   
2B1B                          .ORG   CUR_ADR   
2B1B                          ;*Macro unroll:  STRUC_POP
2B1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B1B                STRUC_TOP:   .SET   STRUC_2   
2B1B                STRUC_2:   .SET   STRUC_3   
2B1B                STRUC_3:   .SET   STRUC_4   
2B1B                STRUC_4:   .SET   STRUC_5   
2B1B                STRUC_5:   .SET   STRUC_6   
2B1B                STRUC_6:   .SET   STRUC_7   
2B1B                STRUC_7:   .SET   STRUC_8   
2B1B                STRUC_8:   .SET   STRUC_9   
2B1B                STRUC_9:   .SET   STRUC_10   
2B1B                STRUC_10:   .SET   STRUC_11   
2B1B                STRUC_11:   .SET   STRUC_12   
2B1B                STRUC_12:   .SET   0   
2B1B                          ;*Macro unroll: INTERPRET
2B1B   CF                     RST   $08   
2B1C   52 0B                  DW   interpret   
2B1E   87 0F                  DW   exit_forth   
2B20                          ;*Macro unroll: EXPECT 3, "str len = 3"
2B20   CD B9 07               CALL   printNum   
2B23                          ;*Macro unroll:  loadWord H,L, B,C
2B23   69                     LD   L,C   
2B24   60                     LD   H,B   
2B25   69                     LD   L,C   
2B26                          ;*Macro unroll:  ppop0 B,C
2B26   DD 2B                  DEC   IX   
2B28   DD 46 00               LD   B,(IX+0)   
2B2B   DD 2B                  DEC   IX   
2B2D   DD 4E 00               LD   C,(IX+0)   
2B30                          ;*Macro unroll:  CMP16 3
2B30   11 03 00               LD   DE,3   
2B33   B7                     OR   A   
2B34   ED 52                  SBC   HL,DE   
2B36                          ;*Macro unroll:  checkZeroWord H,L
2B36   7D                     LD   A,L   
2B37   B4                     OR   H   
2B38   CA 57 2B               JP   z,tf_doneM_2733S145   
2B3B   11 3B 07               LD   DE,FAILED   
2B3E   CD C4 01               CALL   printPStr   
2B41   11 4B 2B               LD   DE,te_failM_2733S145   
2B44   CD C4 01               CALL   printPStr   
2B47   76                     HALT      
2B48                          ;*Macro unroll:  _skip
2B48   C3 48 2B               JP   $   
2B4B                          ;*Macro unroll:  STRUC_PUSH $
2B4B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B4B                STRUC_12:   .SET   STRUC_11   
2B4B                STRUC_11:   .SET   STRUC_10   
2B4B                STRUC_10:   .SET   STRUC_9   
2B4B                STRUC_9:   .SET   STRUC_8   
2B4B                STRUC_8:   .SET   STRUC_7   
2B4B                STRUC_7:   .SET   STRUC_6   
2B4B                STRUC_6:   .SET   STRUC_5   
2B4B                STRUC_5:   .SET   STRUC_4   
2B4B                STRUC_4:   .SET   STRUC_3   
2B4B                STRUC_3:   .SET   STRUC_2   
2B4B                STRUC_2:   .SET   STRUC_TOP   
2B4B                STRUC_TOP:   .SET   $   
2B4B                TE_FAILM_2733S145:      
2B4B   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2B57                          ;*Macro unroll:  _endskip
2B57                          ;*Macro unroll:  STRUC_FWD
2B57                CUR_ADR:   .SET   $   
2B49                          .ORG   STRUC_TOP - 2   
2B49   57 2B                  DW   CUR_ADR   
2B57                          .ORG   CUR_ADR   
2B57                          ;*Macro unroll:  STRUC_POP
2B57                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B57                STRUC_TOP:   .SET   STRUC_2   
2B57                STRUC_2:   .SET   STRUC_3   
2B57                STRUC_3:   .SET   STRUC_4   
2B57                STRUC_4:   .SET   STRUC_5   
2B57                STRUC_5:   .SET   STRUC_6   
2B57                STRUC_6:   .SET   STRUC_7   
2B57                STRUC_7:   .SET   STRUC_8   
2B57                STRUC_8:   .SET   STRUC_9   
2B57                STRUC_9:   .SET   STRUC_10   
2B57                STRUC_10:   .SET   STRUC_11   
2B57                STRUC_11:   .SET   STRUC_12   
2B57                STRUC_12:   .SET   0   
2B57                TF_DONEM_2733S145:      
2B57                          ;*Macro unroll: TEST_SET_TEXT "type"
2B57   2A 02 2E               LD   HL,(lineBufStart)   
2B5A   22 08 2E               LD   (lineBufTop),HL   
2B5D   22 06 2E               LD   (currkey),HL   
2B60   21 69 2B               LD   HL,tst_textM_2734S146   
2B63   22 20 30               LD   (char_pointer),HL   
2B66                          ;*Macro unroll:  _skip
2B66   C3 66 2B               JP   $   
2B69                          ;*Macro unroll:  STRUC_PUSH $
2B69                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B69                STRUC_12:   .SET   STRUC_11   
2B69                STRUC_11:   .SET   STRUC_10   
2B69                STRUC_10:   .SET   STRUC_9   
2B69                STRUC_9:   .SET   STRUC_8   
2B69                STRUC_8:   .SET   STRUC_7   
2B69                STRUC_7:   .SET   STRUC_6   
2B69                STRUC_6:   .SET   STRUC_5   
2B69                STRUC_5:   .SET   STRUC_4   
2B69                STRUC_4:   .SET   STRUC_3   
2B69                STRUC_3:   .SET   STRUC_2   
2B69                STRUC_2:   .SET   STRUC_TOP   
2B69                STRUC_TOP:   .SET   $   
2B69                TST_TEXTM_2734S146:      
2B69   74 79 70 65 0D 0A FF 0D 0A DB   "type","\r\n",-1,"\r\n"   
2B72                          ;*Macro unroll:  _endskip
2B72                          ;*Macro unroll:  STRUC_FWD
2B72                CUR_ADR:   .SET   $   
2B67                          .ORG   STRUC_TOP - 2   
2B67   72 2B                  DW   CUR_ADR   
2B72                          .ORG   CUR_ADR   
2B72                          ;*Macro unroll:  STRUC_POP
2B72                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B72                STRUC_TOP:   .SET   STRUC_2   
2B72                STRUC_2:   .SET   STRUC_3   
2B72                STRUC_3:   .SET   STRUC_4   
2B72                STRUC_4:   .SET   STRUC_5   
2B72                STRUC_5:   .SET   STRUC_6   
2B72                STRUC_6:   .SET   STRUC_7   
2B72                STRUC_7:   .SET   STRUC_8   
2B72                STRUC_8:   .SET   STRUC_9   
2B72                STRUC_9:   .SET   STRUC_10   
2B72                STRUC_10:   .SET   STRUC_11   
2B72                STRUC_11:   .SET   STRUC_12   
2B72                STRUC_12:   .SET   0   
2B72                          ;*Macro unroll: INTERPRET
2B72   CF                     RST   $08   
2B73   52 0B                  DW   interpret   
2B75   87 0F                  DW   exit_forth   
2B77                             ; 
2B77                             ; ld HL, 12
2B77                             ; ld C, 10
2B77                             ; call divideWordByByte
2B77                             ; ld B, 0
2B77                             ; ld C, A
2B77                             ; EXPECT 2, "div 11 / 10 = 1 1"
2B77                             ; TEST_SET_TEXT "hello\r\n"
2B77                             ; call KEY
2B77                             ; EXPECT $68, "key 'h'"
2B77                             ; call KEY
2B77                             ; EXPECT $65, "key 'e'"
2B77                             ; TEST_SET_TEXT "x"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'x'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "a xyz "
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'a xyz'"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'a xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "here"
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; call CREATE
2B77                             ; call LATEST
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "create xyz latest"
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER + 6, "create xyz here"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; call DUP
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; ppushValue -10
2B77                             ; ppushValue 10
2B77                             ; call STAR
2B77                             ; EXPECT -100, "expect -10 * 10 to be -100"
2B77                             ; ppushValue -10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT 200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue 10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT -200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue -101
2B77                             ; ppushValue 20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5, "expect -101 / 20 to be -5"
2B77                             ; EXPECT -1, "expect -101 % 20 to be -1"
2B77                             ; ppushValue -101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT 5,  "expect -101 / -20 to be 5"
2B77                             ; EXPECT -1, "expect -101 % -20 to be -1"
2B77                             ; ppushValue 101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5,  "expect 101 / -20 to be -5"
2B77                             ; EXPECT 1, "expect 101 % -20 to be 1"
2B77                             ; TEST_SET_TEXT ": testif2 if 100 endif ;"
2B77                             ; ppushValue 0
2B77                             ; TEST_SET_TEXT "testloop"
2B77                             ; call INTERPRET
2B77                             ; EXPECT 5, "Loop until limit < 5"
2B77                             ; ppushPText "xyz"
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "xyz length 3"
2B77                             ; call CFETCH
2B77                             ; EXPECT "x" + 0, "xyz --> x"
2B77                             ; ppushValue HEADER_LATEST
2B77                             ; call TCFA
2B77                             ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; ppushValue HEADER_PLUS
2B77                             ; call TCFA
2B77                             ; call EXECUTE
2B77                             ; EXPECT 3, "1 2 plus = 3"
2B77                             ; ppushText "100",3
2B77                             ; call NUMBER
2B77                             ; EXPECT 0, "0 = no parse err"
2B77                             ; EXPECT 100, "parse 100"
2B77                             ; ppushText "latest",6
2B77                             ; call FIND
2B77                             ; EXPECT HEADER_LATEST, "find header of LATEST"
2B77                             ; TEST_SET_TEXT "base"
2B77                             ; rst $08
2B77                             ; dw interpret
2B77                             ; dw exit_forth
2B77                             ; call FETCH
2B77                             ; EXPECT 10, "expect base to be 10"
2B77                             ; ppushText "add",3
2B77                             ; call FIND
2B77                             ; ppushValue 64
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#h 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT $100, "expect hex $100"
2B77                             ; TEST_SET_TEXT "hex"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#d 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT 100, "expect decimal 100"
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                          ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
2B77   2A 02 2E               LD   HL,(lineBufStart)   
2B7A   22 08 2E               LD   (lineBufTop),HL   
2B7D   22 06 2E               LD   (currkey),HL   
2B80   21 89 2B               LD   HL,tst_textM_2860S18   
2B83   22 20 30               LD   (char_pointer),HL   
2B86                          ;*Macro unroll:  _skip
2B86   C3 86 2B               JP   $   
2B89                          ;*Macro unroll:  STRUC_PUSH $
2B89                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B89                STRUC_12:   .SET   STRUC_11   
2B89                STRUC_11:   .SET   STRUC_10   
2B89                STRUC_10:   .SET   STRUC_9   
2B89                STRUC_9:   .SET   STRUC_8   
2B89                STRUC_8:   .SET   STRUC_7   
2B89                STRUC_7:   .SET   STRUC_6   
2B89                STRUC_6:   .SET   STRUC_5   
2B89                STRUC_5:   .SET   STRUC_4   
2B89                STRUC_4:   .SET   STRUC_3   
2B89                STRUC_3:   .SET   STRUC_2   
2B89                STRUC_2:   .SET   STRUC_TOP   
2B89                STRUC_TOP:   .SET   $   
2B89                TST_TEXTM_2860S18:      
2B89   31 36 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "16 base ! 20","\r\n",-1,"\r\n"   
2B9A                          ;*Macro unroll:  _endskip
2B9A                          ;*Macro unroll:  STRUC_FWD
2B9A                CUR_ADR:   .SET   $   
2B87                          .ORG   STRUC_TOP - 2   
2B87   9A 2B                  DW   CUR_ADR   
2B9A                          .ORG   CUR_ADR   
2B9A                          ;*Macro unroll:  STRUC_POP
2B9A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B9A                STRUC_TOP:   .SET   STRUC_2   
2B9A                STRUC_2:   .SET   STRUC_3   
2B9A                STRUC_3:   .SET   STRUC_4   
2B9A                STRUC_4:   .SET   STRUC_5   
2B9A                STRUC_5:   .SET   STRUC_6   
2B9A                STRUC_6:   .SET   STRUC_7   
2B9A                STRUC_7:   .SET   STRUC_8   
2B9A                STRUC_8:   .SET   STRUC_9   
2B9A                STRUC_9:   .SET   STRUC_10   
2B9A                STRUC_10:   .SET   STRUC_11   
2B9A                STRUC_11:   .SET   STRUC_12   
2B9A                STRUC_12:   .SET   0   
2B9A                          ;*Macro unroll: INTERPRET
2B9A   CF                     RST   $08   
2B9B   52 0B                  DW   interpret   
2B9D   87 0F                  DW   exit_forth   
2B9F                          ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
2B9F   CD B9 07               CALL   printNum   
2BA2                          ;*Macro unroll:  loadWord H,L, B,C
2BA2   69                     LD   L,C   
2BA3   60                     LD   H,B   
2BA4   69                     LD   L,C   
2BA5                          ;*Macro unroll:  ppop0 B,C
2BA5   DD 2B                  DEC   IX   
2BA7   DD 46 00               LD   B,(IX+0)   
2BAA   DD 2B                  DEC   IX   
2BAC   DD 4E 00               LD   C,(IX+0)   
2BAF                          ;*Macro unroll:  CMP16 32
2BAF   11 20 00               LD   DE,32   
2BB2   B7                     OR   A   
2BB3   ED 52                  SBC   HL,DE   
2BB5                          ;*Macro unroll:  checkZeroWord H,L
2BB5   7D                     LD   A,L   
2BB6   B4                     OR   H   
2BB7   CA DA 2B               JP   z,tf_doneM_2862S20   
2BBA   11 3B 07               LD   DE,FAILED   
2BBD   CD C4 01               CALL   printPStr   
2BC0   11 CA 2B               LD   DE,te_failM_2862S20   
2BC3   CD C4 01               CALL   printPStr   
2BC6   76                     HALT      
2BC7                          ;*Macro unroll:  _skip
2BC7   C3 C7 2B               JP   $   
2BCA                          ;*Macro unroll:  STRUC_PUSH $
2BCA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BCA                STRUC_12:   .SET   STRUC_11   
2BCA                STRUC_11:   .SET   STRUC_10   
2BCA                STRUC_10:   .SET   STRUC_9   
2BCA                STRUC_9:   .SET   STRUC_8   
2BCA                STRUC_8:   .SET   STRUC_7   
2BCA                STRUC_7:   .SET   STRUC_6   
2BCA                STRUC_6:   .SET   STRUC_5   
2BCA                STRUC_5:   .SET   STRUC_4   
2BCA                STRUC_4:   .SET   STRUC_3   
2BCA                STRUC_3:   .SET   STRUC_2   
2BCA                STRUC_2:   .SET   STRUC_TOP   
2BCA                STRUC_TOP:   .SET   $   
2BCA                TE_FAILM_2862S20:      
2BCA   0F 33 32 20 24 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "32 $20 to be 32"   
2BDA                          ;*Macro unroll:  _endskip
2BDA                          ;*Macro unroll:  STRUC_FWD
2BDA                CUR_ADR:   .SET   $   
2BC8                          .ORG   STRUC_TOP - 2   
2BC8   DA 2B                  DW   CUR_ADR   
2BDA                          .ORG   CUR_ADR   
2BDA                          ;*Macro unroll:  STRUC_POP
2BDA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BDA                STRUC_TOP:   .SET   STRUC_2   
2BDA                STRUC_2:   .SET   STRUC_3   
2BDA                STRUC_3:   .SET   STRUC_4   
2BDA                STRUC_4:   .SET   STRUC_5   
2BDA                STRUC_5:   .SET   STRUC_6   
2BDA                STRUC_6:   .SET   STRUC_7   
2BDA                STRUC_7:   .SET   STRUC_8   
2BDA                STRUC_8:   .SET   STRUC_9   
2BDA                STRUC_9:   .SET   STRUC_10   
2BDA                STRUC_10:   .SET   STRUC_11   
2BDA                STRUC_11:   .SET   STRUC_12   
2BDA                STRUC_12:   .SET   0   
2BDA                TF_DONEM_2862S20:      
2BDA                          ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
2BDA   2A 02 2E               LD   HL,(lineBufStart)   
2BDD   22 08 2E               LD   (lineBufTop),HL   
2BE0   22 06 2E               LD   (currkey),HL   
2BE3   21 EC 2B               LD   HL,tst_textM_2863S22   
2BE6   22 20 30               LD   (char_pointer),HL   
2BE9                          ;*Macro unroll:  _skip
2BE9   C3 E9 2B               JP   $   
2BEC                          ;*Macro unroll:  STRUC_PUSH $
2BEC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BEC                STRUC_12:   .SET   STRUC_11   
2BEC                STRUC_11:   .SET   STRUC_10   
2BEC                STRUC_10:   .SET   STRUC_9   
2BEC                STRUC_9:   .SET   STRUC_8   
2BEC                STRUC_8:   .SET   STRUC_7   
2BEC                STRUC_7:   .SET   STRUC_6   
2BEC                STRUC_6:   .SET   STRUC_5   
2BEC                STRUC_5:   .SET   STRUC_4   
2BEC                STRUC_4:   .SET   STRUC_3   
2BEC                STRUC_3:   .SET   STRUC_2   
2BEC                STRUC_2:   .SET   STRUC_TOP   
2BEC                STRUC_TOP:   .SET   $   
2BEC                TST_TEXTM_2863S22:      
2BEC   30 41 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "0A base ! 20","\r\n",-1,"\r\n"   
2BFD                          ;*Macro unroll:  _endskip
2BFD                          ;*Macro unroll:  STRUC_FWD
2BFD                CUR_ADR:   .SET   $   
2BEA                          .ORG   STRUC_TOP - 2   
2BEA   FD 2B                  DW   CUR_ADR   
2BFD                          .ORG   CUR_ADR   
2BFD                          ;*Macro unroll:  STRUC_POP
2BFD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BFD                STRUC_TOP:   .SET   STRUC_2   
2BFD                STRUC_2:   .SET   STRUC_3   
2BFD                STRUC_3:   .SET   STRUC_4   
2BFD                STRUC_4:   .SET   STRUC_5   
2BFD                STRUC_5:   .SET   STRUC_6   
2BFD                STRUC_6:   .SET   STRUC_7   
2BFD                STRUC_7:   .SET   STRUC_8   
2BFD                STRUC_8:   .SET   STRUC_9   
2BFD                STRUC_9:   .SET   STRUC_10   
2BFD                STRUC_10:   .SET   STRUC_11   
2BFD                STRUC_11:   .SET   STRUC_12   
2BFD                STRUC_12:   .SET   0   
2BFD                          ;*Macro unroll: INTERPRET
2BFD   CF                     RST   $08   
2BFE   52 0B                  DW   interpret   
2C00   87 0F                  DW   exit_forth   
2C02                          ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
2C02   CD B9 07               CALL   printNum   
2C05                          ;*Macro unroll:  loadWord H,L, B,C
2C05   69                     LD   L,C   
2C06   60                     LD   H,B   
2C07   69                     LD   L,C   
2C08                          ;*Macro unroll:  ppop0 B,C
2C08   DD 2B                  DEC   IX   
2C0A   DD 46 00               LD   B,(IX+0)   
2C0D   DD 2B                  DEC   IX   
2C0F   DD 4E 00               LD   C,(IX+0)   
2C12                          ;*Macro unroll:  CMP16 20
2C12   11 14 00               LD   DE,20   
2C15   B7                     OR   A   
2C16   ED 52                  SBC   HL,DE   
2C18                          ;*Macro unroll:  checkZeroWord H,L
2C18   7D                     LD   A,L   
2C19   B4                     OR   H   
2C1A   CA 44 2C               JP   z,tf_doneM_2865S24   
2C1D   11 3B 07               LD   DE,FAILED   
2C20   CD C4 01               CALL   printPStr   
2C23   11 2D 2C               LD   DE,te_failM_2865S24   
2C26   CD C4 01               CALL   printPStr   
2C29   76                     HALT      
2C2A                          ;*Macro unroll:  _skip
2C2A   C3 2A 2C               JP   $   
2C2D                          ;*Macro unroll:  STRUC_PUSH $
2C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C2D                STRUC_12:   .SET   STRUC_11   
2C2D                STRUC_11:   .SET   STRUC_10   
2C2D                STRUC_10:   .SET   STRUC_9   
2C2D                STRUC_9:   .SET   STRUC_8   
2C2D                STRUC_8:   .SET   STRUC_7   
2C2D                STRUC_7:   .SET   STRUC_6   
2C2D                STRUC_6:   .SET   STRUC_5   
2C2D                STRUC_5:   .SET   STRUC_4   
2C2D                STRUC_4:   .SET   STRUC_3   
2C2D                STRUC_3:   .SET   STRUC_2   
2C2D                STRUC_2:   .SET   STRUC_TOP   
2C2D                STRUC_TOP:   .SET   $   
2C2D                TE_FAILM_2865S24:      
2C2D   16 32 30 20 64 65 63 69 6D 61 6C 20 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "20 decimal 20 to be 32"   
2C44                          ;*Macro unroll:  _endskip
2C44                          ;*Macro unroll:  STRUC_FWD
2C44                CUR_ADR:   .SET   $   
2C2B                          .ORG   STRUC_TOP - 2   
2C2B   44 2C                  DW   CUR_ADR   
2C44                          .ORG   CUR_ADR   
2C44                          ;*Macro unroll:  STRUC_POP
2C44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C44                STRUC_TOP:   .SET   STRUC_2   
2C44                STRUC_2:   .SET   STRUC_3   
2C44                STRUC_3:   .SET   STRUC_4   
2C44                STRUC_4:   .SET   STRUC_5   
2C44                STRUC_5:   .SET   STRUC_6   
2C44                STRUC_6:   .SET   STRUC_7   
2C44                STRUC_7:   .SET   STRUC_8   
2C44                STRUC_8:   .SET   STRUC_9   
2C44                STRUC_9:   .SET   STRUC_10   
2C44                STRUC_10:   .SET   STRUC_11   
2C44                STRUC_11:   .SET   STRUC_12   
2C44                STRUC_12:   .SET   0   
2C44                TF_DONEM_2865S24:      
2C44                          ;*Macro unroll: TEST_SET_TEXT "100 100 +"
2C44   2A 02 2E               LD   HL,(lineBufStart)   
2C47   22 08 2E               LD   (lineBufTop),HL   
2C4A   22 06 2E               LD   (currkey),HL   
2C4D   21 56 2C               LD   HL,tst_textM_2866S1   
2C50   22 20 30               LD   (char_pointer),HL   
2C53                          ;*Macro unroll:  _skip
2C53   C3 53 2C               JP   $   
2C56                          ;*Macro unroll:  STRUC_PUSH $
2C56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C56                STRUC_12:   .SET   STRUC_11   
2C56                STRUC_11:   .SET   STRUC_10   
2C56                STRUC_10:   .SET   STRUC_9   
2C56                STRUC_9:   .SET   STRUC_8   
2C56                STRUC_8:   .SET   STRUC_7   
2C56                STRUC_7:   .SET   STRUC_6   
2C56                STRUC_6:   .SET   STRUC_5   
2C56                STRUC_5:   .SET   STRUC_4   
2C56                STRUC_4:   .SET   STRUC_3   
2C56                STRUC_3:   .SET   STRUC_2   
2C56                STRUC_2:   .SET   STRUC_TOP   
2C56                STRUC_TOP:   .SET   $   
2C56                TST_TEXTM_2866S1:      
2C56   31 30 30 20 31 30 30 20 2B 0D 0A FF 0D 0A DB   "100 100 +","\r\n",-1,"\r\n"   
2C64                          ;*Macro unroll:  _endskip
2C64                          ;*Macro unroll:  STRUC_FWD
2C64                CUR_ADR:   .SET   $   
2C54                          .ORG   STRUC_TOP - 2   
2C54   64 2C                  DW   CUR_ADR   
2C64                          .ORG   CUR_ADR   
2C64                          ;*Macro unroll:  STRUC_POP
2C64                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C64                STRUC_TOP:   .SET   STRUC_2   
2C64                STRUC_2:   .SET   STRUC_3   
2C64                STRUC_3:   .SET   STRUC_4   
2C64                STRUC_4:   .SET   STRUC_5   
2C64                STRUC_5:   .SET   STRUC_6   
2C64                STRUC_6:   .SET   STRUC_7   
2C64                STRUC_7:   .SET   STRUC_8   
2C64                STRUC_8:   .SET   STRUC_9   
2C64                STRUC_9:   .SET   STRUC_10   
2C64                STRUC_10:   .SET   STRUC_11   
2C64                STRUC_11:   .SET   STRUC_12   
2C64                STRUC_12:   .SET   0   
2C64                          ;*Macro unroll: INTERPRET
2C64   CF                     RST   $08   
2C65   52 0B                  DW   interpret   
2C67   87 0F                  DW   exit_forth   
2C69                          ;*Macro unroll: EXPECT 200, "100 100 + = 200"
2C69   CD B9 07               CALL   printNum   
2C6C                          ;*Macro unroll:  loadWord H,L, B,C
2C6C   69                     LD   L,C   
2C6D   60                     LD   H,B   
2C6E   69                     LD   L,C   
2C6F                          ;*Macro unroll:  ppop0 B,C
2C6F   DD 2B                  DEC   IX   
2C71   DD 46 00               LD   B,(IX+0)   
2C74   DD 2B                  DEC   IX   
2C76   DD 4E 00               LD   C,(IX+0)   
2C79                          ;*Macro unroll:  CMP16 200
2C79   11 C8 00               LD   DE,200   
2C7C   B7                     OR   A   
2C7D   ED 52                  SBC   HL,DE   
2C7F                          ;*Macro unroll:  checkZeroWord H,L
2C7F   7D                     LD   A,L   
2C80   B4                     OR   H   
2C81   CA A4 2C               JP   z,tf_doneM_2868S3   
2C84   11 3B 07               LD   DE,FAILED   
2C87   CD C4 01               CALL   printPStr   
2C8A   11 94 2C               LD   DE,te_failM_2868S3   
2C8D   CD C4 01               CALL   printPStr   
2C90   76                     HALT      
2C91                          ;*Macro unroll:  _skip
2C91   C3 91 2C               JP   $   
2C94                          ;*Macro unroll:  STRUC_PUSH $
2C94                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C94                STRUC_12:   .SET   STRUC_11   
2C94                STRUC_11:   .SET   STRUC_10   
2C94                STRUC_10:   .SET   STRUC_9   
2C94                STRUC_9:   .SET   STRUC_8   
2C94                STRUC_8:   .SET   STRUC_7   
2C94                STRUC_7:   .SET   STRUC_6   
2C94                STRUC_6:   .SET   STRUC_5   
2C94                STRUC_5:   .SET   STRUC_4   
2C94                STRUC_4:   .SET   STRUC_3   
2C94                STRUC_3:   .SET   STRUC_2   
2C94                STRUC_2:   .SET   STRUC_TOP   
2C94                STRUC_TOP:   .SET   $   
2C94                TE_FAILM_2868S3:      
2C94   0F 31 30 30 20 31 30 30 20 2B 20 3D 20 32 30 30 .PSTR   "100 100 + = 200"   
2CA4                          ;*Macro unroll:  _endskip
2CA4                          ;*Macro unroll:  STRUC_FWD
2CA4                CUR_ADR:   .SET   $   
2C92                          .ORG   STRUC_TOP - 2   
2C92   A4 2C                  DW   CUR_ADR   
2CA4                          .ORG   CUR_ADR   
2CA4                          ;*Macro unroll:  STRUC_POP
2CA4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CA4                STRUC_TOP:   .SET   STRUC_2   
2CA4                STRUC_2:   .SET   STRUC_3   
2CA4                STRUC_3:   .SET   STRUC_4   
2CA4                STRUC_4:   .SET   STRUC_5   
2CA4                STRUC_5:   .SET   STRUC_6   
2CA4                STRUC_6:   .SET   STRUC_7   
2CA4                STRUC_7:   .SET   STRUC_8   
2CA4                STRUC_8:   .SET   STRUC_9   
2CA4                STRUC_9:   .SET   STRUC_10   
2CA4                STRUC_10:   .SET   STRUC_11   
2CA4                STRUC_11:   .SET   STRUC_12   
2CA4                STRUC_12:   .SET   0   
2CA4                TF_DONEM_2868S3:      
2CA4                          ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
2CA4   2A 02 2E               LD   HL,(lineBufStart)   
2CA7   22 08 2E               LD   (lineBufTop),HL   
2CAA   22 06 2E               LD   (currkey),HL   
2CAD   21 B6 2C               LD   HL,tst_textM_2869S5   
2CB0   22 20 30               LD   (char_pointer),HL   
2CB3                          ;*Macro unroll:  _skip
2CB3   C3 B3 2C               JP   $   
2CB6                          ;*Macro unroll:  STRUC_PUSH $
2CB6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CB6                STRUC_12:   .SET   STRUC_11   
2CB6                STRUC_11:   .SET   STRUC_10   
2CB6                STRUC_10:   .SET   STRUC_9   
2CB6                STRUC_9:   .SET   STRUC_8   
2CB6                STRUC_8:   .SET   STRUC_7   
2CB6                STRUC_7:   .SET   STRUC_6   
2CB6                STRUC_6:   .SET   STRUC_5   
2CB6                STRUC_5:   .SET   STRUC_4   
2CB6                STRUC_4:   .SET   STRUC_3   
2CB6                STRUC_3:   .SET   STRUC_2   
2CB6                STRUC_2:   .SET   STRUC_TOP   
2CB6                STRUC_TOP:   .SET   $   
2CB6                TST_TEXTM_2869S5:      
2CB6   31 30 30 20 31 30 20 2B 20 2E 0D 0A FF 0D 0A DB   "100 10 + .","\r\n",-1,"\r\n"   
2CC5                          ;*Macro unroll:  _endskip
2CC5                          ;*Macro unroll:  STRUC_FWD
2CC5                CUR_ADR:   .SET   $   
2CB4                          .ORG   STRUC_TOP - 2   
2CB4   C5 2C                  DW   CUR_ADR   
2CC5                          .ORG   CUR_ADR   
2CC5                          ;*Macro unroll:  STRUC_POP
2CC5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CC5                STRUC_TOP:   .SET   STRUC_2   
2CC5                STRUC_2:   .SET   STRUC_3   
2CC5                STRUC_3:   .SET   STRUC_4   
2CC5                STRUC_4:   .SET   STRUC_5   
2CC5                STRUC_5:   .SET   STRUC_6   
2CC5                STRUC_6:   .SET   STRUC_7   
2CC5                STRUC_7:   .SET   STRUC_8   
2CC5                STRUC_8:   .SET   STRUC_9   
2CC5                STRUC_9:   .SET   STRUC_10   
2CC5                STRUC_10:   .SET   STRUC_11   
2CC5                STRUC_11:   .SET   STRUC_12   
2CC5                STRUC_12:   .SET   0   
2CC5                          ;*Macro unroll: INTERPRET
2CC5   CF                     RST   $08   
2CC6   52 0B                  DW   interpret   
2CC8   87 0F                  DW   exit_forth   
2CCA                          ;*Macro unroll: TEST_SET_TEXT "-10 abs"
2CCA   2A 02 2E               LD   HL,(lineBufStart)   
2CCD   22 08 2E               LD   (lineBufTop),HL   
2CD0   22 06 2E               LD   (currkey),HL   
2CD3   21 DC 2C               LD   HL,tst_textM_2871S8   
2CD6   22 20 30               LD   (char_pointer),HL   
2CD9                          ;*Macro unroll:  _skip
2CD9   C3 D9 2C               JP   $   
2CDC                          ;*Macro unroll:  STRUC_PUSH $
2CDC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CDC                STRUC_12:   .SET   STRUC_11   
2CDC                STRUC_11:   .SET   STRUC_10   
2CDC                STRUC_10:   .SET   STRUC_9   
2CDC                STRUC_9:   .SET   STRUC_8   
2CDC                STRUC_8:   .SET   STRUC_7   
2CDC                STRUC_7:   .SET   STRUC_6   
2CDC                STRUC_6:   .SET   STRUC_5   
2CDC                STRUC_5:   .SET   STRUC_4   
2CDC                STRUC_4:   .SET   STRUC_3   
2CDC                STRUC_3:   .SET   STRUC_2   
2CDC                STRUC_2:   .SET   STRUC_TOP   
2CDC                STRUC_TOP:   .SET   $   
2CDC                TST_TEXTM_2871S8:      
2CDC   2D 31 30 20 61 62 73 0D 0A FF 0D 0A DB   "-10 abs","\r\n",-1,"\r\n"   
2CE8                          ;*Macro unroll:  _endskip
2CE8                          ;*Macro unroll:  STRUC_FWD
2CE8                CUR_ADR:   .SET   $   
2CDA                          .ORG   STRUC_TOP - 2   
2CDA   E8 2C                  DW   CUR_ADR   
2CE8                          .ORG   CUR_ADR   
2CE8                          ;*Macro unroll:  STRUC_POP
2CE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CE8                STRUC_TOP:   .SET   STRUC_2   
2CE8                STRUC_2:   .SET   STRUC_3   
2CE8                STRUC_3:   .SET   STRUC_4   
2CE8                STRUC_4:   .SET   STRUC_5   
2CE8                STRUC_5:   .SET   STRUC_6   
2CE8                STRUC_6:   .SET   STRUC_7   
2CE8                STRUC_7:   .SET   STRUC_8   
2CE8                STRUC_8:   .SET   STRUC_9   
2CE8                STRUC_9:   .SET   STRUC_10   
2CE8                STRUC_10:   .SET   STRUC_11   
2CE8                STRUC_11:   .SET   STRUC_12   
2CE8                STRUC_12:   .SET   0   
2CE8                          ;*Macro unroll: INTERPRET
2CE8   CF                     RST   $08   
2CE9   52 0B                  DW   interpret   
2CEB   87 0F                  DW   exit_forth   
2CED                          ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
2CED   CD B9 07               CALL   printNum   
2CF0                          ;*Macro unroll:  loadWord H,L, B,C
2CF0   69                     LD   L,C   
2CF1   60                     LD   H,B   
2CF2   69                     LD   L,C   
2CF3                          ;*Macro unroll:  ppop0 B,C
2CF3   DD 2B                  DEC   IX   
2CF5   DD 46 00               LD   B,(IX+0)   
2CF8   DD 2B                  DEC   IX   
2CFA   DD 4E 00               LD   C,(IX+0)   
2CFD                          ;*Macro unroll:  CMP16 10
2CFD   11 0A 00               LD   DE,10   
2D00   B7                     OR   A   
2D01   ED 52                  SBC   HL,DE   
2D03                          ;*Macro unroll:  checkZeroWord H,L
2D03   7D                     LD   A,L   
2D04   B4                     OR   H   
2D05   CA 2C 2D               JP   z,tf_doneM_2873S10   
2D08   11 3B 07               LD   DE,FAILED   
2D0B   CD C4 01               CALL   printPStr   
2D0E   11 18 2D               LD   DE,te_failM_2873S10   
2D11   CD C4 01               CALL   printPStr   
2D14   76                     HALT      
2D15                          ;*Macro unroll:  _skip
2D15   C3 15 2D               JP   $   
2D18                          ;*Macro unroll:  STRUC_PUSH $
2D18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D18                STRUC_12:   .SET   STRUC_11   
2D18                STRUC_11:   .SET   STRUC_10   
2D18                STRUC_10:   .SET   STRUC_9   
2D18                STRUC_9:   .SET   STRUC_8   
2D18                STRUC_8:   .SET   STRUC_7   
2D18                STRUC_7:   .SET   STRUC_6   
2D18                STRUC_6:   .SET   STRUC_5   
2D18                STRUC_5:   .SET   STRUC_4   
2D18                STRUC_4:   .SET   STRUC_3   
2D18                STRUC_3:   .SET   STRUC_2   
2D18                STRUC_2:   .SET   STRUC_TOP   
2D18                STRUC_TOP:   .SET   $   
2D18                TE_FAILM_2873S10:      
2D18   13 31 30 20 61 62 73 20 2D 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs -10 to be 10"   
2D2C                          ;*Macro unroll:  _endskip
2D2C                          ;*Macro unroll:  STRUC_FWD
2D2C                CUR_ADR:   .SET   $   
2D16                          .ORG   STRUC_TOP - 2   
2D16   2C 2D                  DW   CUR_ADR   
2D2C                          .ORG   CUR_ADR   
2D2C                          ;*Macro unroll:  STRUC_POP
2D2C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D2C                STRUC_TOP:   .SET   STRUC_2   
2D2C                STRUC_2:   .SET   STRUC_3   
2D2C                STRUC_3:   .SET   STRUC_4   
2D2C                STRUC_4:   .SET   STRUC_5   
2D2C                STRUC_5:   .SET   STRUC_6   
2D2C                STRUC_6:   .SET   STRUC_7   
2D2C                STRUC_7:   .SET   STRUC_8   
2D2C                STRUC_8:   .SET   STRUC_9   
2D2C                STRUC_9:   .SET   STRUC_10   
2D2C                STRUC_10:   .SET   STRUC_11   
2D2C                STRUC_11:   .SET   STRUC_12   
2D2C                STRUC_12:   .SET   0   
2D2C                TF_DONEM_2873S10:      
2D2C                          ;*Macro unroll: TEST_SET_TEXT "10 abs"
2D2C   2A 02 2E               LD   HL,(lineBufStart)   
2D2F   22 08 2E               LD   (lineBufTop),HL   
2D32   22 06 2E               LD   (currkey),HL   
2D35   21 3E 2D               LD   HL,tst_textM_2874S12   
2D38   22 20 30               LD   (char_pointer),HL   
2D3B                          ;*Macro unroll:  _skip
2D3B   C3 3B 2D               JP   $   
2D3E                          ;*Macro unroll:  STRUC_PUSH $
2D3E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D3E                STRUC_12:   .SET   STRUC_11   
2D3E                STRUC_11:   .SET   STRUC_10   
2D3E                STRUC_10:   .SET   STRUC_9   
2D3E                STRUC_9:   .SET   STRUC_8   
2D3E                STRUC_8:   .SET   STRUC_7   
2D3E                STRUC_7:   .SET   STRUC_6   
2D3E                STRUC_6:   .SET   STRUC_5   
2D3E                STRUC_5:   .SET   STRUC_4   
2D3E                STRUC_4:   .SET   STRUC_3   
2D3E                STRUC_3:   .SET   STRUC_2   
2D3E                STRUC_2:   .SET   STRUC_TOP   
2D3E                STRUC_TOP:   .SET   $   
2D3E                TST_TEXTM_2874S12:      
2D3E   31 30 20 61 62 73 0D 0A FF 0D 0A DB   "10 abs","\r\n",-1,"\r\n"   
2D49                          ;*Macro unroll:  _endskip
2D49                          ;*Macro unroll:  STRUC_FWD
2D49                CUR_ADR:   .SET   $   
2D3C                          .ORG   STRUC_TOP - 2   
2D3C   49 2D                  DW   CUR_ADR   
2D49                          .ORG   CUR_ADR   
2D49                          ;*Macro unroll:  STRUC_POP
2D49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D49                STRUC_TOP:   .SET   STRUC_2   
2D49                STRUC_2:   .SET   STRUC_3   
2D49                STRUC_3:   .SET   STRUC_4   
2D49                STRUC_4:   .SET   STRUC_5   
2D49                STRUC_5:   .SET   STRUC_6   
2D49                STRUC_6:   .SET   STRUC_7   
2D49                STRUC_7:   .SET   STRUC_8   
2D49                STRUC_8:   .SET   STRUC_9   
2D49                STRUC_9:   .SET   STRUC_10   
2D49                STRUC_10:   .SET   STRUC_11   
2D49                STRUC_11:   .SET   STRUC_12   
2D49                STRUC_12:   .SET   0   
2D49                          ;*Macro unroll: INTERPRET
2D49   CF                     RST   $08   
2D4A   52 0B                  DW   interpret   
2D4C   87 0F                  DW   exit_forth   
2D4E                          ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
2D4E   CD B9 07               CALL   printNum   
2D51                          ;*Macro unroll:  loadWord H,L, B,C
2D51   69                     LD   L,C   
2D52   60                     LD   H,B   
2D53   69                     LD   L,C   
2D54                          ;*Macro unroll:  ppop0 B,C
2D54   DD 2B                  DEC   IX   
2D56   DD 46 00               LD   B,(IX+0)   
2D59   DD 2B                  DEC   IX   
2D5B   DD 4E 00               LD   C,(IX+0)   
2D5E                          ;*Macro unroll:  CMP16 10
2D5E   11 0A 00               LD   DE,10   
2D61   B7                     OR   A   
2D62   ED 52                  SBC   HL,DE   
2D64                          ;*Macro unroll:  checkZeroWord H,L
2D64   7D                     LD   A,L   
2D65   B4                     OR   H   
2D66   CA 8C 2D               JP   z,tf_doneM_2876S14   
2D69   11 3B 07               LD   DE,FAILED   
2D6C   CD C4 01               CALL   printPStr   
2D6F   11 79 2D               LD   DE,te_failM_2876S14   
2D72   CD C4 01               CALL   printPStr   
2D75   76                     HALT      
2D76                          ;*Macro unroll:  _skip
2D76   C3 76 2D               JP   $   
2D79                          ;*Macro unroll:  STRUC_PUSH $
2D79                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D79                STRUC_12:   .SET   STRUC_11   
2D79                STRUC_11:   .SET   STRUC_10   
2D79                STRUC_10:   .SET   STRUC_9   
2D79                STRUC_9:   .SET   STRUC_8   
2D79                STRUC_8:   .SET   STRUC_7   
2D79                STRUC_7:   .SET   STRUC_6   
2D79                STRUC_6:   .SET   STRUC_5   
2D79                STRUC_5:   .SET   STRUC_4   
2D79                STRUC_4:   .SET   STRUC_3   
2D79                STRUC_3:   .SET   STRUC_2   
2D79                STRUC_2:   .SET   STRUC_TOP   
2D79                STRUC_TOP:   .SET   $   
2D79                TE_FAILM_2876S14:      
2D79   12 31 30 20 61 62 73 20 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs 10 to be 10"   
2D8C                          ;*Macro unroll:  _endskip
2D8C                          ;*Macro unroll:  STRUC_FWD
2D8C                CUR_ADR:   .SET   $   
2D77                          .ORG   STRUC_TOP - 2   
2D77   8C 2D                  DW   CUR_ADR   
2D8C                          .ORG   CUR_ADR   
2D8C                          ;*Macro unroll:  STRUC_POP
2D8C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D8C                STRUC_TOP:   .SET   STRUC_2   
2D8C                STRUC_2:   .SET   STRUC_3   
2D8C                STRUC_3:   .SET   STRUC_4   
2D8C                STRUC_4:   .SET   STRUC_5   
2D8C                STRUC_5:   .SET   STRUC_6   
2D8C                STRUC_6:   .SET   STRUC_7   
2D8C                STRUC_7:   .SET   STRUC_8   
2D8C                STRUC_8:   .SET   STRUC_9   
2D8C                STRUC_9:   .SET   STRUC_10   
2D8C                STRUC_10:   .SET   STRUC_11   
2D8C                STRUC_11:   .SET   STRUC_12   
2D8C                STRUC_12:   .SET   0   
2D8C                TF_DONEM_2876S14:      
2D8C                             ; TEST_SET_TEXT "100 buffer: xvar"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar pack"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar count dup"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "str len = 3"
2D8C                             ; TEST_SET_TEXT "type"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "x1"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
2D8C                             ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "select"
2D8C                             ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 5, "Loop until limit < 5"
2D8C                             ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "0 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "define: q 0 = 200"
2D8C                             ; TEST_SET_TEXT "1 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 100, "define: q 1 = 100"
2D8C                             ; rst $08
2D8C                             ; dw litstr
2D8C                             ; .pstr "Expected parse error"
2D8C                             ; dw type
2D8C                             ; dw exit_forth
2D8C                             ; ppushValue 999
2D8C                             ; TEST_SET_TEXT "$$123"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 999, "interpret $$123"
2D8C                          ENDIF      
2D8C                          IF   TESTMODE = 2   
                              RST   $08   
                              DW   lit,1   
                              DW   add100   
                              DW   exit_forth   
                              ;*Macro unroll:  EXPECT 101, "100 + 1"
                              CALL   printNum   
                              ;*Macro unroll:  loadWord H,L, B,C
                              LD   L,C   
                              LD   H,B   
                              LD   L,C   
                              ;*Macro unroll:  ppop0 B,C
                              DEC   IX   
                              LD   B,(IX+0)   
                              DEC   IX   
                              LD   C,(IX+0)   
                              ;*Macro unroll:  CMP16 101
                              LD   DE,101   
                              OR   A   
                              SBC   HL,DE   
                              ;*Macro unroll:  checkZeroWord H,L
                              LD   A,L   
                              OR   H   
                              JP   z,tf_doneM_2926S80   
                              LD   DE,FAILED   
                              CALL   printPStr   
                              LD   DE,te_failM_2926S80   
                              CALL   printPStr   
                              HALT      
                              ;*Macro unroll:  _skip
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    TE_FAILM_2926S80:      
                              .PSTR   "100 + 1"   
                              ;*Macro unroll:  _endskip
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                    TF_DONEM_2926S80:      
2D8C                          ENDIF      
2D8C                          IF   TESTMODE   
2D8C                          ;*Macro unroll:  PRINT_STR DONE
2D8C                          ;*Macro unroll:  ppush0 D,E
2D8C   DD 73 00               LD   (IX+0),E   
2D8F   DD 23                  INC   IX   
2D91   DD 72 00               LD   (IX+0),D   
2D94   DD 23                  INC   IX   
2D96   11 30 07               LD   DE,DONE   
2D99   CD C4 01               CALL   printPStr   
2D9C                          ;*Macro unroll:  ppop0 D,E
2D9C   DD 2B                  DEC   IX   
2D9E   DD 56 00               LD   D,(IX+0)   
2DA1   DD 2B                  DEC   IX   
2DA3   DD 5E 00               LD   E,(IX+0)   
2DA6   76                     HALT      
2DA7                          ENDIF      
2DA7                ADD100:      ; base data ptr -- ptr length
2DA7   CF                     RST   $08   
2DA8   CF 0E                  DW   beginFrame   
2DAA   0E 03 64 00            DW   lit,100   
2DAE   1D 0F 56 0F 26 04 97 04 DW   p1,v1,fetch,plus   
2DB6   E8 0E                  DW   endFrame   
2DB8                          ;*Macro unroll:  EXIT
2DB8   84 0F                  DW   exit   
2DBA   C3 A8 07               JP   enter   
2DBD                             ; 
2DBD                             ; variables
2DBD                             ; 
2DBD                             ; storage locations declared in RAM
2DBD                             ; 
2DBD                SERBUF:   DS   SER_BUFSIZE   
2DFC   00 00        SERINPTR:   DW   0   
2DFE   00 00        SERRDPTR:   DW   0   
2E00   00 00        SERBUFUSED:   DW   0   
2E02   00 00        LINEBUFSTART:   DW   0   
2E04   00 00        LINEBUFSIZE:   DW   0   
2E06   00 00        CURRKEY:   DW   0   
2E08   00 00        LINEBUFTOP:   DW   0   
2E0A                LINEBUF:   DS   LINE_BUFSIZE   
2E8A                             ; A static lineBuf TOKEN fills.  Subsequent calls
2E8A                             ; overwrite this lineBuf.  Maximum word length is 32 chars.
2E8A   00 00        EXITADDR:   DW   0   
2E8C                WORDBUF:   DS   64   
2ECC                WORDBUF2:   DS   64   
2F0C                DATA_STACK:   DS   DATA_STACK_SIZE   
2F8C   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
2F8E   00 00        VAR_FRAMEPTR:   DW   0   
2F90                VAR_PAD:   DS   PAD_SIZE   
3010   00 00        VAR_HERE:   DW   0   
3012   00 00        VAR_INTP_STOP:   DW   0   
3014   00 00        VAR_STATE:   DW   0   
3016   00 00        VAR_NESTING:   DW   0   
3018   00 00        VAR_SP0:   DW   0   ;PAR_STACK
301A   00 00        VAR_BASE:   DW   0   
301C   00 00        VAR_LATEST_STR:   DW   0   
301E   00 00        VAR_LATEST:   DW   0   
3020                          IF   TESTMODE   
3020                             ; used for mocking getc
3020   00 00        CHAR_POINTER:   DW   0   
3022                          ENDIF      
3022                START_USER:      ; user allocated data starts here


TESTMODE:           0001 DEFINED AT LINE 3
ROM_SIZE:           2000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 17 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 6 IN constants.z80
                    > USED AT LINE 18 IN constants.z80
RET_STACK_SIZE:     0080 DEFINED AT LINE 7 IN constants.z80
DATA_STACK_SIZE:    0080 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
PAD_SIZE:           0080 DEFINED AT LINE 9 IN constants.z80
                    > USED AT LINE 27 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 35 IN serial.z80
                    > USED AT LINE 42 IN serial.z80
                    > USED AT LINE 7 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 12 IN constants.z80
                    > USED AT LINE 52 IN serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 13 IN constants.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 16 IN serial.z80
                    > USED AT LINE 15 IN variables.z80
START_ROM:          0000 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 17 IN constants.z80
                    > USED AT LINE 11
START_RAM:          2000 DEFINED AT LINE 17 IN constants.z80
                    > USED AT LINE 18 IN constants.z80
                    > USED AT LINE 59
END_RAM:            10000 DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 19 IN constants.z80
RET_STACK:          10000 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 51
                    > USED AT LINE 47
IO_DATA:            0081 DEFINED AT LINE 21 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 22 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 24 IN constants.z80
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36 IN headless-words.z80
                    > USED AT LINE 36
                    > USED AT LINE 124 IN extra-primitives.z80
                    > USED AT LINE 36
                    > USED AT LINE 51
MSK_HIDDEN:         0040 DEFINED AT LINE 25 IN constants.z80
                    > USED AT LINE 47 IN core-primitives.z80
                    > USED AT LINE 373 IN core-utilities.z80
                    > USED AT LINE 418 IN core-utilities.z80
                    > USED AT LINE 51
MSK_LENGTH:         003F DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 373 IN core-utilities.z80
                    > USED AT LINE 418 IN core-utilities.z80
                    > USED AT LINE 24 IN core-words.z80
                    > USED AT LINE 51
CALL_OPCODE:        00CD DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 67 IN compiler-words.z80
                    > USED AT LINE 96 IN headless-words.z80
JP_OPCODE:          00C3 DEFINED AT LINE 29 IN constants.z80
                    > USED AT LINE 54 IN compiler-words.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 30 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 31 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 32 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 33 IN constants.z80
                    > USED AT LINE 233 IN core-words.z80
                    > USED AT LINE 13 IN compiler-words.z80
                    > USED AT LINE 28 IN compiler-words.z80
RTS_HIGH:           00D6 DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 54 IN serial.z80
RTS_LOW:            0096 DEFINED AT LINE 36 IN constants.z80
                    > USED AT LINE 19 IN serial.z80
                    > USED AT LINE 35 IN core-utilities.z80
LINK:               1483 DEFINED AT LINE 34
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
STRUC_COUNT:        2D8B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        117E DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
CPL_COUNT:          1319 DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 12
RST08:              0008 DEFINED AT LINE 17
RST38:              0038 DEFINED AT LINE 21
RST66:              0066 DEFINED AT LINE 25
INITSERIAL:         0067 DEFINED AT LINE 3 IN serial.z80
                    > USED AT LINE 48
SERIALIN:           0090 DEFINED AT LINE 25 IN serial.z80
                    > USED AT LINE 22
L_M_623S31:         009C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_628S36:         00AA DEFINED AT LINE 75
                    > USED AT LINE 72
CUR_ADR:            2D8C DEFINED AT LINE 63
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
L_M_635S43:         00BB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_645S53:         00D2 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               00DA DEFINED AT LINE 69 IN serial.z80
                    > USED AT LINE 146 IN serial.z80
PUTC:               00E5 DEFINED AT LINE 115 IN serial.z80
                    > USED AT LINE 154 IN serial.z80
                    > USED AT LINE 157 IN serial.z80
                    > USED AT LINE 165 IN serial.z80
                    > USED AT LINE 190 IN serial.z80
                    > USED AT LINE 275 IN serial.z80
                    > USED AT LINE 424 IN core-utilities.z80
                    > USED AT LINE 152 IN extra-primitives.z80
L_M_703S117:        00EB DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         00F9 DEFINED AT LINE 126 IN serial.z80
                    > USED AT LINE 158 IN extra-primitives.z80
GETLINE:            00FF DEFINED AT LINE 137 IN serial.z80
                    > USED AT LINE 215 IN serial.z80
                    > USED AT LINE 141 IN extra-primitives.z80
L_M_727S144:        0125 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_728S145:        012A DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_731S148:        0135 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_733S150:        013D DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_747S164:        015A DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       016C DEFINED AT LINE 177 IN serial.z80
                    > USED AT LINE 169 IN serial.z80
                    > USED AT LINE 171 IN serial.z80
                    > USED AT LINE 174 IN serial.z80
PRINTROUTINE:       017B DEFINED AT LINE 187 IN serial.z80
                    > USED AT LINE 244 IN serial.z80
                    > USED AT LINE 259 IN serial.z80
L_M_769S188:        0180 DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             018F DEFINED AT LINE 204 IN serial.z80
                    > USED AT LINE 444 IN core-utilities.z80
                    > USED AT LINE 458 IN core-utilities.z80
                    > USED AT LINE 499 IN core-utilities.z80
                    > USED AT LINE 145 IN extra-primitives.z80
L_M_791S212:        01A2 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          01C4 DEFINED AT LINE 236 IN serial.z80
                    > USED AT LINE 167
                    > USED AT LINE 268 IN serial.z80
                    > USED AT LINE 12 IN extra-primitives.z80
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 167
PRINTSTR:           01D3 DEFINED AT LINE 255 IN serial.z80
                    > USED AT LINE 400 IN core-primitives.z80
                    > USED AT LINE 410 IN core-primitives.z80
                    > USED AT LINE 68 IN core-utilities.z80
                    > USED AT LINE 422 IN core-utilities.z80
PRINTCR:            01DD DEFINED AT LINE 265 IN serial.z80
                    > USED AT LINE 184 IN serial.z80
                    > USED AT LINE 415 IN core-primitives.z80
                    > USED AT LINE 430 IN core-utilities.z80
PRINTSPACE:         01E6 DEFINED AT LINE 272 IN serial.z80
                    > USED AT LINE 155 IN serial.z80
                    > USED AT LINE 401 IN core-primitives.z80
                    > USED AT LINE 69 IN core-utilities.z80
                    > USED AT LINE 423 IN core-utilities.z80
TXT_NEWLINE:        01EE DEFINED AT LINE 1 IN mon-utilities.z80
                    > USED AT LINE 267 IN serial.z80
TXT_PROMPT:         01F1 DEFINED AT LINE 2 IN mon-utilities.z80
                    > USED AT LINE 166
STACKPROMPT:        01F6 DEFINED AT LINE 3 IN mon-utilities.z80
TXT_MONITOR_INTRO:  01FA DEFINED AT LINE 5 IN mon-utilities.z80
HEADER_XWORD:       021E DEFINED AT LINE 31
                    > USED AT LINE 34
XWORD:              0226 DEFINED AT LINE 38
                    > USED AT LINE 17 IN core-words.z80
                    > USED AT LINE 212 IN core-words.z80
HEADER_FIND:        022F DEFINED AT LINE 31
                    > USED AT LINE 34
FIND:               0236 DEFINED AT LINE 38
HEADER_EXECUTE:     0248 DEFINED AT LINE 31
                    > USED AT LINE 34
EXECUTE:            0252 DEFINED AT LINE 38
                    > USED AT LINE 258 IN core-words.z80
                    > USED AT LINE 46 IN headless-words.z80
                    > USED AT LINE 49 IN headless-words.z80
HEADER_NUMBER:      025F DEFINED AT LINE 31
                    > USED AT LINE 34
NUMBER:             0268 DEFINED AT LINE 38
                    > USED AT LINE 56 IN headless-words.z80
HEADER_ADDSTORE:    0282 DEFINED AT LINE 31
                    > USED AT LINE 34
ADDSTORE:           0287 DEFINED AT LINE 38
                    > USED AT LINE 38 IN core-words.z80
HEADER_HIDDEN:      02A7 DEFINED AT LINE 31
                    > USED AT LINE 34
HIDDEN:             02B0 DEFINED AT LINE 38
HEADER_ONEPLUS:     02C5 DEFINED AT LINE 31
                    > USED AT LINE 34
ONEPLUS:            02CA DEFINED AT LINE 38
                    > USED AT LINE 55 IN core-words.z80
                    > USED AT LINE 216 IN core-words.z80
                    > USED AT LINE 53 IN compiler-words.z80
                    > USED AT LINE 69 IN compiler-words.z80
                    > USED AT LINE 98 IN headless-words.z80
                    > USED AT LINE 58 IN extra-primitives.z80
HEADER_TWOPLUS:     02CE DEFINED AT LINE 31
                    > USED AT LINE 34
TWOPLUS:            02D3 DEFINED AT LINE 38
                    > USED AT LINE 54 IN extra-primitives.z80
HEADER_ZBRANCH:     02D8 DEFINED AT LINE 31
                    > USED AT LINE 34
QBRAN:            02E2 DEFINED AT LINE 38
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 140 IN core-words.z80
                    > USED AT LINE 176 IN core-words.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 91
                    > USED AT LINE 65
HEADER_BRANCH:      02F6 DEFINED AT LINE 31
                    > USED AT LINE 34
BRAN:             02FF DEFINED AT LINE 38
                    > USED AT LINE 66 IN core-primitives.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 146 IN core-words.z80
                    > USED AT LINE 183 IN core-words.z80
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
HEADER_LIT:         0308 DEFINED AT LINE 31
                    > USED AT LINE 34
LIT:                030E DEFINED AT LINE 38
                    > USED AT LINE 15 IN core-words.z80
                    > USED AT LINE 22 IN core-words.z80
                    > USED AT LINE 24 IN core-words.z80
                    > USED AT LINE 31 IN core-words.z80
                    > USED AT LINE 60 IN core-words.z80
                    > USED AT LINE 140 IN core-words.z80
                    > USED AT LINE 146 IN core-words.z80
                    > USED AT LINE 148 IN core-words.z80
                    > USED AT LINE 176 IN core-words.z80
                    > USED AT LINE 178 IN core-words.z80
                    > USED AT LINE 183 IN core-words.z80
                    > USED AT LINE 201 IN core-words.z80
                    > USED AT LINE 202 IN core-words.z80
                    > USED AT LINE 204 IN core-words.z80
                    > USED AT LINE 206 IN core-words.z80
                    > USED AT LINE 208 IN core-words.z80
                    > USED AT LINE 214 IN core-words.z80
                    > USED AT LINE 215 IN core-words.z80
                    > USED AT LINE 233 IN core-words.z80
                    > USED AT LINE 245 IN core-words.z80
                    > USED AT LINE 11 IN compiler-words.z80
                    > USED AT LINE 13 IN compiler-words.z80
                    > USED AT LINE 20 IN compiler-words.z80
                    > USED AT LINE 28 IN compiler-words.z80
                    > USED AT LINE 34 IN compiler-words.z80
                    > USED AT LINE 54 IN compiler-words.z80
                    > USED AT LINE 55 IN compiler-words.z80
                    > USED AT LINE 64 IN compiler-words.z80
                    > USED AT LINE 65 IN compiler-words.z80
                    > USED AT LINE 67 IN compiler-words.z80
                    > USED AT LINE 70 IN compiler-words.z80
                    > USED AT LINE 34 IN experimental.z80
                    > USED AT LINE 39 IN experimental.z80
                    > USED AT LINE 44 IN experimental.z80
                    > USED AT LINE 49 IN experimental.z80
                    > USED AT LINE 54 IN experimental.z80
                    > USED AT LINE 59 IN experimental.z80
                    > USED AT LINE 35 IN headless-words.z80
                    > USED AT LINE 36 IN headless-words.z80
                    > USED AT LINE 62 IN headless-words.z80
                    > USED AT LINE 62 IN headless-words.z80
                    > USED AT LINE 96 IN headless-words.z80
                    > USED AT LINE 9 IN extra-words.z80
                    > USED AT LINE 14 IN extra-words.z80
                    > USED AT LINE 47 IN extra-words.z80
                    > USED AT LINE 52 IN extra-words.z80
                    > USED AT LINE 56 IN extra-words.z80
                    > USED AT LINE 70 IN extra-words.z80
                    > USED AT LINE 92
HEADER_ZEROLESS:    0320 DEFINED AT LINE 31
                    > USED AT LINE 34
ZEROLESS:           0325 DEFINED AT LINE 38
                    > USED AT LINE 45 IN core-words.z80
                    > USED AT LINE 88 IN core-words.z80
                    > USED AT LINE 98 IN core-words.z80
                    > USED AT LINE 102 IN core-words.z80
HEADER_INVERT:      0330 DEFINED AT LINE 31
                    > USED AT LINE 34
INVERT:             0339 DEFINED AT LINE 38
                    > USED AT LINE 54 IN core-words.z80
HEADER_TRUE:        0342 DEFINED AT LINE 31
                    > USED AT LINE 34
TRUE:               0349 DEFINED AT LINE 38
HEADER_FALSE:       0359 DEFINED AT LINE 31
                    > USED AT LINE 34
FALSE:              0361 DEFINED AT LINE 38
HEADER_EQUAL:       0371 DEFINED AT LINE 31
                    > USED AT LINE 34
EQUAL:              0375 DEFINED AT LINE 38
L_M_964S129:        0388 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_LESSTHAN:    038F DEFINED AT LINE 31
                    > USED AT LINE 34
LESSTHAN:           0393 DEFINED AT LINE 38
                    > USED AT LINE 159 IN core-primitives.z80
                    > USED AT LINE 21 IN extra-words.z80
                    > USED AT LINE 33 IN extra-words.z80
L_M_974S140:        03A6 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_975S141:        03AC DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_981S147:        03BE DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_GREATERTHAN: 03CA DEFINED AT LINE 31
                    > USED AT LINE 34
GREATERTHAN:        03CE DEFINED AT LINE 38
HEADER_STORE:       03E6 DEFINED AT LINE 31
                    > USED AT LINE 34
STORE:              03EA DEFINED AT LINE 38
                    > USED AT LINE 163 IN core-words.z80
                    > USED AT LINE 188 IN core-words.z80
                    > USED AT LINE 210 IN core-words.z80
                    > USED AT LINE 257 IN core-words.z80
                    > USED AT LINE 12 IN compiler-words.z80
                    > USED AT LINE 51 IN compiler-words.z80
                    > USED AT LINE 69 IN compiler-words.z80
                    > USED AT LINE 12 IN experimental.z80
                    > USED AT LINE 20 IN experimental.z80
                    > USED AT LINE 22 IN experimental.z80
                    > USED AT LINE 98 IN headless-words.z80
HEADER_COMMA:       0407 DEFINED AT LINE 31
                    > USED AT LINE 34
COMMA:              040B DEFINED AT LINE 38
                    > USED AT LINE 75 IN compiler-words.z80
                    > USED AT LINE 44 IN headless-words.z80
                    > USED AT LINE 63 IN headless-words.z80
                    > USED AT LINE 63 IN headless-words.z80
HEADER_FETCH:       0422 DEFINED AT LINE 31
                    > USED AT LINE 34
FETCH:              0426 DEFINED AT LINE 38
                    > USED AT LINE 9 IN core-words.z80
                    > USED AT LINE 16 IN core-words.z80
                    > USED AT LINE 141 IN core-words.z80
                    > USED AT LINE 147 IN core-words.z80
                    > USED AT LINE 162 IN core-words.z80
                    > USED AT LINE 171 IN core-words.z80
                    > USED AT LINE 177 IN core-words.z80
                    > USED AT LINE 185 IN core-words.z80
                    > USED AT LINE 187 IN core-words.z80
                    > USED AT LINE 199 IN core-words.z80
                    > USED AT LINE 203 IN core-words.z80
                    > USED AT LINE 211 IN core-words.z80
                    > USED AT LINE 228 IN core-words.z80
                    > USED AT LINE 229 IN core-words.z80
                    > USED AT LINE 232 IN core-words.z80
                    > USED AT LINE 241 IN core-words.z80
                    > USED AT LINE 242 IN core-words.z80
                    > USED AT LINE 252 IN core-words.z80
                    > USED AT LINE 253 IN core-words.z80
                    > USED AT LINE 10 IN compiler-words.z80
                    > USED AT LINE 14 IN compiler-words.z80
                    > USED AT LINE 21 IN compiler-words.z80
                    > USED AT LINE 27 IN compiler-words.z80
                    > USED AT LINE 35 IN compiler-words.z80
                    > USED AT LINE 42 IN compiler-words.z80
                    > USED AT LINE 49 IN compiler-words.z80
                    > USED AT LINE 50 IN compiler-words.z80
                    > USED AT LINE 66 IN compiler-words.z80
                    > USED AT LINE 78 IN compiler-words.z80
                    > USED AT LINE 10 IN experimental.z80
                    > USED AT LINE 29 IN experimental.z80
                    > USED AT LINE 40 IN headless-words.z80
                    > USED AT LINE 41 IN headless-words.z80
                    > USED AT LINE 58 IN headless-words.z80
                    > USED AT LINE 59 IN headless-words.z80
                    > USED AT LINE 95 IN headless-words.z80
                    > USED AT LINE 45 IN extra-words.z80
                    > USED AT LINE 49 IN extra-words.z80
                    > USED AT LINE 55 IN extra-words.z80
                    > USED AT LINE 66 IN extra-words.z80
HEADER_CELLS:       042F DEFINED AT LINE 31
                    > USED AT LINE 34
CELLS:              0437 DEFINED AT LINE 38
                    > USED AT LINE 28 IN experimental.z80
HEADER_CSTORE:      043A DEFINED AT LINE 31
                    > USED AT LINE 34
CSTORE:             043F DEFINED AT LINE 38
                    > USED AT LINE 68 IN compiler-words.z80
                    > USED AT LINE 97 IN headless-words.z80
HEADER_CCOMMA:      0459 DEFINED AT LINE 31
                    > USED AT LINE 34
CCOMMA:             045E DEFINED AT LINE 38
HEADER_CFETCH:      0487 DEFINED AT LINE 31
                    > USED AT LINE 34
CFETCH:             048C DEFINED AT LINE 38
                    > USED AT LINE 32 IN core-words.z80
                    > USED AT LINE 216 IN core-words.z80
                    > USED AT LINE 53 IN compiler-words.z80
HEADER_PLUS:        0493 DEFINED AT LINE 31
                    > USED AT LINE 34
PLUS:               0497 DEFINED AT LINE 38
                    > USED AT LINE 25 IN core-words.z80
HEADER_TWOSTAR:     04A7 DEFINED AT LINE 31
                    > USED AT LINE 34
TWOSTAR:            04AC DEFINED AT LINE 38
                    > USED AT LINE 188 IN core-primitives.z80
HEADER_MINUS:       04B3 DEFINED AT LINE 31
                    > USED AT LINE 34
MINUS:              04B7 DEFINED AT LINE 38
                    > USED AT LINE 46 IN extra-words.z80
                    > USED AT LINE 53 IN extra-words.z80
HEADER_USTAR:       04C9 DEFINED AT LINE 31
                    > USED AT LINE 34
USTAR:              04CE DEFINED AT LINE 38
                    > USED AT LINE 85 IN core-words.z80
HEADER_USLASHMOD:   04E8 DEFINED AT LINE 31
                    > USED AT LINE 34
USLASHMOD:          04F0 DEFINED AT LINE 38
                    > USED AT LINE 106 IN core-words.z80
HEADER_LBRAC:       050C DEFINED AT LINE 31
                    > USED AT LINE 34
LBRAC:              0510 DEFINED AT LINE 38
                    > USED AT LINE 22 IN compiler-words.z80
HEADER_RBRAC:       0519 DEFINED AT LINE 31
                    > USED AT LINE 34
RBRAC:              051D DEFINED AT LINE 38
                    > USED AT LINE 15 IN compiler-words.z80
                    > USED AT LINE 29 IN compiler-words.z80
HEADER_ZEQUAL:      0526 DEFINED AT LINE 31
                    > USED AT LINE 34
ZEQUAL:             052B DEFINED AT LINE 38
                    > USED AT LINE 67 IN core-words.z80
                    > USED AT LINE 37 IN headless-words.z80
                    > USED AT LINE 56 IN headless-words.z80
                    > USED AT LINE 91
L_M_1091S278:       0533 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ZNOTEQUAL:   053A DEFINED AT LINE 31
                    > USED AT LINE 34
ZNOTEQUAL:          0540 DEFINED AT LINE 38
                    > USED AT LINE 24 IN headless-words.z80
L_M_1098S286:       0548 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_AND:         054E DEFINED AT LINE 31
                    > USED AT LINE 34
AND:                0554 DEFINED AT LINE 38
                    > USED AT LINE 230 IN core-words.z80
                    > USED AT LINE 243 IN core-words.z80
                    > USED AT LINE 254 IN core-words.z80
HEADER_OR:          0567 DEFINED AT LINE 31
                    > USED AT LINE 34
OR:                 056C DEFINED AT LINE 38
                    > USED AT LINE 42 IN headless-words.z80
                    > USED AT LINE 60 IN headless-words.z80
HEADER_XOR:         057F DEFINED AT LINE 31
                    > USED AT LINE 34
XOR:                0585 DEFINED AT LINE 38
                    > USED AT LINE 87 IN core-words.z80
                    > USED AT LINE 97 IN core-words.z80
HEADER_ROT:         0598 DEFINED AT LINE 31
                    > USED AT LINE 34
ROT:                059E DEFINED AT LINE 38
                    > USED AT LINE 108 IN core-words.z80
HEADER_NROT:        05CB DEFINED AT LINE 31
                    > USED AT LINE 34
NROT:               05D2 DEFINED AT LINE 38
                    > USED AT LINE 86 IN core-words.z80
                    > USED AT LINE 99 IN core-words.z80
                    > USED AT LINE 103 IN core-words.z80
                    > USED AT LINE 112 IN core-words.z80
HEADER_DUP:         0601 DEFINED AT LINE 31
                    > USED AT LINE 34
DUP:                0607 DEFINED AT LINE 38
                    > USED AT LINE 31 IN core-words.z80
                    > USED AT LINE 44 IN core-words.z80
                    > USED AT LINE 67 IN core-words.z80
                    > USED AT LINE 161 IN core-words.z80
                    > USED AT LINE 186 IN core-words.z80
                    > USED AT LINE 256 IN core-words.z80
                    > USED AT LINE 9 IN experimental.z80
                    > USED AT LINE 19 IN experimental.z80
                    > USED AT LINE 24 IN headless-words.z80
                    > USED AT LINE 35 IN headless-words.z80
                    > USED AT LINE 51 IN extra-words.z80
                    > USED AT LINE 55 IN extra-words.z80
HEADER_SWAP:        0614 DEFINED AT LINE 31
                    > USED AT LINE 34
SWAP:               061B DEFINED AT LINE 38
                    > USED AT LINE 32 IN core-words.z80
                    > USED AT LINE 84 IN core-words.z80
                    > USED AT LINE 105 IN core-words.z80
                    > USED AT LINE 107 IN core-words.z80
                    > USED AT LINE 113 IN core-words.z80
                    > USED AT LINE 122 IN core-words.z80
                    > USED AT LINE 149 IN core-words.z80
                    > USED AT LINE 163 IN core-words.z80
                    > USED AT LINE 184 IN core-words.z80
                    > USED AT LINE 188 IN core-words.z80
                    > USED AT LINE 10 IN experimental.z80
                    > USED AT LINE 11 IN experimental.z80
                    > USED AT LINE 19 IN experimental.z80
                    > USED AT LINE 21 IN experimental.z80
                    > USED AT LINE 34 IN headless-words.z80
                    > USED AT LINE 25 IN extra-words.z80
                    > USED AT LINE 35 IN extra-words.z80
                    > USED AT LINE 53 IN extra-words.z80
HEADER_DROP:        0634 DEFINED AT LINE 31
                    > USED AT LINE 34
DROP:               063B DEFINED AT LINE 38
                    > USED AT LINE 69 IN core-words.z80
                    > USED AT LINE 69 IN core-words.z80
                    > USED AT LINE 85 IN core-words.z80
                    > USED AT LINE 122 IN core-words.z80
                    > USED AT LINE 128 IN core-words.z80
                    > USED AT LINE 34 IN headless-words.z80
                    > USED AT LINE 55 IN headless-words.z80
                    > USED AT LINE 66 IN headless-words.z80
                    > USED AT LINE 23 IN extra-words.z80
                    > USED AT LINE 25 IN extra-words.z80
                    > USED AT LINE 35 IN extra-words.z80
                    > USED AT LINE 37 IN extra-words.z80
                    > USED AT LINE 58 IN extra-words.z80
HEADER_OVER:        0648 DEFINED AT LINE 31
                    > USED AT LINE 34
OVER:               064F DEFINED AT LINE 38
                    > USED AT LINE 83 IN core-words.z80
                    > USED AT LINE 83 IN core-words.z80
                    > USED AT LINE 96 IN core-words.z80
                    > USED AT LINE 96 IN core-words.z80
                    > USED AT LINE 101 IN core-words.z80
                    > USED AT LINE 68 IN compiler-words.z80
                    > USED AT LINE 21 IN experimental.z80
                    > USED AT LINE 17 IN headless-words.z80
                    > USED AT LINE 23 IN headless-words.z80
                    > USED AT LINE 23 IN headless-words.z80
                    > USED AT LINE 97 IN headless-words.z80
                    > USED AT LINE 20 IN extra-words.z80
                    > USED AT LINE 20 IN extra-words.z80
                    > USED AT LINE 32 IN extra-words.z80
                    > USED AT LINE 32 IN extra-words.z80
HEADER_TOR:         0672 DEFINED AT LINE 31
                    > USED AT LINE 34
TOR:                0677 DEFINED AT LINE 38
                    > USED AT LINE 18 IN headless-words.z80
HEADER_RFROM:       0687 DEFINED AT LINE 31
                    > USED AT LINE 34
RFROM:              068C DEFINED AT LINE 38
                    > USED AT LINE 78 IN core-words.z80
                    > USED AT LINE 59 IN compiler-words.z80
                    > USED AT LINE 77 IN compiler-words.z80
                    > USED AT LINE 16 IN headless-words.z80
                    > USED AT LINE 94 IN headless-words.z80
HEADER_DOT:         069C DEFINED AT LINE 31
                    > USED AT LINE 34
DOT:                06A0 DEFINED AT LINE 38
HEADER_TYPE:        06C5 DEFINED AT LINE 31
                    > USED AT LINE 34
TYPE:               06CC DEFINED AT LINE 38
                    > USED AT LINE 69 IN headless-words.z80
                    > USED AT LINE 68 IN extra-words.z80
                    > USED AT LINE 70 IN extra-words.z80
HEADER_CR:          06E6 DEFINED AT LINE 31
                    > USED AT LINE 34
CR:                 06EB DEFINED AT LINE 38
TXT_INTRO:          06F1 DEFINED AT LINE 4 IN core-utilities.z80
TXT_STACK_UNDERFLOW: 0717 DEFINED AT LINE 5 IN core-utilities.z80
DONE:               0730 DEFINED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 166
FAILED:             073B DEFINED AT LINE 8 IN core-utilities.z80
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
NESTINGERR:         0746 DEFINED AT LINE 10 IN core-utilities.z80
INITFORTH:          076A DEFINED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 49
ENTER:              07A8 DEFINED AT LINE 41 IN core-utilities.z80
                    > USED AT LINE 18
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 14 IN core-utilities.z80
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 17
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 17
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 17
ENTER1:             07A9 DEFINED AT LINE 43 IN core-utilities.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
FORTH:              07B0 DEFINED AT LINE 52 IN core-utilities.z80
PRINTNUM:           07B9 DEFINED AT LINE 59 IN core-utilities.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
FORMATNUM:          07D2 DEFINED AT LINE 80 IN core-utilities.z80
                    > USED AT LINE 399 IN core-primitives.z80
                    > USED AT LINE 67 IN core-utilities.z80
L_M_1327S83:        07DA DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1335S92:        07E8 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1344S101:       07FC DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1348S105:       0807 DEFINED AT LINE 75
                    > USED AT LINE 72
NEGATENUM:          0817 DEFINED AT LINE 124 IN core-utilities.z80
                    > USED AT LINE 88 IN core-utilities.z80
                    > USED AT LINE 289 IN core-utilities.z80
DIVIDEWORDBYBYTE:   081F DEFINED AT LINE 141 IN core-utilities.z80
                    > USED AT LINE 94 IN core-utilities.z80
L_M_1382S144:       0827 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1385S147:       082F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1390S152:       083B DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   0840 DEFINED AT LINE 167 IN core-utilities.z80
                    > USED AT LINE 253 IN core-primitives.z80
L_M_1408S172:       084C DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1412S176:       0857 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1422S186:       0866 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1426S190:       0871 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           087A DEFINED AT LINE 210 IN core-utilities.z80
                    > USED AT LINE 23 IN core-primitives.z80
L_M_1452S220:       088E DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1462S230:       08A0 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1468S236:       08AE DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1484S253:       08C9 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1488S257:       08D5 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0900 DEFINED AT LINE 284 IN core-utilities.z80
                    > USED AT LINE 255 IN core-utilities.z80
L_M_1514S287:       0909 DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   0912 DEFINED AT LINE 304 IN core-utilities.z80
                    > USED AT LINE 244 IN core-primitives.z80
                    > USED AT LINE 246 IN core-utilities.z80
                    > USED AT LINE 276 IN core-utilities.z80
L_M_1533S308:       091D DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1538S313:       092B DEFINED AT LINE 75
                    > USED AT LINE 72
COMPARESTR:         0934 DEFINED AT LINE 328 IN core-utilities.z80
                    > USED AT LINE 382 IN core-utilities.z80
L_M_1553S331:       093C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1554S332:       0941 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1558S336:       094B DEFINED AT LINE 75
                    > USED AT LINE 72
LOOKUP:             095A DEFINED AT LINE 358 IN core-utilities.z80
                    > USED AT LINE 12 IN core-primitives.z80
L_M_1580S360:       0963 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1592S376:       0973 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1601S387:       0982 DEFINED AT LINE 75
                    > USED AT LINE 72
LISTWORDS:          098F DEFINED AT LINE 409 IN core-utilities.z80
                    > USED AT LINE 6 IN extra-primitives.z80
L_M_1622S411:       0998 DEFINED AT LINE 73
                    > USED AT LINE 70
XWORDSKIP:          09BB DEFINED AT LINE 437 IN core-utilities.z80
                    > USED AT LINE 5 IN core-primitives.z80
L_M_1652S443:       09F6 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1654S446:       09FE DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1656S449:       0A06 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1662S456:       0A15 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1663S457:       0A1A DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1666S460:       0A25 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1673S468:       0A37 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1676S472:       0A42 DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0A4F DEFINED AT LINE 484 IN core-utilities.z80
                    > USED AT LINE 6 IN core-primitives.z80
L_M_1692S491:       0A7B DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1696S495:       0A83 DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_QUIT:        0A99 DEFINED AT LINE 31
                    > USED AT LINE 34
QUIT:               0AA0 DEFINED AT LINE 38
HEADER_WORD:        0AAE DEFINED AT LINE 31
                    > USED AT LINE 34
WORD:               0AB5 DEFINED AT LINE 38
                    > USED AT LINE 66 IN core-words.z80
                    > USED AT LINE 77 IN core-words.z80
                    > USED AT LINE 52 IN compiler-words.z80
HEADER_TCFA:        0AC5 DEFINED AT LINE 31
                    > USED AT LINE 34
TCFA:               0ACC DEFINED AT LINE 38
                    > USED AT LINE 39 IN headless-words.z80
                    > USED AT LINE 49 IN headless-words.z80
HEADER_COUNT:       0AE2 DEFINED AT LINE 31
                    > USED AT LINE 34
COUNT:              0AEA DEFINED AT LINE 38
                    > USED AT LINE 23 IN core-words.z80
                    > USED AT LINE 78 IN core-words.z80
                    > USED AT LINE 212 IN core-words.z80
                    > USED AT LINE 17 IN headless-words.z80
HEADER_ALLOT:       0AFC DEFINED AT LINE 31
                    > USED AT LINE 34
ALLOT:              0B04 DEFINED AT LINE 38
                    > USED AT LINE 217 IN core-words.z80
                    > USED AT LINE 36 IN compiler-words.z80
                    > USED AT LINE 43 IN compiler-words.z80
HEADER_ABS:         0B0E DEFINED AT LINE 31
                    > USED AT LINE 34
ABS:                0B14 DEFINED AT LINE 38
                    > USED AT LINE 84 IN core-words.z80
                    > USED AT LINE 105 IN core-words.z80
HEADER_NEGATE:      0B24 DEFINED AT LINE 31
                    > USED AT LINE 34
NEGATE:             0B2D DEFINED AT LINE 38
                    > USED AT LINE 47 IN core-words.z80
                    > USED AT LINE 90 IN core-words.z80
                    > USED AT LINE 110 IN core-words.z80
                    > USED AT LINE 115 IN core-words.z80
HEADER_BL:          0B37 DEFINED AT LINE 31
                    > USED AT LINE 34
BL:                 0B3C DEFINED AT LINE 38
                    > USED AT LINE 66 IN core-words.z80
                    > USED AT LINE 77 IN core-words.z80
                    > USED AT LINE 52 IN compiler-words.z80
HEADER_INTERPRET:   0B46 DEFINED AT LINE 31
                    > USED AT LINE 34
INTERPRET:          0B52 DEFINED AT LINE 38
                    > USED AT LINE 10 IN core-words.z80
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
                    > USED AT LINE 22
HEADER_TICK:        0B7D DEFINED AT LINE 31
                    > USED AT LINE 34
TICK:               0B81 DEFINED AT LINE 38
HEADER_STAR:        0B97 DEFINED AT LINE 31
                    > USED AT LINE 34
STAR:               0B9B DEFINED AT LINE 38
HEADER_SLASHMOD:    0BBB DEFINED AT LINE 31
                    > USED AT LINE 34
SLASHMOD:           0BC2 DEFINED AT LINE 38
                    > USED AT LINE 121 IN core-words.z80
                    > USED AT LINE 127 IN core-words.z80
HEADER_SLASH:       0BF6 DEFINED AT LINE 31
                    > USED AT LINE 34
SLASH:              0BFA DEFINED AT LINE 38
HEADER_MOD:         0C06 DEFINED AT LINE 31
                    > USED AT LINE 34
MOD:                0C0C DEFINED AT LINE 38
HEADER_IF:          0C16 DEFINED AT LINE 31
                    > USED AT LINE 34
IF:                 0C1B DEFINED AT LINE 38
HEADER_ELSE:        0C31 DEFINED AT LINE 31
                    > USED AT LINE 34
ELSE:               0C38 DEFINED AT LINE 38
HEADER_ENDIF:       0C52 DEFINED AT LINE 31
                    > USED AT LINE 34
ENDIF:              0C5A DEFINED AT LINE 38
XENDIF:             0C64 DEFINED AT LINE 159 IN core-words.z80
                    > USED AT LINE 150 IN core-words.z80
                    > USED AT LINE 155 IN core-words.z80
HEADER_BEGIN:       0C78 DEFINED AT LINE 31
                    > USED AT LINE 34
BEGIN:              0C80 DEFINED AT LINE 38
HEADER_WHILE:       0C8C DEFINED AT LINE 31
                    > USED AT LINE 34
WHILE:              0C94 DEFINED AT LINE 38
HEADER_REPEAT:      0CAA DEFINED AT LINE 31
                    > USED AT LINE 34
REPEAT:             0CB3 DEFINED AT LINE 38
HEADER_SQUOTE:      0CD9 DEFINED AT LINE 31
                    > USED AT LINE 34
SQUOTE:             0CDE DEFINED AT LINE 38
HEADER_QT:          0CE0 DEFINED AT LINE 31
                    > USED AT LINE 34
QT:                 0CE4 DEFINED AT LINE 38
                    > USED AT LINE 195 IN core-words.z80
                    > USED AT LINE 65 IN extra-words.z80
HEADER_LBRACE:      0D38 DEFINED AT LINE 31
                    > USED AT LINE 34
LBRACE:             0D3C DEFINED AT LINE 38
                    > USED AT LINE 139 IN core-words.z80
                    > USED AT LINE 170 IN core-words.z80
HEADER_RBRACE:      0D60 DEFINED AT LINE 31
                    > USED AT LINE 34
RBRACE:             0D64 DEFINED AT LINE 38
                    > USED AT LINE 251 IN core-words.z80
HEADER_RBRACEEXEC:  0D84 DEFINED AT LINE 31
                    > USED AT LINE 34
RBRACEEXEC:         0D8C DEFINED AT LINE 38
                    > USED AT LINE 156 IN core-words.z80
                    > USED AT LINE 189 IN core-words.z80
HEADER_COLON:       0DAE DEFINED AT LINE 31
                    > USED AT LINE 34
COLON:              0DB2 DEFINED AT LINE 38
HEADER_SEMICOLON:   0DD6 DEFINED AT LINE 31
                    > USED AT LINE 34
SEMICOLON:          0DDA DEFINED AT LINE 38
HEADER_COLONNONAME: 0DEE DEFINED AT LINE 31
                    > USED AT LINE 34
COLONNONAME:        0DF8 DEFINED AT LINE 38
HEADER_VARIABLE:    0E0A DEFINED AT LINE 31
                    > USED AT LINE 34
VARIABLE:           0E15 DEFINED AT LINE 38
HEADER_BUFFERCOLON: 0E2B DEFINED AT LINE 31
                    > USED AT LINE 34
BUFFERCOLON:        0E35 DEFINED AT LINE 38
HEADER_CREATE:      0E45 DEFINED AT LINE 31
                    > USED AT LINE 34
CREATE:             0E4E DEFINED AT LINE 38
                    > USED AT LINE 9 IN compiler-words.z80
                    > USED AT LINE 75 IN compiler-words.z80
XCREATE:            0E78 DEFINED AT LINE 57 IN compiler-words.z80
                    > USED AT LINE 55 IN compiler-words.z80
HEADER_DOES:        0E80 DEFINED AT LINE 31
                    > USED AT LINE 34
DOES:               0E88 DEFINED AT LINE 38
HEADER_CONSTANT:    0EAE DEFINED AT LINE 31
                    > USED AT LINE 34
CONSTANT:           0EB9 DEFINED AT LINE 38
                    > USED AT LINE 37 IN compiler-words.z80
                    > USED AT LINE 44 IN compiler-words.z80
HEADER_BEGINFRAME:  0ECA DEFINED AT LINE 31
                    > USED AT LINE 34
BEGINFRAME:         0ECF DEFINED AT LINE 38
                    > USED AT LINE 91
HEADER_ENDFRAME:    0EE3 DEFINED AT LINE 31
                    > USED AT LINE 34
ENDFRAME:           0EE8 DEFINED AT LINE 38
                    > USED AT LINE 94
HEADER_PARAM:       0F00 DEFINED AT LINE 31
                    > USED AT LINE 34
PARAM:              0F08 DEFINED AT LINE 38
HEADER_P1:          0F18 DEFINED AT LINE 31
                    > USED AT LINE 34
P1:                 0F1D DEFINED AT LINE 38
                    > USED AT LINE 93
HEADER_P2:          0F2B DEFINED AT LINE 31
                    > USED AT LINE 34
P2:                 0F30 DEFINED AT LINE 38
HEADER_P3:          0F3E DEFINED AT LINE 31
                    > USED AT LINE 34
P3:                 0F43 DEFINED AT LINE 38
HEADER_V1:          0F51 DEFINED AT LINE 31
                    > USED AT LINE 34
V1:                 0F56 DEFINED AT LINE 38
                    > USED AT LINE 93
HEADER_V2:          0F62 DEFINED AT LINE 31
                    > USED AT LINE 34
V2:                 0F67 DEFINED AT LINE 38
HEADER_V3:          0F73 DEFINED AT LINE 31
                    > USED AT LINE 34
V3:                 0F78 DEFINED AT LINE 38
EXIT:               0F84 DEFINED AT LINE 7 IN headless-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 79 IN core-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 245 IN core-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 20 IN compiler-words.z80
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
                    > USED AT LINE 16
EXIT_FORTH:         0F87 DEFINED AT LINE 11 IN headless-words.z80
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
                    > USED AT LINE 23
LITSTR:             0F88 DEFINED AT LINE 14 IN headless-words.z80
                    > USED AT LINE 214 IN core-words.z80
                    > USED AT LINE 67 IN headless-words.z80
INTERPTOKEN:        0F9A DEFINED AT LINE 21 IN headless-words.z80
                    > USED AT LINE 72 IN core-words.z80
INTERPWORD:         0FB6 DEFINED AT LINE 32 IN headless-words.z80
                    > USED AT LINE 26 IN headless-words.z80
INTERPLITERAL:      0FFA DEFINED AT LINE 53 IN headless-words.z80
                    > USED AT LINE 28 IN headless-words.z80
NESTPLUS:           1039 DEFINED AT LINE 73 IN headless-words.z80
                    > USED AT LINE 235 IN core-words.z80
NESTMINUS:          1043 DEFINED AT LINE 79 IN headless-words.z80
                    > USED AT LINE 240 IN core-words.z80
DODOES:             104D DEFINED AT LINE 85 IN headless-words.z80
                    > USED AT LINE 65 IN compiler-words.z80
XDOES:              105D DEFINED AT LINE 92 IN headless-words.z80
                    > USED AT LINE 64 IN compiler-words.z80
HEADER_WORDS:       1077 DEFINED AT LINE 31
                    > USED AT LINE 34
WORDS:              107F DEFINED AT LINE 38
HEADER_PRINT:       1087 DEFINED AT LINE 31
                    > USED AT LINE 34
PRINT:              108F DEFINED AT LINE 38
HEADER_ONEMINUS:    10A1 DEFINED AT LINE 31
                    > USED AT LINE 34
ONEMINUS:           10A6 DEFINED AT LINE 38
                    > USED AT LINE 28 IN experimental.z80
HEADER_TWOMINUS:    10AA DEFINED AT LINE 31
                    > USED AT LINE 34
TWOMINUS:           10AF DEFINED AT LINE 38
HEADER_NOOP:        10B4 DEFINED AT LINE 31
                    > USED AT LINE 34
NOOP:               10BB DEFINED AT LINE 38
                    > USED AT LINE 62 IN extra-primitives.z80
HEADER_RSPSTORE:    10BE DEFINED AT LINE 31
                    > USED AT LINE 34
RSPSTORE:           10C5 DEFINED AT LINE 38
HEADER_SPFETCH:     10D5 DEFINED AT LINE 31
                    > USED AT LINE 34
SPFETCH:            10DB DEFINED AT LINE 38
                    > USED AT LINE 11 IN experimental.z80
                    > USED AT LINE 44 IN extra-words.z80
                    > USED AT LINE 52 IN extra-words.z80
HEADER_SPSTORE:     10ED DEFINED AT LINE 31
                    > USED AT LINE 34
SPSTORE:            10F3 DEFINED AT LINE 38
                    > USED AT LINE 23 IN experimental.z80
HEADER_CELLPLUS:    1105 DEFINED AT LINE 31
                    > USED AT LINE 34
CELLPLUS:           110D DEFINED AT LINE 38
HEADER_CHARPLUS:    1110 DEFINED AT LINE 31
                    > USED AT LINE 34
CHARPLUS:           1118 DEFINED AT LINE 38
HEADER_CHARS:       111B DEFINED AT LINE 31
                    > USED AT LINE 34
CHARS:              1123 DEFINED AT LINE 38
HEADER_TWOSLASH:    1126 DEFINED AT LINE 31
                    > USED AT LINE 34
TWOSLASH:           112B DEFINED AT LINE 38
HEADER_LSHIFT:      1132 DEFINED AT LINE 31
                    > USED AT LINE 34
LSHIFT:             113B DEFINED AT LINE 38
                    > USED AT LINE 93 IN extra-primitives.z80
L_M_2302S85:        114E DEFINED AT LINE 73
                    > USED AT LINE 70
LSHIFT2:            114F DEFINED AT LINE 87 IN extra-primitives.z80
                    > USED AT LINE 84 IN extra-primitives.z80
HEADER_LTLT:        1156 DEFINED AT LINE 31
                    > USED AT LINE 34
LTLT:               115B DEFINED AT LINE 38
HEADER_RSHIFT:      115D DEFINED AT LINE 31
                    > USED AT LINE 34
RSHIFT:             1166 DEFINED AT LINE 38
                    > USED AT LINE 110 IN extra-primitives.z80
L_M_2316S101:       1179 DEFINED AT LINE 73
                    > USED AT LINE 70
RSHIFT2:            117D DEFINED AT LINE 104 IN extra-primitives.z80
                    > USED AT LINE 100 IN extra-primitives.z80
HEADER_GTGT:        1184 DEFINED AT LINE 31
                    > USED AT LINE 34
GTGT:               1189 DEFINED AT LINE 38
HEADER_IMMEDIATE:   118B DEFINED AT LINE 31
                    > USED AT LINE 34
IMMEDIATE:          1197 DEFINED AT LINE 38
HEADER_ACCEPT:      11A3 DEFINED AT LINE 31
                    > USED AT LINE 34
ACCEPT:             11AC DEFINED AT LINE 38
HEADER_KEY:         11C8 DEFINED AT LINE 31
                    > USED AT LINE 34
KEY:                11CE DEFINED AT LINE 38
HEADER_EMIT:        11D7 DEFINED AT LINE 31
                    > USED AT LINE 34
EMIT:               11DE DEFINED AT LINE 38
HEADER_QKEY:        11EF DEFINED AT LINE 31
                    > USED AT LINE 34
QKEY:               11F6 DEFINED AT LINE 38
L_M_2364S160:       120C DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        1212 DEFINED AT LINE 31
                    > USED AT LINE 34
PACK:               1219 DEFINED AT LINE 38
HEADER_DECIMAL:     1239 DEFINED AT LINE 31
                    > USED AT LINE 34
DECIMAL:            1243 DEFINED AT LINE 38
HEADER_HEX:         1251 DEFINED AT LINE 31
                    > USED AT LINE 34
HEX:                1257 DEFINED AT LINE 38
HEADER_MIN:         1265 DEFINED AT LINE 31
                    > USED AT LINE 34
MIN:                126B DEFINED AT LINE 38
HEADER_MAX:         1285 DEFINED AT LINE 31
                    > USED AT LINE 34
MAX:                128B DEFINED AT LINE 38
HEADER_DOTS:        12A5 DEFINED AT LINE 31
                    > USED AT LINE 34
DOTS:               12AA DEFINED AT LINE 38
HEADER_DOTQUOTE:    12FC DEFINED AT LINE 31
                    > USED AT LINE 34
DOTQUOTE:           1301 DEFINED AT LINE 38
HEADER_VERSION:     131F DEFINED AT LINE 31
                    > USED AT LINE 34
VERSION:            1329 DEFINED AT LINE 38
HEADER_RZ:          1339 DEFINED AT LINE 31
                    > USED AT LINE 34
RZ:                 133E DEFINED AT LINE 38
HEADER___MSK_IMMED: 134E DEFINED AT LINE 31
                    > USED AT LINE 34
HEADER___MSK_HIDDEN: 136A DEFINED AT LINE 31
                    > USED AT LINE 34
HEADER___MSK_LENGTH: 1387 DEFINED AT LINE 31
                    > USED AT LINE 34
HEADER_FRAMEPTR:    13A4 DEFINED AT LINE 31
                    > USED AT LINE 34
FRAMEPTR:           13AF DEFINED AT LINE 38
                    > USED AT LINE 9 IN experimental.z80
                    > USED AT LINE 20 IN experimental.z80
                    > USED AT LINE 29 IN experimental.z80
HEADER_PAD:         13BF DEFINED AT LINE 31
                    > USED AT LINE 34
PAD:                13C5 DEFINED AT LINE 38
HEADER_HERE:        13D5 DEFINED AT LINE 31
                    > USED AT LINE 34
HERE:               13DC DEFINED AT LINE 38
                    > USED AT LINE 16 IN core-words.z80
                    > USED AT LINE 38 IN core-words.z80
                    > USED AT LINE 141 IN core-words.z80
                    > USED AT LINE 147 IN core-words.z80
                    > USED AT LINE 162 IN core-words.z80
                    > USED AT LINE 171 IN core-words.z80
                    > USED AT LINE 177 IN core-words.z80
                    > USED AT LINE 185 IN core-words.z80
                    > USED AT LINE 187 IN core-words.z80
                    > USED AT LINE 232 IN core-words.z80
                    > USED AT LINE 257 IN core-words.z80
                    > USED AT LINE 10 IN compiler-words.z80
                    > USED AT LINE 12 IN compiler-words.z80
                    > USED AT LINE 27 IN compiler-words.z80
                    > USED AT LINE 35 IN compiler-words.z80
                    > USED AT LINE 42 IN compiler-words.z80
                    > USED AT LINE 49 IN compiler-words.z80
                    > USED AT LINE 66 IN compiler-words.z80
HEADER_INTP_STOP:   13EC DEFINED AT LINE 31
                    > USED AT LINE 34
INTP_STOP:          13F8 DEFINED AT LINE 38
HEADER_STATE:       1408 DEFINED AT LINE 31
                    > USED AT LINE 34
STATE:              1410 DEFINED AT LINE 38
                    > USED AT LINE 199 IN core-words.z80
                    > USED AT LINE 228 IN core-words.z80
                    > USED AT LINE 241 IN core-words.z80
                    > USED AT LINE 252 IN core-words.z80
                    > USED AT LINE 40 IN headless-words.z80
                    > USED AT LINE 58 IN headless-words.z80
                    > USED AT LINE 66 IN extra-words.z80
HEADER_NESTING:     1420 DEFINED AT LINE 31
                    > USED AT LINE 34
NESTING:            142A DEFINED AT LINE 38
                    > USED AT LINE 229 IN core-words.z80
                    > USED AT LINE 242 IN core-words.z80
                    > USED AT LINE 253 IN core-words.z80
                    > USED AT LINE 41 IN headless-words.z80
                    > USED AT LINE 59 IN headless-words.z80
HEADER_SP0:         143A DEFINED AT LINE 31
                    > USED AT LINE 34
SP0:                1440 DEFINED AT LINE 38
                    > USED AT LINE 9 IN core-words.z80
                    > USED AT LINE 45 IN extra-words.z80
                    > USED AT LINE 49 IN extra-words.z80
HEADER_BASE:        1450 DEFINED AT LINE 31
                    > USED AT LINE 34
BASE:               1457 DEFINED AT LINE 38
HEADER_LATESTSTR:   1467 DEFINED AT LINE 31
                    > USED AT LINE 34
LATESTSTR:          1473 DEFINED AT LINE 38
                    > USED AT LINE 203 IN core-words.z80
                    > USED AT LINE 210 IN core-words.z80
                    > USED AT LINE 211 IN core-words.z80
HEADER_LATEST:      1483 DEFINED AT LINE 31
                    > USED AT LINE 31 IN core-utilities.z80
                    > USED AT LINE 34
LATEST:             148C DEFINED AT LINE 38
                    > USED AT LINE 14 IN compiler-words.z80
                    > USED AT LINE 21 IN compiler-words.z80
                    > USED AT LINE 50 IN compiler-words.z80
                    > USED AT LINE 51 IN compiler-words.z80
                    > USED AT LINE 95 IN headless-words.z80
START:              149C DEFINED AT LINE 46
                    > USED AT LINE 14
TESTS_START:        2000 DEFINED AT LINE 63
                    > USED AT LINE 52
TST_TEXTM_2622S7:   2012 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2624S9:   2048 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2626S11:  206F DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2628S13:   20A5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2628S13:   20AD DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2629S15:  20BF DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2631S17:  20E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2633S19:   211F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2633S19:   2127 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2634S21:  2139 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2636S23:  216B DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2638S25:  218A DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2640S28:  21A7 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2642S30:  21DB DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2644S32:  2201 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2646S35:  2220 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2648S37:  2249 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2650S39:   227F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2650S39:   2285 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2652S42:  22A4 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2654S44:   22DC DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2654S44:   22EC DEFINED AT LINE 37
                    > USED AT LINE 26
TE_FAILM_2655S45:   2317 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2655S45:   2329 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2656S47:  233B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2658S49:   2373 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2658S49:   2381 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2659S51:  2393 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2661S53:  23C0 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2663S55:   23F9 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2663S55:   240D DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2664S57:  241F DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2667S60:  2453 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2669S62:  2477 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2671S64:   24B0 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2671S64:   24C2 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2672S66:  24D4 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2675S69:  250A DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2677S71:   2542 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2677S71:   2552 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2680S75:  257E DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2682S78:  25B2 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2684S80:   25EE DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2684S80:   2605 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2686S83:  2624 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2688S85:   2660 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2688S85:   2677 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2689S87:  2689 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2692S92:  26D3 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2694S94:   270F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2694S94:   2719 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2696S98:  2738 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2698S100:  2774 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2698S100:  277E DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2699S102: 2790 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2702S105: 27E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2704S107:  2826 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2704S107:  283B DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2705S110: 284D DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2707S112:  2885 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2707S112:  2899 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2708S114: 28AB DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2710S116:  28E5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2710S116:  28EF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2711S118: 2901 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2715S123: 2940 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2717S125:  2978 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2717S125:  2984 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2718S127: 2996 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2720S130: 2A2C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2722S133: 2A4C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2724S135: 2A77 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2726S137: 2A9B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2728S139:  2AD3 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2728S139:  2ADF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2729S141: 2AF1 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2731S143: 2B13 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2733S145:  2B4B DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2733S145:  2B57 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2734S146: 2B69 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2860S18:  2B89 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2862S20:   2BCA DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2862S20:   2BDA DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2863S22:  2BEC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2865S24:   2C2D DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2865S24:   2C44 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2866S1:   2C56 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2868S3:    2C94 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2868S3:    2CA4 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2869S5:   2CB6 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2871S8:   2CDC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2873S10:   2D18 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2873S10:   2D2C DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2874S12:  2D3E DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2876S14:   2D79 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2876S14:   2D8C DEFINED AT LINE 37
                    > USED AT LINE 26
ADD100:             2DA7 DEFINED AT LINE 89
SERBUF:             2DBD DEFINED AT LINE 7 IN variables.z80
                    > USED AT LINE 7 IN serial.z80
                    > USED AT LINE 42 IN serial.z80
                    > USED AT LINE 44 IN serial.z80
SERINPTR:           2DFC DEFINED AT LINE 8 IN variables.z80
                    > USED AT LINE 8 IN serial.z80
                    > USED AT LINE 39 IN serial.z80
                    > USED AT LINE 46 IN serial.z80
SERRDPTR:           2DFE DEFINED AT LINE 9 IN variables.z80
                    > USED AT LINE 9 IN serial.z80
SERBUFUSED:         2E00 DEFINED AT LINE 10 IN variables.z80
                    > USED AT LINE 5 IN serial.z80
                    > USED AT LINE 34 IN serial.z80
                    > USED AT LINE 49 IN serial.z80
                    > USED AT LINE 51 IN serial.z80
                    > USED AT LINE 127 IN serial.z80
LINEBUFSTART:       2E02 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 12 IN serial.z80
                    > USED AT LINE 213 IN serial.z80
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
LINEBUFSIZE:        2E04 DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 17 IN serial.z80
                    > USED AT LINE 214 IN serial.z80
CURRKEY:            2E06 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 13 IN serial.z80
                    > USED AT LINE 208 IN serial.z80
                    > USED AT LINE 217 IN serial.z80
                    > USED AT LINE 222 IN serial.z80
                    > USED AT LINE 225 IN serial.z80
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
LINEBUFTOP:         2E08 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 14 IN serial.z80
                    > USED AT LINE 209 IN serial.z80
                    > USED AT LINE 220 IN serial.z80
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
LINEBUF:            2E0A DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 11 IN serial.z80
                    > USED AT LINE 216 IN serial.z80
EXITADDR:           2E8A DEFINED AT LINE 20 IN variables.z80
                    > USED AT LINE 53 IN core-utilities.z80
                    > USED AT LINE 55 IN core-utilities.z80
WORDBUF:            2E8C DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 398 IN core-primitives.z80
                    > USED AT LINE 66 IN core-utilities.z80
                    > USED AT LINE 112 IN core-utilities.z80
                    > USED AT LINE 204 IN core-words.z80
                    > USED AT LINE 208 IN core-words.z80
WORDBUF2:           2ECC DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 206 IN core-words.z80
DATA_STACK:         2F0C DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 13 IN core-utilities.z80
IS_LITERAL:         2F8C DEFINED AT LINE 24 IN variables.z80
                    > USED AT LINE 21 IN core-utilities.z80
VAR_FRAMEPTR:       2F8E DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 19 IN core-utilities.z80
                    > USED AT LINE 44
VAR_PAD:            2F90 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 44
VAR_HERE:           3010 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 175 IN core-primitives.z80
                    > USED AT LINE 177 IN core-primitives.z80
                    > USED AT LINE 199 IN core-primitives.z80
                    > USED AT LINE 202 IN core-primitives.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 44
VAR_INTP_STOP:      3012 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 20 IN core-utilities.z80
                    > USED AT LINE 44
VAR_STATE:          3014 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 267 IN core-primitives.z80
                    > USED AT LINE 272 IN core-primitives.z80
                    > USED AT LINE 23 IN core-utilities.z80
                    > USED AT LINE 44
VAR_NESTING:        3016 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 22 IN core-utilities.z80
                    > USED AT LINE 74 IN headless-words.z80
                    > USED AT LINE 76 IN headless-words.z80
                    > USED AT LINE 80 IN headless-words.z80
                    > USED AT LINE 82 IN headless-words.z80
                    > USED AT LINE 44
VAR_SP0:            3018 DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 15 IN core-utilities.z80
                    > USED AT LINE 44
VAR_BASE:           301A DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 396 IN core-primitives.z80
                    > USED AT LINE 26 IN core-utilities.z80
                    > USED AT LINE 64 IN core-utilities.z80
                    > USED AT LINE 245 IN core-utilities.z80
                    > USED AT LINE 263 IN core-utilities.z80
                    > USED AT LINE 275 IN core-utilities.z80
                    > USED AT LINE 44
VAR_LATEST_STR:     301C DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 33 IN core-utilities.z80
                    > USED AT LINE 44
VAR_LATEST:         301E DEFINED AT LINE 35 IN variables.z80
                    > USED AT LINE 32 IN core-utilities.z80
                    > USED AT LINE 359 IN core-utilities.z80
                    > USED AT LINE 410 IN core-utilities.z80
                    > USED AT LINE 121 IN extra-primitives.z80
                    > USED AT LINE 44
CHAR_POINTER:       3020 DEFINED AT LINE 41 IN variables.z80
                    > USED AT LINE 73 IN serial.z80
                    > USED AT LINE 76 IN serial.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
START_USER:         3022 DEFINED AT LINE 100
                    > USED AT LINE 28 IN core-utilities.z80
