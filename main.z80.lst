0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   1   
0000                MEM_SIZE:   EQU   $10000   ; MEM is 64K
0000                ROM_SIZE:   EQU   $2000   ; ROM is 8K
0000                RAM_SIZE:   EQU   MEM_SIZE - ROM_SIZE   ; RAM is 64K - 8K
0000                BM:       EQU   0   ; bottom of ROM memory
0000                EM:       EQU   BM + MEM_SIZE   
0000                START_ROM:   EQU   BM   ; inclusive
0000                END_ROM:   EQU   BM + ROM_SIZE   ; exclusive
0000                START_RAM:   EQU   BM + ROM_SIZE   ; inclusive
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   ; exclusive
0000                RET_STACK_SIZE:   EQU   $100   ; return stack
0000                DATA_STACK_SIZE:   EQU   $100   ; data stack
0000                PAD_SIZE:   EQU   $100   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro CODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro MVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                CODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro MCONST,name,namelen,flags,label,value
0000                             ; 
0000                CODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRAN, 6
0000                 DW BRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro ENTER,
0000                             ; 
0000                 rst $08                             ; enter forth
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 67 00               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 0D 0F               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 B7 10               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                START:       
0067   31 A7 2E               LD   SP,RET_STACK   ; Initialise the return stack.
006A   CD 8E 10               CALL   initSerial   
006D   CD D2 0E               CALL   initForth   
0070                          IF   TESTMODE   
0070   C3 00 20               JP   TESTS_START   
0073                          ELSE      
                              ;*Macro unroll:  PRINT_STR TXT_INTRO
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,TXT_INTRO   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              JP   QUIT   
0073                          ENDIF      
0073                             ;   0<          ( n -- t )
0073                             ;               Return true if n is negative.
0073                          ;*Macro unroll: CODE '0<',2,0,ZLESS
0073                HEADER_ZLESS:      
0073   00 00                  DW   link   
0075                LINK:     .SET   HEADER_ZLESS   
0075   02                     DB   0 + 2   
0076   30 3C                  DB   "0<"   
0078                ZLESS:       
0078   CB 20                  SLA   B   ; sign bit -> cy flag
007A   9F                     SBC   A,A   ; propagate cy through A
007B   47                     LD   B,A   ; put 0000 or FFFF in TOS
007C   4F                     LD   C,A   
007D                          ;*Macro unroll: 	NEXT
007D   C3 0D 0F               JP   enter   
0080                             ; and    x1 x2 -- x3            logical and
0080                          ;*Macro unroll: CODE "and",3,0,ANDD	        ; bitwise and
0080                HEADER_ANDD:      ; bitwise and
0080   73 00                  DW   link   
0082                LINK:     .SET   HEADER_ANDD   
0082   03                     DB   0 + 3   
0083   61 6E 64               DB   "and"   
0086                ANDD:        
0086                          ;*Macro unroll:  PPOP0 H,L
0086   DD 2B                  DEC   IX   
0088   DD 66 00               LD   H,(IX+0)   
008B   DD 2B                  DEC   IX   
008D   DD 6E 00               LD   L,(IX+0)   
0090   78                     LD   A,B   
0091   A4                     AND   H   
0092   47                     LD   B,A   
0093   79                     LD   A,C   
0094   A5                     AND   L   
0095   4F                     LD   C,A   
0096                          ;*Macro unroll:  NEXT
0096   C3 0D 0F               JP   enter   
0099                             ; OR    x1 x2 -- x3             logical OR
0099                          ;*Macro unroll: CODE "or",2,0,ORR	            ; bitwise OR
0099                HEADER_ORR:      ; bitwise OR
0099   80 00                  DW   link   
009B                LINK:     .SET   HEADER_ORR   
009B   02                     DB   0 + 2   
009C   6F 72                  DB   "or"   
009E                ORR:         
009E                          ;*Macro unroll:  ppop0 H,L
009E   DD 2B                  DEC   IX   
00A0   DD 66 00               LD   H,(IX+0)   
00A3   DD 2B                  DEC   IX   
00A5   DD 6E 00               LD   L,(IX+0)   
00A8   78                     LD   A,B   
00A9   B4                     OR   H   
00AA   47                     LD   B,A   
00AB   79                     LD   A,C   
00AC   B5                     OR   L   
00AD   4F                     LD   C,A   
00AE                          ;*Macro unroll:  NEXT
00AE   C3 0D 0F               JP   enter   
00B1                             ; xor    x1 x2 -- x3            logical xor
00B1                          ;*Macro unroll: CODE "xor",3,0,XORR	        ; bitwise xor
00B1                HEADER_XORR:      ; bitwise xor
00B1   99 00                  DW   link   
00B3                LINK:     .SET   HEADER_XORR   
00B3   03                     DB   0 + 3   
00B4   78 6F 72               DB   "xor"   
00B7                XORR:        
00B7                          ;*Macro unroll:  ppop0 H,L
00B7   DD 2B                  DEC   IX   
00B9   DD 66 00               LD   H,(IX+0)   
00BC   DD 2B                  DEC   IX   
00BE   DD 6E 00               LD   L,(IX+0)   
00C1   78                     LD   A,B   
00C2   AC                     XOR   H   
00C3   47                     LD   B,A   
00C4   79                     LD   A,C   
00C5   AD                     XOR   L   
00C6   4F                     LD   C,A   
00C7                          ;*Macro unroll:  NEXT
00C7   C3 0D 0F               JP   enter   
00CA                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
00CA                          ;*Macro unroll: CODE "+",1,0,PLUS
00CA                HEADER_PLUS:      
00CA   B1 00                  DW   link   
00CC                LINK:     .SET   HEADER_PLUS   
00CC   01                     DB   0 + 1   
00CD   2B                     DB   "+"   
00CE                PLUS:        
00CE                          ;*Macro unroll:  ppop0 H,L
00CE   DD 2B                  DEC   IX   
00D0   DD 66 00               LD   H,(IX+0)   
00D3   DD 2B                  DEC   IX   
00D5   DD 6E 00               LD   L,(IX+0)   
00D8   09                     ADD   HL,BC   
00D9                          ;*Macro unroll:  loadWord B,C, H,L
00D9   4D                     LD   C,L   
00DA   44                     LD   B,H   
00DB                          ;*Macro unroll:  NEXT
00DB   C3 0D 0F               JP   enter   
00DE                             ; INVERT x1 -- x2               ; bitwise complement
00DE                          ;*Macro unroll: CODE "not",6,0,INVER
00DE                HEADER_INVER:      
00DE   CA 00                  DW   link   
00E0                LINK:     .SET   HEADER_INVER   
00E0   06                     DB   0 + 6   
00E1   6E 6F 74               DB   "not"   
00E4                INVER:       
00E4                          ;*Macro unroll:  ENTER
00E4   CF                     RST   $08   
00E5   1B 12 FF FF B7 00 1E 0F DW   LIT,-1,XORR,EXIT   
00ED                             ; negate  n1 -- n2                      negate n1
00ED                          ;*Macro unroll: CODE "negate",6,0,NEGAT
00ED                HEADER_NEGAT:      
00ED   DE 00                  DW   link   
00EF                LINK:     .SET   HEADER_NEGAT   
00EF   06                     DB   0 + 6   
00F0   6E 65 67 61 74 65      DB   "negate"   
00F6                NEGAT:       
00F6                          ;*Macro unroll:  ENTER
00F6   CF                     RST   $08   
00F7   E4 00 80 03 1E 0F      DW   INVER,ONEP,EXIT   
00FD                             ; negate  n1 -- n2                      negate n1
00FD                          ;*Macro unroll: CODE "dnegate",7,0,DNEGA
00FD                HEADER_DNEGA:      
00FD   ED 00                  DW   link   
00FF                LINK:     .SET   HEADER_DNEGA   
00FF   07                     DB   0 + 7   
0100   64 6E 65 67 61 74 65   DB   "dnegate"   
0107                DNEGA:       
0107                          ;*Macro unroll:  ENTER
0107   CF                     RST   $08   
0108   E4 00 0C 13 E4 00      DW   INVER,TOR,INVER   
010E   1B 12 01 00 EE 01      DW   LIT,1,UPLUS   
0114   21 13 CE 00 1E 0F      DW   RFROM,PLUS,EXIT   
011A                          ;*Macro unroll: CODE "-",1,0,SUBB
011A                HEADER_SUBB:      
011A   FD 00                  DW   link   
011C                LINK:     .SET   HEADER_SUBB   
011C   01                     DB   0 + 1   
011D   2D                     DB   "-"   
011E                SUBB:        
011E                          ;*Macro unroll:  ENTER
011E   CF                     RST   $08   
011F   F6 00 CE 00 1E 0F      DW   NEGAT,Plus,EXIT   
0125                             ; abs   n -- u                          absolute value
0125                          ;*Macro unroll: CODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0125                HEADER_ABS:      ; case sensitive for ABS label for some reason
0125   1A 01                  DW   link   
0127                LINK:     .SET   HEADER_ABS   
0127   03                     DB   0 + 3   
0128   61 62 73               DB   "abs"   
012B                ABS:         
012B                          ;*Macro unroll:  ENTER
012B   CF                     RST   $08   
012C   9C 12 78 00 D4 07 36 01 DW   DUPP,ZLESS,QBRAN1,ABS1   
0134   F6 00                  DW   NEGAT   
0136                ABS1:        
0136   1E 0F                  DW   EXIT   
0138                             ; =      x1 x2 -- flag         test x1=x2
0138                          ;*Macro unroll: CODE "=",1,0,EQUAL
0138                HEADER_EQUAL:      
0138   25 01                  DW   link   
013A                LINK:     .SET   HEADER_EQUAL   
013A   01                     DB   0 + 1   
013B   3D                     DB   "="   
013C                EQUAL:       
013C                          ;*Macro unroll:  ENTER
013C   CF                     RST   $08   
013D   B7 00                  DW   XORR   
013F   D4 07 49 01            DW   QBRAN1,EQU1   
0143   1B 12 00 00 1E 0F      DW   LIT,0,EXIT   ;false flag
0149                EQU1:        
0149   1B 12 FF FF 1E 0F      DW   LIT,-1,EXIT   ;true flag
014F                             ;   U<          ( u u -- t )
014F                             ;               Unsigned compare of top two items.
014F                          ;*Macro unroll: CODE "U<",2,0,ULESS	        ; less than
014F                HEADER_ULESS:      ; less than
014F   38 01                  DW   link   
0151                LINK:     .SET   HEADER_ULESS   
0151   02                     DB   0 + 2   
0152   55 3C                  DB   "U<"   
0154                ULESS:       
0154                          ;*Macro unroll:  ENTER
0154   CF                     RST   $08   
0155   47 13 B7 00 78 00      DW   DDUP,XORR,ZLESS   
015B   D4 07 67 01            DW   QBRAN1,ULES1   
015F   B0 12 D0 12 78 00 1E 0F DW   SWAP,DROP,ZLESS,EXIT   
0167                ULES1:       
0167   1E 01 78 00 1E 0F      DW   SUBB,ZLESS,EXIT   
016D                             ;   <           ( n1 n2 -- t )
016D                             ;               is less than
016D                          ;*Macro unroll: CODE "<",1,0,LESS	        ; less than
016D                HEADER_LESS:      ; less than
016D   4F 01                  DW   link   
016F                LINK:     .SET   HEADER_LESS   
016F   01                     DB   0 + 1   
0170   3C                     DB   "<"   
0171                LESS:        
0171                          ;*Macro unroll:  ENTER
0171   CF                     RST   $08   
0172   47 13 B7 00 78 00 D4 07 82 01 DW   DDUP,XORR,ZLESS,QBRAN1,LESS1   
017C   D0 12 78 00 1E 0F      DW   DROP,ZLESS,EXIT   
0182                LESS1:       
0182   1E 01 78 00 1E 0F      DW   SUBB,ZLESS,EXIT   
0188                             ; >      n1 n2 -- flag          test n1 > n2
0188                          ;*Macro unroll: CODE ">",1,0,GREATERTHAN	        ; less than
0188                HEADER_GREATERTHAN:      ; less than
0188   6D 01                  DW   link   
018A                LINK:     .SET   HEADER_GREATERTHAN   
018A   01                     DB   0 + 1   
018B   3E                     DB   ">"   
018C                GREATERTHAN:      
018C                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
018C   DD 2B                  DEC   IX   ; swap operands
018E   DD 66 00               LD   H,(IX+0)   
0191   DD 2B                  DEC   IX   
0193   DD 6E 00               LD   L,(IX+0)   
0196                          ;*Macro unroll:  ppush H,L
0196                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0196   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0199   DD 23                  INC   IX   
019B   DD 70 00               LD   (IX+0),B   
019E   DD 23                  INC   IX   
01A0   44                     LD   B,H   
01A1   4D                     LD   C,L   
01A2   18 CD                  JR   LESS   
01A4                             ; max   n1 n2 -- u                      maximum
01A4                          ;*Macro unroll: CODE "max",3,0,MAX
01A4                HEADER_MAX:      
01A4   88 01                  DW   link   
01A6                LINK:     .SET   HEADER_MAX   
01A6   03                     DB   0 + 3   
01A7   6D 61 78               DB   "max"   
01AA                MAX:         
01AA                          ;*Macro unroll:  ENTER
01AA   CF                     RST   $08   
01AB   47 13 71 01 D4 07 B5 01 DW   DDUP,LESS,QBRAN1,MAX1   
01B3   B0 12                  DW   SWAP   
01B5                MAX1:        
01B5   D0 12 1E 0F            DW   DROP,EXIT   
01B9                             ; min   n1 n2 -- u                      minimum
01B9                          ;*Macro unroll: CODE "min",3,0,MIN
01B9                HEADER_MIN:      
01B9   A4 01                  DW   link   
01BB                LINK:     .SET   HEADER_MIN   
01BB   03                     DB   0 + 3   
01BC   6D 69 6E               DB   "min"   
01BF                MIN:         
01BF                          ;*Macro unroll:  ENTER
01BF   CF                     RST   $08   
01C0   47 13 B0 12 71 01      DW   DDUP,SWAP,LESS   
01C6   D4 07 CC 01            DW   QBRAN1,MIN1   
01CA   B0 12                  DW   SWAP   
01CC                MIN1:        
01CC   D0 12 1E 0F            DW   DROP,EXIT   
01D0                             ;   WITHIN      ( u ul uh -- t )
01D0                             ;               Return true if u is within the range of ul and uh.
01D0                          ;*Macro unroll: CODE 'WITHIN',6,0,WITHI
01D0                HEADER_WITHI:      
01D0   B9 01                  DW   link   
01D2                LINK:     .SET   HEADER_WITHI   
01D2   06                     DB   0 + 6   
01D3   57 49 54 48 49 4E      DB   "WITHIN"   
01D9                WITHI:       
01D9                          ;*Macro unroll: 	ENTER
01D9   CF                     RST   $08   
01DA   E4 12 1E 01 0C 13      DW   OVER,SUBB,TOR   ;ul <= u < uh
01E0   1E 01 21 13 54 01 1E 0F DW   SUBB,RFROM,ULESS,EXIT   
01E8                             ;   UM+         ( w w -- w cy )
01E8                             ;               Add two numbers, return the sum and carry flag.
01E8                          ;*Macro unroll: CODE "UM+",6,0,UPLUS
01E8                HEADER_UPLUS:      
01E8   D0 01                  DW   link   
01EA                LINK:     .SET   HEADER_UPLUS   
01EA   06                     DB   0 + 6   
01EB   55 4D 2B               DB   "UM+"   
01EE                UPLUS:       
01EE                          ;*Macro unroll:  ppop0 H,L
01EE   DD 2B                  DEC   IX   
01F0   DD 66 00               LD   H,(IX+0)   
01F3   DD 2B                  DEC   IX   
01F5   DD 6E 00               LD   L,(IX+0)   
01F8   09                     ADD   HL,BC   ;11t
01F9                          ;*Macro unroll:  ppush0 H,L
01F9   DD 75 00               LD   (IX+0),L   
01FC   DD 23                  INC   IX   
01FE   DD 74 00               LD   (IX+0),H   
0201   DD 23                  INC   IX   
0203   01 00 00               LD   BC,0   ;10t
0206   30 01                  JR   NC,UMP1   ;12/7t
0208                UMP2:        
0208   03                     INC   BC   ; 6t
0209                UMP1:        
0209                          ;*Macro unroll:  NEXT
0209   C3 0D 0F               JP   enter   
020C                             ;   UM/MOD      ( udl udh u -- ur uq )
020C                             ;               Unsigned divide of a double by a single. Return mod and quotient.
020C                          ;*Macro unroll: CODE  'UM/MOD',6,0,UMMOD
020C                HEADER_UMMOD:      
020C   E8 01                  DW   link   
020E                LINK:     .SET   HEADER_UMMOD   
020E   06                     DB   0 + 6   
020F   55 4D 2F 4D 4F 44      DB   "UM/MOD"   
0215                UMMOD:       
0215                          ;*Macro unroll:  ENTER
0215   CF                     RST   $08   
0216   47 13 54 01            DW   DDUP,ULESS   
021A   D4 07 6A 02            DW   QBRAN1,UMM4   
021E   F6 00 1B 12 0F 00 0C 13 DW   NEGAT,LIT,15,TOR   
0226                UMM1:        
0226   0C 13 9C 12 EE 01      DW   TOR,DUPP,UPLUS   
022C   0C 13 0C 13 9C 12 EE 01 DW   TOR,TOR,DUPP,UPLUS   
0234   21 13 CE 00 9C 12      DW   RFROM,PLUS,DUPP   
023A   21 13 40 10 B0 12 0C 13 DW   RFROM,RAT,SWAP,TOR   
0242   EE 01 21 13 9E 00      DW   UPLUS,RFROM,ORR   
0248   D4 07 5C 02            DW   QBRAN1,UMM2   
024C   0C 13 D0 12 1B 12 01 00 CE 00 21 13 DW   TOR,DROP,LIT,1,PLUS,RFROM   
0258   F2 07 5E 02            DW   BRAN1,UMM3   
025C                UMM2:        
025C   D0 12                  DW   DROP   
025E                UMM3:        
025E   21 13                  DW   RFROM   
0260   01 08 26 02            DW   DONXT,UMM1   
0264   D0 12 B0 12 1E 0F      DW   DROP,SWAP,EXIT   
026A                UMM4:        
026A   D0 12 39 13            DW   DROP,DDROP   
026E   1B 12 FF FF 9C 12 1E 0F DW   LIT,-1,DUPP,EXIT   ;overflow, return max
0276                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
0276                          ;*Macro unroll: CODE "u/mod",5,0,USLASHMOD
0276                HEADER_USLASHMOD:      
0276   0C 02                  DW   link   
0278                LINK:     .SET   HEADER_USLASHMOD   
0278   05                     DB   0 + 5   
0279   75 2F 6D 6F 64         DB   "u/mod"   
027E                USLASHMOD:      
027E                          ;*Macro unroll:  ppop D,E                ; DE = divisor
027E   50                     LD   D,B   ; DE = divisor
027F   59                     LD   E,C   
0280                          ;*Macro unroll:  ppop0 B,C
0280   DD 2B                  DEC   IX   
0282   DD 46 00               LD   B,(IX+0)   
0285   DD 2B                  DEC   IX   
0287   DD 4E 00               LD   C,(IX+0)   
028A                             ; BC = dividend
028A   CD E2 03               CALL   divideWordByWord   
028D                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
028D   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
0290   DD 23                  INC   IX   
0292   DD 74 00               LD   (IX+0),H   
0295   DD 23                  INC   IX   
0297                          ;*Macro unroll:  NEXT
0297   C3 0D 0F               JP   enter   
029A                          ;*Macro unroll: CODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
029A                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
029A   76 02                  DW   link   
029C                LINK:     .SET   HEADER_slashmod   
029C   04                     DB   0 + 4   
029D   2F 6D 6F 64            DB   "/mod"   
02A1                SLASHMOD:      
02A1                          ;*Macro unroll:  ENTER
02A1   CF                     RST   $08   
02A2   E4 12 E4 12            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
02A6   B7 00                  DW   XORR   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
02A8   78 00                  DW   ZLESS   ; true if high bit still set
02AA   67 12                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
02AC   E4 12                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
02AE   78 00                  DW   ZLESS   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
02B0   67 12                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
02B2   2B 01 B0 12 2B 01 B0 12 DW   ABS,swap,ABS,swap   ; remove sign from both args
02BA   7E 02                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
02BC   B0 12                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
02BE   33 12                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
02C0                          ;*Macro unroll:  cif
02C0   A3 07 00 00            DW   QBRAN,0   
02C4                          ;*Macro unroll:  CPL_PUSH $
02C4                CPL_COUNT:   .SET   CPL_COUNT + 1   
02C4                CPL_10:   .SET   CPL_9   
02C4                CPL_9:    .SET   CPL_8   
02C4                CPL_8:    .SET   CPL_7   
02C4                CPL_7:    .SET   CPL_6   
02C4                CPL_6:    .SET   CPL_5   
02C4                CPL_5:    .SET   CPL_4   
02C4                CPL_4:    .SET   CPL_3   
02C4                CPL_3:    .SET   CPL_2   
02C4                CPL_2:    .SET   CPL_TOP   
02C4                CPL_TOP:   .SET   $   
02C4   F6 00                  DW   NEGAT   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
02C6                          ;*Macro unroll:  cendif
02C6                          ;*Macro unroll:  cBRANCH_FWD
02C6                CUR_ADR:   .SET   $   
02C2                          .ORG   CPL_TOP - 2   
02C2   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02C6                          .ORG   CUR_ADR   
02C6                          ;*Macro unroll:  CPL_POP
02C6                CPL_COUNT:   .SET   CPL_COUNT - 1   
02C6                CPL_TOP:   .SET   CPL_2   
02C6                CPL_2:    .SET   CPL_3   
02C6                CPL_3:    .SET   CPL_4   
02C6                CPL_4:    .SET   CPL_5   
02C6                CPL_5:    .SET   CPL_6   
02C6                CPL_6:    .SET   CPL_7   
02C6                CPL_7:    .SET   CPL_8   
02C6                CPL_8:    .SET   CPL_9   
02C6                CPL_9:    .SET   CPL_10   
02C6                CPL_10:   .SET   0   
02C6   67 12                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
02C8   B0 12                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
02CA                          ;*Macro unroll:  cif
02CA   A3 07 00 00            DW   QBRAN,0   
02CE                          ;*Macro unroll:  CPL_PUSH $
02CE                CPL_COUNT:   .SET   CPL_COUNT + 1   
02CE                CPL_10:   .SET   CPL_9   
02CE                CPL_9:    .SET   CPL_8   
02CE                CPL_8:    .SET   CPL_7   
02CE                CPL_7:    .SET   CPL_6   
02CE                CPL_6:    .SET   CPL_5   
02CE                CPL_5:    .SET   CPL_4   
02CE                CPL_4:    .SET   CPL_3   
02CE                CPL_3:    .SET   CPL_2   
02CE                CPL_2:    .SET   CPL_TOP   
02CE                CPL_TOP:   .SET   $   
02CE   F6 00                  DW   NEGAT   ;     -r q b1 -- -r -q       if signs differ then negate answer
02D0                          ;*Macro unroll:  cendif
02D0                          ;*Macro unroll:  cBRANCH_FWD
02D0                CUR_ADR:   .SET   $   
02CC                          .ORG   CPL_TOP - 2   
02CC   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02D0                          .ORG   CUR_ADR   
02D0                          ;*Macro unroll:  CPL_POP
02D0                CPL_COUNT:   .SET   CPL_COUNT - 1   
02D0                CPL_TOP:   .SET   CPL_2   
02D0                CPL_2:    .SET   CPL_3   
02D0                CPL_3:    .SET   CPL_4   
02D0                CPL_4:    .SET   CPL_5   
02D0                CPL_5:    .SET   CPL_6   
02D0                CPL_6:    .SET   CPL_7   
02D0                CPL_7:    .SET   CPL_8   
02D0                CPL_8:    .SET   CPL_9   
02D0                CPL_9:    .SET   CPL_10   
02D0                CPL_10:   .SET   0   
02D0                          ;*Macro unroll:  EXIT
02D0   1E 0F                  DW   exit   
02D2   C3 0D 0F               JP   enter   
02D5                          ;*Macro unroll: CODE "mod",3,0,mod                   ; dvend dvisr -- remainder
02D5                HEADER_MOD:      ; dvend dvisr -- remainder
02D5   9A 02                  DW   link   
02D7                LINK:     .SET   HEADER_mod   
02D7   03                     DB   0 + 3   
02D8   6D 6F 64               DB   "mod"   
02DB                MOD:         
02DB                          ;*Macro unroll:  ENTER
02DB   CF                     RST   $08   
02DC   A1 02 D0 12 1E 0F      DW   slashmod,DROP,EXIT   ; drop quotient
02E2                          ;*Macro unroll: CODE "/",1,0,slash                   ; dvend dvisr -- quot
02E2                HEADER_SLASH:      ; dvend dvisr -- quot
02E2   D5 02                  DW   link   
02E4                LINK:     .SET   HEADER_slash   
02E4   01                     DB   0 + 1   
02E5   2F                     DB   "/"   
02E6                SLASH:       
02E6                          ;*Macro unroll:  ENTER
02E6   CF                     RST   $08   
02E7   A1 02 B0 12 D0 12 1E 0F DW   slashmod,swap,drop,EXIT   ; drop remainder
02EF                             ; U*   u1 u2 -- ud   unsigned mutliply
02EF                          ;*Macro unroll: CODE "u*",2,0,USTAR              ; u1 u2 -- ud
02EF                HEADER_USTAR:      ; u1 u2 -- ud
02EF   E2 02                  DW   link   
02F1                LINK:     .SET   HEADER_USTAR   
02F1   02                     DB   0 + 2   
02F2   75 2A                  DB   "u*"   
02F4                USTAR:       
02F4                             ; u2 in BC
02F4                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
02F4   DD 2B                  DEC   IX   ; u1 in DE
02F6   DD 56 00               LD   D,(IX+0)   
02F9   DD 2B                  DEC   IX   
02FB   DD 5E 00               LD   E,(IX+0)   
02FE   CD 1C 04               CALL   unsignedMultiply   
0301                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
0301   DD 73 00               LD   (IX+0),E   ; udlo result
0304   DD 23                  INC   IX   
0306   DD 72 00               LD   (IX+0),D   
0309   DD 23                  INC   IX   
030B                             ; udhi result
030B                          ;*Macro unroll:  NEXT
030B   C3 0D 0F               JP   enter   
030E                          ;*Macro unroll: CODE "*",1,0,star                    ; u1 u2 -- ud
030E                HEADER_STAR:      ; u1 u2 -- ud
030E   EF 02                  DW   link   
0310                LINK:     .SET   HEADER_star   
0310   01                     DB   0 + 1   
0311   2A                     DB   "*"   
0312                STAR:        
0312                          ;*Macro unroll:  ENTER
0312   CF                     RST   $08   
0313   E4 12 E4 12            DW   over,over   ; dupe both args
0317   2B 01 B0 12 2B 01      DW   ABS,swap,ABS   ; remove sign from both args
031D   F4 02 D0 12            DW   ustar,drop   ; unsigned multiply, drop hi-word
0321   67 12                  DW   nrot   ; move to bottom
0323   B7 00                  DW   XORR   ; zero if signs are the same
0325   78 00                  DW   ZLESS   ; if high bit set
0327                          ;*Macro unroll:  cif
0327   A3 07 00 00            DW   QBRAN,0   
032B                          ;*Macro unroll:  CPL_PUSH $
032B                CPL_COUNT:   .SET   CPL_COUNT + 1   
032B                CPL_10:   .SET   CPL_9   
032B                CPL_9:    .SET   CPL_8   
032B                CPL_8:    .SET   CPL_7   
032B                CPL_7:    .SET   CPL_6   
032B                CPL_6:    .SET   CPL_5   
032B                CPL_5:    .SET   CPL_4   
032B                CPL_4:    .SET   CPL_3   
032B                CPL_3:    .SET   CPL_2   
032B                CPL_2:    .SET   CPL_TOP   
032B                CPL_TOP:   .SET   $   
032B   F6 00                  DW   NEGAT   ; if signs differ then negate answer
032D                          ;*Macro unroll:  cendif
032D                          ;*Macro unroll:  cBRANCH_FWD
032D                CUR_ADR:   .SET   $   
0329                          .ORG   CPL_TOP - 2   
0329   04 00                  DW   CUR_ADR - CPL_TOP + 2   
032D                          .ORG   CUR_ADR   
032D                          ;*Macro unroll:  CPL_POP
032D                CPL_COUNT:   .SET   CPL_COUNT - 1   
032D                CPL_TOP:   .SET   CPL_2   
032D                CPL_2:    .SET   CPL_3   
032D                CPL_3:    .SET   CPL_4   
032D                CPL_4:    .SET   CPL_5   
032D                CPL_5:    .SET   CPL_6   
032D                CPL_6:    .SET   CPL_7   
032D                CPL_7:    .SET   CPL_8   
032D                CPL_8:    .SET   CPL_9   
032D                CPL_9:    .SET   CPL_10   
032D                CPL_10:   .SET   0   
032D                          ;*Macro unroll:  EXIT
032D   1E 0F                  DW   exit   
032F   C3 0D 0F               JP   enter   
0332                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
0332                          ;*Macro unroll: CODE "cell+",5,0,CELLP
0332                HEADER_CELLP:      
0332   0E 03                  DW   link   
0334                LINK:     .SET   HEADER_CELLP   
0334   05                     DB   0 + 5   
0335   63 65 6C 6C 2B         DB   "cell+"   
033A                CELLP:       
033A   C3 92 03               JP   TWOP   
033D                          ;*Macro unroll: CODE "cell-",5,0,CELLM
033D                HEADER_CELLM:      
033D   32 03                  DW   link   
033F                LINK:     .SET   HEADER_CELLM   
033F   05                     DB   0 + 5   
0340   63 65 6C 6C 2D         DB   "cell-"   
0345                CELLM:       
0345   C3 9C 03               JP   TWOM   
0348                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
0348                          ;*Macro unroll: CODE "cells",5,0,CELLS
0348                HEADER_CELLS:      
0348   3D 03                  DW   link   
034A                LINK:     .SET   HEADER_CELLS   
034A   05                     DB   0 + 5   
034B   63 65 6C 6C 73         DB   "cells"   
0350                CELLS:       
0350   C3 A6 03               JP   TWOST   
0353                             ; 0= zero-equal
0353                          ;*Macro unroll: CODE "0=",2,0,ZEQUAL
0353                HEADER_ZEQUAL:      
0353   48 03                  DW   link   
0355                LINK:     .SET   HEADER_ZEQUAL   
0355   02                     DB   0 + 2   
0356   30 3D                  DB   "0="   
0358                ZEQUAL:      
0358                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0358   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0359   B0                     OR   B   
035A                          ;*Macro unroll:  _if nz
035A   C2 60 03               JP   nz,L_M_832S256   
035D   C3 5D 03               JP   $   
0360                          ;*Macro unroll:  STRUC_PUSH $
0360                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0360                STRUC_12:   .SET   STRUC_11   
0360                STRUC_11:   .SET   STRUC_10   
0360                STRUC_10:   .SET   STRUC_9   
0360                STRUC_9:   .SET   STRUC_8   
0360                STRUC_8:   .SET   STRUC_7   
0360                STRUC_7:   .SET   STRUC_6   
0360                STRUC_6:   .SET   STRUC_5   
0360                STRUC_5:   .SET   STRUC_4   
0360                STRUC_4:   .SET   STRUC_3   
0360                STRUC_3:   .SET   STRUC_2   
0360                STRUC_2:   .SET   STRUC_TOP   
0360                STRUC_TOP:   .SET   $   
0360                L_M_832S256:      
0360   01 FF FF               LD   BC,-1   
0363                          ;*Macro unroll:  _endif
0363                          ;*Macro unroll:  STRUC_FWD
0363                CUR_ADR:   .SET   $   
035E                          .ORG   STRUC_TOP - 2   
035E   63 03                  DW   CUR_ADR   
0363                          .ORG   CUR_ADR   
0363                          ;*Macro unroll:  STRUC_POP
0363                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0363                STRUC_TOP:   .SET   STRUC_2   
0363                STRUC_2:   .SET   STRUC_3   
0363                STRUC_3:   .SET   STRUC_4   
0363                STRUC_4:   .SET   STRUC_5   
0363                STRUC_5:   .SET   STRUC_6   
0363                STRUC_6:   .SET   STRUC_7   
0363                STRUC_7:   .SET   STRUC_8   
0363                STRUC_8:   .SET   STRUC_9   
0363                STRUC_9:   .SET   STRUC_10   
0363                STRUC_10:   .SET   STRUC_11   
0363                STRUC_11:   .SET   STRUC_12   
0363                STRUC_12:   .SET   0   
0363   03                     INC   BC   
0364                          ;*Macro unroll:  NEXT
0364   C3 0D 0F               JP   enter   
0367                          ;*Macro unroll: CODE "0<>",3,0,ZNEQU
0367                HEADER_ZNEQU:      
0367   53 03                  DW   link   
0369                LINK:     .SET   HEADER_ZNEQU   
0369   03                     DB   0 + 3   
036A   30 3C 3E               DB   "0<>"   
036D                ZNEQU:       
036D                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
036D   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
036E   B0                     OR   B   
036F                          ;*Macro unroll:  _if nz
036F   C2 75 03               JP   nz,L_M_839S264   
0372   C3 72 03               JP   $   
0375                          ;*Macro unroll:  STRUC_PUSH $
0375                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0375                STRUC_12:   .SET   STRUC_11   
0375                STRUC_11:   .SET   STRUC_10   
0375                STRUC_10:   .SET   STRUC_9   
0375                STRUC_9:   .SET   STRUC_8   
0375                STRUC_8:   .SET   STRUC_7   
0375                STRUC_7:   .SET   STRUC_6   
0375                STRUC_6:   .SET   STRUC_5   
0375                STRUC_5:   .SET   STRUC_4   
0375                STRUC_4:   .SET   STRUC_3   
0375                STRUC_3:   .SET   STRUC_2   
0375                STRUC_2:   .SET   STRUC_TOP   
0375                STRUC_TOP:   .SET   $   
0375                L_M_839S264:      
0375   01 01 00               LD   BC,1   
0378                          ;*Macro unroll:  _endif
0378                          ;*Macro unroll:  STRUC_FWD
0378                CUR_ADR:   .SET   $   
0373                          .ORG   STRUC_TOP - 2   
0373   78 03                  DW   CUR_ADR   
0378                          .ORG   CUR_ADR   
0378                          ;*Macro unroll:  STRUC_POP
0378                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0378                STRUC_TOP:   .SET   STRUC_2   
0378                STRUC_2:   .SET   STRUC_3   
0378                STRUC_3:   .SET   STRUC_4   
0378                STRUC_4:   .SET   STRUC_5   
0378                STRUC_5:   .SET   STRUC_6   
0378                STRUC_6:   .SET   STRUC_7   
0378                STRUC_7:   .SET   STRUC_8   
0378                STRUC_8:   .SET   STRUC_9   
0378                STRUC_9:   .SET   STRUC_10   
0378                STRUC_10:   .SET   STRUC_11   
0378                STRUC_11:   .SET   STRUC_12   
0378                STRUC_12:   .SET   0   
0378                          ;*Macro unroll:  NEXT
0378   C3 0D 0F               JP   enter   
037B                             ; 1+      n -- n                    add 1 to TOS
037B                          ;*Macro unroll: CODE "1+",2,0,ONEP
037B                HEADER_ONEP:      
037B   67 03                  DW   link   
037D                LINK:     .SET   HEADER_ONEP   
037D   02                     DB   0 + 2   
037E   31 2B                  DB   "1+"   
0380                ONEP:        
0380   03                     INC   BC   
0381                          ;*Macro unroll:  NEXT
0381   C3 0D 0F               JP   enter   
0384                             ; 1-      n -- n            sub 1 to TOS
0384                          ;*Macro unroll: CODE "1-",2,0,ONEM
0384                HEADER_ONEM:      
0384   7B 03                  DW   link   
0386                LINK:     .SET   HEADER_ONEM   
0386   02                     DB   0 + 2   
0387   31 2D                  DB   "1-"   
0389                ONEM:        
0389   0B                     DEC   BC   
038A                          ;*Macro unroll:  NEXT
038A   C3 0D 0F               JP   enter   
038D                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
038D                          ;*Macro unroll: CODE "2+",2,0,TWOP
038D                HEADER_TWOP:      
038D   84 03                  DW   link   
038F                LINK:     .SET   HEADER_TWOP   
038F   02                     DB   0 + 2   
0390   32 2B                  DB   "2+"   
0392                TWOP:        
0392   03                     INC   BC   
0393   03                     INC   BC   
0394                          ;*Macro unroll:  NEXT
0394   C3 0D 0F               JP   enter   
0397                          ;*Macro unroll: CODE "2-",2,0,TWOM
0397                HEADER_TWOM:      
0397   8D 03                  DW   link   
0399                LINK:     .SET   HEADER_TWOM   
0399   02                     DB   0 + 2   
039A   32 2D                  DB   "2-"   
039C                TWOM:        
039C   0B                     DEC   BC   
039D   0B                     DEC   BC   
039E                          ;*Macro unroll:  NEXT
039E   C3 0D 0F               JP   enter   
03A1                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
03A1                          ;*Macro unroll: CODE "2*",2,0,TWOST
03A1                HEADER_TWOST:      
03A1   97 03                  DW   link   
03A3                LINK:     .SET   HEADER_TWOST   
03A3   02                     DB   0 + 2   
03A4   32 2A                  DB   "2*"   
03A6                TWOST:       
03A6   CB 21                  SLA   C   
03A8   CB 10                  RL   B   
03AA                          ;*Macro unroll:  NEXT
03AA   C3 0D 0F               JP   enter   
03AD                             ; 2/      x1 -- x2                  arithmetic right shift
03AD                          ;*Macro unroll: CODE "2/",2,0,TWOSLASH
03AD                HEADER_TWOSLASH:      
03AD   A1 03                  DW   link   
03AF                LINK:     .SET   HEADER_TWOSLASH   
03AF   02                     DB   0 + 2   
03B0   32 2F                  DB   "2/"   
03B2                TWOSLASH:      
03B2   CB 28                  SRA   B   
03B4   CB 19                  RR   C   
03B6                          ;*Macro unroll:  NEXT
03B6   C3 0D 0F               JP   enter   
03B9                             ; 
03B9                             ; negate ***
03B9                             ; params: HL = number
03B9                             ; 
03B9                NEGATENUM:      
03B9                             ; Negate HL (using two's complement)
03B9   AF                     XOR   A   
03BA   95                     SUB   L   
03BB   6F                     LD   L,A   
03BC   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
03BE   9C                     SBC   A,H   
03BF   67                     LD   H,A   
03C0   C9                     RET      
03C1                             ; 
03C1                             ; divide word by byte ***
03C1                             ; params: HL = dividend, C = divisor
03C1                             ; returns: HL = result, A = remainder
03C1                             ; destroys: ?
03C1                             ; 
03C1                DIVIDEWORDBYBYTE:      
03C1   06 10                  LD   B,16   
03C3   AF                     XOR   A   
03C4                          ;*Macro unroll:  _do
03C4   18 03                  JR   L_M_892S327   
03C6   C3 C6 03               JP   $   
03C9                          ;*Macro unroll:  DLOOP_PUSH $
03C9                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03C9                DLOOP_12:   .SET   DLOOP_11   
03C9                DLOOP_11:   .SET   DLOOP_10   
03C9                DLOOP_10:   .SET   DLOOP_9   
03C9                DLOOP_9:   .SET   DLOOP_8   
03C9                DLOOP_8:   .SET   DLOOP_7   
03C9                DLOOP_7:   .SET   DLOOP_6   
03C9                DLOOP_6:   .SET   DLOOP_5   
03C9                DLOOP_5:   .SET   DLOOP_4   
03C9                DLOOP_4:   .SET   DLOOP_3   
03C9                DLOOP_3:   .SET   DLOOP_2   
03C9                DLOOP_2:   .SET   DLOOP_TOP   
03C9                DLOOP_TOP:   .SET   $   
03C9                L_M_892S327:      
03C9   29                     ADD   HL,HL   
03CA   17                     RLA      
03CB                          ;*Macro unroll:  _if c
03CB   DA D1 03               JP   c,L_M_895S330   
03CE   C3 CE 03               JP   $   
03D1                          ;*Macro unroll:  STRUC_PUSH $
03D1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03D1                STRUC_12:   .SET   STRUC_11   
03D1                STRUC_11:   .SET   STRUC_10   
03D1                STRUC_10:   .SET   STRUC_9   
03D1                STRUC_9:   .SET   STRUC_8   
03D1                STRUC_8:   .SET   STRUC_7   
03D1                STRUC_7:   .SET   STRUC_6   
03D1                STRUC_6:   .SET   STRUC_5   
03D1                STRUC_5:   .SET   STRUC_4   
03D1                STRUC_4:   .SET   STRUC_3   
03D1                STRUC_3:   .SET   STRUC_2   
03D1                STRUC_2:   .SET   STRUC_TOP   
03D1                STRUC_TOP:   .SET   $   
03D1                L_M_895S330:      
03D1   91                     SUB   C   
03D2   2C                     INC   L   
03D3                          ;*Macro unroll:  _else
03D3   C3 D3 03               JP   $   
03D6                          ;*Macro unroll:  STRUC_FWD
03D6                CUR_ADR:   .SET   $   
03CF                          .ORG   STRUC_TOP - 2   
03CF   D6 03                  DW   CUR_ADR   
03D6                          .ORG   CUR_ADR   
03D6                STRUC_TOP:   .SET   $   
03D6   B9                     CP   C   
03D7                          ;*Macro unroll:  _if nc
03D7   D2 DD 03               JP   nc,L_M_900S335   
03DA   C3 DA 03               JP   $   
03DD                          ;*Macro unroll:  STRUC_PUSH $
03DD                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03DD                STRUC_12:   .SET   STRUC_11   
03DD                STRUC_11:   .SET   STRUC_10   
03DD                STRUC_10:   .SET   STRUC_9   
03DD                STRUC_9:   .SET   STRUC_8   
03DD                STRUC_8:   .SET   STRUC_7   
03DD                STRUC_7:   .SET   STRUC_6   
03DD                STRUC_6:   .SET   STRUC_5   
03DD                STRUC_5:   .SET   STRUC_4   
03DD                STRUC_4:   .SET   STRUC_3   
03DD                STRUC_3:   .SET   STRUC_2   
03DD                STRUC_2:   .SET   STRUC_TOP   
03DD                STRUC_TOP:   .SET   $   
03DD                L_M_900S335:      
03DD   91                     SUB   C   
03DE   2C                     INC   L   
03DF                          ;*Macro unroll:  _endif
03DF                          ;*Macro unroll:  STRUC_FWD
03DF                CUR_ADR:   .SET   $   
03DB                          .ORG   STRUC_TOP - 2   
03DB   DF 03                  DW   CUR_ADR   
03DF                          .ORG   CUR_ADR   
03DF                          ;*Macro unroll:  STRUC_POP
03DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03DF                STRUC_TOP:   .SET   STRUC_2   
03DF                STRUC_2:   .SET   STRUC_3   
03DF                STRUC_3:   .SET   STRUC_4   
03DF                STRUC_4:   .SET   STRUC_5   
03DF                STRUC_5:   .SET   STRUC_6   
03DF                STRUC_6:   .SET   STRUC_7   
03DF                STRUC_7:   .SET   STRUC_8   
03DF                STRUC_8:   .SET   STRUC_9   
03DF                STRUC_9:   .SET   STRUC_10   
03DF                STRUC_10:   .SET   STRUC_11   
03DF                STRUC_11:   .SET   STRUC_12   
03DF                STRUC_12:   .SET   0   
03DF                          ;*Macro unroll:  _endif
03DF                          ;*Macro unroll:  STRUC_FWD
03DF                CUR_ADR:   .SET   $   
03D4                          .ORG   STRUC_TOP - 2   
03D4   DF 03                  DW   CUR_ADR   
03DF                          .ORG   CUR_ADR   
03DF                          ;*Macro unroll:  STRUC_POP
03DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03DF                STRUC_TOP:   .SET   STRUC_2   
03DF                STRUC_2:   .SET   STRUC_3   
03DF                STRUC_3:   .SET   STRUC_4   
03DF                STRUC_4:   .SET   STRUC_5   
03DF                STRUC_5:   .SET   STRUC_6   
03DF                STRUC_6:   .SET   STRUC_7   
03DF                STRUC_7:   .SET   STRUC_8   
03DF                STRUC_8:   .SET   STRUC_9   
03DF                STRUC_9:   .SET   STRUC_10   
03DF                STRUC_10:   .SET   STRUC_11   
03DF                STRUC_11:   .SET   STRUC_12   
03DF                STRUC_12:   .SET   0   
03DF                          ;*Macro unroll:  _djnz
03DF   10 E8                  DJNZ   DLOOP_TOP   
03E1                          ;*Macro unroll:  DLOOP_FWD
03E1                CUR_ADR:   .SET   $   
03C7                          .ORG   DLOOP_TOP - 2   
03C7   E1 03                  DW   CUR_ADR   
03E1                          .ORG   CUR_ADR   
03E1                          ;*Macro unroll:  DLOOP_POP
03E1                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03E1                DLOOP_TOP:   .SET   DLOOP_2   
03E1                DLOOP_2:   .SET   DLOOP_3   
03E1                DLOOP_3:   .SET   DLOOP_4   
03E1                DLOOP_4:   .SET   DLOOP_5   
03E1                DLOOP_5:   .SET   DLOOP_6   
03E1                DLOOP_6:   .SET   DLOOP_7   
03E1                DLOOP_7:   .SET   DLOOP_8   
03E1                DLOOP_8:   .SET   DLOOP_9   
03E1                DLOOP_9:   .SET   DLOOP_10   
03E1                DLOOP_10:   .SET   DLOOP_11   
03E1                DLOOP_11:   .SET   DLOOP_12   
03E1                DLOOP_12:   .SET   0   
03E1   C9                     RET      
03E2                             ; 
03E2                             ; Divide word by word ***
03E2                             ; params: BC = dividend, DE = divisor
03E2                             ; returns: BC = result, HL = remainder
03E2                             ; destroys: ?
03E2                             ; 
03E2                DIVIDEWORDBYWORD:      
03E2   D5                     PUSH   DE   
03E3   21 00 00               LD   HL,0   
03E6   78                     LD   A,B   
03E7   06 08                  LD   B,8   
03E9                          ;*Macro unroll:  _do
03E9   18 03                  JR   L_M_918S355   
03EB   C3 EB 03               JP   $   
03EE                          ;*Macro unroll:  DLOOP_PUSH $
03EE                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03EE                DLOOP_12:   .SET   DLOOP_11   
03EE                DLOOP_11:   .SET   DLOOP_10   
03EE                DLOOP_10:   .SET   DLOOP_9   
03EE                DLOOP_9:   .SET   DLOOP_8   
03EE                DLOOP_8:   .SET   DLOOP_7   
03EE                DLOOP_7:   .SET   DLOOP_6   
03EE                DLOOP_6:   .SET   DLOOP_5   
03EE                DLOOP_5:   .SET   DLOOP_4   
03EE                DLOOP_4:   .SET   DLOOP_3   
03EE                DLOOP_3:   .SET   DLOOP_2   
03EE                DLOOP_2:   .SET   DLOOP_TOP   
03EE                DLOOP_TOP:   .SET   $   
03EE                L_M_918S355:      
03EE   17                     RLA      
03EF   ED 6A                  ADC   HL,HL   
03F1   ED 52                  SBC   HL,DE   
03F3                          ;*Macro unroll:  _if c
03F3   DA F9 03               JP   c,L_M_922S359   
03F6   C3 F6 03               JP   $   
03F9                          ;*Macro unroll:  STRUC_PUSH $
03F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03F9                STRUC_12:   .SET   STRUC_11   
03F9                STRUC_11:   .SET   STRUC_10   
03F9                STRUC_10:   .SET   STRUC_9   
03F9                STRUC_9:   .SET   STRUC_8   
03F9                STRUC_8:   .SET   STRUC_7   
03F9                STRUC_7:   .SET   STRUC_6   
03F9                STRUC_6:   .SET   STRUC_5   
03F9                STRUC_5:   .SET   STRUC_4   
03F9                STRUC_4:   .SET   STRUC_3   
03F9                STRUC_3:   .SET   STRUC_2   
03F9                STRUC_2:   .SET   STRUC_TOP   
03F9                STRUC_TOP:   .SET   $   
03F9                L_M_922S359:      
03F9   19                     ADD   HL,DE   
03FA                          ;*Macro unroll:  _endif
03FA                          ;*Macro unroll:  STRUC_FWD
03FA                CUR_ADR:   .SET   $   
03F7                          .ORG   STRUC_TOP - 2   
03F7   FA 03                  DW   CUR_ADR   
03FA                          .ORG   CUR_ADR   
03FA                          ;*Macro unroll:  STRUC_POP
03FA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03FA                STRUC_TOP:   .SET   STRUC_2   
03FA                STRUC_2:   .SET   STRUC_3   
03FA                STRUC_3:   .SET   STRUC_4   
03FA                STRUC_4:   .SET   STRUC_5   
03FA                STRUC_5:   .SET   STRUC_6   
03FA                STRUC_6:   .SET   STRUC_7   
03FA                STRUC_7:   .SET   STRUC_8   
03FA                STRUC_8:   .SET   STRUC_9   
03FA                STRUC_9:   .SET   STRUC_10   
03FA                STRUC_10:   .SET   STRUC_11   
03FA                STRUC_11:   .SET   STRUC_12   
03FA                STRUC_12:   .SET   0   
03FA                          ;*Macro unroll:  _djnz
03FA   10 F2                  DJNZ   DLOOP_TOP   
03FC                          ;*Macro unroll:  DLOOP_FWD
03FC                CUR_ADR:   .SET   $   
03EC                          .ORG   DLOOP_TOP - 2   
03EC   FC 03                  DW   CUR_ADR   
03FC                          .ORG   CUR_ADR   
03FC                          ;*Macro unroll:  DLOOP_POP
03FC                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03FC                DLOOP_TOP:   .SET   DLOOP_2   
03FC                DLOOP_2:   .SET   DLOOP_3   
03FC                DLOOP_3:   .SET   DLOOP_4   
03FC                DLOOP_4:   .SET   DLOOP_5   
03FC                DLOOP_5:   .SET   DLOOP_6   
03FC                DLOOP_6:   .SET   DLOOP_7   
03FC                DLOOP_7:   .SET   DLOOP_8   
03FC                DLOOP_8:   .SET   DLOOP_9   
03FC                DLOOP_9:   .SET   DLOOP_10   
03FC                DLOOP_10:   .SET   DLOOP_11   
03FC                DLOOP_11:   .SET   DLOOP_12   
03FC                DLOOP_12:   .SET   0   
03FC   17                     RLA      
03FD   2F                     CPL      
03FE   47                     LD   B,A   
03FF   79                     LD   A,C   
0400   48                     LD   C,B   
0401   06 08                  LD   B,8   
0403                          ;*Macro unroll:  _do
0403   18 03                  JR   L_M_932S369   
0405   C3 05 04               JP   $   
0408                          ;*Macro unroll:  DLOOP_PUSH $
0408                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0408                DLOOP_12:   .SET   DLOOP_11   
0408                DLOOP_11:   .SET   DLOOP_10   
0408                DLOOP_10:   .SET   DLOOP_9   
0408                DLOOP_9:   .SET   DLOOP_8   
0408                DLOOP_8:   .SET   DLOOP_7   
0408                DLOOP_7:   .SET   DLOOP_6   
0408                DLOOP_6:   .SET   DLOOP_5   
0408                DLOOP_5:   .SET   DLOOP_4   
0408                DLOOP_4:   .SET   DLOOP_3   
0408                DLOOP_3:   .SET   DLOOP_2   
0408                DLOOP_2:   .SET   DLOOP_TOP   
0408                DLOOP_TOP:   .SET   $   
0408                L_M_932S369:      
0408   17                     RLA      
0409   ED 6A                  ADC   HL,HL   
040B   ED 52                  SBC   HL,DE   
040D                          ;*Macro unroll:  _if c
040D   DA 13 04               JP   c,L_M_936S373   
0410   C3 10 04               JP   $   
0413                          ;*Macro unroll:  STRUC_PUSH $
0413                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0413                STRUC_12:   .SET   STRUC_11   
0413                STRUC_11:   .SET   STRUC_10   
0413                STRUC_10:   .SET   STRUC_9   
0413                STRUC_9:   .SET   STRUC_8   
0413                STRUC_8:   .SET   STRUC_7   
0413                STRUC_7:   .SET   STRUC_6   
0413                STRUC_6:   .SET   STRUC_5   
0413                STRUC_5:   .SET   STRUC_4   
0413                STRUC_4:   .SET   STRUC_3   
0413                STRUC_3:   .SET   STRUC_2   
0413                STRUC_2:   .SET   STRUC_TOP   
0413                STRUC_TOP:   .SET   $   
0413                L_M_936S373:      
0413   19                     ADD   HL,DE   
0414                          ;*Macro unroll:  _endif
0414                          ;*Macro unroll:  STRUC_FWD
0414                CUR_ADR:   .SET   $   
0411                          .ORG   STRUC_TOP - 2   
0411   14 04                  DW   CUR_ADR   
0414                          .ORG   CUR_ADR   
0414                          ;*Macro unroll:  STRUC_POP
0414                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0414                STRUC_TOP:   .SET   STRUC_2   
0414                STRUC_2:   .SET   STRUC_3   
0414                STRUC_3:   .SET   STRUC_4   
0414                STRUC_4:   .SET   STRUC_5   
0414                STRUC_5:   .SET   STRUC_6   
0414                STRUC_6:   .SET   STRUC_7   
0414                STRUC_7:   .SET   STRUC_8   
0414                STRUC_8:   .SET   STRUC_9   
0414                STRUC_9:   .SET   STRUC_10   
0414                STRUC_10:   .SET   STRUC_11   
0414                STRUC_11:   .SET   STRUC_12   
0414                STRUC_12:   .SET   0   
0414                          ;*Macro unroll:  _djnz
0414   10 F2                  DJNZ   DLOOP_TOP   
0416                          ;*Macro unroll:  DLOOP_FWD
0416                CUR_ADR:   .SET   $   
0406                          .ORG   DLOOP_TOP - 2   
0406   16 04                  DW   CUR_ADR   
0416                          .ORG   CUR_ADR   
0416                          ;*Macro unroll:  DLOOP_POP
0416                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0416                DLOOP_TOP:   .SET   DLOOP_2   
0416                DLOOP_2:   .SET   DLOOP_3   
0416                DLOOP_3:   .SET   DLOOP_4   
0416                DLOOP_4:   .SET   DLOOP_5   
0416                DLOOP_5:   .SET   DLOOP_6   
0416                DLOOP_6:   .SET   DLOOP_7   
0416                DLOOP_7:   .SET   DLOOP_8   
0416                DLOOP_8:   .SET   DLOOP_9   
0416                DLOOP_9:   .SET   DLOOP_10   
0416                DLOOP_10:   .SET   DLOOP_11   
0416                DLOOP_11:   .SET   DLOOP_12   
0416                DLOOP_12:   .SET   0   
0416   17                     RLA      
0417   2F                     CPL      
0418   41                     LD   B,C   
0419   4F                     LD   C,A   
041A   D1                     POP   DE   
041B   C9                     RET      
041C                             ; 
041C                             ; unsignedMultiply -  unsigned multiply ***
041C                             ; 
041C                             ; params:  u1 in BC, u2 in DE
041C                             ; returns: result in HLDE
041C                             ; destroys: AF
041C                             ; 
041C                UNSIGNEDMULTIPLY:      
041C   21 00 00               LD   HL,0   
041F   3E 11                  LD   A,17   ; loop counter
0421   B7                     OR   A   ; clear carry
0422                          ;*Macro unroll:  _do
0422   18 03                  JR   L_M_957S396   
0424   C3 24 04               JP   $   
0427                          ;*Macro unroll:  DLOOP_PUSH $
0427                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0427                DLOOP_12:   .SET   DLOOP_11   
0427                DLOOP_11:   .SET   DLOOP_10   
0427                DLOOP_10:   .SET   DLOOP_9   
0427                DLOOP_9:   .SET   DLOOP_8   
0427                DLOOP_8:   .SET   DLOOP_7   
0427                DLOOP_7:   .SET   DLOOP_6   
0427                DLOOP_6:   .SET   DLOOP_5   
0427                DLOOP_5:   .SET   DLOOP_4   
0427                DLOOP_4:   .SET   DLOOP_3   
0427                DLOOP_3:   .SET   DLOOP_2   
0427                DLOOP_2:   .SET   DLOOP_TOP   
0427                DLOOP_TOP:   .SET   $   
0427                L_M_957S396:      
0427   CB 1C                  RR   H   
0429   CB 1D                  RR   L   
042B   CB 1A                  RR   D   
042D   CB 1B                  RR   E   
042F                          ;*Macro unroll:  _if c
042F   DA 35 04               JP   c,L_M_962S401   
0432   C3 32 04               JP   $   
0435                          ;*Macro unroll:  STRUC_PUSH $
0435                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0435                STRUC_12:   .SET   STRUC_11   
0435                STRUC_11:   .SET   STRUC_10   
0435                STRUC_10:   .SET   STRUC_9   
0435                STRUC_9:   .SET   STRUC_8   
0435                STRUC_8:   .SET   STRUC_7   
0435                STRUC_7:   .SET   STRUC_6   
0435                STRUC_6:   .SET   STRUC_5   
0435                STRUC_5:   .SET   STRUC_4   
0435                STRUC_4:   .SET   STRUC_3   
0435                STRUC_3:   .SET   STRUC_2   
0435                STRUC_2:   .SET   STRUC_TOP   
0435                STRUC_TOP:   .SET   $   
0435                L_M_962S401:      
0435   09                     ADD   HL,BC   
0436                          ;*Macro unroll:  _endif
0436                          ;*Macro unroll:  STRUC_FWD
0436                CUR_ADR:   .SET   $   
0433                          .ORG   STRUC_TOP - 2   
0433   36 04                  DW   CUR_ADR   
0436                          .ORG   CUR_ADR   
0436                          ;*Macro unroll:  STRUC_POP
0436                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0436                STRUC_TOP:   .SET   STRUC_2   
0436                STRUC_2:   .SET   STRUC_3   
0436                STRUC_3:   .SET   STRUC_4   
0436                STRUC_4:   .SET   STRUC_5   
0436                STRUC_5:   .SET   STRUC_6   
0436                STRUC_6:   .SET   STRUC_7   
0436                STRUC_7:   .SET   STRUC_8   
0436                STRUC_8:   .SET   STRUC_9   
0436                STRUC_9:   .SET   STRUC_10   
0436                STRUC_10:   .SET   STRUC_11   
0436                STRUC_11:   .SET   STRUC_12   
0436                STRUC_12:   .SET   0   
0436   3D                     DEC   A   
0437                          ;*Macro unroll:  _until z
0437   CA 24 04               JP   z,DLOOP_TOP - 3   
043A                          ;*Macro unroll:  DLOOP_FWD               ; needed?
043A                CUR_ADR:   .SET   $   ; needed?
0425                          .ORG   DLOOP_TOP - 2   
0425   3A 04                  DW   CUR_ADR   
043A                          .ORG   CUR_ADR   
043A                          ;*Macro unroll:  _enddo
043A   C3 27 04               JP   DLOOP_TOP   
043D                          ;*Macro unroll:  DLOOP_FWD
043D                CUR_ADR:   .SET   $   
0425                          .ORG   DLOOP_TOP - 2   
0425   3D 04                  DW   CUR_ADR   
043D                          .ORG   CUR_ADR   
043D                          ;*Macro unroll:  DLOOP_POP
043D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
043D                DLOOP_TOP:   .SET   DLOOP_2   
043D                DLOOP_2:   .SET   DLOOP_3   
043D                DLOOP_3:   .SET   DLOOP_4   
043D                DLOOP_4:   .SET   DLOOP_5   
043D                DLOOP_5:   .SET   DLOOP_6   
043D                DLOOP_6:   .SET   DLOOP_7   
043D                DLOOP_7:   .SET   DLOOP_8   
043D                DLOOP_8:   .SET   DLOOP_9   
043D                DLOOP_9:   .SET   DLOOP_10   
043D                DLOOP_10:   .SET   DLOOP_11   
043D                DLOOP_11:   .SET   DLOOP_12   
043D                DLOOP_12:   .SET   0   
043D   C9                     RET      
043E                             ; ;   '           ( -- ca )
043E                             ; ;               Search context vocabularies for the next word in input stream.
043E                             ; CODE  1,"'",TICK
043E                             ;     ENTER
043E                             ;     DW      TOKEN,NAMEQ             ;?defined
043E                             ;     DW      QBRAN1,TICK1
043E                             ;     DW      EXIT                    ;yes, push code address
043E                             ; TICK1:
043E                             ;     DW      THROW                   ;no, error
043E                             ; ;   [COMPILE]   ( -- ; <string> )
043E                             ; ;               Compile the next immediate word into code dictionary.
043E                             ; CODE "[COMPILE]",9,msk_immed,BCOMP
043E                             ;     ENTER
043E                             ;     DW TICK,COMMA,EXIT
043E                             ;   COMPILE     ( -- )
043E                             ;               Compile the next address in colon list to code dictionary.
043E                          ;*Macro unroll: CODE 'COMPILE',7,0,COMPI
043E                HEADER_COMPI:      
043E   AD 03                  DW   link   
0440                LINK:     .SET   HEADER_COMPI   
0440   07                     DB   0 + 7   
0441   43 4F 4D 50 49 4C 45   DB   "COMPILE"   
0448                COMPI:       
0448                          ;*Macro unroll:  ENTER
0448   CF                     RST   $08   
0449   21 13 9C 12 51 0F F6 0F DW   RFROM,DUPP,Fetch,COMMA   ;compile address
0451   3A 03 0C 13 1E 0F      DW   CELLP,TOR,EXIT   ;adjust return address
0457                          ;*Macro unroll: CODE ":",1,0,colon
0457                HEADER_COLON:      
0457   3E 04                  DW   link   
0459                LINK:     .SET   HEADER_colon   
0459   01                     DB   0 + 1   
045A   3A                     DB   ":"   
045B                COLON:       
045B                          ;*Macro unroll:  ENTER
045B   CF                     RST   $08   
045C   F7 04                  DW   create   ; create the dictionary entry / header
045E   F2 08 51 0F            DW   here,fetch   ; back up 3 bytes to start of data area
0462   1B 12 03 00 1E 01      DW   lit,3,SUBB   
0468   F2 08 30 0F            DW   here,store   
046C   1B 12 CF 00 12 10      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0472   C2 14 51 0F CB 05      DW   latest,fetch,hidden   ; make the word hidden (see below for definition).
0478   F1 05                  DW   rbrac   ; go into compile mode.
047A                          ;*Macro unroll:  EXIT                                ; return from the function.
047A   1E 0F                  DW   exit   ; return from the function.
047C   C3 0D 0F               JP   enter   
047F                          ;*Macro unroll: CODE ";",1,msk_immed,semicolon
047F                HEADER_SEMICOLON:      
047F   57 04                  DW   link   
0481                LINK:     .SET   HEADER_semicolon   
0481   81                     DB   msk_immed + 1   
0482   3B                     DB   ";"   
0483                SEMICOLON:      
0483                          ;*Macro unroll:  ENTER
0483   CF                     RST   $08   
0484   1B 12 1E 0F F6 0F      DW   lit,exit,comma   ; append exit (so the word will return).
048A   C2 14 51 0F CB 05      DW   latest,fetch,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
0490   E4 05                  DW   lbrac   ; go back to immediate mode.
0492                          ;*Macro unroll:  EXIT                                ; return from the function.
0492   1E 0F                  DW   exit   ; return from the function.
0494   C3 0D 0F               JP   enter   
0497                          ;*Macro unroll: CODE ":noname",7,0,colonNoName
0497                HEADER_COLONNONAME:      
0497   7F 04                  DW   link   
0499                LINK:     .SET   HEADER_colonNoName   
0499   07                     DB   0 + 7   
049A   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
04A1                COLONNONAME:      
04A1                          ;*Macro unroll:  ENTER
04A1   CF                     RST   $08   
04A2   F2 08 51 0F            DW   here,fetch   ; TOS = here
04A6   1B 12 CF 00 12 10      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
04AC   F1 05                  DW   rbrac   ; go into compile mode.
04AE                          ;*Macro unroll:  EXIT                                ; return from the function.
04AE   1E 0F                  DW   exit   ; return from the function.
04B0   C3 0D 0F               JP   enter   
04B3                          ;*Macro unroll: CODE "variable",8,0,variable         ; ( n -- ) get name from input
04B3                HEADER_VARIABLE:      ; ( n -- ) get name from input
04B3   97 04                  DW   link   
04B5                LINK:     .SET   HEADER_variable   
04B5   08                     DB   0 + 8   
04B6   76 61 72 69 61 62 6C 65 DB   "variable"   
04BE                VARIABLE:      
04BE                          ;*Macro unroll:  ENTER
04BE   CF                     RST   $08   
04BF   1B 12 01 00 50 03      DW   lit,1,cells   
04C5   F2 08 51 0F B0 12      DW   here,fetch,swap   ; n -- here n
04CB   D4 0F                  DW   allot   ; allocate n bytes, push addr
04CD   62 05                  DW   constant   
04CF                          ;*Macro unroll:  EXIT
04CF   1E 0F                  DW   exit   
04D1   C3 0D 0F               JP   enter   
04D4                          ;*Macro unroll: CODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
04D4                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
04D4   B3 04                  DW   link   
04D6                LINK:     .SET   HEADER_bufferColon   
04D6   07                     DB   0 + 7   
04D7   62 75 66 66 65 72 3A   DB   "buffer:"   
04DE                BUFFERCOLON:      
04DE                          ;*Macro unroll:  ENTER
04DE   CF                     RST   $08   
04DF   F2 08 51 0F B0 12      DW   here,fetch,swap   ; n -- here n
04E5   D4 0F                  DW   allot   ; allocate n bytes, push addr
04E7   62 05                  DW   constant   
04E9                          ;*Macro unroll:  EXIT
04E9   1E 0F                  DW   exit   
04EB   C3 0D 0F               JP   enter   
04EE                          ;*Macro unroll: CODE "create",6,0,create             ; --
04EE                HEADER_CREATE:      ; --
04EE   D4 04                  DW   link   
04F0                LINK:     .SET   HEADER_create   
04F0   06                     DB   0 + 6   
04F1   63 72 65 61 74 65      DB   "create"   
04F7                CREATE:      
04F7                          ;*Macro unroll:  ENTER
04F7   CF                     RST   $08   
04F8   F2 08 51 0F            DW   here,fetch   ; get old "here"
04FC   C2 14 51 0F F6 0F      DW   latest,fetch,comma   ; write link to previous word to "here"
0502   C2 14 30 0F            DW   latest,store   ; update latest to old "here"
0506   8B 0E 99 0B            DW   bl,word   ; read word token
050A   7E 0F 80 03 D4 0F      DW   cfetch,ONEP,allot   ; 
0510   1B 12 C3 00 12 10      DW   lit,jp_opcode,cComma   ; compile default behavious
0516   1B 12 21 05 F6 0F      DW   lit,xcreate,comma   ; i.e. push addr of data area
051C                          ;*Macro unroll:  EXIT                                ; exit from forth
051C   1E 0F                  DW   exit   ; exit from forth
051E   C3 0D 0F               JP   enter   
0521                XCREATE:      
0521                          ;*Macro unroll:  ENTER
0521   CF                     RST   $08   
0522   21 13                  DW   rfrom   ; push onto stack
0524                          ;*Macro unroll:  EXIT
0524   1E 0F                  DW   exit   
0526   C3 0D 0F               JP   enter   
0529                          ;*Macro unroll: CODE "does>", 5, msk_immed, does         ; --
0529                HEADER_DOES:      ; --
0529   EE 04                  DW   link   
052B                LINK:     .SET   HEADER_does   
052B   85                     DB   msk_immed + 5   
052C   64 6F 65 73 3E         DB   "does>"   
0531                DOES:        
0531                          ;*Macro unroll:  ENTER
0531   CF                     RST   $08   
0532   1B 12 0A 06 F6 0F      DW   lit,xdoes,comma   
0538   1B 12 FA 05            DW   lit,dodoes   
053C   F2 08 51 0F            DW   here,fetch   
0540   1B 12 CD 00            DW   lit,call_opcode   
0544   E4 12 5F 0F            DW   over,cstore   
0548   80 03 30 0F            DW   ONEP,store   
054C   1B 12 03 00 D4 0F      DW   lit,3,allot   
0552                          ;*Macro unroll:  EXIT
0552   1E 0F                  DW   exit   
0554   C3 0D 0F               JP   enter   
0557                          ;*Macro unroll: CODE "constant",8,0,constant         ; --
0557                HEADER_CONSTANT:      ; --
0557   29 05                  DW   link   
0559                LINK:     .SET   HEADER_constant   
0559   08                     DB   0 + 8   
055A   63 6F 6E 73 74 61 6E 74 DB   "constant"   
0562                CONSTANT:      
0562                          ;*Macro unroll:  ENTER
0562   CF                     RST   $08   
0563   F7 04 F6 0F 0A 06      DW   create,comma,xdoes   
0569   CF                     RST   $08   
056A   21 13                  DW   rfrom   ; push onto stack
056C   51 0F                  DW   fetch   
056E                          ;*Macro unroll:  EXIT
056E   1E 0F                  DW   exit   
0570   C3 0D 0F               JP   enter   
0573                          ;*Macro unroll: CODE "'",1,0,tick                    ; quotes next word
0573                HEADER_TICK:      ; quotes next word
0573   57 05                  DW   link   
0575                LINK:     .SET   HEADER_tick   
0575   01                     DB   0 + 1   
0576   27                     DB   "'"   
0577                TICK:        
0577                          ;*Macro unroll:  ENTER
0577   CF                     RST   $08   
0578   8B 0E 99 0B B0 05 58 03 DW   bl,word,find,zEqual   
0580   21 13 68 13 E4 12 E4 12 CE 00 0C 13 DW   rFrom,count,over,over,plus,toR   
058C                          ;*Macro unroll:  EXIT
058C   1E 0F                  DW   exit   
058E   C3 0D 0F               JP   enter   
0591                          ;*Macro unroll: CODE "immediate",9,MSK_IMMED,IMMEDIATE
0591                HEADER_IMMEDIATE:      
0591   73 05                  DW   link   
0593                LINK:     .SET   HEADER_IMMEDIATE   
0593   89                     DB   MSK_IMMED + 9   
0594   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
059D                IMMEDIATE:      
059D   2A 5F 32               LD   HL,(VAR_LATEST)   ; get head of latest word
05A0   23                     INC   HL   ; point to flags byte
05A1   23                     INC   HL   
05A2   3E 80                  LD   a,MSK_IMMED   
05A4   AE                     XOR   (HL)   ; toggle the IMMED bit.
05A5   77                     LD   (HL),a   
05A6                          ;*Macro unroll:  NEXT
05A6   C3 0D 0F               JP   enter   
05A9                          ;*Macro unroll: CODE "find",4,0,FIND
05A9                HEADER_FIND:      
05A9   91 05                  DW   link   
05AB                LINK:     .SET   HEADER_FIND   
05AB   04                     DB   0 + 4   
05AC   66 69 6E 64            DB   "find"   
05B0                FIND:        
05B0                          ;*Macro unroll:  ppop0 H,L
05B0   DD 2B                  DEC   IX   
05B2   DD 66 00               LD   H,(IX+0)   
05B5   DD 2B                  DEC   IX   
05B7   DD 6E 00               LD   L,(IX+0)   
05BA   CD 14 0C               CALL   lookup   ; params: HL = string address, BC = string length
05BD                             ; returns: DE = found header ptr or 0
05BD                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
05BD   4B                     LD   C,E   ; move to TOS
05BE   42                     LD   B,D   
05BF                          ;*Macro unroll:  NEXT
05BF   C3 0D 0F               JP   enter   
05C2                          ;*Macro unroll: CODE "hidden",6,0,HIDDEN
05C2                HEADER_HIDDEN:      
05C2   A9 05                  DW   link   
05C4                LINK:     .SET   HEADER_HIDDEN   
05C4   06                     DB   0 + 6   
05C5   68 69 64 64 65 6E      DB   "hidden"   
05CB                HIDDEN:      
05CB                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
05CB   60                     LD   H,B   ; HL = Dictionary entry.
05CC   69                     LD   L,C   
05CD                          ;*Macro unroll:  ppop0 B,C
05CD   DD 2B                  DEC   IX   
05CF   DD 46 00               LD   B,(IX+0)   
05D2   DD 2B                  DEC   IX   
05D4   DD 4E 00               LD   C,(IX+0)   
05D7   23                     INC   HL   
05D8   23                     INC   HL   ; Point to name/flags byte.
05D9   7E                     LD   A,(HL)   
05DA   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
05DC   77                     LD   (HL),A   
05DD                          ;*Macro unroll:  NEXT
05DD   C3 0D 0F               JP   enter   
05E0                          ;*Macro unroll: CODE "[",1,MSK_IMMED,LBRAC
05E0                HEADER_LBRAC:      
05E0   C2 05                  DW   link   
05E2                LINK:     .SET   HEADER_LBRAC   
05E2   81                     DB   MSK_IMMED + 1   
05E3   5B                     DB   "["   
05E4                LBRAC:       
05E4   21 00 00               LD   HL,0   
05E7   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 0.
05EA                          ;*Macro unroll:  NEXT
05EA   C3 0D 0F               JP   enter   
05ED                          ;*Macro unroll: CODE "]",1,0,RBRAC
05ED                HEADER_RBRAC:      
05ED   E0 05                  DW   link   
05EF                LINK:     .SET   HEADER_RBRAC   
05EF   01                     DB   0 + 1   
05F0   5D                     DB   "]"   
05F1                RBRAC:       
05F1   21 01 00               LD   HL,1   
05F4   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 1.
05F7                          ;*Macro unroll:  NEXT
05F7   C3 0D 0F               JP   enter   
05FA                DODOES:      ; -- a-addr
05FA                          ;*Macro unroll:  ppush0 B,C
05FA   DD 71 00               LD   (IX+0),C   
05FD   DD 23                  INC   IX   
05FF   DD 70 00               LD   (IX+0),B   
0602   DD 23                  INC   IX   
0604   E1                     POP   HL   ; parameter field address
0605   C1                     POP   BC   
0606   E5                     PUSH   HL   
0607                          ;*Macro unroll:  NEXT
0607   C3 0D 0F               JP   enter   
060A                XDOES:       ; --
060A                          ;*Macro unroll:  ENTER
060A   CF                     RST   $08   
060B   21 13                  DW   rfrom   
060D   C2 14 51 0F B0 0B      DW   latest,fetch,tcfa   
0613   1B 12 CD 00            DW   lit,call_opcode   
0617   E4 12 5F 0F            DW   over,cstore   
061B   80 03 30 0F            DW   ONEP,store   
061F                          ;*Macro unroll:  EXIT
061F   1E 0F                  DW   exit   
0621   C3 0D 0F               JP   enter   
0624                          ;*Macro unroll: CODE "postpone",8,msk_immed,postpone ; --
0624                HEADER_POSTPONE:      ; --
0624   ED 05                  DW   link   
0626                LINK:     .SET   HEADER_postpone   
0626   88                     DB   msk_immed + 8   
0627   70 6F 73 74 70 6F 6E 65 DB   "postpone"   
062F                POSTPONE:      
062F   CF                     RST   $08   
0630   8B 0E 99 0B 68 13      DW   bl,word,count   ; pstr -- ptr len
0636   9C 12 58 03            DW   DUPP,zEqual   
063A                          ;*Macro unroll:  cIf
063A   A3 07 00 00            DW   QBRAN,0   
063E                          ;*Macro unroll:  CPL_PUSH $
063E                CPL_COUNT:   .SET   CPL_COUNT + 1   
063E                CPL_10:   .SET   CPL_9   
063E                CPL_9:    .SET   CPL_8   
063E                CPL_8:    .SET   CPL_7   
063E                CPL_7:    .SET   CPL_6   
063E                CPL_6:    .SET   CPL_5   
063E                CPL_5:    .SET   CPL_4   
063E                CPL_4:    .SET   CPL_3   
063E                CPL_3:    .SET   CPL_2   
063E                CPL_2:    .SET   CPL_TOP   
063E                CPL_TOP:   .SET   $   
063E   D0 12 D0 12            DW   drop,drop   ; ptr len --
0642                          ;*Macro unroll:  cElse
0642   C0 07 00 00            DW   BRAN,0   
0646                          ;*Macro unroll:  cBRANCH_FWD
0646                CUR_ADR:   .SET   $   
063C                          .ORG   CPL_TOP - 2   
063C   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0646                          .ORG   CUR_ADR   
0646                CPL_TOP:   .SET   $   
0646   4D 06                  DW   postponeToken   ; interpret the next word
0648                          ;*Macro unroll:  cEndif
0648                          ;*Macro unroll:  cBRANCH_FWD
0648                CUR_ADR:   .SET   $   
0644                          .ORG   CPL_TOP - 2   
0644   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0648                          .ORG   CUR_ADR   
0648                          ;*Macro unroll:  CPL_POP
0648                CPL_COUNT:   .SET   CPL_COUNT - 1   
0648                CPL_TOP:   .SET   CPL_2   
0648                CPL_2:    .SET   CPL_3   
0648                CPL_3:    .SET   CPL_4   
0648                CPL_4:    .SET   CPL_5   
0648                CPL_5:    .SET   CPL_6   
0648                CPL_6:    .SET   CPL_7   
0648                CPL_7:    .SET   CPL_8   
0648                CPL_8:    .SET   CPL_9   
0648                CPL_9:    .SET   CPL_10   
0648                CPL_10:   .SET   0   
0648                          ;*Macro unroll:  EXIT
0648   1E 0F                  DW   exit   
064A   C3 0D 0F               JP   enter   
064D                POSTPONETOKEN:      ; --
064D   CF                     RST   $08   
064E   E4 12 E4 12 B0 05      DW   over,over,find   ; ptr len -- ptr len addr
0654   9C 12 6D 03            DW   DUPP,ZNEQU   
0658                          ;*Macro unroll:  cIf
0658   A3 07 00 00            DW   QBRAN,0   
065C                          ;*Macro unroll:  CPL_PUSH $
065C                CPL_COUNT:   .SET   CPL_COUNT + 1   
065C                CPL_10:   .SET   CPL_9   
065C                CPL_9:    .SET   CPL_8   
065C                CPL_8:    .SET   CPL_7   
065C                CPL_7:    .SET   CPL_6   
065C                CPL_6:    .SET   CPL_5   
065C                CPL_5:    .SET   CPL_4   
065C                CPL_4:    .SET   CPL_3   
065C                CPL_3:    .SET   CPL_2   
065C                CPL_2:    .SET   CPL_TOP   
065C                CPL_TOP:   .SET   $   
065C   69 06                  DW   postponeWord   
065E                          ;*Macro unroll:  cElse
065E   C0 07 00 00            DW   BRAN,0   
0662                          ;*Macro unroll:  cBRANCH_FWD
0662                CUR_ADR:   .SET   $   
065A                          .ORG   CPL_TOP - 2   
065A   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0662                          .ORG   CUR_ADR   
0662                CPL_TOP:   .SET   $   
0662   A5 06                  DW   postponeLiteral   
0664                          ;*Macro unroll:  cEndif
0664                          ;*Macro unroll:  cBRANCH_FWD
0664                CUR_ADR:   .SET   $   
0660                          .ORG   CPL_TOP - 2   
0660   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0664                          .ORG   CUR_ADR   
0664                          ;*Macro unroll:  CPL_POP
0664                CPL_COUNT:   .SET   CPL_COUNT - 1   
0664                CPL_TOP:   .SET   CPL_2   
0664                CPL_2:    .SET   CPL_3   
0664                CPL_3:    .SET   CPL_4   
0664                CPL_4:    .SET   CPL_5   
0664                CPL_5:    .SET   CPL_6   
0664                CPL_6:    .SET   CPL_7   
0664                CPL_7:    .SET   CPL_8   
0664                CPL_8:    .SET   CPL_9   
0664                CPL_9:    .SET   CPL_10   
0664                CPL_10:   .SET   0   
0664                          ;*Macro unroll:  EXIT
0664   1E 0F                  DW   exit   
0666   C3 0D 0F               JP   enter   
0669                POSTPONEWORD:      ; ( headptr -- )
0669   CF                     RST   $08   ; enter forth
066A   B0 12 D0 12 B0 12 D0 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0672   9C 12 1B 12 02 00 CE 00 7E 0F DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
067C   1B 12 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0682   58 03                  DW   zEqual   
0684                          ;*Macro unroll:  cIf
0684   A3 07 00 00            DW   QBRAN,0   
0688                          ;*Macro unroll:  CPL_PUSH $
0688                CPL_COUNT:   .SET   CPL_COUNT + 1   
0688                CPL_10:   .SET   CPL_9   
0688                CPL_9:    .SET   CPL_8   
0688                CPL_8:    .SET   CPL_7   
0688                CPL_7:    .SET   CPL_6   
0688                CPL_6:    .SET   CPL_5   
0688                CPL_5:    .SET   CPL_4   
0688                CPL_4:    .SET   CPL_3   
0688                CPL_3:    .SET   CPL_2   
0688                CPL_2:    .SET   CPL_TOP   
0688                CPL_TOP:   .SET   $   
0688   1B 12 1B 12 F6 0F      DW   lit,lit,comma   
068E   B0 0B F6 0F            DW   tcfa,comma   
0692   1B 12 F6 0F F6 0F      DW   lit,comma,comma   
0698                          ;*Macro unroll:  cElse
0698   C0 07 00 00            DW   BRAN,0   
069C                          ;*Macro unroll:  cBRANCH_FWD
069C                CUR_ADR:   .SET   $   
0686                          .ORG   CPL_TOP - 2   
0686   16 00                  DW   CUR_ADR - CPL_TOP + 2   
069C                          .ORG   CUR_ADR   
069C                CPL_TOP:   .SET   $   
069C   B0 0B F6 0F            DW   tcfa,comma   
06A0                          ;*Macro unroll:  cEndIf
06A0                          ;*Macro unroll:  cBRANCH_FWD
06A0                CUR_ADR:   .SET   $   
069A                          .ORG   CPL_TOP - 2   
069A   06 00                  DW   CUR_ADR - CPL_TOP + 2   
06A0                          .ORG   CUR_ADR   
06A0                          ;*Macro unroll:  CPL_POP
06A0                CPL_COUNT:   .SET   CPL_COUNT - 1   
06A0                CPL_TOP:   .SET   CPL_2   
06A0                CPL_2:    .SET   CPL_3   
06A0                CPL_3:    .SET   CPL_4   
06A0                CPL_4:    .SET   CPL_5   
06A0                CPL_5:    .SET   CPL_6   
06A0                CPL_6:    .SET   CPL_7   
06A0                CPL_7:    .SET   CPL_8   
06A0                CPL_8:    .SET   CPL_9   
06A0                CPL_9:    .SET   CPL_10   
06A0                CPL_10:   .SET   0   
06A0                          ;*Macro unroll:  EXIT
06A0   1E 0F                  DW   exit   
06A2   C3 0D 0F               JP   enter   
06A5                POSTPONELITERAL:      ; ( ptr len -- )
06A5   CF                     RST   $08   ; enter forth
06A6   D0 12                  DW   drop   ; ptr len addr - ptr len
06A8   37 0B 58 03            DW   number,zEqual   ; parse to number
06AC                          ;*Macro unroll:  cif
06AC   A3 07 00 00            DW   QBRAN,0   
06B0                          ;*Macro unroll:  CPL_PUSH $
06B0                CPL_COUNT:   .SET   CPL_COUNT + 1   
06B0                CPL_10:   .SET   CPL_9   
06B0                CPL_9:    .SET   CPL_8   
06B0                CPL_8:    .SET   CPL_7   
06B0                CPL_7:    .SET   CPL_6   
06B0                CPL_6:    .SET   CPL_5   
06B0                CPL_5:    .SET   CPL_4   
06B0                CPL_4:    .SET   CPL_3   
06B0                CPL_3:    .SET   CPL_2   
06B0                CPL_2:    .SET   CPL_TOP   
06B0                CPL_TOP:   .SET   $   
06B0   1B 12 1B 12            DW   lit,lit   ; (val -- val "lit" )
06B4   F6 0F F6 0F            DW   comma,comma   ; compile "lit" val
06B8                          ;*Macro unroll:  cElse
06B8   C0 07 00 00            DW   BRAN,0   
06BC                          ;*Macro unroll:  cBRANCH_FWD
06BC                CUR_ADR:   .SET   $   
06AE                          .ORG   CPL_TOP - 2   
06AE   0E 00                  DW   CUR_ADR - CPL_TOP + 2   
06BC                          .ORG   CUR_ADR   
06BC                CPL_TOP:   .SET   $   
06BC   D0 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
06BE   4E 13                  DW   litstr   ; err != 0, parse error
06C0   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
06CF   F2 0D                  DW   type   
06D1                          ;*Macro unroll:  cEndIf
06D1                          ;*Macro unroll:  cBRANCH_FWD
06D1                CUR_ADR:   .SET   $   
06BA                          .ORG   CPL_TOP - 2   
06BA   17 00                  DW   CUR_ADR - CPL_TOP + 2   
06D1                          .ORG   CUR_ADR   
06D1                          ;*Macro unroll:  CPL_POP
06D1                CPL_COUNT:   .SET   CPL_COUNT - 1   
06D1                CPL_TOP:   .SET   CPL_2   
06D1                CPL_2:    .SET   CPL_3   
06D1                CPL_3:    .SET   CPL_4   
06D1                CPL_4:    .SET   CPL_5   
06D1                CPL_5:    .SET   CPL_6   
06D1                CPL_6:    .SET   CPL_7   
06D1                CPL_7:    .SET   CPL_8   
06D1                CPL_8:    .SET   CPL_9   
06D1                CPL_9:    .SET   CPL_10   
06D1                CPL_10:   .SET   0   
06D1                          ;*Macro unroll:  EXIT
06D1   1E 0F                  DW   exit   
06D3   C3 0D 0F               JP   enter   
06D6                          ;*Macro unroll: CODE "if",2,msk_immed,if
06D6                HEADER_IF:      
06D6   24 06                  DW   link   
06D8                LINK:     .SET   HEADER_if   
06D8   82                     DB   msk_immed + 2   
06D9   69 66                  DB   "if"   
06DB                IF:          
06DB                          ;*Macro unroll:  ENTER
06DB   CF                     RST   $08   
06DC   9D 09                  DW   lbrace   
06DE   1B 12 A3 07 F6 0F      DW   lit,QBRAN,comma   ; compile ?branch
06E4   F2 08 51 0F 9C 12 F6 0F DW   here,fetch,DUPP,comma   ; compile here and also push on stack
06EC                          ;*Macro unroll:  EXIT
06EC   1E 0F                  DW   exit   
06EE   C3 0D 0F               JP   enter   
06F1                          ;*Macro unroll: CODE "else",4,msk_immed,else
06F1                HEADER_ELSE:      
06F1   D6 06                  DW   link   
06F3                LINK:     .SET   HEADER_else   
06F3   84                     DB   msk_immed + 4   
06F4   65 6C 73 65            DB   "else"   
06F8                ELSE:        
06F8                          ;*Macro unroll:  ENTER
06F8   CF                     RST   $08   
06F9   1B 12 C0 07 F6 0F      DW   lit,BRAN,comma   ; definite branch to just over the false-part
06FF   F2 08 51 0F            DW   here,fetch   ; save here on stack
0703   1B 12 00 00 F6 0F      DW   lit,0,comma   ; compile a dummy offset
0709   B0 12                  DW   swap   ; now back-fill the original (if) offset
070B   24 07                  DW   xendif   ; must call xendif not endif
070D                          ;*Macro unroll:  EXIT
070D   1E 0F                  DW   exit   
070F   C3 0D 0F               JP   enter   
0712                          ;*Macro unroll: CODE "endif",5,msk_immed,endif
0712                HEADER_ENDIF:      
0712   F1 06                  DW   link   
0714                LINK:     .SET   HEADER_endif   
0714   85                     DB   msk_immed + 5   
0715   65 6E 64 69 66         DB   "endif"   
071A                ENDIF:       
071A                          ;*Macro unroll:  ENTER
071A   CF                     RST   $08   
071B   24 07                  DW   xendif   ; must call xendif not endif
071D   ED 09                  DW   rbraceExec   
071F                          ;*Macro unroll:  EXIT
071F   1E 0F                  DW   exit   
0721   C3 0D 0F               JP   enter   
0724                XENDIF:      ; must call xendif not endif
0724                          ;*Macro unroll:  ENTER
0724   CF                     RST   $08   
0725   9C 12                  DW   DUPP   
0727   F2 08 51 0F B0 12 1E 01 DW   here,fetch,swap,SUBB   ; calculate the offset from the address saved on the stack
072F   B0 12 30 0F            DW   swap,store   ; store the offset in the back-filled location
0733                          ;*Macro unroll:  EXIT
0733   1E 0F                  DW   exit   
0735   C3 0D 0F               JP   enter   
0738                             ; begin condition while ... repeat
0738                          ;*Macro unroll: CODE "begin",5,msk_immed,begin
0738                HEADER_BEGIN:      
0738   12 07                  DW   link   
073A                LINK:     .SET   HEADER_begin   
073A   85                     DB   msk_immed + 5   
073B   62 65 67 69 6E         DB   "begin"   
0740                BEGIN:       
0740                          ;*Macro unroll:  ENTER
0740   CF                     RST   $08   
0741   9D 09                  DW   lbrace   
0743   F2 08 51 0F            DW   here,fetch   ; save here on stack (here1)
0747                          ;*Macro unroll:  EXIT
0747   1E 0F                  DW   exit   
0749   C3 0D 0F               JP   enter   
074C                          ;*Macro unroll: CODE "while",5,msk_immed,while
074C                HEADER_WHILE:      
074C   38 07                  DW   link   
074E                LINK:     .SET   HEADER_while   
074E   85                     DB   msk_immed + 5   
074F   77 68 69 6C 65         DB   "while"   
0754                WHILE:       
0754                          ;*Macro unroll:  ENTER
0754   CF                     RST   $08   
0755   1B 12 A3 07 F6 0F      DW   lit,QBRAN,comma   ; compile branch on zero
075B   F2 08 51 0F            DW   here,fetch   ; save here in stack (here2)
075F   1B 12 00 00 F6 0F      DW   lit,0,comma   ; compile dummy offset
0765                          ;*Macro unroll:  EXIT
0765   1E 0F                  DW   exit   
0767   C3 0D 0F               JP   enter   
076A                          ;*Macro unroll: CODE "repeat",6,msk_immed,repeat
076A                HEADER_REPEAT:      
076A   4C 07                  DW   link   
076C                LINK:     .SET   HEADER_repeat   
076C   86                     DB   msk_immed + 6   
076D   72 65 70 65 61 74      DB   "repeat"   
0773                REPEAT:      
0773                          ;*Macro unroll:  ENTER
0773   CF                     RST   $08   
0774   1B 12 C0 07 F6 0F      DW   lit,BRAN,comma   ; compile branch
077A   B0 12                  DW   swap   ; tos = here1
077C   F2 08 51 0F 1E 01 F6 0F DW   here,fetch,SUBB,comma   ; compile offset (here1 - here3)
0784   9C 12                  DW   DUPP   
0786   F2 08 51 0F B0 12 1E 01 DW   here,fetch,swap,SUBB   ; compile offset (here2 - here3)
078E   B0 12 30 0F            DW   swap,store   ; save offset in here2
0792   ED 09                  DW   rbraceExec   
0794                          ;*Macro unroll:  EXIT
0794   1E 0F                  DW   exit   
0796   C3 0D 0F               JP   enter   
0799                             ; ?branch   x --              branch if TOS zero
0799                          ;*Macro unroll: CODE "?branch",7,0,QBRAN
0799                HEADER_QBRAN:      
0799   6A 07                  DW   link   
079B                LINK:     .SET   HEADER_QBRAN   
079B   07                     DB   0 + 7   
079C   3F 62 72 61 6E 63 68   DB   "?branch"   
07A3                QBRAN:       
07A3                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
07A3   79                     LD   A,C   ; test old TOS
07A4   B0                     OR   B   
07A5                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
07A5   DD 2B                  DEC   IX   ; POP new TOS
07A7   DD 46 00               LD   B,(IX+0)   
07AA   DD 2B                  DEC   IX   
07AC   DD 4E 00               LD   C,(IX+0)   
07AF   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
07B1   E1                     POP   HL   
07B2   23                     INC   HL   ; else skip inline value
07B3   23                     INC   HL   
07B4                          ;*Macro unroll:  NEXT1
07B4   C3 0E 0F               JP   enter1   
07B7                          ;*Macro unroll: CODE "branch",6,0,BRAN         ; relative branching
07B7                HEADER_BRAN:      ; relative branching
07B7   99 07                  DW   link   
07B9                LINK:     .SET   HEADER_BRAN   
07B9   06                     DB   0 + 6   
07BA   62 72 61 6E 63 68      DB   "branch"   
07C0                BRAN:        
07C0   E1                     POP   HL   ; add the offset to the instruction pointer
07C1   5E                     LD   E,(HL)   
07C2   23                     INC   HL   
07C3   56                     LD   D,(HL)   
07C4   2B                     DEC   HL   
07C5   19                     ADD   HL,DE   
07C6                          ;*Macro unroll:  NEXT1
07C6   C3 0E 0F               JP   enter1   
07C9                             ; ?branch   x --              branch if TOS zero
07C9                          ;*Macro unroll: CODE "?branch1",7,0,QBRAN1
07C9                HEADER_QBRAN1:      
07C9   B7 07                  DW   link   
07CB                LINK:     .SET   HEADER_QBRAN1   
07CB   07                     DB   0 + 7   
07CC   3F 62 72 61 6E 63 68 31 DB   "?branch1"   
07D4                QBRAN1:      
07D4                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
07D4   79                     LD   A,C   ; test old TOS
07D5   B0                     OR   B   
07D6                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
07D6   DD 2B                  DEC   IX   ; POP new TOS
07D8   DD 46 00               LD   B,(IX+0)   
07DB   DD 2B                  DEC   IX   
07DD   DD 4E 00               LD   C,(IX+0)   
07E0   28 10                  JR   z,BRAN1   ; if old TOS=0, branch
07E2   E1                     POP   HL   
07E3   23                     INC   HL   ; else skip inline value
07E4   23                     INC   HL   
07E5                          ;*Macro unroll:  NEXT1
07E5   C3 0E 0F               JP   enter1   
07E8                          ;*Macro unroll: CODE "branch1",6,0,BRAN1         ; relative branching
07E8                HEADER_BRAN1:      ; relative branching
07E8   C9 07                  DW   link   
07EA                LINK:     .SET   HEADER_BRAN1   
07EA   06                     DB   0 + 6   
07EB   62 72 61 6E 63 68 31   DB   "branch1"   
07F2                BRAN1:       
07F2   E1                     POP   HL   ; add the offset to the instruction pointer
07F3   5E                     LD   E,(HL)   
07F4   23                     INC   HL   
07F5   56                     LD   D,(HL)   
07F6   EB                     EX   DE,HL   
07F7                          ;*Macro unroll:  NEXT1
07F7   C3 0E 0F               JP   enter1   
07FA                             ;   next        ( -- )
07FA                             ;               Run time code for the single index loop.
07FA                             ;               : next ( -- ) \ hilevel model
07FA                             ;                 r> r> dup if 1 - >r @ >r exit then drop cell+ >r ;
07FA                          ;*Macro unroll: CODE   'next',4,0,DONXT
07FA                HEADER_DONXT:      
07FA   E8 07                  DW   link   
07FC                LINK:     .SET   HEADER_DONXT   
07FC   04                     DB   0 + 4   
07FD   6E 65 78 74            DB   "next"   
0801                DONXT:       
0801   DD E5                  PUSH   IX   
0803   E1                     POP   HL   ; load rp into HL
0804   7E                     LD   A,(HL)   ; a = low byte of r@
0805   B7                     OR   A   
0806   20 10                  JR   NZ,DECLOW   ; low > 0 goto dec low
0808   23                     INC   HL   
0809   7E                     LD   A,(HL)   ; a = high byte of r@
080A   B7                     OR   A   
080B   20 09                  JR   NZ,DECHILO   ; high > 0 goto dec hi dec lo
080D   23                     INC   HL   
080E   E5                     PUSH   HL   
080F   DD E1                  POP   IX   ; pop r@
0811   13                     INC   DE   ; IP = skip following word
0812   13                     INC   DE   
0813                          ;*Macro unroll:  NEXT                               ; continue
0813   C3 0D 0F               JP   enter   ; continue
0816                DECHILO:      
0816   35                     DEC   (HL)   ; dec high byte of r@
0817   2B                     DEC   HL   
0818                DECLOW:      
0818   35                     DEC   (HL)   ; dec low byte of r@
0819   6B                     LD   L,E   ; DE points to location of loop address
081A   62                     LD   H,D   
081B   5E                     LD   E,(HL)   ; DE points to loop address
081C   23                     INC   HL   
081D   56                     LD   D,(HL)   
081E                          ;*Macro unroll:  NEXT                               ; continue to loop address
081E   C3 0D 0F               JP   enter   ; continue to loop address
0821                          ;*Macro unroll: mCONST "version",7,0,version,1
0821                          ;*Macro unroll: CODE "version",7,0,version
0821                HEADER_VERSION:      
0821   FA 07                  DW   link   
0823                LINK:     .SET   HEADER_version   
0823   07                     DB   0 + 7   
0824   76 65 72 73 69 6F 6E   DB   "version"   
082B                VERSION:      
082B                          ;*Macro unroll:  ppush0 B,C
082B   DD 71 00               LD   (IX+0),C   
082E   DD 23                  INC   IX   
0830   DD 70 00               LD   (IX+0),B   
0833   DD 23                  INC   IX   
0835   01 01 00               LD   BC,1   
0838                          ;*Macro unroll:  NEXT
0838   C3 0D 0F               JP   enter   
083B                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
083B                          ;*Macro unroll: CODE "r0",2,0,rz
083B                HEADER_RZ:      
083B   21 08                  DW   link   
083D                LINK:     .SET   HEADER_rz   
083D   02                     DB   0 + 2   
083E   72 30                  DB   "r0"   
0840                RZ:          
0840                          ;*Macro unroll:  ppush0 B,C
0840   DD 71 00               LD   (IX+0),C   
0843   DD 23                  INC   IX   
0845   DD 70 00               LD   (IX+0),B   
0848   DD 23                  INC   IX   
084A   01 A7 2E               LD   BC,ret_stack   
084D                          ;*Macro unroll:  NEXT
084D   C3 0D 0F               JP   enter   
0850                          ;*Macro unroll: mCONST "msk_immed",9,0,__msk_immed,msk_immed
0850                          ;*Macro unroll: CODE "msk_immed",9,0,__msk_immed
0850                HEADER___MSK_IMMED:      
0850   3B 08                  DW   link   
0852                LINK:     .SET   HEADER___msk_immed   
0852   09                     DB   0 + 9   
0853   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
085C                __MSK_IMMED:      
085C                          ;*Macro unroll:  ppush0 B,C
085C   DD 71 00               LD   (IX+0),C   
085F   DD 23                  INC   IX   
0861   DD 70 00               LD   (IX+0),B   
0864   DD 23                  INC   IX   
0866   01 80 00               LD   BC,msk_immed   
0869                          ;*Macro unroll:  NEXT
0869   C3 0D 0F               JP   enter   
086C                          ;*Macro unroll: mCONST "msk_hidden",10,0,__msk_hidden,msk_hidden
086C                          ;*Macro unroll: CODE "msk_hidden",10,0,__msk_hidden
086C                HEADER___MSK_HIDDEN:      
086C   50 08                  DW   link   
086E                LINK:     .SET   HEADER___msk_hidden   
086E   0A                     DB   0 + 10   
086F   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
0879                __MSK_HIDDEN:      
0879                          ;*Macro unroll:  ppush0 B,C
0879   DD 71 00               LD   (IX+0),C   
087C   DD 23                  INC   IX   
087E   DD 70 00               LD   (IX+0),B   
0881   DD 23                  INC   IX   
0883   01 40 00               LD   BC,msk_hidden   
0886                          ;*Macro unroll:  NEXT
0886   C3 0D 0F               JP   enter   
0889                          ;*Macro unroll: mCONST "msk_length",10,0,__msk_length,msk_length
0889                          ;*Macro unroll: CODE "msk_length",10,0,__msk_length
0889                HEADER___MSK_LENGTH:      
0889   6C 08                  DW   link   
088B                LINK:     .SET   HEADER___msk_length   
088B   0A                     DB   0 + 10   
088C   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
0896                __MSK_LENGTH:      
0896                          ;*Macro unroll:  ppush0 B,C
0896   DD 71 00               LD   (IX+0),C   
0899   DD 23                  INC   IX   
089B   DD 70 00               LD   (IX+0),B   
089E   DD 23                  INC   IX   
08A0   01 3F 00               LD   BC,msk_length   
08A3                          ;*Macro unroll:  NEXT
08A3   C3 0D 0F               JP   enter   
08A6                          ;*Macro unroll: mCONST "TRUE",4,0,TRUE,-1
08A6                          ;*Macro unroll: CODE "TRUE",4,0,TRUE
08A6                HEADER_TRUE:      
08A6   89 08                  DW   link   
08A8                LINK:     .SET   HEADER_TRUE   
08A8   04                     DB   0 + 4   
08A9   54 52 55 45            DB   "TRUE"   
08AD                TRUE:        
08AD                          ;*Macro unroll:  ppush0 B,C
08AD   DD 71 00               LD   (IX+0),C   
08B0   DD 23                  INC   IX   
08B2   DD 70 00               LD   (IX+0),B   
08B5   DD 23                  INC   IX   
08B7   01 FF FF               LD   BC,-1   
08BA                          ;*Macro unroll:  NEXT
08BA   C3 0D 0F               JP   enter   
08BD                          ;*Macro unroll: mCONST "FALSE",5,0,FALSE,0
08BD                          ;*Macro unroll: CODE "FALSE",5,0,FALSE
08BD                HEADER_FALSE:      
08BD   A6 08                  DW   link   
08BF                LINK:     .SET   HEADER_FALSE   
08BF   05                     DB   0 + 5   
08C0   46 41 4C 53 45         DB   "FALSE"   
08C5                FALSE:       
08C5                          ;*Macro unroll:  ppush0 B,C
08C5   DD 71 00               LD   (IX+0),C   
08C8   DD 23                  INC   IX   
08CA   DD 70 00               LD   (IX+0),B   
08CD   DD 23                  INC   IX   
08CF   01 00 00               LD   BC,0   
08D2                          ;*Macro unroll:  NEXT
08D2   C3 0D 0F               JP   enter   
08D5                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
08D5                          ;*Macro unroll: CODE "pad",3,0,pad
08D5                HEADER_PAD:      
08D5   BD 08                  DW   link   
08D7                LINK:     .SET   HEADER_pad   
08D7   03                     DB   0 + 3   
08D8   70 61 64               DB   "pad"   
08DB                PAD:         
08DB                          ;*Macro unroll:  ppush0 B,C
08DB   DD 71 00               LD   (IX+0),C   
08DE   DD 23                  INC   IX   
08E0   DD 70 00               LD   (IX+0),B   
08E3   DD 23                  INC   IX   
08E5   01 4D 31               LD   BC,var_pad   
08E8                          ;*Macro unroll:  NEXT
08E8   C3 0D 0F               JP   enter   
08EB                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
08EB                          ;*Macro unroll: CODE "here",4,0,here
08EB                HEADER_HERE:      
08EB   D5 08                  DW   link   
08ED                LINK:     .SET   HEADER_here   
08ED   04                     DB   0 + 4   
08EE   68 65 72 65            DB   "here"   
08F2                HERE:        
08F2                          ;*Macro unroll:  ppush0 B,C
08F2   DD 71 00               LD   (IX+0),C   
08F5   DD 23                  INC   IX   
08F7   DD 70 00               LD   (IX+0),B   
08FA   DD 23                  INC   IX   
08FC   01 51 32               LD   BC,var_here   
08FF                          ;*Macro unroll:  NEXT
08FF   C3 0D 0F               JP   enter   
0902                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
0902                          ;*Macro unroll: CODE "intp_stop",9,0,intp_stop
0902                HEADER_INTP_STOP:      
0902   EB 08                  DW   link   
0904                LINK:     .SET   HEADER_intp_stop   
0904   09                     DB   0 + 9   
0905   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
090E                INTP_STOP:      
090E                          ;*Macro unroll:  ppush0 B,C
090E   DD 71 00               LD   (IX+0),C   
0911   DD 23                  INC   IX   
0913   DD 70 00               LD   (IX+0),B   
0916   DD 23                  INC   IX   
0918   01 53 32               LD   BC,var_intp_stop   
091B                          ;*Macro unroll:  NEXT
091B   C3 0D 0F               JP   enter   
091E                          ;*Macro unroll: mVAR "state",5,0,state, var_state
091E                          ;*Macro unroll: CODE "state",5,0,state
091E                HEADER_STATE:      
091E   02 09                  DW   link   
0920                LINK:     .SET   HEADER_state   
0920   05                     DB   0 + 5   
0921   73 74 61 74 65         DB   "state"   
0926                STATE:       
0926                          ;*Macro unroll:  ppush0 B,C
0926   DD 71 00               LD   (IX+0),C   
0929   DD 23                  INC   IX   
092B   DD 70 00               LD   (IX+0),B   
092E   DD 23                  INC   IX   
0930   01 55 32               LD   BC,var_state   
0933                          ;*Macro unroll:  NEXT
0933   C3 0D 0F               JP   enter   
0936                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
0936                          ;*Macro unroll: CODE "nesting",7,0,nesting
0936                HEADER_NESTING:      
0936   1E 09                  DW   link   
0938                LINK:     .SET   HEADER_nesting   
0938   07                     DB   0 + 7   
0939   6E 65 73 74 69 6E 67   DB   "nesting"   
0940                NESTING:      
0940                          ;*Macro unroll:  ppush0 B,C
0940   DD 71 00               LD   (IX+0),C   
0943   DD 23                  INC   IX   
0945   DD 70 00               LD   (IX+0),B   
0948   DD 23                  INC   IX   
094A   01 57 32               LD   BC,var_nesting   
094D                          ;*Macro unroll:  NEXT
094D   C3 0D 0F               JP   enter   
0950                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
0950                          ;*Macro unroll: CODE "sp0",3,0,sp0
0950                HEADER_SP0:      
0950   36 09                  DW   link   
0952                LINK:     .SET   HEADER_sp0   
0952   03                     DB   0 + 3   
0953   73 70 30               DB   "sp0"   
0956                SP0:         
0956                          ;*Macro unroll:  ppush0 B,C
0956   DD 71 00               LD   (IX+0),C   
0959   DD 23                  INC   IX   
095B   DD 70 00               LD   (IX+0),B   
095E   DD 23                  INC   IX   
0960   01 59 32               LD   BC,var_sp0   
0963                          ;*Macro unroll:  NEXT
0963   C3 0D 0F               JP   enter   
0966                          ;*Macro unroll: mVAR "base",4,0,base, var_base
0966                          ;*Macro unroll: CODE "base",4,0,base
0966                HEADER_BASE:      
0966   50 09                  DW   link   
0968                LINK:     .SET   HEADER_base   
0968   04                     DB   0 + 4   
0969   62 61 73 65            DB   "base"   
096D                BASE:        
096D                          ;*Macro unroll:  ppush0 B,C
096D   DD 71 00               LD   (IX+0),C   
0970   DD 23                  INC   IX   
0972   DD 70 00               LD   (IX+0),B   
0975   DD 23                  INC   IX   
0977   01 5B 32               LD   BC,var_base   
097A                          ;*Macro unroll:  NEXT
097A   C3 0D 0F               JP   enter   
097D                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
097D                          ;*Macro unroll: CODE "latestStr",6,0,latestStr
097D                HEADER_LATESTSTR:      
097D   66 09                  DW   link   
097F                LINK:     .SET   HEADER_latestStr   
097F   06                     DB   0 + 6   
0980   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
0989                LATESTSTR:      
0989                          ;*Macro unroll:  ppush0 B,C
0989   DD 71 00               LD   (IX+0),C   
098C   DD 23                  INC   IX   
098E   DD 70 00               LD   (IX+0),B   
0991   DD 23                  INC   IX   
0993   01 5D 32               LD   BC,var_latest_str   
0996                          ;*Macro unroll:  NEXT
0996   C3 0D 0F               JP   enter   
0999                          ;*Macro unroll: CODE "{",1,msk_immed,lbrace
0999                HEADER_LBRACE:      
0999   7D 09                  DW   link   
099B                LINK:     .SET   HEADER_lbrace   
099B   81                     DB   msk_immed + 1   
099C   7B                     DB   "{"   
099D                LBRACE:      
099D                          ;*Macro unroll:  ENTER
099D   CF                     RST   $08   
099E   26 09 51 0F 58 03      DW   state,fetch,ZEQUAL   
09A4   40 09 51 0F 58 03      DW   nesting,fetch,ZEQUAL   
09AA   86 00                  DW   ANDD   
09AC                          ;*Macro unroll:  cIf
09AC   A3 07 00 00            DW   QBRAN,0   
09B0                          ;*Macro unroll:  CPL_PUSH $
09B0                CPL_COUNT:   .SET   CPL_COUNT + 1   
09B0                CPL_10:   .SET   CPL_9   
09B0                CPL_9:    .SET   CPL_8   
09B0                CPL_8:    .SET   CPL_7   
09B0                CPL_7:    .SET   CPL_6   
09B0                CPL_6:    .SET   CPL_5   
09B0                CPL_5:    .SET   CPL_4   
09B0                CPL_4:    .SET   CPL_3   
09B0                CPL_3:    .SET   CPL_2   
09B0                CPL_2:    .SET   CPL_TOP   
09B0                CPL_TOP:   .SET   $   
09B0   F2 08 51 0F            DW   here,fetch   ; TOS = here
09B4   1B 12 CF 00 12 10      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
09BA                          ;*Macro unroll:  cEndIf
09BA                          ;*Macro unroll:  cBRANCH_FWD
09BA                CUR_ADR:   .SET   $   
09AE                          .ORG   CPL_TOP - 2   
09AE   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
09BA                          .ORG   CUR_ADR   
09BA                          ;*Macro unroll:  CPL_POP
09BA                CPL_COUNT:   .SET   CPL_COUNT - 1   
09BA                CPL_TOP:   .SET   CPL_2   
09BA                CPL_2:    .SET   CPL_3   
09BA                CPL_3:    .SET   CPL_4   
09BA                CPL_4:    .SET   CPL_5   
09BA                CPL_5:    .SET   CPL_6   
09BA                CPL_6:    .SET   CPL_7   
09BA                CPL_7:    .SET   CPL_8   
09BA                CPL_8:    .SET   CPL_9   
09BA                CPL_9:    .SET   CPL_10   
09BA                CPL_10:   .SET   0   
09BA   D7 0D                  DW   nestPlus   ; increase nesting
09BC                          ;*Macro unroll:  EXIT                             ; return from the function.
09BC   1E 0F                  DW   exit   ; return from the function.
09BE   C3 0D 0F               JP   enter   
09C1                          ;*Macro unroll: CODE "}",1,msk_immed,rbrace
09C1                HEADER_RBRACE:      
09C1   99 09                  DW   link   
09C3                LINK:     .SET   HEADER_rbrace   
09C3   81                     DB   msk_immed + 1   
09C4   7D                     DB   "}"   
09C5                RBRACE:      
09C5                          ;*Macro unroll:  ENTER
09C5   CF                     RST   $08   
09C6   E1 0D                  DW   nestMinus   ; reduce nesting
09C8   26 09 51 0F 58 03      DW   state,fetch,ZEQUAL   
09CE   40 09 51 0F 58 03      DW   nesting,fetch,ZEQUAL   
09D4   86 00                  DW   ANDD   
09D6                          ;*Macro unroll:  cIf
09D6   A3 07 00 00            DW   QBRAN,0   
09DA                          ;*Macro unroll:  CPL_PUSH $
09DA                CPL_COUNT:   .SET   CPL_COUNT + 1   
09DA                CPL_10:   .SET   CPL_9   
09DA                CPL_9:    .SET   CPL_8   
09DA                CPL_8:    .SET   CPL_7   
09DA                CPL_7:    .SET   CPL_6   
09DA                CPL_6:    .SET   CPL_5   
09DA                CPL_5:    .SET   CPL_4   
09DA                CPL_4:    .SET   CPL_3   
09DA                CPL_3:    .SET   CPL_2   
09DA                CPL_2:    .SET   CPL_TOP   
09DA                CPL_TOP:   .SET   $   
09DA   1B 12 1E 0F F6 0F      DW   lit,exit,comma   ; append exit (so the word will return).
09E0                          ;*Macro unroll:  cEndIf
09E0                          ;*Macro unroll:  cBRANCH_FWD
09E0                CUR_ADR:   .SET   $   
09D8                          .ORG   CPL_TOP - 2   
09D8   08 00                  DW   CUR_ADR - CPL_TOP + 2   
09E0                          .ORG   CUR_ADR   
09E0                          ;*Macro unroll:  CPL_POP
09E0                CPL_COUNT:   .SET   CPL_COUNT - 1   
09E0                CPL_TOP:   .SET   CPL_2   
09E0                CPL_2:    .SET   CPL_3   
09E0                CPL_3:    .SET   CPL_4   
09E0                CPL_4:    .SET   CPL_5   
09E0                CPL_5:    .SET   CPL_6   
09E0                CPL_6:    .SET   CPL_7   
09E0                CPL_7:    .SET   CPL_8   
09E0                CPL_8:    .SET   CPL_9   
09E0                CPL_9:    .SET   CPL_10   
09E0                CPL_10:   .SET   0   
09E0                          ;*Macro unroll:  EXIT                             ; return from the function.
09E0   1E 0F                  DW   exit   ; return from the function.
09E2   C3 0D 0F               JP   enter   
09E5                          ;*Macro unroll: CODE "}exec",5,msk_immed,rbraceExec
09E5                HEADER_RBRACEEXEC:      
09E5   C1 09                  DW   link   
09E7                LINK:     .SET   HEADER_rbraceExec   
09E7   85                     DB   msk_immed + 5   
09E8   7D 65 78 65 63         DB   "}exec"   
09ED                RBRACEEXEC:      
09ED                          ;*Macro unroll:  ENTER
09ED   CF                     RST   $08   
09EE   C5 09                  DW   rbrace   
09F0   26 09 51 0F 58 03      DW   state,fetch,ZEQUAL   
09F6   40 09 51 0F 58 03      DW   nesting,fetch,ZEQUAL   
09FC   86 00                  DW   ANDD   
09FE                          ;*Macro unroll:  cIf
09FE   A3 07 00 00            DW   QBRAN,0   
0A02                          ;*Macro unroll:  CPL_PUSH $
0A02                CPL_COUNT:   .SET   CPL_COUNT + 1   
0A02                CPL_10:   .SET   CPL_9   
0A02                CPL_9:    .SET   CPL_8   
0A02                CPL_8:    .SET   CPL_7   
0A02                CPL_7:    .SET   CPL_6   
0A02                CPL_6:    .SET   CPL_5   
0A02                CPL_5:    .SET   CPL_4   
0A02                CPL_4:    .SET   CPL_3   
0A02                CPL_3:    .SET   CPL_2   
0A02                CPL_2:    .SET   CPL_TOP   
0A02                CPL_TOP:   .SET   $   
0A02   9C 12                  DW   DUPP   
0A04   F2 08 30 0F            DW   here,store   
0A08   D0 0B                  DW   execute   
0A0A                          ;*Macro unroll:  cEndIf
0A0A                          ;*Macro unroll:  cBRANCH_FWD
0A0A                CUR_ADR:   .SET   $   
0A00                          .ORG   CPL_TOP - 2   
0A00   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0A0A                          .ORG   CUR_ADR   
0A0A                          ;*Macro unroll:  CPL_POP
0A0A                CPL_COUNT:   .SET   CPL_COUNT - 1   
0A0A                CPL_TOP:   .SET   CPL_2   
0A0A                CPL_2:    .SET   CPL_3   
0A0A                CPL_3:    .SET   CPL_4   
0A0A                CPL_4:    .SET   CPL_5   
0A0A                CPL_5:    .SET   CPL_6   
0A0A                CPL_6:    .SET   CPL_7   
0A0A                CPL_7:    .SET   CPL_8   
0A0A                CPL_8:    .SET   CPL_9   
0A0A                CPL_9:    .SET   CPL_10   
0A0A                CPL_10:   .SET   0   
0A0A                          ;*Macro unroll:  EXIT                             ; return from the function.
0A0A   1E 0F                  DW   exit   ; return from the function.
0A0C   C3 0D 0F               JP   enter   
0A0F                          ;*Macro unroll: CODE ".",1,0,DOT                 ; print top of stack in BASE
0A0F                HEADER_DOT:      ; print top of stack in BASE
0A0F   E5 09                  DW   link   
0A11                LINK:     .SET   HEADER_DOT   
0A11   01                     DB   0 + 1   
0A12   2E                     DB   "."   
0A13                DOT:         
0A13   E5                     PUSH   HL   
0A14   D5                     PUSH   DE   
0A15   C5                     PUSH   BC   
0A16                          ;*Macro unroll:  loadWord H,L, B,C
0A16   69                     LD   L,C   
0A17   60                     LD   H,B   
0A18   3A 5B 32               LD   A,(VAR_BASE)   
0A1B   4F                     LD   C,A   
0A1C   11 CD 30               LD   DE,wordBuf   
0A1F   CD 51 0A               CALL   formatNum   
0A22   CD FA 11               CALL   printStr   
0A25   CD 0D 12               CALL   printSpace   
0A28   C1                     POP   BC   
0A29   D1                     POP   DE   
0A2A   E1                     POP   HL   
0A2B                          ;*Macro unroll:  ppop0 B,C
0A2B   DD 2B                  DEC   IX   
0A2D   DD 46 00               LD   B,(IX+0)   
0A30   DD 2B                  DEC   IX   
0A32   DD 4E 00               LD   C,(IX+0)   
0A35                          ;*Macro unroll:  NEXT
0A35   C3 0D 0F               JP   enter   
0A38                PRINTNUM:      
0A38   E5                     PUSH   HL   
0A39   D5                     PUSH   DE   
0A3A   C5                     PUSH   BC   
0A3B                          ;*Macro unroll:  loadWord H,L, B,C
0A3B   69                     LD   L,C   
0A3C   60                     LD   H,B   
0A3D   3A 5B 32               LD   A,(VAR_BASE)   
0A40   4F                     LD   C,A   
0A41   11 CD 30               LD   DE,wordBuf   
0A44   CD 51 0A               CALL   formatNum   
0A47   CD FA 11               CALL   printStr   
0A4A   CD 0D 12               CALL   printSpace   
0A4D   C1                     POP   BC   
0A4E   D1                     POP   DE   
0A4F   E1                     POP   HL   
0A50   C9                     RET      
0A51                             ; 
0A51                             ; HL = data, DE = ptr to lineBuf, C = base ***
0A51                             ; DE = ptr to string, BC = length
0A51                             ; 
0A51                FORMATNUM:      
0A51                             ; Detect sign of HL.
0A51   CB 7C                  BIT   7,H   
0A53                          ;*Macro unroll:  _if nz
0A53   C2 59 0A               JP   nz,L_M_1349S42   
0A56   C3 56 0A               JP   $   
0A59                          ;*Macro unroll:  STRUC_PUSH $
0A59                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A59                STRUC_12:   .SET   STRUC_11   
0A59                STRUC_11:   .SET   STRUC_10   
0A59                STRUC_10:   .SET   STRUC_9   
0A59                STRUC_9:   .SET   STRUC_8   
0A59                STRUC_8:   .SET   STRUC_7   
0A59                STRUC_7:   .SET   STRUC_6   
0A59                STRUC_6:   .SET   STRUC_5   
0A59                STRUC_5:   .SET   STRUC_4   
0A59                STRUC_4:   .SET   STRUC_3   
0A59                STRUC_3:   .SET   STRUC_2   
0A59                STRUC_2:   .SET   STRUC_TOP   
0A59                STRUC_TOP:   .SET   $   
0A59                L_M_1349S42:      
0A59                             ; HL is negative. Output "-" to string and negate HL.
0A59   3E 2D                  LD   A,"-"   
0A5B   12                     LD   (DE),A   
0A5C   13                     INC   DE   
0A5D   CD B9 03               CALL   negateNum   
0A60                          ;*Macro unroll:  _endif
0A60                          ;*Macro unroll:  STRUC_FWD
0A60                CUR_ADR:   .SET   $   
0A57                          .ORG   STRUC_TOP - 2   
0A57   60 0A                  DW   CUR_ADR   
0A60                          .ORG   CUR_ADR   
0A60                          ;*Macro unroll:  STRUC_POP
0A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A60                STRUC_TOP:   .SET   STRUC_2   
0A60                STRUC_2:   .SET   STRUC_3   
0A60                STRUC_3:   .SET   STRUC_4   
0A60                STRUC_4:   .SET   STRUC_5   
0A60                STRUC_5:   .SET   STRUC_6   
0A60                STRUC_6:   .SET   STRUC_7   
0A60                STRUC_7:   .SET   STRUC_8   
0A60                STRUC_8:   .SET   STRUC_9   
0A60                STRUC_9:   .SET   STRUC_10   
0A60                STRUC_10:   .SET   STRUC_11   
0A60                STRUC_11:   .SET   STRUC_12   
0A60                STRUC_12:   .SET   0   
0A60   06 00                  LD   B,0   ; B will count character length of number
0A62                          ;*Macro unroll:  _do
0A62   18 03                  JR   L_M_1357S51   
0A64   C3 64 0A               JP   $   
0A67                          ;*Macro unroll:  DLOOP_PUSH $
0A67                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A67                DLOOP_12:   .SET   DLOOP_11   
0A67                DLOOP_11:   .SET   DLOOP_10   
0A67                DLOOP_10:   .SET   DLOOP_9   
0A67                DLOOP_9:   .SET   DLOOP_8   
0A67                DLOOP_8:   .SET   DLOOP_7   
0A67                DLOOP_7:   .SET   DLOOP_6   
0A67                DLOOP_6:   .SET   DLOOP_5   
0A67                DLOOP_5:   .SET   DLOOP_4   
0A67                DLOOP_4:   .SET   DLOOP_3   
0A67                DLOOP_3:   .SET   DLOOP_2   
0A67                DLOOP_2:   .SET   DLOOP_TOP   
0A67                DLOOP_TOP:   .SET   $   
0A67                L_M_1357S51:      
0A67   C5                     PUSH   BC   
0A68   CD C1 03               CALL   divideWordByByte   ; HL = HL / A, A = remainder
0A6B   C1                     POP   BC   
0A6C   F5                     PUSH   AF   
0A6D   04                     INC   B   
0A6E                          ;*Macro unroll:  checkZeroWord H,L
0A6E   7D                     LD   A,L   
0A6F   B4                     OR   H   
0A70                          ;*Macro unroll:  _until z
0A70   CA 64 0A               JP   z,DLOOP_TOP - 3   
0A73                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A73                CUR_ADR:   .SET   $   ; needed?
0A65                          .ORG   DLOOP_TOP - 2   
0A65   73 0A                  DW   CUR_ADR   
0A73                          .ORG   CUR_ADR   
0A73                          ;*Macro unroll:  _enddo
0A73   C3 67 0A               JP   DLOOP_TOP   
0A76                          ;*Macro unroll:  DLOOP_FWD
0A76                CUR_ADR:   .SET   $   
0A65                          .ORG   DLOOP_TOP - 2   
0A65   76 0A                  DW   CUR_ADR   
0A76                          .ORG   CUR_ADR   
0A76                          ;*Macro unroll:  DLOOP_POP
0A76                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A76                DLOOP_TOP:   .SET   DLOOP_2   
0A76                DLOOP_2:   .SET   DLOOP_3   
0A76                DLOOP_3:   .SET   DLOOP_4   
0A76                DLOOP_4:   .SET   DLOOP_5   
0A76                DLOOP_5:   .SET   DLOOP_6   
0A76                DLOOP_6:   .SET   DLOOP_7   
0A76                DLOOP_7:   .SET   DLOOP_8   
0A76                DLOOP_8:   .SET   DLOOP_9   
0A76                DLOOP_9:   .SET   DLOOP_10   
0A76                DLOOP_10:   .SET   DLOOP_11   
0A76                DLOOP_11:   .SET   DLOOP_12   
0A76                DLOOP_12:   .SET   0   
0A76                          ;*Macro unroll:  _do
0A76   18 03                  JR   L_M_1366S60   
0A78   C3 78 0A               JP   $   
0A7B                          ;*Macro unroll:  DLOOP_PUSH $
0A7B                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A7B                DLOOP_12:   .SET   DLOOP_11   
0A7B                DLOOP_11:   .SET   DLOOP_10   
0A7B                DLOOP_10:   .SET   DLOOP_9   
0A7B                DLOOP_9:   .SET   DLOOP_8   
0A7B                DLOOP_8:   .SET   DLOOP_7   
0A7B                DLOOP_7:   .SET   DLOOP_6   
0A7B                DLOOP_6:   .SET   DLOOP_5   
0A7B                DLOOP_5:   .SET   DLOOP_4   
0A7B                DLOOP_4:   .SET   DLOOP_3   
0A7B                DLOOP_3:   .SET   DLOOP_2   
0A7B                DLOOP_2:   .SET   DLOOP_TOP   
0A7B                DLOOP_TOP:   .SET   $   
0A7B                L_M_1366S60:      
0A7B   F1                     POP   AF   
0A7C   C6 30                  ADD   A,$30   ; convert digit to ASCII
0A7E   FE 3A                  CP   $3A   
0A80                          ;*Macro unroll:  _if nc
0A80   D2 86 0A               JP   nc,L_M_1370S64   
0A83   C3 83 0A               JP   $   
0A86                          ;*Macro unroll:  STRUC_PUSH $
0A86                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A86                STRUC_12:   .SET   STRUC_11   
0A86                STRUC_11:   .SET   STRUC_10   
0A86                STRUC_10:   .SET   STRUC_9   
0A86                STRUC_9:   .SET   STRUC_8   
0A86                STRUC_8:   .SET   STRUC_7   
0A86                STRUC_7:   .SET   STRUC_6   
0A86                STRUC_6:   .SET   STRUC_5   
0A86                STRUC_5:   .SET   STRUC_4   
0A86                STRUC_4:   .SET   STRUC_3   
0A86                STRUC_3:   .SET   STRUC_2   
0A86                STRUC_2:   .SET   STRUC_TOP   
0A86                STRUC_TOP:   .SET   $   
0A86                L_M_1370S64:      
0A86   C6 07                  ADD   A,7   
0A88                          ;*Macro unroll:  _endif
0A88                          ;*Macro unroll:  STRUC_FWD
0A88                CUR_ADR:   .SET   $   
0A84                          .ORG   STRUC_TOP - 2   
0A84   88 0A                  DW   CUR_ADR   
0A88                          .ORG   CUR_ADR   
0A88                          ;*Macro unroll:  STRUC_POP
0A88                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A88                STRUC_TOP:   .SET   STRUC_2   
0A88                STRUC_2:   .SET   STRUC_3   
0A88                STRUC_3:   .SET   STRUC_4   
0A88                STRUC_4:   .SET   STRUC_5   
0A88                STRUC_5:   .SET   STRUC_6   
0A88                STRUC_6:   .SET   STRUC_7   
0A88                STRUC_7:   .SET   STRUC_8   
0A88                STRUC_8:   .SET   STRUC_9   
0A88                STRUC_9:   .SET   STRUC_10   
0A88                STRUC_10:   .SET   STRUC_11   
0A88                STRUC_11:   .SET   STRUC_12   
0A88                STRUC_12:   .SET   0   
0A88   12                     LD   (DE),A   
0A89   13                     INC   DE   
0A8A                          ;*Macro unroll:  _djnz
0A8A   10 EF                  DJNZ   DLOOP_TOP   
0A8C                          ;*Macro unroll:  DLOOP_FWD
0A8C                CUR_ADR:   .SET   $   
0A79                          .ORG   DLOOP_TOP - 2   
0A79   8C 0A                  DW   CUR_ADR   
0A8C                          .ORG   CUR_ADR   
0A8C                          ;*Macro unroll:  DLOOP_POP
0A8C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A8C                DLOOP_TOP:   .SET   DLOOP_2   
0A8C                DLOOP_2:   .SET   DLOOP_3   
0A8C                DLOOP_3:   .SET   DLOOP_4   
0A8C                DLOOP_4:   .SET   DLOOP_5   
0A8C                DLOOP_5:   .SET   DLOOP_6   
0A8C                DLOOP_6:   .SET   DLOOP_7   
0A8C                DLOOP_7:   .SET   DLOOP_8   
0A8C                DLOOP_8:   .SET   DLOOP_9   
0A8C                DLOOP_9:   .SET   DLOOP_10   
0A8C                DLOOP_10:   .SET   DLOOP_11   
0A8C                DLOOP_11:   .SET   DLOOP_12   
0A8C                DLOOP_12:   .SET   0   
0A8C   21 CD 30               LD   HL,wordBuf   ;calc length
0A8F   EB                     EX   DE,HL   
0A90   B7                     OR   A   
0A91   ED 52                  SBC   HL,DE   
0A93                          ;*Macro unroll:  loadWord B,C, H,L
0A93   4D                     LD   C,L   
0A94   44                     LD   B,H   
0A95   C9                     RET      
0A96                             ; 
0A96                             ; toNumber -  converts string to number in the ***
0A96                             ; base strored in VAR_BASE
0A96                             ; 
0A96                             ; params: HL = string address, BC = string length
0A96                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
0A96                             ; destroys: AF
0A96                             ; 
0A96                TONUMBER:      
0A96   FD E5                  PUSH   IY   ; save regs
0A98   E5                     PUSH   HL   
0A99   E5                     PUSH   HL   ; IY = HL
0A9A   FD E1                  POP   IY   
0A9C   11 00 00               LD   DE,0   ; 16 bit accum
0A9F   21 00 00               LD   HL,0   ; 8 bit char
0AA2                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
0AA2   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
0AA3   B0                     OR   B   
0AA4                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
0AA4   CA AA 0A               JP   z,L_M_1398S97   ; trying to parse a zero-length string is an error, But will return 0.
0AA7   C3 A7 0A               JP   $   
0AAA                          ;*Macro unroll:  STRUC_PUSH $
0AAA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AAA                STRUC_12:   .SET   STRUC_11   
0AAA                STRUC_11:   .SET   STRUC_10   
0AAA                STRUC_10:   .SET   STRUC_9   
0AAA                STRUC_9:   .SET   STRUC_8   
0AAA                STRUC_8:   .SET   STRUC_7   
0AAA                STRUC_7:   .SET   STRUC_6   
0AAA                STRUC_6:   .SET   STRUC_5   
0AAA                STRUC_5:   .SET   STRUC_4   
0AAA                STRUC_4:   .SET   STRUC_3   
0AAA                STRUC_3:   .SET   STRUC_2   
0AAA                STRUC_2:   .SET   STRUC_TOP   
0AAA                STRUC_TOP:   .SET   $   
0AAA                L_M_1398S97:      
0AAA   E1                     POP   HL   
0AAB   FD E1                  POP   IY   
0AAD   C9                     RET      ; de = number, BC = err
0AAE                          ;*Macro unroll:  _endif
0AAE                          ;*Macro unroll:  STRUC_FWD
0AAE                CUR_ADR:   .SET   $   
0AA8                          .ORG   STRUC_TOP - 2   
0AA8   AE 0A                  DW   CUR_ADR   
0AAE                          .ORG   CUR_ADR   
0AAE                          ;*Macro unroll:  STRUC_POP
0AAE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AAE                STRUC_TOP:   .SET   STRUC_2   
0AAE                STRUC_2:   .SET   STRUC_3   
0AAE                STRUC_3:   .SET   STRUC_4   
0AAE                STRUC_4:   .SET   STRUC_5   
0AAE                STRUC_5:   .SET   STRUC_6   
0AAE                STRUC_6:   .SET   STRUC_7   
0AAE                STRUC_7:   .SET   STRUC_8   
0AAE                STRUC_8:   .SET   STRUC_9   
0AAE                STRUC_9:   .SET   STRUC_10   
0AAE                STRUC_10:   .SET   STRUC_11   
0AAE                STRUC_11:   .SET   STRUC_12   
0AAE                STRUC_12:   .SET   0   
0AAE                             ; Check if first character is "-".
0AAE   FD 7E 00               LD   A,(IY)   ; l = first character in string
0AB1   FD 23                  INC   IY   
0AB3   D5                     PUSH   DE   ; push 0 on stack
0AB4   FE 2D                  CP   "-"   ; negative number?
0AB6                          ;*Macro unroll:  _if z
0AB6   CA BC 0A               JP   z,L_M_1408S107   
0AB9   C3 B9 0A               JP   $   
0ABC                          ;*Macro unroll:  STRUC_PUSH $
0ABC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0ABC                STRUC_12:   .SET   STRUC_11   
0ABC                STRUC_11:   .SET   STRUC_10   
0ABC                STRUC_10:   .SET   STRUC_9   
0ABC                STRUC_9:   .SET   STRUC_8   
0ABC                STRUC_8:   .SET   STRUC_7   
0ABC                STRUC_7:   .SET   STRUC_6   
0ABC                STRUC_6:   .SET   STRUC_5   
0ABC                STRUC_5:   .SET   STRUC_4   
0ABC                STRUC_4:   .SET   STRUC_3   
0ABC                STRUC_3:   .SET   STRUC_2   
0ABC                STRUC_2:   .SET   STRUC_TOP   
0ABC                STRUC_TOP:   .SET   $   
0ABC                L_M_1408S107:      
0ABC   D1                     POP   DE   
0ABD   21 01 00               LD   HL,1   
0AC0   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
0AC1   0B                     DEC   BC   
0AC2                          ;*Macro unroll:  checkZeroWord B,C
0AC2   79                     LD   A,C   
0AC3   B0                     OR   B   
0AC4                          ;*Macro unroll:  _if z
0AC4   CA CA 0A               JP   z,L_M_1414S113   
0AC7   C3 C7 0A               JP   $   
0ACA                          ;*Macro unroll:  STRUC_PUSH $
0ACA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0ACA                STRUC_12:   .SET   STRUC_11   
0ACA                STRUC_11:   .SET   STRUC_10   
0ACA                STRUC_10:   .SET   STRUC_9   
0ACA                STRUC_9:   .SET   STRUC_8   
0ACA                STRUC_8:   .SET   STRUC_7   
0ACA                STRUC_7:   .SET   STRUC_6   
0ACA                STRUC_6:   .SET   STRUC_5   
0ACA                STRUC_5:   .SET   STRUC_4   
0ACA                STRUC_4:   .SET   STRUC_3   
0ACA                STRUC_3:   .SET   STRUC_2   
0ACA                STRUC_2:   .SET   STRUC_TOP   
0ACA                STRUC_TOP:   .SET   $   
0ACA                L_M_1414S113:      
0ACA   E1                     POP   HL   ; error: string is only "-".
0ACB   01 01 00               LD   BC,1   
0ACE   E1                     POP   HL   
0ACF   FD E1                  POP   IY   
0AD1   C9                     RET      ; de = number, BC = err
0AD2                          ;*Macro unroll:  _endif
0AD2                          ;*Macro unroll:  STRUC_FWD
0AD2                CUR_ADR:   .SET   $   
0AC8                          .ORG   STRUC_TOP - 2   
0AC8   D2 0A                  DW   CUR_ADR   
0AD2                          .ORG   CUR_ADR   
0AD2                          ;*Macro unroll:  STRUC_POP
0AD2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AD2                STRUC_TOP:   .SET   STRUC_2   
0AD2                STRUC_2:   .SET   STRUC_3   
0AD2                STRUC_3:   .SET   STRUC_4   
0AD2                STRUC_4:   .SET   STRUC_5   
0AD2                STRUC_5:   .SET   STRUC_6   
0AD2                STRUC_6:   .SET   STRUC_7   
0AD2                STRUC_7:   .SET   STRUC_8   
0AD2                STRUC_8:   .SET   STRUC_9   
0AD2                STRUC_9:   .SET   STRUC_10   
0AD2                STRUC_10:   .SET   STRUC_11   
0AD2                STRUC_11:   .SET   STRUC_12   
0AD2                STRUC_12:   .SET   0   
0AD2                             ; Loop reading digits.
0AD2   C5                     PUSH   BC   
0AD3   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0AD7   CD 1C 04               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0ADA   C1                     POP   BC   
0ADB   FD 7E 00               LD   A,(IY)   ; a = next character in string
0ADE   FD 23                  INC   IY   
0AE0                          ;*Macro unroll:  _endif
0AE0                          ;*Macro unroll:  STRUC_FWD
0AE0                CUR_ADR:   .SET   $   
0ABA                          .ORG   STRUC_TOP - 2   
0ABA   E0 0A                  DW   CUR_ADR   
0AE0                          .ORG   CUR_ADR   
0AE0                          ;*Macro unroll:  STRUC_POP
0AE0                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AE0                STRUC_TOP:   .SET   STRUC_2   
0AE0                STRUC_2:   .SET   STRUC_3   
0AE0                STRUC_3:   .SET   STRUC_4   
0AE0                STRUC_4:   .SET   STRUC_5   
0AE0                STRUC_5:   .SET   STRUC_6   
0AE0                STRUC_6:   .SET   STRUC_7   
0AE0                STRUC_7:   .SET   STRUC_8   
0AE0                STRUC_8:   .SET   STRUC_9   
0AE0                STRUC_9:   .SET   STRUC_10   
0AE0                STRUC_10:   .SET   STRUC_11   
0AE0                STRUC_11:   .SET   STRUC_12   
0AE0                STRUC_12:   .SET   0   
0AE0                             ; Convert 0-9, A-z to a number 0-35.
0AE0                          ;*Macro unroll:  _do
0AE0   18 03                  JR   L_M_1430S130   
0AE2   C3 E2 0A               JP   $   
0AE5                          ;*Macro unroll:  DLOOP_PUSH $
0AE5                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0AE5                DLOOP_12:   .SET   DLOOP_11   
0AE5                DLOOP_11:   .SET   DLOOP_10   
0AE5                DLOOP_10:   .SET   DLOOP_9   
0AE5                DLOOP_9:   .SET   DLOOP_8   
0AE5                DLOOP_8:   .SET   DLOOP_7   
0AE5                DLOOP_7:   .SET   DLOOP_6   
0AE5                DLOOP_6:   .SET   DLOOP_5   
0AE5                DLOOP_5:   .SET   DLOOP_4   
0AE5                DLOOP_4:   .SET   DLOOP_3   
0AE5                DLOOP_3:   .SET   DLOOP_2   
0AE5                DLOOP_2:   .SET   DLOOP_TOP   
0AE5                DLOOP_TOP:   .SET   $   
0AE5                L_M_1430S130:      
0AE5   D6 30                  SUB   "0"   ; < "0"?
0AE7   38 33                  JR   c,toNumberExit   ; invalid char, end of number
0AE9   FE 0A                  CP   10   ; <= "9"?
0AEB                          ;*Macro unroll:  _if nc
0AEB   D2 F1 0A               JP   nc,L_M_1434S134   
0AEE   C3 EE 0A               JP   $   
0AF1                          ;*Macro unroll:  STRUC_PUSH $
0AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AF1                STRUC_12:   .SET   STRUC_11   
0AF1                STRUC_11:   .SET   STRUC_10   
0AF1                STRUC_10:   .SET   STRUC_9   
0AF1                STRUC_9:   .SET   STRUC_8   
0AF1                STRUC_8:   .SET   STRUC_7   
0AF1                STRUC_7:   .SET   STRUC_6   
0AF1                STRUC_6:   .SET   STRUC_5   
0AF1                STRUC_5:   .SET   STRUC_4   
0AF1                STRUC_4:   .SET   STRUC_3   
0AF1                STRUC_3:   .SET   STRUC_2   
0AF1                STRUC_2:   .SET   STRUC_TOP   
0AF1                STRUC_TOP:   .SET   $   
0AF1                L_M_1434S134:      
0AF1   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0AF3                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0AF3   DA E2 0A               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0AF6                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0AF6                CUR_ADR:   .SET   $   ; needed?
0AE3                          .ORG   DLOOP_TOP - 2   
0AE3   F6 0A                  DW   CUR_ADR   
0AF6                          .ORG   CUR_ADR   
0AF6   C6 0A                  ADD   a,10   
0AF8                          ;*Macro unroll:  _endif
0AF8                          ;*Macro unroll:  STRUC_FWD
0AF8                CUR_ADR:   .SET   $   
0AEF                          .ORG   STRUC_TOP - 2   
0AEF   F8 0A                  DW   CUR_ADR   
0AF8                          .ORG   CUR_ADR   
0AF8                          ;*Macro unroll:  STRUC_POP
0AF8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AF8                STRUC_TOP:   .SET   STRUC_2   
0AF8                STRUC_2:   .SET   STRUC_3   
0AF8                STRUC_3:   .SET   STRUC_4   
0AF8                STRUC_4:   .SET   STRUC_5   
0AF8                STRUC_5:   .SET   STRUC_6   
0AF8                STRUC_6:   .SET   STRUC_7   
0AF8                STRUC_7:   .SET   STRUC_8   
0AF8                STRUC_8:   .SET   STRUC_9   
0AF8                STRUC_9:   .SET   STRUC_10   
0AF8                STRUC_10:   .SET   STRUC_11   
0AF8                STRUC_11:   .SET   STRUC_12   
0AF8                STRUC_12:   .SET   0   
0AF8   2A 5B 32               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
0AFB   BD                     CP   L   ; >= BASE? then invalid char, end of number
0AFC                          ;*Macro unroll:  _until nc
0AFC   D2 E2 0A               JP   nc,DLOOP_TOP - 3   
0AFF                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0AFF                CUR_ADR:   .SET   $   ; needed?
0AE3                          .ORG   DLOOP_TOP - 2   
0AE3   FF 0A                  DW   CUR_ADR   
0AFF                          .ORG   CUR_ADR   
0AFF   83                     ADD   A,E   
0B00   5F                     LD   E,A   
0B01   3E 00                  LD   A,0   
0B03   8A                     ADC   a,d   
0B04   57                     LD   D,A   
0B05   0B                     DEC   BC   ; dec char count
0B06                          ;*Macro unroll:  checkZeroWord B,C
0B06   79                     LD   A,C   
0B07   B0                     OR   B   
0B08                          ;*Macro unroll:  _until z
0B08   CA E2 0A               JP   z,DLOOP_TOP - 3   
0B0B                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0B0B                CUR_ADR:   .SET   $   ; needed?
0AE3                          .ORG   DLOOP_TOP - 2   
0AE3   0B 0B                  DW   CUR_ADR   
0B0B                          .ORG   CUR_ADR   
0B0B   C5                     PUSH   BC   
0B0C   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0B10   CD 1C 04               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0B13   C1                     POP   BC   
0B14   FD 7E 00               LD   A,(IY)   ; a = next character in string
0B17   FD 23                  INC   IY   
0B19                          ;*Macro unroll:  _enddo
0B19   C3 E5 0A               JP   DLOOP_TOP   
0B1C                          ;*Macro unroll:  DLOOP_FWD
0B1C                CUR_ADR:   .SET   $   
0AE3                          .ORG   DLOOP_TOP - 2   
0AE3   1C 0B                  DW   CUR_ADR   
0B1C                          .ORG   CUR_ADR   
0B1C                          ;*Macro unroll:  DLOOP_POP
0B1C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0B1C                DLOOP_TOP:   .SET   DLOOP_2   
0B1C                DLOOP_2:   .SET   DLOOP_3   
0B1C                DLOOP_3:   .SET   DLOOP_4   
0B1C                DLOOP_4:   .SET   DLOOP_5   
0B1C                DLOOP_5:   .SET   DLOOP_6   
0B1C                DLOOP_6:   .SET   DLOOP_7   
0B1C                DLOOP_7:   .SET   DLOOP_8   
0B1C                DLOOP_8:   .SET   DLOOP_9   
0B1C                DLOOP_9:   .SET   DLOOP_10   
0B1C                DLOOP_10:   .SET   DLOOP_11   
0B1C                DLOOP_11:   .SET   DLOOP_12   
0B1C                DLOOP_12:   .SET   0   
0B1C                TONUMBEREXIT:      
0B1C   E1                     POP   HL   
0B1D                          ;*Macro unroll:  checkZeroWord H,L
0B1D   7D                     LD   A,L   
0B1E   B4                     OR   H   
0B1F                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0B1F   C2 25 0B               JP   nz,L_M_1460S163   ; if not -ve then skip
0B22   C3 22 0B               JP   $   
0B25                          ;*Macro unroll:  STRUC_PUSH $
0B25                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B25                STRUC_12:   .SET   STRUC_11   
0B25                STRUC_11:   .SET   STRUC_10   
0B25                STRUC_10:   .SET   STRUC_9   
0B25                STRUC_9:   .SET   STRUC_8   
0B25                STRUC_8:   .SET   STRUC_7   
0B25                STRUC_7:   .SET   STRUC_6   
0B25                STRUC_6:   .SET   STRUC_5   
0B25                STRUC_5:   .SET   STRUC_4   
0B25                STRUC_4:   .SET   STRUC_3   
0B25                STRUC_3:   .SET   STRUC_2   
0B25                STRUC_2:   .SET   STRUC_TOP   
0B25                STRUC_TOP:   .SET   $   
0B25                L_M_1460S163:      
0B25   EB                     EX   DE,HL   ; negate de
0B26   CD B9 03               CALL   negateNum   
0B29   EB                     EX   DE,HL   
0B2A                          ;*Macro unroll:  _endif
0B2A                          ;*Macro unroll:  STRUC_FWD
0B2A                CUR_ADR:   .SET   $   
0B23                          .ORG   STRUC_TOP - 2   
0B23   2A 0B                  DW   CUR_ADR   
0B2A                          .ORG   CUR_ADR   
0B2A                          ;*Macro unroll:  STRUC_POP
0B2A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0B2A                STRUC_TOP:   .SET   STRUC_2   
0B2A                STRUC_2:   .SET   STRUC_3   
0B2A                STRUC_3:   .SET   STRUC_4   
0B2A                STRUC_4:   .SET   STRUC_5   
0B2A                STRUC_5:   .SET   STRUC_6   
0B2A                STRUC_6:   .SET   STRUC_7   
0B2A                STRUC_7:   .SET   STRUC_8   
0B2A                STRUC_8:   .SET   STRUC_9   
0B2A                STRUC_9:   .SET   STRUC_10   
0B2A                STRUC_10:   .SET   STRUC_11   
0B2A                STRUC_11:   .SET   STRUC_12   
0B2A                STRUC_12:   .SET   0   
0B2A   E1                     POP   HL   
0B2B   FD E1                  POP   IY   
0B2D   C9                     RET      ; de = number, BC = err
0B2E                          ;*Macro unroll: CODE "number",6,0,NUMBER         ; ( ptr len -- num err )
0B2E                HEADER_NUMBER:      ; ( ptr len -- num err )
0B2E   0F 0A                  DW   link   
0B30                LINK:     .SET   HEADER_NUMBER   
0B30   06                     DB   0 + 6   
0B31   6E 75 6D 62 65 72      DB   "number"   
0B37                NUMBER:      
0B37                          ;*Macro unroll:  ppop0 H,L
0B37   DD 2B                  DEC   IX   
0B39   DD 66 00               LD   H,(IX+0)   
0B3C   DD 2B                  DEC   IX   
0B3E   DD 6E 00               LD   L,(IX+0)   
0B41   CD 96 0A               CALL   toNumber   ; params: HL = string address, BC = string length
0B44                             ; Returns the parsed number in DE,
0B44                             ; BC = 0, success
0B44                          ;*Macro unroll:  ppush0 D,E
0B44   DD 73 00               LD   (IX+0),E   
0B47   DD 23                  INC   IX   
0B49   DD 72 00               LD   (IX+0),D   
0B4C   DD 23                  INC   IX   
0B4E                          ;*Macro unroll:  NEXT
0B4E   C3 0D 0F               JP   enter   
0B51                          ;*Macro unroll: CODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
0B51                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
0B51   2E 0B                  DW   link   
0B53                LINK:     .SET   HEADER_decimal   
0B53   07                     DB   0 + 7   
0B54   64 65 63 69 6D 61 6C   DB   "decimal"   
0B5B                DECIMAL:      
0B5B                          ;*Macro unroll:  ENTER
0B5B   CF                     RST   $08   
0B5C   1B 12 0A 00 6D 09 30 0F DW   lit,10,base,store   
0B64                          ;*Macro unroll:  EXIT
0B64   1E 0F                  DW   exit   
0B66   C3 0D 0F               JP   enter   
0B69                          ;*Macro unroll: CODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
0B69                HEADER_HEX:      ; pushes ptr to string and length on stack
0B69   51 0B                  DW   link   
0B6B                LINK:     .SET   HEADER_hex   
0B6B   03                     DB   0 + 3   
0B6C   68 65 78               DB   "hex"   
0B6F                HEX:         
0B6F                          ;*Macro unroll:  ENTER
0B6F   CF                     RST   $08   
0B70   1B 12 10 00 6D 09 30 0F DW   lit,16,base,store   
0B78                          ;*Macro unroll:  EXIT
0B78   1E 0F                  DW   exit   
0B7A   C3 0D 0F               JP   enter   
0B7D                          ;*Macro unroll: CODE "quit",4,0,quit
0B7D                HEADER_QUIT:      
0B7D   69 0B                  DW   link   
0B7F                LINK:     .SET   HEADER_quit   
0B7F   04                     DB   0 + 4   
0B80   71 75 69 74            DB   "quit"   
0B84                QUIT:        
0B84                          ;*Macro unroll:  ENTER
0B84   CF                     RST   $08   
0B85   56 09 51 0F BA 0F      DW   sp0,fetch,spStore   
0B8B   E9 0B                  DW   interpret   
0B8D                          ;*Macro unroll:  EXIT
0B8D   1E 0F                  DW   exit   
0B8F   C3 0D 0F               JP   enter   
0B92                          ;*Macro unroll: CODE "word",5,0,WORD                 ; delim -- c-addr
0B92                HEADER_WORD:      ; delim -- c-addr
0B92   7D 0B                  DW   link   
0B94                LINK:     .SET   HEADER_WORD   
0B94   05                     DB   0 + 5   
0B95   77 6F 72 64            DB   "word"   
0B99                WORD:        
0B99                          ;*Macro unroll:  ENTER
0B99   CF                     RST   $08   
0B9A   1B 12 40 00            DW   lit,64   ; limit
0B9E   F2 08 51 0F            DW   here,fetch   
0BA2   51 0C                  DW   xword   ; writes to HERE!
0BA4                          ;*Macro unroll:  EXIT
0BA4   1E 0F                  DW   exit   
0BA6   C3 0D 0F               JP   enter   
0BA9                          ;*Macro unroll: CODE ">cfa",4,0,tcfa
0BA9                HEADER_TCFA:      
0BA9   92 0B                  DW   link   
0BAB                LINK:     .SET   HEADER_tcfa   
0BAB   04                     DB   0 + 4   
0BAC   3E 63 66 61            DB   ">cfa"   
0BB0                TCFA:        
0BB0                          ;*Macro unroll:  ENTER
0BB0   CF                     RST   $08   
0BB1   1B 12 02 00 CE 00      DW   lit,2,plus   
0BB7   68 13                  DW   count   
0BB9   1B 12 3F 00 86 00      DW   lit,msk_length,ANDD   
0BBF   CE 00                  DW   plus   
0BC1                          ;*Macro unroll:  EXIT
0BC1   1E 0F                  DW   exit   
0BC3   C3 0D 0F               JP   enter   
0BC6                          ;*Macro unroll: CODE "execute",7,0,EXECUTE
0BC6                HEADER_EXECUTE:      
0BC6   A9 0B                  DW   link   
0BC8                LINK:     .SET   HEADER_EXECUTE   
0BC8   07                     DB   0 + 7   
0BC9   65 78 65 63 75 74 65   DB   "execute"   
0BD0                EXECUTE:      
0BD0                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0BD0   60                     LD   H,B   ; POP TOS into HL
0BD1   69                     LD   L,C   
0BD2                          ;*Macro unroll:  ppop0 B,C
0BD2   DD 2B                  DEC   IX   
0BD4   DD 46 00               LD   B,(IX+0)   
0BD7   DD 2B                  DEC   IX   
0BD9   DD 4E 00               LD   C,(IX+0)   
0BDC   E9                     JP   (hl)   ; go do Forth word
0BDD                          ;*Macro unroll: CODE "interpret",6,0,interpret
0BDD                HEADER_INTERPRET:      
0BDD   C6 0B                  DW   link   
0BDF                LINK:     .SET   HEADER_interpret   
0BDF   06                     DB   0 + 6   
0BE0   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0BE9                INTERPRET:      
0BE9   CF                     RST   $08   
0BEA                          ;*Macro unroll:  cDo
0BEA   C0 07 06 00            DW   BRAN,6   
0BEE   C0 07 00 00            DW   BRAN,0   
0BF2                          ;*Macro unroll:  CPL_PUSH $
0BF2                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BF2                CPL_10:   .SET   CPL_9   
0BF2                CPL_9:    .SET   CPL_8   
0BF2                CPL_8:    .SET   CPL_7   
0BF2                CPL_7:    .SET   CPL_6   
0BF2                CPL_6:    .SET   CPL_5   
0BF2                CPL_5:    .SET   CPL_4   
0BF2                CPL_4:    .SET   CPL_3   
0BF2                CPL_3:    .SET   CPL_2   
0BF2                CPL_2:    .SET   CPL_TOP   
0BF2                CPL_TOP:   .SET   $   
0BF2   8B 0E 99 0B 68 13      DW   bl,word,count   ; pstr -- ptr len
0BF8   9C 12 58 03            DW   DUPP,zEqual   
0BFC                          ;*Macro unroll:  cIf
0BFC   A3 07 00 00            DW   QBRAN,0   
0C00                          ;*Macro unroll:  CPL_PUSH $
0C00                CPL_COUNT:   .SET   CPL_COUNT + 1   
0C00                CPL_10:   .SET   CPL_9   
0C00                CPL_9:    .SET   CPL_8   
0C00                CPL_8:    .SET   CPL_7   
0C00                CPL_7:    .SET   CPL_6   
0C00                CPL_6:    .SET   CPL_5   
0C00                CPL_5:    .SET   CPL_4   
0C00                CPL_4:    .SET   CPL_3   
0C00                CPL_3:    .SET   CPL_2   
0C00                CPL_2:    .SET   CPL_TOP   
0C00                CPL_TOP:   .SET   $   
0C00   D0 12 D0 12            DW   drop,drop   ; ptr len --
0C04                          ;*Macro unroll:  EXIT
0C04   1E 0F                  DW   exit   
0C06   C3 0D 0F               JP   enter   
0C09                          ;*Macro unroll:  cEndif
0C09                          ;*Macro unroll:  cBRANCH_FWD
0C09                CUR_ADR:   .SET   $   
0BFE                          .ORG   CPL_TOP - 2   
0BFE   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0C09                          .ORG   CUR_ADR   
0C09                          ;*Macro unroll:  CPL_POP
0C09                CPL_COUNT:   .SET   CPL_COUNT - 1   
0C09                CPL_TOP:   .SET   CPL_2   
0C09                CPL_2:    .SET   CPL_3   
0C09                CPL_3:    .SET   CPL_4   
0C09                CPL_4:    .SET   CPL_5   
0C09                CPL_5:    .SET   CPL_6   
0C09                CPL_6:    .SET   CPL_7   
0C09                CPL_7:    .SET   CPL_8   
0C09                CPL_8:    .SET   CPL_9   
0C09                CPL_9:    .SET   CPL_10   
0C09                CPL_10:   .SET   0   
0C09   38 0D                  DW   interpToken   ; interpret the next word
0C0B                          ;*Macro unroll:  cEndDo
0C0B   C0 07 E5 FF            DW   BRAN,CPL_TOP - $ - 2   
0C0F                          ;*Macro unroll:  cBRANCH_FWD
0C0F                CUR_ADR:   .SET   $   
0BF0                          .ORG   CPL_TOP - 2   
0BF0   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0C0F                          .ORG   CUR_ADR   
0C0F                          ;*Macro unroll:  CPL_POP
0C0F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0C0F                CPL_TOP:   .SET   CPL_2   
0C0F                CPL_2:    .SET   CPL_3   
0C0F                CPL_3:    .SET   CPL_4   
0C0F                CPL_4:    .SET   CPL_5   
0C0F                CPL_5:    .SET   CPL_6   
0C0F                CPL_6:    .SET   CPL_7   
0C0F                CPL_7:    .SET   CPL_8   
0C0F                CPL_8:    .SET   CPL_9   
0C0F                CPL_9:    .SET   CPL_10   
0C0F                CPL_10:   .SET   0   
0C0F                          ;*Macro unroll:  EXIT
0C0F   1E 0F                  DW   exit   
0C11   C3 0D 0F               JP   enter   
0C14                             ; 
0C14                             ; lookup - lookup header in dictionary ***
0C14                             ; 
0C14                             ; params: HL = string address, BC = string length
0C14                             ; returns: DE = found header ptr or 0
0C14                             ; destroys: AF
0C14                             ; 
0C14                LOOKUP:      
0C14   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0C18                          ;*Macro unroll:  _do
0C18   18 03                  JR   L_M_1525S49   
0C1A   C3 1A 0C               JP   $   
0C1D                          ;*Macro unroll:  DLOOP_PUSH $
0C1D                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C1D                DLOOP_12:   .SET   DLOOP_11   
0C1D                DLOOP_11:   .SET   DLOOP_10   
0C1D                DLOOP_10:   .SET   DLOOP_9   
0C1D                DLOOP_9:   .SET   DLOOP_8   
0C1D                DLOOP_8:   .SET   DLOOP_7   
0C1D                DLOOP_7:   .SET   DLOOP_6   
0C1D                DLOOP_6:   .SET   DLOOP_5   
0C1D                DLOOP_5:   .SET   DLOOP_4   
0C1D                DLOOP_4:   .SET   DLOOP_3   
0C1D                DLOOP_3:   .SET   DLOOP_2   
0C1D                DLOOP_2:   .SET   DLOOP_TOP   
0C1D                DLOOP_TOP:   .SET   $   
0C1D                L_M_1525S49:      
0C1D                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0C1D   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0C1E   B2                     OR   D   
0C1F   C8                     RET   z   
0C20                             ; Compare the length expected and the length of the word.
0C20                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0C20                             ; this won't pick the word (the length will appear to be wrong).
0C20   D5                     PUSH   DE   ; save ptr to header
0C21   13                     INC   DE   ; skip over first field
0C22   13                     INC   DE   
0C23   1A                     LD   A,(DE)   ; a = flags+length field
0C24   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
0C26   B9                     CP   C   ; Length is the same?
0C27                          ;*Macro unroll:  _if z
0C27   CA 2D 0C               JP   z,L_M_1537S65   
0C2A   C3 2A 0C               JP   $   
0C2D                          ;*Macro unroll:  STRUC_PUSH $
0C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C2D                STRUC_12:   .SET   STRUC_11   
0C2D                STRUC_11:   .SET   STRUC_10   
0C2D                STRUC_10:   .SET   STRUC_9   
0C2D                STRUC_9:   .SET   STRUC_8   
0C2D                STRUC_8:   .SET   STRUC_7   
0C2D                STRUC_7:   .SET   STRUC_6   
0C2D                STRUC_6:   .SET   STRUC_5   
0C2D                STRUC_5:   .SET   STRUC_4   
0C2D                STRUC_4:   .SET   STRUC_3   
0C2D                STRUC_3:   .SET   STRUC_2   
0C2D                STRUC_2:   .SET   STRUC_TOP   
0C2D                STRUC_TOP:   .SET   $   
0C2D                L_M_1537S65:      
0C2D                             ; Compare the strings in detail.
0C2D   13                     INC   DE   ; DE = Dictionary string we are checking against.
0C2E   E5                     PUSH   HL   ; save HL, BC
0C2F   C5                     PUSH   BC   
0C30   CD D9 13               CALL   compareStr   ; Compare the strings. BC = len
0C33   C1                     POP   BC   
0C34   E1                     POP   HL   
0C35   B7                     OR   A   ; if A == 0 then matched
0C36                          ;*Macro unroll:  _if z
0C36   CA 3C 0C               JP   z,L_M_1546S76   
0C39   C3 39 0C               JP   $   
0C3C                          ;*Macro unroll:  STRUC_PUSH $
0C3C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C3C                STRUC_12:   .SET   STRUC_11   
0C3C                STRUC_11:   .SET   STRUC_10   
0C3C                STRUC_10:   .SET   STRUC_9   
0C3C                STRUC_9:   .SET   STRUC_8   
0C3C                STRUC_8:   .SET   STRUC_7   
0C3C                STRUC_7:   .SET   STRUC_6   
0C3C                STRUC_6:   .SET   STRUC_5   
0C3C                STRUC_5:   .SET   STRUC_4   
0C3C                STRUC_4:   .SET   STRUC_3   
0C3C                STRUC_3:   .SET   STRUC_2   
0C3C                STRUC_2:   .SET   STRUC_TOP   
0C3C                STRUC_TOP:   .SET   $   
0C3C                L_M_1546S76:      
0C3C   D1                     POP   DE   ; matched, restore DE and return
0C3D   C9                     RET      
0C3E                          ;*Macro unroll:  _endif
0C3E                          ;*Macro unroll:  STRUC_FWD
0C3E                CUR_ADR:   .SET   $   
0C3A                          .ORG   STRUC_TOP - 2   
0C3A   3E 0C                  DW   CUR_ADR   
0C3E                          .ORG   CUR_ADR   
0C3E                          ;*Macro unroll:  STRUC_POP
0C3E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C3E                STRUC_TOP:   .SET   STRUC_2   
0C3E                STRUC_2:   .SET   STRUC_3   
0C3E                STRUC_3:   .SET   STRUC_4   
0C3E                STRUC_4:   .SET   STRUC_5   
0C3E                STRUC_5:   .SET   STRUC_6   
0C3E                STRUC_6:   .SET   STRUC_7   
0C3E                STRUC_7:   .SET   STRUC_8   
0C3E                STRUC_8:   .SET   STRUC_9   
0C3E                STRUC_9:   .SET   STRUC_10   
0C3E                STRUC_10:   .SET   STRUC_11   
0C3E                STRUC_11:   .SET   STRUC_12   
0C3E                STRUC_12:   .SET   0   
0C3E                          ;*Macro unroll:  _endif
0C3E                          ;*Macro unroll:  STRUC_FWD
0C3E                CUR_ADR:   .SET   $   
0C2B                          .ORG   STRUC_TOP - 2   
0C2B   3E 0C                  DW   CUR_ADR   
0C3E                          .ORG   CUR_ADR   
0C3E                          ;*Macro unroll:  STRUC_POP
0C3E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C3E                STRUC_TOP:   .SET   STRUC_2   
0C3E                STRUC_2:   .SET   STRUC_3   
0C3E                STRUC_3:   .SET   STRUC_4   
0C3E                STRUC_4:   .SET   STRUC_5   
0C3E                STRUC_5:   .SET   STRUC_6   
0C3E                STRUC_6:   .SET   STRUC_7   
0C3E                STRUC_7:   .SET   STRUC_8   
0C3E                STRUC_8:   .SET   STRUC_9   
0C3E                STRUC_9:   .SET   STRUC_10   
0C3E                STRUC_10:   .SET   STRUC_11   
0C3E                STRUC_11:   .SET   STRUC_12   
0C3E                STRUC_12:   .SET   0   
0C3E   D1                     POP   DE   ; restore DE
0C3F   1A                     LD   A,(DE)   
0C40   08                     EX   AF,AF'   
0C41   13                     INC   DE   
0C42   1A                     LD   A,(DE)   
0C43   57                     LD   D,A   
0C44   08                     EX   AF,AF'   
0C45   5F                     LD   E,A   
0C46                          ;*Macro unroll:  _enddo
0C46   C3 1D 0C               JP   DLOOP_TOP   
0C49                          ;*Macro unroll:  DLOOP_FWD
0C49                CUR_ADR:   .SET   $   
0C1B                          .ORG   DLOOP_TOP - 2   
0C1B   49 0C                  DW   CUR_ADR   
0C49                          .ORG   CUR_ADR   
0C49                          ;*Macro unroll:  DLOOP_POP
0C49                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C49                DLOOP_TOP:   .SET   DLOOP_2   
0C49                DLOOP_2:   .SET   DLOOP_3   
0C49                DLOOP_3:   .SET   DLOOP_4   
0C49                DLOOP_4:   .SET   DLOOP_5   
0C49                DLOOP_5:   .SET   DLOOP_6   
0C49                DLOOP_6:   .SET   DLOOP_7   
0C49                DLOOP_7:   .SET   DLOOP_8   
0C49                DLOOP_8:   .SET   DLOOP_9   
0C49                DLOOP_9:   .SET   DLOOP_10   
0C49                DLOOP_10:   .SET   DLOOP_11   
0C49                DLOOP_11:   .SET   DLOOP_12   
0C49                DLOOP_12:   .SET   0   
0C49                          ;*Macro unroll: CODE "xword",6,0,xword               ; delim limit addr -- c-addr
0C49                HEADER_XWORD:      ; delim limit addr -- c-addr
0C49   DD 0B                  DW   link   
0C4B                LINK:     .SET   HEADER_xword   
0C4B   06                     DB   0 + 6   
0C4C   78 77 6F 72 64         DB   "xword"   
0C51                XWORD:       
0C51   CD 5A 0C               CALL   xwordSkip   
0C54   CD EE 0C               CALL   xwordRead   
0C57                          ;*Macro unroll:  NEXT
0C57   C3 0D 0F               JP   enter   
0C5A                XWORDSKIP:      ; delim addr -- delim addr char
0C5A                          ;*Macro unroll:  ppop H,L
0C5A   60                     LD   H,B   
0C5B   69                     LD   L,C   
0C5C                          ;*Macro unroll:  ppop0 B,C
0C5C   DD 2B                  DEC   IX   
0C5E   DD 46 00               LD   B,(IX+0)   
0C61   DD 2B                  DEC   IX   
0C63   DD 4E 00               LD   C,(IX+0)   
0C66                          ;*Macro unroll:  ppop D,E
0C66   50                     LD   D,B   
0C67   59                     LD   E,C   
0C68                          ;*Macro unroll:  ppop0 B,C
0C68   DD 2B                  DEC   IX   
0C6A   DD 46 00               LD   B,(IX+0)   
0C6D   DD 2B                  DEC   IX   
0C6F   DD 4E 00               LD   C,(IX+0)   
0C72                          ;*Macro unroll:  ppush0 B,C
0C72   DD 71 00               LD   (IX+0),C   
0C75   DD 23                  INC   IX   
0C77   DD 70 00               LD   (IX+0),B   
0C7A   DD 23                  INC   IX   
0C7C                          ;*Macro unroll:  ppush0 D,E
0C7C   DD 73 00               LD   (IX+0),E   
0C7F   DD 23                  INC   IX   
0C81   DD 72 00               LD   (IX+0),D   
0C84   DD 23                  INC   IX   
0C86                          ;*Macro unroll:  ppush0 H,L
0C86   DD 75 00               LD   (IX+0),L   
0C89   DD 23                  INC   IX   
0C8B   DD 74 00               LD   (IX+0),H   
0C8E   DD 23                  INC   IX   
0C90                          ;*Macro unroll:  _do
0C90   18 03                  JR   L_M_1570S103   
0C92   C3 92 0C               JP   $   
0C95                          ;*Macro unroll:  DLOOP_PUSH $
0C95                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C95                DLOOP_12:   .SET   DLOOP_11   
0C95                DLOOP_11:   .SET   DLOOP_10   
0C95                DLOOP_10:   .SET   DLOOP_9   
0C95                DLOOP_9:   .SET   DLOOP_8   
0C95                DLOOP_8:   .SET   DLOOP_7   
0C95                DLOOP_7:   .SET   DLOOP_6   
0C95                DLOOP_6:   .SET   DLOOP_5   
0C95                DLOOP_5:   .SET   DLOOP_4   
0C95                DLOOP_4:   .SET   DLOOP_3   
0C95                DLOOP_3:   .SET   DLOOP_2   
0C95                DLOOP_2:   .SET   DLOOP_TOP   
0C95                DLOOP_TOP:   .SET   $   
0C95                L_M_1570S103:      
0C95   CD B6 11               CALL   getKey   ; get next key, returned in A
0C98                          ;*Macro unroll:  _switch
0C98   18 03                  JR   L_M_1572S106   
0C9A   C3 9A 0C               JP   $   
0C9D                          ;*Macro unroll:  STRUC_PUSH $
0C9D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C9D                STRUC_12:   .SET   STRUC_11   
0C9D                STRUC_11:   .SET   STRUC_10   
0C9D                STRUC_10:   .SET   STRUC_9   
0C9D                STRUC_9:   .SET   STRUC_8   
0C9D                STRUC_8:   .SET   STRUC_7   
0C9D                STRUC_7:   .SET   STRUC_6   
0C9D                STRUC_6:   .SET   STRUC_5   
0C9D                STRUC_5:   .SET   STRUC_4   
0C9D                STRUC_4:   .SET   STRUC_3   
0C9D                STRUC_3:   .SET   STRUC_2   
0C9D                STRUC_2:   .SET   STRUC_TOP   
0C9D                STRUC_TOP:   .SET   $   
0C9D                L_M_1572S106:      
0C9D   CB 7F                  BIT   7,A   ; check end of input
0C9F                          ;*Macro unroll:  _if nz
0C9F   C2 A5 0C               JP   nz,L_M_1574S109   
0CA2   C3 A2 0C               JP   $   
0CA5                          ;*Macro unroll:  STRUC_PUSH $
0CA5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CA5                STRUC_12:   .SET   STRUC_11   
0CA5                STRUC_11:   .SET   STRUC_10   
0CA5                STRUC_10:   .SET   STRUC_9   
0CA5                STRUC_9:   .SET   STRUC_8   
0CA5                STRUC_8:   .SET   STRUC_7   
0CA5                STRUC_7:   .SET   STRUC_6   
0CA5                STRUC_6:   .SET   STRUC_5   
0CA5                STRUC_5:   .SET   STRUC_4   
0CA5                STRUC_4:   .SET   STRUC_3   
0CA5                STRUC_3:   .SET   STRUC_2   
0CA5                STRUC_2:   .SET   STRUC_TOP   
0CA5                STRUC_TOP:   .SET   $   
0CA5                L_M_1574S109:      
0CA5   36 00                  LD   (HL),0   
0CA7   3E 00                  LD   A,0   
0CA9                          ;*Macro unroll:  _break
0CA9   C3 92 0C               JP   DLOOP_TOP - 3   
0CAC                          ;*Macro unroll:  _endif
0CAC                          ;*Macro unroll:  STRUC_FWD
0CAC                CUR_ADR:   .SET   $   
0CA3                          .ORG   STRUC_TOP - 2   
0CA3   AC 0C                  DW   CUR_ADR   
0CAC                          .ORG   CUR_ADR   
0CAC                          ;*Macro unroll:  STRUC_POP
0CAC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CAC                STRUC_TOP:   .SET   STRUC_2   
0CAC                STRUC_2:   .SET   STRUC_3   
0CAC                STRUC_3:   .SET   STRUC_4   
0CAC                STRUC_4:   .SET   STRUC_5   
0CAC                STRUC_5:   .SET   STRUC_6   
0CAC                STRUC_6:   .SET   STRUC_7   
0CAC                STRUC_7:   .SET   STRUC_8   
0CAC                STRUC_8:   .SET   STRUC_9   
0CAC                STRUC_9:   .SET   STRUC_10   
0CAC                STRUC_10:   .SET   STRUC_11   
0CAC                STRUC_11:   .SET   STRUC_12   
0CAC                STRUC_12:   .SET   0   
0CAC   FE 5C                  CP   $5C   ; \ start of a comment?
0CAE                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0CAE   CA B4 0C               JP   z,L_M_1580S116   ; if yes skip to end of line
0CB1   C3 B1 0C               JP   $   
0CB4                          ;*Macro unroll:  STRUC_PUSH $
0CB4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CB4                STRUC_12:   .SET   STRUC_11   
0CB4                STRUC_11:   .SET   STRUC_10   
0CB4                STRUC_10:   .SET   STRUC_9   
0CB4                STRUC_9:   .SET   STRUC_8   
0CB4                STRUC_8:   .SET   STRUC_7   
0CB4                STRUC_7:   .SET   STRUC_6   
0CB4                STRUC_6:   .SET   STRUC_5   
0CB4                STRUC_5:   .SET   STRUC_4   
0CB4                STRUC_4:   .SET   STRUC_3   
0CB4                STRUC_3:   .SET   STRUC_2   
0CB4                STRUC_2:   .SET   STRUC_TOP   
0CB4                STRUC_TOP:   .SET   $   
0CB4                L_M_1580S116:      
0CB4                          ;*Macro unroll:  _do
0CB4   18 03                  JR   L_M_1581S117   
0CB6   C3 B6 0C               JP   $   
0CB9                          ;*Macro unroll:  DLOOP_PUSH $
0CB9                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0CB9                DLOOP_12:   .SET   DLOOP_11   
0CB9                DLOOP_11:   .SET   DLOOP_10   
0CB9                DLOOP_10:   .SET   DLOOP_9   
0CB9                DLOOP_9:   .SET   DLOOP_8   
0CB9                DLOOP_8:   .SET   DLOOP_7   
0CB9                DLOOP_7:   .SET   DLOOP_6   
0CB9                DLOOP_6:   .SET   DLOOP_5   
0CB9                DLOOP_5:   .SET   DLOOP_4   
0CB9                DLOOP_4:   .SET   DLOOP_3   
0CB9                DLOOP_3:   .SET   DLOOP_2   
0CB9                DLOOP_2:   .SET   DLOOP_TOP   
0CB9                DLOOP_TOP:   .SET   $   
0CB9                L_M_1581S117:      
0CB9   CD B6 11               CALL   getKey   
0CBC   FE 0D                  CP   "\r"   ; end of line yet?
0CBE                          ;*Macro unroll:  _if nz
0CBE   C2 C4 0C               JP   nz,L_M_1584S120   
0CC1   C3 C1 0C               JP   $   
0CC4                          ;*Macro unroll:  STRUC_PUSH $
0CC4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CC4                STRUC_12:   .SET   STRUC_11   
0CC4                STRUC_11:   .SET   STRUC_10   
0CC4                STRUC_10:   .SET   STRUC_9   
0CC4                STRUC_9:   .SET   STRUC_8   
0CC4                STRUC_8:   .SET   STRUC_7   
0CC4                STRUC_7:   .SET   STRUC_6   
0CC4                STRUC_6:   .SET   STRUC_5   
0CC4                STRUC_5:   .SET   STRUC_4   
0CC4                STRUC_4:   .SET   STRUC_3   
0CC4                STRUC_3:   .SET   STRUC_2   
0CC4                STRUC_2:   .SET   STRUC_TOP   
0CC4                STRUC_TOP:   .SET   $   
0CC4                L_M_1584S120:      
0CC4   FE 0A                  CP   "\n"   ; end of line yet?
0CC6                          ;*Macro unroll:  _endif
0CC6                          ;*Macro unroll:  STRUC_FWD
0CC6                CUR_ADR:   .SET   $   
0CC2                          .ORG   STRUC_TOP - 2   
0CC2   C6 0C                  DW   CUR_ADR   
0CC6                          .ORG   CUR_ADR   
0CC6                          ;*Macro unroll:  STRUC_POP
0CC6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CC6                STRUC_TOP:   .SET   STRUC_2   
0CC6                STRUC_2:   .SET   STRUC_3   
0CC6                STRUC_3:   .SET   STRUC_4   
0CC6                STRUC_4:   .SET   STRUC_5   
0CC6                STRUC_5:   .SET   STRUC_6   
0CC6                STRUC_6:   .SET   STRUC_7   
0CC6                STRUC_7:   .SET   STRUC_8   
0CC6                STRUC_8:   .SET   STRUC_9   
0CC6                STRUC_9:   .SET   STRUC_10   
0CC6                STRUC_10:   .SET   STRUC_11   
0CC6                STRUC_11:   .SET   STRUC_12   
0CC6                STRUC_12:   .SET   0   
0CC6                          ;*Macro unroll:  _until z
0CC6   CA B6 0C               JP   z,DLOOP_TOP - 3   
0CC9                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0CC9                CUR_ADR:   .SET   $   ; needed?
0CB7                          .ORG   DLOOP_TOP - 2   
0CB7   C9 0C                  DW   CUR_ADR   
0CC9                          .ORG   CUR_ADR   
0CC9                          ;*Macro unroll:  _enddo
0CC9   C3 B9 0C               JP   DLOOP_TOP   
0CCC                          ;*Macro unroll:  DLOOP_FWD
0CCC                CUR_ADR:   .SET   $   
0CB7                          .ORG   DLOOP_TOP - 2   
0CB7   CC 0C                  DW   CUR_ADR   
0CCC                          .ORG   CUR_ADR   
0CCC                          ;*Macro unroll:  DLOOP_POP
0CCC                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CCC                DLOOP_TOP:   .SET   DLOOP_2   
0CCC                DLOOP_2:   .SET   DLOOP_3   
0CCC                DLOOP_3:   .SET   DLOOP_4   
0CCC                DLOOP_4:   .SET   DLOOP_5   
0CCC                DLOOP_5:   .SET   DLOOP_6   
0CCC                DLOOP_6:   .SET   DLOOP_7   
0CCC                DLOOP_7:   .SET   DLOOP_8   
0CCC                DLOOP_8:   .SET   DLOOP_9   
0CCC                DLOOP_9:   .SET   DLOOP_10   
0CCC                DLOOP_10:   .SET   DLOOP_11   
0CCC                DLOOP_11:   .SET   DLOOP_12   
0CCC                DLOOP_12:   .SET   0   
0CCC                          ;*Macro unroll:  _endcase
0CCC   C3 9A 0C               JP   STRUC_2 - 3   
0CCF                          ;*Macro unroll:  STRUC_FWD
0CCF                CUR_ADR:   .SET   $   
0CB2                          .ORG   STRUC_TOP - 2   
0CB2   CF 0C                  DW   CUR_ADR   
0CCF                          .ORG   CUR_ADR   
0CCF                          ;*Macro unroll:  STRUC_POP
0CCF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CCF                STRUC_TOP:   .SET   STRUC_2   
0CCF                STRUC_2:   .SET   STRUC_3   
0CCF                STRUC_3:   .SET   STRUC_4   
0CCF                STRUC_4:   .SET   STRUC_5   
0CCF                STRUC_5:   .SET   STRUC_6   
0CCF                STRUC_6:   .SET   STRUC_7   
0CCF                STRUC_7:   .SET   STRUC_8   
0CCF                STRUC_8:   .SET   STRUC_9   
0CCF                STRUC_9:   .SET   STRUC_10   
0CCF                STRUC_10:   .SET   STRUC_11   
0CCF                STRUC_11:   .SET   STRUC_12   
0CCF                STRUC_12:   .SET   0   
0CCF   B9                     CP   C   ; = space?
0CD0                          ;*Macro unroll:  _case z
0CD0   CA D6 0C               JP   z,L_M_1591S128   
0CD3   C3 D3 0C               JP   $   
0CD6                          ;*Macro unroll:  STRUC_PUSH $
0CD6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CD6                STRUC_12:   .SET   STRUC_11   
0CD6                STRUC_11:   .SET   STRUC_10   
0CD6                STRUC_10:   .SET   STRUC_9   
0CD6                STRUC_9:   .SET   STRUC_8   
0CD6                STRUC_8:   .SET   STRUC_7   
0CD6                STRUC_7:   .SET   STRUC_6   
0CD6                STRUC_6:   .SET   STRUC_5   
0CD6                STRUC_5:   .SET   STRUC_4   
0CD6                STRUC_4:   .SET   STRUC_3   
0CD6                STRUC_3:   .SET   STRUC_2   
0CD6                STRUC_2:   .SET   STRUC_TOP   
0CD6                STRUC_TOP:   .SET   $   
0CD6                L_M_1591S128:      
0CD6                          ;*Macro unroll:  _endcase
0CD6   C3 9A 0C               JP   STRUC_2 - 3   
0CD9                          ;*Macro unroll:  STRUC_FWD
0CD9                CUR_ADR:   .SET   $   
0CD4                          .ORG   STRUC_TOP - 2   
0CD4   D9 0C                  DW   CUR_ADR   
0CD9                          .ORG   CUR_ADR   
0CD9                          ;*Macro unroll:  STRUC_POP
0CD9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CD9                STRUC_TOP:   .SET   STRUC_2   
0CD9                STRUC_2:   .SET   STRUC_3   
0CD9                STRUC_3:   .SET   STRUC_4   
0CD9                STRUC_4:   .SET   STRUC_5   
0CD9                STRUC_5:   .SET   STRUC_6   
0CD9                STRUC_6:   .SET   STRUC_7   
0CD9                STRUC_7:   .SET   STRUC_8   
0CD9                STRUC_8:   .SET   STRUC_9   
0CD9                STRUC_9:   .SET   STRUC_10   
0CD9                STRUC_10:   .SET   STRUC_11   
0CD9                STRUC_11:   .SET   STRUC_12   
0CD9                STRUC_12:   .SET   0   
0CD9   FE 20                  CP   " "   ; < space?
0CDB                          ;*Macro unroll:  _case c
0CDB   DA E1 0C               JP   c,L_M_1594S132   
0CDE   C3 DE 0C               JP   $   
0CE1                          ;*Macro unroll:  STRUC_PUSH $
0CE1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CE1                STRUC_12:   .SET   STRUC_11   
0CE1                STRUC_11:   .SET   STRUC_10   
0CE1                STRUC_10:   .SET   STRUC_9   
0CE1                STRUC_9:   .SET   STRUC_8   
0CE1                STRUC_8:   .SET   STRUC_7   
0CE1                STRUC_7:   .SET   STRUC_6   
0CE1                STRUC_6:   .SET   STRUC_5   
0CE1                STRUC_5:   .SET   STRUC_4   
0CE1                STRUC_4:   .SET   STRUC_3   
0CE1                STRUC_3:   .SET   STRUC_2   
0CE1                STRUC_2:   .SET   STRUC_TOP   
0CE1                STRUC_TOP:   .SET   $   
0CE1                L_M_1594S132:      
0CE1                          ;*Macro unroll:  _endcase
0CE1   C3 9A 0C               JP   STRUC_2 - 3   
0CE4                          ;*Macro unroll:  STRUC_FWD
0CE4                CUR_ADR:   .SET   $   
0CDF                          .ORG   STRUC_TOP - 2   
0CDF   E4 0C                  DW   CUR_ADR   
0CE4                          .ORG   CUR_ADR   
0CE4                          ;*Macro unroll:  STRUC_POP
0CE4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CE4                STRUC_TOP:   .SET   STRUC_2   
0CE4                STRUC_2:   .SET   STRUC_3   
0CE4                STRUC_3:   .SET   STRUC_4   
0CE4                STRUC_4:   .SET   STRUC_5   
0CE4                STRUC_5:   .SET   STRUC_6   
0CE4                STRUC_6:   .SET   STRUC_7   
0CE4                STRUC_7:   .SET   STRUC_8   
0CE4                STRUC_8:   .SET   STRUC_9   
0CE4                STRUC_9:   .SET   STRUC_10   
0CE4                STRUC_10:   .SET   STRUC_11   
0CE4                STRUC_11:   .SET   STRUC_12   
0CE4                STRUC_12:   .SET   0   
0CE4                             ; default case
0CE4                          ;*Macro unroll:  _break
0CE4   C3 92 0C               JP   DLOOP_TOP - 3   
0CE7                          ;*Macro unroll:  _endswitch
0CE7                          ;*Macro unroll:  STRUC_FWD
0CE7                CUR_ADR:   .SET   $   
0C9B                          .ORG   STRUC_TOP - 2   
0C9B   E7 0C                  DW   CUR_ADR   
0CE7                          .ORG   CUR_ADR   
0CE7                          ;*Macro unroll:  STRUC_POP
0CE7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CE7                STRUC_TOP:   .SET   STRUC_2   
0CE7                STRUC_2:   .SET   STRUC_3   
0CE7                STRUC_3:   .SET   STRUC_4   
0CE7                STRUC_4:   .SET   STRUC_5   
0CE7                STRUC_5:   .SET   STRUC_6   
0CE7                STRUC_6:   .SET   STRUC_7   
0CE7                STRUC_7:   .SET   STRUC_8   
0CE7                STRUC_8:   .SET   STRUC_9   
0CE7                STRUC_9:   .SET   STRUC_10   
0CE7                STRUC_10:   .SET   STRUC_11   
0CE7                STRUC_11:   .SET   STRUC_12   
0CE7                STRUC_12:   .SET   0   
0CE7                          ;*Macro unroll:  _enddo
0CE7   C3 95 0C               JP   DLOOP_TOP   
0CEA                          ;*Macro unroll:  DLOOP_FWD
0CEA                CUR_ADR:   .SET   $   
0C93                          .ORG   DLOOP_TOP - 2   
0C93   EA 0C                  DW   CUR_ADR   
0CEA                          .ORG   CUR_ADR   
0CEA                          ;*Macro unroll:  DLOOP_POP
0CEA                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CEA                DLOOP_TOP:   .SET   DLOOP_2   
0CEA                DLOOP_2:   .SET   DLOOP_3   
0CEA                DLOOP_3:   .SET   DLOOP_4   
0CEA                DLOOP_4:   .SET   DLOOP_5   
0CEA                DLOOP_5:   .SET   DLOOP_6   
0CEA                DLOOP_6:   .SET   DLOOP_7   
0CEA                DLOOP_7:   .SET   DLOOP_8   
0CEA                DLOOP_8:   .SET   DLOOP_9   
0CEA                DLOOP_9:   .SET   DLOOP_10   
0CEA                DLOOP_10:   .SET   DLOOP_11   
0CEA                DLOOP_11:   .SET   DLOOP_12   
0CEA                DLOOP_12:   .SET   0   
0CEA   06 00                  LD   B,0   
0CEC   4F                     LD   C,A   
0CED   C9                     RET      
0CEE                XWORDREAD:      ; delim addr char -- c-addr
0CEE   79                     LD   A,C   
0CEF                          ;*Macro unroll:  ppop0 B,C
0CEF   DD 2B                  DEC   IX   
0CF1   DD 46 00               LD   B,(IX+0)   
0CF4   DD 2B                  DEC   IX   
0CF6   DD 4E 00               LD   C,(IX+0)   
0CF9                          ;*Macro unroll:  ppop H,L
0CF9   60                     LD   H,B   
0CFA   69                     LD   L,C   
0CFB                          ;*Macro unroll:  ppop0 B,C
0CFB   DD 2B                  DEC   IX   
0CFD   DD 46 00               LD   B,(IX+0)   
0D00   DD 2B                  DEC   IX   
0D02   DD 4E 00               LD   C,(IX+0)   
0D05                          ;*Macro unroll:  ppop D,E
0D05   50                     LD   D,B   
0D06   59                     LD   E,C   
0D07                          ;*Macro unroll:  ppop0 B,C
0D07   DD 2B                  DEC   IX   
0D09   DD 46 00               LD   B,(IX+0)   
0D0C   DD 2B                  DEC   IX   
0D0E   DD 4E 00               LD   C,(IX+0)   
0D11   16 00                  LD   D,0   
0D13   B7                     OR   A   
0D14                          ;*Macro unroll:  _if nz
0D14   C2 1A 0D               JP   nz,L_M_1610S151   
0D17   C3 17 0D               JP   $   
0D1A                          ;*Macro unroll:  STRUC_PUSH $
0D1A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0D1A                STRUC_12:   .SET   STRUC_11   
0D1A                STRUC_11:   .SET   STRUC_10   
0D1A                STRUC_10:   .SET   STRUC_9   
0D1A                STRUC_9:   .SET   STRUC_8   
0D1A                STRUC_8:   .SET   STRUC_7   
0D1A                STRUC_7:   .SET   STRUC_6   
0D1A                STRUC_6:   .SET   STRUC_5   
0D1A                STRUC_5:   .SET   STRUC_4   
0D1A                STRUC_4:   .SET   STRUC_3   
0D1A                STRUC_3:   .SET   STRUC_2   
0D1A                STRUC_2:   .SET   STRUC_TOP   
0D1A                STRUC_TOP:   .SET   $   
0D1A                L_M_1610S151:      
0D1A   E5                     PUSH   HL   ; save a copy of HL
0D1B   23                     INC   HL   ; move to leave space for length byte
0D1C   43                     LD   B,E   
0D1D                          ;*Macro unroll:  _do
0D1D   18 03                  JR   L_M_1614S155   
0D1F   C3 1F 0D               JP   $   
0D22                          ;*Macro unroll:  DLOOP_PUSH $
0D22                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0D22                DLOOP_12:   .SET   DLOOP_11   
0D22                DLOOP_11:   .SET   DLOOP_10   
0D22                DLOOP_10:   .SET   DLOOP_9   
0D22                DLOOP_9:   .SET   DLOOP_8   
0D22                DLOOP_8:   .SET   DLOOP_7   
0D22                DLOOP_7:   .SET   DLOOP_6   
0D22                DLOOP_6:   .SET   DLOOP_5   
0D22                DLOOP_5:   .SET   DLOOP_4   
0D22                DLOOP_4:   .SET   DLOOP_3   
0D22                DLOOP_3:   .SET   DLOOP_2   
0D22                DLOOP_2:   .SET   DLOOP_TOP   
0D22                DLOOP_TOP:   .SET   $   
0D22                L_M_1614S155:      
0D22   77                     LD   (HL),A   ; add character to return lineBuf
0D23   23                     INC   HL   
0D24   14                     INC   D   
0D25   CD B6 11               CALL   getKey   ; get next key
0D28   B9                     CP   C   ; = delim?
0D29                          ;*Macro unroll:  _until z
0D29   CA 1F 0D               JP   z,DLOOP_TOP - 3   
0D2C                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0D2C                CUR_ADR:   .SET   $   ; needed?
0D20                          .ORG   DLOOP_TOP - 2   
0D20   2C 0D                  DW   CUR_ADR   
0D2C                          .ORG   CUR_ADR   
0D2C   FE 20                  CP   " "   ; < space? i.e. control chars
0D2E                          ;*Macro unroll:  _until c
0D2E   DA 1F 0D               JP   c,DLOOP_TOP - 3   
0D31                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0D31                CUR_ADR:   .SET   $   ; needed?
0D20                          .ORG   DLOOP_TOP - 2   
0D20   31 0D                  DW   CUR_ADR   
0D31                          .ORG   CUR_ADR   
0D31                          ;*Macro unroll:  _djnz
0D31   10 EF                  DJNZ   DLOOP_TOP   
0D33                          ;*Macro unroll:  DLOOP_FWD
0D33                CUR_ADR:   .SET   $   
0D20                          .ORG   DLOOP_TOP - 2   
0D20   33 0D                  DW   CUR_ADR   
0D33                          .ORG   CUR_ADR   
0D33                          ;*Macro unroll:  DLOOP_POP
0D33                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0D33                DLOOP_TOP:   .SET   DLOOP_2   
0D33                DLOOP_2:   .SET   DLOOP_3   
0D33                DLOOP_3:   .SET   DLOOP_4   
0D33                DLOOP_4:   .SET   DLOOP_5   
0D33                DLOOP_5:   .SET   DLOOP_6   
0D33                DLOOP_6:   .SET   DLOOP_7   
0D33                DLOOP_7:   .SET   DLOOP_8   
0D33                DLOOP_8:   .SET   DLOOP_9   
0D33                DLOOP_9:   .SET   DLOOP_10   
0D33                DLOOP_10:   .SET   DLOOP_11   
0D33                DLOOP_11:   .SET   DLOOP_12   
0D33                DLOOP_12:   .SET   0   
0D33   E1                     POP   HL   ; restore HL
0D34                          ;*Macro unroll:  _endif
0D34                          ;*Macro unroll:  STRUC_FWD
0D34                CUR_ADR:   .SET   $   
0D18                          .ORG   STRUC_TOP - 2   
0D18   34 0D                  DW   CUR_ADR   
0D34                          .ORG   CUR_ADR   
0D34                          ;*Macro unroll:  STRUC_POP
0D34                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0D34                STRUC_TOP:   .SET   STRUC_2   
0D34                STRUC_2:   .SET   STRUC_3   
0D34                STRUC_3:   .SET   STRUC_4   
0D34                STRUC_4:   .SET   STRUC_5   
0D34                STRUC_5:   .SET   STRUC_6   
0D34                STRUC_6:   .SET   STRUC_7   
0D34                STRUC_7:   .SET   STRUC_8   
0D34                STRUC_8:   .SET   STRUC_9   
0D34                STRUC_9:   .SET   STRUC_10   
0D34                STRUC_10:   .SET   STRUC_11   
0D34                STRUC_11:   .SET   STRUC_12   
0D34                STRUC_12:   .SET   0   
0D34   72                     LD   (HL),D   ; write length
0D35                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0D35   4D                     LD   C,L   ; TOS = str ptr
0D36   44                     LD   B,H   
0D37   C9                     RET      
0D38                INTERPTOKEN:      ; ptr len --
0D38   CF                     RST   $08   
0D39   E4 12 E4 12 B0 05      DW   over,over,find   ; ptr len -- ptr len addr
0D3F   9C 12 6D 03            DW   DUPP,ZNEQU   
0D43                          ;*Macro unroll:  cIf
0D43   A3 07 00 00            DW   QBRAN,0   
0D47                          ;*Macro unroll:  CPL_PUSH $
0D47                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D47                CPL_10:   .SET   CPL_9   
0D47                CPL_9:    .SET   CPL_8   
0D47                CPL_8:    .SET   CPL_7   
0D47                CPL_7:    .SET   CPL_6   
0D47                CPL_6:    .SET   CPL_5   
0D47                CPL_5:    .SET   CPL_4   
0D47                CPL_4:    .SET   CPL_3   
0D47                CPL_3:    .SET   CPL_2   
0D47                CPL_2:    .SET   CPL_TOP   
0D47                CPL_TOP:   .SET   $   
0D47   54 0D                  DW   interpWord   
0D49                          ;*Macro unroll:  cElse
0D49   C0 07 00 00            DW   BRAN,0   
0D4D                          ;*Macro unroll:  cBRANCH_FWD
0D4D                CUR_ADR:   .SET   $   
0D45                          .ORG   CPL_TOP - 2   
0D45   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0D4D                          .ORG   CUR_ADR   
0D4D                CPL_TOP:   .SET   $   
0D4D   98 0D                  DW   interpLiteral   
0D4F                          ;*Macro unroll:  cEndif
0D4F                          ;*Macro unroll:  cBRANCH_FWD
0D4F                CUR_ADR:   .SET   $   
0D4B                          .ORG   CPL_TOP - 2   
0D4B   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0D4F                          .ORG   CUR_ADR   
0D4F                          ;*Macro unroll:  CPL_POP
0D4F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D4F                CPL_TOP:   .SET   CPL_2   
0D4F                CPL_2:    .SET   CPL_3   
0D4F                CPL_3:    .SET   CPL_4   
0D4F                CPL_4:    .SET   CPL_5   
0D4F                CPL_5:    .SET   CPL_6   
0D4F                CPL_6:    .SET   CPL_7   
0D4F                CPL_7:    .SET   CPL_8   
0D4F                CPL_8:    .SET   CPL_9   
0D4F                CPL_9:    .SET   CPL_10   
0D4F                CPL_10:   .SET   0   
0D4F                          ;*Macro unroll:  EXIT
0D4F   1E 0F                  DW   exit   
0D51   C3 0D 0F               JP   enter   
0D54                INTERPWORD:      ; ptr len addr --
0D54   CF                     RST   $08   ; enter forth
0D55   B0 12 D0 12 B0 12 D0 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0D5D   9C 12 1B 12 02 00 CE 00 7E 0F DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0D67   1B 12 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0D6D   58 03                  DW   zEqual   
0D6F                          ;*Macro unroll:  cif
0D6F   A3 07 00 00            DW   QBRAN,0   
0D73                          ;*Macro unroll:  CPL_PUSH $
0D73                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D73                CPL_10:   .SET   CPL_9   
0D73                CPL_9:    .SET   CPL_8   
0D73                CPL_8:    .SET   CPL_7   
0D73                CPL_7:    .SET   CPL_6   
0D73                CPL_6:    .SET   CPL_5   
0D73                CPL_5:    .SET   CPL_4   
0D73                CPL_4:    .SET   CPL_3   
0D73                CPL_3:    .SET   CPL_2   
0D73                CPL_2:    .SET   CPL_TOP   
0D73                CPL_TOP:   .SET   $   
0D73   B0 0B                  DW   tcfa   ; ( headptr -- xt )
0D75   26 09 51 0F            DW   state,fetch   
0D79   40 09 51 0F            DW   nesting,fetch   
0D7D   9E 00                  DW   ORR   
0D7F                          ;*Macro unroll:  cif
0D7F   A3 07 00 00            DW   QBRAN,0   
0D83                          ;*Macro unroll:  CPL_PUSH $
0D83                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D83                CPL_10:   .SET   CPL_9   
0D83                CPL_9:    .SET   CPL_8   
0D83                CPL_8:    .SET   CPL_7   
0D83                CPL_7:    .SET   CPL_6   
0D83                CPL_6:    .SET   CPL_5   
0D83                CPL_5:    .SET   CPL_4   
0D83                CPL_4:    .SET   CPL_3   
0D83                CPL_3:    .SET   CPL_2   
0D83                CPL_2:    .SET   CPL_TOP   
0D83                CPL_TOP:   .SET   $   
0D83   F6 0F                  DW   comma   ; compile xt
0D85                          ;*Macro unroll:  cElse
0D85   C0 07 00 00            DW   BRAN,0   
0D89                          ;*Macro unroll:  cBRANCH_FWD
0D89                CUR_ADR:   .SET   $   
0D81                          .ORG   CPL_TOP - 2   
0D81   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0D89                          .ORG   CUR_ADR   
0D89                CPL_TOP:   .SET   $   
0D89   D0 0B                  DW   execute   ; execute xt
0D8B                          ;*Macro unroll:  cendif
0D8B                          ;*Macro unroll:  cBRANCH_FWD
0D8B                CUR_ADR:   .SET   $   
0D87                          .ORG   CPL_TOP - 2   
0D87   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0D8B                          .ORG   CUR_ADR   
0D8B                          ;*Macro unroll:  CPL_POP
0D8B                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D8B                CPL_TOP:   .SET   CPL_2   
0D8B                CPL_2:    .SET   CPL_3   
0D8B                CPL_3:    .SET   CPL_4   
0D8B                CPL_4:    .SET   CPL_5   
0D8B                CPL_5:    .SET   CPL_6   
0D8B                CPL_6:    .SET   CPL_7   
0D8B                CPL_7:    .SET   CPL_8   
0D8B                CPL_8:    .SET   CPL_9   
0D8B                CPL_9:    .SET   CPL_10   
0D8B                CPL_10:   .SET   0   
0D8B                          ;*Macro unroll:  cElse
0D8B   C0 07 00 00            DW   BRAN,0   
0D8F                          ;*Macro unroll:  cBRANCH_FWD
0D8F                CUR_ADR:   .SET   $   
0D71                          .ORG   CPL_TOP - 2   
0D71   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0D8F                          .ORG   CUR_ADR   
0D8F                CPL_TOP:   .SET   $   
0D8F   B0 0B D0 0B            DW   tcfa,execute   ; execute xt
0D93                          ;*Macro unroll:  cendif
0D93                          ;*Macro unroll:  cBRANCH_FWD
0D93                CUR_ADR:   .SET   $   
0D8D                          .ORG   CPL_TOP - 2   
0D8D   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0D93                          .ORG   CUR_ADR   
0D93                          ;*Macro unroll:  CPL_POP
0D93                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D93                CPL_TOP:   .SET   CPL_2   
0D93                CPL_2:    .SET   CPL_3   
0D93                CPL_3:    .SET   CPL_4   
0D93                CPL_4:    .SET   CPL_5   
0D93                CPL_5:    .SET   CPL_6   
0D93                CPL_6:    .SET   CPL_7   
0D93                CPL_7:    .SET   CPL_8   
0D93                CPL_8:    .SET   CPL_9   
0D93                CPL_9:    .SET   CPL_10   
0D93                CPL_10:   .SET   0   
0D93                          ;*Macro unroll:  EXIT
0D93   1E 0F                  DW   exit   
0D95   C3 0D 0F               JP   enter   
0D98                INTERPLITERAL:      ; ptr len addr --
0D98   CF                     RST   $08   ; enter forth
0D99   D0 12                  DW   drop   ; ptr len addr - ptr len
0D9B   37 0B 58 03            DW   number,zEqual   ; parse to number
0D9F                          ;*Macro unroll:  cif
0D9F   A3 07 00 00            DW   QBRAN,0   
0DA3                          ;*Macro unroll:  CPL_PUSH $
0DA3                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DA3                CPL_10:   .SET   CPL_9   
0DA3                CPL_9:    .SET   CPL_8   
0DA3                CPL_8:    .SET   CPL_7   
0DA3                CPL_7:    .SET   CPL_6   
0DA3                CPL_6:    .SET   CPL_5   
0DA3                CPL_5:    .SET   CPL_4   
0DA3                CPL_4:    .SET   CPL_3   
0DA3                CPL_3:    .SET   CPL_2   
0DA3                CPL_2:    .SET   CPL_TOP   
0DA3                CPL_TOP:   .SET   $   
0DA3   26 09 51 0F            DW   state,fetch   
0DA7   40 09 51 0F            DW   nesting,fetch   
0DAB   9E 00                  DW   ORR   
0DAD                          ;*Macro unroll:  cIf
0DAD   A3 07 00 00            DW   QBRAN,0   
0DB1                          ;*Macro unroll:  CPL_PUSH $
0DB1                CPL_COUNT:   .SET   CPL_COUNT + 1   
0DB1                CPL_10:   .SET   CPL_9   
0DB1                CPL_9:    .SET   CPL_8   
0DB1                CPL_8:    .SET   CPL_7   
0DB1                CPL_7:    .SET   CPL_6   
0DB1                CPL_6:    .SET   CPL_5   
0DB1                CPL_5:    .SET   CPL_4   
0DB1                CPL_4:    .SET   CPL_3   
0DB1                CPL_3:    .SET   CPL_2   
0DB1                CPL_2:    .SET   CPL_TOP   
0DB1                CPL_TOP:   .SET   $   
0DB1   1B 12 1B 12            DW   lit,lit   ; (val -- val "lit" )
0DB5   F6 0F F6 0F            DW   comma,comma   ; compile "lit" val
0DB9                          ;*Macro unroll:  cEndIf
0DB9                          ;*Macro unroll:  cBRANCH_FWD
0DB9                CUR_ADR:   .SET   $   
0DAF                          .ORG   CPL_TOP - 2   
0DAF   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0DB9                          .ORG   CUR_ADR   
0DB9                          ;*Macro unroll:  CPL_POP
0DB9                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DB9                CPL_TOP:   .SET   CPL_2   
0DB9                CPL_2:    .SET   CPL_3   
0DB9                CPL_3:    .SET   CPL_4   
0DB9                CPL_4:    .SET   CPL_5   
0DB9                CPL_5:    .SET   CPL_6   
0DB9                CPL_6:    .SET   CPL_7   
0DB9                CPL_7:    .SET   CPL_8   
0DB9                CPL_8:    .SET   CPL_9   
0DB9                CPL_9:    .SET   CPL_10   
0DB9                CPL_10:   .SET   0   
0DB9                          ;*Macro unroll:  cElse
0DB9   C0 07 00 00            DW   BRAN,0   
0DBD                          ;*Macro unroll:  cBRANCH_FWD
0DBD                CUR_ADR:   .SET   $   
0DA1                          .ORG   CPL_TOP - 2   
0DA1   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
0DBD                          .ORG   CUR_ADR   
0DBD                CPL_TOP:   .SET   $   
0DBD   D0 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0DBF   4E 13                  DW   litstr   ; err != 0, parse error
0DC1   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0DD0   F2 0D                  DW   type   
0DD2                          ;*Macro unroll:  cEndIf
0DD2                          ;*Macro unroll:  cBRANCH_FWD
0DD2                CUR_ADR:   .SET   $   
0DBB                          .ORG   CPL_TOP - 2   
0DBB   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0DD2                          .ORG   CUR_ADR   
0DD2                          ;*Macro unroll:  CPL_POP
0DD2                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DD2                CPL_TOP:   .SET   CPL_2   
0DD2                CPL_2:    .SET   CPL_3   
0DD2                CPL_3:    .SET   CPL_4   
0DD2                CPL_4:    .SET   CPL_5   
0DD2                CPL_5:    .SET   CPL_6   
0DD2                CPL_6:    .SET   CPL_7   
0DD2                CPL_7:    .SET   CPL_8   
0DD2                CPL_8:    .SET   CPL_9   
0DD2                CPL_9:    .SET   CPL_10   
0DD2                CPL_10:   .SET   0   
0DD2                          ;*Macro unroll:  EXIT
0DD2   1E 0F                  DW   exit   
0DD4   C3 0D 0F               JP   enter   
0DD7                NESTPLUS:      
0DD7   2A 57 32               LD   HL,(VAR_NESTING)   
0DDA   23                     INC   HL   
0DDB   22 57 32               LD   (VAR_NESTING),HL   
0DDE                          ;*Macro unroll:  NEXT
0DDE   C3 0D 0F               JP   enter   
0DE1                NESTMINUS:      
0DE1   2A 57 32               LD   HL,(VAR_NESTING)   
0DE4   2B                     DEC   HL   
0DE5   22 57 32               LD   (VAR_NESTING),HL   
0DE8                          ;*Macro unroll:  NEXT
0DE8   C3 0D 0F               JP   enter   
0DEB                          ;*Macro unroll: CODE "type",4,0,TYPE             ; ( str len -- )
0DEB                HEADER_TYPE:      ; ( str len -- )
0DEB   49 0C                  DW   link   
0DED                LINK:     .SET   HEADER_TYPE   
0DED   04                     DB   0 + 4   
0DEE   74 79 70 65            DB   "type"   
0DF2                TYPE:        
0DF2                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
0DF2   DD 2B                  DEC   IX   ; DE = str BC = length
0DF4   DD 56 00               LD   D,(IX+0)   
0DF7   DD 2B                  DEC   IX   
0DF9   DD 5E 00               LD   E,(IX+0)   
0DFC   CD FA 11               CALL   printStr   
0DFF                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0DFF   DD 2B                  DEC   IX   ; clear TOS
0E01   DD 46 00               LD   B,(IX+0)   
0E04   DD 2B                  DEC   IX   
0E06   DD 4E 00               LD   C,(IX+0)   
0E09                          ;*Macro unroll:  NEXT
0E09   C3 0D 0F               JP   enter   
0E0C                          ;*Macro unroll: CODE "cr",2,0,cr                 ; ( -- )
0E0C                HEADER_CR:      ; ( -- )
0E0C   EB 0D                  DW   link   
0E0E                LINK:     .SET   HEADER_cr   
0E0E   02                     DB   0 + 2   
0E0F   63 72                  DB   "cr"   
0E11                CR:          
0E11   CD 04 12               CALL   printcr   
0E14                          ;*Macro unroll:  NEXT
0E14   C3 0D 0F               JP   enter   
0E17                          ;*Macro unroll:  CODE "accept",6,0,ACCEPT              ; ( addr max -- len )
0E17                HEADER_ACCEPT:      ; ( addr max -- len )
0E17   0C 0E                  DW   link   
0E19                LINK:     .SET   HEADER_ACCEPT   
0E19   06                     DB   0 + 6   
0E1A   61 63 63 65 70 74      DB   "accept"   
0E20                ACCEPT:      
0E20                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
0E20   50                     LD   D,B   ; max - up to 255
0E21   59                     LD   E,C   
0E22                          ;*Macro unroll:  ppop0 B,C
0E22   DD 2B                  DEC   IX   
0E24   DD 46 00               LD   B,(IX+0)   
0E27   DD 2B                  DEC   IX   
0E29   DD 4E 00               LD   C,(IX+0)   
0E2C                          ;*Macro unroll: 	ppop0 H,L                          ; addr
0E2C   DD 2B                  DEC   IX   ; addr
0E2E   DD 66 00               LD   H,(IX+0)   
0E31   DD 2B                  DEC   IX   
0E33   DD 6E 00               LD   L,(IX+0)   
0E36   CD 26 11               CALL   getline   
0E39                          ;*Macro unroll:  NEXT
0E39   C3 0D 0F               JP   enter   
0E3C                          ;*Macro unroll: CODE "key",3,0,KEY                ; ( -- c )
0E3C                HEADER_KEY:      ; ( -- c )
0E3C   17 0E                  DW   link   
0E3E                LINK:     .SET   HEADER_KEY   
0E3E   03                     DB   0 + 3   
0E3F   6B 65 79               DB   "key"   
0E42                KEY:         
0E42   CD B6 11               CALL   getKey   
0E45   06 00                  LD   b,0   
0E47   4F                     LD   c,a   
0E48                          ;*Macro unroll:  NEXT
0E48   C3 0D 0F               JP   enter   
0E4B                          ;*Macro unroll: CODE "emit",4,0,EMIT              ; print the character on the stack
0E4B                HEADER_EMIT:      ; print the character on the stack
0E4B   3C 0E                  DW   link   
0E4D                LINK:     .SET   HEADER_EMIT   
0E4D   04                     DB   0 + 4   
0E4E   65 6D 69 74            DB   "emit"   
0E52                EMIT:        
0E52   79                     LD   A,C   ; (c -- )
0E53   CD 0C 11               CALL   putc   
0E56                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
0E56   DD 2B                  DEC   IX   ; clear stack
0E58   DD 46 00               LD   B,(IX+0)   
0E5B   DD 2B                  DEC   IX   
0E5D   DD 4E 00               LD   C,(IX+0)   
0E60                          ;*Macro unroll:  NEXT
0E60   C3 0D 0F               JP   enter   
0E63                          ;*Macro unroll: CODE "key?",4,0,QKEY              ; ( -- c )
0E63                HEADER_QKEY:      ; ( -- c )
0E63   4B 0E                  DW   link   
0E65                LINK:     .SET   HEADER_QKEY   
0E65   04                     DB   0 + 4   
0E66   6B 65 79 3F            DB   "key?"   
0E6A                QKEY:        
0E6A                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
0E6A   DD 71 00               LD   (IX+0),C   ; save TOS
0E6D   DD 23                  INC   IX   
0E6F   DD 70 00               LD   (IX+0),B   
0E72   DD 23                  INC   IX   
0E74   CD 20 11               CALL   inputReady   
0E77   01 01 00               LD   BC,1   ; TOS = true
0E7A                          ;*Macro unroll:  _if z
0E7A   CA 80 0E               JP   z,L_M_1715S33   
0E7D   C3 7D 0E               JP   $   
0E80                          ;*Macro unroll:  STRUC_PUSH $
0E80                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0E80                STRUC_12:   .SET   STRUC_11   
0E80                STRUC_11:   .SET   STRUC_10   
0E80                STRUC_10:   .SET   STRUC_9   
0E80                STRUC_9:   .SET   STRUC_8   
0E80                STRUC_8:   .SET   STRUC_7   
0E80                STRUC_7:   .SET   STRUC_6   
0E80                STRUC_6:   .SET   STRUC_5   
0E80                STRUC_5:   .SET   STRUC_4   
0E80                STRUC_4:   .SET   STRUC_3   
0E80                STRUC_3:   .SET   STRUC_2   
0E80                STRUC_2:   .SET   STRUC_TOP   
0E80                STRUC_TOP:   .SET   $   
0E80                L_M_1715S33:      
0E80   01 00 00               LD   BC,0   ; TOS = false
0E83                          ;*Macro unroll:  _endif
0E83                          ;*Macro unroll:  STRUC_FWD
0E83                CUR_ADR:   .SET   $   
0E7E                          .ORG   STRUC_TOP - 2   
0E7E   83 0E                  DW   CUR_ADR   
0E83                          .ORG   CUR_ADR   
0E83                          ;*Macro unroll:  STRUC_POP
0E83                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0E83                STRUC_TOP:   .SET   STRUC_2   
0E83                STRUC_2:   .SET   STRUC_3   
0E83                STRUC_3:   .SET   STRUC_4   
0E83                STRUC_4:   .SET   STRUC_5   
0E83                STRUC_5:   .SET   STRUC_6   
0E83                STRUC_6:   .SET   STRUC_7   
0E83                STRUC_7:   .SET   STRUC_8   
0E83                STRUC_8:   .SET   STRUC_9   
0E83                STRUC_9:   .SET   STRUC_10   
0E83                STRUC_10:   .SET   STRUC_11   
0E83                STRUC_11:   .SET   STRUC_12   
0E83                STRUC_12:   .SET   0   
0E83                          ;*Macro unroll:  NEXT
0E83   C3 0D 0F               JP   enter   
0E86                          ;*Macro unroll: CODE "bl",2,0,bl
0E86                HEADER_BL:      
0E86   63 0E                  DW   link   
0E88                LINK:     .SET   HEADER_bl   
0E88   02                     DB   0 + 2   
0E89   62 6C                  DB   "bl"   
0E8B                BL:          
0E8B                          ;*Macro unroll:  ENTER
0E8B   CF                     RST   $08   
0E8C   1B 12 20 00            DW   lit,$20   ; compile branch on zero
0E90                          ;*Macro unroll:  EXIT
0E90   1E 0F                  DW   exit   
0E92   C3 0D 0F               JP   enter   
0E95                          ;*Macro unroll: CODE "print",5,0,PRINT
0E95                HEADER_PRINT:      
0E95   86 0E                  DW   link   
0E97                LINK:     .SET   HEADER_PRINT   
0E97   05                     DB   0 + 5   
0E98   70 72 69 6E 74         DB   "print"   
0E9D                PRINT:       
0E9D                          ;*Macro unroll:  ppop D,E
0E9D   50                     LD   D,B   
0E9E   59                     LD   E,C   
0E9F                          ;*Macro unroll:  ppop0 B,C
0E9F   DD 2B                  DEC   IX   
0EA1   DD 46 00               LD   B,(IX+0)   
0EA4   DD 2B                  DEC   IX   
0EA6   DD 4E 00               LD   C,(IX+0)   
0EA9   CD EB 11               CALL   printPStr   
0EAC                          ;*Macro unroll:  NEXT
0EAC   C3 0D 0F               JP   enter   
0EAF                             ; ." print string"
0EAF                          ;*Macro unroll: CODE {".",$22},2,msk_immed,dotquote
0EAF                HEADER_DOTQUOTE:      
0EAF   95 0E                  DW   link   
0EB1                LINK:     .SET   HEADER_dotquote   
0EB1   82                     DB   msk_immed + 2   
0EB2   2E 22                  DB   ".",$22   
0EB4                DOTQUOTE:      
0EB4                          ;*Macro unroll:  ENTER
0EB4   CF                     RST   $08   
0EB5   85 13                  DW   qt   
0EB7   26 09 51 0F 58 03      DW   state,fetch,zequal   
0EBD                          ;*Macro unroll:  cIf
0EBD   A3 07 00 00            DW   QBRAN,0   
0EC1                          ;*Macro unroll:  CPL_PUSH $
0EC1                CPL_COUNT:   .SET   CPL_COUNT + 1   
0EC1                CPL_10:   .SET   CPL_9   
0EC1                CPL_9:    .SET   CPL_8   
0EC1                CPL_8:    .SET   CPL_7   
0EC1                CPL_7:    .SET   CPL_6   
0EC1                CPL_6:    .SET   CPL_5   
0EC1                CPL_5:    .SET   CPL_4   
0EC1                CPL_4:    .SET   CPL_3   
0EC1                CPL_3:    .SET   CPL_2   
0EC1                CPL_2:    .SET   CPL_TOP   
0EC1                CPL_TOP:   .SET   $   
0EC1   F2 0D                  DW   type   
0EC3                          ;*Macro unroll:  cElse
0EC3   C0 07 00 00            DW   BRAN,0   
0EC7                          ;*Macro unroll:  cBRANCH_FWD
0EC7                CUR_ADR:   .SET   $   
0EBF                          .ORG   CPL_TOP - 2   
0EBF   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0EC7                          .ORG   CUR_ADR   
0EC7                CPL_TOP:   .SET   $   
0EC7   1B 12 F2 0D F6 0F      DW   lit,type,comma   
0ECD                          ;*Macro unroll:  cEndIf
0ECD                          ;*Macro unroll:  cBRANCH_FWD
0ECD                CUR_ADR:   .SET   $   
0EC5                          .ORG   CPL_TOP - 2   
0EC5   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0ECD                          .ORG   CUR_ADR   
0ECD                          ;*Macro unroll:  CPL_POP
0ECD                CPL_COUNT:   .SET   CPL_COUNT - 1   
0ECD                CPL_TOP:   .SET   CPL_2   
0ECD                CPL_2:    .SET   CPL_3   
0ECD                CPL_3:    .SET   CPL_4   
0ECD                CPL_4:    .SET   CPL_5   
0ECD                CPL_5:    .SET   CPL_6   
0ECD                CPL_6:    .SET   CPL_7   
0ECD                CPL_7:    .SET   CPL_8   
0ECD                CPL_8:    .SET   CPL_9   
0ECD                CPL_9:    .SET   CPL_10   
0ECD                CPL_10:   .SET   0   
0ECD                          ;*Macro unroll:  EXIT
0ECD   1E 0F                  DW   exit   
0ECF   C3 0D 0F               JP   enter   
0ED2                INITFORTH:      
0ED2   DD 21 A7 2E            LD   IX,data_stack   ; initialise the param stack.
0ED6   FD 21 0D 0F            LD   IY,enter   
0EDA   DD 22 59 32            LD   (var_sp0),IX   
0EDE   01 00 00               LD   BC,0   ; tos
0EE1   21 00 00               LD   HL,0   
0EE4   22 53 32               LD   (var_intp_stop),HL   
0EE7   22 4F 32               LD   (is_literal),HL   
0EEA   22 57 32               LD   (var_nesting),HL   
0EED   22 55 32               LD   (var_state),HL   
0EF0   21 0A 00               LD   HL,10   
0EF3   22 5B 32               LD   (var_base),HL   
0EF6   21 63 32               LD   HL,start_user   
0EF9   22 51 32               LD   (var_here),HL   
0EFC   21 B9 14               LD   HL,header_latest   
0EFF   22 5F 32               LD   (var_latest),HL   
0F02   22 5D 32               LD   (var_latest_str),HL   
0F05   3E 96                  LD   A,rts_low   
0F07   D3 80                  OUT   ($80),A   ; initialise acia
0F09   ED 56                  IM   1   
0F0B   FB                     EI      
0F0C   C9                     RET      
0F0D                ENTER:       
0F0D   E1                     POP   HL   
0F0E                ENTER1:      
0F0E   5E                     LD   E,(HL)   
0F0F   23                     INC   HL   
0F10   56                     LD   D,(HL)   
0F11   23                     INC   HL   
0F12   E5                     PUSH   HL   
0F13   EB                     EX   DE,HL   
0F14   E9                     JP   (HL)   
0F15                FORTH:       ; for calling forth words from assembly
0F15   21 4D 32               LD   HL,exitAddr   
0F18   E3                     EX   (SP),HL   
0F19   22 4D 32               LD   (exitAddr),HL   
0F1C   EB                     EX   DE,HL   
0F1D   E9                     JP   (HL)   
0F1E                EXIT:        
0F1E   E1                     POP   HL   
0F1F   FD E9                  JP   (IY)   
0F21                EXIT_FORTH:      
0F21   C9                     RET      
0F22                          ;*Macro unroll: CODE "noop",4,0,noop
0F22                HEADER_NOOP:      
0F22   AF 0E                  DW   link   
0F24                LINK:     .SET   HEADER_noop   
0F24   04                     DB   0 + 4   
0F25   6E 6F 6F 70            DB   "noop"   
0F29                NOOP:        
0F29                          ;*Macro unroll:  NEXT
0F29   C3 0D 0F               JP   enter   
0F2C                             ; !        x a-addr --   store cell in memory
0F2C                          ;*Macro unroll: CODE "!",1,0,STORE
0F2C                HEADER_STORE:      
0F2C   22 0F                  DW   link   
0F2E                LINK:     .SET   HEADER_STORE   
0F2E   01                     DB   0 + 1   
0F2F   21                     DB   "!"   
0F30                STORE:       
0F30                          ;*Macro unroll:  ppop H,L
0F30   60                     LD   H,B   
0F31   69                     LD   L,C   
0F32                          ;*Macro unroll:  ppop0 B,C
0F32   DD 2B                  DEC   IX   
0F34   DD 46 00               LD   B,(IX+0)   
0F37   DD 2B                  DEC   IX   
0F39   DD 4E 00               LD   C,(IX+0)   
0F3C                          ;*Macro unroll:  writeWord HL, B,C
0F3C                          ;*Macro unroll:  writeByte HL, C
0F3C   71                     LD   (HL),C   
0F3D   23                     INC   HL   
0F3E                          ;*Macro unroll:  writeByte HL, B
0F3E   70                     LD   (HL),B   
0F3F   23                     INC   HL   
0F40                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0F40   DD 2B                  DEC   IX   ; POP new TOS
0F42   DD 46 00               LD   B,(IX+0)   
0F45   DD 2B                  DEC   IX   
0F47   DD 4E 00               LD   C,(IX+0)   
0F4A                          ;*Macro unroll:  NEXT
0F4A   C3 0D 0F               JP   enter   
0F4D                          ;*Macro unroll: CODE "@",1,0,FETCH
0F4D                HEADER_FETCH:      
0F4D   2C 0F                  DW   link   
0F4F                LINK:     .SET   HEADER_FETCH   
0F4F   01                     DB   0 + 1   
0F50   40                     DB   "@"   
0F51                FETCH:       
0F51                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0F51   69                     LD   L,C   ; HL = TOS
0F52   60                     LD   H,B   
0F53                          ;*Macro unroll:  readWord HL, B,C
0F53   4E                     LD   C,(HL)   
0F54   23                     INC   HL   
0F55   46                     LD   B,(HL)   
0F56   23                     INC   HL   
0F57                          ;*Macro unroll:  NEXT
0F57   C3 0D 0F               JP   enter   
0F5A                             ; C!      char c-addr --    store char in memory
0F5A                          ;*Macro unroll: CODE "c!",2,0,CSTORE
0F5A                HEADER_CSTORE:      
0F5A   4D 0F                  DW   link   
0F5C                LINK:     .SET   HEADER_CSTORE   
0F5C   02                     DB   0 + 2   
0F5D   63 21                  DB   "c!"   
0F5F                CSTORE:      
0F5F                          ;*Macro unroll:  ppop H,L
0F5F   60                     LD   H,B   
0F60   69                     LD   L,C   
0F61                          ;*Macro unroll:  ppop0 B,C
0F61   DD 2B                  DEC   IX   
0F63   DD 46 00               LD   B,(IX+0)   
0F66   DD 2B                  DEC   IX   
0F68   DD 4E 00               LD   C,(IX+0)   
0F6B   71                     LD   (HL),C   
0F6C                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0F6C   DD 2B                  DEC   IX   ; POP new TOS
0F6E   DD 46 00               LD   B,(IX+0)   
0F71   DD 2B                  DEC   IX   
0F73   DD 4E 00               LD   C,(IX+0)   
0F76                          ;*Macro unroll:  NEXT
0F76   C3 0D 0F               JP   enter   
0F79                             ; C@     c-addr -- char   fetch char from memory
0F79                          ;*Macro unroll: CODE "c@",2,0,CFETCH
0F79                HEADER_CFETCH:      
0F79   5A 0F                  DW   link   
0F7B                LINK:     .SET   HEADER_CFETCH   
0F7B   02                     DB   0 + 2   
0F7C   63 40                  DB   "c@"   
0F7E                CFETCH:      
0F7E   0A                     LD   A,(BC)   
0F7F   4F                     LD   C,A   
0F80   06 00                  LD   B,0   
0F82                          ;*Macro unroll:  NEXT
0F82   C3 0D 0F               JP   enter   
0F85                             ;z RSP!  a-addr --                  set return stack pointer
0F85                          ;*Macro unroll: CODE "rsp!",4,0,RSPSTORE
0F85                HEADER_RSPSTORE:      
0F85   79 0F                  DW   link   
0F87                LINK:     .SET   HEADER_RSPSTORE   
0F87   04                     DB   0 + 4   
0F88   72 73 70 21            DB   "rsp!"   
0F8C                RSPSTORE:      
0F8C                          ;*Macro unroll:  SET_RET_SP B,C
0F8C                          ;*Macro unroll:  loadWord H,L, B,C
0F8C   69                     LD   L,C   
0F8D   60                     LD   H,B   
0F8E   F9                     LD   SP,HL   
0F8F                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
0F8F   DD 2B                  DEC   IX   ; POP TOS
0F91   DD 46 00               LD   B,(IX+0)   
0F94   DD 2B                  DEC   IX   
0F96   DD 4E 00               LD   C,(IX+0)   
0F99                          ;*Macro unroll:  NEXT
0F99   C3 0D 0F               JP   enter   
0F9C                          ;*Macro unroll: CODE "sp@",3,0,SPFETCH
0F9C                HEADER_SPFETCH:      
0F9C   85 0F                  DW   link   
0F9E                LINK:     .SET   HEADER_SPFETCH   
0F9E   03                     DB   0 + 3   
0F9F   73 70 40               DB   "sp@"   
0FA2                SPFETCH:      
0FA2   DD E5                  PUSH   IX   
0FA4   E1                     POP   HL   
0FA5                          ;*Macro unroll:  ppush H,L
0FA5                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0FA5   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0FA8   DD 23                  INC   IX   
0FAA   DD 70 00               LD   (IX+0),B   
0FAD   DD 23                  INC   IX   
0FAF   44                     LD   B,H   
0FB0   4D                     LD   C,L   
0FB1                          ;*Macro unroll:  NEXT
0FB1   C3 0D 0F               JP   enter   
0FB4                          ;*Macro unroll: CODE "sp!",3,0,SPSTORE
0FB4                HEADER_SPSTORE:      
0FB4   9C 0F                  DW   link   
0FB6                LINK:     .SET   HEADER_SPSTORE   
0FB6   03                     DB   0 + 3   
0FB7   73 70 21               DB   "sp!"   
0FBA                SPSTORE:      
0FBA                          ;*Macro unroll:  ppop H,L
0FBA   60                     LD   H,B   
0FBB   69                     LD   L,C   
0FBC                          ;*Macro unroll:  ppop0 B,C
0FBC   DD 2B                  DEC   IX   
0FBE   DD 46 00               LD   B,(IX+0)   
0FC1   DD 2B                  DEC   IX   
0FC3   DD 4E 00               LD   C,(IX+0)   
0FC6   E5                     PUSH   HL   
0FC7   DD E1                  POP   IX   
0FC9                          ;*Macro unroll:  NEXT
0FC9   C3 0D 0F               JP   enter   
0FCC                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0FCC                          ;*Macro unroll: CODE "allot",5,0,allot               ;
0FCC                HEADER_ALLOT:      ; 
0FCC   B4 0F                  DW   link   
0FCE                LINK:     .SET   HEADER_allot   
0FCE   05                     DB   0 + 5   
0FCF   61 6C 6C 6F 74         DB   "allot"   
0FD4                ALLOT:       
0FD4                          ;*Macro unroll:  ENTER
0FD4   CF                     RST   $08   
0FD5                             ; dw here, addstore                   ; adds n to here
0FD5   F2 08 E3 0F            DW   here,PSTOR   ; adds n to here
0FD9                          ;*Macro unroll:  EXIT
0FD9   1E 0F                  DW   exit   
0FDB   C3 0D 0F               JP   enter   
0FDE                             ;   +!          ( n a -- )
0FDE                             ;               Add n to the contents at address a.
0FDE                          ;*Macro unroll: CODE  '+!',2,0,PSTOR
0FDE                HEADER_PSTOR:      
0FDE   CC 0F                  DW   link   
0FE0                LINK:     .SET   HEADER_PSTOR   
0FE0   02                     DB   0 + 2   
0FE1   2B 21                  DB   "+!"   
0FE3                PSTOR:       
0FE3                          ;*Macro unroll:  ENTER
0FE3   CF                     RST   $08   
0FE4   B0 12 E4 12 51 0F CE 00 DW   SWAP,OVER,Fetch,PLUS   
0FEC   B0 12 30 0F 1E 0F      DW   SWAP,STORE,EXIT   
0FF2                             ; CODE "+!",2,0,ADDSTORE               ; (n addr -- )
0FF2                             ; 	ppop H, L		            ; HL = address, TOS = amount to add
0FF2                             ; 	ld A,(HL)
0FF2                             ; 	add A,C                         ; add TOS at (HL),
0FF2                             ; 	ld (HL),A
0FF2                             ; 	inc HL
0FF2                             ; 	ld A,(HL)
0FF2                             ; 	adc A,B
0FF2                             ; 	ld (HL),A
0FF2                             ; 	ppop0 B,C                      ; clear param stack
0FF2                             ;     NEXT
0FF2                          ;*Macro unroll: CODE ",",1,0,COMMA
0FF2                HEADER_COMMA:      
0FF2   DE 0F                  DW   link   
0FF4                LINK:     .SET   HEADER_COMMA   
0FF4   01                     DB   0 + 1   
0FF5   2C                     DB   ","   
0FF6                COMMA:       
0FF6   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0FF9                          ;*Macro unroll: 	writeWord HL, B,C
0FF9                          ;*Macro unroll:  writeByte HL, C
0FF9   71                     LD   (HL),C   
0FFA   23                     INC   HL   
0FFB                          ;*Macro unroll:  writeByte HL, B
0FFB   70                     LD   (HL),B   
0FFC   23                     INC   HL   
0FFD   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
1000                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
1000   DD 2B                  DEC   IX   ; cleanup TOS
1002   DD 46 00               LD   B,(IX+0)   
1005   DD 2B                  DEC   IX   
1007   DD 4E 00               LD   C,(IX+0)   
100A                          ;*Macro unroll:  NEXT
100A   C3 0D 0F               JP   enter   
100D                          ;*Macro unroll: CODE "c,",1,0,CCOMMA
100D                HEADER_CCOMMA:      
100D   F2 0F                  DW   link   
100F                LINK:     .SET   HEADER_CCOMMA   
100F   01                     DB   0 + 1   
1010   63 2C                  DB   "c,"   
1012                CCOMMA:      
1012                          ;*Macro unroll:  ppush0 H,L
1012   DD 75 00               LD   (IX+0),L   
1015   DD 23                  INC   IX   
1017   DD 74 00               LD   (IX+0),H   
101A   DD 23                  INC   IX   
101C   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
101F   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
1020   23                     INC   HL   
1021   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
1024                          ;*Macro unroll:  ppop0 H,L
1024   DD 2B                  DEC   IX   
1026   DD 66 00               LD   H,(IX+0)   
1029   DD 2B                  DEC   IX   
102B   DD 6E 00               LD   L,(IX+0)   
102E                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
102E   DD 2B                  DEC   IX   ; cleanup TOS
1030   DD 46 00               LD   B,(IX+0)   
1033   DD 2B                  DEC   IX   
1035   DD 4E 00               LD   C,(IX+0)   
1038                          ;*Macro unroll:  NEXT
1038   C3 0D 0F               JP   enter   
103B                             ;   R@          ( -- w )
103B                             ;               Copy top of return stack to the data stack.
103B                          ;*Macro unroll: CODE	'R@',2,0,RAT
103B                HEADER_RAT:      
103B   0D 10                  DW   link   
103D                LINK:     .SET   HEADER_RAT   
103D   02                     DB   0 + 2   
103E   52 40                  DB   "R@"   
1040                RAT:         
1040   C5                     PUSH   BC   
1041   DD 4E 00               LD   C,(IX+0)   
1044   DD 46 01               LD   B,(IX+1)   
1047                          ;*Macro unroll: 	NEXT
1047   C3 0D 0F               JP   enter   
104A   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
1070   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
1073   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
1078   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
1083   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
108E                             ; serial I/O
108E                INITSERIAL:      
108E   21 00 00               LD   HL,0   
1091   22 43 30               LD   (serbufused),HL   
1094   21 00 30               LD   HL,serbuf   
1097   22 3F 30               LD   (serinptr),HL   
109A   22 41 30               LD   (serrdptr),HL   
109D   21 4D 30               LD   HL,linebuf   
10A0   22 45 30               LD   (lineBufStart),HL   
10A3   22 49 30               LD   (currkey),HL   
10A6   22 4B 30               LD   (linebuftop),HL   
10A9   21 80 00               LD   HL,LINE_BUFSIZE   
10AC   22 47 30               LD   (lineBufSize),HL   
10AF   3E 96                  LD   A,rts_low   
10B1   D3 80                  OUT   ($80),A   ; initialise acia
10B3   ED 56                  IM   1   
10B5   FB                     EI      
10B6   C9                     RET      
10B7                SERIALIN:      
10B7   F5                     PUSH   AF   
10B8   E5                     PUSH   HL   
10B9   DB 80                  IN   A,($80)   
10BB   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
10BD                          ;*Macro unroll:  _if nz
10BD   C2 C3 10               JP   nz,L_M_1893S31   
10C0   C3 C0 10               JP   $   
10C3                          ;*Macro unroll:  STRUC_PUSH $
10C3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10C3                STRUC_12:   .SET   STRUC_11   
10C3                STRUC_11:   .SET   STRUC_10   
10C3                STRUC_10:   .SET   STRUC_9   
10C3                STRUC_9:   .SET   STRUC_8   
10C3                STRUC_8:   .SET   STRUC_7   
10C3                STRUC_7:   .SET   STRUC_6   
10C3                STRUC_6:   .SET   STRUC_5   
10C3                STRUC_5:   .SET   STRUC_4   
10C3                STRUC_4:   .SET   STRUC_3   
10C3                STRUC_3:   .SET   STRUC_2   
10C3                STRUC_2:   .SET   STRUC_TOP   
10C3                STRUC_TOP:   .SET   $   
10C3                L_M_1893S31:      
10C3   DB 81                  IN   A,($81)   
10C5   F5                     PUSH   AF   
10C6   3A 43 30               LD   A,(serBufUsed)   
10C9   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
10CB                          ;*Macro unroll:  _if z
10CB   CA D1 10               JP   z,L_M_1898S36   
10CE   C3 CE 10               JP   $   
10D1                          ;*Macro unroll:  STRUC_PUSH $
10D1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10D1                STRUC_12:   .SET   STRUC_11   
10D1                STRUC_11:   .SET   STRUC_10   
10D1                STRUC_10:   .SET   STRUC_9   
10D1                STRUC_9:   .SET   STRUC_8   
10D1                STRUC_8:   .SET   STRUC_7   
10D1                STRUC_7:   .SET   STRUC_6   
10D1                STRUC_6:   .SET   STRUC_5   
10D1                STRUC_5:   .SET   STRUC_4   
10D1                STRUC_4:   .SET   STRUC_3   
10D1                STRUC_3:   .SET   STRUC_2   
10D1                STRUC_2:   .SET   STRUC_TOP   
10D1                STRUC_TOP:   .SET   $   
10D1                L_M_1898S36:      
10D1   F1                     POP   AF   
10D2                          ;*Macro unroll:  _else
10D2   C3 D2 10               JP   $   
10D5                          ;*Macro unroll:  STRUC_FWD
10D5                CUR_ADR:   .SET   $   
10CF                          .ORG   STRUC_TOP - 2   
10CF   D5 10                  DW   CUR_ADR   
10D5                          .ORG   CUR_ADR   
10D5                STRUC_TOP:   .SET   $   
10D5   2A 3F 30               LD   HL,(serInPtr)   
10D8   23                     INC   HL   
10D9   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
10DA   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
10DC                          ;*Macro unroll:  _if z
10DC   CA E2 10               JP   z,L_M_1905S43   
10DF   C3 DF 10               JP   $   
10E2                          ;*Macro unroll:  STRUC_PUSH $
10E2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10E2                STRUC_12:   .SET   STRUC_11   
10E2                STRUC_11:   .SET   STRUC_10   
10E2                STRUC_10:   .SET   STRUC_9   
10E2                STRUC_9:   .SET   STRUC_8   
10E2                STRUC_8:   .SET   STRUC_7   
10E2                STRUC_7:   .SET   STRUC_6   
10E2                STRUC_6:   .SET   STRUC_5   
10E2                STRUC_5:   .SET   STRUC_4   
10E2                STRUC_4:   .SET   STRUC_3   
10E2                STRUC_3:   .SET   STRUC_2   
10E2                STRUC_2:   .SET   STRUC_TOP   
10E2                STRUC_TOP:   .SET   $   
10E2                L_M_1905S43:      
10E2   21 00 30               LD   HL,serBuf   
10E5                          ;*Macro unroll:  _endif
10E5                          ;*Macro unroll:  STRUC_FWD
10E5                CUR_ADR:   .SET   $   
10E0                          .ORG   STRUC_TOP - 2   
10E0   E5 10                  DW   CUR_ADR   
10E5                          .ORG   CUR_ADR   
10E5                          ;*Macro unroll:  STRUC_POP
10E5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10E5                STRUC_TOP:   .SET   STRUC_2   
10E5                STRUC_2:   .SET   STRUC_3   
10E5                STRUC_3:   .SET   STRUC_4   
10E5                STRUC_4:   .SET   STRUC_5   
10E5                STRUC_5:   .SET   STRUC_6   
10E5                STRUC_6:   .SET   STRUC_7   
10E5                STRUC_7:   .SET   STRUC_8   
10E5                STRUC_8:   .SET   STRUC_9   
10E5                STRUC_9:   .SET   STRUC_10   
10E5                STRUC_10:   .SET   STRUC_11   
10E5                STRUC_11:   .SET   STRUC_12   
10E5                STRUC_12:   .SET   0   
10E5   22 3F 30               LD   (serInPtr),HL   
10E8   F1                     POP   AF   
10E9   77                     LD   (HL),A   
10EA   3A 43 30               LD   A,(serBufUsed)   
10ED   3C                     INC   A   
10EE   32 43 30               LD   (serBufUsed),A   
10F1   FE 30                  CP   SER_FULLSIZE   
10F3                          ;*Macro unroll:  _if nc
10F3   D2 F9 10               JP   nc,L_M_1915S53   
10F6   C3 F6 10               JP   $   
10F9                          ;*Macro unroll:  STRUC_PUSH $
10F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10F9                STRUC_12:   .SET   STRUC_11   
10F9                STRUC_11:   .SET   STRUC_10   
10F9                STRUC_10:   .SET   STRUC_9   
10F9                STRUC_9:   .SET   STRUC_8   
10F9                STRUC_8:   .SET   STRUC_7   
10F9                STRUC_7:   .SET   STRUC_6   
10F9                STRUC_6:   .SET   STRUC_5   
10F9                STRUC_5:   .SET   STRUC_4   
10F9                STRUC_4:   .SET   STRUC_3   
10F9                STRUC_3:   .SET   STRUC_2   
10F9                STRUC_2:   .SET   STRUC_TOP   
10F9                STRUC_TOP:   .SET   $   
10F9                L_M_1915S53:      
10F9   3E D6                  LD   A,RTS_HIGH   
10FB   D3 80                  OUT   ($80),A   
10FD                          ;*Macro unroll:  _endif
10FD                          ;*Macro unroll:  STRUC_FWD
10FD                CUR_ADR:   .SET   $   
10F7                          .ORG   STRUC_TOP - 2   
10F7   FD 10                  DW   CUR_ADR   
10FD                          .ORG   CUR_ADR   
10FD                          ;*Macro unroll:  STRUC_POP
10FD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10FD                STRUC_TOP:   .SET   STRUC_2   
10FD                STRUC_2:   .SET   STRUC_3   
10FD                STRUC_3:   .SET   STRUC_4   
10FD                STRUC_4:   .SET   STRUC_5   
10FD                STRUC_5:   .SET   STRUC_6   
10FD                STRUC_6:   .SET   STRUC_7   
10FD                STRUC_7:   .SET   STRUC_8   
10FD                STRUC_8:   .SET   STRUC_9   
10FD                STRUC_9:   .SET   STRUC_10   
10FD                STRUC_10:   .SET   STRUC_11   
10FD                STRUC_11:   .SET   STRUC_12   
10FD                STRUC_12:   .SET   0   
10FD                          ;*Macro unroll:  _endif
10FD                          ;*Macro unroll:  STRUC_FWD
10FD                CUR_ADR:   .SET   $   
10D3                          .ORG   STRUC_TOP - 2   
10D3   FD 10                  DW   CUR_ADR   
10FD                          .ORG   CUR_ADR   
10FD                          ;*Macro unroll:  STRUC_POP
10FD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10FD                STRUC_TOP:   .SET   STRUC_2   
10FD                STRUC_2:   .SET   STRUC_3   
10FD                STRUC_3:   .SET   STRUC_4   
10FD                STRUC_4:   .SET   STRUC_5   
10FD                STRUC_5:   .SET   STRUC_6   
10FD                STRUC_6:   .SET   STRUC_7   
10FD                STRUC_7:   .SET   STRUC_8   
10FD                STRUC_8:   .SET   STRUC_9   
10FD                STRUC_9:   .SET   STRUC_10   
10FD                STRUC_10:   .SET   STRUC_11   
10FD                STRUC_11:   .SET   STRUC_12   
10FD                STRUC_12:   .SET   0   
10FD                          ;*Macro unroll:  _endif
10FD                          ;*Macro unroll:  STRUC_FWD
10FD                CUR_ADR:   .SET   $   
10C1                          .ORG   STRUC_TOP - 2   
10C1   FD 10                  DW   CUR_ADR   
10FD                          .ORG   CUR_ADR   
10FD                          ;*Macro unroll:  STRUC_POP
10FD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10FD                STRUC_TOP:   .SET   STRUC_2   
10FD                STRUC_2:   .SET   STRUC_3   
10FD                STRUC_3:   .SET   STRUC_4   
10FD                STRUC_4:   .SET   STRUC_5   
10FD                STRUC_5:   .SET   STRUC_6   
10FD                STRUC_6:   .SET   STRUC_7   
10FD                STRUC_7:   .SET   STRUC_8   
10FD                STRUC_8:   .SET   STRUC_9   
10FD                STRUC_9:   .SET   STRUC_10   
10FD                STRUC_10:   .SET   STRUC_11   
10FD                STRUC_11:   .SET   STRUC_12   
10FD                STRUC_12:   .SET   0   
10FD   E1                     POP   HL   
10FE   F1                     POP   AF   
10FF   FB                     EI      
1100   C9                     RET      
1101                             ; 
1101                             ; getc - input
1101                             ; returns: A = input char
1101                             ; 
1101                GETC:        
1101                          IF   TESTMODE   
1101   E5                     PUSH   HL   
1102   2A 61 32               LD   HL,(char_pointer)   
1105   7E                     LD   A,(HL)   
1106   23                     INC   HL   
1107   22 61 32               LD   (char_pointer),HL   
110A   E1                     POP   HL   
110B   C9                     RET      
110C                          ELSE      
                              ;*Macro unroll:  _do
                              JR   L_M_1939S81   
                              JP   $   
                              ;*Macro unroll:  DLOOP_PUSH $
                    DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
                    DLOOP_12:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_TOP   
                    DLOOP_TOP:   .SET   $   
                    L_M_1939S81:      
                              LD   A,(serBufUsed)   
                              CP   $00   
                              ;*Macro unroll:  _until nz
                              JP   nz,DLOOP_TOP - 3   
                              ;*Macro unroll:  DLOOP_FWD               ; needed?
                    CUR_ADR:   .SET   $   ; needed?
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  _enddo
                              JP   DLOOP_TOP   
                              ;*Macro unroll:  DLOOP_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  DLOOP_POP
                    DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
                    DLOOP_TOP:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_12   
                    DLOOP_12:   .SET   0   
                              PUSH   HL   
                              LD   HL,(serRdPtr)   
                              INC   HL   
                              LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
                              CP   (serBuf + SER_BUFSIZE) & $FF   
                              ;*Macro unroll:  _if z
                              JP   z,L_M_1949S91   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1949S91:      
                              LD   HL,serBuf   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              DI      
                              LD   (serRdPtr),HL   
                              LD   A,(serBufUsed)   
                              DEC   A   
                              LD   (serBufUsed),A   
                              CP   SER_EMPTYSIZE   
                              ;*Macro unroll:  _if c
                              JP   c,L_M_1958S100   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1958S100:      
                              LD   A,RTS_LOW   
                              OUT   ($80),A   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              LD   A,(HL)   
                              EI      
                              POP   HL   
                              RET      ; Char ready in A
110C                          ENDIF      
110C                             ; 
110C                             ; putc - output a character
110C                             ; params: A = char to output
110C                             ; 
110C                PUTC:        
110C   F5                     PUSH   AF   ; Store character
110D                          ;*Macro unroll:  _do
110D   18 03                  JR   L_M_1973S117   
110F   C3 0F 11               JP   $   
1112                          ;*Macro unroll:  DLOOP_PUSH $
1112                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1112                DLOOP_12:   .SET   DLOOP_11   
1112                DLOOP_11:   .SET   DLOOP_10   
1112                DLOOP_10:   .SET   DLOOP_9   
1112                DLOOP_9:   .SET   DLOOP_8   
1112                DLOOP_8:   .SET   DLOOP_7   
1112                DLOOP_7:   .SET   DLOOP_6   
1112                DLOOP_6:   .SET   DLOOP_5   
1112                DLOOP_5:   .SET   DLOOP_4   
1112                DLOOP_4:   .SET   DLOOP_3   
1112                DLOOP_3:   .SET   DLOOP_2   
1112                DLOOP_2:   .SET   DLOOP_TOP   
1112                DLOOP_TOP:   .SET   $   
1112                L_M_1973S117:      
1112   DB 80                  IN   A,($80)   ; Status byte
1114   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
1116                          ;*Macro unroll:  _until nz
1116   C2 0F 11               JP   nz,DLOOP_TOP - 3   
1119                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1119                CUR_ADR:   .SET   $   ; needed?
1110                          .ORG   DLOOP_TOP - 2   
1110   19 11                  DW   CUR_ADR   
1119                          .ORG   CUR_ADR   
1119                          ;*Macro unroll:  _enddo
1119   C3 12 11               JP   DLOOP_TOP   
111C                          ;*Macro unroll:  DLOOP_FWD
111C                CUR_ADR:   .SET   $   
1110                          .ORG   DLOOP_TOP - 2   
1110   1C 11                  DW   CUR_ADR   
111C                          .ORG   CUR_ADR   
111C                          ;*Macro unroll:  DLOOP_POP
111C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
111C                DLOOP_TOP:   .SET   DLOOP_2   
111C                DLOOP_2:   .SET   DLOOP_3   
111C                DLOOP_3:   .SET   DLOOP_4   
111C                DLOOP_4:   .SET   DLOOP_5   
111C                DLOOP_5:   .SET   DLOOP_6   
111C                DLOOP_6:   .SET   DLOOP_7   
111C                DLOOP_7:   .SET   DLOOP_8   
111C                DLOOP_8:   .SET   DLOOP_9   
111C                DLOOP_9:   .SET   DLOOP_10   
111C                DLOOP_10:   .SET   DLOOP_11   
111C                DLOOP_11:   .SET   DLOOP_12   
111C                DLOOP_12:   .SET   0   
111C   F1                     POP   AF   ; Retrieve character
111D   D3 81                  OUT   ($81),A   ; Output the character
111F   C9                     RET      
1120                INPUTREADY:      
1120   3A 43 30               LD   A,(serBufUsed)   
1123   FE 00                  CP   $0   
1125   C9                     RET      
1126                             ; 
1126                             ; getline - input line of text ***
1126                             ; params: HL = addr, DE = max (currently up to 255)
1126                             ; returns: BC = length - up to 255
1126                             ; 
1126                GETLINE:      
1126   F5                     PUSH   AF   
1127   E5                     PUSH   HL   
1128                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
1128                          ;*Macro unroll:  ppush0 D,E
1128   DD 73 00               LD   (IX+0),E   
112B   DD 23                  INC   IX   
112D   DD 72 00               LD   (IX+0),D   
1130   DD 23                  INC   IX   
1132   11 73 10               LD   DE,TXT_PROMPT   
1135   CD EB 11               CALL   printPStr   
1138                          ;*Macro unroll:  ppop0 D,E
1138   DD 2B                  DEC   IX   
113A   DD 56 00               LD   D,(IX+0)   
113D   DD 2B                  DEC   IX   
113F   DD 5E 00               LD   E,(IX+0)   
1142   E1                     POP   HL   
1143   E5                     PUSH   HL   
1144   01 00 00               LD   BC,0   
1147                          ;*Macro unroll:  _do
1147   18 03                  JR   L_M_1997S144   
1149   C3 49 11               JP   $   
114C                          ;*Macro unroll:  DLOOP_PUSH $
114C                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
114C                DLOOP_12:   .SET   DLOOP_11   
114C                DLOOP_11:   .SET   DLOOP_10   
114C                DLOOP_10:   .SET   DLOOP_9   
114C                DLOOP_9:   .SET   DLOOP_8   
114C                DLOOP_8:   .SET   DLOOP_7   
114C                DLOOP_7:   .SET   DLOOP_6   
114C                DLOOP_6:   .SET   DLOOP_5   
114C                DLOOP_5:   .SET   DLOOP_4   
114C                DLOOP_4:   .SET   DLOOP_3   
114C                DLOOP_3:   .SET   DLOOP_2   
114C                DLOOP_2:   .SET   DLOOP_TOP   
114C                DLOOP_TOP:   .SET   $   
114C                L_M_1997S144:      
114C                          ;*Macro unroll:  _do
114C   18 03                  JR   L_M_1998S145   
114E   C3 4E 11               JP   $   
1151                          ;*Macro unroll:  DLOOP_PUSH $
1151                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1151                DLOOP_12:   .SET   DLOOP_11   
1151                DLOOP_11:   .SET   DLOOP_10   
1151                DLOOP_10:   .SET   DLOOP_9   
1151                DLOOP_9:   .SET   DLOOP_8   
1151                DLOOP_8:   .SET   DLOOP_7   
1151                DLOOP_7:   .SET   DLOOP_6   
1151                DLOOP_6:   .SET   DLOOP_5   
1151                DLOOP_5:   .SET   DLOOP_4   
1151                DLOOP_4:   .SET   DLOOP_3   
1151                DLOOP_3:   .SET   DLOOP_2   
1151                DLOOP_2:   .SET   DLOOP_TOP   
1151                DLOOP_TOP:   .SET   $   
1151                L_M_1998S145:      
1151   CD 01 11               CALL   getc   
1154   FE 08                  CP   $08   
1156                          ;*Macro unroll:  _if z
1156   CA 5C 11               JP   z,L_M_2001S148   
1159   C3 59 11               JP   $   
115C                          ;*Macro unroll:  STRUC_PUSH $
115C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
115C                STRUC_12:   .SET   STRUC_11   
115C                STRUC_11:   .SET   STRUC_10   
115C                STRUC_10:   .SET   STRUC_9   
115C                STRUC_9:   .SET   STRUC_8   
115C                STRUC_8:   .SET   STRUC_7   
115C                STRUC_7:   .SET   STRUC_6   
115C                STRUC_6:   .SET   STRUC_5   
115C                STRUC_5:   .SET   STRUC_4   
115C                STRUC_4:   .SET   STRUC_3   
115C                STRUC_3:   .SET   STRUC_2   
115C                STRUC_2:   .SET   STRUC_TOP   
115C                STRUC_TOP:   .SET   $   
115C                L_M_2001S148:      
115C                          ;*Macro unroll:  checkZeroWord B,C
115C   79                     LD   A,C   
115D   B0                     OR   B   
115E                          ;*Macro unroll:  _if nz
115E   C2 64 11               JP   nz,L_M_2003S150   
1161   C3 61 11               JP   $   
1164                          ;*Macro unroll:  STRUC_PUSH $
1164                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1164                STRUC_12:   .SET   STRUC_11   
1164                STRUC_11:   .SET   STRUC_10   
1164                STRUC_10:   .SET   STRUC_9   
1164                STRUC_9:   .SET   STRUC_8   
1164                STRUC_8:   .SET   STRUC_7   
1164                STRUC_7:   .SET   STRUC_6   
1164                STRUC_6:   .SET   STRUC_5   
1164                STRUC_5:   .SET   STRUC_4   
1164                STRUC_4:   .SET   STRUC_3   
1164                STRUC_3:   .SET   STRUC_2   
1164                STRUC_2:   .SET   STRUC_TOP   
1164                STRUC_TOP:   .SET   $   
1164                L_M_2003S150:      
1164   2B                     DEC   HL   
1165   0B                     DEC   BC   
1166   3E 08                  LD   a,$08   
1168   CD 0C 11               CALL   putc   
116B   CD 0D 12               CALL   printSpace   
116E   3E 08                  LD   A,$08   
1170   CD 0C 11               CALL   putc   
1173                          ;*Macro unroll:  _endif
1173                          ;*Macro unroll:  STRUC_FWD
1173                CUR_ADR:   .SET   $   
1162                          .ORG   STRUC_TOP - 2   
1162   73 11                  DW   CUR_ADR   
1173                          .ORG   CUR_ADR   
1173                          ;*Macro unroll:  STRUC_POP
1173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1173                STRUC_TOP:   .SET   STRUC_2   
1173                STRUC_2:   .SET   STRUC_3   
1173                STRUC_3:   .SET   STRUC_4   
1173                STRUC_4:   .SET   STRUC_5   
1173                STRUC_5:   .SET   STRUC_6   
1173                STRUC_6:   .SET   STRUC_7   
1173                STRUC_7:   .SET   STRUC_8   
1173                STRUC_8:   .SET   STRUC_9   
1173                STRUC_9:   .SET   STRUC_10   
1173                STRUC_10:   .SET   STRUC_11   
1173                STRUC_11:   .SET   STRUC_12   
1173                STRUC_12:   .SET   0   
1173                          ;*Macro unroll:  _else
1173   C3 73 11               JP   $   
1176                          ;*Macro unroll:  STRUC_FWD
1176                CUR_ADR:   .SET   $   
115A                          .ORG   STRUC_TOP - 2   
115A   76 11                  DW   CUR_ADR   
1176                          .ORG   CUR_ADR   
1176                STRUC_TOP:   .SET   $   
1176   77                     LD   (HL),A   
1177   23                     INC   HL   
1178   03                     INC   BC   
1179   CB 7F                  BIT   7,a   
117B                          ;*Macro unroll:  _if z
117B   CA 81 11               JP   z,L_M_2017S164   
117E   C3 7E 11               JP   $   
1181                          ;*Macro unroll:  STRUC_PUSH $
1181                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1181                STRUC_12:   .SET   STRUC_11   
1181                STRUC_11:   .SET   STRUC_10   
1181                STRUC_10:   .SET   STRUC_9   
1181                STRUC_9:   .SET   STRUC_8   
1181                STRUC_8:   .SET   STRUC_7   
1181                STRUC_7:   .SET   STRUC_6   
1181                STRUC_6:   .SET   STRUC_5   
1181                STRUC_5:   .SET   STRUC_4   
1181                STRUC_4:   .SET   STRUC_3   
1181                STRUC_3:   .SET   STRUC_2   
1181                STRUC_2:   .SET   STRUC_TOP   
1181                STRUC_TOP:   .SET   $   
1181                L_M_2017S164:      
1181   CD 0C 11               CALL   putc   
1184                          ;*Macro unroll:  _endif
1184                          ;*Macro unroll:  STRUC_FWD
1184                CUR_ADR:   .SET   $   
117F                          .ORG   STRUC_TOP - 2   
117F   84 11                  DW   CUR_ADR   
1184                          .ORG   CUR_ADR   
1184                          ;*Macro unroll:  STRUC_POP
1184                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1184                STRUC_TOP:   .SET   STRUC_2   
1184                STRUC_2:   .SET   STRUC_3   
1184                STRUC_3:   .SET   STRUC_4   
1184                STRUC_4:   .SET   STRUC_5   
1184                STRUC_5:   .SET   STRUC_6   
1184                STRUC_6:   .SET   STRUC_7   
1184                STRUC_7:   .SET   STRUC_8   
1184                STRUC_8:   .SET   STRUC_9   
1184                STRUC_9:   .SET   STRUC_10   
1184                STRUC_10:   .SET   STRUC_11   
1184                STRUC_11:   .SET   STRUC_12   
1184                STRUC_12:   .SET   0   
1184   FE 0D                  CP   "\r"   
1186   28 0B                  JR   z,getLineCheck   
1188   FE 0A                  CP   "\n"   
118A   28 07                  JR   z,getLineCheck   
118C   7B                     LD   A,E   
118D   B9                     CP   C   
118E   38 03                  JR   c,getLineCheck   
1190                          ;*Macro unroll:  _endif
1190                          ;*Macro unroll:  STRUC_FWD
1190                CUR_ADR:   .SET   $   
1174                          .ORG   STRUC_TOP - 2   
1174   90 11                  DW   CUR_ADR   
1190                          .ORG   CUR_ADR   
1190                          ;*Macro unroll:  STRUC_POP
1190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1190                STRUC_TOP:   .SET   STRUC_2   
1190                STRUC_2:   .SET   STRUC_3   
1190                STRUC_3:   .SET   STRUC_4   
1190                STRUC_4:   .SET   STRUC_5   
1190                STRUC_5:   .SET   STRUC_6   
1190                STRUC_6:   .SET   STRUC_7   
1190                STRUC_7:   .SET   STRUC_8   
1190                STRUC_8:   .SET   STRUC_9   
1190                STRUC_9:   .SET   STRUC_10   
1190                STRUC_10:   .SET   STRUC_11   
1190                STRUC_11:   .SET   STRUC_12   
1190                STRUC_12:   .SET   0   
1190                          ;*Macro unroll:  _enddo
1190   C3 51 11               JP   DLOOP_TOP   
1193                          ;*Macro unroll:  DLOOP_FWD
1193                CUR_ADR:   .SET   $   
114F                          .ORG   DLOOP_TOP - 2   
114F   93 11                  DW   CUR_ADR   
1193                          .ORG   CUR_ADR   
1193                          ;*Macro unroll:  DLOOP_POP
1193                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1193                DLOOP_TOP:   .SET   DLOOP_2   
1193                DLOOP_2:   .SET   DLOOP_3   
1193                DLOOP_3:   .SET   DLOOP_4   
1193                DLOOP_4:   .SET   DLOOP_5   
1193                DLOOP_5:   .SET   DLOOP_6   
1193                DLOOP_6:   .SET   DLOOP_7   
1193                DLOOP_7:   .SET   DLOOP_8   
1193                DLOOP_8:   .SET   DLOOP_9   
1193                DLOOP_9:   .SET   DLOOP_10   
1193                DLOOP_10:   .SET   DLOOP_11   
1193                DLOOP_11:   .SET   DLOOP_12   
1193                DLOOP_12:   .SET   0   
1193                GETLINECHECK:      
1193   3E 00                  LD   a,0   
1195   B9                     CP   c   
1196                          ;*Macro unroll:  _until nz
1196   C2 49 11               JP   nz,DLOOP_TOP - 3   
1199                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1199                CUR_ADR:   .SET   $   ; needed?
114A                          .ORG   DLOOP_TOP - 2   
114A   99 11                  DW   CUR_ADR   
1199                          .ORG   CUR_ADR   
1199                          ;*Macro unroll:  _enddo
1199   C3 4C 11               JP   DLOOP_TOP   
119C                          ;*Macro unroll:  DLOOP_FWD
119C                CUR_ADR:   .SET   $   
114A                          .ORG   DLOOP_TOP - 2   
114A   9C 11                  DW   CUR_ADR   
119C                          .ORG   CUR_ADR   
119C                          ;*Macro unroll:  DLOOP_POP
119C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
119C                DLOOP_TOP:   .SET   DLOOP_2   
119C                DLOOP_2:   .SET   DLOOP_3   
119C                DLOOP_3:   .SET   DLOOP_4   
119C                DLOOP_4:   .SET   DLOOP_5   
119C                DLOOP_5:   .SET   DLOOP_6   
119C                DLOOP_6:   .SET   DLOOP_7   
119C                DLOOP_7:   .SET   DLOOP_8   
119C                DLOOP_8:   .SET   DLOOP_9   
119C                DLOOP_9:   .SET   DLOOP_10   
119C                DLOOP_10:   .SET   DLOOP_11   
119C                DLOOP_11:   .SET   DLOOP_12   
119C                DLOOP_12:   .SET   0   
119C   F1                     POP   AF   
119D   E1                     POP   HL   
119E   CD 04 12               CALL   printCR   
11A1   C9                     RET      
11A2                PRINTROUTINE:      
11A2                          ;*Macro unroll:  _do
11A2   18 03                  JR   L_M_2039S188   
11A4   C3 A4 11               JP   $   
11A7                          ;*Macro unroll:  DLOOP_PUSH $
11A7                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
11A7                DLOOP_12:   .SET   DLOOP_11   
11A7                DLOOP_11:   .SET   DLOOP_10   
11A7                DLOOP_10:   .SET   DLOOP_9   
11A7                DLOOP_9:   .SET   DLOOP_8   
11A7                DLOOP_8:   .SET   DLOOP_7   
11A7                DLOOP_7:   .SET   DLOOP_6   
11A7                DLOOP_6:   .SET   DLOOP_5   
11A7                DLOOP_5:   .SET   DLOOP_4   
11A7                DLOOP_4:   .SET   DLOOP_3   
11A7                DLOOP_3:   .SET   DLOOP_2   
11A7                DLOOP_2:   .SET   DLOOP_TOP   
11A7                DLOOP_TOP:   .SET   $   
11A7                L_M_2039S188:      
11A7   1A                     LD   A,(DE)   
11A8   CD 0C 11               CALL   putc   
11AB   13                     INC   DE   
11AC   0B                     DEC   BC   
11AD                          ;*Macro unroll:  checkZeroWord B,C
11AD   79                     LD   A,C   
11AE   B0                     OR   B   
11AF                          ;*Macro unroll:  _until z
11AF   CA A4 11               JP   z,DLOOP_TOP - 3   
11B2                          ;*Macro unroll:  DLOOP_FWD               ; needed?
11B2                CUR_ADR:   .SET   $   ; needed?
11A5                          .ORG   DLOOP_TOP - 2   
11A5   B2 11                  DW   CUR_ADR   
11B2                          .ORG   CUR_ADR   
11B2                          ;*Macro unroll:  _enddo
11B2   C3 A7 11               JP   DLOOP_TOP   
11B5                          ;*Macro unroll:  DLOOP_FWD
11B5                CUR_ADR:   .SET   $   
11A5                          .ORG   DLOOP_TOP - 2   
11A5   B5 11                  DW   CUR_ADR   
11B5                          .ORG   CUR_ADR   
11B5                          ;*Macro unroll:  DLOOP_POP
11B5                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
11B5                DLOOP_TOP:   .SET   DLOOP_2   
11B5                DLOOP_2:   .SET   DLOOP_3   
11B5                DLOOP_3:   .SET   DLOOP_4   
11B5                DLOOP_4:   .SET   DLOOP_5   
11B5                DLOOP_5:   .SET   DLOOP_6   
11B5                DLOOP_6:   .SET   DLOOP_7   
11B5                DLOOP_7:   .SET   DLOOP_8   
11B5                DLOOP_8:   .SET   DLOOP_9   
11B5                DLOOP_9:   .SET   DLOOP_10   
11B5                DLOOP_10:   .SET   DLOOP_11   
11B5                DLOOP_11:   .SET   DLOOP_12   
11B5                DLOOP_12:   .SET   0   
11B5   C9                     RET      
11B6                             ; 
11B6                             ; getKey -  inputs a line buffered character
11B6                             ; params: none
11B6                             ; returns: A = character,
11B6                             ; 
11B6                GETKEY:      
11B6   E5                     PUSH   HL   
11B7   D5                     PUSH   DE   
11B8   C5                     PUSH   BC   
11B9   2A 49 30               LD   HL,(currkey)   
11BC   ED 5B 4B 30            LD   DE,(lineBufTop)   
11C0   B7                     OR   A   
11C1   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
11C3                          ;*Macro unroll:  _if nc
11C3   D2 C9 11               JP   nc,L_M_2061S212   
11C6   C3 C6 11               JP   $   
11C9                          ;*Macro unroll:  STRUC_PUSH $
11C9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
11C9                STRUC_12:   .SET   STRUC_11   
11C9                STRUC_11:   .SET   STRUC_10   
11C9                STRUC_10:   .SET   STRUC_9   
11C9                STRUC_9:   .SET   STRUC_8   
11C9                STRUC_8:   .SET   STRUC_7   
11C9                STRUC_7:   .SET   STRUC_6   
11C9                STRUC_6:   .SET   STRUC_5   
11C9                STRUC_5:   .SET   STRUC_4   
11C9                STRUC_4:   .SET   STRUC_3   
11C9                STRUC_3:   .SET   STRUC_2   
11C9                STRUC_2:   .SET   STRUC_TOP   
11C9                STRUC_TOP:   .SET   $   
11C9                L_M_2061S212:      
11C9   2A 45 30               LD   HL,(lineBufStart)   ; lineBuf
11CC   ED 5B 47 30            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
11D0   CD 26 11               CALL   getline   
11D3   21 4D 30               LD   HL,lineBuf   
11D6   22 49 30               LD   (currkey),HL   
11D9   B7                     OR   A   
11DA   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
11DC   22 4B 30               LD   (lineBufTop),HL   
11DF                          ;*Macro unroll:  _endif
11DF                          ;*Macro unroll:  STRUC_FWD
11DF                CUR_ADR:   .SET   $   
11C7                          .ORG   STRUC_TOP - 2   
11C7   DF 11                  DW   CUR_ADR   
11DF                          .ORG   CUR_ADR   
11DF                          ;*Macro unroll:  STRUC_POP
11DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
11DF                STRUC_TOP:   .SET   STRUC_2   
11DF                STRUC_2:   .SET   STRUC_3   
11DF                STRUC_3:   .SET   STRUC_4   
11DF                STRUC_4:   .SET   STRUC_5   
11DF                STRUC_5:   .SET   STRUC_6   
11DF                STRUC_6:   .SET   STRUC_7   
11DF                STRUC_7:   .SET   STRUC_8   
11DF                STRUC_8:   .SET   STRUC_9   
11DF                STRUC_9:   .SET   STRUC_10   
11DF                STRUC_10:   .SET   STRUC_11   
11DF                STRUC_11:   .SET   STRUC_12   
11DF                STRUC_12:   .SET   0   
11DF   2A 49 30               LD   HL,(currkey)   
11E2   7E                     LD   A,(HL)   ; get next key from input lineBuf
11E3   23                     INC   HL   
11E4   22 49 30               LD   (currkey),HL   ; increment currkey
11E7   C1                     POP   BC   
11E8   D1                     POP   DE   
11E9   E1                     POP   HL   
11EA   C9                     RET      
11EB                             ; 
11EB                             ; Output pascal string ***
11EB                             ; params: DE = addr
11EB                             ; 
11EB                PRINTPSTR:      
11EB   F5                     PUSH   AF   
11EC   C5                     PUSH   BC   
11ED   D5                     PUSH   DE   
11EE   1A                     LD   A,(DE)   
11EF   4F                     LD   C,A   
11F0   06 00                  LD   B,0   
11F2   13                     INC   DE   
11F3   CD A2 11               CALL   printRoutine   
11F6   D1                     POP   DE   
11F7   C1                     POP   BC   
11F8   F1                     POP   AF   
11F9   C9                     RET      
11FA                             ; 
11FA                             ; Output string
11FA                             ; params: DE = addr, BC = length
11FA                             ; 
11FA                PRINTSTR:      
11FA   F5                     PUSH   AF   
11FB   C5                     PUSH   BC   
11FC   D5                     PUSH   DE   
11FD   CD A2 11               CALL   printRoutine   
1200   D1                     POP   DE   
1201   C1                     POP   BC   
1202   F1                     POP   AF   
1203   C9                     RET      
1204                PRINTCR:      
1204   D5                     PUSH   DE   
1205   11 70 10               LD   DE,TXT_NEWLINE   
1208   CD EB 11               CALL   printPStr   
120B   D1                     POP   DE   
120C   C9                     RET      
120D                PRINTSPACE:      
120D   F5                     PUSH   AF   
120E   3E 20                  LD   A," "   
1210   CD 0C 11               CALL   putc   
1213   F1                     POP   AF   
1214   C9                     RET      
1215                          ;*Macro unroll: CODE "lit",3,0,LIT
1215                HEADER_LIT:      
1215   3B 10                  DW   link   
1217                LINK:     .SET   HEADER_LIT   
1217   03                     DB   0 + 3   
1218   6C 69 74               DB   "lit"   
121B                LIT:         
121B                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
121B   DD 71 00               LD   (IX+0),C   ; pushTOS
121E   DD 23                  INC   IX   
1220   DD 70 00               LD   (IX+0),B   
1223   DD 23                  INC   IX   
1225   E1                     POP   HL   ; pop address of next Forth word in HL
1226                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
1226   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
1227   23                     INC   HL   
1228   46                     LD   B,(HL)   
1229   23                     INC   HL   
122A                          ;*Macro unroll:  NEXT1
122A   C3 0E 0F               JP   enter1   
122D                          ;*Macro unroll: CODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
122D                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
122D   15 12                  DW   link   
122F                LINK:     .SET   HEADER_ROT   
122F   03                     DB   0 + 3   
1230   72 6F 74               DB   "rot"   
1233                ROT:         
1233                             ; x3 in BC
1233                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
1233   DD 2B                  DEC   IX   ; x2 in DE
1235   DD 56 00               LD   D,(IX+0)   
1238   DD 2B                  DEC   IX   
123A   DD 5E 00               LD   E,(IX+0)   
123D                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
123D   DD 2B                  DEC   IX   ; x1 in HL
123F   DD 66 00               LD   H,(IX+0)   
1242   DD 2B                  DEC   IX   
1244   DD 6E 00               LD   L,(IX+0)   
1247                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
1247   DD 73 00               LD   (IX+0),E   ; x2 on stack
124A   DD 23                  INC   IX   
124C   DD 72 00               LD   (IX+0),D   
124F   DD 23                  INC   IX   
1251                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
1251                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1251   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1254   DD 23                  INC   IX   
1256   DD 70 00               LD   (IX+0),B   
1259   DD 23                  INC   IX   
125B   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
125C   4D                     LD   C,L   
125D                             ; x1 in BC
125D                          ;*Macro unroll:  NEXT
125D   C3 0D 0F               JP   enter   
1260                          ;*Macro unroll: CODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
1260                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
1260   2D 12                  DW   link   
1262                LINK:     .SET   HEADER_NROT   
1262   04                     DB   0 + 4   
1263   2D 72 6F 74            DB   "-rot"   
1267                NROT:        
1267                             ; x3 in BC
1267                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
1267   DD 2B                  DEC   IX   ; x2 in DE
1269   DD 56 00               LD   D,(IX+0)   
126C   DD 2B                  DEC   IX   
126E   DD 5E 00               LD   E,(IX+0)   
1271                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
1271   DD 2B                  DEC   IX   ; x1 in HL
1273   DD 66 00               LD   H,(IX+0)   
1276   DD 2B                  DEC   IX   
1278   DD 6E 00               LD   L,(IX+0)   
127B                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
127B                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
127B   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
127E   DD 23                  INC   IX   
1280   DD 70 00               LD   (IX+0),B   
1283   DD 23                  INC   IX   
1285   44                     LD   B,H   ; PUSH x1 - x3 x1
1286   4D                     LD   C,L   
1287                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
1287                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1287   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
128A   DD 23                  INC   IX   
128C   DD 70 00               LD   (IX+0),B   
128F   DD 23                  INC   IX   
1291   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
1292   4B                     LD   C,E   
1293                             ; x2 in BC
1293                          ;*Macro unroll:  NEXT
1293   C3 0D 0F               JP   enter   
1296                          ;*Macro unroll: CODE "dup",3,0,DUPP        ; x -- x x
1296                HEADER_DUPP:      ; x -- x x
1296   60 12                  DW   link   
1298                LINK:     .SET   HEADER_DUPP   
1298   03                     DB   0 + 3   
1299   64 75 70               DB   "dup"   
129C                DUPP:        
129C                          ;*Macro unroll:  ppush0 B,C
129C   DD 71 00               LD   (IX+0),C   
129F   DD 23                  INC   IX   
12A1   DD 70 00               LD   (IX+0),B   
12A4   DD 23                  INC   IX   
12A6                          ;*Macro unroll:  NEXT
12A6   C3 0D 0F               JP   enter   
12A9                             ; SWAP     x1 x2 -- x2 x1    swap top two items
12A9                          ;*Macro unroll: CODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
12A9                HEADER_SWAP:      ; x1 x2 -- x2 x1
12A9   96 12                  DW   link   
12AB                LINK:     .SET   HEADER_SWAP   
12AB   04                     DB   0 + 4   
12AC   73 77 61 70            DB   "swap"   
12B0                SWAP:        
12B0                          ;*Macro unroll:  ppop0 D,E
12B0   DD 2B                  DEC   IX   
12B2   DD 56 00               LD   D,(IX+0)   
12B5   DD 2B                  DEC   IX   
12B7   DD 5E 00               LD   E,(IX+0)   
12BA                          ;*Macro unroll:  ppush D,E
12BA                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12BA   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
12BD   DD 23                  INC   IX   
12BF   DD 70 00               LD   (IX+0),B   
12C2   DD 23                  INC   IX   
12C4   42                     LD   B,D   
12C5   4B                     LD   C,E   
12C6                          ;*Macro unroll:  NEXT
12C6   C3 0D 0F               JP   enter   
12C9                          ;*Macro unroll: CODE "drop",4,0,DROP      ; x --
12C9                HEADER_DROP:      ; x --
12C9   A9 12                  DW   link   
12CB                LINK:     .SET   HEADER_DROP   
12CB   04                     DB   0 + 4   
12CC   64 72 6F 70            DB   "drop"   
12D0                DROP:        
12D0                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
12D0   DD 2B                  DEC   IX   ; drop top of stack
12D2   DD 46 00               LD   B,(IX+0)   
12D5   DD 2B                  DEC   IX   
12D7   DD 4E 00               LD   C,(IX+0)   
12DA                          ;*Macro unroll:  NEXT
12DA   C3 0D 0F               JP   enter   
12DD                             ; OVER    x1 x2 -- x1 x2 x1
12DD                          ;*Macro unroll: CODE "over",4,0,OVER
12DD                HEADER_OVER:      
12DD   C9 12                  DW   link   
12DF                LINK:     .SET   HEADER_OVER   
12DF   04                     DB   0 + 4   
12E0   6F 76 65 72            DB   "over"   
12E4                OVER:        
12E4                          ;*Macro unroll:  ppop0 H,L
12E4   DD 2B                  DEC   IX   
12E6   DD 66 00               LD   H,(IX+0)   
12E9   DD 2B                  DEC   IX   
12EB   DD 6E 00               LD   L,(IX+0)   
12EE                          ;*Macro unroll:  ppush0 H,L
12EE   DD 75 00               LD   (IX+0),L   
12F1   DD 23                  INC   IX   
12F3   DD 74 00               LD   (IX+0),H   
12F6   DD 23                  INC   IX   
12F8                          ;*Macro unroll:  ppush H,L
12F8                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12F8   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
12FB   DD 23                  INC   IX   
12FD   DD 70 00               LD   (IX+0),B   
1300   DD 23                  INC   IX   
1302   44                     LD   B,H   
1303   4D                     LD   C,L   
1304                          ;*Macro unroll:  NEXT
1304   C3 0D 0F               JP   enter   
1307                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
1307                          ;*Macro unroll: CODE ">r",2,0,TOR
1307                HEADER_TOR:      
1307   DD 12                  DW   link   
1309                LINK:     .SET   HEADER_TOR   
1309   02                     DB   0 + 2   
130A   3E 72                  DB   ">r"   
130C                TOR:         
130C   E1                     POP   HL   
130D   C5                     PUSH   BC   
130E   E5                     PUSH   HL   
130F                          ;*Macro unroll:  ppop0 B,C
130F   DD 2B                  DEC   IX   
1311   DD 46 00               LD   B,(IX+0)   
1314   DD 2B                  DEC   IX   
1316   DD 4E 00               LD   C,(IX+0)   
1319                          ;*Macro unroll:  NEXT
1319   C3 0D 0F               JP   enter   
131C                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
131C                          ;*Macro unroll: CODE "r>",2,0,RFROM
131C                HEADER_RFROM:      
131C   07 13                  DW   link   
131E                LINK:     .SET   HEADER_RFROM   
131E   02                     DB   0 + 2   
131F   72 3E                  DB   "r>"   
1321                RFROM:       
1321                          ;*Macro unroll:  ppush0 B,C
1321   DD 71 00               LD   (IX+0),C   
1324   DD 23                  INC   IX   
1326   DD 70 00               LD   (IX+0),B   
1329   DD 23                  INC   IX   
132B   E1                     POP   HL   
132C   C1                     POP   BC   
132D   E5                     PUSH   HL   
132E                          ;*Macro unroll:  NEXT
132E   C3 0D 0F               JP   enter   
1331                             ;   2DROP       ( w w -- )
1331                             ;               Discard two items on stack.
1331                          ;*Macro unroll: CODE	'2DROP',5,0,DDROP
1331                HEADER_DDROP:      
1331   1C 13                  DW   link   
1333                LINK:     .SET   HEADER_DDROP   
1333   05                     DB   0 + 5   
1334   32 44 52 4F 50         DB   "2DROP"   
1339                DDROP:       
1339                          ;*Macro unroll:  ENTER
1339   CF                     RST   $08   
133A   D0 12 D0 12 1E 0F      DW   DROP,DROP,EXIT   
1340                             ;   2DUP        ( w1 w2 -- w1 w2 w1 w2 )
1340                             ;               Duplicate top two items.
1340                          ;*Macro unroll: CODE	'2DUP',4,0,DDUP
1340                HEADER_DDUP:      
1340   31 13                  DW   link   
1342                LINK:     .SET   HEADER_DDUP   
1342   04                     DB   0 + 4   
1343   32 44 55 50            DB   "2DUP"   
1347                DDUP:        
1347                          ;*Macro unroll:  ENTER
1347   CF                     RST   $08   
1348   E4 12 E4 12 1E 0F      DW   OVER,OVER,EXIT   
134E                LITSTR:      ; pushes ptr to string and length on stack
134E   CF                     RST   $08   ; enter forth
134F   21 13                  DW   rfrom   
1351   68 13 E4 12 E4 12 CE 00 DW   count,over,over,plus   
1359   0C 13                  DW   tor   
135B                          ;*Macro unroll:  EXIT
135B   1E 0F                  DW   exit   
135D   C3 0D 0F               JP   enter   
1360                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
1360                          ;*Macro unroll: CODE "count",5,0,count
1360                HEADER_COUNT:      
1360   40 13                  DW   link   
1362                LINK:     .SET   HEADER_count   
1362   05                     DB   0 + 5   
1363   63 6F 75 6E 74         DB   "count"   
1368                COUNT:       
1368                          ;*Macro unroll:  ENTER
1368   CF                     RST   $08   
1369   9C 12 1B 12 01 00 CE 00 DW   DUPP,lit,1,plus   ; ( ptr -- ptr ptr+1)
1371   B0 12 7E 0F            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
1375                          ;*Macro unroll:  EXIT
1375   1E 0F                  DW   exit   
1377   C3 0D 0F               JP   enter   
137A                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
137A                             ; to define the name s" using asm80
137A                          ;*Macro unroll: CODE {"s",$22},2,msk_immed,squote
137A                HEADER_SQUOTE:      
137A   60 13                  DW   link   
137C                LINK:     .SET   HEADER_squote   
137C   82                     DB   msk_immed + 2   
137D   73 22                  DB   "s",$22   
137F                SQUOTE:      
137F   18 04                  JR   qt   
1381                          ;*Macro unroll: CODE $22,1,msk_immed,qt
1381                HEADER_QT:      
1381   7A 13                  DW   link   
1383                LINK:     .SET   HEADER_qt   
1383   81                     DB   msk_immed + 1   
1384   22                     DB   $22   
1385                QT:          
1385                          ;*Macro unroll:  ENTER
1385   CF                     RST   $08   
1386   26 09 51 0F 58 03      DW   state,fetch,zequal   
138C                          ;*Macro unroll:  cIf
138C   A3 07 00 00            DW   QBRAN,0   
1390                          ;*Macro unroll:  CPL_PUSH $
1390                CPL_COUNT:   .SET   CPL_COUNT + 1   
1390                CPL_10:   .SET   CPL_9   
1390                CPL_9:    .SET   CPL_8   
1390                CPL_8:    .SET   CPL_7   
1390                CPL_7:    .SET   CPL_6   
1390                CPL_6:    .SET   CPL_5   
1390                CPL_5:    .SET   CPL_4   
1390                CPL_4:    .SET   CPL_3   
1390                CPL_3:    .SET   CPL_2   
1390                CPL_2:    .SET   CPL_TOP   
1390                CPL_TOP:   .SET   $   
1390   1B 12 22 00            DW   lit,$22   ; delim
1394   1B 12 3F 00            DW   lit,63   ; limit 63 + length
1398   89 09 51 0F            DW   latestStr,fetch   
139C   1B 12 CD 30 3C 01      DW   lit,wordBuf,equal   
13A2                          ;*Macro unroll:  cIf
13A2   A3 07 00 00            DW   QBRAN,0   
13A6                          ;*Macro unroll:  CPL_PUSH $
13A6                CPL_COUNT:   .SET   CPL_COUNT + 1   
13A6                CPL_10:   .SET   CPL_9   
13A6                CPL_9:    .SET   CPL_8   
13A6                CPL_8:    .SET   CPL_7   
13A6                CPL_7:    .SET   CPL_6   
13A6                CPL_6:    .SET   CPL_5   
13A6                CPL_5:    .SET   CPL_4   
13A6                CPL_4:    .SET   CPL_3   
13A6                CPL_3:    .SET   CPL_2   
13A6                CPL_2:    .SET   CPL_TOP   
13A6                CPL_TOP:   .SET   $   
13A6   1B 12 0D 31            DW   lit,wordBuf2   
13AA                          ;*Macro unroll:  cElse
13AA   C0 07 00 00            DW   BRAN,0   
13AE                          ;*Macro unroll:  cBRANCH_FWD
13AE                CUR_ADR:   .SET   $   
13A4                          .ORG   CPL_TOP - 2   
13A4   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
13AE                          .ORG   CUR_ADR   
13AE                CPL_TOP:   .SET   $   
13AE   1B 12 CD 30            DW   lit,wordBuf   
13B2                          ;*Macro unroll:  cEndIf
13B2                          ;*Macro unroll:  cBRANCH_FWD
13B2                CUR_ADR:   .SET   $   
13AC                          .ORG   CPL_TOP - 2   
13AC   06 00                  DW   CUR_ADR - CPL_TOP + 2   
13B2                          .ORG   CUR_ADR   
13B2                          ;*Macro unroll:  CPL_POP
13B2                CPL_COUNT:   .SET   CPL_COUNT - 1   
13B2                CPL_TOP:   .SET   CPL_2   
13B2                CPL_2:    .SET   CPL_3   
13B2                CPL_3:    .SET   CPL_4   
13B2                CPL_4:    .SET   CPL_5   
13B2                CPL_5:    .SET   CPL_6   
13B2                CPL_6:    .SET   CPL_7   
13B2                CPL_7:    .SET   CPL_8   
13B2                CPL_8:    .SET   CPL_9   
13B2                CPL_9:    .SET   CPL_10   
13B2                CPL_10:   .SET   0   
13B2   89 09 30 0F            DW   latestStr,store   ; store here in latestStr
13B6   89 09 51 0F            DW   latestStr,fetch   
13BA   51 0C 68 13            DW   xword,count   
13BE                          ;*Macro unroll:  cElse
13BE   C0 07 00 00            DW   BRAN,0   
13C2                          ;*Macro unroll:  cBRANCH_FWD
13C2                CUR_ADR:   .SET   $   
138E                          .ORG   CPL_TOP - 2   
138E   34 00                  DW   CUR_ADR - CPL_TOP + 2   
13C2                          .ORG   CUR_ADR   
13C2                CPL_TOP:   .SET   $   
13C2   1B 12 4E 13 F6 0F      DW   lit,litstr,comma   
13C8   1B 12 22 00 99 0B      DW   lit,$22,word   
13CE   7E 0F 80 03            DW   cfetch,ONEP   
13D2   D4 0F                  DW   allot   
13D4                          ;*Macro unroll:  cEndif
13D4                          ;*Macro unroll:  cBRANCH_FWD
13D4                CUR_ADR:   .SET   $   
13C0                          .ORG   CPL_TOP - 2   
13C0   14 00                  DW   CUR_ADR - CPL_TOP + 2   
13D4                          .ORG   CUR_ADR   
13D4                          ;*Macro unroll:  CPL_POP
13D4                CPL_COUNT:   .SET   CPL_COUNT - 1   
13D4                CPL_TOP:   .SET   CPL_2   
13D4                CPL_2:    .SET   CPL_3   
13D4                CPL_3:    .SET   CPL_4   
13D4                CPL_4:    .SET   CPL_5   
13D4                CPL_5:    .SET   CPL_6   
13D4                CPL_6:    .SET   CPL_7   
13D4                CPL_7:    .SET   CPL_8   
13D4                CPL_8:    .SET   CPL_9   
13D4                CPL_9:    .SET   CPL_10   
13D4                CPL_10:   .SET   0   
13D4                          ;*Macro unroll:  EXIT
13D4   1E 0F                  DW   exit   
13D6   C3 0D 0F               JP   enter   
13D9                             ; 
13D9                             ; compareStr - string equal
13D9                             ; params: de = string1, HL = string2, BC = length
13D9                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
13D9                             ; destroys: de, HL, BC
13D9                             ; 
13D9                COMPARESTR:      
13D9                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
13D9   79                     LD   A,C   ; test for Count=0
13DA   B0                     OR   B   
13DB                          ;*Macro unroll:  _if nz          ; length zero = match
13DB   C2 E1 13               JP   nz,L_M_2230S56   ; length zero = match
13DE   C3 DE 13               JP   $   
13E1                          ;*Macro unroll:  STRUC_PUSH $
13E1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
13E1                STRUC_12:   .SET   STRUC_11   
13E1                STRUC_11:   .SET   STRUC_10   
13E1                STRUC_10:   .SET   STRUC_9   
13E1                STRUC_9:   .SET   STRUC_8   
13E1                STRUC_8:   .SET   STRUC_7   
13E1                STRUC_7:   .SET   STRUC_6   
13E1                STRUC_6:   .SET   STRUC_5   
13E1                STRUC_5:   .SET   STRUC_4   
13E1                STRUC_4:   .SET   STRUC_3   
13E1                STRUC_3:   .SET   STRUC_2   
13E1                STRUC_2:   .SET   STRUC_TOP   
13E1                STRUC_TOP:   .SET   $   
13E1                L_M_2230S56:      
13E1                          ;*Macro unroll:  _do
13E1   18 03                  JR   L_M_2231S57   
13E3   C3 E3 13               JP   $   
13E6                          ;*Macro unroll:  DLOOP_PUSH $
13E6                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
13E6                DLOOP_12:   .SET   DLOOP_11   
13E6                DLOOP_11:   .SET   DLOOP_10   
13E6                DLOOP_10:   .SET   DLOOP_9   
13E6                DLOOP_9:   .SET   DLOOP_8   
13E6                DLOOP_8:   .SET   DLOOP_7   
13E6                DLOOP_7:   .SET   DLOOP_6   
13E6                DLOOP_6:   .SET   DLOOP_5   
13E6                DLOOP_5:   .SET   DLOOP_4   
13E6                DLOOP_4:   .SET   DLOOP_3   
13E6                DLOOP_3:   .SET   DLOOP_2   
13E6                DLOOP_2:   .SET   DLOOP_TOP   
13E6                DLOOP_TOP:   .SET   $   
13E6                L_M_2231S57:      
13E6   1A                     LD   A,(DE)   
13E7   13                     INC   DE   
13E8   ED A1                  CPI      
13EA                          ;*Macro unroll:  _if nz          ; char mismatch: exit
13EA   C2 F0 13               JP   nz,L_M_2235S61   ; char mismatch: exit
13ED   C3 ED 13               JP   $   
13F0                          ;*Macro unroll:  STRUC_PUSH $
13F0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
13F0                STRUC_12:   .SET   STRUC_11   
13F0                STRUC_11:   .SET   STRUC_10   
13F0                STRUC_10:   .SET   STRUC_9   
13F0                STRUC_9:   .SET   STRUC_8   
13F0                STRUC_8:   .SET   STRUC_7   
13F0                STRUC_7:   .SET   STRUC_6   
13F0                STRUC_6:   .SET   STRUC_5   
13F0                STRUC_5:   .SET   STRUC_4   
13F0                STRUC_4:   .SET   STRUC_3   
13F0                STRUC_3:   .SET   STRUC_2   
13F0                STRUC_2:   .SET   STRUC_TOP   
13F0                STRUC_TOP:   .SET   $   
13F0                L_M_2235S61:      
13F0   2B                     DEC   HL   ; point at mismatch char
13F1   BE                     CP   (HL)   ; set carry if char1 < char2
13F2   9F                     SBC   A,A   
13F3   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
13F5   C9                     RET      
13F6                          ;*Macro unroll:  _endif
13F6                          ;*Macro unroll:  STRUC_FWD
13F6                CUR_ADR:   .SET   $   
13EE                          .ORG   STRUC_TOP - 2   
13EE   F6 13                  DW   CUR_ADR   
13F6                          .ORG   CUR_ADR   
13F6                          ;*Macro unroll:  STRUC_POP
13F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
13F6                STRUC_TOP:   .SET   STRUC_2   
13F6                STRUC_2:   .SET   STRUC_3   
13F6                STRUC_3:   .SET   STRUC_4   
13F6                STRUC_4:   .SET   STRUC_5   
13F6                STRUC_5:   .SET   STRUC_6   
13F6                STRUC_6:   .SET   STRUC_7   
13F6                STRUC_7:   .SET   STRUC_8   
13F6                STRUC_8:   .SET   STRUC_9   
13F6                STRUC_9:   .SET   STRUC_10   
13F6                STRUC_10:   .SET   STRUC_11   
13F6                STRUC_11:   .SET   STRUC_12   
13F6                STRUC_12:   .SET   0   
13F6                          ;*Macro unroll:  _until po
13F6   E2 E3 13               JP   po,DLOOP_TOP - 3   
13F9                          ;*Macro unroll:  DLOOP_FWD               ; needed?
13F9                CUR_ADR:   .SET   $   ; needed?
13E4                          .ORG   DLOOP_TOP - 2   
13E4   F9 13                  DW   CUR_ADR   
13F9                          .ORG   CUR_ADR   
13F9                          ;*Macro unroll:  _enddo
13F9   C3 E6 13               JP   DLOOP_TOP   
13FC                          ;*Macro unroll:  DLOOP_FWD
13FC                CUR_ADR:   .SET   $   
13E4                          .ORG   DLOOP_TOP - 2   
13E4   FC 13                  DW   CUR_ADR   
13FC                          .ORG   CUR_ADR   
13FC                          ;*Macro unroll:  DLOOP_POP
13FC                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
13FC                DLOOP_TOP:   .SET   DLOOP_2   
13FC                DLOOP_2:   .SET   DLOOP_3   
13FC                DLOOP_3:   .SET   DLOOP_4   
13FC                DLOOP_4:   .SET   DLOOP_5   
13FC                DLOOP_5:   .SET   DLOOP_6   
13FC                DLOOP_6:   .SET   DLOOP_7   
13FC                DLOOP_7:   .SET   DLOOP_8   
13FC                DLOOP_8:   .SET   DLOOP_9   
13FC                DLOOP_9:   .SET   DLOOP_10   
13FC                DLOOP_10:   .SET   DLOOP_11   
13FC                DLOOP_11:   .SET   DLOOP_12   
13FC                DLOOP_12:   .SET   0   
13FC                          ;*Macro unroll:  _endif
13FC                          ;*Macro unroll:  STRUC_FWD
13FC                CUR_ADR:   .SET   $   
13DF                          .ORG   STRUC_TOP - 2   
13DF   FC 13                  DW   CUR_ADR   
13FC                          .ORG   CUR_ADR   
13FC                          ;*Macro unroll:  STRUC_POP
13FC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
13FC                STRUC_TOP:   .SET   STRUC_2   
13FC                STRUC_2:   .SET   STRUC_3   
13FC                STRUC_3:   .SET   STRUC_4   
13FC                STRUC_4:   .SET   STRUC_5   
13FC                STRUC_5:   .SET   STRUC_6   
13FC                STRUC_6:   .SET   STRUC_7   
13FC                STRUC_7:   .SET   STRUC_8   
13FC                STRUC_8:   .SET   STRUC_9   
13FC                STRUC_9:   .SET   STRUC_10   
13FC                STRUC_10:   .SET   STRUC_11   
13FC                STRUC_11:   .SET   STRUC_12   
13FC                STRUC_12:   .SET   0   
13FC                             ; count exhausted & no mismatch found
13FC   3E 00                  LD   A,0   ; a=0 (s1=s2)
13FE   C9                     RET      
13FF                          ;*Macro unroll: CODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
13FF                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
13FF   81 13                  DW   link   
1401                LINK:     .SET   HEADER_pack   
1401   04                     DB   0 + 4   
1402   70 61 63 6B            DB   "pack"   
1406                PACK:        
1406                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
1406   50                     LD   D,B   ; DE = adr2, BC = len
1407   59                     LD   E,C   
1408                          ;*Macro unroll:  ppop0 B,C
1408   DD 2B                  DEC   IX   
140A   DD 46 00               LD   B,(IX+0)   
140D   DD 2B                  DEC   IX   
140F   DD 4E 00               LD   C,(IX+0)   
1412   D5                     PUSH   DE   
1413                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
1413   DD 2B                  DEC   IX   ; HL = adr1
1415   DD 66 00               LD   H,(IX+0)   
1418   DD 2B                  DEC   IX   
141A   DD 6E 00               LD   L,(IX+0)   
141D   79                     LD   A,C   
141E   12                     LD   (DE),A   ; write length byte to adr2
141F   13                     INC   DE   ; adr2 += 1
1420   ED B0                  LDIR      
1422   C1                     POP   BC   ; TOS = adr2
1423                          ;*Macro unroll:  NEXT
1423   C3 0D 0F               JP   enter   
1426                             ; .s print stack (non-destructively)
1426                          ;*Macro unroll: CODE ".s",2,0,dots                   ; ( -- )
1426                HEADER_DOTS:      ; ( -- )
1426   FF 13                  DW   link   
1428                LINK:     .SET   HEADER_dots   
1428   02                     DB   0 + 2   
1429   2E 73                  DB   ".s"   
142B                DOTS:        
142B                          ;*Macro unroll:  ENTER
142B   CF                     RST   $08   
142C   A2 0F                  DW   spfetch   ; psp
142E   56 09 51 0F            DW   sp0,fetch   ; psp0
1432   1E 01                  DW   SUBB   
1434   1B 12 00 00 8C 01      DW   lit,0,greaterThan   
143A                          ;*Macro unroll:  cif
143A   A3 07 00 00            DW   QBRAN,0   
143E                          ;*Macro unroll:  CPL_PUSH $
143E                CPL_COUNT:   .SET   CPL_COUNT + 1   
143E                CPL_10:   .SET   CPL_9   
143E                CPL_9:    .SET   CPL_8   
143E                CPL_8:    .SET   CPL_7   
143E                CPL_7:    .SET   CPL_6   
143E                CPL_6:    .SET   CPL_5   
143E                CPL_5:    .SET   CPL_4   
143E                CPL_4:    .SET   CPL_3   
143E                CPL_3:    .SET   CPL_2   
143E                CPL_2:    .SET   CPL_TOP   
143E                CPL_TOP:   .SET   $   
143E   56 09 51 0F 1B 12 02 00 CE 00 DW   sp0,fetch,lit,2,plus   
1448                          ;*Macro unroll:  cdo
1448   C0 07 06 00            DW   BRAN,6   
144C   C0 07 00 00            DW   BRAN,0   
1450                          ;*Macro unroll:  CPL_PUSH $
1450                CPL_COUNT:   .SET   CPL_COUNT + 1   
1450                CPL_10:   .SET   CPL_9   
1450                CPL_9:    .SET   CPL_8   
1450                CPL_8:    .SET   CPL_7   
1450                CPL_7:    .SET   CPL_6   
1450                CPL_6:    .SET   CPL_5   
1450                CPL_5:    .SET   CPL_4   
1450                CPL_4:    .SET   CPL_3   
1450                CPL_3:    .SET   CPL_2   
1450                CPL_2:    .SET   CPL_TOP   
1450                CPL_TOP:   .SET   $   
1450   9C 12                  DW   DUPP   
1452   A2 0F 1B 12 02 00 1E 01 DW   spfetch,lit,2,SUBB   
145A   B0 12 1E 01 58 03      DW   swap,SUBB,zequal   
1460                          ;*Macro unroll:  cuntil
1460   58 03 A3 07 E8 FF      DW   ZEQUAL,QBRAN,CPL_TOP - $ - 8   
1466   9C 12 51 0F 13 0A      DW   DUPP,fetch,dot   
146C   1B 12 02 00 CE 00      DW   lit,2,plus   
1472                          ;*Macro unroll:  cenddo
1472   C0 07 DC FF            DW   BRAN,CPL_TOP - $ - 2   
1476                          ;*Macro unroll:  cBRANCH_FWD
1476                CUR_ADR:   .SET   $   
144E                          .ORG   CPL_TOP - 2   
144E   28 00                  DW   CUR_ADR - CPL_TOP + 2   
1476                          .ORG   CUR_ADR   
1476                          ;*Macro unroll:  CPL_POP
1476                CPL_COUNT:   .SET   CPL_COUNT - 1   
1476                CPL_TOP:   .SET   CPL_2   
1476                CPL_2:    .SET   CPL_3   
1476                CPL_3:    .SET   CPL_4   
1476                CPL_4:    .SET   CPL_5   
1476                CPL_5:    .SET   CPL_6   
1476                CPL_6:    .SET   CPL_7   
1476                CPL_7:    .SET   CPL_8   
1476                CPL_8:    .SET   CPL_9   
1476                CPL_9:    .SET   CPL_10   
1476                CPL_10:   .SET   0   
1476   D0 12                  DW   drop   
1478                          ;*Macro unroll:  cendif
1478                          ;*Macro unroll:  cBRANCH_FWD
1478                CUR_ADR:   .SET   $   
143C                          .ORG   CPL_TOP - 2   
143C   3C 00                  DW   CUR_ADR - CPL_TOP + 2   
1478                          .ORG   CUR_ADR   
1478                          ;*Macro unroll:  CPL_POP
1478                CPL_COUNT:   .SET   CPL_COUNT - 1   
1478                CPL_TOP:   .SET   CPL_2   
1478                CPL_2:    .SET   CPL_3   
1478                CPL_3:    .SET   CPL_4   
1478                CPL_4:    .SET   CPL_5   
1478                CPL_5:    .SET   CPL_6   
1478                CPL_6:    .SET   CPL_7   
1478                CPL_7:    .SET   CPL_8   
1478                CPL_8:    .SET   CPL_9   
1478                CPL_9:    .SET   CPL_10   
1478                CPL_10:   .SET   0   
1478                          ;*Macro unroll:  EXIT
1478   1E 0F                  DW   exit   
147A   C3 0D 0F               JP   enter   
147D                          ;*Macro unroll: CODE "words", 5, 0, WORDS
147D                HEADER_WORDS:      
147D   26 14                  DW   link   
147F                LINK:     .SET   HEADER_WORDS   
147F   05                     DB   0 + 5   
1480   77 6F 72 64 73         DB   "words"   
1485                WORDS:       
1485   C5                     PUSH   BC   
1486   CD 8D 14               CALL   listWords   
1489   C1                     POP   BC   
148A                          ;*Macro unroll:  NEXT
148A   C3 0D 0F               JP   enter   
148D                LISTWORDS:      
148D   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
1491                          ;*Macro unroll:  _do
1491   18 03                  JR   L_M_2285S30   
1493   C3 93 14               JP   $   
1496                          ;*Macro unroll:  DLOOP_PUSH $
1496                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1496                DLOOP_12:   .SET   DLOOP_11   
1496                DLOOP_11:   .SET   DLOOP_10   
1496                DLOOP_10:   .SET   DLOOP_9   
1496                DLOOP_9:   .SET   DLOOP_8   
1496                DLOOP_8:   .SET   DLOOP_7   
1496                DLOOP_7:   .SET   DLOOP_6   
1496                DLOOP_6:   .SET   DLOOP_5   
1496                DLOOP_5:   .SET   DLOOP_4   
1496                DLOOP_4:   .SET   DLOOP_3   
1496                DLOOP_3:   .SET   DLOOP_2   
1496                DLOOP_2:   .SET   DLOOP_TOP   
1496                DLOOP_TOP:   .SET   $   
1496                L_M_2285S30:      
1496                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
1496   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
1497   B2                     OR   D   
1498                          ;*Macro unroll:  _until z
1498   CA 93 14               JP   z,DLOOP_TOP - 3   
149B                          ;*Macro unroll:  DLOOP_FWD               ; needed?
149B                CUR_ADR:   .SET   $   ; needed?
1494                          .ORG   DLOOP_TOP - 2   
1494   9B 14                  DW   CUR_ADR   
149B                          .ORG   CUR_ADR   
149B   D5                     PUSH   DE   ; save ptr to header
149C   13                     INC   DE   ; skip over first field
149D   13                     INC   DE   
149E   1A                     LD   A,(DE)   ; a = flags+length field
149F   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
14A1   06 00                  LD   B,0   
14A3   4F                     LD   C,A   
14A4   13                     INC   DE   
14A5   CD FA 11               CALL   printStr   
14A8   CD 0D 12               CALL   printSpace   
14AB   CD 0C 11               CALL   putc   
14AE   E1                     POP   HL   ; HL = link to previous header
14AF   5E                     LD   E,(HL)   
14B0   23                     INC   HL   
14B1   56                     LD   D,(HL)   ; DE = previous word
14B2                          ;*Macro unroll:  _enddo
14B2   C3 96 14               JP   DLOOP_TOP   
14B5                          ;*Macro unroll:  DLOOP_FWD
14B5                CUR_ADR:   .SET   $   
1494                          .ORG   DLOOP_TOP - 2   
1494   B5 14                  DW   CUR_ADR   
14B5                          .ORG   CUR_ADR   
14B5                          ;*Macro unroll:  DLOOP_POP
14B5                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
14B5                DLOOP_TOP:   .SET   DLOOP_2   
14B5                DLOOP_2:   .SET   DLOOP_3   
14B5                DLOOP_3:   .SET   DLOOP_4   
14B5                DLOOP_4:   .SET   DLOOP_5   
14B5                DLOOP_5:   .SET   DLOOP_6   
14B5                DLOOP_6:   .SET   DLOOP_7   
14B5                DLOOP_7:   .SET   DLOOP_8   
14B5                DLOOP_8:   .SET   DLOOP_9   
14B5                DLOOP_9:   .SET   DLOOP_10   
14B5                DLOOP_10:   .SET   DLOOP_11   
14B5                DLOOP_11:   .SET   DLOOP_12   
14B5                DLOOP_12:   .SET   0   
14B5   CD 04 12               CALL   printCR   
14B8   C9                     RET      
14B9                             ; "latest" must be the last word defined
14B9                          ;*Macro unroll:  mVAR "latest",6,0,latest, var_latest
14B9                          ;*Macro unroll: CODE "latest",6,0,latest
14B9                HEADER_LATEST:      
14B9   7D 14                  DW   link   
14BB                LINK:     .SET   HEADER_latest   
14BB   06                     DB   0 + 6   
14BC   6C 61 74 65 73 74      DB   "latest"   
14C2                LATEST:      
14C2                          ;*Macro unroll:  ppush0 B,C
14C2   DD 71 00               LD   (IX+0),C   
14C5   DD 23                  INC   IX   
14C7   DD 70 00               LD   (IX+0),B   
14CA   DD 23                  INC   IX   
14CC   01 5F 32               LD   BC,var_latest   
14CF                          ;*Macro unroll:  NEXT
14CF   C3 0D 0F               JP   enter   
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
2000                TESTS_START:      
2000                             ; 
2000                             ; test-macros
2000                             ; 
2000                             ; macros to facilitate tests
2000                             ; 
2000                .macro TEST_SET_TEXT,s1
2000                             ; 
2000                 ld HL, (lineBufStart)
2000                 ld (lineBufTop),HL
2000                 ld (currkey),HL
2000                 ld HL, tst_text%%M
2000                 ld (char_pointer), HL
2000                 _skip
2000                tst_text%%M:
2000                 db s1,"\r\n",-1,"\r\n"
2000                 _endskip
2000                .endm
2000                 
2000                             ; prevents using _if macro here
2000                .macro EXPECT,expect,failtxt
2000                             ; 
2000                 call printNum
2000                 loadWord H,L, B,C
2000                 ld L, C
2000                 ppop0 B,C
2000                 CMP16 expect
2000                 jp z, tf_done%%M            ; asm80 macro nesting issue
2000                 ld DE, FAILED
2000                 call printPStr
2000                 ld DE, te_fail%%M
2000                 call printPStr
2000                 halt
2000                 _skip
2000                te_fail%%M:
2000                 .pstr failtxt
2000                 _endskip
2000                tf_done%%M:
2000                .endm
2000                 
2000                             ; 
2000                             ; tests
2000                             ; 
2000                             ; these tests will evaluate when TESTMODE = 1
2000                             ; 
2000                          ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
2000   2A 45 30               LD   HL,(lineBufStart)   
2003   22 4B 30               LD   (lineBufTop),HL   
2006   22 49 30               LD   (currkey),HL   
2009   21 12 20               LD   HL,tst_textM_2355S7   
200C   22 61 32               LD   (char_pointer),HL   
200F                          ;*Macro unroll:  _skip
200F   C3 0F 20               JP   $   
2012                          ;*Macro unroll:  STRUC_PUSH $
2012                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2012                STRUC_12:   .SET   STRUC_11   
2012                STRUC_11:   .SET   STRUC_10   
2012                STRUC_10:   .SET   STRUC_9   
2012                STRUC_9:   .SET   STRUC_8   
2012                STRUC_8:   .SET   STRUC_7   
2012                STRUC_7:   .SET   STRUC_6   
2012                STRUC_6:   .SET   STRUC_5   
2012                STRUC_5:   .SET   STRUC_4   
2012                STRUC_4:   .SET   STRUC_3   
2012                STRUC_3:   .SET   STRUC_2   
2012                STRUC_2:   .SET   STRUC_TOP   
2012                STRUC_TOP:   .SET   $   
2012                TST_TEXTM_2355S7:      
2012   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 2C 20 64 6F 65 73 3E 20 40 20 3B 0D 0A FF 0D 0A DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
2031                          ;*Macro unroll:  _endskip
2031                          ;*Macro unroll:  STRUC_FWD
2031                CUR_ADR:   .SET   $   
2010                          .ORG   STRUC_TOP - 2   
2010   31 20                  DW   CUR_ADR   
2031                          .ORG   CUR_ADR   
2031                          ;*Macro unroll:  STRUC_POP
2031                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2031                STRUC_TOP:   .SET   STRUC_2   
2031                STRUC_2:   .SET   STRUC_3   
2031                STRUC_3:   .SET   STRUC_4   
2031                STRUC_4:   .SET   STRUC_5   
2031                STRUC_5:   .SET   STRUC_6   
2031                STRUC_6:   .SET   STRUC_7   
2031                STRUC_7:   .SET   STRUC_8   
2031                STRUC_8:   .SET   STRUC_9   
2031                STRUC_9:   .SET   STRUC_10   
2031                STRUC_10:   .SET   STRUC_11   
2031                STRUC_11:   .SET   STRUC_12   
2031                STRUC_12:   .SET   0   
2031                          ;*Macro unroll: INTERPRET
2031   CF                     RST   $08   
2032   E9 0B                  DW   interpret   
2034   21 0F                  DW   exit_forth   
2036                          ;*Macro unroll: TEST_SET_TEXT "100 const y"
2036   2A 45 30               LD   HL,(lineBufStart)   
2039   22 4B 30               LD   (lineBufTop),HL   
203C   22 49 30               LD   (currkey),HL   
203F   21 48 20               LD   HL,tst_textM_2357S9   
2042   22 61 32               LD   (char_pointer),HL   
2045                          ;*Macro unroll:  _skip
2045   C3 45 20               JP   $   
2048                          ;*Macro unroll:  STRUC_PUSH $
2048                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2048                STRUC_12:   .SET   STRUC_11   
2048                STRUC_11:   .SET   STRUC_10   
2048                STRUC_10:   .SET   STRUC_9   
2048                STRUC_9:   .SET   STRUC_8   
2048                STRUC_8:   .SET   STRUC_7   
2048                STRUC_7:   .SET   STRUC_6   
2048                STRUC_6:   .SET   STRUC_5   
2048                STRUC_5:   .SET   STRUC_4   
2048                STRUC_4:   .SET   STRUC_3   
2048                STRUC_3:   .SET   STRUC_2   
2048                STRUC_2:   .SET   STRUC_TOP   
2048                STRUC_TOP:   .SET   $   
2048                TST_TEXTM_2357S9:      
2048   31 30 30 20 63 6F 6E 73 74 20 79 0D 0A FF 0D 0A DB   "100 const y","\r\n",-1,"\r\n"   
2058                          ;*Macro unroll:  _endskip
2058                          ;*Macro unroll:  STRUC_FWD
2058                CUR_ADR:   .SET   $   
2046                          .ORG   STRUC_TOP - 2   
2046   58 20                  DW   CUR_ADR   
2058                          .ORG   CUR_ADR   
2058                          ;*Macro unroll:  STRUC_POP
2058                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2058                STRUC_TOP:   .SET   STRUC_2   
2058                STRUC_2:   .SET   STRUC_3   
2058                STRUC_3:   .SET   STRUC_4   
2058                STRUC_4:   .SET   STRUC_5   
2058                STRUC_5:   .SET   STRUC_6   
2058                STRUC_6:   .SET   STRUC_7   
2058                STRUC_7:   .SET   STRUC_8   
2058                STRUC_8:   .SET   STRUC_9   
2058                STRUC_9:   .SET   STRUC_10   
2058                STRUC_10:   .SET   STRUC_11   
2058                STRUC_11:   .SET   STRUC_12   
2058                STRUC_12:   .SET   0   
2058                          ;*Macro unroll: INTERPRET
2058   CF                     RST   $08   
2059   E9 0B                  DW   interpret   
205B   21 0F                  DW   exit_forth   
205D                          ;*Macro unroll: TEST_SET_TEXT "y"
205D   2A 45 30               LD   HL,(lineBufStart)   
2060   22 4B 30               LD   (lineBufTop),HL   
2063   22 49 30               LD   (currkey),HL   
2066   21 6F 20               LD   HL,tst_textM_2359S11   
2069   22 61 32               LD   (char_pointer),HL   
206C                          ;*Macro unroll:  _skip
206C   C3 6C 20               JP   $   
206F                          ;*Macro unroll:  STRUC_PUSH $
206F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
206F                STRUC_12:   .SET   STRUC_11   
206F                STRUC_11:   .SET   STRUC_10   
206F                STRUC_10:   .SET   STRUC_9   
206F                STRUC_9:   .SET   STRUC_8   
206F                STRUC_8:   .SET   STRUC_7   
206F                STRUC_7:   .SET   STRUC_6   
206F                STRUC_6:   .SET   STRUC_5   
206F                STRUC_5:   .SET   STRUC_4   
206F                STRUC_4:   .SET   STRUC_3   
206F                STRUC_3:   .SET   STRUC_2   
206F                STRUC_2:   .SET   STRUC_TOP   
206F                STRUC_TOP:   .SET   $   
206F                TST_TEXTM_2359S11:      
206F   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2075                          ;*Macro unroll:  _endskip
2075                          ;*Macro unroll:  STRUC_FWD
2075                CUR_ADR:   .SET   $   
206D                          .ORG   STRUC_TOP - 2   
206D   75 20                  DW   CUR_ADR   
2075                          .ORG   CUR_ADR   
2075                          ;*Macro unroll:  STRUC_POP
2075                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2075                STRUC_TOP:   .SET   STRUC_2   
2075                STRUC_2:   .SET   STRUC_3   
2075                STRUC_3:   .SET   STRUC_4   
2075                STRUC_4:   .SET   STRUC_5   
2075                STRUC_5:   .SET   STRUC_6   
2075                STRUC_6:   .SET   STRUC_7   
2075                STRUC_7:   .SET   STRUC_8   
2075                STRUC_8:   .SET   STRUC_9   
2075                STRUC_9:   .SET   STRUC_10   
2075                STRUC_10:   .SET   STRUC_11   
2075                STRUC_11:   .SET   STRUC_12   
2075                STRUC_12:   .SET   0   
2075                          ;*Macro unroll: INTERPRET
2075   CF                     RST   $08   
2076   E9 0B                  DW   interpret   
2078   21 0F                  DW   exit_forth   
207A                          ;*Macro unroll: EXPECT 100, "expect 100"
207A   CD 38 0A               CALL   printNum   
207D                          ;*Macro unroll:  loadWord H,L, B,C
207D   69                     LD   L,C   
207E   60                     LD   H,B   
207F   69                     LD   L,C   
2080                          ;*Macro unroll:  ppop0 B,C
2080   DD 2B                  DEC   IX   
2082   DD 46 00               LD   B,(IX+0)   
2085   DD 2B                  DEC   IX   
2087   DD 4E 00               LD   C,(IX+0)   
208A                          ;*Macro unroll:  CMP16 100
208A   11 64 00               LD   DE,100   
208D   B7                     OR   A   
208E   ED 52                  SBC   HL,DE   
2090                          ;*Macro unroll:  checkZeroWord H,L
2090   7D                     LD   A,L   
2091   B4                     OR   H   
2092   CA AD 20               JP   z,tf_doneM_2361S13   
2095   11 83 10               LD   DE,FAILED   
2098   CD EB 11               CALL   printPStr   
209B   11 A5 20               LD   DE,te_failM_2361S13   
209E   CD EB 11               CALL   printPStr   
20A1   76                     HALT      
20A2                          ;*Macro unroll:  _skip
20A2   C3 A2 20               JP   $   
20A5                          ;*Macro unroll:  STRUC_PUSH $
20A5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20A5                STRUC_12:   .SET   STRUC_11   
20A5                STRUC_11:   .SET   STRUC_10   
20A5                STRUC_10:   .SET   STRUC_9   
20A5                STRUC_9:   .SET   STRUC_8   
20A5                STRUC_8:   .SET   STRUC_7   
20A5                STRUC_7:   .SET   STRUC_6   
20A5                STRUC_6:   .SET   STRUC_5   
20A5                STRUC_5:   .SET   STRUC_4   
20A5                STRUC_4:   .SET   STRUC_3   
20A5                STRUC_3:   .SET   STRUC_2   
20A5                STRUC_2:   .SET   STRUC_TOP   
20A5                STRUC_TOP:   .SET   $   
20A5                TE_FAILM_2361S13:      
20A5   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
20AD                          ;*Macro unroll:  _endskip
20AD                          ;*Macro unroll:  STRUC_FWD
20AD                CUR_ADR:   .SET   $   
20A3                          .ORG   STRUC_TOP - 2   
20A3   AD 20                  DW   CUR_ADR   
20AD                          .ORG   CUR_ADR   
20AD                          ;*Macro unroll:  STRUC_POP
20AD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20AD                STRUC_TOP:   .SET   STRUC_2   
20AD                STRUC_2:   .SET   STRUC_3   
20AD                STRUC_3:   .SET   STRUC_4   
20AD                STRUC_4:   .SET   STRUC_5   
20AD                STRUC_5:   .SET   STRUC_6   
20AD                STRUC_6:   .SET   STRUC_7   
20AD                STRUC_7:   .SET   STRUC_8   
20AD                STRUC_8:   .SET   STRUC_9   
20AD                STRUC_9:   .SET   STRUC_10   
20AD                STRUC_10:   .SET   STRUC_11   
20AD                STRUC_11:   .SET   STRUC_12   
20AD                STRUC_12:   .SET   0   
20AD                TF_DONEM_2361S13:      
20AD                          ;*Macro unroll: TEST_SET_TEXT "100 constant y"
20AD   2A 45 30               LD   HL,(lineBufStart)   
20B0   22 4B 30               LD   (lineBufTop),HL   
20B3   22 49 30               LD   (currkey),HL   
20B6   21 BF 20               LD   HL,tst_textM_2362S15   
20B9   22 61 32               LD   (char_pointer),HL   
20BC                          ;*Macro unroll:  _skip
20BC   C3 BC 20               JP   $   
20BF                          ;*Macro unroll:  STRUC_PUSH $
20BF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20BF                STRUC_12:   .SET   STRUC_11   
20BF                STRUC_11:   .SET   STRUC_10   
20BF                STRUC_10:   .SET   STRUC_9   
20BF                STRUC_9:   .SET   STRUC_8   
20BF                STRUC_8:   .SET   STRUC_7   
20BF                STRUC_7:   .SET   STRUC_6   
20BF                STRUC_6:   .SET   STRUC_5   
20BF                STRUC_5:   .SET   STRUC_4   
20BF                STRUC_4:   .SET   STRUC_3   
20BF                STRUC_3:   .SET   STRUC_2   
20BF                STRUC_2:   .SET   STRUC_TOP   
20BF                STRUC_TOP:   .SET   $   
20BF                TST_TEXTM_2362S15:      
20BF   31 30 30 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "100 constant y","\r\n",-1,"\r\n"   
20D2                          ;*Macro unroll:  _endskip
20D2                          ;*Macro unroll:  STRUC_FWD
20D2                CUR_ADR:   .SET   $   
20BD                          .ORG   STRUC_TOP - 2   
20BD   D2 20                  DW   CUR_ADR   
20D2                          .ORG   CUR_ADR   
20D2                          ;*Macro unroll:  STRUC_POP
20D2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20D2                STRUC_TOP:   .SET   STRUC_2   
20D2                STRUC_2:   .SET   STRUC_3   
20D2                STRUC_3:   .SET   STRUC_4   
20D2                STRUC_4:   .SET   STRUC_5   
20D2                STRUC_5:   .SET   STRUC_6   
20D2                STRUC_6:   .SET   STRUC_7   
20D2                STRUC_7:   .SET   STRUC_8   
20D2                STRUC_8:   .SET   STRUC_9   
20D2                STRUC_9:   .SET   STRUC_10   
20D2                STRUC_10:   .SET   STRUC_11   
20D2                STRUC_11:   .SET   STRUC_12   
20D2                STRUC_12:   .SET   0   
20D2                          ;*Macro unroll: INTERPRET
20D2   CF                     RST   $08   
20D3   E9 0B                  DW   interpret   
20D5   21 0F                  DW   exit_forth   
20D7                          ;*Macro unroll: TEST_SET_TEXT "y"
20D7   2A 45 30               LD   HL,(lineBufStart)   
20DA   22 4B 30               LD   (lineBufTop),HL   
20DD   22 49 30               LD   (currkey),HL   
20E0   21 E9 20               LD   HL,tst_textM_2364S17   
20E3   22 61 32               LD   (char_pointer),HL   
20E6                          ;*Macro unroll:  _skip
20E6   C3 E6 20               JP   $   
20E9                          ;*Macro unroll:  STRUC_PUSH $
20E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20E9                STRUC_12:   .SET   STRUC_11   
20E9                STRUC_11:   .SET   STRUC_10   
20E9                STRUC_10:   .SET   STRUC_9   
20E9                STRUC_9:   .SET   STRUC_8   
20E9                STRUC_8:   .SET   STRUC_7   
20E9                STRUC_7:   .SET   STRUC_6   
20E9                STRUC_6:   .SET   STRUC_5   
20E9                STRUC_5:   .SET   STRUC_4   
20E9                STRUC_4:   .SET   STRUC_3   
20E9                STRUC_3:   .SET   STRUC_2   
20E9                STRUC_2:   .SET   STRUC_TOP   
20E9                STRUC_TOP:   .SET   $   
20E9                TST_TEXTM_2364S17:      
20E9   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
20EF                          ;*Macro unroll:  _endskip
20EF                          ;*Macro unroll:  STRUC_FWD
20EF                CUR_ADR:   .SET   $   
20E7                          .ORG   STRUC_TOP - 2   
20E7   EF 20                  DW   CUR_ADR   
20EF                          .ORG   CUR_ADR   
20EF                          ;*Macro unroll:  STRUC_POP
20EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20EF                STRUC_TOP:   .SET   STRUC_2   
20EF                STRUC_2:   .SET   STRUC_3   
20EF                STRUC_3:   .SET   STRUC_4   
20EF                STRUC_4:   .SET   STRUC_5   
20EF                STRUC_5:   .SET   STRUC_6   
20EF                STRUC_6:   .SET   STRUC_7   
20EF                STRUC_7:   .SET   STRUC_8   
20EF                STRUC_8:   .SET   STRUC_9   
20EF                STRUC_9:   .SET   STRUC_10   
20EF                STRUC_10:   .SET   STRUC_11   
20EF                STRUC_11:   .SET   STRUC_12   
20EF                STRUC_12:   .SET   0   
20EF                          ;*Macro unroll: INTERPRET
20EF   CF                     RST   $08   
20F0   E9 0B                  DW   interpret   
20F2   21 0F                  DW   exit_forth   
20F4                          ;*Macro unroll: EXPECT 100, "expect 100"
20F4   CD 38 0A               CALL   printNum   
20F7                          ;*Macro unroll:  loadWord H,L, B,C
20F7   69                     LD   L,C   
20F8   60                     LD   H,B   
20F9   69                     LD   L,C   
20FA                          ;*Macro unroll:  ppop0 B,C
20FA   DD 2B                  DEC   IX   
20FC   DD 46 00               LD   B,(IX+0)   
20FF   DD 2B                  DEC   IX   
2101   DD 4E 00               LD   C,(IX+0)   
2104                          ;*Macro unroll:  CMP16 100
2104   11 64 00               LD   DE,100   
2107   B7                     OR   A   
2108   ED 52                  SBC   HL,DE   
210A                          ;*Macro unroll:  checkZeroWord H,L
210A   7D                     LD   A,L   
210B   B4                     OR   H   
210C   CA 27 21               JP   z,tf_doneM_2366S19   
210F   11 83 10               LD   DE,FAILED   
2112   CD EB 11               CALL   printPStr   
2115   11 1F 21               LD   DE,te_failM_2366S19   
2118   CD EB 11               CALL   printPStr   
211B   76                     HALT      
211C                          ;*Macro unroll:  _skip
211C   C3 1C 21               JP   $   
211F                          ;*Macro unroll:  STRUC_PUSH $
211F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
211F                STRUC_12:   .SET   STRUC_11   
211F                STRUC_11:   .SET   STRUC_10   
211F                STRUC_10:   .SET   STRUC_9   
211F                STRUC_9:   .SET   STRUC_8   
211F                STRUC_8:   .SET   STRUC_7   
211F                STRUC_7:   .SET   STRUC_6   
211F                STRUC_6:   .SET   STRUC_5   
211F                STRUC_5:   .SET   STRUC_4   
211F                STRUC_4:   .SET   STRUC_3   
211F                STRUC_3:   .SET   STRUC_2   
211F                STRUC_2:   .SET   STRUC_TOP   
211F                STRUC_TOP:   .SET   $   
211F                TE_FAILM_2366S19:      
211F   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
2127                          ;*Macro unroll:  _endskip
2127                          ;*Macro unroll:  STRUC_FWD
2127                CUR_ADR:   .SET   $   
211D                          .ORG   STRUC_TOP - 2   
211D   27 21                  DW   CUR_ADR   
2127                          .ORG   CUR_ADR   
2127                          ;*Macro unroll:  STRUC_POP
2127                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2127                STRUC_TOP:   .SET   STRUC_2   
2127                STRUC_2:   .SET   STRUC_3   
2127                STRUC_3:   .SET   STRUC_4   
2127                STRUC_4:   .SET   STRUC_5   
2127                STRUC_5:   .SET   STRUC_6   
2127                STRUC_6:   .SET   STRUC_7   
2127                STRUC_7:   .SET   STRUC_8   
2127                STRUC_8:   .SET   STRUC_9   
2127                STRUC_9:   .SET   STRUC_10   
2127                STRUC_10:   .SET   STRUC_11   
2127                STRUC_11:   .SET   STRUC_12   
2127                STRUC_12:   .SET   0   
2127                TF_DONEM_2366S19:      
2127                          ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
2127   2A 45 30               LD   HL,(lineBufStart)   
212A   22 4B 30               LD   (lineBufTop),HL   
212D   22 49 30               LD   (currkey),HL   
2130   21 39 21               LD   HL,tst_textM_2367S21   
2133   22 61 32               LD   (char_pointer),HL   
2136                          ;*Macro unroll:  _skip
2136   C3 36 21               JP   $   
2139                          ;*Macro unroll:  STRUC_PUSH $
2139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2139                STRUC_12:   .SET   STRUC_11   
2139                STRUC_11:   .SET   STRUC_10   
2139                STRUC_10:   .SET   STRUC_9   
2139                STRUC_9:   .SET   STRUC_8   
2139                STRUC_8:   .SET   STRUC_7   
2139                STRUC_7:   .SET   STRUC_6   
2139                STRUC_6:   .SET   STRUC_5   
2139                STRUC_5:   .SET   STRUC_4   
2139                STRUC_4:   .SET   STRUC_3   
2139                STRUC_3:   .SET   STRUC_2   
2139                STRUC_2:   .SET   STRUC_TOP   
2139                STRUC_TOP:   .SET   $   
2139                TST_TEXTM_2367S21:      
2139   3A 20 78 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 31 20 2E 20 3B 0D 0A FF 0D 0A DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
2154                          ;*Macro unroll:  _endskip
2154                          ;*Macro unroll:  STRUC_FWD
2154                CUR_ADR:   .SET   $   
2137                          .ORG   STRUC_TOP - 2   
2137   54 21                  DW   CUR_ADR   
2154                          .ORG   CUR_ADR   
2154                          ;*Macro unroll:  STRUC_POP
2154                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2154                STRUC_TOP:   .SET   STRUC_2   
2154                STRUC_2:   .SET   STRUC_3   
2154                STRUC_3:   .SET   STRUC_4   
2154                STRUC_4:   .SET   STRUC_5   
2154                STRUC_5:   .SET   STRUC_6   
2154                STRUC_6:   .SET   STRUC_7   
2154                STRUC_7:   .SET   STRUC_8   
2154                STRUC_8:   .SET   STRUC_9   
2154                STRUC_9:   .SET   STRUC_10   
2154                STRUC_10:   .SET   STRUC_11   
2154                STRUC_11:   .SET   STRUC_12   
2154                STRUC_12:   .SET   0   
2154                          ;*Macro unroll: INTERPRET
2154   CF                     RST   $08   
2155   E9 0B                  DW   interpret   
2157   21 0F                  DW   exit_forth   
2159                          ;*Macro unroll: TEST_SET_TEXT "x y"
2159   2A 45 30               LD   HL,(lineBufStart)   
215C   22 4B 30               LD   (lineBufTop),HL   
215F   22 49 30               LD   (currkey),HL   
2162   21 6B 21               LD   HL,tst_textM_2369S23   
2165   22 61 32               LD   (char_pointer),HL   
2168                          ;*Macro unroll:  _skip
2168   C3 68 21               JP   $   
216B                          ;*Macro unroll:  STRUC_PUSH $
216B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
216B                STRUC_12:   .SET   STRUC_11   
216B                STRUC_11:   .SET   STRUC_10   
216B                STRUC_10:   .SET   STRUC_9   
216B                STRUC_9:   .SET   STRUC_8   
216B                STRUC_8:   .SET   STRUC_7   
216B                STRUC_7:   .SET   STRUC_6   
216B                STRUC_6:   .SET   STRUC_5   
216B                STRUC_5:   .SET   STRUC_4   
216B                STRUC_4:   .SET   STRUC_3   
216B                STRUC_3:   .SET   STRUC_2   
216B                STRUC_2:   .SET   STRUC_TOP   
216B                STRUC_TOP:   .SET   $   
216B                TST_TEXTM_2369S23:      
216B   78 20 79 0D 0A FF 0D 0A DB   "x y","\r\n",-1,"\r\n"   
2173                          ;*Macro unroll:  _endskip
2173                          ;*Macro unroll:  STRUC_FWD
2173                CUR_ADR:   .SET   $   
2169                          .ORG   STRUC_TOP - 2   
2169   73 21                  DW   CUR_ADR   
2173                          .ORG   CUR_ADR   
2173                          ;*Macro unroll:  STRUC_POP
2173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2173                STRUC_TOP:   .SET   STRUC_2   
2173                STRUC_2:   .SET   STRUC_3   
2173                STRUC_3:   .SET   STRUC_4   
2173                STRUC_4:   .SET   STRUC_5   
2173                STRUC_5:   .SET   STRUC_6   
2173                STRUC_6:   .SET   STRUC_7   
2173                STRUC_7:   .SET   STRUC_8   
2173                STRUC_8:   .SET   STRUC_9   
2173                STRUC_9:   .SET   STRUC_10   
2173                STRUC_10:   .SET   STRUC_11   
2173                STRUC_11:   .SET   STRUC_12   
2173                STRUC_12:   .SET   0   
2173                          ;*Macro unroll: INTERPRET
2173   CF                     RST   $08   
2174   E9 0B                  DW   interpret   
2176   21 0F                  DW   exit_forth   
2178                          ;*Macro unroll: TEST_SET_TEXT "y"
2178   2A 45 30               LD   HL,(lineBufStart)   
217B   22 4B 30               LD   (lineBufTop),HL   
217E   22 49 30               LD   (currkey),HL   
2181   21 8A 21               LD   HL,tst_textM_2371S25   
2184   22 61 32               LD   (char_pointer),HL   
2187                          ;*Macro unroll:  _skip
2187   C3 87 21               JP   $   
218A                          ;*Macro unroll:  STRUC_PUSH $
218A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
218A                STRUC_12:   .SET   STRUC_11   
218A                STRUC_11:   .SET   STRUC_10   
218A                STRUC_10:   .SET   STRUC_9   
218A                STRUC_9:   .SET   STRUC_8   
218A                STRUC_8:   .SET   STRUC_7   
218A                STRUC_7:   .SET   STRUC_6   
218A                STRUC_6:   .SET   STRUC_5   
218A                STRUC_5:   .SET   STRUC_4   
218A                STRUC_4:   .SET   STRUC_3   
218A                STRUC_3:   .SET   STRUC_2   
218A                STRUC_2:   .SET   STRUC_TOP   
218A                STRUC_TOP:   .SET   $   
218A                TST_TEXTM_2371S25:      
218A   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2190                          ;*Macro unroll:  _endskip
2190                          ;*Macro unroll:  STRUC_FWD
2190                CUR_ADR:   .SET   $   
2188                          .ORG   STRUC_TOP - 2   
2188   90 21                  DW   CUR_ADR   
2190                          .ORG   CUR_ADR   
2190                          ;*Macro unroll:  STRUC_POP
2190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2190                STRUC_TOP:   .SET   STRUC_2   
2190                STRUC_2:   .SET   STRUC_3   
2190                STRUC_3:   .SET   STRUC_4   
2190                STRUC_4:   .SET   STRUC_5   
2190                STRUC_5:   .SET   STRUC_6   
2190                STRUC_6:   .SET   STRUC_7   
2190                STRUC_7:   .SET   STRUC_8   
2190                STRUC_8:   .SET   STRUC_9   
2190                STRUC_9:   .SET   STRUC_10   
2190                STRUC_10:   .SET   STRUC_11   
2190                STRUC_11:   .SET   STRUC_12   
2190                STRUC_12:   .SET   0   
2190                          ;*Macro unroll: INTERPRET
2190   CF                     RST   $08   
2191   E9 0B                  DW   interpret   
2193   21 0F                  DW   exit_forth   
2195                          ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
2195   2A 45 30               LD   HL,(lineBufStart)   
2198   22 4B 30               LD   (lineBufTop),HL   
219B   22 49 30               LD   (currkey),HL   
219E   21 A7 21               LD   HL,tst_textM_2373S28   
21A1   22 61 32               LD   (char_pointer),HL   
21A4                          ;*Macro unroll:  _skip
21A4   C3 A4 21               JP   $   
21A7                          ;*Macro unroll:  STRUC_PUSH $
21A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21A7                STRUC_12:   .SET   STRUC_11   
21A7                STRUC_11:   .SET   STRUC_10   
21A7                STRUC_10:   .SET   STRUC_9   
21A7                STRUC_9:   .SET   STRUC_8   
21A7                STRUC_8:   .SET   STRUC_7   
21A7                STRUC_7:   .SET   STRUC_6   
21A7                STRUC_6:   .SET   STRUC_5   
21A7                STRUC_5:   .SET   STRUC_4   
21A7                STRUC_4:   .SET   STRUC_3   
21A7                STRUC_3:   .SET   STRUC_2   
21A7                STRUC_2:   .SET   STRUC_TOP   
21A7                STRUC_TOP:   .SET   $   
21A7                TST_TEXTM_2373S28:      
21A7   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 2C 20 3B 0D 0A FF 0D 0A DB   ": const create does> , ;","\r\n",-1,"\r\n"   
21C4                          ;*Macro unroll:  _endskip
21C4                          ;*Macro unroll:  STRUC_FWD
21C4                CUR_ADR:   .SET   $   
21A5                          .ORG   STRUC_TOP - 2   
21A5   C4 21                  DW   CUR_ADR   
21C4                          .ORG   CUR_ADR   
21C4                          ;*Macro unroll:  STRUC_POP
21C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21C4                STRUC_TOP:   .SET   STRUC_2   
21C4                STRUC_2:   .SET   STRUC_3   
21C4                STRUC_3:   .SET   STRUC_4   
21C4                STRUC_4:   .SET   STRUC_5   
21C4                STRUC_5:   .SET   STRUC_6   
21C4                STRUC_6:   .SET   STRUC_7   
21C4                STRUC_7:   .SET   STRUC_8   
21C4                STRUC_8:   .SET   STRUC_9   
21C4                STRUC_9:   .SET   STRUC_10   
21C4                STRUC_10:   .SET   STRUC_11   
21C4                STRUC_11:   .SET   STRUC_12   
21C4                STRUC_12:   .SET   0   
21C4                          ;*Macro unroll: INTERPRET
21C4   CF                     RST   $08   
21C5   E9 0B                  DW   interpret   
21C7   21 0F                  DW   exit_forth   
21C9                          ;*Macro unroll: TEST_SET_TEXT "23 const x"
21C9   2A 45 30               LD   HL,(lineBufStart)   
21CC   22 4B 30               LD   (lineBufTop),HL   
21CF   22 49 30               LD   (currkey),HL   
21D2   21 DB 21               LD   HL,tst_textM_2375S30   
21D5   22 61 32               LD   (char_pointer),HL   
21D8                          ;*Macro unroll:  _skip
21D8   C3 D8 21               JP   $   
21DB                          ;*Macro unroll:  STRUC_PUSH $
21DB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21DB                STRUC_12:   .SET   STRUC_11   
21DB                STRUC_11:   .SET   STRUC_10   
21DB                STRUC_10:   .SET   STRUC_9   
21DB                STRUC_9:   .SET   STRUC_8   
21DB                STRUC_8:   .SET   STRUC_7   
21DB                STRUC_7:   .SET   STRUC_6   
21DB                STRUC_6:   .SET   STRUC_5   
21DB                STRUC_5:   .SET   STRUC_4   
21DB                STRUC_4:   .SET   STRUC_3   
21DB                STRUC_3:   .SET   STRUC_2   
21DB                STRUC_2:   .SET   STRUC_TOP   
21DB                STRUC_TOP:   .SET   $   
21DB                TST_TEXTM_2375S30:      
21DB   32 33 20 63 6F 6E 73 74 20 78 0D 0A FF 0D 0A DB   "23 const x","\r\n",-1,"\r\n"   
21EA                          ;*Macro unroll:  _endskip
21EA                          ;*Macro unroll:  STRUC_FWD
21EA                CUR_ADR:   .SET   $   
21D9                          .ORG   STRUC_TOP - 2   
21D9   EA 21                  DW   CUR_ADR   
21EA                          .ORG   CUR_ADR   
21EA                          ;*Macro unroll:  STRUC_POP
21EA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21EA                STRUC_TOP:   .SET   STRUC_2   
21EA                STRUC_2:   .SET   STRUC_3   
21EA                STRUC_3:   .SET   STRUC_4   
21EA                STRUC_4:   .SET   STRUC_5   
21EA                STRUC_5:   .SET   STRUC_6   
21EA                STRUC_6:   .SET   STRUC_7   
21EA                STRUC_7:   .SET   STRUC_8   
21EA                STRUC_8:   .SET   STRUC_9   
21EA                STRUC_9:   .SET   STRUC_10   
21EA                STRUC_10:   .SET   STRUC_11   
21EA                STRUC_11:   .SET   STRUC_12   
21EA                STRUC_12:   .SET   0   
21EA                          ;*Macro unroll: INTERPRET
21EA   CF                     RST   $08   
21EB   E9 0B                  DW   interpret   
21ED   21 0F                  DW   exit_forth   
21EF                          ;*Macro unroll: TEST_SET_TEXT "x ."
21EF   2A 45 30               LD   HL,(lineBufStart)   
21F2   22 4B 30               LD   (lineBufTop),HL   
21F5   22 49 30               LD   (currkey),HL   
21F8   21 01 22               LD   HL,tst_textM_2377S32   
21FB   22 61 32               LD   (char_pointer),HL   
21FE                          ;*Macro unroll:  _skip
21FE   C3 FE 21               JP   $   
2201                          ;*Macro unroll:  STRUC_PUSH $
2201                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2201                STRUC_12:   .SET   STRUC_11   
2201                STRUC_11:   .SET   STRUC_10   
2201                STRUC_10:   .SET   STRUC_9   
2201                STRUC_9:   .SET   STRUC_8   
2201                STRUC_8:   .SET   STRUC_7   
2201                STRUC_7:   .SET   STRUC_6   
2201                STRUC_6:   .SET   STRUC_5   
2201                STRUC_5:   .SET   STRUC_4   
2201                STRUC_4:   .SET   STRUC_3   
2201                STRUC_3:   .SET   STRUC_2   
2201                STRUC_2:   .SET   STRUC_TOP   
2201                STRUC_TOP:   .SET   $   
2201                TST_TEXTM_2377S32:      
2201   78 20 2E 0D 0A FF 0D 0A DB   "x .","\r\n",-1,"\r\n"   
2209                          ;*Macro unroll:  _endskip
2209                          ;*Macro unroll:  STRUC_FWD
2209                CUR_ADR:   .SET   $   
21FF                          .ORG   STRUC_TOP - 2   
21FF   09 22                  DW   CUR_ADR   
2209                          .ORG   CUR_ADR   
2209                          ;*Macro unroll:  STRUC_POP
2209                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2209                STRUC_TOP:   .SET   STRUC_2   
2209                STRUC_2:   .SET   STRUC_3   
2209                STRUC_3:   .SET   STRUC_4   
2209                STRUC_4:   .SET   STRUC_5   
2209                STRUC_5:   .SET   STRUC_6   
2209                STRUC_6:   .SET   STRUC_7   
2209                STRUC_7:   .SET   STRUC_8   
2209                STRUC_8:   .SET   STRUC_9   
2209                STRUC_9:   .SET   STRUC_10   
2209                STRUC_10:   .SET   STRUC_11   
2209                STRUC_11:   .SET   STRUC_12   
2209                STRUC_12:   .SET   0   
2209                          ;*Macro unroll: INTERPRET
2209   CF                     RST   $08   
220A   E9 0B                  DW   interpret   
220C   21 0F                  DW   exit_forth   
220E                          ;*Macro unroll: TEST_SET_TEXT "23 constant y"
220E   2A 45 30               LD   HL,(lineBufStart)   
2211   22 4B 30               LD   (lineBufTop),HL   
2214   22 49 30               LD   (currkey),HL   
2217   21 20 22               LD   HL,tst_textM_2379S35   
221A   22 61 32               LD   (char_pointer),HL   
221D                          ;*Macro unroll:  _skip
221D   C3 1D 22               JP   $   
2220                          ;*Macro unroll:  STRUC_PUSH $
2220                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2220                STRUC_12:   .SET   STRUC_11   
2220                STRUC_11:   .SET   STRUC_10   
2220                STRUC_10:   .SET   STRUC_9   
2220                STRUC_9:   .SET   STRUC_8   
2220                STRUC_8:   .SET   STRUC_7   
2220                STRUC_7:   .SET   STRUC_6   
2220                STRUC_6:   .SET   STRUC_5   
2220                STRUC_5:   .SET   STRUC_4   
2220                STRUC_4:   .SET   STRUC_3   
2220                STRUC_3:   .SET   STRUC_2   
2220                STRUC_2:   .SET   STRUC_TOP   
2220                STRUC_TOP:   .SET   $   
2220                TST_TEXTM_2379S35:      
2220   32 33 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "23 constant y","\r\n",-1,"\r\n"   
2232                          ;*Macro unroll:  _endskip
2232                          ;*Macro unroll:  STRUC_FWD
2232                CUR_ADR:   .SET   $   
221E                          .ORG   STRUC_TOP - 2   
221E   32 22                  DW   CUR_ADR   
2232                          .ORG   CUR_ADR   
2232                          ;*Macro unroll:  STRUC_POP
2232                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2232                STRUC_TOP:   .SET   STRUC_2   
2232                STRUC_2:   .SET   STRUC_3   
2232                STRUC_3:   .SET   STRUC_4   
2232                STRUC_4:   .SET   STRUC_5   
2232                STRUC_5:   .SET   STRUC_6   
2232                STRUC_6:   .SET   STRUC_7   
2232                STRUC_7:   .SET   STRUC_8   
2232                STRUC_8:   .SET   STRUC_9   
2232                STRUC_9:   .SET   STRUC_10   
2232                STRUC_10:   .SET   STRUC_11   
2232                STRUC_11:   .SET   STRUC_12   
2232                STRUC_12:   .SET   0   
2232                          ;*Macro unroll: INTERPRET
2232   CF                     RST   $08   
2233   E9 0B                  DW   interpret   
2235   21 0F                  DW   exit_forth   
2237                          ;*Macro unroll: TEST_SET_TEXT "y"
2237   2A 45 30               LD   HL,(lineBufStart)   
223A   22 4B 30               LD   (lineBufTop),HL   
223D   22 49 30               LD   (currkey),HL   
2240   21 49 22               LD   HL,tst_textM_2381S37   
2243   22 61 32               LD   (char_pointer),HL   
2246                          ;*Macro unroll:  _skip
2246   C3 46 22               JP   $   
2249                          ;*Macro unroll:  STRUC_PUSH $
2249                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2249                STRUC_12:   .SET   STRUC_11   
2249                STRUC_11:   .SET   STRUC_10   
2249                STRUC_10:   .SET   STRUC_9   
2249                STRUC_9:   .SET   STRUC_8   
2249                STRUC_8:   .SET   STRUC_7   
2249                STRUC_7:   .SET   STRUC_6   
2249                STRUC_6:   .SET   STRUC_5   
2249                STRUC_5:   .SET   STRUC_4   
2249                STRUC_4:   .SET   STRUC_3   
2249                STRUC_3:   .SET   STRUC_2   
2249                STRUC_2:   .SET   STRUC_TOP   
2249                STRUC_TOP:   .SET   $   
2249                TST_TEXTM_2381S37:      
2249   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
224F                          ;*Macro unroll:  _endskip
224F                          ;*Macro unroll:  STRUC_FWD
224F                CUR_ADR:   .SET   $   
2247                          .ORG   STRUC_TOP - 2   
2247   4F 22                  DW   CUR_ADR   
224F                          .ORG   CUR_ADR   
224F                          ;*Macro unroll:  STRUC_POP
224F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
224F                STRUC_TOP:   .SET   STRUC_2   
224F                STRUC_2:   .SET   STRUC_3   
224F                STRUC_3:   .SET   STRUC_4   
224F                STRUC_4:   .SET   STRUC_5   
224F                STRUC_5:   .SET   STRUC_6   
224F                STRUC_6:   .SET   STRUC_7   
224F                STRUC_7:   .SET   STRUC_8   
224F                STRUC_8:   .SET   STRUC_9   
224F                STRUC_9:   .SET   STRUC_10   
224F                STRUC_10:   .SET   STRUC_11   
224F                STRUC_11:   .SET   STRUC_12   
224F                STRUC_12:   .SET   0   
224F                          ;*Macro unroll: INTERPRET
224F   CF                     RST   $08   
2250   E9 0B                  DW   interpret   
2252   21 0F                  DW   exit_forth   
2254                          ;*Macro unroll: EXPECT 23, "expect 23"
2254   CD 38 0A               CALL   printNum   
2257                          ;*Macro unroll:  loadWord H,L, B,C
2257   69                     LD   L,C   
2258   60                     LD   H,B   
2259   69                     LD   L,C   
225A                          ;*Macro unroll:  ppop0 B,C
225A   DD 2B                  DEC   IX   
225C   DD 46 00               LD   B,(IX+0)   
225F   DD 2B                  DEC   IX   
2261   DD 4E 00               LD   C,(IX+0)   
2264                          ;*Macro unroll:  CMP16 23
2264   11 17 00               LD   DE,23   
2267   B7                     OR   A   
2268   ED 52                  SBC   HL,DE   
226A                          ;*Macro unroll:  checkZeroWord H,L
226A   7D                     LD   A,L   
226B   B4                     OR   H   
226C   CA 85 22               JP   z,tf_doneM_2383S39   
226F   11 83 10               LD   DE,FAILED   
2272   CD EB 11               CALL   printPStr   
2275   11 7F 22               LD   DE,te_failM_2383S39   
2278   CD EB 11               CALL   printPStr   
227B   76                     HALT      
227C                          ;*Macro unroll:  _skip
227C   C3 7C 22               JP   $   
227F                          ;*Macro unroll:  STRUC_PUSH $
227F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
227F                STRUC_12:   .SET   STRUC_11   
227F                STRUC_11:   .SET   STRUC_10   
227F                STRUC_10:   .SET   STRUC_9   
227F                STRUC_9:   .SET   STRUC_8   
227F                STRUC_8:   .SET   STRUC_7   
227F                STRUC_7:   .SET   STRUC_6   
227F                STRUC_6:   .SET   STRUC_5   
227F                STRUC_5:   .SET   STRUC_4   
227F                STRUC_4:   .SET   STRUC_3   
227F                STRUC_3:   .SET   STRUC_2   
227F                STRUC_2:   .SET   STRUC_TOP   
227F                STRUC_TOP:   .SET   $   
227F                TE_FAILM_2383S39:      
227F   05 32 33 20 32 33      .PSTR   "23 23"   
2285                          ;*Macro unroll:  _endskip
2285                          ;*Macro unroll:  STRUC_FWD
2285                CUR_ADR:   .SET   $   
227D                          .ORG   STRUC_TOP - 2   
227D   85 22                  DW   CUR_ADR   
2285                          .ORG   CUR_ADR   
2285                          ;*Macro unroll:  STRUC_POP
2285                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2285                STRUC_TOP:   .SET   STRUC_2   
2285                STRUC_2:   .SET   STRUC_3   
2285                STRUC_3:   .SET   STRUC_4   
2285                STRUC_4:   .SET   STRUC_5   
2285                STRUC_5:   .SET   STRUC_6   
2285                STRUC_6:   .SET   STRUC_7   
2285                STRUC_7:   .SET   STRUC_8   
2285                STRUC_8:   .SET   STRUC_9   
2285                STRUC_9:   .SET   STRUC_10   
2285                STRUC_10:   .SET   STRUC_11   
2285                STRUC_11:   .SET   STRUC_12   
2285                STRUC_12:   .SET   0   
2285                TF_DONEM_2383S39:      
2285                          ;*Macro unroll: ppushValue 1
2285                          ;*Macro unroll:  ppush0 B,C
2285   DD 71 00               LD   (IX+0),C   
2288   DD 23                  INC   IX   
228A   DD 70 00               LD   (IX+0),B   
228D   DD 23                  INC   IX   
228F   01 01 00               LD   BC,1   
2292                          ;*Macro unroll: TEST_SET_TEXT "dup"
2292   2A 45 30               LD   HL,(lineBufStart)   
2295   22 4B 30               LD   (lineBufTop),HL   
2298   22 49 30               LD   (currkey),HL   
229B   21 A4 22               LD   HL,tst_textM_2385S42   
229E   22 61 32               LD   (char_pointer),HL   
22A1                          ;*Macro unroll:  _skip
22A1   C3 A1 22               JP   $   
22A4                          ;*Macro unroll:  STRUC_PUSH $
22A4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22A4                STRUC_12:   .SET   STRUC_11   
22A4                STRUC_11:   .SET   STRUC_10   
22A4                STRUC_10:   .SET   STRUC_9   
22A4                STRUC_9:   .SET   STRUC_8   
22A4                STRUC_8:   .SET   STRUC_7   
22A4                STRUC_7:   .SET   STRUC_6   
22A4                STRUC_6:   .SET   STRUC_5   
22A4                STRUC_5:   .SET   STRUC_4   
22A4                STRUC_4:   .SET   STRUC_3   
22A4                STRUC_3:   .SET   STRUC_2   
22A4                STRUC_2:   .SET   STRUC_TOP   
22A4                STRUC_TOP:   .SET   $   
22A4                TST_TEXTM_2385S42:      
22A4   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
22AC                          ;*Macro unroll:  _endskip
22AC                          ;*Macro unroll:  STRUC_FWD
22AC                CUR_ADR:   .SET   $   
22A2                          .ORG   STRUC_TOP - 2   
22A2   AC 22                  DW   CUR_ADR   
22AC                          .ORG   CUR_ADR   
22AC                          ;*Macro unroll:  STRUC_POP
22AC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22AC                STRUC_TOP:   .SET   STRUC_2   
22AC                STRUC_2:   .SET   STRUC_3   
22AC                STRUC_3:   .SET   STRUC_4   
22AC                STRUC_4:   .SET   STRUC_5   
22AC                STRUC_5:   .SET   STRUC_6   
22AC                STRUC_6:   .SET   STRUC_7   
22AC                STRUC_7:   .SET   STRUC_8   
22AC                STRUC_8:   .SET   STRUC_9   
22AC                STRUC_9:   .SET   STRUC_10   
22AC                STRUC_10:   .SET   STRUC_11   
22AC                STRUC_11:   .SET   STRUC_12   
22AC                STRUC_12:   .SET   0   
22AC                          ;*Macro unroll: INTERPRET
22AC   CF                     RST   $08   
22AD   E9 0B                  DW   interpret   
22AF   21 0F                  DW   exit_forth   
22B1                          ;*Macro unroll: EXPECT 1, "1 interpret dup"
22B1   CD 38 0A               CALL   printNum   
22B4                          ;*Macro unroll:  loadWord H,L, B,C
22B4   69                     LD   L,C   
22B5   60                     LD   H,B   
22B6   69                     LD   L,C   
22B7                          ;*Macro unroll:  ppop0 B,C
22B7   DD 2B                  DEC   IX   
22B9   DD 46 00               LD   B,(IX+0)   
22BC   DD 2B                  DEC   IX   
22BE   DD 4E 00               LD   C,(IX+0)   
22C1                          ;*Macro unroll:  CMP16 1
22C1   11 01 00               LD   DE,1   
22C4   B7                     OR   A   
22C5   ED 52                  SBC   HL,DE   
22C7                          ;*Macro unroll:  checkZeroWord H,L
22C7   7D                     LD   A,L   
22C8   B4                     OR   H   
22C9   CA EC 22               JP   z,tf_doneM_2387S44   
22CC   11 83 10               LD   DE,FAILED   
22CF   CD EB 11               CALL   printPStr   
22D2   11 DC 22               LD   DE,te_failM_2387S44   
22D5   CD EB 11               CALL   printPStr   
22D8   76                     HALT      
22D9                          ;*Macro unroll:  _skip
22D9   C3 D9 22               JP   $   
22DC                          ;*Macro unroll:  STRUC_PUSH $
22DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22DC                STRUC_12:   .SET   STRUC_11   
22DC                STRUC_11:   .SET   STRUC_10   
22DC                STRUC_10:   .SET   STRUC_9   
22DC                STRUC_9:   .SET   STRUC_8   
22DC                STRUC_8:   .SET   STRUC_7   
22DC                STRUC_7:   .SET   STRUC_6   
22DC                STRUC_6:   .SET   STRUC_5   
22DC                STRUC_5:   .SET   STRUC_4   
22DC                STRUC_4:   .SET   STRUC_3   
22DC                STRUC_3:   .SET   STRUC_2   
22DC                STRUC_2:   .SET   STRUC_TOP   
22DC                STRUC_TOP:   .SET   $   
22DC                TE_FAILM_2387S44:      
22DC   0F 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 .PSTR   "1 interpret dup"   
22EC                          ;*Macro unroll:  _endskip
22EC                          ;*Macro unroll:  STRUC_FWD
22EC                CUR_ADR:   .SET   $   
22DA                          .ORG   STRUC_TOP - 2   
22DA   EC 22                  DW   CUR_ADR   
22EC                          .ORG   CUR_ADR   
22EC                          ;*Macro unroll:  STRUC_POP
22EC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22EC                STRUC_TOP:   .SET   STRUC_2   
22EC                STRUC_2:   .SET   STRUC_3   
22EC                STRUC_3:   .SET   STRUC_4   
22EC                STRUC_4:   .SET   STRUC_5   
22EC                STRUC_5:   .SET   STRUC_6   
22EC                STRUC_6:   .SET   STRUC_7   
22EC                STRUC_7:   .SET   STRUC_8   
22EC                STRUC_8:   .SET   STRUC_9   
22EC                STRUC_9:   .SET   STRUC_10   
22EC                STRUC_10:   .SET   STRUC_11   
22EC                STRUC_11:   .SET   STRUC_12   
22EC                STRUC_12:   .SET   0   
22EC                TF_DONEM_2387S44:      
22EC                          ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
22EC   CD 38 0A               CALL   printNum   
22EF                          ;*Macro unroll:  loadWord H,L, B,C
22EF   69                     LD   L,C   
22F0   60                     LD   H,B   
22F1   69                     LD   L,C   
22F2                          ;*Macro unroll:  ppop0 B,C
22F2   DD 2B                  DEC   IX   
22F4   DD 46 00               LD   B,(IX+0)   
22F7   DD 2B                  DEC   IX   
22F9   DD 4E 00               LD   C,(IX+0)   
22FC                          ;*Macro unroll:  CMP16 1
22FC   11 01 00               LD   DE,1   
22FF   B7                     OR   A   
2300   ED 52                  SBC   HL,DE   
2302                          ;*Macro unroll:  checkZeroWord H,L
2302   7D                     LD   A,L   
2303   B4                     OR   H   
2304   CA 29 23               JP   z,tf_doneM_2388S45   
2307   11 83 10               LD   DE,FAILED   
230A   CD EB 11               CALL   printPStr   
230D   11 17 23               LD   DE,te_failM_2388S45   
2310   CD EB 11               CALL   printPStr   
2313   76                     HALT      
2314                          ;*Macro unroll:  _skip
2314   C3 14 23               JP   $   
2317                          ;*Macro unroll:  STRUC_PUSH $
2317                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2317                STRUC_12:   .SET   STRUC_11   
2317                STRUC_11:   .SET   STRUC_10   
2317                STRUC_10:   .SET   STRUC_9   
2317                STRUC_9:   .SET   STRUC_8   
2317                STRUC_8:   .SET   STRUC_7   
2317                STRUC_7:   .SET   STRUC_6   
2317                STRUC_6:   .SET   STRUC_5   
2317                STRUC_5:   .SET   STRUC_4   
2317                STRUC_4:   .SET   STRUC_3   
2317                STRUC_3:   .SET   STRUC_2   
2317                STRUC_2:   .SET   STRUC_TOP   
2317                STRUC_TOP:   .SET   $   
2317                TE_FAILM_2388S45:      
2317   11 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 20 32 .PSTR   "1 interpret dup 2"   
2329                          ;*Macro unroll:  _endskip
2329                          ;*Macro unroll:  STRUC_FWD
2329                CUR_ADR:   .SET   $   
2315                          .ORG   STRUC_TOP - 2   
2315   29 23                  DW   CUR_ADR   
2329                          .ORG   CUR_ADR   
2329                          ;*Macro unroll:  STRUC_POP
2329                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2329                STRUC_TOP:   .SET   STRUC_2   
2329                STRUC_2:   .SET   STRUC_3   
2329                STRUC_3:   .SET   STRUC_4   
2329                STRUC_4:   .SET   STRUC_5   
2329                STRUC_5:   .SET   STRUC_6   
2329                STRUC_6:   .SET   STRUC_7   
2329                STRUC_7:   .SET   STRUC_8   
2329                STRUC_8:   .SET   STRUC_9   
2329                STRUC_9:   .SET   STRUC_10   
2329                STRUC_10:   .SET   STRUC_11   
2329                STRUC_11:   .SET   STRUC_12   
2329                STRUC_12:   .SET   0   
2329                TF_DONEM_2388S45:      
2329                          ;*Macro unroll: TEST_SET_TEXT "123"
2329   2A 45 30               LD   HL,(lineBufStart)   
232C   22 4B 30               LD   (lineBufTop),HL   
232F   22 49 30               LD   (currkey),HL   
2332   21 3B 23               LD   HL,tst_textM_2389S47   
2335   22 61 32               LD   (char_pointer),HL   
2338                          ;*Macro unroll:  _skip
2338   C3 38 23               JP   $   
233B                          ;*Macro unroll:  STRUC_PUSH $
233B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
233B                STRUC_12:   .SET   STRUC_11   
233B                STRUC_11:   .SET   STRUC_10   
233B                STRUC_10:   .SET   STRUC_9   
233B                STRUC_9:   .SET   STRUC_8   
233B                STRUC_8:   .SET   STRUC_7   
233B                STRUC_7:   .SET   STRUC_6   
233B                STRUC_6:   .SET   STRUC_5   
233B                STRUC_5:   .SET   STRUC_4   
233B                STRUC_4:   .SET   STRUC_3   
233B                STRUC_3:   .SET   STRUC_2   
233B                STRUC_2:   .SET   STRUC_TOP   
233B                STRUC_TOP:   .SET   $   
233B                TST_TEXTM_2389S47:      
233B   31 32 33 0D 0A FF 0D 0A DB   "123","\r\n",-1,"\r\n"   
2343                          ;*Macro unroll:  _endskip
2343                          ;*Macro unroll:  STRUC_FWD
2343                CUR_ADR:   .SET   $   
2339                          .ORG   STRUC_TOP - 2   
2339   43 23                  DW   CUR_ADR   
2343                          .ORG   CUR_ADR   
2343                          ;*Macro unroll:  STRUC_POP
2343                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2343                STRUC_TOP:   .SET   STRUC_2   
2343                STRUC_2:   .SET   STRUC_3   
2343                STRUC_3:   .SET   STRUC_4   
2343                STRUC_4:   .SET   STRUC_5   
2343                STRUC_5:   .SET   STRUC_6   
2343                STRUC_6:   .SET   STRUC_7   
2343                STRUC_7:   .SET   STRUC_8   
2343                STRUC_8:   .SET   STRUC_9   
2343                STRUC_9:   .SET   STRUC_10   
2343                STRUC_10:   .SET   STRUC_11   
2343                STRUC_11:   .SET   STRUC_12   
2343                STRUC_12:   .SET   0   
2343                          ;*Macro unroll: INTERPRET
2343   CF                     RST   $08   
2344   E9 0B                  DW   interpret   
2346   21 0F                  DW   exit_forth   
2348                          ;*Macro unroll: EXPECT 123, "interpret 123"
2348   CD 38 0A               CALL   printNum   
234B                          ;*Macro unroll:  loadWord H,L, B,C
234B   69                     LD   L,C   
234C   60                     LD   H,B   
234D   69                     LD   L,C   
234E                          ;*Macro unroll:  ppop0 B,C
234E   DD 2B                  DEC   IX   
2350   DD 46 00               LD   B,(IX+0)   
2353   DD 2B                  DEC   IX   
2355   DD 4E 00               LD   C,(IX+0)   
2358                          ;*Macro unroll:  CMP16 123
2358   11 7B 00               LD   DE,123   
235B   B7                     OR   A   
235C   ED 52                  SBC   HL,DE   
235E                          ;*Macro unroll:  checkZeroWord H,L
235E   7D                     LD   A,L   
235F   B4                     OR   H   
2360   CA 81 23               JP   z,tf_doneM_2391S49   
2363   11 83 10               LD   DE,FAILED   
2366   CD EB 11               CALL   printPStr   
2369   11 73 23               LD   DE,te_failM_2391S49   
236C   CD EB 11               CALL   printPStr   
236F   76                     HALT      
2370                          ;*Macro unroll:  _skip
2370   C3 70 23               JP   $   
2373                          ;*Macro unroll:  STRUC_PUSH $
2373                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2373                STRUC_12:   .SET   STRUC_11   
2373                STRUC_11:   .SET   STRUC_10   
2373                STRUC_10:   .SET   STRUC_9   
2373                STRUC_9:   .SET   STRUC_8   
2373                STRUC_8:   .SET   STRUC_7   
2373                STRUC_7:   .SET   STRUC_6   
2373                STRUC_6:   .SET   STRUC_5   
2373                STRUC_5:   .SET   STRUC_4   
2373                STRUC_4:   .SET   STRUC_3   
2373                STRUC_3:   .SET   STRUC_2   
2373                STRUC_2:   .SET   STRUC_TOP   
2373                STRUC_TOP:   .SET   $   
2373                TE_FAILM_2391S49:      
2373   0D 69 6E 74 65 72 70 72 65 74 20 31 32 33 .PSTR   "interpret 123"   
2381                          ;*Macro unroll:  _endskip
2381                          ;*Macro unroll:  STRUC_FWD
2381                CUR_ADR:   .SET   $   
2371                          .ORG   STRUC_TOP - 2   
2371   81 23                  DW   CUR_ADR   
2381                          .ORG   CUR_ADR   
2381                          ;*Macro unroll:  STRUC_POP
2381                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2381                STRUC_TOP:   .SET   STRUC_2   
2381                STRUC_2:   .SET   STRUC_3   
2381                STRUC_3:   .SET   STRUC_4   
2381                STRUC_4:   .SET   STRUC_5   
2381                STRUC_5:   .SET   STRUC_6   
2381                STRUC_6:   .SET   STRUC_7   
2381                STRUC_7:   .SET   STRUC_8   
2381                STRUC_8:   .SET   STRUC_9   
2381                STRUC_9:   .SET   STRUC_10   
2381                STRUC_10:   .SET   STRUC_11   
2381                STRUC_11:   .SET   STRUC_12   
2381                STRUC_12:   .SET   0   
2381                TF_DONEM_2391S49:      
2381                          ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
2381   2A 45 30               LD   HL,(lineBufStart)   
2384   22 4B 30               LD   (lineBufTop),HL   
2387   22 49 30               LD   (currkey),HL   
238A   21 93 23               LD   HL,tst_textM_2392S51   
238D   22 61 32               LD   (char_pointer),HL   
2390                          ;*Macro unroll:  _skip
2390   C3 90 23               JP   $   
2393                          ;*Macro unroll:  STRUC_PUSH $
2393                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2393                STRUC_12:   .SET   STRUC_11   
2393                STRUC_11:   .SET   STRUC_10   
2393                STRUC_10:   .SET   STRUC_9   
2393                STRUC_9:   .SET   STRUC_8   
2393                STRUC_8:   .SET   STRUC_7   
2393                STRUC_7:   .SET   STRUC_6   
2393                STRUC_6:   .SET   STRUC_5   
2393                STRUC_5:   .SET   STRUC_4   
2393                STRUC_4:   .SET   STRUC_3   
2393                STRUC_3:   .SET   STRUC_2   
2393                STRUC_2:   .SET   STRUC_TOP   
2393                STRUC_TOP:   .SET   $   
2393                TST_TEXTM_2392S51:      
2393   31 32 33 20 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 0D 0A FF 0D 0A DB   "123 constant x123","\r\n",-1,"\r\n"   
23A9                          ;*Macro unroll:  _endskip
23A9                          ;*Macro unroll:  STRUC_FWD
23A9                CUR_ADR:   .SET   $   
2391                          .ORG   STRUC_TOP - 2   
2391   A9 23                  DW   CUR_ADR   
23A9                          .ORG   CUR_ADR   
23A9                          ;*Macro unroll:  STRUC_POP
23A9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23A9                STRUC_TOP:   .SET   STRUC_2   
23A9                STRUC_2:   .SET   STRUC_3   
23A9                STRUC_3:   .SET   STRUC_4   
23A9                STRUC_4:   .SET   STRUC_5   
23A9                STRUC_5:   .SET   STRUC_6   
23A9                STRUC_6:   .SET   STRUC_7   
23A9                STRUC_7:   .SET   STRUC_8   
23A9                STRUC_8:   .SET   STRUC_9   
23A9                STRUC_9:   .SET   STRUC_10   
23A9                STRUC_10:   .SET   STRUC_11   
23A9                STRUC_11:   .SET   STRUC_12   
23A9                STRUC_12:   .SET   0   
23A9                          ;*Macro unroll: INTERPRET
23A9   CF                     RST   $08   
23AA   E9 0B                  DW   interpret   
23AC   21 0F                  DW   exit_forth   
23AE                          ;*Macro unroll: TEST_SET_TEXT "x123"
23AE   2A 45 30               LD   HL,(lineBufStart)   
23B1   22 4B 30               LD   (lineBufTop),HL   
23B4   22 49 30               LD   (currkey),HL   
23B7   21 C0 23               LD   HL,tst_textM_2394S53   
23BA   22 61 32               LD   (char_pointer),HL   
23BD                          ;*Macro unroll:  _skip
23BD   C3 BD 23               JP   $   
23C0                          ;*Macro unroll:  STRUC_PUSH $
23C0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23C0                STRUC_12:   .SET   STRUC_11   
23C0                STRUC_11:   .SET   STRUC_10   
23C0                STRUC_10:   .SET   STRUC_9   
23C0                STRUC_9:   .SET   STRUC_8   
23C0                STRUC_8:   .SET   STRUC_7   
23C0                STRUC_7:   .SET   STRUC_6   
23C0                STRUC_6:   .SET   STRUC_5   
23C0                STRUC_5:   .SET   STRUC_4   
23C0                STRUC_4:   .SET   STRUC_3   
23C0                STRUC_3:   .SET   STRUC_2   
23C0                STRUC_2:   .SET   STRUC_TOP   
23C0                STRUC_TOP:   .SET   $   
23C0                TST_TEXTM_2394S53:      
23C0   78 31 32 33 0D 0A FF 0D 0A DB   "x123","\r\n",-1,"\r\n"   
23C9                          ;*Macro unroll:  _endskip
23C9                          ;*Macro unroll:  STRUC_FWD
23C9                CUR_ADR:   .SET   $   
23BE                          .ORG   STRUC_TOP - 2   
23BE   C9 23                  DW   CUR_ADR   
23C9                          .ORG   CUR_ADR   
23C9                          ;*Macro unroll:  STRUC_POP
23C9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23C9                STRUC_TOP:   .SET   STRUC_2   
23C9                STRUC_2:   .SET   STRUC_3   
23C9                STRUC_3:   .SET   STRUC_4   
23C9                STRUC_4:   .SET   STRUC_5   
23C9                STRUC_5:   .SET   STRUC_6   
23C9                STRUC_6:   .SET   STRUC_7   
23C9                STRUC_7:   .SET   STRUC_8   
23C9                STRUC_8:   .SET   STRUC_9   
23C9                STRUC_9:   .SET   STRUC_10   
23C9                STRUC_10:   .SET   STRUC_11   
23C9                STRUC_11:   .SET   STRUC_12   
23C9                STRUC_12:   .SET   0   
23C9                          ;*Macro unroll: INTERPRET
23C9   CF                     RST   $08   
23CA   E9 0B                  DW   interpret   
23CC   21 0F                  DW   exit_forth   
23CE                          ;*Macro unroll: EXPECT 123, "constant x123 = 123"
23CE   CD 38 0A               CALL   printNum   
23D1                          ;*Macro unroll:  loadWord H,L, B,C
23D1   69                     LD   L,C   
23D2   60                     LD   H,B   
23D3   69                     LD   L,C   
23D4                          ;*Macro unroll:  ppop0 B,C
23D4   DD 2B                  DEC   IX   
23D6   DD 46 00               LD   B,(IX+0)   
23D9   DD 2B                  DEC   IX   
23DB   DD 4E 00               LD   C,(IX+0)   
23DE                          ;*Macro unroll:  CMP16 123
23DE   11 7B 00               LD   DE,123   
23E1   B7                     OR   A   
23E2   ED 52                  SBC   HL,DE   
23E4                          ;*Macro unroll:  checkZeroWord H,L
23E4   7D                     LD   A,L   
23E5   B4                     OR   H   
23E6   CA 0D 24               JP   z,tf_doneM_2396S55   
23E9   11 83 10               LD   DE,FAILED   
23EC   CD EB 11               CALL   printPStr   
23EF   11 F9 23               LD   DE,te_failM_2396S55   
23F2   CD EB 11               CALL   printPStr   
23F5   76                     HALT      
23F6                          ;*Macro unroll:  _skip
23F6   C3 F6 23               JP   $   
23F9                          ;*Macro unroll:  STRUC_PUSH $
23F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23F9                STRUC_12:   .SET   STRUC_11   
23F9                STRUC_11:   .SET   STRUC_10   
23F9                STRUC_10:   .SET   STRUC_9   
23F9                STRUC_9:   .SET   STRUC_8   
23F9                STRUC_8:   .SET   STRUC_7   
23F9                STRUC_7:   .SET   STRUC_6   
23F9                STRUC_6:   .SET   STRUC_5   
23F9                STRUC_5:   .SET   STRUC_4   
23F9                STRUC_4:   .SET   STRUC_3   
23F9                STRUC_3:   .SET   STRUC_2   
23F9                STRUC_2:   .SET   STRUC_TOP   
23F9                STRUC_TOP:   .SET   $   
23F9                TE_FAILM_2396S55:      
23F9   13 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 20 3D 20 31 32 33 .PSTR   "constant x123 = 123"   
240D                          ;*Macro unroll:  _endskip
240D                          ;*Macro unroll:  STRUC_FWD
240D                CUR_ADR:   .SET   $   
23F7                          .ORG   STRUC_TOP - 2   
23F7   0D 24                  DW   CUR_ADR   
240D                          .ORG   CUR_ADR   
240D                          ;*Macro unroll:  STRUC_POP
240D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
240D                STRUC_TOP:   .SET   STRUC_2   
240D                STRUC_2:   .SET   STRUC_3   
240D                STRUC_3:   .SET   STRUC_4   
240D                STRUC_4:   .SET   STRUC_5   
240D                STRUC_5:   .SET   STRUC_6   
240D                STRUC_6:   .SET   STRUC_7   
240D                STRUC_7:   .SET   STRUC_8   
240D                STRUC_8:   .SET   STRUC_9   
240D                STRUC_9:   .SET   STRUC_10   
240D                STRUC_10:   .SET   STRUC_11   
240D                STRUC_11:   .SET   STRUC_12   
240D                STRUC_12:   .SET   0   
240D                TF_DONEM_2396S55:      
240D                          ;*Macro unroll: TEST_SET_TEXT "variable v1"
240D   2A 45 30               LD   HL,(lineBufStart)   
2410   22 4B 30               LD   (lineBufTop),HL   
2413   22 49 30               LD   (currkey),HL   
2416   21 1F 24               LD   HL,tst_textM_2397S57   
2419   22 61 32               LD   (char_pointer),HL   
241C                          ;*Macro unroll:  _skip
241C   C3 1C 24               JP   $   
241F                          ;*Macro unroll:  STRUC_PUSH $
241F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
241F                STRUC_12:   .SET   STRUC_11   
241F                STRUC_11:   .SET   STRUC_10   
241F                STRUC_10:   .SET   STRUC_9   
241F                STRUC_9:   .SET   STRUC_8   
241F                STRUC_8:   .SET   STRUC_7   
241F                STRUC_7:   .SET   STRUC_6   
241F                STRUC_6:   .SET   STRUC_5   
241F                STRUC_5:   .SET   STRUC_4   
241F                STRUC_4:   .SET   STRUC_3   
241F                STRUC_3:   .SET   STRUC_2   
241F                STRUC_2:   .SET   STRUC_TOP   
241F                STRUC_TOP:   .SET   $   
241F                TST_TEXTM_2397S57:      
241F   76 61 72 69 61 62 6C 65 20 76 31 0D 0A FF 0D 0A DB   "variable v1","\r\n",-1,"\r\n"   
242F                          ;*Macro unroll:  _endskip
242F                          ;*Macro unroll:  STRUC_FWD
242F                CUR_ADR:   .SET   $   
241D                          .ORG   STRUC_TOP - 2   
241D   2F 24                  DW   CUR_ADR   
242F                          .ORG   CUR_ADR   
242F                          ;*Macro unroll:  STRUC_POP
242F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
242F                STRUC_TOP:   .SET   STRUC_2   
242F                STRUC_2:   .SET   STRUC_3   
242F                STRUC_3:   .SET   STRUC_4   
242F                STRUC_4:   .SET   STRUC_5   
242F                STRUC_5:   .SET   STRUC_6   
242F                STRUC_6:   .SET   STRUC_7   
242F                STRUC_7:   .SET   STRUC_8   
242F                STRUC_8:   .SET   STRUC_9   
242F                STRUC_9:   .SET   STRUC_10   
242F                STRUC_10:   .SET   STRUC_11   
242F                STRUC_11:   .SET   STRUC_12   
242F                STRUC_12:   .SET   0   
242F                          ;*Macro unroll: INTERPRET
242F   CF                     RST   $08   
2430   E9 0B                  DW   interpret   
2432   21 0F                  DW   exit_forth   
2434                          ;*Macro unroll: ppushValue 123
2434                          ;*Macro unroll:  ppush0 B,C
2434   DD 71 00               LD   (IX+0),C   
2437   DD 23                  INC   IX   
2439   DD 70 00               LD   (IX+0),B   
243C   DD 23                  INC   IX   
243E   01 7B 00               LD   BC,123   
2441                          ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
2441   2A 45 30               LD   HL,(lineBufStart)   
2444   22 4B 30               LD   (lineBufTop),HL   
2447   22 49 30               LD   (currkey),HL   
244A   21 53 24               LD   HL,tst_textM_2400S60   
244D   22 61 32               LD   (char_pointer),HL   
2450                          ;*Macro unroll:  _skip
2450   C3 50 24               JP   $   
2453                          ;*Macro unroll:  STRUC_PUSH $
2453                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2453                STRUC_12:   .SET   STRUC_11   
2453                STRUC_11:   .SET   STRUC_10   
2453                STRUC_10:   .SET   STRUC_9   
2453                STRUC_9:   .SET   STRUC_8   
2453                STRUC_8:   .SET   STRUC_7   
2453                STRUC_7:   .SET   STRUC_6   
2453                STRUC_6:   .SET   STRUC_5   
2453                STRUC_5:   .SET   STRUC_4   
2453                STRUC_4:   .SET   STRUC_3   
2453                STRUC_3:   .SET   STRUC_2   
2453                STRUC_2:   .SET   STRUC_TOP   
2453                STRUC_TOP:   .SET   $   
2453                TST_TEXTM_2400S60:      
2453   31 32 33 20 76 31 20 21 0D 0A FF 0D 0A DB   "123 v1 !","\r\n",-1,"\r\n"   
2460                          ;*Macro unroll:  _endskip
2460                          ;*Macro unroll:  STRUC_FWD
2460                CUR_ADR:   .SET   $   
2451                          .ORG   STRUC_TOP - 2   
2451   60 24                  DW   CUR_ADR   
2460                          .ORG   CUR_ADR   
2460                          ;*Macro unroll:  STRUC_POP
2460                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2460                STRUC_TOP:   .SET   STRUC_2   
2460                STRUC_2:   .SET   STRUC_3   
2460                STRUC_3:   .SET   STRUC_4   
2460                STRUC_4:   .SET   STRUC_5   
2460                STRUC_5:   .SET   STRUC_6   
2460                STRUC_6:   .SET   STRUC_7   
2460                STRUC_7:   .SET   STRUC_8   
2460                STRUC_8:   .SET   STRUC_9   
2460                STRUC_9:   .SET   STRUC_10   
2460                STRUC_10:   .SET   STRUC_11   
2460                STRUC_11:   .SET   STRUC_12   
2460                STRUC_12:   .SET   0   
2460                          ;*Macro unroll: INTERPRET
2460   CF                     RST   $08   
2461   E9 0B                  DW   interpret   
2463   21 0F                  DW   exit_forth   
2465                          ;*Macro unroll: TEST_SET_TEXT "v1 @"
2465   2A 45 30               LD   HL,(lineBufStart)   
2468   22 4B 30               LD   (lineBufTop),HL   
246B   22 49 30               LD   (currkey),HL   
246E   21 77 24               LD   HL,tst_textM_2402S62   
2471   22 61 32               LD   (char_pointer),HL   
2474                          ;*Macro unroll:  _skip
2474   C3 74 24               JP   $   
2477                          ;*Macro unroll:  STRUC_PUSH $
2477                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2477                STRUC_12:   .SET   STRUC_11   
2477                STRUC_11:   .SET   STRUC_10   
2477                STRUC_10:   .SET   STRUC_9   
2477                STRUC_9:   .SET   STRUC_8   
2477                STRUC_8:   .SET   STRUC_7   
2477                STRUC_7:   .SET   STRUC_6   
2477                STRUC_6:   .SET   STRUC_5   
2477                STRUC_5:   .SET   STRUC_4   
2477                STRUC_4:   .SET   STRUC_3   
2477                STRUC_3:   .SET   STRUC_2   
2477                STRUC_2:   .SET   STRUC_TOP   
2477                STRUC_TOP:   .SET   $   
2477                TST_TEXTM_2402S62:      
2477   76 31 20 40 0D 0A FF 0D 0A DB   "v1 @","\r\n",-1,"\r\n"   
2480                          ;*Macro unroll:  _endskip
2480                          ;*Macro unroll:  STRUC_FWD
2480                CUR_ADR:   .SET   $   
2475                          .ORG   STRUC_TOP - 2   
2475   80 24                  DW   CUR_ADR   
2480                          .ORG   CUR_ADR   
2480                          ;*Macro unroll:  STRUC_POP
2480                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2480                STRUC_TOP:   .SET   STRUC_2   
2480                STRUC_2:   .SET   STRUC_3   
2480                STRUC_3:   .SET   STRUC_4   
2480                STRUC_4:   .SET   STRUC_5   
2480                STRUC_5:   .SET   STRUC_6   
2480                STRUC_6:   .SET   STRUC_7   
2480                STRUC_7:   .SET   STRUC_8   
2480                STRUC_8:   .SET   STRUC_9   
2480                STRUC_9:   .SET   STRUC_10   
2480                STRUC_10:   .SET   STRUC_11   
2480                STRUC_11:   .SET   STRUC_12   
2480                STRUC_12:   .SET   0   
2480                          ;*Macro unroll: INTERPRET
2480   CF                     RST   $08   
2481   E9 0B                  DW   interpret   
2483   21 0F                  DW   exit_forth   
2485                          ;*Macro unroll: EXPECT 123, "variable v1 = 123"
2485   CD 38 0A               CALL   printNum   
2488                          ;*Macro unroll:  loadWord H,L, B,C
2488   69                     LD   L,C   
2489   60                     LD   H,B   
248A   69                     LD   L,C   
248B                          ;*Macro unroll:  ppop0 B,C
248B   DD 2B                  DEC   IX   
248D   DD 46 00               LD   B,(IX+0)   
2490   DD 2B                  DEC   IX   
2492   DD 4E 00               LD   C,(IX+0)   
2495                          ;*Macro unroll:  CMP16 123
2495   11 7B 00               LD   DE,123   
2498   B7                     OR   A   
2499   ED 52                  SBC   HL,DE   
249B                          ;*Macro unroll:  checkZeroWord H,L
249B   7D                     LD   A,L   
249C   B4                     OR   H   
249D   CA C2 24               JP   z,tf_doneM_2404S64   
24A0   11 83 10               LD   DE,FAILED   
24A3   CD EB 11               CALL   printPStr   
24A6   11 B0 24               LD   DE,te_failM_2404S64   
24A9   CD EB 11               CALL   printPStr   
24AC   76                     HALT      
24AD                          ;*Macro unroll:  _skip
24AD   C3 AD 24               JP   $   
24B0                          ;*Macro unroll:  STRUC_PUSH $
24B0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24B0                STRUC_12:   .SET   STRUC_11   
24B0                STRUC_11:   .SET   STRUC_10   
24B0                STRUC_10:   .SET   STRUC_9   
24B0                STRUC_9:   .SET   STRUC_8   
24B0                STRUC_8:   .SET   STRUC_7   
24B0                STRUC_7:   .SET   STRUC_6   
24B0                STRUC_6:   .SET   STRUC_5   
24B0                STRUC_5:   .SET   STRUC_4   
24B0                STRUC_4:   .SET   STRUC_3   
24B0                STRUC_3:   .SET   STRUC_2   
24B0                STRUC_2:   .SET   STRUC_TOP   
24B0                STRUC_TOP:   .SET   $   
24B0                TE_FAILM_2404S64:      
24B0   11 76 61 72 69 61 62 6C 65 20 76 31 20 3D 20 31 32 33 .PSTR   "variable v1 = 123"   
24C2                          ;*Macro unroll:  _endskip
24C2                          ;*Macro unroll:  STRUC_FWD
24C2                CUR_ADR:   .SET   $   
24AE                          .ORG   STRUC_TOP - 2   
24AE   C2 24                  DW   CUR_ADR   
24C2                          .ORG   CUR_ADR   
24C2                          ;*Macro unroll:  STRUC_POP
24C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24C2                STRUC_TOP:   .SET   STRUC_2   
24C2                STRUC_2:   .SET   STRUC_3   
24C2                STRUC_3:   .SET   STRUC_4   
24C2                STRUC_4:   .SET   STRUC_5   
24C2                STRUC_5:   .SET   STRUC_6   
24C2                STRUC_6:   .SET   STRUC_7   
24C2                STRUC_7:   .SET   STRUC_8   
24C2                STRUC_8:   .SET   STRUC_9   
24C2                STRUC_9:   .SET   STRUC_10   
24C2                STRUC_10:   .SET   STRUC_11   
24C2                STRUC_11:   .SET   STRUC_12   
24C2                STRUC_12:   .SET   0   
24C2                TF_DONEM_2404S64:      
24C2                          ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
24C2   2A 45 30               LD   HL,(lineBufStart)   
24C5   22 4B 30               LD   (lineBufTop),HL   
24C8   22 49 30               LD   (currkey),HL   
24CB   21 D4 24               LD   HL,tst_textM_2405S66   
24CE   22 61 32               LD   (char_pointer),HL   
24D1                          ;*Macro unroll:  _skip
24D1   C3 D1 24               JP   $   
24D4                          ;*Macro unroll:  STRUC_PUSH $
24D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24D4                STRUC_12:   .SET   STRUC_11   
24D4                STRUC_11:   .SET   STRUC_10   
24D4                STRUC_10:   .SET   STRUC_9   
24D4                STRUC_9:   .SET   STRUC_8   
24D4                STRUC_8:   .SET   STRUC_7   
24D4                STRUC_7:   .SET   STRUC_6   
24D4                STRUC_6:   .SET   STRUC_5   
24D4                STRUC_5:   .SET   STRUC_4   
24D4                STRUC_4:   .SET   STRUC_3   
24D4                STRUC_3:   .SET   STRUC_2   
24D4                STRUC_2:   .SET   STRUC_TOP   
24D4                STRUC_TOP:   .SET   $   
24D4                TST_TEXTM_2405S66:      
24D4   3A 20 64 62 6C 20 64 75 70 20 2B 20 3B 0D 0A FF 0D 0A DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
24E6                          ;*Macro unroll:  _endskip
24E6                          ;*Macro unroll:  STRUC_FWD
24E6                CUR_ADR:   .SET   $   
24D2                          .ORG   STRUC_TOP - 2   
24D2   E6 24                  DW   CUR_ADR   
24E6                          .ORG   CUR_ADR   
24E6                          ;*Macro unroll:  STRUC_POP
24E6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24E6                STRUC_TOP:   .SET   STRUC_2   
24E6                STRUC_2:   .SET   STRUC_3   
24E6                STRUC_3:   .SET   STRUC_4   
24E6                STRUC_4:   .SET   STRUC_5   
24E6                STRUC_5:   .SET   STRUC_6   
24E6                STRUC_6:   .SET   STRUC_7   
24E6                STRUC_7:   .SET   STRUC_8   
24E6                STRUC_8:   .SET   STRUC_9   
24E6                STRUC_9:   .SET   STRUC_10   
24E6                STRUC_10:   .SET   STRUC_11   
24E6                STRUC_11:   .SET   STRUC_12   
24E6                STRUC_12:   .SET   0   
24E6                          ;*Macro unroll: INTERPRET
24E6   CF                     RST   $08   
24E7   E9 0B                  DW   interpret   
24E9   21 0F                  DW   exit_forth   
24EB                          ;*Macro unroll: ppushValue 2
24EB                          ;*Macro unroll:  ppush0 B,C
24EB   DD 71 00               LD   (IX+0),C   
24EE   DD 23                  INC   IX   
24F0   DD 70 00               LD   (IX+0),B   
24F3   DD 23                  INC   IX   
24F5   01 02 00               LD   BC,2   
24F8                          ;*Macro unroll: TEST_SET_TEXT "dbl"
24F8   2A 45 30               LD   HL,(lineBufStart)   
24FB   22 4B 30               LD   (lineBufTop),HL   
24FE   22 49 30               LD   (currkey),HL   
2501   21 0A 25               LD   HL,tst_textM_2408S69   
2504   22 61 32               LD   (char_pointer),HL   
2507                          ;*Macro unroll:  _skip
2507   C3 07 25               JP   $   
250A                          ;*Macro unroll:  STRUC_PUSH $
250A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
250A                STRUC_12:   .SET   STRUC_11   
250A                STRUC_11:   .SET   STRUC_10   
250A                STRUC_10:   .SET   STRUC_9   
250A                STRUC_9:   .SET   STRUC_8   
250A                STRUC_8:   .SET   STRUC_7   
250A                STRUC_7:   .SET   STRUC_6   
250A                STRUC_6:   .SET   STRUC_5   
250A                STRUC_5:   .SET   STRUC_4   
250A                STRUC_4:   .SET   STRUC_3   
250A                STRUC_3:   .SET   STRUC_2   
250A                STRUC_2:   .SET   STRUC_TOP   
250A                STRUC_TOP:   .SET   $   
250A                TST_TEXTM_2408S69:      
250A   64 62 6C 0D 0A FF 0D 0A DB   "dbl","\r\n",-1,"\r\n"   
2512                          ;*Macro unroll:  _endskip
2512                          ;*Macro unroll:  STRUC_FWD
2512                CUR_ADR:   .SET   $   
2508                          .ORG   STRUC_TOP - 2   
2508   12 25                  DW   CUR_ADR   
2512                          .ORG   CUR_ADR   
2512                          ;*Macro unroll:  STRUC_POP
2512                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2512                STRUC_TOP:   .SET   STRUC_2   
2512                STRUC_2:   .SET   STRUC_3   
2512                STRUC_3:   .SET   STRUC_4   
2512                STRUC_4:   .SET   STRUC_5   
2512                STRUC_5:   .SET   STRUC_6   
2512                STRUC_6:   .SET   STRUC_7   
2512                STRUC_7:   .SET   STRUC_8   
2512                STRUC_8:   .SET   STRUC_9   
2512                STRUC_9:   .SET   STRUC_10   
2512                STRUC_10:   .SET   STRUC_11   
2512                STRUC_11:   .SET   STRUC_12   
2512                STRUC_12:   .SET   0   
2512                          ;*Macro unroll: INTERPRET
2512   CF                     RST   $08   
2513   E9 0B                  DW   interpret   
2515   21 0F                  DW   exit_forth   
2517                          ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
2517   CD 38 0A               CALL   printNum   
251A                          ;*Macro unroll:  loadWord H,L, B,C
251A   69                     LD   L,C   
251B   60                     LD   H,B   
251C   69                     LD   L,C   
251D                          ;*Macro unroll:  ppop0 B,C
251D   DD 2B                  DEC   IX   
251F   DD 46 00               LD   B,(IX+0)   
2522   DD 2B                  DEC   IX   
2524   DD 4E 00               LD   C,(IX+0)   
2527                          ;*Macro unroll:  CMP16 4
2527   11 04 00               LD   DE,4   
252A   B7                     OR   A   
252B   ED 52                  SBC   HL,DE   
252D                          ;*Macro unroll:  checkZeroWord H,L
252D   7D                     LD   A,L   
252E   B4                     OR   H   
252F   CA 52 25               JP   z,tf_doneM_2410S71   
2532   11 83 10               LD   DE,FAILED   
2535   CD EB 11               CALL   printPStr   
2538   11 42 25               LD   DE,te_failM_2410S71   
253B   CD EB 11               CALL   printPStr   
253E   76                     HALT      
253F                          ;*Macro unroll:  _skip
253F   C3 3F 25               JP   $   
2542                          ;*Macro unroll:  STRUC_PUSH $
2542                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2542                STRUC_12:   .SET   STRUC_11   
2542                STRUC_11:   .SET   STRUC_10   
2542                STRUC_10:   .SET   STRUC_9   
2542                STRUC_9:   .SET   STRUC_8   
2542                STRUC_8:   .SET   STRUC_7   
2542                STRUC_7:   .SET   STRUC_6   
2542                STRUC_6:   .SET   STRUC_5   
2542                STRUC_5:   .SET   STRUC_4   
2542                STRUC_4:   .SET   STRUC_3   
2542                STRUC_3:   .SET   STRUC_2   
2542                STRUC_2:   .SET   STRUC_TOP   
2542                STRUC_TOP:   .SET   $   
2542                TE_FAILM_2410S71:      
2542   0F 63 6F 6C 6F 6E 20 64 62 6C 20 32 20 3D 20 34 .PSTR   "colon dbl 2 = 4"   
2552                          ;*Macro unroll:  _endskip
2552                          ;*Macro unroll:  STRUC_FWD
2552                CUR_ADR:   .SET   $   
2540                          .ORG   STRUC_TOP - 2   
2540   52 25                  DW   CUR_ADR   
2552                          .ORG   CUR_ADR   
2552                          ;*Macro unroll:  STRUC_POP
2552                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2552                STRUC_TOP:   .SET   STRUC_2   
2552                STRUC_2:   .SET   STRUC_3   
2552                STRUC_3:   .SET   STRUC_4   
2552                STRUC_4:   .SET   STRUC_5   
2552                STRUC_5:   .SET   STRUC_6   
2552                STRUC_6:   .SET   STRUC_7   
2552                STRUC_7:   .SET   STRUC_8   
2552                STRUC_8:   .SET   STRUC_9   
2552                STRUC_9:   .SET   STRUC_10   
2552                STRUC_10:   .SET   STRUC_11   
2552                STRUC_11:   .SET   STRUC_12   
2552                STRUC_12:   .SET   0   
2552                TF_DONEM_2410S71:      
2552                          ;*Macro unroll: ppushValue 200
2552                          ;*Macro unroll:  ppush0 B,C
2552   DD 71 00               LD   (IX+0),C   
2555   DD 23                  INC   IX   
2557   DD 70 00               LD   (IX+0),B   
255A   DD 23                  INC   IX   
255C   01 C8 00               LD   BC,200   
255F                          ;*Macro unroll: ppushValue 1
255F                          ;*Macro unroll:  ppush0 B,C
255F   DD 71 00               LD   (IX+0),C   
2562   DD 23                  INC   IX   
2564   DD 70 00               LD   (IX+0),B   
2567   DD 23                  INC   IX   
2569   01 01 00               LD   BC,1   
256C                          ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
256C   2A 45 30               LD   HL,(lineBufStart)   
256F   22 4B 30               LD   (lineBufTop),HL   
2572   22 49 30               LD   (currkey),HL   
2575   21 7E 25               LD   HL,tst_textM_2413S75   
2578   22 61 32               LD   (char_pointer),HL   
257B                          ;*Macro unroll:  _skip
257B   C3 7B 25               JP   $   
257E                          ;*Macro unroll:  STRUC_PUSH $
257E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
257E                STRUC_12:   .SET   STRUC_11   
257E                STRUC_11:   .SET   STRUC_10   
257E                STRUC_10:   .SET   STRUC_9   
257E                STRUC_9:   .SET   STRUC_8   
257E                STRUC_8:   .SET   STRUC_7   
257E                STRUC_7:   .SET   STRUC_6   
257E                STRUC_6:   .SET   STRUC_5   
257E                STRUC_5:   .SET   STRUC_4   
257E                STRUC_4:   .SET   STRUC_3   
257E                STRUC_3:   .SET   STRUC_2   
257E                STRUC_2:   .SET   STRUC_TOP   
257E                STRUC_TOP:   .SET   $   
257E                TST_TEXTM_2413S75:      
257E   3A 20 74 65 73 74 69 66 32 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
259B                          ;*Macro unroll:  _endskip
259B                          ;*Macro unroll:  STRUC_FWD
259B                CUR_ADR:   .SET   $   
257C                          .ORG   STRUC_TOP - 2   
257C   9B 25                  DW   CUR_ADR   
259B                          .ORG   CUR_ADR   
259B                          ;*Macro unroll:  STRUC_POP
259B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
259B                STRUC_TOP:   .SET   STRUC_2   
259B                STRUC_2:   .SET   STRUC_3   
259B                STRUC_3:   .SET   STRUC_4   
259B                STRUC_4:   .SET   STRUC_5   
259B                STRUC_5:   .SET   STRUC_6   
259B                STRUC_6:   .SET   STRUC_7   
259B                STRUC_7:   .SET   STRUC_8   
259B                STRUC_8:   .SET   STRUC_9   
259B                STRUC_9:   .SET   STRUC_10   
259B                STRUC_10:   .SET   STRUC_11   
259B                STRUC_11:   .SET   STRUC_12   
259B                STRUC_12:   .SET   0   
259B                          ;*Macro unroll: INTERPRET
259B   CF                     RST   $08   
259C   E9 0B                  DW   interpret   
259E   21 0F                  DW   exit_forth   
25A0                          ;*Macro unroll: TEST_SET_TEXT "testif2"
25A0   2A 45 30               LD   HL,(lineBufStart)   
25A3   22 4B 30               LD   (lineBufTop),HL   
25A6   22 49 30               LD   (currkey),HL   
25A9   21 B2 25               LD   HL,tst_textM_2415S78   
25AC   22 61 32               LD   (char_pointer),HL   
25AF                          ;*Macro unroll:  _skip
25AF   C3 AF 25               JP   $   
25B2                          ;*Macro unroll:  STRUC_PUSH $
25B2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25B2                STRUC_12:   .SET   STRUC_11   
25B2                STRUC_11:   .SET   STRUC_10   
25B2                STRUC_10:   .SET   STRUC_9   
25B2                STRUC_9:   .SET   STRUC_8   
25B2                STRUC_8:   .SET   STRUC_7   
25B2                STRUC_7:   .SET   STRUC_6   
25B2                STRUC_6:   .SET   STRUC_5   
25B2                STRUC_5:   .SET   STRUC_4   
25B2                STRUC_4:   .SET   STRUC_3   
25B2                STRUC_3:   .SET   STRUC_2   
25B2                STRUC_2:   .SET   STRUC_TOP   
25B2                STRUC_TOP:   .SET   $   
25B2                TST_TEXTM_2415S78:      
25B2   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
25BE                          ;*Macro unroll:  _endskip
25BE                          ;*Macro unroll:  STRUC_FWD
25BE                CUR_ADR:   .SET   $   
25B0                          .ORG   STRUC_TOP - 2   
25B0   BE 25                  DW   CUR_ADR   
25BE                          .ORG   CUR_ADR   
25BE                          ;*Macro unroll:  STRUC_POP
25BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
25BE                STRUC_TOP:   .SET   STRUC_2   
25BE                STRUC_2:   .SET   STRUC_3   
25BE                STRUC_3:   .SET   STRUC_4   
25BE                STRUC_4:   .SET   STRUC_5   
25BE                STRUC_5:   .SET   STRUC_6   
25BE                STRUC_6:   .SET   STRUC_7   
25BE                STRUC_7:   .SET   STRUC_8   
25BE                STRUC_8:   .SET   STRUC_9   
25BE                STRUC_9:   .SET   STRUC_10   
25BE                STRUC_10:   .SET   STRUC_11   
25BE                STRUC_11:   .SET   STRUC_12   
25BE                STRUC_12:   .SET   0   
25BE                          ;*Macro unroll: INTERPRET
25BE   CF                     RST   $08   
25BF   E9 0B                  DW   interpret   
25C1   21 0F                  DW   exit_forth   
25C3                          ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
25C3   CD 38 0A               CALL   printNum   
25C6                          ;*Macro unroll:  loadWord H,L, B,C
25C6   69                     LD   L,C   
25C7   60                     LD   H,B   
25C8   69                     LD   L,C   
25C9                          ;*Macro unroll:  ppop0 B,C
25C9   DD 2B                  DEC   IX   
25CB   DD 46 00               LD   B,(IX+0)   
25CE   DD 2B                  DEC   IX   
25D0   DD 4E 00               LD   C,(IX+0)   
25D3                          ;*Macro unroll:  CMP16 100
25D3   11 64 00               LD   DE,100   
25D6   B7                     OR   A   
25D7   ED 52                  SBC   HL,DE   
25D9                          ;*Macro unroll:  checkZeroWord H,L
25D9   7D                     LD   A,L   
25DA   B4                     OR   H   
25DB   CA 05 26               JP   z,tf_doneM_2417S80   
25DE   11 83 10               LD   DE,FAILED   
25E1   CD EB 11               CALL   printPStr   
25E4   11 EE 25               LD   DE,te_failM_2417S80   
25E7   CD EB 11               CALL   printPStr   
25EA   76                     HALT      
25EB                          ;*Macro unroll:  _skip
25EB   C3 EB 25               JP   $   
25EE                          ;*Macro unroll:  STRUC_PUSH $
25EE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25EE                STRUC_12:   .SET   STRUC_11   
25EE                STRUC_11:   .SET   STRUC_10   
25EE                STRUC_10:   .SET   STRUC_9   
25EE                STRUC_9:   .SET   STRUC_8   
25EE                STRUC_8:   .SET   STRUC_7   
25EE                STRUC_7:   .SET   STRUC_6   
25EE                STRUC_6:   .SET   STRUC_5   
25EE                STRUC_5:   .SET   STRUC_4   
25EE                STRUC_4:   .SET   STRUC_3   
25EE                STRUC_3:   .SET   STRUC_2   
25EE                STRUC_2:   .SET   STRUC_TOP   
25EE                STRUC_TOP:   .SET   $   
25EE                TE_FAILM_2417S80:      
25EE   16 31 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 31 30 30 .PSTR   "1 if 100 endif --> 100"   
2605                          ;*Macro unroll:  _endskip
2605                          ;*Macro unroll:  STRUC_FWD
2605                CUR_ADR:   .SET   $   
25EC                          .ORG   STRUC_TOP - 2   
25EC   05 26                  DW   CUR_ADR   
2605                          .ORG   CUR_ADR   
2605                          ;*Macro unroll:  STRUC_POP
2605                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2605                STRUC_TOP:   .SET   STRUC_2   
2605                STRUC_2:   .SET   STRUC_3   
2605                STRUC_3:   .SET   STRUC_4   
2605                STRUC_4:   .SET   STRUC_5   
2605                STRUC_5:   .SET   STRUC_6   
2605                STRUC_6:   .SET   STRUC_7   
2605                STRUC_7:   .SET   STRUC_8   
2605                STRUC_8:   .SET   STRUC_9   
2605                STRUC_9:   .SET   STRUC_10   
2605                STRUC_10:   .SET   STRUC_11   
2605                STRUC_11:   .SET   STRUC_12   
2605                STRUC_12:   .SET   0   
2605                TF_DONEM_2417S80:      
2605                          ;*Macro unroll: ppushValue 0
2605                          ;*Macro unroll:  ppush0 B,C
2605   DD 71 00               LD   (IX+0),C   
2608   DD 23                  INC   IX   
260A   DD 70 00               LD   (IX+0),B   
260D   DD 23                  INC   IX   
260F   01 00 00               LD   BC,0   
2612                          ;*Macro unroll: TEST_SET_TEXT "testif2"
2612   2A 45 30               LD   HL,(lineBufStart)   
2615   22 4B 30               LD   (lineBufTop),HL   
2618   22 49 30               LD   (currkey),HL   
261B   21 24 26               LD   HL,tst_textM_2419S83   
261E   22 61 32               LD   (char_pointer),HL   
2621                          ;*Macro unroll:  _skip
2621   C3 21 26               JP   $   
2624                          ;*Macro unroll:  STRUC_PUSH $
2624                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2624                STRUC_12:   .SET   STRUC_11   
2624                STRUC_11:   .SET   STRUC_10   
2624                STRUC_10:   .SET   STRUC_9   
2624                STRUC_9:   .SET   STRUC_8   
2624                STRUC_8:   .SET   STRUC_7   
2624                STRUC_7:   .SET   STRUC_6   
2624                STRUC_6:   .SET   STRUC_5   
2624                STRUC_5:   .SET   STRUC_4   
2624                STRUC_4:   .SET   STRUC_3   
2624                STRUC_3:   .SET   STRUC_2   
2624                STRUC_2:   .SET   STRUC_TOP   
2624                STRUC_TOP:   .SET   $   
2624                TST_TEXTM_2419S83:      
2624   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
2630                          ;*Macro unroll:  _endskip
2630                          ;*Macro unroll:  STRUC_FWD
2630                CUR_ADR:   .SET   $   
2622                          .ORG   STRUC_TOP - 2   
2622   30 26                  DW   CUR_ADR   
2630                          .ORG   CUR_ADR   
2630                          ;*Macro unroll:  STRUC_POP
2630                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2630                STRUC_TOP:   .SET   STRUC_2   
2630                STRUC_2:   .SET   STRUC_3   
2630                STRUC_3:   .SET   STRUC_4   
2630                STRUC_4:   .SET   STRUC_5   
2630                STRUC_5:   .SET   STRUC_6   
2630                STRUC_6:   .SET   STRUC_7   
2630                STRUC_7:   .SET   STRUC_8   
2630                STRUC_8:   .SET   STRUC_9   
2630                STRUC_9:   .SET   STRUC_10   
2630                STRUC_10:   .SET   STRUC_11   
2630                STRUC_11:   .SET   STRUC_12   
2630                STRUC_12:   .SET   0   
2630                          ;*Macro unroll: INTERPRET
2630   CF                     RST   $08   
2631   E9 0B                  DW   interpret   
2633   21 0F                  DW   exit_forth   
2635                          ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
2635   CD 38 0A               CALL   printNum   
2638                          ;*Macro unroll:  loadWord H,L, B,C
2638   69                     LD   L,C   
2639   60                     LD   H,B   
263A   69                     LD   L,C   
263B                          ;*Macro unroll:  ppop0 B,C
263B   DD 2B                  DEC   IX   
263D   DD 46 00               LD   B,(IX+0)   
2640   DD 2B                  DEC   IX   
2642   DD 4E 00               LD   C,(IX+0)   
2645                          ;*Macro unroll:  CMP16 200
2645   11 C8 00               LD   DE,200   
2648   B7                     OR   A   
2649   ED 52                  SBC   HL,DE   
264B                          ;*Macro unroll:  checkZeroWord H,L
264B   7D                     LD   A,L   
264C   B4                     OR   H   
264D   CA 77 26               JP   z,tf_doneM_2421S85   
2650   11 83 10               LD   DE,FAILED   
2653   CD EB 11               CALL   printPStr   
2656   11 60 26               LD   DE,te_failM_2421S85   
2659   CD EB 11               CALL   printPStr   
265C   76                     HALT      
265D                          ;*Macro unroll:  _skip
265D   C3 5D 26               JP   $   
2660                          ;*Macro unroll:  STRUC_PUSH $
2660                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2660                STRUC_12:   .SET   STRUC_11   
2660                STRUC_11:   .SET   STRUC_10   
2660                STRUC_10:   .SET   STRUC_9   
2660                STRUC_9:   .SET   STRUC_8   
2660                STRUC_8:   .SET   STRUC_7   
2660                STRUC_7:   .SET   STRUC_6   
2660                STRUC_6:   .SET   STRUC_5   
2660                STRUC_5:   .SET   STRUC_4   
2660                STRUC_4:   .SET   STRUC_3   
2660                STRUC_3:   .SET   STRUC_2   
2660                STRUC_2:   .SET   STRUC_TOP   
2660                STRUC_TOP:   .SET   $   
2660                TE_FAILM_2421S85:      
2660   16 30 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 32 30 30 .PSTR   "0 if 100 endif --> 200"   
2677                          ;*Macro unroll:  _endskip
2677                          ;*Macro unroll:  STRUC_FWD
2677                CUR_ADR:   .SET   $   
265E                          .ORG   STRUC_TOP - 2   
265E   77 26                  DW   CUR_ADR   
2677                          .ORG   CUR_ADR   
2677                          ;*Macro unroll:  STRUC_POP
2677                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2677                STRUC_TOP:   .SET   STRUC_2   
2677                STRUC_2:   .SET   STRUC_3   
2677                STRUC_3:   .SET   STRUC_4   
2677                STRUC_4:   .SET   STRUC_5   
2677                STRUC_5:   .SET   STRUC_6   
2677                STRUC_6:   .SET   STRUC_7   
2677                STRUC_7:   .SET   STRUC_8   
2677                STRUC_8:   .SET   STRUC_9   
2677                STRUC_9:   .SET   STRUC_10   
2677                STRUC_10:   .SET   STRUC_11   
2677                STRUC_11:   .SET   STRUC_12   
2677                STRUC_12:   .SET   0   
2677                TF_DONEM_2421S85:      
2677                          ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
2677   2A 45 30               LD   HL,(lineBufStart)   
267A   22 4B 30               LD   (lineBufTop),HL   
267D   22 49 30               LD   (currkey),HL   
2680   21 89 26               LD   HL,tst_textM_2422S87   
2683   22 61 32               LD   (char_pointer),HL   
2686                          ;*Macro unroll:  _skip
2686   C3 86 26               JP   $   
2689                          ;*Macro unroll:  STRUC_PUSH $
2689                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2689                STRUC_12:   .SET   STRUC_11   
2689                STRUC_11:   .SET   STRUC_10   
2689                STRUC_10:   .SET   STRUC_9   
2689                STRUC_9:   .SET   STRUC_8   
2689                STRUC_8:   .SET   STRUC_7   
2689                STRUC_7:   .SET   STRUC_6   
2689                STRUC_6:   .SET   STRUC_5   
2689                STRUC_5:   .SET   STRUC_4   
2689                STRUC_4:   .SET   STRUC_3   
2689                STRUC_3:   .SET   STRUC_2   
2689                STRUC_2:   .SET   STRUC_TOP   
2689                STRUC_TOP:   .SET   $   
2689                TST_TEXTM_2422S87:      
2689   3A 20 74 65 73 74 69 66 33 20 69 66 20 31 30 30 20 65 6C 73 65 20 32 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
26AF                          ;*Macro unroll:  _endskip
26AF                          ;*Macro unroll:  STRUC_FWD
26AF                CUR_ADR:   .SET   $   
2687                          .ORG   STRUC_TOP - 2   
2687   AF 26                  DW   CUR_ADR   
26AF                          .ORG   CUR_ADR   
26AF                          ;*Macro unroll:  STRUC_POP
26AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26AF                STRUC_TOP:   .SET   STRUC_2   
26AF                STRUC_2:   .SET   STRUC_3   
26AF                STRUC_3:   .SET   STRUC_4   
26AF                STRUC_4:   .SET   STRUC_5   
26AF                STRUC_5:   .SET   STRUC_6   
26AF                STRUC_6:   .SET   STRUC_7   
26AF                STRUC_7:   .SET   STRUC_8   
26AF                STRUC_8:   .SET   STRUC_9   
26AF                STRUC_9:   .SET   STRUC_10   
26AF                STRUC_10:   .SET   STRUC_11   
26AF                STRUC_11:   .SET   STRUC_12   
26AF                STRUC_12:   .SET   0   
26AF                          ;*Macro unroll: INTERPRET
26AF   CF                     RST   $08   
26B0   E9 0B                  DW   interpret   
26B2   21 0F                  DW   exit_forth   
26B4                          ;*Macro unroll: ppushValue 0
26B4                          ;*Macro unroll:  ppush0 B,C
26B4   DD 71 00               LD   (IX+0),C   
26B7   DD 23                  INC   IX   
26B9   DD 70 00               LD   (IX+0),B   
26BC   DD 23                  INC   IX   
26BE   01 00 00               LD   BC,0   
26C1                          ;*Macro unroll: TEST_SET_TEXT "testif3"
26C1   2A 45 30               LD   HL,(lineBufStart)   
26C4   22 4B 30               LD   (lineBufTop),HL   
26C7   22 49 30               LD   (currkey),HL   
26CA   21 D3 26               LD   HL,tst_textM_2425S92   
26CD   22 61 32               LD   (char_pointer),HL   
26D0                          ;*Macro unroll:  _skip
26D0   C3 D0 26               JP   $   
26D3                          ;*Macro unroll:  STRUC_PUSH $
26D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
26D3                STRUC_12:   .SET   STRUC_11   
26D3                STRUC_11:   .SET   STRUC_10   
26D3                STRUC_10:   .SET   STRUC_9   
26D3                STRUC_9:   .SET   STRUC_8   
26D3                STRUC_8:   .SET   STRUC_7   
26D3                STRUC_7:   .SET   STRUC_6   
26D3                STRUC_6:   .SET   STRUC_5   
26D3                STRUC_5:   .SET   STRUC_4   
26D3                STRUC_4:   .SET   STRUC_3   
26D3                STRUC_3:   .SET   STRUC_2   
26D3                STRUC_2:   .SET   STRUC_TOP   
26D3                STRUC_TOP:   .SET   $   
26D3                TST_TEXTM_2425S92:      
26D3   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
26DF                          ;*Macro unroll:  _endskip
26DF                          ;*Macro unroll:  STRUC_FWD
26DF                CUR_ADR:   .SET   $   
26D1                          .ORG   STRUC_TOP - 2   
26D1   DF 26                  DW   CUR_ADR   
26DF                          .ORG   CUR_ADR   
26DF                          ;*Macro unroll:  STRUC_POP
26DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26DF                STRUC_TOP:   .SET   STRUC_2   
26DF                STRUC_2:   .SET   STRUC_3   
26DF                STRUC_3:   .SET   STRUC_4   
26DF                STRUC_4:   .SET   STRUC_5   
26DF                STRUC_5:   .SET   STRUC_6   
26DF                STRUC_6:   .SET   STRUC_7   
26DF                STRUC_7:   .SET   STRUC_8   
26DF                STRUC_8:   .SET   STRUC_9   
26DF                STRUC_9:   .SET   STRUC_10   
26DF                STRUC_10:   .SET   STRUC_11   
26DF                STRUC_11:   .SET   STRUC_12   
26DF                STRUC_12:   .SET   0   
26DF                          ;*Macro unroll: INTERPRET
26DF   CF                     RST   $08   
26E0   E9 0B                  DW   interpret   
26E2   21 0F                  DW   exit_forth   
26E4                          ;*Macro unroll: EXPECT 200, "0 --> 200"
26E4   CD 38 0A               CALL   printNum   
26E7                          ;*Macro unroll:  loadWord H,L, B,C
26E7   69                     LD   L,C   
26E8   60                     LD   H,B   
26E9   69                     LD   L,C   
26EA                          ;*Macro unroll:  ppop0 B,C
26EA   DD 2B                  DEC   IX   
26EC   DD 46 00               LD   B,(IX+0)   
26EF   DD 2B                  DEC   IX   
26F1   DD 4E 00               LD   C,(IX+0)   
26F4                          ;*Macro unroll:  CMP16 200
26F4   11 C8 00               LD   DE,200   
26F7   B7                     OR   A   
26F8   ED 52                  SBC   HL,DE   
26FA                          ;*Macro unroll:  checkZeroWord H,L
26FA   7D                     LD   A,L   
26FB   B4                     OR   H   
26FC   CA 19 27               JP   z,tf_doneM_2427S94   
26FF   11 83 10               LD   DE,FAILED   
2702   CD EB 11               CALL   printPStr   
2705   11 0F 27               LD   DE,te_failM_2427S94   
2708   CD EB 11               CALL   printPStr   
270B   76                     HALT      
270C                          ;*Macro unroll:  _skip
270C   C3 0C 27               JP   $   
270F                          ;*Macro unroll:  STRUC_PUSH $
270F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
270F                STRUC_12:   .SET   STRUC_11   
270F                STRUC_11:   .SET   STRUC_10   
270F                STRUC_10:   .SET   STRUC_9   
270F                STRUC_9:   .SET   STRUC_8   
270F                STRUC_8:   .SET   STRUC_7   
270F                STRUC_7:   .SET   STRUC_6   
270F                STRUC_6:   .SET   STRUC_5   
270F                STRUC_5:   .SET   STRUC_4   
270F                STRUC_4:   .SET   STRUC_3   
270F                STRUC_3:   .SET   STRUC_2   
270F                STRUC_2:   .SET   STRUC_TOP   
270F                STRUC_TOP:   .SET   $   
270F                TE_FAILM_2427S94:      
270F   09 30 20 2D 2D 3E 20 32 30 30 .PSTR   "0 --> 200"   
2719                          ;*Macro unroll:  _endskip
2719                          ;*Macro unroll:  STRUC_FWD
2719                CUR_ADR:   .SET   $   
270D                          .ORG   STRUC_TOP - 2   
270D   19 27                  DW   CUR_ADR   
2719                          .ORG   CUR_ADR   
2719                          ;*Macro unroll:  STRUC_POP
2719                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2719                STRUC_TOP:   .SET   STRUC_2   
2719                STRUC_2:   .SET   STRUC_3   
2719                STRUC_3:   .SET   STRUC_4   
2719                STRUC_4:   .SET   STRUC_5   
2719                STRUC_5:   .SET   STRUC_6   
2719                STRUC_6:   .SET   STRUC_7   
2719                STRUC_7:   .SET   STRUC_8   
2719                STRUC_8:   .SET   STRUC_9   
2719                STRUC_9:   .SET   STRUC_10   
2719                STRUC_10:   .SET   STRUC_11   
2719                STRUC_11:   .SET   STRUC_12   
2719                STRUC_12:   .SET   0   
2719                TF_DONEM_2427S94:      
2719                          ;*Macro unroll: ppushValue 1
2719                          ;*Macro unroll:  ppush0 B,C
2719   DD 71 00               LD   (IX+0),C   
271C   DD 23                  INC   IX   
271E   DD 70 00               LD   (IX+0),B   
2721   DD 23                  INC   IX   
2723   01 01 00               LD   BC,1   
2726                          ;*Macro unroll: TEST_SET_TEXT "testif3"
2726   2A 45 30               LD   HL,(lineBufStart)   
2729   22 4B 30               LD   (lineBufTop),HL   
272C   22 49 30               LD   (currkey),HL   
272F   21 38 27               LD   HL,tst_textM_2429S98   
2732   22 61 32               LD   (char_pointer),HL   
2735                          ;*Macro unroll:  _skip
2735   C3 35 27               JP   $   
2738                          ;*Macro unroll:  STRUC_PUSH $
2738                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2738                STRUC_12:   .SET   STRUC_11   
2738                STRUC_11:   .SET   STRUC_10   
2738                STRUC_10:   .SET   STRUC_9   
2738                STRUC_9:   .SET   STRUC_8   
2738                STRUC_8:   .SET   STRUC_7   
2738                STRUC_7:   .SET   STRUC_6   
2738                STRUC_6:   .SET   STRUC_5   
2738                STRUC_5:   .SET   STRUC_4   
2738                STRUC_4:   .SET   STRUC_3   
2738                STRUC_3:   .SET   STRUC_2   
2738                STRUC_2:   .SET   STRUC_TOP   
2738                STRUC_TOP:   .SET   $   
2738                TST_TEXTM_2429S98:      
2738   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
2744                          ;*Macro unroll:  _endskip
2744                          ;*Macro unroll:  STRUC_FWD
2744                CUR_ADR:   .SET   $   
2736                          .ORG   STRUC_TOP - 2   
2736   44 27                  DW   CUR_ADR   
2744                          .ORG   CUR_ADR   
2744                          ;*Macro unroll:  STRUC_POP
2744                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2744                STRUC_TOP:   .SET   STRUC_2   
2744                STRUC_2:   .SET   STRUC_3   
2744                STRUC_3:   .SET   STRUC_4   
2744                STRUC_4:   .SET   STRUC_5   
2744                STRUC_5:   .SET   STRUC_6   
2744                STRUC_6:   .SET   STRUC_7   
2744                STRUC_7:   .SET   STRUC_8   
2744                STRUC_8:   .SET   STRUC_9   
2744                STRUC_9:   .SET   STRUC_10   
2744                STRUC_10:   .SET   STRUC_11   
2744                STRUC_11:   .SET   STRUC_12   
2744                STRUC_12:   .SET   0   
2744                          ;*Macro unroll: INTERPRET
2744   CF                     RST   $08   
2745   E9 0B                  DW   interpret   
2747   21 0F                  DW   exit_forth   
2749                          ;*Macro unroll: EXPECT 100, "1 --> 100"
2749   CD 38 0A               CALL   printNum   
274C                          ;*Macro unroll:  loadWord H,L, B,C
274C   69                     LD   L,C   
274D   60                     LD   H,B   
274E   69                     LD   L,C   
274F                          ;*Macro unroll:  ppop0 B,C
274F   DD 2B                  DEC   IX   
2751   DD 46 00               LD   B,(IX+0)   
2754   DD 2B                  DEC   IX   
2756   DD 4E 00               LD   C,(IX+0)   
2759                          ;*Macro unroll:  CMP16 100
2759   11 64 00               LD   DE,100   
275C   B7                     OR   A   
275D   ED 52                  SBC   HL,DE   
275F                          ;*Macro unroll:  checkZeroWord H,L
275F   7D                     LD   A,L   
2760   B4                     OR   H   
2761   CA 7E 27               JP   z,tf_doneM_2431S100   
2764   11 83 10               LD   DE,FAILED   
2767   CD EB 11               CALL   printPStr   
276A   11 74 27               LD   DE,te_failM_2431S100   
276D   CD EB 11               CALL   printPStr   
2770   76                     HALT      
2771                          ;*Macro unroll:  _skip
2771   C3 71 27               JP   $   
2774                          ;*Macro unroll:  STRUC_PUSH $
2774                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2774                STRUC_12:   .SET   STRUC_11   
2774                STRUC_11:   .SET   STRUC_10   
2774                STRUC_10:   .SET   STRUC_9   
2774                STRUC_9:   .SET   STRUC_8   
2774                STRUC_8:   .SET   STRUC_7   
2774                STRUC_7:   .SET   STRUC_6   
2774                STRUC_6:   .SET   STRUC_5   
2774                STRUC_5:   .SET   STRUC_4   
2774                STRUC_4:   .SET   STRUC_3   
2774                STRUC_3:   .SET   STRUC_2   
2774                STRUC_2:   .SET   STRUC_TOP   
2774                STRUC_TOP:   .SET   $   
2774                TE_FAILM_2431S100:      
2774   09 31 20 2D 2D 3E 20 31 30 30 .PSTR   "1 --> 100"   
277E                          ;*Macro unroll:  _endskip
277E                          ;*Macro unroll:  STRUC_FWD
277E                CUR_ADR:   .SET   $   
2772                          .ORG   STRUC_TOP - 2   
2772   7E 27                  DW   CUR_ADR   
277E                          .ORG   CUR_ADR   
277E                          ;*Macro unroll:  STRUC_POP
277E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
277E                STRUC_TOP:   .SET   STRUC_2   
277E                STRUC_2:   .SET   STRUC_3   
277E                STRUC_3:   .SET   STRUC_4   
277E                STRUC_4:   .SET   STRUC_5   
277E                STRUC_5:   .SET   STRUC_6   
277E                STRUC_6:   .SET   STRUC_7   
277E                STRUC_7:   .SET   STRUC_8   
277E                STRUC_8:   .SET   STRUC_9   
277E                STRUC_9:   .SET   STRUC_10   
277E                STRUC_10:   .SET   STRUC_11   
277E                STRUC_11:   .SET   STRUC_12   
277E                STRUC_12:   .SET   0   
277E                TF_DONEM_2431S100:      
277E                          ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
277E   2A 45 30               LD   HL,(lineBufStart)   
2781   22 4B 30               LD   (lineBufTop),HL   
2784   22 49 30               LD   (currkey),HL   
2787   21 90 27               LD   HL,tst_textM_2432S102   
278A   22 61 32               LD   (char_pointer),HL   
278D                          ;*Macro unroll:  _skip
278D   C3 8D 27               JP   $   
2790                          ;*Macro unroll:  STRUC_PUSH $
2790                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2790                STRUC_12:   .SET   STRUC_11   
2790                STRUC_11:   .SET   STRUC_10   
2790                STRUC_10:   .SET   STRUC_9   
2790                STRUC_9:   .SET   STRUC_8   
2790                STRUC_8:   .SET   STRUC_7   
2790                STRUC_7:   .SET   STRUC_6   
2790                STRUC_6:   .SET   STRUC_5   
2790                STRUC_5:   .SET   STRUC_4   
2790                STRUC_4:   .SET   STRUC_3   
2790                STRUC_3:   .SET   STRUC_2   
2790                STRUC_2:   .SET   STRUC_TOP   
2790                STRUC_TOP:   .SET   $   
2790                TST_TEXTM_2432S102:      
2790   3A 20 74 65 73 74 6C 6F 6F 70 20 62 65 67 69 6E 20 64 75 70 20 35 20 3C 20 77 68 69 6C 65 20 64 75 70 20 2E 20 31 2B 20 72 65 70 65 61 74 20 3B 0D 0A FF 0D 0A DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
27C5                          ;*Macro unroll:  _endskip
27C5                          ;*Macro unroll:  STRUC_FWD
27C5                CUR_ADR:   .SET   $   
278E                          .ORG   STRUC_TOP - 2   
278E   C5 27                  DW   CUR_ADR   
27C5                          .ORG   CUR_ADR   
27C5                          ;*Macro unroll:  STRUC_POP
27C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27C5                STRUC_TOP:   .SET   STRUC_2   
27C5                STRUC_2:   .SET   STRUC_3   
27C5                STRUC_3:   .SET   STRUC_4   
27C5                STRUC_4:   .SET   STRUC_5   
27C5                STRUC_5:   .SET   STRUC_6   
27C5                STRUC_6:   .SET   STRUC_7   
27C5                STRUC_7:   .SET   STRUC_8   
27C5                STRUC_8:   .SET   STRUC_9   
27C5                STRUC_9:   .SET   STRUC_10   
27C5                STRUC_10:   .SET   STRUC_11   
27C5                STRUC_11:   .SET   STRUC_12   
27C5                STRUC_12:   .SET   0   
27C5                          ;*Macro unroll: INTERPRET
27C5   CF                     RST   $08   
27C6   E9 0B                  DW   interpret   
27C8   21 0F                  DW   exit_forth   
27CA                          ;*Macro unroll: ppushValue 0
27CA                          ;*Macro unroll:  ppush0 B,C
27CA   DD 71 00               LD   (IX+0),C   
27CD   DD 23                  INC   IX   
27CF   DD 70 00               LD   (IX+0),B   
27D2   DD 23                  INC   IX   
27D4   01 00 00               LD   BC,0   
27D7                          ;*Macro unroll: TEST_SET_TEXT "testloop"
27D7   2A 45 30               LD   HL,(lineBufStart)   
27DA   22 4B 30               LD   (lineBufTop),HL   
27DD   22 49 30               LD   (currkey),HL   
27E0   21 E9 27               LD   HL,tst_textM_2435S105   
27E3   22 61 32               LD   (char_pointer),HL   
27E6                          ;*Macro unroll:  _skip
27E6   C3 E6 27               JP   $   
27E9                          ;*Macro unroll:  STRUC_PUSH $
27E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
27E9                STRUC_12:   .SET   STRUC_11   
27E9                STRUC_11:   .SET   STRUC_10   
27E9                STRUC_10:   .SET   STRUC_9   
27E9                STRUC_9:   .SET   STRUC_8   
27E9                STRUC_8:   .SET   STRUC_7   
27E9                STRUC_7:   .SET   STRUC_6   
27E9                STRUC_6:   .SET   STRUC_5   
27E9                STRUC_5:   .SET   STRUC_4   
27E9                STRUC_4:   .SET   STRUC_3   
27E9                STRUC_3:   .SET   STRUC_2   
27E9                STRUC_2:   .SET   STRUC_TOP   
27E9                STRUC_TOP:   .SET   $   
27E9                TST_TEXTM_2435S105:      
27E9   74 65 73 74 6C 6F 6F 70 0D 0A FF 0D 0A DB   "testloop","\r\n",-1,"\r\n"   
27F6                          ;*Macro unroll:  _endskip
27F6                          ;*Macro unroll:  STRUC_FWD
27F6                CUR_ADR:   .SET   $   
27E7                          .ORG   STRUC_TOP - 2   
27E7   F6 27                  DW   CUR_ADR   
27F6                          .ORG   CUR_ADR   
27F6                          ;*Macro unroll:  STRUC_POP
27F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27F6                STRUC_TOP:   .SET   STRUC_2   
27F6                STRUC_2:   .SET   STRUC_3   
27F6                STRUC_3:   .SET   STRUC_4   
27F6                STRUC_4:   .SET   STRUC_5   
27F6                STRUC_5:   .SET   STRUC_6   
27F6                STRUC_6:   .SET   STRUC_7   
27F6                STRUC_7:   .SET   STRUC_8   
27F6                STRUC_8:   .SET   STRUC_9   
27F6                STRUC_9:   .SET   STRUC_10   
27F6                STRUC_10:   .SET   STRUC_11   
27F6                STRUC_11:   .SET   STRUC_12   
27F6                STRUC_12:   .SET   0   
27F6                          ;*Macro unroll: INTERPRET
27F6   CF                     RST   $08   
27F7   E9 0B                  DW   interpret   
27F9   21 0F                  DW   exit_forth   
27FB                          ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
27FB   CD 38 0A               CALL   printNum   
27FE                          ;*Macro unroll:  loadWord H,L, B,C
27FE   69                     LD   L,C   
27FF   60                     LD   H,B   
2800   69                     LD   L,C   
2801                          ;*Macro unroll:  ppop0 B,C
2801   DD 2B                  DEC   IX   
2803   DD 46 00               LD   B,(IX+0)   
2806   DD 2B                  DEC   IX   
2808   DD 4E 00               LD   C,(IX+0)   
280B                          ;*Macro unroll:  CMP16 5
280B   11 05 00               LD   DE,5   
280E   B7                     OR   A   
280F   ED 52                  SBC   HL,DE   
2811                          ;*Macro unroll:  checkZeroWord H,L
2811   7D                     LD   A,L   
2812   B4                     OR   H   
2813   CA 3B 28               JP   z,tf_doneM_2437S107   
2816   11 83 10               LD   DE,FAILED   
2819   CD EB 11               CALL   printPStr   
281C   11 26 28               LD   DE,te_failM_2437S107   
281F   CD EB 11               CALL   printPStr   
2822   76                     HALT      
2823                          ;*Macro unroll:  _skip
2823   C3 23 28               JP   $   
2826                          ;*Macro unroll:  STRUC_PUSH $
2826                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2826                STRUC_12:   .SET   STRUC_11   
2826                STRUC_11:   .SET   STRUC_10   
2826                STRUC_10:   .SET   STRUC_9   
2826                STRUC_9:   .SET   STRUC_8   
2826                STRUC_8:   .SET   STRUC_7   
2826                STRUC_7:   .SET   STRUC_6   
2826                STRUC_6:   .SET   STRUC_5   
2826                STRUC_5:   .SET   STRUC_4   
2826                STRUC_4:   .SET   STRUC_3   
2826                STRUC_3:   .SET   STRUC_2   
2826                STRUC_2:   .SET   STRUC_TOP   
2826                STRUC_TOP:   .SET   $   
2826                TE_FAILM_2437S107:      
2826   14 4C 6F 6F 70 20 75 6E 74 69 6C 20 6C 69 6D 69 74 20 3C 20 35 .PSTR   "Loop until limit < 5"   
283B                          ;*Macro unroll:  _endskip
283B                          ;*Macro unroll:  STRUC_FWD
283B                CUR_ADR:   .SET   $   
2824                          .ORG   STRUC_TOP - 2   
2824   3B 28                  DW   CUR_ADR   
283B                          .ORG   CUR_ADR   
283B                          ;*Macro unroll:  STRUC_POP
283B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
283B                STRUC_TOP:   .SET   STRUC_2   
283B                STRUC_2:   .SET   STRUC_3   
283B                STRUC_3:   .SET   STRUC_4   
283B                STRUC_4:   .SET   STRUC_5   
283B                STRUC_5:   .SET   STRUC_6   
283B                STRUC_6:   .SET   STRUC_7   
283B                STRUC_7:   .SET   STRUC_8   
283B                STRUC_8:   .SET   STRUC_9   
283B                STRUC_9:   .SET   STRUC_10   
283B                STRUC_10:   .SET   STRUC_11   
283B                STRUC_11:   .SET   STRUC_12   
283B                STRUC_12:   .SET   0   
283B                TF_DONEM_2437S107:      
283B                          ;*Macro unroll: TEST_SET_TEXT "100"
283B   2A 45 30               LD   HL,(lineBufStart)   
283E   22 4B 30               LD   (lineBufTop),HL   
2841   22 49 30               LD   (currkey),HL   
2844   21 4D 28               LD   HL,tst_textM_2438S110   
2847   22 61 32               LD   (char_pointer),HL   
284A                          ;*Macro unroll:  _skip
284A   C3 4A 28               JP   $   
284D                          ;*Macro unroll:  STRUC_PUSH $
284D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
284D                STRUC_12:   .SET   STRUC_11   
284D                STRUC_11:   .SET   STRUC_10   
284D                STRUC_10:   .SET   STRUC_9   
284D                STRUC_9:   .SET   STRUC_8   
284D                STRUC_8:   .SET   STRUC_7   
284D                STRUC_7:   .SET   STRUC_6   
284D                STRUC_6:   .SET   STRUC_5   
284D                STRUC_5:   .SET   STRUC_4   
284D                STRUC_4:   .SET   STRUC_3   
284D                STRUC_3:   .SET   STRUC_2   
284D                STRUC_2:   .SET   STRUC_TOP   
284D                STRUC_TOP:   .SET   $   
284D                TST_TEXTM_2438S110:      
284D   31 30 30 0D 0A FF 0D 0A DB   "100","\r\n",-1,"\r\n"   
2855                          ;*Macro unroll:  _endskip
2855                          ;*Macro unroll:  STRUC_FWD
2855                CUR_ADR:   .SET   $   
284B                          .ORG   STRUC_TOP - 2   
284B   55 28                  DW   CUR_ADR   
2855                          .ORG   CUR_ADR   
2855                          ;*Macro unroll:  STRUC_POP
2855                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2855                STRUC_TOP:   .SET   STRUC_2   
2855                STRUC_2:   .SET   STRUC_3   
2855                STRUC_3:   .SET   STRUC_4   
2855                STRUC_4:   .SET   STRUC_5   
2855                STRUC_5:   .SET   STRUC_6   
2855                STRUC_6:   .SET   STRUC_7   
2855                STRUC_7:   .SET   STRUC_8   
2855                STRUC_8:   .SET   STRUC_9   
2855                STRUC_9:   .SET   STRUC_10   
2855                STRUC_10:   .SET   STRUC_11   
2855                STRUC_11:   .SET   STRUC_12   
2855                STRUC_12:   .SET   0   
2855                          ;*Macro unroll: INTERPRET
2855   CF                     RST   $08   
2856   E9 0B                  DW   interpret   
2858   21 0F                  DW   exit_forth   
285A                          ;*Macro unroll: EXPECT 100, "interpret parse 100"
285A   CD 38 0A               CALL   printNum   
285D                          ;*Macro unroll:  loadWord H,L, B,C
285D   69                     LD   L,C   
285E   60                     LD   H,B   
285F   69                     LD   L,C   
2860                          ;*Macro unroll:  ppop0 B,C
2860   DD 2B                  DEC   IX   
2862   DD 46 00               LD   B,(IX+0)   
2865   DD 2B                  DEC   IX   
2867   DD 4E 00               LD   C,(IX+0)   
286A                          ;*Macro unroll:  CMP16 100
286A   11 64 00               LD   DE,100   
286D   B7                     OR   A   
286E   ED 52                  SBC   HL,DE   
2870                          ;*Macro unroll:  checkZeroWord H,L
2870   7D                     LD   A,L   
2871   B4                     OR   H   
2872   CA 99 28               JP   z,tf_doneM_2440S112   
2875   11 83 10               LD   DE,FAILED   
2878   CD EB 11               CALL   printPStr   
287B   11 85 28               LD   DE,te_failM_2440S112   
287E   CD EB 11               CALL   printPStr   
2881   76                     HALT      
2882                          ;*Macro unroll:  _skip
2882   C3 82 28               JP   $   
2885                          ;*Macro unroll:  STRUC_PUSH $
2885                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2885                STRUC_12:   .SET   STRUC_11   
2885                STRUC_11:   .SET   STRUC_10   
2885                STRUC_10:   .SET   STRUC_9   
2885                STRUC_9:   .SET   STRUC_8   
2885                STRUC_8:   .SET   STRUC_7   
2885                STRUC_7:   .SET   STRUC_6   
2885                STRUC_6:   .SET   STRUC_5   
2885                STRUC_5:   .SET   STRUC_4   
2885                STRUC_4:   .SET   STRUC_3   
2885                STRUC_3:   .SET   STRUC_2   
2885                STRUC_2:   .SET   STRUC_TOP   
2885                STRUC_TOP:   .SET   $   
2885                TE_FAILM_2440S112:      
2885   13 69 6E 74 65 72 70 72 65 74 20 70 61 72 73 65 20 31 30 30 .PSTR   "interpret parse 100"   
2899                          ;*Macro unroll:  _endskip
2899                          ;*Macro unroll:  STRUC_FWD
2899                CUR_ADR:   .SET   $   
2883                          .ORG   STRUC_TOP - 2   
2883   99 28                  DW   CUR_ADR   
2899                          .ORG   CUR_ADR   
2899                          ;*Macro unroll:  STRUC_POP
2899                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2899                STRUC_TOP:   .SET   STRUC_2   
2899                STRUC_2:   .SET   STRUC_3   
2899                STRUC_3:   .SET   STRUC_4   
2899                STRUC_4:   .SET   STRUC_5   
2899                STRUC_5:   .SET   STRUC_6   
2899                STRUC_6:   .SET   STRUC_7   
2899                STRUC_7:   .SET   STRUC_8   
2899                STRUC_8:   .SET   STRUC_9   
2899                STRUC_9:   .SET   STRUC_10   
2899                STRUC_10:   .SET   STRUC_11   
2899                STRUC_11:   .SET   STRUC_12   
2899                STRUC_12:   .SET   0   
2899                TF_DONEM_2440S112:      
2899                          ;*Macro unroll: TEST_SET_TEXT "3 2 +"
2899   2A 45 30               LD   HL,(lineBufStart)   
289C   22 4B 30               LD   (lineBufTop),HL   
289F   22 49 30               LD   (currkey),HL   
28A2   21 AB 28               LD   HL,tst_textM_2441S114   
28A5   22 61 32               LD   (char_pointer),HL   
28A8                          ;*Macro unroll:  _skip
28A8   C3 A8 28               JP   $   
28AB                          ;*Macro unroll:  STRUC_PUSH $
28AB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28AB                STRUC_12:   .SET   STRUC_11   
28AB                STRUC_11:   .SET   STRUC_10   
28AB                STRUC_10:   .SET   STRUC_9   
28AB                STRUC_9:   .SET   STRUC_8   
28AB                STRUC_8:   .SET   STRUC_7   
28AB                STRUC_7:   .SET   STRUC_6   
28AB                STRUC_6:   .SET   STRUC_5   
28AB                STRUC_5:   .SET   STRUC_4   
28AB                STRUC_4:   .SET   STRUC_3   
28AB                STRUC_3:   .SET   STRUC_2   
28AB                STRUC_2:   .SET   STRUC_TOP   
28AB                STRUC_TOP:   .SET   $   
28AB                TST_TEXTM_2441S114:      
28AB   33 20 32 20 2B 0D 0A FF 0D 0A DB   "3 2 +","\r\n",-1,"\r\n"   
28B5                          ;*Macro unroll:  _endskip
28B5                          ;*Macro unroll:  STRUC_FWD
28B5                CUR_ADR:   .SET   $   
28A9                          .ORG   STRUC_TOP - 2   
28A9   B5 28                  DW   CUR_ADR   
28B5                          .ORG   CUR_ADR   
28B5                          ;*Macro unroll:  STRUC_POP
28B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28B5                STRUC_TOP:   .SET   STRUC_2   
28B5                STRUC_2:   .SET   STRUC_3   
28B5                STRUC_3:   .SET   STRUC_4   
28B5                STRUC_4:   .SET   STRUC_5   
28B5                STRUC_5:   .SET   STRUC_6   
28B5                STRUC_6:   .SET   STRUC_7   
28B5                STRUC_7:   .SET   STRUC_8   
28B5                STRUC_8:   .SET   STRUC_9   
28B5                STRUC_9:   .SET   STRUC_10   
28B5                STRUC_10:   .SET   STRUC_11   
28B5                STRUC_11:   .SET   STRUC_12   
28B5                STRUC_12:   .SET   0   
28B5                          ;*Macro unroll: INTERPRET
28B5   CF                     RST   $08   
28B6   E9 0B                  DW   interpret   
28B8   21 0F                  DW   exit_forth   
28BA                          ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
28BA   CD 38 0A               CALL   printNum   
28BD                          ;*Macro unroll:  loadWord H,L, B,C
28BD   69                     LD   L,C   
28BE   60                     LD   H,B   
28BF   69                     LD   L,C   
28C0                          ;*Macro unroll:  ppop0 B,C
28C0   DD 2B                  DEC   IX   
28C2   DD 46 00               LD   B,(IX+0)   
28C5   DD 2B                  DEC   IX   
28C7   DD 4E 00               LD   C,(IX+0)   
28CA                          ;*Macro unroll:  CMP16 5
28CA   11 05 00               LD   DE,5   
28CD   B7                     OR   A   
28CE   ED 52                  SBC   HL,DE   
28D0                          ;*Macro unroll:  checkZeroWord H,L
28D0   7D                     LD   A,L   
28D1   B4                     OR   H   
28D2   CA EF 28               JP   z,tf_doneM_2443S116   
28D5   11 83 10               LD   DE,FAILED   
28D8   CD EB 11               CALL   printPStr   
28DB   11 E5 28               LD   DE,te_failM_2443S116   
28DE   CD EB 11               CALL   printPStr   
28E1   76                     HALT      
28E2                          ;*Macro unroll:  _skip
28E2   C3 E2 28               JP   $   
28E5                          ;*Macro unroll:  STRUC_PUSH $
28E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28E5                STRUC_12:   .SET   STRUC_11   
28E5                STRUC_11:   .SET   STRUC_10   
28E5                STRUC_10:   .SET   STRUC_9   
28E5                STRUC_9:   .SET   STRUC_8   
28E5                STRUC_8:   .SET   STRUC_7   
28E5                STRUC_7:   .SET   STRUC_6   
28E5                STRUC_6:   .SET   STRUC_5   
28E5                STRUC_5:   .SET   STRUC_4   
28E5                STRUC_4:   .SET   STRUC_3   
28E5                STRUC_3:   .SET   STRUC_2   
28E5                STRUC_2:   .SET   STRUC_TOP   
28E5                STRUC_TOP:   .SET   $   
28E5                TE_FAILM_2443S116:      
28E5   09 33 20 2B 20 32 20 3D 20 35 .PSTR   "3 + 2 = 5"   
28EF                          ;*Macro unroll:  _endskip
28EF                          ;*Macro unroll:  STRUC_FWD
28EF                CUR_ADR:   .SET   $   
28E3                          .ORG   STRUC_TOP - 2   
28E3   EF 28                  DW   CUR_ADR   
28EF                          .ORG   CUR_ADR   
28EF                          ;*Macro unroll:  STRUC_POP
28EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28EF                STRUC_TOP:   .SET   STRUC_2   
28EF                STRUC_2:   .SET   STRUC_3   
28EF                STRUC_3:   .SET   STRUC_4   
28EF                STRUC_4:   .SET   STRUC_5   
28EF                STRUC_5:   .SET   STRUC_6   
28EF                STRUC_6:   .SET   STRUC_7   
28EF                STRUC_7:   .SET   STRUC_8   
28EF                STRUC_8:   .SET   STRUC_9   
28EF                STRUC_9:   .SET   STRUC_10   
28EF                STRUC_10:   .SET   STRUC_11   
28EF                STRUC_11:   .SET   STRUC_12   
28EF                STRUC_12:   .SET   0   
28EF                TF_DONEM_2443S116:      
28EF                          ;*Macro unroll: TEST_SET_TEXT ": add + ;"
28EF   2A 45 30               LD   HL,(lineBufStart)   
28F2   22 4B 30               LD   (lineBufTop),HL   
28F5   22 49 30               LD   (currkey),HL   
28F8   21 01 29               LD   HL,tst_textM_2444S118   
28FB   22 61 32               LD   (char_pointer),HL   
28FE                          ;*Macro unroll:  _skip
28FE   C3 FE 28               JP   $   
2901                          ;*Macro unroll:  STRUC_PUSH $
2901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2901                STRUC_12:   .SET   STRUC_11   
2901                STRUC_11:   .SET   STRUC_10   
2901                STRUC_10:   .SET   STRUC_9   
2901                STRUC_9:   .SET   STRUC_8   
2901                STRUC_8:   .SET   STRUC_7   
2901                STRUC_7:   .SET   STRUC_6   
2901                STRUC_6:   .SET   STRUC_5   
2901                STRUC_5:   .SET   STRUC_4   
2901                STRUC_4:   .SET   STRUC_3   
2901                STRUC_3:   .SET   STRUC_2   
2901                STRUC_2:   .SET   STRUC_TOP   
2901                STRUC_TOP:   .SET   $   
2901                TST_TEXTM_2444S118:      
2901   3A 20 61 64 64 20 2B 20 3B 0D 0A FF 0D 0A DB   ": add + ;","\r\n",-1,"\r\n"   
290F                          ;*Macro unroll:  _endskip
290F                          ;*Macro unroll:  STRUC_FWD
290F                CUR_ADR:   .SET   $   
28FF                          .ORG   STRUC_TOP - 2   
28FF   0F 29                  DW   CUR_ADR   
290F                          .ORG   CUR_ADR   
290F                          ;*Macro unroll:  STRUC_POP
290F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
290F                STRUC_TOP:   .SET   STRUC_2   
290F                STRUC_2:   .SET   STRUC_3   
290F                STRUC_3:   .SET   STRUC_4   
290F                STRUC_4:   .SET   STRUC_5   
290F                STRUC_5:   .SET   STRUC_6   
290F                STRUC_6:   .SET   STRUC_7   
290F                STRUC_7:   .SET   STRUC_8   
290F                STRUC_8:   .SET   STRUC_9   
290F                STRUC_9:   .SET   STRUC_10   
290F                STRUC_10:   .SET   STRUC_11   
290F                STRUC_11:   .SET   STRUC_12   
290F                STRUC_12:   .SET   0   
290F                          ;*Macro unroll: INTERPRET
290F   CF                     RST   $08   
2910   E9 0B                  DW   interpret   
2912   21 0F                  DW   exit_forth   
2914                          ;*Macro unroll: ppushValue 2
2914                          ;*Macro unroll:  ppush0 B,C
2914   DD 71 00               LD   (IX+0),C   
2917   DD 23                  INC   IX   
2919   DD 70 00               LD   (IX+0),B   
291C   DD 23                  INC   IX   
291E   01 02 00               LD   BC,2   
2921                          ;*Macro unroll: ppushValue 2
2921                          ;*Macro unroll:  ppush0 B,C
2921   DD 71 00               LD   (IX+0),C   
2924   DD 23                  INC   IX   
2926   DD 70 00               LD   (IX+0),B   
2929   DD 23                  INC   IX   
292B   01 02 00               LD   BC,2   
292E                          ;*Macro unroll: TEST_SET_TEXT "add"
292E   2A 45 30               LD   HL,(lineBufStart)   
2931   22 4B 30               LD   (lineBufTop),HL   
2934   22 49 30               LD   (currkey),HL   
2937   21 40 29               LD   HL,tst_textM_2448S123   
293A   22 61 32               LD   (char_pointer),HL   
293D                          ;*Macro unroll:  _skip
293D   C3 3D 29               JP   $   
2940                          ;*Macro unroll:  STRUC_PUSH $
2940                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2940                STRUC_12:   .SET   STRUC_11   
2940                STRUC_11:   .SET   STRUC_10   
2940                STRUC_10:   .SET   STRUC_9   
2940                STRUC_9:   .SET   STRUC_8   
2940                STRUC_8:   .SET   STRUC_7   
2940                STRUC_7:   .SET   STRUC_6   
2940                STRUC_6:   .SET   STRUC_5   
2940                STRUC_5:   .SET   STRUC_4   
2940                STRUC_4:   .SET   STRUC_3   
2940                STRUC_3:   .SET   STRUC_2   
2940                STRUC_2:   .SET   STRUC_TOP   
2940                STRUC_TOP:   .SET   $   
2940                TST_TEXTM_2448S123:      
2940   61 64 64 0D 0A FF 0D 0A DB   "add","\r\n",-1,"\r\n"   
2948                          ;*Macro unroll:  _endskip
2948                          ;*Macro unroll:  STRUC_FWD
2948                CUR_ADR:   .SET   $   
293E                          .ORG   STRUC_TOP - 2   
293E   48 29                  DW   CUR_ADR   
2948                          .ORG   CUR_ADR   
2948                          ;*Macro unroll:  STRUC_POP
2948                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2948                STRUC_TOP:   .SET   STRUC_2   
2948                STRUC_2:   .SET   STRUC_3   
2948                STRUC_3:   .SET   STRUC_4   
2948                STRUC_4:   .SET   STRUC_5   
2948                STRUC_5:   .SET   STRUC_6   
2948                STRUC_6:   .SET   STRUC_7   
2948                STRUC_7:   .SET   STRUC_8   
2948                STRUC_8:   .SET   STRUC_9   
2948                STRUC_9:   .SET   STRUC_10   
2948                STRUC_10:   .SET   STRUC_11   
2948                STRUC_11:   .SET   STRUC_12   
2948                STRUC_12:   .SET   0   
2948                          ;*Macro unroll: INTERPRET
2948   CF                     RST   $08   
2949   E9 0B                  DW   interpret   
294B   21 0F                  DW   exit_forth   
294D                          ;*Macro unroll: EXPECT 4, "2 2 add = 4"
294D   CD 38 0A               CALL   printNum   
2950                          ;*Macro unroll:  loadWord H,L, B,C
2950   69                     LD   L,C   
2951   60                     LD   H,B   
2952   69                     LD   L,C   
2953                          ;*Macro unroll:  ppop0 B,C
2953   DD 2B                  DEC   IX   
2955   DD 46 00               LD   B,(IX+0)   
2958   DD 2B                  DEC   IX   
295A   DD 4E 00               LD   C,(IX+0)   
295D                          ;*Macro unroll:  CMP16 4
295D   11 04 00               LD   DE,4   
2960   B7                     OR   A   
2961   ED 52                  SBC   HL,DE   
2963                          ;*Macro unroll:  checkZeroWord H,L
2963   7D                     LD   A,L   
2964   B4                     OR   H   
2965   CA 84 29               JP   z,tf_doneM_2450S125   
2968   11 83 10               LD   DE,FAILED   
296B   CD EB 11               CALL   printPStr   
296E   11 78 29               LD   DE,te_failM_2450S125   
2971   CD EB 11               CALL   printPStr   
2974   76                     HALT      
2975                          ;*Macro unroll:  _skip
2975   C3 75 29               JP   $   
2978                          ;*Macro unroll:  STRUC_PUSH $
2978                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2978                STRUC_12:   .SET   STRUC_11   
2978                STRUC_11:   .SET   STRUC_10   
2978                STRUC_10:   .SET   STRUC_9   
2978                STRUC_9:   .SET   STRUC_8   
2978                STRUC_8:   .SET   STRUC_7   
2978                STRUC_7:   .SET   STRUC_6   
2978                STRUC_6:   .SET   STRUC_5   
2978                STRUC_5:   .SET   STRUC_4   
2978                STRUC_4:   .SET   STRUC_3   
2978                STRUC_3:   .SET   STRUC_2   
2978                STRUC_2:   .SET   STRUC_TOP   
2978                STRUC_TOP:   .SET   $   
2978                TE_FAILM_2450S125:      
2978   0B 32 20 32 20 61 64 64 20 3D 20 34 .PSTR   "2 2 add = 4"   
2984                          ;*Macro unroll:  _endskip
2984                          ;*Macro unroll:  STRUC_FWD
2984                CUR_ADR:   .SET   $   
2976                          .ORG   STRUC_TOP - 2   
2976   84 29                  DW   CUR_ADR   
2984                          .ORG   CUR_ADR   
2984                          ;*Macro unroll:  STRUC_POP
2984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2984                STRUC_TOP:   .SET   STRUC_2   
2984                STRUC_2:   .SET   STRUC_3   
2984                STRUC_3:   .SET   STRUC_4   
2984                STRUC_4:   .SET   STRUC_5   
2984                STRUC_5:   .SET   STRUC_6   
2984                STRUC_6:   .SET   STRUC_7   
2984                STRUC_7:   .SET   STRUC_8   
2984                STRUC_8:   .SET   STRUC_9   
2984                STRUC_9:   .SET   STRUC_10   
2984                STRUC_10:   .SET   STRUC_11   
2984                STRUC_11:   .SET   STRUC_12   
2984                STRUC_12:   .SET   0   
2984                TF_DONEM_2450S125:      
2984                          ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
2984   2A 45 30               LD   HL,(lineBufStart)   
2987   22 4B 30               LD   (lineBufTop),HL   
298A   22 49 30               LD   (currkey),HL   
298D   21 96 29               LD   HL,tst_textM_2451S127   
2990   22 61 32               LD   (char_pointer),HL   
2993                          ;*Macro unroll:  _skip
2993   C3 93 29               JP   $   
2996                          ;*Macro unroll:  STRUC_PUSH $
2996                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2996                STRUC_12:   .SET   STRUC_11   
2996                STRUC_11:   .SET   STRUC_10   
2996                STRUC_10:   .SET   STRUC_9   
2996                STRUC_9:   .SET   STRUC_8   
2996                STRUC_8:   .SET   STRUC_7   
2996                STRUC_7:   .SET   STRUC_6   
2996                STRUC_6:   .SET   STRUC_5   
2996                STRUC_5:   .SET   STRUC_4   
2996                STRUC_4:   .SET   STRUC_3   
2996                STRUC_3:   .SET   STRUC_2   
2996                STRUC_2:   .SET   STRUC_TOP   
2996                STRUC_TOP:   .SET   $   
2996                TST_TEXTM_2451S127:      
2996   3A 20 64 75 6D 70 20 31 36 20 62 61 73 65 20 21 20 6F 76 65 72 20 2B 20 73 77 61 70 20 62 65 67 69 6E 20 6F 76 65 72 20 6F 76 65 72 20 73 77 61 70 20 3C 20 77 68 69 6C 65 20 64 75 70 20 37 20 61 6E 64 20 30 3D 20 69 66 20 63 72 20 64 75 70 20 2E 20 65 6E 64 69 66 20 64 75 70 20 63 40 20 2E 20 31 2B 20 72 65 70 65 61 74 20 63 72 20 31 30 20 62 61 73 65 20 21 20 3B 0D 0A FF 0D 0A DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
2A15                          ;*Macro unroll:  _endskip
2A15                          ;*Macro unroll:  STRUC_FWD
2A15                CUR_ADR:   .SET   $   
2994                          .ORG   STRUC_TOP - 2   
2994   15 2A                  DW   CUR_ADR   
2A15                          .ORG   CUR_ADR   
2A15                          ;*Macro unroll:  STRUC_POP
2A15                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A15                STRUC_TOP:   .SET   STRUC_2   
2A15                STRUC_2:   .SET   STRUC_3   
2A15                STRUC_3:   .SET   STRUC_4   
2A15                STRUC_4:   .SET   STRUC_5   
2A15                STRUC_5:   .SET   STRUC_6   
2A15                STRUC_6:   .SET   STRUC_7   
2A15                STRUC_7:   .SET   STRUC_8   
2A15                STRUC_8:   .SET   STRUC_9   
2A15                STRUC_9:   .SET   STRUC_10   
2A15                STRUC_10:   .SET   STRUC_11   
2A15                STRUC_11:   .SET   STRUC_12   
2A15                STRUC_12:   .SET   0   
2A15                          ;*Macro unroll: INTERPRET
2A15   CF                     RST   $08   
2A16   E9 0B                  DW   interpret   
2A18   21 0F                  DW   exit_forth   
2A1A                          ;*Macro unroll: TEST_SET_TEXT "dump"
2A1A   2A 45 30               LD   HL,(lineBufStart)   
2A1D   22 4B 30               LD   (lineBufTop),HL   
2A20   22 49 30               LD   (currkey),HL   
2A23   21 2C 2A               LD   HL,tst_textM_2453S130   
2A26   22 61 32               LD   (char_pointer),HL   
2A29                          ;*Macro unroll:  _skip
2A29   C3 29 2A               JP   $   
2A2C                          ;*Macro unroll:  STRUC_PUSH $
2A2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A2C                STRUC_12:   .SET   STRUC_11   
2A2C                STRUC_11:   .SET   STRUC_10   
2A2C                STRUC_10:   .SET   STRUC_9   
2A2C                STRUC_9:   .SET   STRUC_8   
2A2C                STRUC_8:   .SET   STRUC_7   
2A2C                STRUC_7:   .SET   STRUC_6   
2A2C                STRUC_6:   .SET   STRUC_5   
2A2C                STRUC_5:   .SET   STRUC_4   
2A2C                STRUC_4:   .SET   STRUC_3   
2A2C                STRUC_3:   .SET   STRUC_2   
2A2C                STRUC_2:   .SET   STRUC_TOP   
2A2C                STRUC_TOP:   .SET   $   
2A2C                TST_TEXTM_2453S130:      
2A2C   64 75 6D 70 0D 0A FF 0D 0A DB   "dump","\r\n",-1,"\r\n"   
2A35                          ;*Macro unroll:  _endskip
2A35                          ;*Macro unroll:  STRUC_FWD
2A35                CUR_ADR:   .SET   $   
2A2A                          .ORG   STRUC_TOP - 2   
2A2A   35 2A                  DW   CUR_ADR   
2A35                          .ORG   CUR_ADR   
2A35                          ;*Macro unroll:  STRUC_POP
2A35                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A35                STRUC_TOP:   .SET   STRUC_2   
2A35                STRUC_2:   .SET   STRUC_3   
2A35                STRUC_3:   .SET   STRUC_4   
2A35                STRUC_4:   .SET   STRUC_5   
2A35                STRUC_5:   .SET   STRUC_6   
2A35                STRUC_6:   .SET   STRUC_7   
2A35                STRUC_7:   .SET   STRUC_8   
2A35                STRUC_8:   .SET   STRUC_9   
2A35                STRUC_9:   .SET   STRUC_10   
2A35                STRUC_10:   .SET   STRUC_11   
2A35                STRUC_11:   .SET   STRUC_12   
2A35                STRUC_12:   .SET   0   
2A35                          ;*Macro unroll: INTERPRET
2A35   CF                     RST   $08   
2A36   E9 0B                  DW   interpret   
2A38   21 0F                  DW   exit_forth   
2A3A                          ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
2A3A   2A 45 30               LD   HL,(lineBufStart)   
2A3D   22 4B 30               LD   (lineBufTop),HL   
2A40   22 49 30               LD   (currkey),HL   
2A43   21 4C 2A               LD   HL,tst_textM_2455S133   
2A46   22 61 32               LD   (char_pointer),HL   
2A49                          ;*Macro unroll:  _skip
2A49   C3 49 2A               JP   $   
2A4C                          ;*Macro unroll:  STRUC_PUSH $
2A4C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A4C                STRUC_12:   .SET   STRUC_11   
2A4C                STRUC_11:   .SET   STRUC_10   
2A4C                STRUC_10:   .SET   STRUC_9   
2A4C                STRUC_9:   .SET   STRUC_8   
2A4C                STRUC_8:   .SET   STRUC_7   
2A4C                STRUC_7:   .SET   STRUC_6   
2A4C                STRUC_6:   .SET   STRUC_5   
2A4C                STRUC_5:   .SET   STRUC_4   
2A4C                STRUC_4:   .SET   STRUC_3   
2A4C                STRUC_3:   .SET   STRUC_2   
2A4C                STRUC_2:   .SET   STRUC_TOP   
2A4C                STRUC_TOP:   .SET   $   
2A4C                TST_TEXTM_2455S133:      
2A4C   3A 20 73 74 72 20 73 22 20 78 79 7A 22 20 3B 0D 0A FF 0D 0A DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
2A60                          ;*Macro unroll:  _endskip
2A60                          ;*Macro unroll:  STRUC_FWD
2A60                CUR_ADR:   .SET   $   
2A4A                          .ORG   STRUC_TOP - 2   
2A4A   60 2A                  DW   CUR_ADR   
2A60                          .ORG   CUR_ADR   
2A60                          ;*Macro unroll:  STRUC_POP
2A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A60                STRUC_TOP:   .SET   STRUC_2   
2A60                STRUC_2:   .SET   STRUC_3   
2A60                STRUC_3:   .SET   STRUC_4   
2A60                STRUC_4:   .SET   STRUC_5   
2A60                STRUC_5:   .SET   STRUC_6   
2A60                STRUC_6:   .SET   STRUC_7   
2A60                STRUC_7:   .SET   STRUC_8   
2A60                STRUC_8:   .SET   STRUC_9   
2A60                STRUC_9:   .SET   STRUC_10   
2A60                STRUC_10:   .SET   STRUC_11   
2A60                STRUC_11:   .SET   STRUC_12   
2A60                STRUC_12:   .SET   0   
2A60                          ;*Macro unroll: INTERPRET
2A60   CF                     RST   $08   
2A61   E9 0B                  DW   interpret   
2A63   21 0F                  DW   exit_forth   
2A65                          ;*Macro unroll: TEST_SET_TEXT "str type"
2A65   2A 45 30               LD   HL,(lineBufStart)   
2A68   22 4B 30               LD   (lineBufTop),HL   
2A6B   22 49 30               LD   (currkey),HL   
2A6E   21 77 2A               LD   HL,tst_textM_2457S135   
2A71   22 61 32               LD   (char_pointer),HL   
2A74                          ;*Macro unroll:  _skip
2A74   C3 74 2A               JP   $   
2A77                          ;*Macro unroll:  STRUC_PUSH $
2A77                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A77                STRUC_12:   .SET   STRUC_11   
2A77                STRUC_11:   .SET   STRUC_10   
2A77                STRUC_10:   .SET   STRUC_9   
2A77                STRUC_9:   .SET   STRUC_8   
2A77                STRUC_8:   .SET   STRUC_7   
2A77                STRUC_7:   .SET   STRUC_6   
2A77                STRUC_6:   .SET   STRUC_5   
2A77                STRUC_5:   .SET   STRUC_4   
2A77                STRUC_4:   .SET   STRUC_3   
2A77                STRUC_3:   .SET   STRUC_2   
2A77                STRUC_2:   .SET   STRUC_TOP   
2A77                STRUC_TOP:   .SET   $   
2A77                TST_TEXTM_2457S135:      
2A77   73 74 72 20 74 79 70 65 0D 0A FF 0D 0A DB   "str type","\r\n",-1,"\r\n"   
2A84                          ;*Macro unroll:  _endskip
2A84                          ;*Macro unroll:  STRUC_FWD
2A84                CUR_ADR:   .SET   $   
2A75                          .ORG   STRUC_TOP - 2   
2A75   84 2A                  DW   CUR_ADR   
2A84                          .ORG   CUR_ADR   
2A84                          ;*Macro unroll:  STRUC_POP
2A84                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A84                STRUC_TOP:   .SET   STRUC_2   
2A84                STRUC_2:   .SET   STRUC_3   
2A84                STRUC_3:   .SET   STRUC_4   
2A84                STRUC_4:   .SET   STRUC_5   
2A84                STRUC_5:   .SET   STRUC_6   
2A84                STRUC_6:   .SET   STRUC_7   
2A84                STRUC_7:   .SET   STRUC_8   
2A84                STRUC_8:   .SET   STRUC_9   
2A84                STRUC_9:   .SET   STRUC_10   
2A84                STRUC_10:   .SET   STRUC_11   
2A84                STRUC_11:   .SET   STRUC_12   
2A84                STRUC_12:   .SET   0   
2A84                          ;*Macro unroll: INTERPRET
2A84   CF                     RST   $08   
2A85   E9 0B                  DW   interpret   
2A87   21 0F                  DW   exit_forth   
2A89                          ;*Macro unroll: TEST_SET_TEXT "str"
2A89   2A 45 30               LD   HL,(lineBufStart)   
2A8C   22 4B 30               LD   (lineBufTop),HL   
2A8F   22 49 30               LD   (currkey),HL   
2A92   21 9B 2A               LD   HL,tst_textM_2459S137   
2A95   22 61 32               LD   (char_pointer),HL   
2A98                          ;*Macro unroll:  _skip
2A98   C3 98 2A               JP   $   
2A9B                          ;*Macro unroll:  STRUC_PUSH $
2A9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A9B                STRUC_12:   .SET   STRUC_11   
2A9B                STRUC_11:   .SET   STRUC_10   
2A9B                STRUC_10:   .SET   STRUC_9   
2A9B                STRUC_9:   .SET   STRUC_8   
2A9B                STRUC_8:   .SET   STRUC_7   
2A9B                STRUC_7:   .SET   STRUC_6   
2A9B                STRUC_6:   .SET   STRUC_5   
2A9B                STRUC_5:   .SET   STRUC_4   
2A9B                STRUC_4:   .SET   STRUC_3   
2A9B                STRUC_3:   .SET   STRUC_2   
2A9B                STRUC_2:   .SET   STRUC_TOP   
2A9B                STRUC_TOP:   .SET   $   
2A9B                TST_TEXTM_2459S137:      
2A9B   73 74 72 0D 0A FF 0D 0A DB   "str","\r\n",-1,"\r\n"   
2AA3                          ;*Macro unroll:  _endskip
2AA3                          ;*Macro unroll:  STRUC_FWD
2AA3                CUR_ADR:   .SET   $   
2A99                          .ORG   STRUC_TOP - 2   
2A99   A3 2A                  DW   CUR_ADR   
2AA3                          .ORG   CUR_ADR   
2AA3                          ;*Macro unroll:  STRUC_POP
2AA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AA3                STRUC_TOP:   .SET   STRUC_2   
2AA3                STRUC_2:   .SET   STRUC_3   
2AA3                STRUC_3:   .SET   STRUC_4   
2AA3                STRUC_4:   .SET   STRUC_5   
2AA3                STRUC_5:   .SET   STRUC_6   
2AA3                STRUC_6:   .SET   STRUC_7   
2AA3                STRUC_7:   .SET   STRUC_8   
2AA3                STRUC_8:   .SET   STRUC_9   
2AA3                STRUC_9:   .SET   STRUC_10   
2AA3                STRUC_10:   .SET   STRUC_11   
2AA3                STRUC_11:   .SET   STRUC_12   
2AA3                STRUC_12:   .SET   0   
2AA3                          ;*Macro unroll: INTERPRET
2AA3   CF                     RST   $08   
2AA4   E9 0B                  DW   interpret   
2AA6   21 0F                  DW   exit_forth   
2AA8                          ;*Macro unroll: EXPECT 3, "str len = 3"
2AA8   CD 38 0A               CALL   printNum   
2AAB                          ;*Macro unroll:  loadWord H,L, B,C
2AAB   69                     LD   L,C   
2AAC   60                     LD   H,B   
2AAD   69                     LD   L,C   
2AAE                          ;*Macro unroll:  ppop0 B,C
2AAE   DD 2B                  DEC   IX   
2AB0   DD 46 00               LD   B,(IX+0)   
2AB3   DD 2B                  DEC   IX   
2AB5   DD 4E 00               LD   C,(IX+0)   
2AB8                          ;*Macro unroll:  CMP16 3
2AB8   11 03 00               LD   DE,3   
2ABB   B7                     OR   A   
2ABC   ED 52                  SBC   HL,DE   
2ABE                          ;*Macro unroll:  checkZeroWord H,L
2ABE   7D                     LD   A,L   
2ABF   B4                     OR   H   
2AC0   CA DF 2A               JP   z,tf_doneM_2461S139   
2AC3   11 83 10               LD   DE,FAILED   
2AC6   CD EB 11               CALL   printPStr   
2AC9   11 D3 2A               LD   DE,te_failM_2461S139   
2ACC   CD EB 11               CALL   printPStr   
2ACF   76                     HALT      
2AD0                          ;*Macro unroll:  _skip
2AD0   C3 D0 2A               JP   $   
2AD3                          ;*Macro unroll:  STRUC_PUSH $
2AD3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AD3                STRUC_12:   .SET   STRUC_11   
2AD3                STRUC_11:   .SET   STRUC_10   
2AD3                STRUC_10:   .SET   STRUC_9   
2AD3                STRUC_9:   .SET   STRUC_8   
2AD3                STRUC_8:   .SET   STRUC_7   
2AD3                STRUC_7:   .SET   STRUC_6   
2AD3                STRUC_6:   .SET   STRUC_5   
2AD3                STRUC_5:   .SET   STRUC_4   
2AD3                STRUC_4:   .SET   STRUC_3   
2AD3                STRUC_3:   .SET   STRUC_2   
2AD3                STRUC_2:   .SET   STRUC_TOP   
2AD3                STRUC_TOP:   .SET   $   
2AD3                TE_FAILM_2461S139:      
2AD3   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2ADF                          ;*Macro unroll:  _endskip
2ADF                          ;*Macro unroll:  STRUC_FWD
2ADF                CUR_ADR:   .SET   $   
2AD1                          .ORG   STRUC_TOP - 2   
2AD1   DF 2A                  DW   CUR_ADR   
2ADF                          .ORG   CUR_ADR   
2ADF                          ;*Macro unroll:  STRUC_POP
2ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2ADF                STRUC_TOP:   .SET   STRUC_2   
2ADF                STRUC_2:   .SET   STRUC_3   
2ADF                STRUC_3:   .SET   STRUC_4   
2ADF                STRUC_4:   .SET   STRUC_5   
2ADF                STRUC_5:   .SET   STRUC_6   
2ADF                STRUC_6:   .SET   STRUC_7   
2ADF                STRUC_7:   .SET   STRUC_8   
2ADF                STRUC_8:   .SET   STRUC_9   
2ADF                STRUC_9:   .SET   STRUC_10   
2ADF                STRUC_10:   .SET   STRUC_11   
2ADF                STRUC_11:   .SET   STRUC_12   
2ADF                STRUC_12:   .SET   0   
2ADF                TF_DONEM_2461S139:      
2ADF                          ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
2ADF   2A 45 30               LD   HL,(lineBufStart)   
2AE2   22 4B 30               LD   (lineBufTop),HL   
2AE5   22 49 30               LD   (currkey),HL   
2AE8   21 F1 2A               LD   HL,tst_textM_2462S141   
2AEB   22 61 32               LD   (char_pointer),HL   
2AEE                          ;*Macro unroll:  _skip
2AEE   C3 EE 2A               JP   $   
2AF1                          ;*Macro unroll:  STRUC_PUSH $
2AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AF1                STRUC_12:   .SET   STRUC_11   
2AF1                STRUC_11:   .SET   STRUC_10   
2AF1                STRUC_10:   .SET   STRUC_9   
2AF1                STRUC_9:   .SET   STRUC_8   
2AF1                STRUC_8:   .SET   STRUC_7   
2AF1                STRUC_7:   .SET   STRUC_6   
2AF1                STRUC_6:   .SET   STRUC_5   
2AF1                STRUC_5:   .SET   STRUC_4   
2AF1                STRUC_4:   .SET   STRUC_3   
2AF1                STRUC_3:   .SET   STRUC_2   
2AF1                STRUC_2:   .SET   STRUC_TOP   
2AF1                STRUC_TOP:   .SET   $   
2AF1                TST_TEXTM_2462S141:      
2AF1   22 20 78 79 7A 22 0D 0A FF 0D 0A DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
2AFC                          ;*Macro unroll:  _endskip
2AFC                          ;*Macro unroll:  STRUC_FWD
2AFC                CUR_ADR:   .SET   $   
2AEF                          .ORG   STRUC_TOP - 2   
2AEF   FC 2A                  DW   CUR_ADR   
2AFC                          .ORG   CUR_ADR   
2AFC                          ;*Macro unroll:  STRUC_POP
2AFC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AFC                STRUC_TOP:   .SET   STRUC_2   
2AFC                STRUC_2:   .SET   STRUC_3   
2AFC                STRUC_3:   .SET   STRUC_4   
2AFC                STRUC_4:   .SET   STRUC_5   
2AFC                STRUC_5:   .SET   STRUC_6   
2AFC                STRUC_6:   .SET   STRUC_7   
2AFC                STRUC_7:   .SET   STRUC_8   
2AFC                STRUC_8:   .SET   STRUC_9   
2AFC                STRUC_9:   .SET   STRUC_10   
2AFC                STRUC_10:   .SET   STRUC_11   
2AFC                STRUC_11:   .SET   STRUC_12   
2AFC                STRUC_12:   .SET   0   
2AFC                          ;*Macro unroll: INTERPRET
2AFC   CF                     RST   $08   
2AFD   E9 0B                  DW   interpret   
2AFF   21 0F                  DW   exit_forth   
2B01                          ;*Macro unroll: TEST_SET_TEXT "dup"
2B01   2A 45 30               LD   HL,(lineBufStart)   
2B04   22 4B 30               LD   (lineBufTop),HL   
2B07   22 49 30               LD   (currkey),HL   
2B0A   21 13 2B               LD   HL,tst_textM_2464S143   
2B0D   22 61 32               LD   (char_pointer),HL   
2B10                          ;*Macro unroll:  _skip
2B10   C3 10 2B               JP   $   
2B13                          ;*Macro unroll:  STRUC_PUSH $
2B13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B13                STRUC_12:   .SET   STRUC_11   
2B13                STRUC_11:   .SET   STRUC_10   
2B13                STRUC_10:   .SET   STRUC_9   
2B13                STRUC_9:   .SET   STRUC_8   
2B13                STRUC_8:   .SET   STRUC_7   
2B13                STRUC_7:   .SET   STRUC_6   
2B13                STRUC_6:   .SET   STRUC_5   
2B13                STRUC_5:   .SET   STRUC_4   
2B13                STRUC_4:   .SET   STRUC_3   
2B13                STRUC_3:   .SET   STRUC_2   
2B13                STRUC_2:   .SET   STRUC_TOP   
2B13                STRUC_TOP:   .SET   $   
2B13                TST_TEXTM_2464S143:      
2B13   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
2B1B                          ;*Macro unroll:  _endskip
2B1B                          ;*Macro unroll:  STRUC_FWD
2B1B                CUR_ADR:   .SET   $   
2B11                          .ORG   STRUC_TOP - 2   
2B11   1B 2B                  DW   CUR_ADR   
2B1B                          .ORG   CUR_ADR   
2B1B                          ;*Macro unroll:  STRUC_POP
2B1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B1B                STRUC_TOP:   .SET   STRUC_2   
2B1B                STRUC_2:   .SET   STRUC_3   
2B1B                STRUC_3:   .SET   STRUC_4   
2B1B                STRUC_4:   .SET   STRUC_5   
2B1B                STRUC_5:   .SET   STRUC_6   
2B1B                STRUC_6:   .SET   STRUC_7   
2B1B                STRUC_7:   .SET   STRUC_8   
2B1B                STRUC_8:   .SET   STRUC_9   
2B1B                STRUC_9:   .SET   STRUC_10   
2B1B                STRUC_10:   .SET   STRUC_11   
2B1B                STRUC_11:   .SET   STRUC_12   
2B1B                STRUC_12:   .SET   0   
2B1B                          ;*Macro unroll: INTERPRET
2B1B   CF                     RST   $08   
2B1C   E9 0B                  DW   interpret   
2B1E   21 0F                  DW   exit_forth   
2B20                          ;*Macro unroll: EXPECT 3, "str len = 3"
2B20   CD 38 0A               CALL   printNum   
2B23                          ;*Macro unroll:  loadWord H,L, B,C
2B23   69                     LD   L,C   
2B24   60                     LD   H,B   
2B25   69                     LD   L,C   
2B26                          ;*Macro unroll:  ppop0 B,C
2B26   DD 2B                  DEC   IX   
2B28   DD 46 00               LD   B,(IX+0)   
2B2B   DD 2B                  DEC   IX   
2B2D   DD 4E 00               LD   C,(IX+0)   
2B30                          ;*Macro unroll:  CMP16 3
2B30   11 03 00               LD   DE,3   
2B33   B7                     OR   A   
2B34   ED 52                  SBC   HL,DE   
2B36                          ;*Macro unroll:  checkZeroWord H,L
2B36   7D                     LD   A,L   
2B37   B4                     OR   H   
2B38   CA 57 2B               JP   z,tf_doneM_2466S145   
2B3B   11 83 10               LD   DE,FAILED   
2B3E   CD EB 11               CALL   printPStr   
2B41   11 4B 2B               LD   DE,te_failM_2466S145   
2B44   CD EB 11               CALL   printPStr   
2B47   76                     HALT      
2B48                          ;*Macro unroll:  _skip
2B48   C3 48 2B               JP   $   
2B4B                          ;*Macro unroll:  STRUC_PUSH $
2B4B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B4B                STRUC_12:   .SET   STRUC_11   
2B4B                STRUC_11:   .SET   STRUC_10   
2B4B                STRUC_10:   .SET   STRUC_9   
2B4B                STRUC_9:   .SET   STRUC_8   
2B4B                STRUC_8:   .SET   STRUC_7   
2B4B                STRUC_7:   .SET   STRUC_6   
2B4B                STRUC_6:   .SET   STRUC_5   
2B4B                STRUC_5:   .SET   STRUC_4   
2B4B                STRUC_4:   .SET   STRUC_3   
2B4B                STRUC_3:   .SET   STRUC_2   
2B4B                STRUC_2:   .SET   STRUC_TOP   
2B4B                STRUC_TOP:   .SET   $   
2B4B                TE_FAILM_2466S145:      
2B4B   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2B57                          ;*Macro unroll:  _endskip
2B57                          ;*Macro unroll:  STRUC_FWD
2B57                CUR_ADR:   .SET   $   
2B49                          .ORG   STRUC_TOP - 2   
2B49   57 2B                  DW   CUR_ADR   
2B57                          .ORG   CUR_ADR   
2B57                          ;*Macro unroll:  STRUC_POP
2B57                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B57                STRUC_TOP:   .SET   STRUC_2   
2B57                STRUC_2:   .SET   STRUC_3   
2B57                STRUC_3:   .SET   STRUC_4   
2B57                STRUC_4:   .SET   STRUC_5   
2B57                STRUC_5:   .SET   STRUC_6   
2B57                STRUC_6:   .SET   STRUC_7   
2B57                STRUC_7:   .SET   STRUC_8   
2B57                STRUC_8:   .SET   STRUC_9   
2B57                STRUC_9:   .SET   STRUC_10   
2B57                STRUC_10:   .SET   STRUC_11   
2B57                STRUC_11:   .SET   STRUC_12   
2B57                STRUC_12:   .SET   0   
2B57                TF_DONEM_2466S145:      
2B57                          ;*Macro unroll: TEST_SET_TEXT "type"
2B57   2A 45 30               LD   HL,(lineBufStart)   
2B5A   22 4B 30               LD   (lineBufTop),HL   
2B5D   22 49 30               LD   (currkey),HL   
2B60   21 69 2B               LD   HL,tst_textM_2467S146   
2B63   22 61 32               LD   (char_pointer),HL   
2B66                          ;*Macro unroll:  _skip
2B66   C3 66 2B               JP   $   
2B69                          ;*Macro unroll:  STRUC_PUSH $
2B69                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B69                STRUC_12:   .SET   STRUC_11   
2B69                STRUC_11:   .SET   STRUC_10   
2B69                STRUC_10:   .SET   STRUC_9   
2B69                STRUC_9:   .SET   STRUC_8   
2B69                STRUC_8:   .SET   STRUC_7   
2B69                STRUC_7:   .SET   STRUC_6   
2B69                STRUC_6:   .SET   STRUC_5   
2B69                STRUC_5:   .SET   STRUC_4   
2B69                STRUC_4:   .SET   STRUC_3   
2B69                STRUC_3:   .SET   STRUC_2   
2B69                STRUC_2:   .SET   STRUC_TOP   
2B69                STRUC_TOP:   .SET   $   
2B69                TST_TEXTM_2467S146:      
2B69   74 79 70 65 0D 0A FF 0D 0A DB   "type","\r\n",-1,"\r\n"   
2B72                          ;*Macro unroll:  _endskip
2B72                          ;*Macro unroll:  STRUC_FWD
2B72                CUR_ADR:   .SET   $   
2B67                          .ORG   STRUC_TOP - 2   
2B67   72 2B                  DW   CUR_ADR   
2B72                          .ORG   CUR_ADR   
2B72                          ;*Macro unroll:  STRUC_POP
2B72                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B72                STRUC_TOP:   .SET   STRUC_2   
2B72                STRUC_2:   .SET   STRUC_3   
2B72                STRUC_3:   .SET   STRUC_4   
2B72                STRUC_4:   .SET   STRUC_5   
2B72                STRUC_5:   .SET   STRUC_6   
2B72                STRUC_6:   .SET   STRUC_7   
2B72                STRUC_7:   .SET   STRUC_8   
2B72                STRUC_8:   .SET   STRUC_9   
2B72                STRUC_9:   .SET   STRUC_10   
2B72                STRUC_10:   .SET   STRUC_11   
2B72                STRUC_11:   .SET   STRUC_12   
2B72                STRUC_12:   .SET   0   
2B72                          ;*Macro unroll: INTERPRET
2B72   CF                     RST   $08   
2B73   E9 0B                  DW   interpret   
2B75   21 0F                  DW   exit_forth   
2B77                             ; 
2B77                             ; ld HL, 12
2B77                             ; ld C, 10
2B77                             ; call divideWordByByte
2B77                             ; ld B, 0
2B77                             ; ld C, A
2B77                             ; EXPECT 2, "div 11 / 10 = 1 1"
2B77                             ; TEST_SET_TEXT "hello\r\n"
2B77                             ; call KEY
2B77                             ; EXPECT $68, "key 'h'"
2B77                             ; call KEY
2B77                             ; EXPECT $65, "key 'e'"
2B77                             ; TEST_SET_TEXT "x"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'x'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "a xyz "
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'a xyz'"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'a xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "here"
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; call CREATE
2B77                             ; call LATEST
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "create xyz latest"
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER + 6, "create xyz here"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; call DUP
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; ppushValue -10
2B77                             ; ppushValue 10
2B77                             ; call STAR
2B77                             ; EXPECT -100, "expect -10 * 10 to be -100"
2B77                             ; ppushValue -10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT 200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue 10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT -200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue -101
2B77                             ; ppushValue 20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5, "expect -101 / 20 to be -5"
2B77                             ; EXPECT -1, "expect -101 % 20 to be -1"
2B77                             ; ppushValue -101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT 5,  "expect -101 / -20 to be 5"
2B77                             ; EXPECT -1, "expect -101 % -20 to be -1"
2B77                             ; ppushValue 101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5,  "expect 101 / -20 to be -5"
2B77                             ; EXPECT 1, "expect 101 % -20 to be 1"
2B77                             ; TEST_SET_TEXT ": testif2 if 100 endif ;"
2B77                             ; ppushValue 0
2B77                             ; TEST_SET_TEXT "testloop"
2B77                             ; call INTERPRET
2B77                             ; EXPECT 5, "Loop until limit < 5"
2B77                             ; ppushPText "xyz"
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "xyz length 3"
2B77                             ; call CFETCH
2B77                             ; EXPECT "x" + 0, "xyz --> x"
2B77                             ; ppushValue HEADER_LATEST
2B77                             ; call TCFA
2B77                             ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; ppushValue HEADER_PLUS
2B77                             ; call TCFA
2B77                             ; call EXECUTE
2B77                             ; EXPECT 3, "1 2 plus = 3"
2B77                             ; ppushText "100",3
2B77                             ; call NUMBER
2B77                             ; EXPECT 0, "0 = no parse err"
2B77                             ; EXPECT 100, "parse 100"
2B77                             ; ppushText "latest",6
2B77                             ; call FIND
2B77                             ; EXPECT HEADER_LATEST, "find header of LATEST"
2B77                             ; TEST_SET_TEXT "base"
2B77                             ; rst $08
2B77                             ; dw interpret
2B77                             ; dw exit_forth
2B77                             ; call FETCH
2B77                             ; EXPECT 10, "expect base to be 10"
2B77                             ; ppushText "add",3
2B77                             ; call FIND
2B77                             ; ppushValue 64
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#h 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT $100, "expect hex $100"
2B77                             ; TEST_SET_TEXT "hex"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#d 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT 100, "expect decimal 100"
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                          ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
2B77   2A 45 30               LD   HL,(lineBufStart)   
2B7A   22 4B 30               LD   (lineBufTop),HL   
2B7D   22 49 30               LD   (currkey),HL   
2B80   21 89 2B               LD   HL,tst_textM_2593S18   
2B83   22 61 32               LD   (char_pointer),HL   
2B86                          ;*Macro unroll:  _skip
2B86   C3 86 2B               JP   $   
2B89                          ;*Macro unroll:  STRUC_PUSH $
2B89                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B89                STRUC_12:   .SET   STRUC_11   
2B89                STRUC_11:   .SET   STRUC_10   
2B89                STRUC_10:   .SET   STRUC_9   
2B89                STRUC_9:   .SET   STRUC_8   
2B89                STRUC_8:   .SET   STRUC_7   
2B89                STRUC_7:   .SET   STRUC_6   
2B89                STRUC_6:   .SET   STRUC_5   
2B89                STRUC_5:   .SET   STRUC_4   
2B89                STRUC_4:   .SET   STRUC_3   
2B89                STRUC_3:   .SET   STRUC_2   
2B89                STRUC_2:   .SET   STRUC_TOP   
2B89                STRUC_TOP:   .SET   $   
2B89                TST_TEXTM_2593S18:      
2B89   31 36 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "16 base ! 20","\r\n",-1,"\r\n"   
2B9A                          ;*Macro unroll:  _endskip
2B9A                          ;*Macro unroll:  STRUC_FWD
2B9A                CUR_ADR:   .SET   $   
2B87                          .ORG   STRUC_TOP - 2   
2B87   9A 2B                  DW   CUR_ADR   
2B9A                          .ORG   CUR_ADR   
2B9A                          ;*Macro unroll:  STRUC_POP
2B9A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B9A                STRUC_TOP:   .SET   STRUC_2   
2B9A                STRUC_2:   .SET   STRUC_3   
2B9A                STRUC_3:   .SET   STRUC_4   
2B9A                STRUC_4:   .SET   STRUC_5   
2B9A                STRUC_5:   .SET   STRUC_6   
2B9A                STRUC_6:   .SET   STRUC_7   
2B9A                STRUC_7:   .SET   STRUC_8   
2B9A                STRUC_8:   .SET   STRUC_9   
2B9A                STRUC_9:   .SET   STRUC_10   
2B9A                STRUC_10:   .SET   STRUC_11   
2B9A                STRUC_11:   .SET   STRUC_12   
2B9A                STRUC_12:   .SET   0   
2B9A                          ;*Macro unroll: INTERPRET
2B9A   CF                     RST   $08   
2B9B   E9 0B                  DW   interpret   
2B9D   21 0F                  DW   exit_forth   
2B9F                          ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
2B9F   CD 38 0A               CALL   printNum   
2BA2                          ;*Macro unroll:  loadWord H,L, B,C
2BA2   69                     LD   L,C   
2BA3   60                     LD   H,B   
2BA4   69                     LD   L,C   
2BA5                          ;*Macro unroll:  ppop0 B,C
2BA5   DD 2B                  DEC   IX   
2BA7   DD 46 00               LD   B,(IX+0)   
2BAA   DD 2B                  DEC   IX   
2BAC   DD 4E 00               LD   C,(IX+0)   
2BAF                          ;*Macro unroll:  CMP16 32
2BAF   11 20 00               LD   DE,32   
2BB2   B7                     OR   A   
2BB3   ED 52                  SBC   HL,DE   
2BB5                          ;*Macro unroll:  checkZeroWord H,L
2BB5   7D                     LD   A,L   
2BB6   B4                     OR   H   
2BB7   CA DA 2B               JP   z,tf_doneM_2595S20   
2BBA   11 83 10               LD   DE,FAILED   
2BBD   CD EB 11               CALL   printPStr   
2BC0   11 CA 2B               LD   DE,te_failM_2595S20   
2BC3   CD EB 11               CALL   printPStr   
2BC6   76                     HALT      
2BC7                          ;*Macro unroll:  _skip
2BC7   C3 C7 2B               JP   $   
2BCA                          ;*Macro unroll:  STRUC_PUSH $
2BCA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BCA                STRUC_12:   .SET   STRUC_11   
2BCA                STRUC_11:   .SET   STRUC_10   
2BCA                STRUC_10:   .SET   STRUC_9   
2BCA                STRUC_9:   .SET   STRUC_8   
2BCA                STRUC_8:   .SET   STRUC_7   
2BCA                STRUC_7:   .SET   STRUC_6   
2BCA                STRUC_6:   .SET   STRUC_5   
2BCA                STRUC_5:   .SET   STRUC_4   
2BCA                STRUC_4:   .SET   STRUC_3   
2BCA                STRUC_3:   .SET   STRUC_2   
2BCA                STRUC_2:   .SET   STRUC_TOP   
2BCA                STRUC_TOP:   .SET   $   
2BCA                TE_FAILM_2595S20:      
2BCA   0F 33 32 20 24 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "32 $20 to be 32"   
2BDA                          ;*Macro unroll:  _endskip
2BDA                          ;*Macro unroll:  STRUC_FWD
2BDA                CUR_ADR:   .SET   $   
2BC8                          .ORG   STRUC_TOP - 2   
2BC8   DA 2B                  DW   CUR_ADR   
2BDA                          .ORG   CUR_ADR   
2BDA                          ;*Macro unroll:  STRUC_POP
2BDA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BDA                STRUC_TOP:   .SET   STRUC_2   
2BDA                STRUC_2:   .SET   STRUC_3   
2BDA                STRUC_3:   .SET   STRUC_4   
2BDA                STRUC_4:   .SET   STRUC_5   
2BDA                STRUC_5:   .SET   STRUC_6   
2BDA                STRUC_6:   .SET   STRUC_7   
2BDA                STRUC_7:   .SET   STRUC_8   
2BDA                STRUC_8:   .SET   STRUC_9   
2BDA                STRUC_9:   .SET   STRUC_10   
2BDA                STRUC_10:   .SET   STRUC_11   
2BDA                STRUC_11:   .SET   STRUC_12   
2BDA                STRUC_12:   .SET   0   
2BDA                TF_DONEM_2595S20:      
2BDA                          ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
2BDA   2A 45 30               LD   HL,(lineBufStart)   
2BDD   22 4B 30               LD   (lineBufTop),HL   
2BE0   22 49 30               LD   (currkey),HL   
2BE3   21 EC 2B               LD   HL,tst_textM_2596S22   
2BE6   22 61 32               LD   (char_pointer),HL   
2BE9                          ;*Macro unroll:  _skip
2BE9   C3 E9 2B               JP   $   
2BEC                          ;*Macro unroll:  STRUC_PUSH $
2BEC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BEC                STRUC_12:   .SET   STRUC_11   
2BEC                STRUC_11:   .SET   STRUC_10   
2BEC                STRUC_10:   .SET   STRUC_9   
2BEC                STRUC_9:   .SET   STRUC_8   
2BEC                STRUC_8:   .SET   STRUC_7   
2BEC                STRUC_7:   .SET   STRUC_6   
2BEC                STRUC_6:   .SET   STRUC_5   
2BEC                STRUC_5:   .SET   STRUC_4   
2BEC                STRUC_4:   .SET   STRUC_3   
2BEC                STRUC_3:   .SET   STRUC_2   
2BEC                STRUC_2:   .SET   STRUC_TOP   
2BEC                STRUC_TOP:   .SET   $   
2BEC                TST_TEXTM_2596S22:      
2BEC   30 41 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "0A base ! 20","\r\n",-1,"\r\n"   
2BFD                          ;*Macro unroll:  _endskip
2BFD                          ;*Macro unroll:  STRUC_FWD
2BFD                CUR_ADR:   .SET   $   
2BEA                          .ORG   STRUC_TOP - 2   
2BEA   FD 2B                  DW   CUR_ADR   
2BFD                          .ORG   CUR_ADR   
2BFD                          ;*Macro unroll:  STRUC_POP
2BFD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BFD                STRUC_TOP:   .SET   STRUC_2   
2BFD                STRUC_2:   .SET   STRUC_3   
2BFD                STRUC_3:   .SET   STRUC_4   
2BFD                STRUC_4:   .SET   STRUC_5   
2BFD                STRUC_5:   .SET   STRUC_6   
2BFD                STRUC_6:   .SET   STRUC_7   
2BFD                STRUC_7:   .SET   STRUC_8   
2BFD                STRUC_8:   .SET   STRUC_9   
2BFD                STRUC_9:   .SET   STRUC_10   
2BFD                STRUC_10:   .SET   STRUC_11   
2BFD                STRUC_11:   .SET   STRUC_12   
2BFD                STRUC_12:   .SET   0   
2BFD                          ;*Macro unroll: INTERPRET
2BFD   CF                     RST   $08   
2BFE   E9 0B                  DW   interpret   
2C00   21 0F                  DW   exit_forth   
2C02                          ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
2C02   CD 38 0A               CALL   printNum   
2C05                          ;*Macro unroll:  loadWord H,L, B,C
2C05   69                     LD   L,C   
2C06   60                     LD   H,B   
2C07   69                     LD   L,C   
2C08                          ;*Macro unroll:  ppop0 B,C
2C08   DD 2B                  DEC   IX   
2C0A   DD 46 00               LD   B,(IX+0)   
2C0D   DD 2B                  DEC   IX   
2C0F   DD 4E 00               LD   C,(IX+0)   
2C12                          ;*Macro unroll:  CMP16 20
2C12   11 14 00               LD   DE,20   
2C15   B7                     OR   A   
2C16   ED 52                  SBC   HL,DE   
2C18                          ;*Macro unroll:  checkZeroWord H,L
2C18   7D                     LD   A,L   
2C19   B4                     OR   H   
2C1A   CA 44 2C               JP   z,tf_doneM_2598S24   
2C1D   11 83 10               LD   DE,FAILED   
2C20   CD EB 11               CALL   printPStr   
2C23   11 2D 2C               LD   DE,te_failM_2598S24   
2C26   CD EB 11               CALL   printPStr   
2C29   76                     HALT      
2C2A                          ;*Macro unroll:  _skip
2C2A   C3 2A 2C               JP   $   
2C2D                          ;*Macro unroll:  STRUC_PUSH $
2C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C2D                STRUC_12:   .SET   STRUC_11   
2C2D                STRUC_11:   .SET   STRUC_10   
2C2D                STRUC_10:   .SET   STRUC_9   
2C2D                STRUC_9:   .SET   STRUC_8   
2C2D                STRUC_8:   .SET   STRUC_7   
2C2D                STRUC_7:   .SET   STRUC_6   
2C2D                STRUC_6:   .SET   STRUC_5   
2C2D                STRUC_5:   .SET   STRUC_4   
2C2D                STRUC_4:   .SET   STRUC_3   
2C2D                STRUC_3:   .SET   STRUC_2   
2C2D                STRUC_2:   .SET   STRUC_TOP   
2C2D                STRUC_TOP:   .SET   $   
2C2D                TE_FAILM_2598S24:      
2C2D   16 32 30 20 64 65 63 69 6D 61 6C 20 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "20 decimal 20 to be 32"   
2C44                          ;*Macro unroll:  _endskip
2C44                          ;*Macro unroll:  STRUC_FWD
2C44                CUR_ADR:   .SET   $   
2C2B                          .ORG   STRUC_TOP - 2   
2C2B   44 2C                  DW   CUR_ADR   
2C44                          .ORG   CUR_ADR   
2C44                          ;*Macro unroll:  STRUC_POP
2C44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C44                STRUC_TOP:   .SET   STRUC_2   
2C44                STRUC_2:   .SET   STRUC_3   
2C44                STRUC_3:   .SET   STRUC_4   
2C44                STRUC_4:   .SET   STRUC_5   
2C44                STRUC_5:   .SET   STRUC_6   
2C44                STRUC_6:   .SET   STRUC_7   
2C44                STRUC_7:   .SET   STRUC_8   
2C44                STRUC_8:   .SET   STRUC_9   
2C44                STRUC_9:   .SET   STRUC_10   
2C44                STRUC_10:   .SET   STRUC_11   
2C44                STRUC_11:   .SET   STRUC_12   
2C44                STRUC_12:   .SET   0   
2C44                TF_DONEM_2598S24:      
2C44                          ;*Macro unroll: TEST_SET_TEXT "100 100 +"
2C44   2A 45 30               LD   HL,(lineBufStart)   
2C47   22 4B 30               LD   (lineBufTop),HL   
2C4A   22 49 30               LD   (currkey),HL   
2C4D   21 56 2C               LD   HL,tst_textM_2599S1   
2C50   22 61 32               LD   (char_pointer),HL   
2C53                          ;*Macro unroll:  _skip
2C53   C3 53 2C               JP   $   
2C56                          ;*Macro unroll:  STRUC_PUSH $
2C56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C56                STRUC_12:   .SET   STRUC_11   
2C56                STRUC_11:   .SET   STRUC_10   
2C56                STRUC_10:   .SET   STRUC_9   
2C56                STRUC_9:   .SET   STRUC_8   
2C56                STRUC_8:   .SET   STRUC_7   
2C56                STRUC_7:   .SET   STRUC_6   
2C56                STRUC_6:   .SET   STRUC_5   
2C56                STRUC_5:   .SET   STRUC_4   
2C56                STRUC_4:   .SET   STRUC_3   
2C56                STRUC_3:   .SET   STRUC_2   
2C56                STRUC_2:   .SET   STRUC_TOP   
2C56                STRUC_TOP:   .SET   $   
2C56                TST_TEXTM_2599S1:      
2C56   31 30 30 20 31 30 30 20 2B 0D 0A FF 0D 0A DB   "100 100 +","\r\n",-1,"\r\n"   
2C64                          ;*Macro unroll:  _endskip
2C64                          ;*Macro unroll:  STRUC_FWD
2C64                CUR_ADR:   .SET   $   
2C54                          .ORG   STRUC_TOP - 2   
2C54   64 2C                  DW   CUR_ADR   
2C64                          .ORG   CUR_ADR   
2C64                          ;*Macro unroll:  STRUC_POP
2C64                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C64                STRUC_TOP:   .SET   STRUC_2   
2C64                STRUC_2:   .SET   STRUC_3   
2C64                STRUC_3:   .SET   STRUC_4   
2C64                STRUC_4:   .SET   STRUC_5   
2C64                STRUC_5:   .SET   STRUC_6   
2C64                STRUC_6:   .SET   STRUC_7   
2C64                STRUC_7:   .SET   STRUC_8   
2C64                STRUC_8:   .SET   STRUC_9   
2C64                STRUC_9:   .SET   STRUC_10   
2C64                STRUC_10:   .SET   STRUC_11   
2C64                STRUC_11:   .SET   STRUC_12   
2C64                STRUC_12:   .SET   0   
2C64                          ;*Macro unroll: INTERPRET
2C64   CF                     RST   $08   
2C65   E9 0B                  DW   interpret   
2C67   21 0F                  DW   exit_forth   
2C69                          ;*Macro unroll: EXPECT 200, "100 100 + = 200"
2C69   CD 38 0A               CALL   printNum   
2C6C                          ;*Macro unroll:  loadWord H,L, B,C
2C6C   69                     LD   L,C   
2C6D   60                     LD   H,B   
2C6E   69                     LD   L,C   
2C6F                          ;*Macro unroll:  ppop0 B,C
2C6F   DD 2B                  DEC   IX   
2C71   DD 46 00               LD   B,(IX+0)   
2C74   DD 2B                  DEC   IX   
2C76   DD 4E 00               LD   C,(IX+0)   
2C79                          ;*Macro unroll:  CMP16 200
2C79   11 C8 00               LD   DE,200   
2C7C   B7                     OR   A   
2C7D   ED 52                  SBC   HL,DE   
2C7F                          ;*Macro unroll:  checkZeroWord H,L
2C7F   7D                     LD   A,L   
2C80   B4                     OR   H   
2C81   CA A4 2C               JP   z,tf_doneM_2601S3   
2C84   11 83 10               LD   DE,FAILED   
2C87   CD EB 11               CALL   printPStr   
2C8A   11 94 2C               LD   DE,te_failM_2601S3   
2C8D   CD EB 11               CALL   printPStr   
2C90   76                     HALT      
2C91                          ;*Macro unroll:  _skip
2C91   C3 91 2C               JP   $   
2C94                          ;*Macro unroll:  STRUC_PUSH $
2C94                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C94                STRUC_12:   .SET   STRUC_11   
2C94                STRUC_11:   .SET   STRUC_10   
2C94                STRUC_10:   .SET   STRUC_9   
2C94                STRUC_9:   .SET   STRUC_8   
2C94                STRUC_8:   .SET   STRUC_7   
2C94                STRUC_7:   .SET   STRUC_6   
2C94                STRUC_6:   .SET   STRUC_5   
2C94                STRUC_5:   .SET   STRUC_4   
2C94                STRUC_4:   .SET   STRUC_3   
2C94                STRUC_3:   .SET   STRUC_2   
2C94                STRUC_2:   .SET   STRUC_TOP   
2C94                STRUC_TOP:   .SET   $   
2C94                TE_FAILM_2601S3:      
2C94   0F 31 30 30 20 31 30 30 20 2B 20 3D 20 32 30 30 .PSTR   "100 100 + = 200"   
2CA4                          ;*Macro unroll:  _endskip
2CA4                          ;*Macro unroll:  STRUC_FWD
2CA4                CUR_ADR:   .SET   $   
2C92                          .ORG   STRUC_TOP - 2   
2C92   A4 2C                  DW   CUR_ADR   
2CA4                          .ORG   CUR_ADR   
2CA4                          ;*Macro unroll:  STRUC_POP
2CA4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CA4                STRUC_TOP:   .SET   STRUC_2   
2CA4                STRUC_2:   .SET   STRUC_3   
2CA4                STRUC_3:   .SET   STRUC_4   
2CA4                STRUC_4:   .SET   STRUC_5   
2CA4                STRUC_5:   .SET   STRUC_6   
2CA4                STRUC_6:   .SET   STRUC_7   
2CA4                STRUC_7:   .SET   STRUC_8   
2CA4                STRUC_8:   .SET   STRUC_9   
2CA4                STRUC_9:   .SET   STRUC_10   
2CA4                STRUC_10:   .SET   STRUC_11   
2CA4                STRUC_11:   .SET   STRUC_12   
2CA4                STRUC_12:   .SET   0   
2CA4                TF_DONEM_2601S3:      
2CA4                          ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
2CA4   2A 45 30               LD   HL,(lineBufStart)   
2CA7   22 4B 30               LD   (lineBufTop),HL   
2CAA   22 49 30               LD   (currkey),HL   
2CAD   21 B6 2C               LD   HL,tst_textM_2602S5   
2CB0   22 61 32               LD   (char_pointer),HL   
2CB3                          ;*Macro unroll:  _skip
2CB3   C3 B3 2C               JP   $   
2CB6                          ;*Macro unroll:  STRUC_PUSH $
2CB6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CB6                STRUC_12:   .SET   STRUC_11   
2CB6                STRUC_11:   .SET   STRUC_10   
2CB6                STRUC_10:   .SET   STRUC_9   
2CB6                STRUC_9:   .SET   STRUC_8   
2CB6                STRUC_8:   .SET   STRUC_7   
2CB6                STRUC_7:   .SET   STRUC_6   
2CB6                STRUC_6:   .SET   STRUC_5   
2CB6                STRUC_5:   .SET   STRUC_4   
2CB6                STRUC_4:   .SET   STRUC_3   
2CB6                STRUC_3:   .SET   STRUC_2   
2CB6                STRUC_2:   .SET   STRUC_TOP   
2CB6                STRUC_TOP:   .SET   $   
2CB6                TST_TEXTM_2602S5:      
2CB6   31 30 30 20 31 30 20 2B 20 2E 0D 0A FF 0D 0A DB   "100 10 + .","\r\n",-1,"\r\n"   
2CC5                          ;*Macro unroll:  _endskip
2CC5                          ;*Macro unroll:  STRUC_FWD
2CC5                CUR_ADR:   .SET   $   
2CB4                          .ORG   STRUC_TOP - 2   
2CB4   C5 2C                  DW   CUR_ADR   
2CC5                          .ORG   CUR_ADR   
2CC5                          ;*Macro unroll:  STRUC_POP
2CC5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CC5                STRUC_TOP:   .SET   STRUC_2   
2CC5                STRUC_2:   .SET   STRUC_3   
2CC5                STRUC_3:   .SET   STRUC_4   
2CC5                STRUC_4:   .SET   STRUC_5   
2CC5                STRUC_5:   .SET   STRUC_6   
2CC5                STRUC_6:   .SET   STRUC_7   
2CC5                STRUC_7:   .SET   STRUC_8   
2CC5                STRUC_8:   .SET   STRUC_9   
2CC5                STRUC_9:   .SET   STRUC_10   
2CC5                STRUC_10:   .SET   STRUC_11   
2CC5                STRUC_11:   .SET   STRUC_12   
2CC5                STRUC_12:   .SET   0   
2CC5                          ;*Macro unroll: INTERPRET
2CC5   CF                     RST   $08   
2CC6   E9 0B                  DW   interpret   
2CC8   21 0F                  DW   exit_forth   
2CCA                          ;*Macro unroll: TEST_SET_TEXT "-10 abs"
2CCA   2A 45 30               LD   HL,(lineBufStart)   
2CCD   22 4B 30               LD   (lineBufTop),HL   
2CD0   22 49 30               LD   (currkey),HL   
2CD3   21 DC 2C               LD   HL,tst_textM_2604S8   
2CD6   22 61 32               LD   (char_pointer),HL   
2CD9                          ;*Macro unroll:  _skip
2CD9   C3 D9 2C               JP   $   
2CDC                          ;*Macro unroll:  STRUC_PUSH $
2CDC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CDC                STRUC_12:   .SET   STRUC_11   
2CDC                STRUC_11:   .SET   STRUC_10   
2CDC                STRUC_10:   .SET   STRUC_9   
2CDC                STRUC_9:   .SET   STRUC_8   
2CDC                STRUC_8:   .SET   STRUC_7   
2CDC                STRUC_7:   .SET   STRUC_6   
2CDC                STRUC_6:   .SET   STRUC_5   
2CDC                STRUC_5:   .SET   STRUC_4   
2CDC                STRUC_4:   .SET   STRUC_3   
2CDC                STRUC_3:   .SET   STRUC_2   
2CDC                STRUC_2:   .SET   STRUC_TOP   
2CDC                STRUC_TOP:   .SET   $   
2CDC                TST_TEXTM_2604S8:      
2CDC   2D 31 30 20 61 62 73 0D 0A FF 0D 0A DB   "-10 abs","\r\n",-1,"\r\n"   
2CE8                          ;*Macro unroll:  _endskip
2CE8                          ;*Macro unroll:  STRUC_FWD
2CE8                CUR_ADR:   .SET   $   
2CDA                          .ORG   STRUC_TOP - 2   
2CDA   E8 2C                  DW   CUR_ADR   
2CE8                          .ORG   CUR_ADR   
2CE8                          ;*Macro unroll:  STRUC_POP
2CE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CE8                STRUC_TOP:   .SET   STRUC_2   
2CE8                STRUC_2:   .SET   STRUC_3   
2CE8                STRUC_3:   .SET   STRUC_4   
2CE8                STRUC_4:   .SET   STRUC_5   
2CE8                STRUC_5:   .SET   STRUC_6   
2CE8                STRUC_6:   .SET   STRUC_7   
2CE8                STRUC_7:   .SET   STRUC_8   
2CE8                STRUC_8:   .SET   STRUC_9   
2CE8                STRUC_9:   .SET   STRUC_10   
2CE8                STRUC_10:   .SET   STRUC_11   
2CE8                STRUC_11:   .SET   STRUC_12   
2CE8                STRUC_12:   .SET   0   
2CE8                          ;*Macro unroll: INTERPRET
2CE8   CF                     RST   $08   
2CE9   E9 0B                  DW   interpret   
2CEB   21 0F                  DW   exit_forth   
2CED                          ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
2CED   CD 38 0A               CALL   printNum   
2CF0                          ;*Macro unroll:  loadWord H,L, B,C
2CF0   69                     LD   L,C   
2CF1   60                     LD   H,B   
2CF2   69                     LD   L,C   
2CF3                          ;*Macro unroll:  ppop0 B,C
2CF3   DD 2B                  DEC   IX   
2CF5   DD 46 00               LD   B,(IX+0)   
2CF8   DD 2B                  DEC   IX   
2CFA   DD 4E 00               LD   C,(IX+0)   
2CFD                          ;*Macro unroll:  CMP16 10
2CFD   11 0A 00               LD   DE,10   
2D00   B7                     OR   A   
2D01   ED 52                  SBC   HL,DE   
2D03                          ;*Macro unroll:  checkZeroWord H,L
2D03   7D                     LD   A,L   
2D04   B4                     OR   H   
2D05   CA 2C 2D               JP   z,tf_doneM_2606S10   
2D08   11 83 10               LD   DE,FAILED   
2D0B   CD EB 11               CALL   printPStr   
2D0E   11 18 2D               LD   DE,te_failM_2606S10   
2D11   CD EB 11               CALL   printPStr   
2D14   76                     HALT      
2D15                          ;*Macro unroll:  _skip
2D15   C3 15 2D               JP   $   
2D18                          ;*Macro unroll:  STRUC_PUSH $
2D18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D18                STRUC_12:   .SET   STRUC_11   
2D18                STRUC_11:   .SET   STRUC_10   
2D18                STRUC_10:   .SET   STRUC_9   
2D18                STRUC_9:   .SET   STRUC_8   
2D18                STRUC_8:   .SET   STRUC_7   
2D18                STRUC_7:   .SET   STRUC_6   
2D18                STRUC_6:   .SET   STRUC_5   
2D18                STRUC_5:   .SET   STRUC_4   
2D18                STRUC_4:   .SET   STRUC_3   
2D18                STRUC_3:   .SET   STRUC_2   
2D18                STRUC_2:   .SET   STRUC_TOP   
2D18                STRUC_TOP:   .SET   $   
2D18                TE_FAILM_2606S10:      
2D18   13 31 30 20 61 62 73 20 2D 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs -10 to be 10"   
2D2C                          ;*Macro unroll:  _endskip
2D2C                          ;*Macro unroll:  STRUC_FWD
2D2C                CUR_ADR:   .SET   $   
2D16                          .ORG   STRUC_TOP - 2   
2D16   2C 2D                  DW   CUR_ADR   
2D2C                          .ORG   CUR_ADR   
2D2C                          ;*Macro unroll:  STRUC_POP
2D2C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D2C                STRUC_TOP:   .SET   STRUC_2   
2D2C                STRUC_2:   .SET   STRUC_3   
2D2C                STRUC_3:   .SET   STRUC_4   
2D2C                STRUC_4:   .SET   STRUC_5   
2D2C                STRUC_5:   .SET   STRUC_6   
2D2C                STRUC_6:   .SET   STRUC_7   
2D2C                STRUC_7:   .SET   STRUC_8   
2D2C                STRUC_8:   .SET   STRUC_9   
2D2C                STRUC_9:   .SET   STRUC_10   
2D2C                STRUC_10:   .SET   STRUC_11   
2D2C                STRUC_11:   .SET   STRUC_12   
2D2C                STRUC_12:   .SET   0   
2D2C                TF_DONEM_2606S10:      
2D2C                          ;*Macro unroll: TEST_SET_TEXT "10 abs"
2D2C   2A 45 30               LD   HL,(lineBufStart)   
2D2F   22 4B 30               LD   (lineBufTop),HL   
2D32   22 49 30               LD   (currkey),HL   
2D35   21 3E 2D               LD   HL,tst_textM_2607S12   
2D38   22 61 32               LD   (char_pointer),HL   
2D3B                          ;*Macro unroll:  _skip
2D3B   C3 3B 2D               JP   $   
2D3E                          ;*Macro unroll:  STRUC_PUSH $
2D3E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D3E                STRUC_12:   .SET   STRUC_11   
2D3E                STRUC_11:   .SET   STRUC_10   
2D3E                STRUC_10:   .SET   STRUC_9   
2D3E                STRUC_9:   .SET   STRUC_8   
2D3E                STRUC_8:   .SET   STRUC_7   
2D3E                STRUC_7:   .SET   STRUC_6   
2D3E                STRUC_6:   .SET   STRUC_5   
2D3E                STRUC_5:   .SET   STRUC_4   
2D3E                STRUC_4:   .SET   STRUC_3   
2D3E                STRUC_3:   .SET   STRUC_2   
2D3E                STRUC_2:   .SET   STRUC_TOP   
2D3E                STRUC_TOP:   .SET   $   
2D3E                TST_TEXTM_2607S12:      
2D3E   31 30 20 61 62 73 0D 0A FF 0D 0A DB   "10 abs","\r\n",-1,"\r\n"   
2D49                          ;*Macro unroll:  _endskip
2D49                          ;*Macro unroll:  STRUC_FWD
2D49                CUR_ADR:   .SET   $   
2D3C                          .ORG   STRUC_TOP - 2   
2D3C   49 2D                  DW   CUR_ADR   
2D49                          .ORG   CUR_ADR   
2D49                          ;*Macro unroll:  STRUC_POP
2D49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D49                STRUC_TOP:   .SET   STRUC_2   
2D49                STRUC_2:   .SET   STRUC_3   
2D49                STRUC_3:   .SET   STRUC_4   
2D49                STRUC_4:   .SET   STRUC_5   
2D49                STRUC_5:   .SET   STRUC_6   
2D49                STRUC_6:   .SET   STRUC_7   
2D49                STRUC_7:   .SET   STRUC_8   
2D49                STRUC_8:   .SET   STRUC_9   
2D49                STRUC_9:   .SET   STRUC_10   
2D49                STRUC_10:   .SET   STRUC_11   
2D49                STRUC_11:   .SET   STRUC_12   
2D49                STRUC_12:   .SET   0   
2D49                          ;*Macro unroll: INTERPRET
2D49   CF                     RST   $08   
2D4A   E9 0B                  DW   interpret   
2D4C   21 0F                  DW   exit_forth   
2D4E                          ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
2D4E   CD 38 0A               CALL   printNum   
2D51                          ;*Macro unroll:  loadWord H,L, B,C
2D51   69                     LD   L,C   
2D52   60                     LD   H,B   
2D53   69                     LD   L,C   
2D54                          ;*Macro unroll:  ppop0 B,C
2D54   DD 2B                  DEC   IX   
2D56   DD 46 00               LD   B,(IX+0)   
2D59   DD 2B                  DEC   IX   
2D5B   DD 4E 00               LD   C,(IX+0)   
2D5E                          ;*Macro unroll:  CMP16 10
2D5E   11 0A 00               LD   DE,10   
2D61   B7                     OR   A   
2D62   ED 52                  SBC   HL,DE   
2D64                          ;*Macro unroll:  checkZeroWord H,L
2D64   7D                     LD   A,L   
2D65   B4                     OR   H   
2D66   CA 8C 2D               JP   z,tf_doneM_2609S14   
2D69   11 83 10               LD   DE,FAILED   
2D6C   CD EB 11               CALL   printPStr   
2D6F   11 79 2D               LD   DE,te_failM_2609S14   
2D72   CD EB 11               CALL   printPStr   
2D75   76                     HALT      
2D76                          ;*Macro unroll:  _skip
2D76   C3 76 2D               JP   $   
2D79                          ;*Macro unroll:  STRUC_PUSH $
2D79                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D79                STRUC_12:   .SET   STRUC_11   
2D79                STRUC_11:   .SET   STRUC_10   
2D79                STRUC_10:   .SET   STRUC_9   
2D79                STRUC_9:   .SET   STRUC_8   
2D79                STRUC_8:   .SET   STRUC_7   
2D79                STRUC_7:   .SET   STRUC_6   
2D79                STRUC_6:   .SET   STRUC_5   
2D79                STRUC_5:   .SET   STRUC_4   
2D79                STRUC_4:   .SET   STRUC_3   
2D79                STRUC_3:   .SET   STRUC_2   
2D79                STRUC_2:   .SET   STRUC_TOP   
2D79                STRUC_TOP:   .SET   $   
2D79                TE_FAILM_2609S14:      
2D79   12 31 30 20 61 62 73 20 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs 10 to be 10"   
2D8C                          ;*Macro unroll:  _endskip
2D8C                          ;*Macro unroll:  STRUC_FWD
2D8C                CUR_ADR:   .SET   $   
2D77                          .ORG   STRUC_TOP - 2   
2D77   8C 2D                  DW   CUR_ADR   
2D8C                          .ORG   CUR_ADR   
2D8C                          ;*Macro unroll:  STRUC_POP
2D8C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D8C                STRUC_TOP:   .SET   STRUC_2   
2D8C                STRUC_2:   .SET   STRUC_3   
2D8C                STRUC_3:   .SET   STRUC_4   
2D8C                STRUC_4:   .SET   STRUC_5   
2D8C                STRUC_5:   .SET   STRUC_6   
2D8C                STRUC_6:   .SET   STRUC_7   
2D8C                STRUC_7:   .SET   STRUC_8   
2D8C                STRUC_8:   .SET   STRUC_9   
2D8C                STRUC_9:   .SET   STRUC_10   
2D8C                STRUC_10:   .SET   STRUC_11   
2D8C                STRUC_11:   .SET   STRUC_12   
2D8C                STRUC_12:   .SET   0   
2D8C                TF_DONEM_2609S14:      
2D8C                             ; TEST_SET_TEXT "100 buffer: xvar"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar pack"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar count dup"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "str len = 3"
2D8C                             ; TEST_SET_TEXT "type"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "x1"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
2D8C                             ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "select"
2D8C                             ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 5, "Loop until limit < 5"
2D8C                             ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "0 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "define: q 0 = 200"
2D8C                             ; TEST_SET_TEXT "1 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 100, "define: q 1 = 100"
2D8C                             ; rst $08
2D8C                             ; dw litstr
2D8C                             ; .pstr "Expected parse error"
2D8C                             ; dw type
2D8C                             ; dw exit_forth
2D8C                             ; ppushValue 999
2D8C                             ; TEST_SET_TEXT "$$123"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 999, "interpret $$123"
2D8C                          ;*Macro unroll:  PRINT_STR DONE
2D8C                          ;*Macro unroll:  ppush0 D,E
2D8C   DD 73 00               LD   (IX+0),E   
2D8F   DD 23                  INC   IX   
2D91   DD 72 00               LD   (IX+0),D   
2D94   DD 23                  INC   IX   
2D96   11 78 10               LD   DE,DONE   
2D99   CD EB 11               CALL   printPStr   
2D9C                          ;*Macro unroll:  ppop0 D,E
2D9C   DD 2B                  DEC   IX   
2D9E   DD 56 00               LD   D,(IX+0)   
2DA1   DD 2B                  DEC   IX   
2DA3   DD 5E 00               LD   E,(IX+0)   
2DA6   76                     HALT      
2DA7                          ENDIF      
2DA7                          DS   RET_STACK_SIZE   ; return stack size
2EA7                RET_STACK:      ; return stack, grows down
2EA7                RPP:         ; RP0 grows down (into TIBB)
2EA7                DATA_STACK:      
2EA7                          DS   DATA_STACK_SIZE   ; TODO: change remove double data stack size
2FA7                SPP:         ; SP0 (should) grow down
2FA7                          ALIGN   $100   
3000                SERBUF:   DS   SER_BUFSIZE   
303F   00 00        SERINPTR:   DW   0   
3041   00 00        SERRDPTR:   DW   0   
3043   00 00        SERBUFUSED:   DW   0   
3045   00 00        LINEBUFSTART:   DW   0   
3047   00 00        LINEBUFSIZE:   DW   0   
3049   00 00        CURRKEY:   DW   0   
304B   00 00        LINEBUFTOP:   DW   0   
304D                LINEBUF:   DS   LINE_BUFSIZE   
30CD                WORDBUF:   DS   64   
310D                WORDBUF2:   DS   64   
314D                VAR_PAD:   DS   PAD_SIZE   
324D   00 00        EXITADDR:   DW   0   
324F   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
3251   00 00        VAR_HERE:   DW   0   
3253   00 00        VAR_INTP_STOP:   DW   0   
3255   00 00        VAR_STATE:   DW   0   
3257   00 00        VAR_NESTING:   DW   0   
3259   00 00        VAR_SP0:   DW   0   ;PAR_STACK
325B   00 00        VAR_BASE:   DW   0   
325D   00 00        VAR_LATEST_STR:   DW   0   
325F   00 00        VAR_LATEST:   DW   0   
3261                          IF   TESTMODE   
3261                             ; used for mocking getc
3261   00 00        CHAR_POINTER:   DW   0   
3263                          ENDIF      
3263                START_USER:      ; user allocated data starts here


TESTMODE:           0001 DEFINED AT LINE 3
MEM_SIZE:           10000 DEFINED AT LINE 1 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
ROM_SIZE:           2000 DEFINED AT LINE 2 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 3 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
BM:                 0000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
EM:                 10000 DEFINED AT LINE 6 IN constants.z80
START_ROM:          0000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 14
END_ROM:            2000 DEFINED AT LINE 9 IN constants.z80
START_RAM:          2000 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
                    > USED AT LINE 63
END_RAM:            10000 DEFINED AT LINE 12 IN constants.z80
RET_STACK_SIZE:     0100 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 2 IN variables.z80
DATA_STACK_SIZE:    0100 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 7 IN variables.z80
PAD_SIZE:           0100 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 35 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 11 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 52 IN core-serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 20 IN constants.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 16 IN core-serial.z80
                    > USED AT LINE 19 IN variables.z80
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 108 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 183 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 26
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
MSK_HIDDEN:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 127 IN core-compiler.z80
                    > USED AT LINE 26
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
MSK_LENGTH:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 26
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 84 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
                    > USED AT LINE 71 IN core-compiler.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 8 IN core-extra.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN core-serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 23 IN core-kernel.z80
                    > USED AT LINE 19 IN core-serial.z80
LINK:               14B9 DEFINED AT LINE 9
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
STRUC_COUNT:        2D8B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        14B4 DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
CPL_COUNT:          1477 DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 15
RST08:              0008 DEFINED AT LINE 20
RST38:              0038 DEFINED AT LINE 24
RST66:              0066 DEFINED AT LINE 28
START:              0067 DEFINED AT LINE 31
                    > USED AT LINE 17
HEADER_ZLESS:       0073 DEFINED AT LINE 6
                    > USED AT LINE 9
ZLESS:              0078 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 190 IN core-alu.z80
                    > USED AT LINE 194 IN core-alu.z80
                    > USED AT LINE 236 IN core-alu.z80
HEADER_ANDD:        0080 DEFINED AT LINE 6
                    > USED AT LINE 9
ANDD:               0086 DEFINED AT LINE 13
                    > USED AT LINE 5 IN core-extra.z80
                    > USED AT LINE 18 IN core-extra.z80
                    > USED AT LINE 29 IN core-extra.z80
HEADER_ORR:         0099 DEFINED AT LINE 6
                    > USED AT LINE 9
ORR:                009E DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-interpreter.z80
                    > USED AT LINE 210 IN core-interpreter.z80
HEADER_XORR:        00B1 DEFINED AT LINE 6
                    > USED AT LINE 9
XORR:               00B7 DEFINED AT LINE 13
                    > USED AT LINE 82 IN core-alu.z80
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 189 IN core-alu.z80
                    > USED AT LINE 235 IN core-alu.z80
HEADER_PLUS:        00CA DEFINED AT LINE 6
                    > USED AT LINE 9
PLUS:               00CE DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 160 IN core-alu.z80
                    > USED AT LINE 19 IN core-interpreter.z80
HEADER_INVER:       00DE DEFINED AT LINE 6
                    > USED AT LINE 9
INVER:              00E4 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 63 IN core-alu.z80
HEADER_NEGAT:       00ED DEFINED AT LINE 6
                    > USED AT LINE 9
NEGAT:              00F6 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 75 IN core-alu.z80
                    > USED AT LINE 156 IN core-alu.z80
                    > USED AT LINE 202 IN core-alu.z80
                    > USED AT LINE 207 IN core-alu.z80
                    > USED AT LINE 238 IN core-alu.z80
HEADER_DNEGA:       00FD DEFINED AT LINE 6
                    > USED AT LINE 9
DNEGA:              0107 DEFINED AT LINE 13
HEADER_SUBB:        011A DEFINED AT LINE 6
                    > USED AT LINE 9
SUBB:               011E DEFINED AT LINE 13
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 6 IN core-utilities.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_ABS:         0125 DEFINED AT LINE 6
                    > USED AT LINE 9
ABS:                012B DEFINED AT LINE 13
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
ABS1:               0136 DEFINED AT LINE 76 IN core-alu.z80
HEADER_EQUAL:       0138 DEFINED AT LINE 6
                    > USED AT LINE 9
EQUAL:              013C DEFINED AT LINE 13
EQU1:               0149 DEFINED AT LINE 85 IN core-alu.z80
                    > USED AT LINE 83 IN core-alu.z80
HEADER_ULESS:       014F DEFINED AT LINE 6
                    > USED AT LINE 9
ULESS:              0154 DEFINED AT LINE 13
                    > USED AT LINE 154 IN core-alu.z80
ULES1:              0167 DEFINED AT LINE 95 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
HEADER_LESS:        016D DEFINED AT LINE 6
                    > USED AT LINE 9
LESS:               0171 DEFINED AT LINE 13
                    > USED AT LINE 111 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
LESS1:              0182 DEFINED AT LINE 104 IN core-alu.z80
HEADER_GREATERTHAN: 0188 DEFINED AT LINE 6
                    > USED AT LINE 9
GREATERTHAN:        018C DEFINED AT LINE 13
HEADER_MAX:         01A4 DEFINED AT LINE 6
                    > USED AT LINE 9
MAX:                01AA DEFINED AT LINE 13
MAX1:               01B5 DEFINED AT LINE 118 IN core-alu.z80
HEADER_MIN:         01B9 DEFINED AT LINE 6
                    > USED AT LINE 9
MIN:                01BF DEFINED AT LINE 13
MIN1:               01CC DEFINED AT LINE 127 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
HEADER_WITHI:       01D0 DEFINED AT LINE 6
                    > USED AT LINE 9
WITHI:              01D9 DEFINED AT LINE 13
HEADER_UPLUS:       01E8 DEFINED AT LINE 6
                    > USED AT LINE 9
UPLUS:              01EE DEFINED AT LINE 13
                    > USED AT LINE 162 IN core-alu.z80
UMP2:               0208 DEFINED AT LINE 145 IN core-alu.z80
UMP1:               0209 DEFINED AT LINE 147 IN core-alu.z80
                    > USED AT LINE 144 IN core-alu.z80
HEADER_UMMOD:       020C DEFINED AT LINE 6
                    > USED AT LINE 9
UMMOD:              0215 DEFINED AT LINE 13
UMM1:               0226 DEFINED AT LINE 157 IN core-alu.z80
                    > USED AT LINE 170 IN core-alu.z80
UMM2:               025C DEFINED AT LINE 166 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
UMM3:               025E DEFINED AT LINE 168 IN core-alu.z80
                    > USED AT LINE 165 IN core-alu.z80
UMM4:               026A DEFINED AT LINE 172 IN core-alu.z80
                    > USED AT LINE 155 IN core-alu.z80
HEADER_USLASHMOD:   0276 DEFINED AT LINE 6
                    > USED AT LINE 9
USLASHMOD:          027E DEFINED AT LINE 13
                    > USED AT LINE 198 IN core-alu.z80
HEADER_SLASHMOD:    029A DEFINED AT LINE 6
                    > USED AT LINE 9
SLASHMOD:           02A1 DEFINED AT LINE 13
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 217 IN core-alu.z80
CUR_ADR:            2D8C DEFINED AT LINE 63
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
HEADER_MOD:         02D5 DEFINED AT LINE 6
                    > USED AT LINE 9
MOD:                02DB DEFINED AT LINE 13
HEADER_SLASH:       02E2 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASH:              02E6 DEFINED AT LINE 13
HEADER_USTAR:       02EF DEFINED AT LINE 6
                    > USED AT LINE 9
USTAR:              02F4 DEFINED AT LINE 13
                    > USED AT LINE 233 IN core-alu.z80
HEADER_STAR:        030E DEFINED AT LINE 6
                    > USED AT LINE 9
STAR:               0312 DEFINED AT LINE 13
HEADER_CELLP:       0332 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLP:              033A DEFINED AT LINE 13
                    > USED AT LINE 22 IN core-compiler.z80
HEADER_CELLM:       033D DEFINED AT LINE 6
                    > USED AT LINE 9
CELLM:              0345 DEFINED AT LINE 13
HEADER_CELLS:       0348 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLS:              0350 DEFINED AT LINE 13
HEADER_ZEQUAL:      0353 DEFINED AT LINE 6
                    > USED AT LINE 9
ZEQUAL:             0358 DEFINED AT LINE 13
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 184 IN core-compiler.z80
                    > USED AT LINE 197 IN core-compiler.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 187 IN core-interpreter.z80
                    > USED AT LINE 206 IN core-interpreter.z80
                    > USED AT LINE 91
L_M_832S256:        0360 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ZNEQU:       0367 DEFINED AT LINE 6
                    > USED AT LINE 9
ZNEQU:              036D DEFINED AT LINE 13
                    > USED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 174 IN core-interpreter.z80
L_M_839S264:        0375 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ONEP:        037B DEFINED AT LINE 6
                    > USED AT LINE 9
ONEP:               0380 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 70 IN core-compiler.z80
                    > USED AT LINE 86 IN core-compiler.z80
                    > USED AT LINE 154 IN core-compiler.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_ONEM:        0384 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEM:               0389 DEFINED AT LINE 13
HEADER_TWOP:        038D DEFINED AT LINE 6
                    > USED AT LINE 9
TWOP:               0392 DEFINED AT LINE 13
                    > USED AT LINE 244 IN core-alu.z80
HEADER_TWOM:        0397 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOM:               039C DEFINED AT LINE 13
                    > USED AT LINE 247 IN core-alu.z80
HEADER_TWOST:       03A1 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOST:              03A6 DEFINED AT LINE 13
                    > USED AT LINE 251 IN core-alu.z80
HEADER_TWOSLASH:    03AD DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSLASH:           03B2 DEFINED AT LINE 13
NEGATENUM:          03B9 DEFINED AT LINE 307 IN core-alu.z80
                    > USED AT LINE 47 IN core-format.z80
                    > USED AT LINE 165 IN core-format.z80
DIVIDEWORDBYBYTE:   03C1 DEFINED AT LINE 324 IN core-alu.z80
                    > USED AT LINE 53 IN core-format.z80
L_M_892S327:        03C9 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_895S330:        03D1 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_900S335:        03DD DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   03E2 DEFINED AT LINE 350 IN core-alu.z80
                    > USED AT LINE 181 IN core-alu.z80
L_M_918S355:        03EE DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_922S359:        03F9 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_932S369:        0408 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_936S373:        0413 DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   041C DEFINED AT LINE 392 IN core-alu.z80
                    > USED AT LINE 224 IN core-alu.z80
                    > USED AT LINE 123 IN core-format.z80
                    > USED AT LINE 153 IN core-format.z80
L_M_957S396:        0427 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_962S401:        0435 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_COMPI:       043E DEFINED AT LINE 6
                    > USED AT LINE 9
COMPI:              0448 DEFINED AT LINE 13
HEADER_COLON:       0457 DEFINED AT LINE 6
                    > USED AT LINE 9
COLON:              045B DEFINED AT LINE 13
HEADER_SEMICOLON:   047F DEFINED AT LINE 6
                    > USED AT LINE 9
SEMICOLON:          0483 DEFINED AT LINE 13
HEADER_COLONNONAME: 0497 DEFINED AT LINE 6
                    > USED AT LINE 9
COLONNONAME:        04A1 DEFINED AT LINE 13
HEADER_VARIABLE:    04B3 DEFINED AT LINE 6
                    > USED AT LINE 9
VARIABLE:           04BE DEFINED AT LINE 13
HEADER_BUFFERCOLON: 04D4 DEFINED AT LINE 6
                    > USED AT LINE 9
BUFFERCOLON:        04DE DEFINED AT LINE 13
HEADER_CREATE:      04EE DEFINED AT LINE 6
                    > USED AT LINE 9
CREATE:             04F7 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-compiler.z80
                    > USED AT LINE 92 IN core-compiler.z80
XCREATE:            0521 DEFINED AT LINE 74 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
HEADER_DOES:        0529 DEFINED AT LINE 6
                    > USED AT LINE 9
DOES:               0531 DEFINED AT LINE 13
HEADER_CONSTANT:    0557 DEFINED AT LINE 6
                    > USED AT LINE 9
CONSTANT:           0562 DEFINED AT LINE 13
                    > USED AT LINE 54 IN core-compiler.z80
                    > USED AT LINE 61 IN core-compiler.z80
HEADER_TICK:        0573 DEFINED AT LINE 6
                    > USED AT LINE 9
TICK:               0577 DEFINED AT LINE 13
HEADER_IMMEDIATE:   0591 DEFINED AT LINE 6
                    > USED AT LINE 9
IMMEDIATE:          059D DEFINED AT LINE 13
HEADER_FIND:        05A9 DEFINED AT LINE 6
                    > USED AT LINE 9
FIND:               05B0 DEFINED AT LINE 13
HEADER_HIDDEN:      05C2 DEFINED AT LINE 6
                    > USED AT LINE 9
HIDDEN:             05CB DEFINED AT LINE 13
HEADER_LBRAC:       05E0 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRAC:              05E4 DEFINED AT LINE 13
                    > USED AT LINE 39 IN core-compiler.z80
HEADER_RBRAC:       05ED DEFINED AT LINE 6
                    > USED AT LINE 9
RBRAC:              05F1 DEFINED AT LINE 13
                    > USED AT LINE 32 IN core-compiler.z80
                    > USED AT LINE 46 IN core-compiler.z80
DODOES:             05FA DEFINED AT LINE 141 IN core-compiler.z80
                    > USED AT LINE 82 IN core-compiler.z80
XDOES:              060A DEFINED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 81 IN core-compiler.z80
HEADER_POSTPONE:    0624 DEFINED AT LINE 6
                    > USED AT LINE 9
POSTPONE:           062F DEFINED AT LINE 13
POSTPONETOKEN:      064D DEFINED AT LINE 168 IN core-compiler.z80
                    > USED AT LINE 164 IN core-compiler.z80
POSTPONEWORD:       0669 DEFINED AT LINE 179 IN core-compiler.z80
                    > USED AT LINE 173 IN core-compiler.z80
POSTPONELITERAL:    06A5 DEFINED AT LINE 194 IN core-compiler.z80
                    > USED AT LINE 175 IN core-compiler.z80
HEADER_IF:          06D6 DEFINED AT LINE 6
                    > USED AT LINE 9
IF:                 06DB DEFINED AT LINE 13
HEADER_ELSE:        06F1 DEFINED AT LINE 6
                    > USED AT LINE 9
ELSE:               06F8 DEFINED AT LINE 13
HEADER_ENDIF:       0712 DEFINED AT LINE 6
                    > USED AT LINE 9
ENDIF:              071A DEFINED AT LINE 13
XENDIF:             0724 DEFINED AT LINE 23 IN core-control.z80
                    > USED AT LINE 14 IN core-control.z80
                    > USED AT LINE 19 IN core-control.z80
HEADER_BEGIN:       0738 DEFINED AT LINE 6
                    > USED AT LINE 9
BEGIN:              0740 DEFINED AT LINE 13
HEADER_WHILE:       074C DEFINED AT LINE 6
                    > USED AT LINE 9
WHILE:              0754 DEFINED AT LINE 13
HEADER_REPEAT:      076A DEFINED AT LINE 6
                    > USED AT LINE 9
REPEAT:             0773 DEFINED AT LINE 13
HEADER_QBRAN:       0799 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN:              07A3 DEFINED AT LINE 13
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 91
HEADER_BRAN:        07B7 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN:               07C0 DEFINED AT LINE 13
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 60 IN core-control.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
HEADER_QBRAN1:      07C9 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN1:             07D4 DEFINED AT LINE 13
                    > USED AT LINE 83 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
                    > USED AT LINE 155 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
HEADER_BRAN1:       07E8 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN1:              07F2 DEFINED AT LINE 13
                    > USED AT LINE 165 IN core-alu.z80
                    > USED AT LINE 79 IN core-control.z80
HEADER_DONXT:       07FA DEFINED AT LINE 6
                    > USED AT LINE 9
DONXT:              0801 DEFINED AT LINE 13
                    > USED AT LINE 170 IN core-alu.z80
DECHILO:            0816 DEFINED AT LINE 113 IN core-control.z80
                    > USED AT LINE 106 IN core-control.z80
DECLOW:             0818 DEFINED AT LINE 116 IN core-control.z80
                    > USED AT LINE 102 IN core-control.z80
HEADER_VERSION:     0821 DEFINED AT LINE 6
                    > USED AT LINE 9
VERSION:            082B DEFINED AT LINE 13
HEADER_RZ:          083B DEFINED AT LINE 6
                    > USED AT LINE 9
RZ:                 0840 DEFINED AT LINE 13
HEADER___MSK_IMMED: 0850 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_HIDDEN: 086C DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_LENGTH: 0889 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER_TRUE:        08A6 DEFINED AT LINE 6
                    > USED AT LINE 9
TRUE:               08AD DEFINED AT LINE 13
HEADER_FALSE:       08BD DEFINED AT LINE 6
                    > USED AT LINE 9
FALSE:              08C5 DEFINED AT LINE 13
HEADER_PAD:         08D5 DEFINED AT LINE 6
                    > USED AT LINE 9
PAD:                08DB DEFINED AT LINE 13
HEADER_HERE:        08EB DEFINED AT LINE 6
                    > USED AT LINE 9
HERE:               08F2 DEFINED AT LINE 13
                    > USED AT LINE 27 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 52 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 66 IN core-compiler.z80
                    > USED AT LINE 83 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 49 IN core-memory.z80
HEADER_INTP_STOP:   0902 DEFINED AT LINE 6
                    > USED AT LINE 9
INTP_STOP:          090E DEFINED AT LINE 13
HEADER_STATE:       091E DEFINED AT LINE 6
                    > USED AT LINE 9
STATE:              0926 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
HEADER_NESTING:     0936 DEFINED AT LINE 6
                    > USED AT LINE 9
NESTING:            0940 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
HEADER_SP0:         0950 DEFINED AT LINE 6
                    > USED AT LINE 9
SP0:                0956 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
HEADER_BASE:        0966 DEFINED AT LINE 6
                    > USED AT LINE 9
BASE:               096D DEFINED AT LINE 13
HEADER_LATESTSTR:   097D DEFINED AT LINE 6
                    > USED AT LINE 9
LATESTSTR:          0989 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 33 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
HEADER_LBRACE:      0999 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRACE:             099D DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-control.z80
                    > USED AT LINE 34 IN core-control.z80
HEADER_RBRACE:      09C1 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACE:             09C5 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-extra.z80
HEADER_RBRACEEXEC:  09E5 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACEEXEC:         09ED DEFINED AT LINE 13
                    > USED AT LINE 20 IN core-control.z80
                    > USED AT LINE 53 IN core-control.z80
HEADER_DOT:         0A0F DEFINED AT LINE 6
                    > USED AT LINE 9
DOT:                0A13 DEFINED AT LINE 13
PRINTNUM:           0A38 DEFINED AT LINE 18 IN core-format.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
FORMATNUM:          0A51 DEFINED AT LINE 39 IN core-format.z80
                    > USED AT LINE 9 IN core-format.z80
                    > USED AT LINE 26 IN core-format.z80
L_M_1349S42:        0A59 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1357S51:        0A67 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1366S60:        0A7B DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1370S64:        0A86 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           0A96 DEFINED AT LINE 87 IN core-format.z80
                    > USED AT LINE 174 IN core-format.z80
L_M_1398S97:        0AAA DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1408S107:       0ABC DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1414S113:       0ACA DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1430S130:       0AE5 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1434S134:       0AF1 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0B1C DEFINED AT LINE 160 IN core-format.z80
                    > USED AT LINE 132 IN core-format.z80
L_M_1460S163:       0B25 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_NUMBER:      0B2E DEFINED AT LINE 6
                    > USED AT LINE 9
NUMBER:             0B37 DEFINED AT LINE 13
                    > USED AT LINE 197 IN core-compiler.z80
                    > USED AT LINE 206 IN core-interpreter.z80
HEADER_DECIMAL:     0B51 DEFINED AT LINE 6
                    > USED AT LINE 9
DECIMAL:            0B5B DEFINED AT LINE 13
HEADER_HEX:         0B69 DEFINED AT LINE 6
                    > USED AT LINE 9
HEX:                0B6F DEFINED AT LINE 13
HEADER_QUIT:        0B7D DEFINED AT LINE 6
                    > USED AT LINE 9
QUIT:               0B84 DEFINED AT LINE 13
HEADER_WORD:        0B92 DEFINED AT LINE 6
                    > USED AT LINE 9
WORD:               0B99 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 100 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_TCFA:        0BA9 DEFINED AT LINE 6
                    > USED AT LINE 9
TCFA:               0BB0 DEFINED AT LINE 13
                    > USED AT LINE 187 IN core-compiler.z80
                    > USED AT LINE 190 IN core-compiler.z80
                    > USED AT LINE 189 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_EXECUTE:     0BC6 DEFINED AT LINE 6
                    > USED AT LINE 9
EXECUTE:            0BD0 DEFINED AT LINE 13
                    > USED AT LINE 33 IN core-extra.z80
                    > USED AT LINE 196 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_INTERPRET:   0BDD DEFINED AT LINE 6
                    > USED AT LINE 9
INTERPRET:          0BE9 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-interpreter.z80
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
LOOKUP:             0C14 DEFINED AT LINE 47 IN core-interpreter.z80
                    > USED AT LINE 116 IN core-compiler.z80
L_M_1525S49:        0C1D DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1537S65:        0C2D DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1546S76:        0C3C DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_XWORD:       0C49 DEFINED AT LINE 6
                    > USED AT LINE 9
XWORD:              0C51 DEFINED AT LINE 13
                    > USED AT LINE 11 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-strings.z80
XWORDSKIP:          0C5A DEFINED AT LINE 97 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-interpreter.z80
L_M_1570S103:       0C95 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1572S106:       0C9D DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1574S109:       0CA5 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1580S116:       0CB4 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1581S117:       0CB9 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1584S120:       0CC4 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1591S128:       0CD6 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1594S132:       0CE1 DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0CEE DEFINED AT LINE 144 IN core-interpreter.z80
                    > USED AT LINE 94 IN core-interpreter.z80
L_M_1610S151:       0D1A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1614S155:       0D22 DEFINED AT LINE 73
                    > USED AT LINE 70
INTERPTOKEN:        0D38 DEFINED AT LINE 171 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-interpreter.z80
INTERPWORD:         0D54 DEFINED AT LINE 182 IN core-interpreter.z80
                    > USED AT LINE 176 IN core-interpreter.z80
INTERPLITERAL:      0D98 DEFINED AT LINE 203 IN core-interpreter.z80
                    > USED AT LINE 178 IN core-interpreter.z80
NESTPLUS:           0DD7 DEFINED AT LINE 223 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-extra.z80
NESTMINUS:          0DE1 DEFINED AT LINE 229 IN core-interpreter.z80
                    > USED AT LINE 15 IN core-extra.z80
HEADER_TYPE:        0DEB DEFINED AT LINE 6
                    > USED AT LINE 9
TYPE:               0DF2 DEFINED AT LINE 13
                    > USED AT LINE 205 IN core-compiler.z80
                    > USED AT LINE 219 IN core-interpreter.z80
                    > USED AT LINE 54 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
HEADER_CR:          0E0C DEFINED AT LINE 6
                    > USED AT LINE 9
CR:                 0E11 DEFINED AT LINE 13
HEADER_ACCEPT:      0E17 DEFINED AT LINE 6
                    > USED AT LINE 9
ACCEPT:             0E20 DEFINED AT LINE 13
HEADER_KEY:         0E3C DEFINED AT LINE 6
                    > USED AT LINE 9
KEY:                0E42 DEFINED AT LINE 13
HEADER_EMIT:        0E4B DEFINED AT LINE 6
                    > USED AT LINE 9
EMIT:               0E52 DEFINED AT LINE 13
HEADER_QKEY:        0E63 DEFINED AT LINE 6
                    > USED AT LINE 9
QKEY:               0E6A DEFINED AT LINE 13
L_M_1715S33:        0E80 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_BL:          0E86 DEFINED AT LINE 6
                    > USED AT LINE 9
BL:                 0E8B DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 100 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_PRINT:       0E95 DEFINED AT LINE 6
                    > USED AT LINE 9
PRINT:              0E9D DEFINED AT LINE 13
HEADER_DOTQUOTE:    0EAF DEFINED AT LINE 6
                    > USED AT LINE 9
DOTQUOTE:           0EB4 DEFINED AT LINE 13
INITFORTH:          0ED2 DEFINED AT LINE 1 IN core-kernel.z80
                    > USED AT LINE 34
ENTER:              0F0D DEFINED AT LINE 29 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 3 IN core-kernel.z80
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
ENTER1:             0F0E DEFINED AT LINE 31 IN core-kernel.z80
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
FORTH:              0F15 DEFINED AT LINE 40 IN core-kernel.z80
EXIT:               0F1E DEFINED AT LINE 47 IN core-kernel.z80
                    > USED AT LINE 77 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
EXIT_FORTH:         0F21 DEFINED AT LINE 51 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
HEADER_NOOP:        0F22 DEFINED AT LINE 6
                    > USED AT LINE 9
NOOP:               0F29 DEFINED AT LINE 13
HEADER_STORE:       0F2C DEFINED AT LINE 6
                    > USED AT LINE 9
STORE:              0F30 DEFINED AT LINE 13
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 68 IN core-compiler.z80
                    > USED AT LINE 86 IN core-compiler.z80
                    > USED AT LINE 154 IN core-compiler.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 57 IN core-memory.z80
                    > USED AT LINE 33 IN core-strings.z80
HEADER_FETCH:       0F4D DEFINED AT LINE 6
                    > USED AT LINE 9
FETCH:              0F51 DEFINED AT LINE 13
                    > USED AT LINE 27 IN core-compiler.z80
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 52 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 66 IN core-compiler.z80
                    > USED AT LINE 67 IN core-compiler.z80
                    > USED AT LINE 83 IN core-compiler.z80
                    > USED AT LINE 95 IN core-compiler.z80
                    > USED AT LINE 151 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_CSTORE:      0F5A DEFINED AT LINE 6
                    > USED AT LINE 9
CSTORE:             0F5F DEFINED AT LINE 13
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 153 IN core-compiler.z80
HEADER_CFETCH:      0F79 DEFINED AT LINE 6
                    > USED AT LINE 9
CFETCH:             0F7E DEFINED AT LINE 13
                    > USED AT LINE 70 IN core-compiler.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_RSPSTORE:    0F85 DEFINED AT LINE 6
                    > USED AT LINE 9
RSPSTORE:           0F8C DEFINED AT LINE 13
HEADER_SPFETCH:     0F9C DEFINED AT LINE 6
                    > USED AT LINE 9
SPFETCH:            0FA2 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
HEADER_SPSTORE:     0FB4 DEFINED AT LINE 6
                    > USED AT LINE 9
SPSTORE:            0FBA DEFINED AT LINE 13
HEADER_ALLOT:       0FCC DEFINED AT LINE 6
                    > USED AT LINE 9
ALLOT:              0FD4 DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 40 IN core-strings.z80
HEADER_PSTOR:       0FDE DEFINED AT LINE 6
                    > USED AT LINE 9
PSTOR:              0FE3 DEFINED AT LINE 13
                    > USED AT LINE 49 IN core-memory.z80
HEADER_COMMA:       0FF2 DEFINED AT LINE 6
                    > USED AT LINE 9
COMMA:              0FF6 DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-compiler.z80
                    > USED AT LINE 187 IN core-compiler.z80
                    > USED AT LINE 188 IN core-compiler.z80
                    > USED AT LINE 190 IN core-compiler.z80
                    > USED AT LINE 200 IN core-compiler.z80
                    > USED AT LINE 200 IN core-compiler.z80
                    > USED AT LINE 194 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
HEADER_CCOMMA:      100D DEFINED AT LINE 6
                    > USED AT LINE 9
CCOMMA:             1012 DEFINED AT LINE 13
HEADER_RAT:         103B DEFINED AT LINE 6
                    > USED AT LINE 9
RAT:                1040 DEFINED AT LINE 13
                    > USED AT LINE 161 IN core-alu.z80
TXT_INTRO:          104A DEFINED AT LINE 1 IN core-messages.z80
TXT_NEWLINE:        1070 DEFINED AT LINE 3 IN core-messages.z80
                    > USED AT LINE 267 IN core-serial.z80
TXT_PROMPT:         1073 DEFINED AT LINE 4 IN core-messages.z80
                    > USED AT LINE 52
DONE:               1078 DEFINED AT LINE 7 IN core-messages.z80
                    > USED AT LINE 52
FAILED:             1083 DEFINED AT LINE 8 IN core-messages.z80
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
INITSERIAL:         108E DEFINED AT LINE 3 IN core-serial.z80
                    > USED AT LINE 33
SERIALIN:           10B7 DEFINED AT LINE 25 IN core-serial.z80
                    > USED AT LINE 25
L_M_1893S31:        10C3 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1898S36:        10D1 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1905S43:        10E2 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1915S53:        10F9 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               1101 DEFINED AT LINE 69 IN core-serial.z80
                    > USED AT LINE 146 IN core-serial.z80
PUTC:               110C DEFINED AT LINE 115 IN core-serial.z80
                    > USED AT LINE 25 IN core-io.z80
                    > USED AT LINE 154 IN core-serial.z80
                    > USED AT LINE 157 IN core-serial.z80
                    > USED AT LINE 165 IN core-serial.z80
                    > USED AT LINE 190 IN core-serial.z80
                    > USED AT LINE 275 IN core-serial.z80
                    > USED AT LINE 43 IN core-utilities.z80
L_M_1973S117:       1112 DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         1120 DEFINED AT LINE 126 IN core-serial.z80
                    > USED AT LINE 31 IN core-io.z80
GETLINE:            1126 DEFINED AT LINE 137 IN core-serial.z80
                    > USED AT LINE 14 IN core-io.z80
                    > USED AT LINE 215 IN core-serial.z80
L_M_1997S144:       114C DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1998S145:       1151 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2001S148:       115C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2003S150:       1164 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2017S164:       1181 DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       1193 DEFINED AT LINE 177 IN core-serial.z80
                    > USED AT LINE 169 IN core-serial.z80
                    > USED AT LINE 171 IN core-serial.z80
                    > USED AT LINE 174 IN core-serial.z80
PRINTROUTINE:       11A2 DEFINED AT LINE 187 IN core-serial.z80
                    > USED AT LINE 244 IN core-serial.z80
                    > USED AT LINE 259 IN core-serial.z80
L_M_2039S188:       11A7 DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             11B6 DEFINED AT LINE 204 IN core-serial.z80
                    > USED AT LINE 104 IN core-interpreter.z80
                    > USED AT LINE 118 IN core-interpreter.z80
                    > USED AT LINE 159 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-io.z80
L_M_2061S212:       11C9 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          11EB DEFINED AT LINE 236 IN core-serial.z80
                    > USED AT LINE 45 IN core-io.z80
                    > USED AT LINE 53
                    > USED AT LINE 268 IN core-serial.z80
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 53
PRINTSTR:           11FA DEFINED AT LINE 255 IN core-serial.z80
                    > USED AT LINE 10 IN core-format.z80
                    > USED AT LINE 27 IN core-format.z80
                    > USED AT LINE 3 IN core-io.z80
                    > USED AT LINE 41 IN core-utilities.z80
PRINTCR:            1204 DEFINED AT LINE 265 IN core-serial.z80
                    > USED AT LINE 8 IN core-io.z80
                    > USED AT LINE 184 IN core-serial.z80
                    > USED AT LINE 49 IN core-utilities.z80
PRINTSPACE:         120D DEFINED AT LINE 272 IN core-serial.z80
                    > USED AT LINE 11 IN core-format.z80
                    > USED AT LINE 28 IN core-format.z80
                    > USED AT LINE 155 IN core-serial.z80
                    > USED AT LINE 42 IN core-utilities.z80
HEADER_LIT:         1215 DEFINED AT LINE 6
                    > USED AT LINE 9
LIT:                121B DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-alu.z80
                    > USED AT LINE 64 IN core-alu.z80
                    > USED AT LINE 84 IN core-alu.z80
                    > USED AT LINE 86 IN core-alu.z80
                    > USED AT LINE 156 IN core-alu.z80
                    > USED AT LINE 174 IN core-alu.z80
                    > USED AT LINE 28 IN core-compiler.z80
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 51 IN core-compiler.z80
                    > USED AT LINE 71 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
                    > USED AT LINE 81 IN core-compiler.z80
                    > USED AT LINE 82 IN core-compiler.z80
                    > USED AT LINE 84 IN core-compiler.z80
                    > USED AT LINE 87 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 183 IN core-compiler.z80
                    > USED AT LINE 186 IN core-compiler.z80
                    > USED AT LINE 186 IN core-compiler.z80
                    > USED AT LINE 188 IN core-compiler.z80
                    > USED AT LINE 199 IN core-compiler.z80
                    > USED AT LINE 199 IN core-compiler.z80
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 12 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 42 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 8 IN core-extra.z80
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 182 IN core-format.z80
                    > USED AT LINE 187 IN core-format.z80
                    > USED AT LINE 9 IN core-interpreter.z80
                    > USED AT LINE 16 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 40 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 24 IN core-strings.z80
                    > USED AT LINE 25 IN core-strings.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 29 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
                    > USED AT LINE 37 IN core-strings.z80
                    > USED AT LINE 38 IN core-strings.z80
                    > USED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 16 IN core-utilities.z80
HEADER_ROT:         122D DEFINED AT LINE 6
                    > USED AT LINE 9
ROT:                1233 DEFINED AT LINE 13
                    > USED AT LINE 200 IN core-alu.z80
HEADER_NROT:        1260 DEFINED AT LINE 6
                    > USED AT LINE 9
NROT:               1267 DEFINED AT LINE 13
                    > USED AT LINE 191 IN core-alu.z80
                    > USED AT LINE 195 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 234 IN core-alu.z80
HEADER_DUPP:        1296 DEFINED AT LINE 6
                    > USED AT LINE 9
DUPP:               129C DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 158 IN core-alu.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 25 IN core-control.z80
                    > USED AT LINE 50 IN core-control.z80
                    > USED AT LINE 31 IN core-extra.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 174 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 11 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_SWAP:        12A9 DEFINED AT LINE 6
                    > USED AT LINE 9
SWAP:               12B0 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 117 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 126 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 199 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
                    > USED AT LINE 217 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
                    > USED AT LINE 181 IN core-compiler.z80
                    > USED AT LINE 13 IN core-control.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 48 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 56 IN core-memory.z80
                    > USED AT LINE 57 IN core-memory.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_DROP:        12C9 DEFINED AT LINE 6
                    > USED AT LINE 9
DROP:               12D0 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 167 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 173 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 233 IN core-alu.z80
                    > USED AT LINE 162 IN core-compiler.z80
                    > USED AT LINE 162 IN core-compiler.z80
                    > USED AT LINE 181 IN core-compiler.z80
                    > USED AT LINE 196 IN core-compiler.z80
                    > USED AT LINE 202 IN core-compiler.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 205 IN core-interpreter.z80
                    > USED AT LINE 216 IN core-interpreter.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 18 IN core-utilities.z80
HEADER_OVER:        12DD DEFINED AT LINE 6
                    > USED AT LINE 9
OVER:               12E4 DEFINED AT LINE 13
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 188 IN core-alu.z80
                    > USED AT LINE 188 IN core-alu.z80
                    > USED AT LINE 193 IN core-alu.z80
                    > USED AT LINE 231 IN core-alu.z80
                    > USED AT LINE 231 IN core-alu.z80
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 153 IN core-compiler.z80
                    > USED AT LINE 170 IN core-compiler.z80
                    > USED AT LINE 170 IN core-compiler.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 56 IN core-memory.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 4 IN core-strings.z80
HEADER_TOR:         1307 DEFINED AT LINE 6
                    > USED AT LINE 9
TOR:                130C DEFINED AT LINE 13
                    > USED AT LINE 63 IN core-alu.z80
                    > USED AT LINE 158 IN core-alu.z80
                    > USED AT LINE 159 IN core-alu.z80
                    > USED AT LINE 159 IN core-alu.z80
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 5 IN core-strings.z80
HEADER_RFROM:       131C DEFINED AT LINE 6
                    > USED AT LINE 9
RFROM:              1321 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 160 IN core-alu.z80
                    > USED AT LINE 161 IN core-alu.z80
                    > USED AT LINE 162 IN core-alu.z80
                    > USED AT LINE 169 IN core-alu.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 76 IN core-compiler.z80
                    > USED AT LINE 94 IN core-compiler.z80
                    > USED AT LINE 101 IN core-compiler.z80
                    > USED AT LINE 150 IN core-compiler.z80
                    > USED AT LINE 3 IN core-strings.z80
HEADER_DDROP:       1331 DEFINED AT LINE 6
                    > USED AT LINE 9
DDROP:              1339 DEFINED AT LINE 13
                    > USED AT LINE 173 IN core-alu.z80
HEADER_DDUP:        1340 DEFINED AT LINE 6
                    > USED AT LINE 9
DDUP:               1347 DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 154 IN core-alu.z80
LITSTR:             134E DEFINED AT LINE 1 IN core-strings.z80
                    > USED AT LINE 203 IN core-compiler.z80
                    > USED AT LINE 217 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-strings.z80
HEADER_COUNT:       1360 DEFINED AT LINE 6
                    > USED AT LINE 9
COUNT:              1368 DEFINED AT LINE 13
                    > USED AT LINE 101 IN core-compiler.z80
                    > USED AT LINE 17 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
                    > USED AT LINE 35 IN core-strings.z80
HEADER_SQUOTE:      137A DEFINED AT LINE 6
                    > USED AT LINE 9
SQUOTE:             137F DEFINED AT LINE 13
HEADER_QT:          1381 DEFINED AT LINE 6
                    > USED AT LINE 9
QT:                 1385 DEFINED AT LINE 13
                    > USED AT LINE 51 IN core-io.z80
                    > USED AT LINE 18 IN core-strings.z80
COMPARESTR:         13D9 DEFINED AT LINE 53 IN core-strings.z80
                    > USED AT LINE 71 IN core-interpreter.z80
L_M_2230S56:        13E1 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2231S57:        13E6 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2235S61:        13F0 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        13FF DEFINED AT LINE 6
                    > USED AT LINE 9
PACK:               1406 DEFINED AT LINE 13
HEADER_DOTS:        1426 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTS:               142B DEFINED AT LINE 13
HEADER_WORDS:       147D DEFINED AT LINE 6
                    > USED AT LINE 9
WORDS:              1485 DEFINED AT LINE 13
LISTWORDS:          148D DEFINED AT LINE 28 IN core-utilities.z80
                    > USED AT LINE 24 IN core-utilities.z80
L_M_2285S30:        1496 DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_LATEST:      14B9 DEFINED AT LINE 6
                    > USED AT LINE 19 IN core-kernel.z80
                    > USED AT LINE 9
LATEST:             14C2 DEFINED AT LINE 13
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
                    > USED AT LINE 67 IN core-compiler.z80
                    > USED AT LINE 68 IN core-compiler.z80
                    > USED AT LINE 151 IN core-compiler.z80
TESTS_START:        2000 DEFINED AT LINE 67
                    > USED AT LINE 37
TST_TEXTM_2355S7:   2012 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2357S9:   2048 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2359S11:  206F DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2361S13:   20A5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2361S13:   20AD DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2362S15:  20BF DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2364S17:  20E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2366S19:   211F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2366S19:   2127 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2367S21:  2139 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2369S23:  216B DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2371S25:  218A DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2373S28:  21A7 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2375S30:  21DB DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2377S32:  2201 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2379S35:  2220 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2381S37:  2249 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2383S39:   227F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2383S39:   2285 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2385S42:  22A4 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2387S44:   22DC DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2387S44:   22EC DEFINED AT LINE 37
                    > USED AT LINE 26
TE_FAILM_2388S45:   2317 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2388S45:   2329 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2389S47:  233B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2391S49:   2373 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2391S49:   2381 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2392S51:  2393 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2394S53:  23C0 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2396S55:   23F9 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2396S55:   240D DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2397S57:  241F DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2400S60:  2453 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2402S62:  2477 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2404S64:   24B0 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2404S64:   24C2 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2405S66:  24D4 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2408S69:  250A DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2410S71:   2542 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2410S71:   2552 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2413S75:  257E DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2415S78:  25B2 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2417S80:   25EE DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2417S80:   2605 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2419S83:  2624 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2421S85:   2660 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2421S85:   2677 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2422S87:  2689 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2425S92:  26D3 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2427S94:   270F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2427S94:   2719 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2429S98:  2738 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2431S100:  2774 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2431S100:  277E DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2432S102: 2790 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2435S105: 27E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2437S107:  2826 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2437S107:  283B DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2438S110: 284D DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2440S112:  2885 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2440S112:  2899 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2441S114: 28AB DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2443S116:  28E5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2443S116:  28EF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2444S118: 2901 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2448S123: 2940 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2450S125:  2978 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2450S125:  2984 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2451S127: 2996 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2453S130: 2A2C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2455S133: 2A4C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2457S135: 2A77 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2459S137: 2A9B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2461S139:  2AD3 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2461S139:  2ADF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2462S141: 2AF1 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2464S143: 2B13 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2466S145:  2B4B DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2466S145:  2B57 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2467S146: 2B69 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2593S18:  2B89 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2595S20:   2BCA DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2595S20:   2BDA DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2596S22:  2BEC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2598S24:   2C2D DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2598S24:   2C44 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2599S1:   2C56 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2601S3:    2C94 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2601S3:    2CA4 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2602S5:   2CB6 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2604S8:   2CDC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2606S10:   2D18 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2606S10:   2D2C DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2607S12:  2D3E DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2609S14:   2D79 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2609S14:   2D8C DEFINED AT LINE 37
                    > USED AT LINE 26
RET_STACK:          2EA7 DEFINED AT LINE 3 IN variables.z80
                    > USED AT LINE 32
                    > USED AT LINE 26
RPP:                2EA7 DEFINED AT LINE 4 IN variables.z80
DATA_STACK:         2EA7 DEFINED AT LINE 6 IN variables.z80
                    > USED AT LINE 2 IN core-kernel.z80
SPP:                2FA7 DEFINED AT LINE 8 IN variables.z80
SERBUF:             3000 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 7 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 44 IN core-serial.z80
SERINPTR:           303F DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 8 IN core-serial.z80
                    > USED AT LINE 39 IN core-serial.z80
                    > USED AT LINE 46 IN core-serial.z80
SERRDPTR:           3041 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 9 IN core-serial.z80
SERBUFUSED:         3043 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 5 IN core-serial.z80
                    > USED AT LINE 34 IN core-serial.z80
                    > USED AT LINE 49 IN core-serial.z80
                    > USED AT LINE 51 IN core-serial.z80
                    > USED AT LINE 127 IN core-serial.z80
LINEBUFSTART:       3045 DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 12 IN core-serial.z80
                    > USED AT LINE 213 IN core-serial.z80
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
LINEBUFSIZE:        3047 DEFINED AT LINE 16 IN variables.z80
                    > USED AT LINE 17 IN core-serial.z80
                    > USED AT LINE 214 IN core-serial.z80
CURRKEY:            3049 DEFINED AT LINE 17 IN variables.z80
                    > USED AT LINE 13 IN core-serial.z80
                    > USED AT LINE 208 IN core-serial.z80
                    > USED AT LINE 217 IN core-serial.z80
                    > USED AT LINE 222 IN core-serial.z80
                    > USED AT LINE 225 IN core-serial.z80
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
LINEBUFTOP:         304B DEFINED AT LINE 18 IN variables.z80
                    > USED AT LINE 14 IN core-serial.z80
                    > USED AT LINE 209 IN core-serial.z80
                    > USED AT LINE 220 IN core-serial.z80
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
LINEBUF:            304D DEFINED AT LINE 19 IN variables.z80
                    > USED AT LINE 11 IN core-serial.z80
                    > USED AT LINE 216 IN core-serial.z80
WORDBUF:            30CD DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 8 IN core-format.z80
                    > USED AT LINE 25 IN core-format.z80
                    > USED AT LINE 71 IN core-format.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
WORDBUF2:           310D DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 29 IN core-strings.z80
VAR_PAD:            314D DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 19
EXITADDR:           324D DEFINED AT LINE 25 IN variables.z80
                    > USED AT LINE 41 IN core-kernel.z80
                    > USED AT LINE 43 IN core-kernel.z80
IS_LITERAL:         324F DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 9 IN core-kernel.z80
VAR_HERE:           3251 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 17 IN core-kernel.z80
                    > USED AT LINE 72 IN core-memory.z80
                    > USED AT LINE 74 IN core-memory.z80
                    > USED AT LINE 80 IN core-memory.z80
                    > USED AT LINE 83 IN core-memory.z80
VAR_INTP_STOP:      3253 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 8 IN core-kernel.z80
VAR_STATE:          3255 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 133 IN core-compiler.z80
                    > USED AT LINE 138 IN core-compiler.z80
                    > USED AT LINE 19
                    > USED AT LINE 11 IN core-kernel.z80
VAR_NESTING:        3257 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 224 IN core-interpreter.z80
                    > USED AT LINE 226 IN core-interpreter.z80
                    > USED AT LINE 230 IN core-interpreter.z80
                    > USED AT LINE 232 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-kernel.z80
VAR_SP0:            3259 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 4 IN core-kernel.z80
VAR_BASE:           325B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 6 IN core-format.z80
                    > USED AT LINE 23 IN core-format.z80
                    > USED AT LINE 122 IN core-format.z80
                    > USED AT LINE 140 IN core-format.z80
                    > USED AT LINE 152 IN core-format.z80
                    > USED AT LINE 14 IN core-kernel.z80
VAR_LATEST_STR:     325D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 21 IN core-kernel.z80
VAR_LATEST:         325F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 105 IN core-compiler.z80
                    > USED AT LINE 48 IN core-interpreter.z80
                    > USED AT LINE 20 IN core-kernel.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 19
CHAR_POINTER:       3261 DEFINED AT LINE 40 IN variables.z80
                    > USED AT LINE 73 IN core-serial.z80
                    > USED AT LINE 76 IN core-serial.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
START_USER:         3263 DEFINED AT LINE 82
                    > USED AT LINE 16 IN core-kernel.z80
