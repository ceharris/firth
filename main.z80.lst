0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   1   
0000                MEM_SIZE:   EQU   $10000   ; MEM is 64K
0000                ROM_SIZE:   EQU   $2000   ; ROM is 8K
0000                RAM_SIZE:   EQU   MEM_SIZE - ROM_SIZE   ; RAM is 64K - 8K
0000                BM:       EQU   0   ; bottom of ROM memory
0000                EM:       EQU   BM + MEM_SIZE   
0000                START_ROM:   EQU   BM   ; inclusive
0000                END_ROM:   EQU   BM + ROM_SIZE   ; exclusive
0000                START_RAM:   EQU   BM + ROM_SIZE   ; inclusive
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   ; exclusive
0000                RET_STACK_SIZE:   EQU   $100   ; return stack
0000                DATA_STACK_SIZE:   EQU   $100   ; data stack
0000                PAD_SIZE:   EQU   $100   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro MCODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro MVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro MCONST,name,namelen,flags,label,value
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRAN, 6
0000                 DW BRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro ENTER,
0000                             ; 
0000                 rst $08                             ; enter forth
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 67 00               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 63 0E               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 0F 10               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                START:       
0067   31 A7 2E               LD   SP,RET_STACK   ; Initialise the return stack.
006A   CD E6 0F               CALL   initSerial   
006D   CD 28 0E               CALL   initForth   
0070                          IF   TESTMODE   
0070   C3 00 20               JP   TESTS_START   
0073                          ELSE      
                              ;*Macro unroll:  PRINT_STR TXT_INTRO
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,TXT_INTRO   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              JP   QUIT   
0073                          ENDIF      
0073                             ;   0<          ( n -- t )
0073                             ;               Return true if n is negative.
0073                          ;*Macro unroll: mCODE '0<',2,0,ZLESS
0073                HEADER_ZLESS:      
0073   00 00                  DW   link   
0075                LINK:     .SET   HEADER_ZLESS   
0075   02                     DB   0 + 2   
0076   30 3C                  DB   "0<"   
0078                ZLESS:       
0078   CB 20                  SLA   B   ; sign bit -> cy flag
007A   9F                     SBC   A,A   ; propagate cy through A
007B   47                     LD   B,A   ; put 0000 or FFFF in TOS
007C   4F                     LD   C,A   
007D                          ;*Macro unroll: 	NEXT
007D   C3 63 0E               JP   enter   
0080                             ; and    x1 x2 -- x3            logical and
0080                          ;*Macro unroll: mCODE "and",3,0,ANDD	        ; bitwise and
0080                HEADER_ANDD:      ; bitwise and
0080   73 00                  DW   link   
0082                LINK:     .SET   HEADER_ANDD   
0082   03                     DB   0 + 3   
0083   61 6E 64               DB   "and"   
0086                ANDD:        
0086                          ;*Macro unroll:  PPOP0 H,L
0086   DD 2B                  DEC   IX   
0088   DD 66 00               LD   H,(IX+0)   
008B   DD 2B                  DEC   IX   
008D   DD 6E 00               LD   L,(IX+0)   
0090   78                     LD   A,B   
0091   A4                     AND   H   
0092   47                     LD   B,A   
0093   79                     LD   A,C   
0094   A5                     AND   L   
0095   4F                     LD   C,A   
0096                          ;*Macro unroll:  NEXT
0096   C3 63 0E               JP   enter   
0099                             ; OR    x1 x2 -- x3             logical OR
0099                          ;*Macro unroll: mCODE "or",2,0,ORR	            ; bitwise OR
0099                HEADER_ORR:      ; bitwise OR
0099   80 00                  DW   link   
009B                LINK:     .SET   HEADER_ORR   
009B   02                     DB   0 + 2   
009C   6F 72                  DB   "or"   
009E                ORR:         
009E                          ;*Macro unroll:  ppop0 H,L
009E   DD 2B                  DEC   IX   
00A0   DD 66 00               LD   H,(IX+0)   
00A3   DD 2B                  DEC   IX   
00A5   DD 6E 00               LD   L,(IX+0)   
00A8   78                     LD   A,B   
00A9   B4                     OR   H   
00AA   47                     LD   B,A   
00AB   79                     LD   A,C   
00AC   B5                     OR   L   
00AD   4F                     LD   C,A   
00AE                          ;*Macro unroll:  NEXT
00AE   C3 63 0E               JP   enter   
00B1                             ; xor    x1 x2 -- x3            logical xor
00B1                          ;*Macro unroll: mCODE "xor",3,0,XORR	        ; bitwise xor
00B1                HEADER_XORR:      ; bitwise xor
00B1   99 00                  DW   link   
00B3                LINK:     .SET   HEADER_XORR   
00B3   03                     DB   0 + 3   
00B4   78 6F 72               DB   "xor"   
00B7                XORR:        
00B7                          ;*Macro unroll:  ppop0 H,L
00B7   DD 2B                  DEC   IX   
00B9   DD 66 00               LD   H,(IX+0)   
00BC   DD 2B                  DEC   IX   
00BE   DD 6E 00               LD   L,(IX+0)   
00C1   78                     LD   A,B   
00C2   AC                     XOR   H   
00C3   47                     LD   B,A   
00C4   79                     LD   A,C   
00C5   AD                     XOR   L   
00C6   4F                     LD   C,A   
00C7                          ;*Macro unroll:  NEXT
00C7   C3 63 0E               JP   enter   
00CA                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
00CA                          ;*Macro unroll: mCODE "+",1,0,PLUS
00CA                HEADER_PLUS:      
00CA   B1 00                  DW   link   
00CC                LINK:     .SET   HEADER_PLUS   
00CC   01                     DB   0 + 1   
00CD   2B                     DB   "+"   
00CE                PLUS:        
00CE                          ;*Macro unroll:  ppop0 H,L
00CE   DD 2B                  DEC   IX   
00D0   DD 66 00               LD   H,(IX+0)   
00D3   DD 2B                  DEC   IX   
00D5   DD 6E 00               LD   L,(IX+0)   
00D8   09                     ADD   HL,BC   
00D9                          ;*Macro unroll:  loadWord B,C, H,L
00D9   4D                     LD   C,L   
00DA   44                     LD   B,H   
00DB                          ;*Macro unroll:  NEXT
00DB   C3 63 0E               JP   enter   
00DE                             ; INVERT x1 -- x2               ; bitwise complement
00DE                          ;*Macro unroll: mCODE "not",6,0,INVER
00DE                HEADER_INVER:      
00DE   CA 00                  DW   link   
00E0                LINK:     .SET   HEADER_INVER   
00E0   06                     DB   0 + 6   
00E1   6E 6F 74               DB   "not"   
00E4                INVER:       
00E4                          ;*Macro unroll:  ENTER
00E4   CF                     RST   $08   
00E5   73 11 FF FF B7 00 74 0E DW   LIT,-1,XORR,EXIT   
00ED                             ; negate  n1 -- n2                      negate n1
00ED                          ;*Macro unroll: mCODE "negate",6,0,NEGAT
00ED                HEADER_NEGAT:      
00ED   DE 00                  DW   link   
00EF                LINK:     .SET   HEADER_NEGAT   
00EF   06                     DB   0 + 6   
00F0   6E 65 67 61 74 65      DB   "negate"   
00F6                NEGAT:       
00F6                          ;*Macro unroll:  ENTER
00F6   CF                     RST   $08   
00F7   E4 00 9B 03 74 0E      DW   INVER,ONEP,EXIT   
00FD                             ; negate  n1 -- n2                      negate n1
00FD                          ;*Macro unroll: mCODE "dnegate",7,0,DNEGA
00FD                HEADER_DNEGA:      
00FD   ED 00                  DW   link   
00FF                LINK:     .SET   HEADER_DNEGA   
00FF   07                     DB   0 + 7   
0100   64 6E 65 67 61 74 65   DB   "dnegate"   
0107                DNEGA:       
0107                          ;*Macro unroll:  ENTER
0107   CF                     RST   $08   
0108   E4 00 64 12 E4 00      DW   INVER,TOR,INVER   
010E   73 11 01 00 EE 01      DW   LIT,1,UPLUS   
0114   79 12 CE 00 74 0E      DW   RFROM,PLUS,EXIT   
011A                          ;*Macro unroll: mCODE "-",1,0,SUBB
011A                HEADER_SUBB:      
011A   FD 00                  DW   link   
011C                LINK:     .SET   HEADER_SUBB   
011C   01                     DB   0 + 1   
011D   2D                     DB   "-"   
011E                SUBB:        
011E                          ;*Macro unroll:  ENTER
011E   CF                     RST   $08   
011F   F6 00 CE 00 74 0E      DW   NEGAT,Plus,EXIT   
0125                             ; abs   n -- u                          absolute value
0125                          ;*Macro unroll: mCODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0125                HEADER_ABS:      ; case sensitive for ABS label for some reason
0125   1A 01                  DW   link   
0127                LINK:     .SET   HEADER_ABS   
0127   03                     DB   0 + 3   
0128   61 62 73               DB   "abs"   
012B                ABS:         
012B                          ;*Macro unroll:  ENTER
012B   CF                     RST   $08   
012C   F4 11 78 00 51 07 36 01 DW   DUPP,ZLESS,QBRAN1,ABS1   
0134   F6 00                  DW   NEGAT   
0136                ABS1:        
0136   74 0E                  DW   EXIT   
0138                             ; =      x1 x2 -- flag         test x1=x2
0138                          ;*Macro unroll: mCODE "=",1,0,EQUAL
0138                HEADER_EQUAL:      
0138   25 01                  DW   link   
013A                LINK:     .SET   HEADER_EQUAL   
013A   01                     DB   0 + 1   
013B   3D                     DB   "="   
013C                EQUAL:       
013C                          ;*Macro unroll:  ENTER
013C   CF                     RST   $08   
013D   B7 00                  DW   XORR   
013F   51 07 49 01            DW   QBRAN1,EQU1   
0143   73 11 00 00 74 0E      DW   LIT,0,EXIT   ;false flag
0149                EQU1:        
0149   73 11 FF FF 74 0E      DW   LIT,-1,EXIT   ;true flag
014F                             ;   U<          ( u u -- t )
014F                             ;               Unsigned compare of top two items.
014F                          ;*Macro unroll: mCODE "U<",2,0,ULESS	        ; less than
014F                HEADER_ULESS:      ; less than
014F   38 01                  DW   link   
0151                LINK:     .SET   HEADER_ULESS   
0151   02                     DB   0 + 2   
0152   55 3C                  DB   "U<"   
0154                ULESS:       
0154                          ;*Macro unroll:  ENTER
0154   CF                     RST   $08   
0155   9F 12 B7 00 78 00      DW   DDUP,XORR,ZLESS   
015B   51 07 67 01            DW   QBRAN1,ULES1   
015F   08 12 28 12 78 00 74 0E DW   SWAP,DROP,ZLESS,EXIT   
0167                ULES1:       
0167   1E 01 78 00 74 0E      DW   SUBB,ZLESS,EXIT   
016D                             ;   <           ( n1 n2 -- t )
016D                             ;               is less than
016D                          ;*Macro unroll: mCODE "<",1,0,LESS	        ; less than
016D                HEADER_LESS:      ; less than
016D   4F 01                  DW   link   
016F                LINK:     .SET   HEADER_LESS   
016F   01                     DB   0 + 1   
0170   3C                     DB   "<"   
0171                LESS:        
0171                          ;*Macro unroll:  ENTER
0171   CF                     RST   $08   
0172   9F 12 B7 00 78 00 51 07 82 01 DW   DDUP,XORR,ZLESS,QBRAN1,LESS1   
017C   28 12 78 00 74 0E      DW   DROP,ZLESS,EXIT   
0182                LESS1:       
0182   1E 01 78 00 74 0E      DW   SUBB,ZLESS,EXIT   
0188                             ; >      n1 n2 -- flag          test n1 > n2
0188                          ;*Macro unroll: mCODE ">",1,0,GREATERTHAN	        ; less than
0188                HEADER_GREATERTHAN:      ; less than
0188   6D 01                  DW   link   
018A                LINK:     .SET   HEADER_GREATERTHAN   
018A   01                     DB   0 + 1   
018B   3E                     DB   ">"   
018C                GREATERTHAN:      
018C                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
018C   DD 2B                  DEC   IX   ; swap operands
018E   DD 66 00               LD   H,(IX+0)   
0191   DD 2B                  DEC   IX   
0193   DD 6E 00               LD   L,(IX+0)   
0196                          ;*Macro unroll:  ppush H,L
0196                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0196   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0199   DD 23                  INC   IX   
019B   DD 70 00               LD   (IX+0),B   
019E   DD 23                  INC   IX   
01A0   44                     LD   B,H   
01A1   4D                     LD   C,L   
01A2   18 CD                  JR   LESS   
01A4                             ; max   n1 n2 -- u                      maximum
01A4                          ;*Macro unroll: mCODE "max",3,0,MAX
01A4                HEADER_MAX:      
01A4   88 01                  DW   link   
01A6                LINK:     .SET   HEADER_MAX   
01A6   03                     DB   0 + 3   
01A7   6D 61 78               DB   "max"   
01AA                MAX:         
01AA                          ;*Macro unroll:  ENTER
01AA   CF                     RST   $08   
01AB   9F 12 71 01 51 07 B5 01 DW   DDUP,LESS,QBRAN1,MAX1   
01B3   08 12                  DW   SWAP   
01B5                MAX1:        
01B5   28 12 74 0E            DW   DROP,EXIT   
01B9                             ; min   n1 n2 -- u                      minimum
01B9                          ;*Macro unroll: mCODE "min",3,0,MIN
01B9                HEADER_MIN:      
01B9   A4 01                  DW   link   
01BB                LINK:     .SET   HEADER_MIN   
01BB   03                     DB   0 + 3   
01BC   6D 69 6E               DB   "min"   
01BF                MIN:         
01BF                          ;*Macro unroll:  ENTER
01BF   CF                     RST   $08   
01C0   9F 12 08 12 71 01      DW   DDUP,SWAP,LESS   
01C6   51 07 CC 01            DW   QBRAN1,MIN1   
01CA   08 12                  DW   SWAP   
01CC                MIN1:        
01CC   28 12 74 0E            DW   DROP,EXIT   
01D0                             ;   WITHIN      ( u ul uh -- t )
01D0                             ;               Return true if u is within the range of ul and uh.
01D0                          ;*Macro unroll: mCODE 'WITHIN',6,0,WITHI
01D0                HEADER_WITHI:      
01D0   B9 01                  DW   link   
01D2                LINK:     .SET   HEADER_WITHI   
01D2   06                     DB   0 + 6   
01D3   57 49 54 48 49 4E      DB   "WITHIN"   
01D9                WITHI:       
01D9                          ;*Macro unroll: 	ENTER
01D9   CF                     RST   $08   
01DA   3C 12 1E 01 64 12      DW   OVER,SUBB,TOR   ;ul <= u < uh
01E0   1E 01 79 12 54 01 74 0E DW   SUBB,RFROM,ULESS,EXIT   
01E8                             ;   UM+         ( w w -- w cy )
01E8                             ;               Add two numbers, return the sum and carry flag.
01E8                          ;*Macro unroll: mCODE "UM+",6,0,UPLUS
01E8                HEADER_UPLUS:      
01E8   D0 01                  DW   link   
01EA                LINK:     .SET   HEADER_UPLUS   
01EA   06                     DB   0 + 6   
01EB   55 4D 2B               DB   "UM+"   
01EE                UPLUS:       
01EE                          ;*Macro unroll:  ppop0 H,L
01EE   DD 2B                  DEC   IX   
01F0   DD 66 00               LD   H,(IX+0)   
01F3   DD 2B                  DEC   IX   
01F5   DD 6E 00               LD   L,(IX+0)   
01F8   09                     ADD   HL,BC   ;11t
01F9                          ;*Macro unroll:  ppush0 H,L
01F9   DD 75 00               LD   (IX+0),L   
01FC   DD 23                  INC   IX   
01FE   DD 74 00               LD   (IX+0),H   
0201   DD 23                  INC   IX   
0203   01 00 00               LD   BC,0   ;10t
0206   30 01                  JR   NC,UMP1   ;12/7t
0208                UMP2:        
0208   03                     INC   BC   ; 6t
0209                UMP1:        
0209                          ;*Macro unroll:  NEXT
0209   C3 63 0E               JP   enter   
020C                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
020C                          ;*Macro unroll: mCODE "u/mod",5,0,USLASHMOD
020C                HEADER_USLASHMOD:      
020C   E8 01                  DW   link   
020E                LINK:     .SET   HEADER_USLASHMOD   
020E   05                     DB   0 + 5   
020F   75 2F 6D 6F 64         DB   "u/mod"   
0214                USLASHMOD:      
0214                          ;*Macro unroll:  ppop D,E                ; DE = divisor
0214   50                     LD   D,B   ; DE = divisor
0215   59                     LD   E,C   
0216                          ;*Macro unroll:  ppop0 B,C
0216   DD 2B                  DEC   IX   
0218   DD 46 00               LD   B,(IX+0)   
021B   DD 2B                  DEC   IX   
021D   DD 4E 00               LD   C,(IX+0)   
0220                             ; BC = dividend
0220   CD F1 02               CALL   divideWordByWord   
0223                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
0223   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
0226   DD 23                  INC   IX   
0228   DD 74 00               LD   (IX+0),H   
022B   DD 23                  INC   IX   
022D                          ;*Macro unroll:  NEXT
022D   C3 63 0E               JP   enter   
0230                          ;*Macro unroll: mCODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
0230                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
0230   0C 02                  DW   link   
0232                LINK:     .SET   HEADER_slashmod   
0232   04                     DB   0 + 4   
0233   2F 6D 6F 64            DB   "/mod"   
0237                SLASHMOD:      
0237                          ;*Macro unroll:  ENTER
0237   CF                     RST   $08   
0238   3C 12 3C 12            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
023C   B7 00                  DW   XORR   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
023E   78 00                  DW   ZLESS   ; true if high bit still set
0240   BF 11                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
0242   3C 12                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
0244   78 00                  DW   ZLESS   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
0246   BF 11                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
0248   2B 01 08 12 2B 01 08 12 DW   ABS,swap,ABS,swap   ; remove sign from both args
0250   14 02                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
0252   08 12                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
0254   8B 11                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
0256                          ;*Macro unroll:  cif
0256   20 07 00 00            DW   QBRAN,0   
025A                          ;*Macro unroll:  CPL_PUSH $
025A                CPL_COUNT:   .SET   CPL_COUNT + 1   
025A                CPL_10:   .SET   CPL_9   
025A                CPL_9:    .SET   CPL_8   
025A                CPL_8:    .SET   CPL_7   
025A                CPL_7:    .SET   CPL_6   
025A                CPL_6:    .SET   CPL_5   
025A                CPL_5:    .SET   CPL_4   
025A                CPL_4:    .SET   CPL_3   
025A                CPL_3:    .SET   CPL_2   
025A                CPL_2:    .SET   CPL_TOP   
025A                CPL_TOP:   .SET   $   
025A   F6 00                  DW   NEGAT   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
025C                          ;*Macro unroll:  cendif
025C                          ;*Macro unroll:  cBRANCH_FWD
025C                CUR_ADR:   .SET   $   
0258                          .ORG   CPL_TOP - 2   
0258   04 00                  DW   CUR_ADR - CPL_TOP + 2   
025C                          .ORG   CUR_ADR   
025C                          ;*Macro unroll:  CPL_POP
025C                CPL_COUNT:   .SET   CPL_COUNT - 1   
025C                CPL_TOP:   .SET   CPL_2   
025C                CPL_2:    .SET   CPL_3   
025C                CPL_3:    .SET   CPL_4   
025C                CPL_4:    .SET   CPL_5   
025C                CPL_5:    .SET   CPL_6   
025C                CPL_6:    .SET   CPL_7   
025C                CPL_7:    .SET   CPL_8   
025C                CPL_8:    .SET   CPL_9   
025C                CPL_9:    .SET   CPL_10   
025C                CPL_10:   .SET   0   
025C   BF 11                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
025E   08 12                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
0260                          ;*Macro unroll:  cif
0260   20 07 00 00            DW   QBRAN,0   
0264                          ;*Macro unroll:  CPL_PUSH $
0264                CPL_COUNT:   .SET   CPL_COUNT + 1   
0264                CPL_10:   .SET   CPL_9   
0264                CPL_9:    .SET   CPL_8   
0264                CPL_8:    .SET   CPL_7   
0264                CPL_7:    .SET   CPL_6   
0264                CPL_6:    .SET   CPL_5   
0264                CPL_5:    .SET   CPL_4   
0264                CPL_4:    .SET   CPL_3   
0264                CPL_3:    .SET   CPL_2   
0264                CPL_2:    .SET   CPL_TOP   
0264                CPL_TOP:   .SET   $   
0264   F6 00                  DW   NEGAT   ;     -r q b1 -- -r -q       if signs differ then negate answer
0266                          ;*Macro unroll:  cendif
0266                          ;*Macro unroll:  cBRANCH_FWD
0266                CUR_ADR:   .SET   $   
0262                          .ORG   CPL_TOP - 2   
0262   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0266                          .ORG   CUR_ADR   
0266                          ;*Macro unroll:  CPL_POP
0266                CPL_COUNT:   .SET   CPL_COUNT - 1   
0266                CPL_TOP:   .SET   CPL_2   
0266                CPL_2:    .SET   CPL_3   
0266                CPL_3:    .SET   CPL_4   
0266                CPL_4:    .SET   CPL_5   
0266                CPL_5:    .SET   CPL_6   
0266                CPL_6:    .SET   CPL_7   
0266                CPL_7:    .SET   CPL_8   
0266                CPL_8:    .SET   CPL_9   
0266                CPL_9:    .SET   CPL_10   
0266                CPL_10:   .SET   0   
0266                          ;*Macro unroll:  EXIT
0266   74 0E                  DW   exit   
0268   C3 63 0E               JP   enter   
026B                          ;*Macro unroll: mCODE "mod",3,0,mod                   ; dvend dvisr -- remainder
026B                HEADER_MOD:      ; dvend dvisr -- remainder
026B   30 02                  DW   link   
026D                LINK:     .SET   HEADER_mod   
026D   03                     DB   0 + 3   
026E   6D 6F 64               DB   "mod"   
0271                MOD:         
0271                          ;*Macro unroll:  ENTER
0271   CF                     RST   $08   
0272   37 02 28 12 74 0E      DW   slashmod,DROP,EXIT   ; drop quotient
0278                          ;*Macro unroll: mCODE "/",1,0,slash                   ; dvend dvisr -- quot
0278                HEADER_SLASH:      ; dvend dvisr -- quot
0278   6B 02                  DW   link   
027A                LINK:     .SET   HEADER_slash   
027A   01                     DB   0 + 1   
027B   2F                     DB   "/"   
027C                SLASH:       
027C                          ;*Macro unroll:  ENTER
027C   CF                     RST   $08   
027D   37 02 08 12 28 12 74 0E DW   slashmod,swap,drop,EXIT   ; drop remainder
0285                             ; U*   u1 u2 -- ud   unsigned mutliply
0285                          ;*Macro unroll: mCODE "u*",2,0,USTAR              ; u1 u2 -- ud
0285                HEADER_USTAR:      ; u1 u2 -- ud
0285   78 02                  DW   link   
0287                LINK:     .SET   HEADER_USTAR   
0287   02                     DB   0 + 2   
0288   75 2A                  DB   "u*"   
028A                USTAR:       
028A                             ; u2 in BC
028A                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
028A   DD 2B                  DEC   IX   ; u1 in DE
028C   DD 56 00               LD   D,(IX+0)   
028F   DD 2B                  DEC   IX   
0291   DD 5E 00               LD   E,(IX+0)   
0294   CD 2B 03               CALL   unsignedMultiply   
0297                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
0297   DD 73 00               LD   (IX+0),E   ; udlo result
029A   DD 23                  INC   IX   
029C   DD 72 00               LD   (IX+0),D   
029F   DD 23                  INC   IX   
02A1                             ; udhi result
02A1                          ;*Macro unroll:  NEXT
02A1   C3 63 0E               JP   enter   
02A4                          ;*Macro unroll: mCODE "*",1,0,star                    ; u1 u2 -- ud
02A4                HEADER_STAR:      ; u1 u2 -- ud
02A4   85 02                  DW   link   
02A6                LINK:     .SET   HEADER_star   
02A6   01                     DB   0 + 1   
02A7   2A                     DB   "*"   
02A8                STAR:        
02A8                          ;*Macro unroll:  ENTER
02A8   CF                     RST   $08   
02A9   3C 12 3C 12            DW   over,over   ; dupe both args
02AD   2B 01 08 12 2B 01      DW   ABS,swap,ABS   ; remove sign from both args
02B3   8A 02 28 12            DW   ustar,drop   ; unsigned multiply, drop hi-word
02B7   BF 11                  DW   nrot   ; move to bottom
02B9   B7 00                  DW   XORR   ; zero if signs are the same
02BB   78 00                  DW   ZLESS   ; if high bit set
02BD                          ;*Macro unroll:  cif
02BD   20 07 00 00            DW   QBRAN,0   
02C1                          ;*Macro unroll:  CPL_PUSH $
02C1                CPL_COUNT:   .SET   CPL_COUNT + 1   
02C1                CPL_10:   .SET   CPL_9   
02C1                CPL_9:    .SET   CPL_8   
02C1                CPL_8:    .SET   CPL_7   
02C1                CPL_7:    .SET   CPL_6   
02C1                CPL_6:    .SET   CPL_5   
02C1                CPL_5:    .SET   CPL_4   
02C1                CPL_4:    .SET   CPL_3   
02C1                CPL_3:    .SET   CPL_2   
02C1                CPL_2:    .SET   CPL_TOP   
02C1                CPL_TOP:   .SET   $   
02C1   F6 00                  DW   NEGAT   ; if signs differ then negate answer
02C3                          ;*Macro unroll:  cendif
02C3                          ;*Macro unroll:  cBRANCH_FWD
02C3                CUR_ADR:   .SET   $   
02BF                          .ORG   CPL_TOP - 2   
02BF   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02C3                          .ORG   CUR_ADR   
02C3                          ;*Macro unroll:  CPL_POP
02C3                CPL_COUNT:   .SET   CPL_COUNT - 1   
02C3                CPL_TOP:   .SET   CPL_2   
02C3                CPL_2:    .SET   CPL_3   
02C3                CPL_3:    .SET   CPL_4   
02C3                CPL_4:    .SET   CPL_5   
02C3                CPL_5:    .SET   CPL_6   
02C3                CPL_6:    .SET   CPL_7   
02C3                CPL_7:    .SET   CPL_8   
02C3                CPL_8:    .SET   CPL_9   
02C3                CPL_9:    .SET   CPL_10   
02C3                CPL_10:   .SET   0   
02C3                          ;*Macro unroll:  EXIT
02C3   74 0E                  DW   exit   
02C5   C3 63 0E               JP   enter   
02C8                             ; 
02C8                             ; negate ***
02C8                             ; params: HL = number
02C8                             ; 
02C8                NEGATENUM:      
02C8                             ; Negate HL (using two's complement)
02C8   AF                     XOR   A   
02C9   95                     SUB   L   
02CA   6F                     LD   L,A   
02CB   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
02CD   9C                     SBC   A,H   
02CE   67                     LD   H,A   
02CF   C9                     RET      
02D0                             ; 
02D0                             ; divide word by byte ***
02D0                             ; params: HL = dividend, C = divisor
02D0                             ; returns: HL = result, A = remainder
02D0                             ; destroys: ?
02D0                             ; 
02D0                DIVIDEWORDBYBYTE:      
02D0   06 10                  LD   B,16   
02D2   AF                     XOR   A   
02D3                          ;*Macro unroll:  _do
02D3   18 03                  JR   L_M_818S240   
02D5   C3 D5 02               JP   $   
02D8                          ;*Macro unroll:  DLOOP_PUSH $
02D8                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
02D8                DLOOP_12:   .SET   DLOOP_11   
02D8                DLOOP_11:   .SET   DLOOP_10   
02D8                DLOOP_10:   .SET   DLOOP_9   
02D8                DLOOP_9:   .SET   DLOOP_8   
02D8                DLOOP_8:   .SET   DLOOP_7   
02D8                DLOOP_7:   .SET   DLOOP_6   
02D8                DLOOP_6:   .SET   DLOOP_5   
02D8                DLOOP_5:   .SET   DLOOP_4   
02D8                DLOOP_4:   .SET   DLOOP_3   
02D8                DLOOP_3:   .SET   DLOOP_2   
02D8                DLOOP_2:   .SET   DLOOP_TOP   
02D8                DLOOP_TOP:   .SET   $   
02D8                L_M_818S240:      
02D8   29                     ADD   HL,HL   
02D9   17                     RLA      
02DA                          ;*Macro unroll:  _if c
02DA   DA E0 02               JP   c,L_M_821S243   
02DD   C3 DD 02               JP   $   
02E0                          ;*Macro unroll:  STRUC_PUSH $
02E0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
02E0                STRUC_12:   .SET   STRUC_11   
02E0                STRUC_11:   .SET   STRUC_10   
02E0                STRUC_10:   .SET   STRUC_9   
02E0                STRUC_9:   .SET   STRUC_8   
02E0                STRUC_8:   .SET   STRUC_7   
02E0                STRUC_7:   .SET   STRUC_6   
02E0                STRUC_6:   .SET   STRUC_5   
02E0                STRUC_5:   .SET   STRUC_4   
02E0                STRUC_4:   .SET   STRUC_3   
02E0                STRUC_3:   .SET   STRUC_2   
02E0                STRUC_2:   .SET   STRUC_TOP   
02E0                STRUC_TOP:   .SET   $   
02E0                L_M_821S243:      
02E0   91                     SUB   C   
02E1   2C                     INC   L   
02E2                          ;*Macro unroll:  _else
02E2   C3 E2 02               JP   $   
02E5                          ;*Macro unroll:  STRUC_FWD
02E5                CUR_ADR:   .SET   $   
02DE                          .ORG   STRUC_TOP - 2   
02DE   E5 02                  DW   CUR_ADR   
02E5                          .ORG   CUR_ADR   
02E5                STRUC_TOP:   .SET   $   
02E5   B9                     CP   C   
02E6                          ;*Macro unroll:  _if nc
02E6   D2 EC 02               JP   nc,L_M_826S248   
02E9   C3 E9 02               JP   $   
02EC                          ;*Macro unroll:  STRUC_PUSH $
02EC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
02EC                STRUC_12:   .SET   STRUC_11   
02EC                STRUC_11:   .SET   STRUC_10   
02EC                STRUC_10:   .SET   STRUC_9   
02EC                STRUC_9:   .SET   STRUC_8   
02EC                STRUC_8:   .SET   STRUC_7   
02EC                STRUC_7:   .SET   STRUC_6   
02EC                STRUC_6:   .SET   STRUC_5   
02EC                STRUC_5:   .SET   STRUC_4   
02EC                STRUC_4:   .SET   STRUC_3   
02EC                STRUC_3:   .SET   STRUC_2   
02EC                STRUC_2:   .SET   STRUC_TOP   
02EC                STRUC_TOP:   .SET   $   
02EC                L_M_826S248:      
02EC   91                     SUB   C   
02ED   2C                     INC   L   
02EE                          ;*Macro unroll:  _endif
02EE                          ;*Macro unroll:  STRUC_FWD
02EE                CUR_ADR:   .SET   $   
02EA                          .ORG   STRUC_TOP - 2   
02EA   EE 02                  DW   CUR_ADR   
02EE                          .ORG   CUR_ADR   
02EE                          ;*Macro unroll:  STRUC_POP
02EE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
02EE                STRUC_TOP:   .SET   STRUC_2   
02EE                STRUC_2:   .SET   STRUC_3   
02EE                STRUC_3:   .SET   STRUC_4   
02EE                STRUC_4:   .SET   STRUC_5   
02EE                STRUC_5:   .SET   STRUC_6   
02EE                STRUC_6:   .SET   STRUC_7   
02EE                STRUC_7:   .SET   STRUC_8   
02EE                STRUC_8:   .SET   STRUC_9   
02EE                STRUC_9:   .SET   STRUC_10   
02EE                STRUC_10:   .SET   STRUC_11   
02EE                STRUC_11:   .SET   STRUC_12   
02EE                STRUC_12:   .SET   0   
02EE                          ;*Macro unroll:  _endif
02EE                          ;*Macro unroll:  STRUC_FWD
02EE                CUR_ADR:   .SET   $   
02E3                          .ORG   STRUC_TOP - 2   
02E3   EE 02                  DW   CUR_ADR   
02EE                          .ORG   CUR_ADR   
02EE                          ;*Macro unroll:  STRUC_POP
02EE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
02EE                STRUC_TOP:   .SET   STRUC_2   
02EE                STRUC_2:   .SET   STRUC_3   
02EE                STRUC_3:   .SET   STRUC_4   
02EE                STRUC_4:   .SET   STRUC_5   
02EE                STRUC_5:   .SET   STRUC_6   
02EE                STRUC_6:   .SET   STRUC_7   
02EE                STRUC_7:   .SET   STRUC_8   
02EE                STRUC_8:   .SET   STRUC_9   
02EE                STRUC_9:   .SET   STRUC_10   
02EE                STRUC_10:   .SET   STRUC_11   
02EE                STRUC_11:   .SET   STRUC_12   
02EE                STRUC_12:   .SET   0   
02EE                          ;*Macro unroll:  _djnz
02EE   10 E8                  DJNZ   DLOOP_TOP   
02F0                          ;*Macro unroll:  DLOOP_FWD
02F0                CUR_ADR:   .SET   $   
02D6                          .ORG   DLOOP_TOP - 2   
02D6   F0 02                  DW   CUR_ADR   
02F0                          .ORG   CUR_ADR   
02F0                          ;*Macro unroll:  DLOOP_POP
02F0                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
02F0                DLOOP_TOP:   .SET   DLOOP_2   
02F0                DLOOP_2:   .SET   DLOOP_3   
02F0                DLOOP_3:   .SET   DLOOP_4   
02F0                DLOOP_4:   .SET   DLOOP_5   
02F0                DLOOP_5:   .SET   DLOOP_6   
02F0                DLOOP_6:   .SET   DLOOP_7   
02F0                DLOOP_7:   .SET   DLOOP_8   
02F0                DLOOP_8:   .SET   DLOOP_9   
02F0                DLOOP_9:   .SET   DLOOP_10   
02F0                DLOOP_10:   .SET   DLOOP_11   
02F0                DLOOP_11:   .SET   DLOOP_12   
02F0                DLOOP_12:   .SET   0   
02F0   C9                     RET      
02F1                             ; 
02F1                             ; Divide word by word ***
02F1                             ; params: BC = dividend, DE = divisor
02F1                             ; returns: BC = result, HL = remainder
02F1                             ; destroys: ?
02F1                             ; 
02F1                DIVIDEWORDBYWORD:      
02F1   D5                     PUSH   DE   
02F2   21 00 00               LD   HL,0   
02F5   78                     LD   A,B   
02F6   06 08                  LD   B,8   
02F8                          ;*Macro unroll:  _do
02F8   18 03                  JR   L_M_844S268   
02FA   C3 FA 02               JP   $   
02FD                          ;*Macro unroll:  DLOOP_PUSH $
02FD                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
02FD                DLOOP_12:   .SET   DLOOP_11   
02FD                DLOOP_11:   .SET   DLOOP_10   
02FD                DLOOP_10:   .SET   DLOOP_9   
02FD                DLOOP_9:   .SET   DLOOP_8   
02FD                DLOOP_8:   .SET   DLOOP_7   
02FD                DLOOP_7:   .SET   DLOOP_6   
02FD                DLOOP_6:   .SET   DLOOP_5   
02FD                DLOOP_5:   .SET   DLOOP_4   
02FD                DLOOP_4:   .SET   DLOOP_3   
02FD                DLOOP_3:   .SET   DLOOP_2   
02FD                DLOOP_2:   .SET   DLOOP_TOP   
02FD                DLOOP_TOP:   .SET   $   
02FD                L_M_844S268:      
02FD   17                     RLA      
02FE   ED 6A                  ADC   HL,HL   
0300   ED 52                  SBC   HL,DE   
0302                          ;*Macro unroll:  _if c
0302   DA 08 03               JP   c,L_M_848S272   
0305   C3 05 03               JP   $   
0308                          ;*Macro unroll:  STRUC_PUSH $
0308                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0308                STRUC_12:   .SET   STRUC_11   
0308                STRUC_11:   .SET   STRUC_10   
0308                STRUC_10:   .SET   STRUC_9   
0308                STRUC_9:   .SET   STRUC_8   
0308                STRUC_8:   .SET   STRUC_7   
0308                STRUC_7:   .SET   STRUC_6   
0308                STRUC_6:   .SET   STRUC_5   
0308                STRUC_5:   .SET   STRUC_4   
0308                STRUC_4:   .SET   STRUC_3   
0308                STRUC_3:   .SET   STRUC_2   
0308                STRUC_2:   .SET   STRUC_TOP   
0308                STRUC_TOP:   .SET   $   
0308                L_M_848S272:      
0308   19                     ADD   HL,DE   
0309                          ;*Macro unroll:  _endif
0309                          ;*Macro unroll:  STRUC_FWD
0309                CUR_ADR:   .SET   $   
0306                          .ORG   STRUC_TOP - 2   
0306   09 03                  DW   CUR_ADR   
0309                          .ORG   CUR_ADR   
0309                          ;*Macro unroll:  STRUC_POP
0309                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0309                STRUC_TOP:   .SET   STRUC_2   
0309                STRUC_2:   .SET   STRUC_3   
0309                STRUC_3:   .SET   STRUC_4   
0309                STRUC_4:   .SET   STRUC_5   
0309                STRUC_5:   .SET   STRUC_6   
0309                STRUC_6:   .SET   STRUC_7   
0309                STRUC_7:   .SET   STRUC_8   
0309                STRUC_8:   .SET   STRUC_9   
0309                STRUC_9:   .SET   STRUC_10   
0309                STRUC_10:   .SET   STRUC_11   
0309                STRUC_11:   .SET   STRUC_12   
0309                STRUC_12:   .SET   0   
0309                          ;*Macro unroll:  _djnz
0309   10 F2                  DJNZ   DLOOP_TOP   
030B                          ;*Macro unroll:  DLOOP_FWD
030B                CUR_ADR:   .SET   $   
02FB                          .ORG   DLOOP_TOP - 2   
02FB   0B 03                  DW   CUR_ADR   
030B                          .ORG   CUR_ADR   
030B                          ;*Macro unroll:  DLOOP_POP
030B                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
030B                DLOOP_TOP:   .SET   DLOOP_2   
030B                DLOOP_2:   .SET   DLOOP_3   
030B                DLOOP_3:   .SET   DLOOP_4   
030B                DLOOP_4:   .SET   DLOOP_5   
030B                DLOOP_5:   .SET   DLOOP_6   
030B                DLOOP_6:   .SET   DLOOP_7   
030B                DLOOP_7:   .SET   DLOOP_8   
030B                DLOOP_8:   .SET   DLOOP_9   
030B                DLOOP_9:   .SET   DLOOP_10   
030B                DLOOP_10:   .SET   DLOOP_11   
030B                DLOOP_11:   .SET   DLOOP_12   
030B                DLOOP_12:   .SET   0   
030B   17                     RLA      
030C   2F                     CPL      
030D   47                     LD   B,A   
030E   79                     LD   A,C   
030F   48                     LD   C,B   
0310   06 08                  LD   B,8   
0312                          ;*Macro unroll:  _do
0312   18 03                  JR   L_M_858S282   
0314   C3 14 03               JP   $   
0317                          ;*Macro unroll:  DLOOP_PUSH $
0317                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0317                DLOOP_12:   .SET   DLOOP_11   
0317                DLOOP_11:   .SET   DLOOP_10   
0317                DLOOP_10:   .SET   DLOOP_9   
0317                DLOOP_9:   .SET   DLOOP_8   
0317                DLOOP_8:   .SET   DLOOP_7   
0317                DLOOP_7:   .SET   DLOOP_6   
0317                DLOOP_6:   .SET   DLOOP_5   
0317                DLOOP_5:   .SET   DLOOP_4   
0317                DLOOP_4:   .SET   DLOOP_3   
0317                DLOOP_3:   .SET   DLOOP_2   
0317                DLOOP_2:   .SET   DLOOP_TOP   
0317                DLOOP_TOP:   .SET   $   
0317                L_M_858S282:      
0317   17                     RLA      
0318   ED 6A                  ADC   HL,HL   
031A   ED 52                  SBC   HL,DE   
031C                          ;*Macro unroll:  _if c
031C   DA 22 03               JP   c,L_M_862S286   
031F   C3 1F 03               JP   $   
0322                          ;*Macro unroll:  STRUC_PUSH $
0322                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0322                STRUC_12:   .SET   STRUC_11   
0322                STRUC_11:   .SET   STRUC_10   
0322                STRUC_10:   .SET   STRUC_9   
0322                STRUC_9:   .SET   STRUC_8   
0322                STRUC_8:   .SET   STRUC_7   
0322                STRUC_7:   .SET   STRUC_6   
0322                STRUC_6:   .SET   STRUC_5   
0322                STRUC_5:   .SET   STRUC_4   
0322                STRUC_4:   .SET   STRUC_3   
0322                STRUC_3:   .SET   STRUC_2   
0322                STRUC_2:   .SET   STRUC_TOP   
0322                STRUC_TOP:   .SET   $   
0322                L_M_862S286:      
0322   19                     ADD   HL,DE   
0323                          ;*Macro unroll:  _endif
0323                          ;*Macro unroll:  STRUC_FWD
0323                CUR_ADR:   .SET   $   
0320                          .ORG   STRUC_TOP - 2   
0320   23 03                  DW   CUR_ADR   
0323                          .ORG   CUR_ADR   
0323                          ;*Macro unroll:  STRUC_POP
0323                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0323                STRUC_TOP:   .SET   STRUC_2   
0323                STRUC_2:   .SET   STRUC_3   
0323                STRUC_3:   .SET   STRUC_4   
0323                STRUC_4:   .SET   STRUC_5   
0323                STRUC_5:   .SET   STRUC_6   
0323                STRUC_6:   .SET   STRUC_7   
0323                STRUC_7:   .SET   STRUC_8   
0323                STRUC_8:   .SET   STRUC_9   
0323                STRUC_9:   .SET   STRUC_10   
0323                STRUC_10:   .SET   STRUC_11   
0323                STRUC_11:   .SET   STRUC_12   
0323                STRUC_12:   .SET   0   
0323                          ;*Macro unroll:  _djnz
0323   10 F2                  DJNZ   DLOOP_TOP   
0325                          ;*Macro unroll:  DLOOP_FWD
0325                CUR_ADR:   .SET   $   
0315                          .ORG   DLOOP_TOP - 2   
0315   25 03                  DW   CUR_ADR   
0325                          .ORG   CUR_ADR   
0325                          ;*Macro unroll:  DLOOP_POP
0325                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0325                DLOOP_TOP:   .SET   DLOOP_2   
0325                DLOOP_2:   .SET   DLOOP_3   
0325                DLOOP_3:   .SET   DLOOP_4   
0325                DLOOP_4:   .SET   DLOOP_5   
0325                DLOOP_5:   .SET   DLOOP_6   
0325                DLOOP_6:   .SET   DLOOP_7   
0325                DLOOP_7:   .SET   DLOOP_8   
0325                DLOOP_8:   .SET   DLOOP_9   
0325                DLOOP_9:   .SET   DLOOP_10   
0325                DLOOP_10:   .SET   DLOOP_11   
0325                DLOOP_11:   .SET   DLOOP_12   
0325                DLOOP_12:   .SET   0   
0325   17                     RLA      
0326   2F                     CPL      
0327   41                     LD   B,C   
0328   4F                     LD   C,A   
0329   D1                     POP   DE   
032A   C9                     RET      
032B                             ; 
032B                             ; unsignedMultiply -  unsigned multiply ***
032B                             ; 
032B                             ; params:  u1 in BC, u2 in DE
032B                             ; returns: result in HLDE
032B                             ; destroys: AF
032B                             ; 
032B                UNSIGNEDMULTIPLY:      
032B   21 00 00               LD   HL,0   
032E   3E 11                  LD   A,17   ; loop counter
0330   B7                     OR   A   ; clear carry
0331                          ;*Macro unroll:  _do
0331   18 03                  JR   L_M_883S309   
0333   C3 33 03               JP   $   
0336                          ;*Macro unroll:  DLOOP_PUSH $
0336                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0336                DLOOP_12:   .SET   DLOOP_11   
0336                DLOOP_11:   .SET   DLOOP_10   
0336                DLOOP_10:   .SET   DLOOP_9   
0336                DLOOP_9:   .SET   DLOOP_8   
0336                DLOOP_8:   .SET   DLOOP_7   
0336                DLOOP_7:   .SET   DLOOP_6   
0336                DLOOP_6:   .SET   DLOOP_5   
0336                DLOOP_5:   .SET   DLOOP_4   
0336                DLOOP_4:   .SET   DLOOP_3   
0336                DLOOP_3:   .SET   DLOOP_2   
0336                DLOOP_2:   .SET   DLOOP_TOP   
0336                DLOOP_TOP:   .SET   $   
0336                L_M_883S309:      
0336   CB 1C                  RR   H   
0338   CB 1D                  RR   L   
033A   CB 1A                  RR   D   
033C   CB 1B                  RR   E   
033E                          ;*Macro unroll:  _if c
033E   DA 44 03               JP   c,L_M_888S314   
0341   C3 41 03               JP   $   
0344                          ;*Macro unroll:  STRUC_PUSH $
0344                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0344                STRUC_12:   .SET   STRUC_11   
0344                STRUC_11:   .SET   STRUC_10   
0344                STRUC_10:   .SET   STRUC_9   
0344                STRUC_9:   .SET   STRUC_8   
0344                STRUC_8:   .SET   STRUC_7   
0344                STRUC_7:   .SET   STRUC_6   
0344                STRUC_6:   .SET   STRUC_5   
0344                STRUC_5:   .SET   STRUC_4   
0344                STRUC_4:   .SET   STRUC_3   
0344                STRUC_3:   .SET   STRUC_2   
0344                STRUC_2:   .SET   STRUC_TOP   
0344                STRUC_TOP:   .SET   $   
0344                L_M_888S314:      
0344   09                     ADD   HL,BC   
0345                          ;*Macro unroll:  _endif
0345                          ;*Macro unroll:  STRUC_FWD
0345                CUR_ADR:   .SET   $   
0342                          .ORG   STRUC_TOP - 2   
0342   45 03                  DW   CUR_ADR   
0345                          .ORG   CUR_ADR   
0345                          ;*Macro unroll:  STRUC_POP
0345                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0345                STRUC_TOP:   .SET   STRUC_2   
0345                STRUC_2:   .SET   STRUC_3   
0345                STRUC_3:   .SET   STRUC_4   
0345                STRUC_4:   .SET   STRUC_5   
0345                STRUC_5:   .SET   STRUC_6   
0345                STRUC_6:   .SET   STRUC_7   
0345                STRUC_7:   .SET   STRUC_8   
0345                STRUC_8:   .SET   STRUC_9   
0345                STRUC_9:   .SET   STRUC_10   
0345                STRUC_10:   .SET   STRUC_11   
0345                STRUC_11:   .SET   STRUC_12   
0345                STRUC_12:   .SET   0   
0345   3D                     DEC   A   
0346                          ;*Macro unroll:  _until z
0346   CA 33 03               JP   z,DLOOP_TOP - 3   
0349                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0349                CUR_ADR:   .SET   $   ; needed?
0334                          .ORG   DLOOP_TOP - 2   
0334   49 03                  DW   CUR_ADR   
0349                          .ORG   CUR_ADR   
0349                          ;*Macro unroll:  _enddo
0349   C3 36 03               JP   DLOOP_TOP   
034C                          ;*Macro unroll:  DLOOP_FWD
034C                CUR_ADR:   .SET   $   
0334                          .ORG   DLOOP_TOP - 2   
0334   4C 03                  DW   CUR_ADR   
034C                          .ORG   CUR_ADR   
034C                          ;*Macro unroll:  DLOOP_POP
034C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
034C                DLOOP_TOP:   .SET   DLOOP_2   
034C                DLOOP_2:   .SET   DLOOP_3   
034C                DLOOP_3:   .SET   DLOOP_4   
034C                DLOOP_4:   .SET   DLOOP_5   
034C                DLOOP_5:   .SET   DLOOP_6   
034C                DLOOP_6:   .SET   DLOOP_7   
034C                DLOOP_7:   .SET   DLOOP_8   
034C                DLOOP_8:   .SET   DLOOP_9   
034C                DLOOP_9:   .SET   DLOOP_10   
034C                DLOOP_10:   .SET   DLOOP_11   
034C                DLOOP_11:   .SET   DLOOP_12   
034C                DLOOP_12:   .SET   0   
034C   C9                     RET      
034D                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
034D                          ;*Macro unroll: mCODE "cell+",5,0,CELLP
034D                HEADER_CELLP:      
034D   A4 02                  DW   link   
034F                LINK:     .SET   HEADER_CELLP   
034F   05                     DB   0 + 5   
0350   63 65 6C 6C 2B         DB   "cell+"   
0355                CELLP:       
0355   C3 AD 03               JP   TWOP   
0358                          ;*Macro unroll: mCODE "cell-",5,0,CELLM
0358                HEADER_CELLM:      
0358   4D 03                  DW   link   
035A                LINK:     .SET   HEADER_CELLM   
035A   05                     DB   0 + 5   
035B   63 65 6C 6C 2D         DB   "cell-"   
0360                CELLM:       
0360   C3 B7 03               JP   TWOM   
0363                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
0363                          ;*Macro unroll: mCODE "cells",5,0,CELLS
0363                HEADER_CELLS:      
0363   58 03                  DW   link   
0365                LINK:     .SET   HEADER_CELLS   
0365   05                     DB   0 + 5   
0366   63 65 6C 6C 73         DB   "cells"   
036B                CELLS:       
036B   C3 C1 03               JP   TWOST   
036E                             ; 0= zero-equal
036E                          ;*Macro unroll: mCODE "0=",2,0,ZEQUAL
036E                HEADER_ZEQUAL:      
036E   63 03                  DW   link   
0370                LINK:     .SET   HEADER_ZEQUAL   
0370   02                     DB   0 + 2   
0371   30 3D                  DB   "0="   
0373                ZEQUAL:      
0373                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0373   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0374   B0                     OR   B   
0375                          ;*Macro unroll:  _if nz
0375   C2 7B 03               JP   nz,L_M_906S336   
0378   C3 78 03               JP   $   
037B                          ;*Macro unroll:  STRUC_PUSH $
037B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
037B                STRUC_12:   .SET   STRUC_11   
037B                STRUC_11:   .SET   STRUC_10   
037B                STRUC_10:   .SET   STRUC_9   
037B                STRUC_9:   .SET   STRUC_8   
037B                STRUC_8:   .SET   STRUC_7   
037B                STRUC_7:   .SET   STRUC_6   
037B                STRUC_6:   .SET   STRUC_5   
037B                STRUC_5:   .SET   STRUC_4   
037B                STRUC_4:   .SET   STRUC_3   
037B                STRUC_3:   .SET   STRUC_2   
037B                STRUC_2:   .SET   STRUC_TOP   
037B                STRUC_TOP:   .SET   $   
037B                L_M_906S336:      
037B   01 FF FF               LD   BC,-1   
037E                          ;*Macro unroll:  _endif
037E                          ;*Macro unroll:  STRUC_FWD
037E                CUR_ADR:   .SET   $   
0379                          .ORG   STRUC_TOP - 2   
0379   7E 03                  DW   CUR_ADR   
037E                          .ORG   CUR_ADR   
037E                          ;*Macro unroll:  STRUC_POP
037E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
037E                STRUC_TOP:   .SET   STRUC_2   
037E                STRUC_2:   .SET   STRUC_3   
037E                STRUC_3:   .SET   STRUC_4   
037E                STRUC_4:   .SET   STRUC_5   
037E                STRUC_5:   .SET   STRUC_6   
037E                STRUC_6:   .SET   STRUC_7   
037E                STRUC_7:   .SET   STRUC_8   
037E                STRUC_8:   .SET   STRUC_9   
037E                STRUC_9:   .SET   STRUC_10   
037E                STRUC_10:   .SET   STRUC_11   
037E                STRUC_11:   .SET   STRUC_12   
037E                STRUC_12:   .SET   0   
037E   03                     INC   BC   
037F                          ;*Macro unroll:  NEXT
037F   C3 63 0E               JP   enter   
0382                          ;*Macro unroll: mCODE "0<>",3,0,ZNEQU
0382                HEADER_ZNEQU:      
0382   6E 03                  DW   link   
0384                LINK:     .SET   HEADER_ZNEQU   
0384   03                     DB   0 + 3   
0385   30 3C 3E               DB   "0<>"   
0388                ZNEQU:       
0388                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
0388   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
0389   B0                     OR   B   
038A                          ;*Macro unroll:  _if nz
038A   C2 90 03               JP   nz,L_M_913S344   
038D   C3 8D 03               JP   $   
0390                          ;*Macro unroll:  STRUC_PUSH $
0390                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0390                STRUC_12:   .SET   STRUC_11   
0390                STRUC_11:   .SET   STRUC_10   
0390                STRUC_10:   .SET   STRUC_9   
0390                STRUC_9:   .SET   STRUC_8   
0390                STRUC_8:   .SET   STRUC_7   
0390                STRUC_7:   .SET   STRUC_6   
0390                STRUC_6:   .SET   STRUC_5   
0390                STRUC_5:   .SET   STRUC_4   
0390                STRUC_4:   .SET   STRUC_3   
0390                STRUC_3:   .SET   STRUC_2   
0390                STRUC_2:   .SET   STRUC_TOP   
0390                STRUC_TOP:   .SET   $   
0390                L_M_913S344:      
0390   01 01 00               LD   BC,1   
0393                          ;*Macro unroll:  _endif
0393                          ;*Macro unroll:  STRUC_FWD
0393                CUR_ADR:   .SET   $   
038E                          .ORG   STRUC_TOP - 2   
038E   93 03                  DW   CUR_ADR   
0393                          .ORG   CUR_ADR   
0393                          ;*Macro unroll:  STRUC_POP
0393                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0393                STRUC_TOP:   .SET   STRUC_2   
0393                STRUC_2:   .SET   STRUC_3   
0393                STRUC_3:   .SET   STRUC_4   
0393                STRUC_4:   .SET   STRUC_5   
0393                STRUC_5:   .SET   STRUC_6   
0393                STRUC_6:   .SET   STRUC_7   
0393                STRUC_7:   .SET   STRUC_8   
0393                STRUC_8:   .SET   STRUC_9   
0393                STRUC_9:   .SET   STRUC_10   
0393                STRUC_10:   .SET   STRUC_11   
0393                STRUC_11:   .SET   STRUC_12   
0393                STRUC_12:   .SET   0   
0393                          ;*Macro unroll:  NEXT
0393   C3 63 0E               JP   enter   
0396                             ; 1+      n -- n                    add 1 to TOS
0396                          ;*Macro unroll: mCODE "1+",2,0,ONEP
0396                HEADER_ONEP:      
0396   82 03                  DW   link   
0398                LINK:     .SET   HEADER_ONEP   
0398   02                     DB   0 + 2   
0399   31 2B                  DB   "1+"   
039B                ONEP:        
039B   03                     INC   BC   
039C                          ;*Macro unroll:  NEXT
039C   C3 63 0E               JP   enter   
039F                             ; 1-      n -- n            sub 1 to TOS
039F                          ;*Macro unroll: mCODE "1-",2,0,ONEM
039F                HEADER_ONEM:      
039F   96 03                  DW   link   
03A1                LINK:     .SET   HEADER_ONEM   
03A1   02                     DB   0 + 2   
03A2   31 2D                  DB   "1-"   
03A4                ONEM:        
03A4   0B                     DEC   BC   
03A5                          ;*Macro unroll:  NEXT
03A5   C3 63 0E               JP   enter   
03A8                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
03A8                          ;*Macro unroll: mCODE "2+",2,0,TWOP
03A8                HEADER_TWOP:      
03A8   9F 03                  DW   link   
03AA                LINK:     .SET   HEADER_TWOP   
03AA   02                     DB   0 + 2   
03AB   32 2B                  DB   "2+"   
03AD                TWOP:        
03AD   03                     INC   BC   
03AE   03                     INC   BC   
03AF                          ;*Macro unroll:  NEXT
03AF   C3 63 0E               JP   enter   
03B2                          ;*Macro unroll: mCODE "2-",2,0,TWOM
03B2                HEADER_TWOM:      
03B2   A8 03                  DW   link   
03B4                LINK:     .SET   HEADER_TWOM   
03B4   02                     DB   0 + 2   
03B5   32 2D                  DB   "2-"   
03B7                TWOM:        
03B7   0B                     DEC   BC   
03B8   0B                     DEC   BC   
03B9                          ;*Macro unroll:  NEXT
03B9   C3 63 0E               JP   enter   
03BC                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
03BC                          ;*Macro unroll: mCODE "2*",2,0,TWOST
03BC                HEADER_TWOST:      
03BC   B2 03                  DW   link   
03BE                LINK:     .SET   HEADER_TWOST   
03BE   02                     DB   0 + 2   
03BF   32 2A                  DB   "2*"   
03C1                TWOST:       
03C1   CB 21                  SLA   C   
03C3   CB 10                  RL   B   
03C5                          ;*Macro unroll:  NEXT
03C5   C3 63 0E               JP   enter   
03C8                             ; 2/      x1 -- x2                  arithmetic right shift
03C8                          ;*Macro unroll: mCODE "2/",2,0,TWOSLASH
03C8                HEADER_TWOSLASH:      
03C8   BC 03                  DW   link   
03CA                LINK:     .SET   HEADER_TWOSLASH   
03CA   02                     DB   0 + 2   
03CB   32 2F                  DB   "2/"   
03CD                TWOSLASH:      
03CD   CB 28                  SRA   B   
03CF   CB 19                  RR   C   
03D1                          ;*Macro unroll:  NEXT
03D1   C3 63 0E               JP   enter   
03D4                          ;*Macro unroll: mCODE ":",1,0,colon
03D4                HEADER_COLON:      
03D4   C8 03                  DW   link   
03D6                LINK:     .SET   HEADER_colon   
03D6   01                     DB   0 + 1   
03D7   3A                     DB   ":"   
03D8                COLON:       
03D8                          ;*Macro unroll:  ENTER
03D8   CF                     RST   $08   
03D9   74 04                  DW   create   ; create the dictionary entry / header
03DB   48 08 A7 0E            DW   here,fetch   ; back up 3 bytes to start of data area
03DF   73 11 03 00 1E 01      DW   lit,3,SUBB   
03E5   48 08 86 0E            DW   here,store   
03E9   73 11 CF 00 79 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
03EF   1A 14 A7 0E 48 05      DW   latest,fetch,hidden   ; make the word hidden (see below for definition).
03F5   6E 05                  DW   rbrac   ; go into compile mode.
03F7                          ;*Macro unroll:  EXIT                                ; return from the function.
03F7   74 0E                  DW   exit   ; return from the function.
03F9   C3 63 0E               JP   enter   
03FC                          ;*Macro unroll: mCODE ";",1,msk_immed,semicolon
03FC                HEADER_SEMICOLON:      
03FC   D4 03                  DW   link   
03FE                LINK:     .SET   HEADER_semicolon   
03FE   81                     DB   msk_immed + 1   
03FF   3B                     DB   ";"   
0400                SEMICOLON:      
0400                          ;*Macro unroll:  ENTER
0400   CF                     RST   $08   
0401   73 11 74 0E 5D 0F      DW   lit,exit,comma   ; append exit (so the word will return).
0407   1A 14 A7 0E 48 05      DW   latest,fetch,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
040D   61 05                  DW   lbrac   ; go back to immediate mode.
040F                          ;*Macro unroll:  EXIT                                ; return from the function.
040F   74 0E                  DW   exit   ; return from the function.
0411   C3 63 0E               JP   enter   
0414                          ;*Macro unroll: mCODE ":noname",7,0,colonNoName
0414                HEADER_COLONNONAME:      
0414   FC 03                  DW   link   
0416                LINK:     .SET   HEADER_colonNoName   
0416   07                     DB   0 + 7   
0417   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
041E                COLONNONAME:      
041E                          ;*Macro unroll:  ENTER
041E   CF                     RST   $08   
041F   48 08 A7 0E            DW   here,fetch   ; TOS = here
0423   73 11 CF 00 79 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0429   6E 05                  DW   rbrac   ; go into compile mode.
042B                          ;*Macro unroll:  EXIT                                ; return from the function.
042B   74 0E                  DW   exit   ; return from the function.
042D   C3 63 0E               JP   enter   
0430                          ;*Macro unroll: mCODE "variable",8,0,variable         ; ( n -- ) get name from input
0430                HEADER_VARIABLE:      ; ( n -- ) get name from input
0430   14 04                  DW   link   
0432                LINK:     .SET   HEADER_variable   
0432   08                     DB   0 + 8   
0433   76 61 72 69 61 62 6C 65 DB   "variable"   
043B                VARIABLE:      
043B                          ;*Macro unroll:  ENTER
043B   CF                     RST   $08   
043C   73 11 01 00 6B 03      DW   lit,1,cells   
0442   48 08 A7 0E 08 12      DW   here,fetch,swap   ; n -- here n
0448   2A 0F                  DW   allot   ; allocate n bytes, push addr
044A   DF 04                  DW   constant   
044C                          ;*Macro unroll:  EXIT
044C   74 0E                  DW   exit   
044E   C3 63 0E               JP   enter   
0451                          ;*Macro unroll: mCODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
0451                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
0451   30 04                  DW   link   
0453                LINK:     .SET   HEADER_bufferColon   
0453   07                     DB   0 + 7   
0454   62 75 66 66 65 72 3A   DB   "buffer:"   
045B                BUFFERCOLON:      
045B                          ;*Macro unroll:  ENTER
045B   CF                     RST   $08   
045C   48 08 A7 0E 08 12      DW   here,fetch,swap   ; n -- here n
0462   2A 0F                  DW   allot   ; allocate n bytes, push addr
0464   DF 04                  DW   constant   
0466                          ;*Macro unroll:  EXIT
0466   74 0E                  DW   exit   
0468   C3 63 0E               JP   enter   
046B                          ;*Macro unroll: mCODE "create",6,0,create             ; --
046B                HEADER_CREATE:      ; --
046B   51 04                  DW   link   
046D                LINK:     .SET   HEADER_create   
046D   06                     DB   0 + 6   
046E   63 72 65 61 74 65      DB   "create"   
0474                CREATE:      
0474                          ;*Macro unroll:  ENTER
0474   CF                     RST   $08   
0475   48 08 A7 0E            DW   here,fetch   ; get old "here"
0479   1A 14 A7 0E 5D 0F      DW   latest,fetch,comma   ; write link to previous word to "here"
047F   1A 14 86 0E            DW   latest,store   ; update latest to old "here"
0483   E1 0D EF 0A            DW   bl,word   ; read word token
0487   D4 0E 9B 03 2A 0F      DW   cfetch,ONEP,allot   ; 
048D   73 11 C3 00 79 0F      DW   lit,jp_opcode,cComma   ; compile default behavious
0493   73 11 9E 04 5D 0F      DW   lit,xcreate,comma   ; i.e. push addr of data area
0499                          ;*Macro unroll:  EXIT                                ; exit from forth
0499   74 0E                  DW   exit   ; exit from forth
049B   C3 63 0E               JP   enter   
049E                XCREATE:      
049E                          ;*Macro unroll:  ENTER
049E   CF                     RST   $08   
049F   79 12                  DW   rfrom   ; push onto stack
04A1                          ;*Macro unroll:  EXIT
04A1   74 0E                  DW   exit   
04A3   C3 63 0E               JP   enter   
04A6                          ;*Macro unroll: mCODE "does>", 5, msk_immed, does         ; --
04A6                HEADER_DOES:      ; --
04A6   6B 04                  DW   link   
04A8                LINK:     .SET   HEADER_does   
04A8   85                     DB   msk_immed + 5   
04A9   64 6F 65 73 3E         DB   "does>"   
04AE                DOES:        
04AE                          ;*Macro unroll:  ENTER
04AE   CF                     RST   $08   
04AF   73 11 87 05 5D 0F      DW   lit,xdoes,comma   
04B5   73 11 77 05            DW   lit,dodoes   
04B9   48 08 A7 0E            DW   here,fetch   
04BD   73 11 CD 00            DW   lit,call_opcode   
04C1   3C 12 B5 0E            DW   over,cstore   
04C5   9B 03 86 0E            DW   ONEP,store   
04C9   73 11 03 00 2A 0F      DW   lit,3,allot   
04CF                          ;*Macro unroll:  EXIT
04CF   74 0E                  DW   exit   
04D1   C3 63 0E               JP   enter   
04D4                          ;*Macro unroll: mCODE "constant",8,0,constant         ; --
04D4                HEADER_CONSTANT:      ; --
04D4   A6 04                  DW   link   
04D6                LINK:     .SET   HEADER_constant   
04D6   08                     DB   0 + 8   
04D7   63 6F 6E 73 74 61 6E 74 DB   "constant"   
04DF                CONSTANT:      
04DF                          ;*Macro unroll:  ENTER
04DF   CF                     RST   $08   
04E0   74 04 5D 0F 87 05      DW   create,comma,xdoes   
04E6   CF                     RST   $08   
04E7   79 12                  DW   rfrom   ; push onto stack
04E9   A7 0E                  DW   fetch   
04EB                          ;*Macro unroll:  EXIT
04EB   74 0E                  DW   exit   
04ED   C3 63 0E               JP   enter   
04F0                          ;*Macro unroll: mCODE "'",1,0,tick                    ; quotes next word
04F0                HEADER_TICK:      ; quotes next word
04F0   D4 04                  DW   link   
04F2                LINK:     .SET   HEADER_tick   
04F2   01                     DB   0 + 1   
04F3   27                     DB   "'"   
04F4                TICK:        
04F4                          ;*Macro unroll:  ENTER
04F4   CF                     RST   $08   
04F5   E1 0D EF 0A 2D 05 73 03 DW   bl,word,find,zEqual   
04FD   79 12 C0 12 3C 12 3C 12 CE 00 64 12 DW   rFrom,count,over,over,plus,toR   
0509                          ;*Macro unroll:  EXIT
0509   74 0E                  DW   exit   
050B   C3 63 0E               JP   enter   
050E                          ;*Macro unroll: mCODE "immediate",9,MSK_IMMED,IMMEDIATE
050E                HEADER_IMMEDIATE:      
050E   F0 04                  DW   link   
0510                LINK:     .SET   HEADER_IMMEDIATE   
0510   89                     DB   MSK_IMMED + 9   
0511   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
051A                IMMEDIATE:      
051A   2A 5F 32               LD   HL,(VAR_LATEST)   ; get head of latest word
051D   23                     INC   HL   ; point to flags byte
051E   23                     INC   HL   
051F   3E 80                  LD   a,MSK_IMMED   
0521   AE                     XOR   (HL)   ; toggle the IMMED bit.
0522   77                     LD   (HL),a   
0523                          ;*Macro unroll:  NEXT
0523   C3 63 0E               JP   enter   
0526                          ;*Macro unroll: mCODE "find",4,0,FIND
0526                HEADER_FIND:      
0526   0E 05                  DW   link   
0528                LINK:     .SET   HEADER_FIND   
0528   04                     DB   0 + 4   
0529   66 69 6E 64            DB   "find"   
052D                FIND:        
052D                          ;*Macro unroll:  ppop0 H,L
052D   DD 2B                  DEC   IX   
052F   DD 66 00               LD   H,(IX+0)   
0532   DD 2B                  DEC   IX   
0534   DD 6E 00               LD   L,(IX+0)   
0537   CD 6A 0B               CALL   lookup   ; params: HL = string address, BC = string length
053A                             ; returns: DE = found header ptr or 0
053A                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
053A   4B                     LD   C,E   ; move to TOS
053B   42                     LD   B,D   
053C                          ;*Macro unroll:  NEXT
053C   C3 63 0E               JP   enter   
053F                          ;*Macro unroll: mCODE "hidden",6,0,HIDDEN
053F                HEADER_HIDDEN:      
053F   26 05                  DW   link   
0541                LINK:     .SET   HEADER_HIDDEN   
0541   06                     DB   0 + 6   
0542   68 69 64 64 65 6E      DB   "hidden"   
0548                HIDDEN:      
0548                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
0548   60                     LD   H,B   ; HL = Dictionary entry.
0549   69                     LD   L,C   
054A                          ;*Macro unroll:  ppop0 B,C
054A   DD 2B                  DEC   IX   
054C   DD 46 00               LD   B,(IX+0)   
054F   DD 2B                  DEC   IX   
0551   DD 4E 00               LD   C,(IX+0)   
0554   23                     INC   HL   
0555   23                     INC   HL   ; Point to name/flags byte.
0556   7E                     LD   A,(HL)   
0557   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
0559   77                     LD   (HL),A   
055A                          ;*Macro unroll:  NEXT
055A   C3 63 0E               JP   enter   
055D                          ;*Macro unroll: mCODE "[",1,MSK_IMMED,LBRAC
055D                HEADER_LBRAC:      
055D   3F 05                  DW   link   
055F                LINK:     .SET   HEADER_LBRAC   
055F   81                     DB   MSK_IMMED + 1   
0560   5B                     DB   "["   
0561                LBRAC:       
0561   21 00 00               LD   HL,0   
0564   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 0.
0567                          ;*Macro unroll:  NEXT
0567   C3 63 0E               JP   enter   
056A                          ;*Macro unroll: mCODE "]",1,0,RBRAC
056A                HEADER_RBRAC:      
056A   5D 05                  DW   link   
056C                LINK:     .SET   HEADER_RBRAC   
056C   01                     DB   0 + 1   
056D   5D                     DB   "]"   
056E                RBRAC:       
056E   21 01 00               LD   HL,1   
0571   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 1.
0574                          ;*Macro unroll:  NEXT
0574   C3 63 0E               JP   enter   
0577                DODOES:      ; -- a-addr
0577                          ;*Macro unroll:  ppush0 B,C
0577   DD 71 00               LD   (IX+0),C   
057A   DD 23                  INC   IX   
057C   DD 70 00               LD   (IX+0),B   
057F   DD 23                  INC   IX   
0581   E1                     POP   HL   ; parameter field address
0582   C1                     POP   BC   
0583   E5                     PUSH   HL   
0584                          ;*Macro unroll:  NEXT
0584   C3 63 0E               JP   enter   
0587                XDOES:       ; --
0587                          ;*Macro unroll:  ENTER
0587   CF                     RST   $08   
0588   79 12                  DW   rfrom   
058A   1A 14 A7 0E 06 0B      DW   latest,fetch,tcfa   
0590   73 11 CD 00            DW   lit,call_opcode   
0594   3C 12 B5 0E            DW   over,cstore   
0598   9B 03 86 0E            DW   ONEP,store   
059C                          ;*Macro unroll:  EXIT
059C   74 0E                  DW   exit   
059E   C3 63 0E               JP   enter   
05A1                          ;*Macro unroll: mCODE "postpone",8,msk_immed,postpone ; --
05A1                HEADER_POSTPONE:      ; --
05A1   6A 05                  DW   link   
05A3                LINK:     .SET   HEADER_postpone   
05A3   88                     DB   msk_immed + 8   
05A4   70 6F 73 74 70 6F 6E 65 DB   "postpone"   
05AC                POSTPONE:      
05AC   CF                     RST   $08   
05AD   E1 0D EF 0A C0 12      DW   bl,word,count   ; pstr -- ptr len
05B3   F4 11 73 03            DW   DUPP,zEqual   
05B7                          ;*Macro unroll:  cIf
05B7   20 07 00 00            DW   QBRAN,0   
05BB                          ;*Macro unroll:  CPL_PUSH $
05BB                CPL_COUNT:   .SET   CPL_COUNT + 1   
05BB                CPL_10:   .SET   CPL_9   
05BB                CPL_9:    .SET   CPL_8   
05BB                CPL_8:    .SET   CPL_7   
05BB                CPL_7:    .SET   CPL_6   
05BB                CPL_6:    .SET   CPL_5   
05BB                CPL_5:    .SET   CPL_4   
05BB                CPL_4:    .SET   CPL_3   
05BB                CPL_3:    .SET   CPL_2   
05BB                CPL_2:    .SET   CPL_TOP   
05BB                CPL_TOP:   .SET   $   
05BB   28 12 28 12            DW   drop,drop   ; ptr len --
05BF                          ;*Macro unroll:  cElse
05BF   3D 07 00 00            DW   BRAN,0   
05C3                          ;*Macro unroll:  cBRANCH_FWD
05C3                CUR_ADR:   .SET   $   
05B9                          .ORG   CPL_TOP - 2   
05B9   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
05C3                          .ORG   CUR_ADR   
05C3                CPL_TOP:   .SET   $   
05C3   CA 05                  DW   postponeToken   ; interpret the next word
05C5                          ;*Macro unroll:  cEndif
05C5                          ;*Macro unroll:  cBRANCH_FWD
05C5                CUR_ADR:   .SET   $   
05C1                          .ORG   CPL_TOP - 2   
05C1   04 00                  DW   CUR_ADR - CPL_TOP + 2   
05C5                          .ORG   CUR_ADR   
05C5                          ;*Macro unroll:  CPL_POP
05C5                CPL_COUNT:   .SET   CPL_COUNT - 1   
05C5                CPL_TOP:   .SET   CPL_2   
05C5                CPL_2:    .SET   CPL_3   
05C5                CPL_3:    .SET   CPL_4   
05C5                CPL_4:    .SET   CPL_5   
05C5                CPL_5:    .SET   CPL_6   
05C5                CPL_6:    .SET   CPL_7   
05C5                CPL_7:    .SET   CPL_8   
05C5                CPL_8:    .SET   CPL_9   
05C5                CPL_9:    .SET   CPL_10   
05C5                CPL_10:   .SET   0   
05C5                          ;*Macro unroll:  EXIT
05C5   74 0E                  DW   exit   
05C7   C3 63 0E               JP   enter   
05CA                POSTPONETOKEN:      ; --
05CA   CF                     RST   $08   
05CB   3C 12 3C 12 2D 05      DW   over,over,find   ; ptr len -- ptr len addr
05D1   F4 11 88 03            DW   DUPP,ZNEQU   
05D5                          ;*Macro unroll:  cIf
05D5   20 07 00 00            DW   QBRAN,0   
05D9                          ;*Macro unroll:  CPL_PUSH $
05D9                CPL_COUNT:   .SET   CPL_COUNT + 1   
05D9                CPL_10:   .SET   CPL_9   
05D9                CPL_9:    .SET   CPL_8   
05D9                CPL_8:    .SET   CPL_7   
05D9                CPL_7:    .SET   CPL_6   
05D9                CPL_6:    .SET   CPL_5   
05D9                CPL_5:    .SET   CPL_4   
05D9                CPL_4:    .SET   CPL_3   
05D9                CPL_3:    .SET   CPL_2   
05D9                CPL_2:    .SET   CPL_TOP   
05D9                CPL_TOP:   .SET   $   
05D9   E6 05                  DW   postponeWord   
05DB                          ;*Macro unroll:  cElse
05DB   3D 07 00 00            DW   BRAN,0   
05DF                          ;*Macro unroll:  cBRANCH_FWD
05DF                CUR_ADR:   .SET   $   
05D7                          .ORG   CPL_TOP - 2   
05D7   08 00                  DW   CUR_ADR - CPL_TOP + 2   
05DF                          .ORG   CUR_ADR   
05DF                CPL_TOP:   .SET   $   
05DF   22 06                  DW   postponeLiteral   
05E1                          ;*Macro unroll:  cEndif
05E1                          ;*Macro unroll:  cBRANCH_FWD
05E1                CUR_ADR:   .SET   $   
05DD                          .ORG   CPL_TOP - 2   
05DD   04 00                  DW   CUR_ADR - CPL_TOP + 2   
05E1                          .ORG   CUR_ADR   
05E1                          ;*Macro unroll:  CPL_POP
05E1                CPL_COUNT:   .SET   CPL_COUNT - 1   
05E1                CPL_TOP:   .SET   CPL_2   
05E1                CPL_2:    .SET   CPL_3   
05E1                CPL_3:    .SET   CPL_4   
05E1                CPL_4:    .SET   CPL_5   
05E1                CPL_5:    .SET   CPL_6   
05E1                CPL_6:    .SET   CPL_7   
05E1                CPL_7:    .SET   CPL_8   
05E1                CPL_8:    .SET   CPL_9   
05E1                CPL_9:    .SET   CPL_10   
05E1                CPL_10:   .SET   0   
05E1                          ;*Macro unroll:  EXIT
05E1   74 0E                  DW   exit   
05E3   C3 63 0E               JP   enter   
05E6                POSTPONEWORD:      ; ( headptr -- )
05E6   CF                     RST   $08   ; enter forth
05E7   08 12 28 12 08 12 28 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
05EF   F4 11 73 11 02 00 CE 00 D4 0E DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
05F9   73 11 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
05FF   73 03                  DW   zEqual   
0601                          ;*Macro unroll:  cIf
0601   20 07 00 00            DW   QBRAN,0   
0605                          ;*Macro unroll:  CPL_PUSH $
0605                CPL_COUNT:   .SET   CPL_COUNT + 1   
0605                CPL_10:   .SET   CPL_9   
0605                CPL_9:    .SET   CPL_8   
0605                CPL_8:    .SET   CPL_7   
0605                CPL_7:    .SET   CPL_6   
0605                CPL_6:    .SET   CPL_5   
0605                CPL_5:    .SET   CPL_4   
0605                CPL_4:    .SET   CPL_3   
0605                CPL_3:    .SET   CPL_2   
0605                CPL_2:    .SET   CPL_TOP   
0605                CPL_TOP:   .SET   $   
0605   73 11 73 11 5D 0F      DW   lit,lit,comma   
060B   06 0B 5D 0F            DW   tcfa,comma   
060F   73 11 5D 0F 5D 0F      DW   lit,comma,comma   
0615                          ;*Macro unroll:  cElse
0615   3D 07 00 00            DW   BRAN,0   
0619                          ;*Macro unroll:  cBRANCH_FWD
0619                CUR_ADR:   .SET   $   
0603                          .ORG   CPL_TOP - 2   
0603   16 00                  DW   CUR_ADR - CPL_TOP + 2   
0619                          .ORG   CUR_ADR   
0619                CPL_TOP:   .SET   $   
0619   06 0B 5D 0F            DW   tcfa,comma   
061D                          ;*Macro unroll:  cEndIf
061D                          ;*Macro unroll:  cBRANCH_FWD
061D                CUR_ADR:   .SET   $   
0617                          .ORG   CPL_TOP - 2   
0617   06 00                  DW   CUR_ADR - CPL_TOP + 2   
061D                          .ORG   CUR_ADR   
061D                          ;*Macro unroll:  CPL_POP
061D                CPL_COUNT:   .SET   CPL_COUNT - 1   
061D                CPL_TOP:   .SET   CPL_2   
061D                CPL_2:    .SET   CPL_3   
061D                CPL_3:    .SET   CPL_4   
061D                CPL_4:    .SET   CPL_5   
061D                CPL_5:    .SET   CPL_6   
061D                CPL_6:    .SET   CPL_7   
061D                CPL_7:    .SET   CPL_8   
061D                CPL_8:    .SET   CPL_9   
061D                CPL_9:    .SET   CPL_10   
061D                CPL_10:   .SET   0   
061D                          ;*Macro unroll:  EXIT
061D   74 0E                  DW   exit   
061F   C3 63 0E               JP   enter   
0622                POSTPONELITERAL:      ; ( ptr len -- )
0622   CF                     RST   $08   ; enter forth
0623   28 12                  DW   drop   ; ptr len addr - ptr len
0625   8D 0A 73 03            DW   number,zEqual   ; parse to number
0629                          ;*Macro unroll:  cif
0629   20 07 00 00            DW   QBRAN,0   
062D                          ;*Macro unroll:  CPL_PUSH $
062D                CPL_COUNT:   .SET   CPL_COUNT + 1   
062D                CPL_10:   .SET   CPL_9   
062D                CPL_9:    .SET   CPL_8   
062D                CPL_8:    .SET   CPL_7   
062D                CPL_7:    .SET   CPL_6   
062D                CPL_6:    .SET   CPL_5   
062D                CPL_5:    .SET   CPL_4   
062D                CPL_4:    .SET   CPL_3   
062D                CPL_3:    .SET   CPL_2   
062D                CPL_2:    .SET   CPL_TOP   
062D                CPL_TOP:   .SET   $   
062D   73 11 73 11            DW   lit,lit   ; (val -- val "lit" )
0631   5D 0F 5D 0F            DW   comma,comma   ; compile "lit" val
0635                          ;*Macro unroll:  cElse
0635   3D 07 00 00            DW   BRAN,0   
0639                          ;*Macro unroll:  cBRANCH_FWD
0639                CUR_ADR:   .SET   $   
062B                          .ORG   CPL_TOP - 2   
062B   0E 00                  DW   CUR_ADR - CPL_TOP + 2   
0639                          .ORG   CUR_ADR   
0639                CPL_TOP:   .SET   $   
0639   28 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
063B   A6 12                  DW   litstr   ; err != 0, parse error
063D   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
064C   48 0D                  DW   type   
064E                          ;*Macro unroll:  cEndIf
064E                          ;*Macro unroll:  cBRANCH_FWD
064E                CUR_ADR:   .SET   $   
0637                          .ORG   CPL_TOP - 2   
0637   17 00                  DW   CUR_ADR - CPL_TOP + 2   
064E                          .ORG   CUR_ADR   
064E                          ;*Macro unroll:  CPL_POP
064E                CPL_COUNT:   .SET   CPL_COUNT - 1   
064E                CPL_TOP:   .SET   CPL_2   
064E                CPL_2:    .SET   CPL_3   
064E                CPL_3:    .SET   CPL_4   
064E                CPL_4:    .SET   CPL_5   
064E                CPL_5:    .SET   CPL_6   
064E                CPL_6:    .SET   CPL_7   
064E                CPL_7:    .SET   CPL_8   
064E                CPL_8:    .SET   CPL_9   
064E                CPL_9:    .SET   CPL_10   
064E                CPL_10:   .SET   0   
064E                          ;*Macro unroll:  EXIT
064E   74 0E                  DW   exit   
0650   C3 63 0E               JP   enter   
0653                          ;*Macro unroll: mCODE "if",2,msk_immed,if
0653                HEADER_IF:      
0653   A1 05                  DW   link   
0655                LINK:     .SET   HEADER_if   
0655   82                     DB   msk_immed + 2   
0656   69 66                  DB   "if"   
0658                IF:          
0658                          ;*Macro unroll:  ENTER
0658   CF                     RST   $08   
0659   F3 08                  DW   lbrace   
065B   73 11 20 07 5D 0F      DW   lit,QBRAN,comma   ; compile ?branch
0661   48 08 A7 0E F4 11 5D 0F DW   here,fetch,DUPP,comma   ; compile here and also push on stack
0669                          ;*Macro unroll:  EXIT
0669   74 0E                  DW   exit   
066B   C3 63 0E               JP   enter   
066E                          ;*Macro unroll: mCODE "else",4,msk_immed,else
066E                HEADER_ELSE:      
066E   53 06                  DW   link   
0670                LINK:     .SET   HEADER_else   
0670   84                     DB   msk_immed + 4   
0671   65 6C 73 65            DB   "else"   
0675                ELSE:        
0675                          ;*Macro unroll:  ENTER
0675   CF                     RST   $08   
0676   73 11 3D 07 5D 0F      DW   lit,BRAN,comma   ; definite branch to just over the false-part
067C   48 08 A7 0E            DW   here,fetch   ; save here on stack
0680   73 11 00 00 5D 0F      DW   lit,0,comma   ; compile a dummy offset
0686   08 12                  DW   swap   ; now back-fill the original (if) offset
0688   A1 06                  DW   xendif   ; must call xendif not endif
068A                          ;*Macro unroll:  EXIT
068A   74 0E                  DW   exit   
068C   C3 63 0E               JP   enter   
068F                          ;*Macro unroll: mCODE "endif",5,msk_immed,endif
068F                HEADER_ENDIF:      
068F   6E 06                  DW   link   
0691                LINK:     .SET   HEADER_endif   
0691   85                     DB   msk_immed + 5   
0692   65 6E 64 69 66         DB   "endif"   
0697                ENDIF:       
0697                          ;*Macro unroll:  ENTER
0697   CF                     RST   $08   
0698   A1 06                  DW   xendif   ; must call xendif not endif
069A   43 09                  DW   rbraceExec   
069C                          ;*Macro unroll:  EXIT
069C   74 0E                  DW   exit   
069E   C3 63 0E               JP   enter   
06A1                XENDIF:      ; must call xendif not endif
06A1                          ;*Macro unroll:  ENTER
06A1   CF                     RST   $08   
06A2   F4 11                  DW   DUPP   
06A4   48 08 A7 0E 08 12 1E 01 DW   here,fetch,swap,SUBB   ; calculate the offset from the address saved on the stack
06AC   08 12 86 0E            DW   swap,store   ; store the offset in the back-filled location
06B0                          ;*Macro unroll:  EXIT
06B0   74 0E                  DW   exit   
06B2   C3 63 0E               JP   enter   
06B5                             ; begin condition while ... repeat
06B5                          ;*Macro unroll: mCODE "begin",5,msk_immed,begin
06B5                HEADER_BEGIN:      
06B5   8F 06                  DW   link   
06B7                LINK:     .SET   HEADER_begin   
06B7   85                     DB   msk_immed + 5   
06B8   62 65 67 69 6E         DB   "begin"   
06BD                BEGIN:       
06BD                          ;*Macro unroll:  ENTER
06BD   CF                     RST   $08   
06BE   F3 08                  DW   lbrace   
06C0   48 08 A7 0E            DW   here,fetch   ; save here on stack (here1)
06C4                          ;*Macro unroll:  EXIT
06C4   74 0E                  DW   exit   
06C6   C3 63 0E               JP   enter   
06C9                          ;*Macro unroll: mCODE "while",5,msk_immed,while
06C9                HEADER_WHILE:      
06C9   B5 06                  DW   link   
06CB                LINK:     .SET   HEADER_while   
06CB   85                     DB   msk_immed + 5   
06CC   77 68 69 6C 65         DB   "while"   
06D1                WHILE:       
06D1                          ;*Macro unroll:  ENTER
06D1   CF                     RST   $08   
06D2   73 11 20 07 5D 0F      DW   lit,QBRAN,comma   ; compile branch on zero
06D8   48 08 A7 0E            DW   here,fetch   ; save here in stack (here2)
06DC   73 11 00 00 5D 0F      DW   lit,0,comma   ; compile dummy offset
06E2                          ;*Macro unroll:  EXIT
06E2   74 0E                  DW   exit   
06E4   C3 63 0E               JP   enter   
06E7                          ;*Macro unroll: mCODE "repeat",6,msk_immed,repeat
06E7                HEADER_REPEAT:      
06E7   C9 06                  DW   link   
06E9                LINK:     .SET   HEADER_repeat   
06E9   86                     DB   msk_immed + 6   
06EA   72 65 70 65 61 74      DB   "repeat"   
06F0                REPEAT:      
06F0                          ;*Macro unroll:  ENTER
06F0   CF                     RST   $08   
06F1   73 11 3D 07 5D 0F      DW   lit,BRAN,comma   ; compile branch
06F7   08 12                  DW   swap   ; tos = here1
06F9   48 08 A7 0E 1E 01 5D 0F DW   here,fetch,SUBB,comma   ; compile offset (here1 - here3)
0701   F4 11                  DW   DUPP   
0703   48 08 A7 0E 08 12 1E 01 DW   here,fetch,swap,SUBB   ; compile offset (here2 - here3)
070B   08 12 86 0E            DW   swap,store   ; save offset in here2
070F   43 09                  DW   rbraceExec   
0711                          ;*Macro unroll:  EXIT
0711   74 0E                  DW   exit   
0713   C3 63 0E               JP   enter   
0716                             ; ?branch   x --              branch if TOS zero
0716                          ;*Macro unroll: mCODE "?branch",7,0,QBRAN
0716                HEADER_QBRAN:      
0716   E7 06                  DW   link   
0718                LINK:     .SET   HEADER_QBRAN   
0718   07                     DB   0 + 7   
0719   3F 62 72 61 6E 63 68   DB   "?branch"   
0720                QBRAN:       
0720                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
0720   79                     LD   A,C   ; test old TOS
0721   B0                     OR   B   
0722                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
0722   DD 2B                  DEC   IX   ; POP new TOS
0724   DD 46 00               LD   B,(IX+0)   
0727   DD 2B                  DEC   IX   
0729   DD 4E 00               LD   C,(IX+0)   
072C   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
072E   E1                     POP   HL   
072F   23                     INC   HL   ; else skip inline value
0730   23                     INC   HL   
0731                          ;*Macro unroll:  NEXT1
0731   C3 64 0E               JP   enter1   
0734                          ;*Macro unroll: mCODE "branch",6,0,BRAN         ; relative branching
0734                HEADER_BRAN:      ; relative branching
0734   16 07                  DW   link   
0736                LINK:     .SET   HEADER_BRAN   
0736   06                     DB   0 + 6   
0737   62 72 61 6E 63 68      DB   "branch"   
073D                BRAN:        
073D   E1                     POP   HL   ; add the offset to the instruction pointer
073E   5E                     LD   E,(HL)   
073F   23                     INC   HL   
0740   56                     LD   D,(HL)   
0741   2B                     DEC   HL   
0742   19                     ADD   HL,DE   
0743                          ;*Macro unroll:  NEXT1
0743   C3 64 0E               JP   enter1   
0746                             ; ?branch   x --              branch if TOS zero
0746                          ;*Macro unroll: mCODE "?branch1",7,0,QBRAN1
0746                HEADER_QBRAN1:      
0746   34 07                  DW   link   
0748                LINK:     .SET   HEADER_QBRAN1   
0748   07                     DB   0 + 7   
0749   3F 62 72 61 6E 63 68 31 DB   "?branch1"   
0751                QBRAN1:      
0751                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
0751   79                     LD   A,C   ; test old TOS
0752   B0                     OR   B   
0753                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
0753   DD 2B                  DEC   IX   ; POP new TOS
0755   DD 46 00               LD   B,(IX+0)   
0758   DD 2B                  DEC   IX   
075A   DD 4E 00               LD   C,(IX+0)   
075D   28 10                  JR   z,BRAN1   ; if old TOS=0, branch
075F   E1                     POP   HL   
0760   23                     INC   HL   ; else skip inline value
0761   23                     INC   HL   
0762                          ;*Macro unroll:  NEXT1
0762   C3 64 0E               JP   enter1   
0765                          ;*Macro unroll: mCODE "branch1",6,0,BRAN1         ; relative branching
0765                HEADER_BRAN1:      ; relative branching
0765   46 07                  DW   link   
0767                LINK:     .SET   HEADER_BRAN1   
0767   06                     DB   0 + 6   
0768   62 72 61 6E 63 68 31   DB   "branch1"   
076F                BRAN1:       
076F   E1                     POP   HL   ; add the offset to the instruction pointer
0770   5E                     LD   E,(HL)   
0771   23                     INC   HL   
0772   56                     LD   D,(HL)   
0773   EB                     EX   DE,HL   
0774                          ;*Macro unroll:  NEXT1
0774   C3 64 0E               JP   enter1   
0777                          ;*Macro unroll: mCONST "version",7,0,version,1
0777                          ;*Macro unroll: mCODE "version",7,0,version
0777                HEADER_VERSION:      
0777   65 07                  DW   link   
0779                LINK:     .SET   HEADER_version   
0779   07                     DB   0 + 7   
077A   76 65 72 73 69 6F 6E   DB   "version"   
0781                VERSION:      
0781                          ;*Macro unroll:  ppush0 B,C
0781   DD 71 00               LD   (IX+0),C   
0784   DD 23                  INC   IX   
0786   DD 70 00               LD   (IX+0),B   
0789   DD 23                  INC   IX   
078B   01 01 00               LD   BC,1   
078E                          ;*Macro unroll:  NEXT
078E   C3 63 0E               JP   enter   
0791                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
0791                          ;*Macro unroll: mCODE "r0",2,0,rz
0791                HEADER_RZ:      
0791   77 07                  DW   link   
0793                LINK:     .SET   HEADER_rz   
0793   02                     DB   0 + 2   
0794   72 30                  DB   "r0"   
0796                RZ:          
0796                          ;*Macro unroll:  ppush0 B,C
0796   DD 71 00               LD   (IX+0),C   
0799   DD 23                  INC   IX   
079B   DD 70 00               LD   (IX+0),B   
079E   DD 23                  INC   IX   
07A0   01 A7 2E               LD   BC,ret_stack   
07A3                          ;*Macro unroll:  NEXT
07A3   C3 63 0E               JP   enter   
07A6                          ;*Macro unroll: mCONST "msk_immed",9,0,__msk_immed,msk_immed
07A6                          ;*Macro unroll: mCODE "msk_immed",9,0,__msk_immed
07A6                HEADER___MSK_IMMED:      
07A6   91 07                  DW   link   
07A8                LINK:     .SET   HEADER___msk_immed   
07A8   09                     DB   0 + 9   
07A9   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
07B2                __MSK_IMMED:      
07B2                          ;*Macro unroll:  ppush0 B,C
07B2   DD 71 00               LD   (IX+0),C   
07B5   DD 23                  INC   IX   
07B7   DD 70 00               LD   (IX+0),B   
07BA   DD 23                  INC   IX   
07BC   01 80 00               LD   BC,msk_immed   
07BF                          ;*Macro unroll:  NEXT
07BF   C3 63 0E               JP   enter   
07C2                          ;*Macro unroll: mCONST "msk_hidden",10,0,__msk_hidden,msk_hidden
07C2                          ;*Macro unroll: mCODE "msk_hidden",10,0,__msk_hidden
07C2                HEADER___MSK_HIDDEN:      
07C2   A6 07                  DW   link   
07C4                LINK:     .SET   HEADER___msk_hidden   
07C4   0A                     DB   0 + 10   
07C5   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
07CF                __MSK_HIDDEN:      
07CF                          ;*Macro unroll:  ppush0 B,C
07CF   DD 71 00               LD   (IX+0),C   
07D2   DD 23                  INC   IX   
07D4   DD 70 00               LD   (IX+0),B   
07D7   DD 23                  INC   IX   
07D9   01 40 00               LD   BC,msk_hidden   
07DC                          ;*Macro unroll:  NEXT
07DC   C3 63 0E               JP   enter   
07DF                          ;*Macro unroll: mCONST "msk_length",10,0,__msk_length,msk_length
07DF                          ;*Macro unroll: mCODE "msk_length",10,0,__msk_length
07DF                HEADER___MSK_LENGTH:      
07DF   C2 07                  DW   link   
07E1                LINK:     .SET   HEADER___msk_length   
07E1   0A                     DB   0 + 10   
07E2   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
07EC                __MSK_LENGTH:      
07EC                          ;*Macro unroll:  ppush0 B,C
07EC   DD 71 00               LD   (IX+0),C   
07EF   DD 23                  INC   IX   
07F1   DD 70 00               LD   (IX+0),B   
07F4   DD 23                  INC   IX   
07F6   01 3F 00               LD   BC,msk_length   
07F9                          ;*Macro unroll:  NEXT
07F9   C3 63 0E               JP   enter   
07FC                          ;*Macro unroll: mCONST "TRUE",4,0,TRUE,-1
07FC                          ;*Macro unroll: mCODE "TRUE",4,0,TRUE
07FC                HEADER_TRUE:      
07FC   DF 07                  DW   link   
07FE                LINK:     .SET   HEADER_TRUE   
07FE   04                     DB   0 + 4   
07FF   54 52 55 45            DB   "TRUE"   
0803                TRUE:        
0803                          ;*Macro unroll:  ppush0 B,C
0803   DD 71 00               LD   (IX+0),C   
0806   DD 23                  INC   IX   
0808   DD 70 00               LD   (IX+0),B   
080B   DD 23                  INC   IX   
080D   01 FF FF               LD   BC,-1   
0810                          ;*Macro unroll:  NEXT
0810   C3 63 0E               JP   enter   
0813                          ;*Macro unroll: mCONST "FALSE",5,0,FALSE,0
0813                          ;*Macro unroll: mCODE "FALSE",5,0,FALSE
0813                HEADER_FALSE:      
0813   FC 07                  DW   link   
0815                LINK:     .SET   HEADER_FALSE   
0815   05                     DB   0 + 5   
0816   46 41 4C 53 45         DB   "FALSE"   
081B                FALSE:       
081B                          ;*Macro unroll:  ppush0 B,C
081B   DD 71 00               LD   (IX+0),C   
081E   DD 23                  INC   IX   
0820   DD 70 00               LD   (IX+0),B   
0823   DD 23                  INC   IX   
0825   01 00 00               LD   BC,0   
0828                          ;*Macro unroll:  NEXT
0828   C3 63 0E               JP   enter   
082B                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
082B                          ;*Macro unroll: mCODE "pad",3,0,pad
082B                HEADER_PAD:      
082B   13 08                  DW   link   
082D                LINK:     .SET   HEADER_pad   
082D   03                     DB   0 + 3   
082E   70 61 64               DB   "pad"   
0831                PAD:         
0831                          ;*Macro unroll:  ppush0 B,C
0831   DD 71 00               LD   (IX+0),C   
0834   DD 23                  INC   IX   
0836   DD 70 00               LD   (IX+0),B   
0839   DD 23                  INC   IX   
083B   01 4D 31               LD   BC,var_pad   
083E                          ;*Macro unroll:  NEXT
083E   C3 63 0E               JP   enter   
0841                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
0841                          ;*Macro unroll: mCODE "here",4,0,here
0841                HEADER_HERE:      
0841   2B 08                  DW   link   
0843                LINK:     .SET   HEADER_here   
0843   04                     DB   0 + 4   
0844   68 65 72 65            DB   "here"   
0848                HERE:        
0848                          ;*Macro unroll:  ppush0 B,C
0848   DD 71 00               LD   (IX+0),C   
084B   DD 23                  INC   IX   
084D   DD 70 00               LD   (IX+0),B   
0850   DD 23                  INC   IX   
0852   01 51 32               LD   BC,var_here   
0855                          ;*Macro unroll:  NEXT
0855   C3 63 0E               JP   enter   
0858                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
0858                          ;*Macro unroll: mCODE "intp_stop",9,0,intp_stop
0858                HEADER_INTP_STOP:      
0858   41 08                  DW   link   
085A                LINK:     .SET   HEADER_intp_stop   
085A   09                     DB   0 + 9   
085B   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
0864                INTP_STOP:      
0864                          ;*Macro unroll:  ppush0 B,C
0864   DD 71 00               LD   (IX+0),C   
0867   DD 23                  INC   IX   
0869   DD 70 00               LD   (IX+0),B   
086C   DD 23                  INC   IX   
086E   01 53 32               LD   BC,var_intp_stop   
0871                          ;*Macro unroll:  NEXT
0871   C3 63 0E               JP   enter   
0874                          ;*Macro unroll: mVAR "state",5,0,state, var_state
0874                          ;*Macro unroll: mCODE "state",5,0,state
0874                HEADER_STATE:      
0874   58 08                  DW   link   
0876                LINK:     .SET   HEADER_state   
0876   05                     DB   0 + 5   
0877   73 74 61 74 65         DB   "state"   
087C                STATE:       
087C                          ;*Macro unroll:  ppush0 B,C
087C   DD 71 00               LD   (IX+0),C   
087F   DD 23                  INC   IX   
0881   DD 70 00               LD   (IX+0),B   
0884   DD 23                  INC   IX   
0886   01 55 32               LD   BC,var_state   
0889                          ;*Macro unroll:  NEXT
0889   C3 63 0E               JP   enter   
088C                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
088C                          ;*Macro unroll: mCODE "nesting",7,0,nesting
088C                HEADER_NESTING:      
088C   74 08                  DW   link   
088E                LINK:     .SET   HEADER_nesting   
088E   07                     DB   0 + 7   
088F   6E 65 73 74 69 6E 67   DB   "nesting"   
0896                NESTING:      
0896                          ;*Macro unroll:  ppush0 B,C
0896   DD 71 00               LD   (IX+0),C   
0899   DD 23                  INC   IX   
089B   DD 70 00               LD   (IX+0),B   
089E   DD 23                  INC   IX   
08A0   01 57 32               LD   BC,var_nesting   
08A3                          ;*Macro unroll:  NEXT
08A3   C3 63 0E               JP   enter   
08A6                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
08A6                          ;*Macro unroll: mCODE "sp0",3,0,sp0
08A6                HEADER_SP0:      
08A6   8C 08                  DW   link   
08A8                LINK:     .SET   HEADER_sp0   
08A8   03                     DB   0 + 3   
08A9   73 70 30               DB   "sp0"   
08AC                SP0:         
08AC                          ;*Macro unroll:  ppush0 B,C
08AC   DD 71 00               LD   (IX+0),C   
08AF   DD 23                  INC   IX   
08B1   DD 70 00               LD   (IX+0),B   
08B4   DD 23                  INC   IX   
08B6   01 59 32               LD   BC,var_sp0   
08B9                          ;*Macro unroll:  NEXT
08B9   C3 63 0E               JP   enter   
08BC                          ;*Macro unroll: mVAR "base",4,0,base, var_base
08BC                          ;*Macro unroll: mCODE "base",4,0,base
08BC                HEADER_BASE:      
08BC   A6 08                  DW   link   
08BE                LINK:     .SET   HEADER_base   
08BE   04                     DB   0 + 4   
08BF   62 61 73 65            DB   "base"   
08C3                BASE:        
08C3                          ;*Macro unroll:  ppush0 B,C
08C3   DD 71 00               LD   (IX+0),C   
08C6   DD 23                  INC   IX   
08C8   DD 70 00               LD   (IX+0),B   
08CB   DD 23                  INC   IX   
08CD   01 5B 32               LD   BC,var_base   
08D0                          ;*Macro unroll:  NEXT
08D0   C3 63 0E               JP   enter   
08D3                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
08D3                          ;*Macro unroll: mCODE "latestStr",6,0,latestStr
08D3                HEADER_LATESTSTR:      
08D3   BC 08                  DW   link   
08D5                LINK:     .SET   HEADER_latestStr   
08D5   06                     DB   0 + 6   
08D6   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
08DF                LATESTSTR:      
08DF                          ;*Macro unroll:  ppush0 B,C
08DF   DD 71 00               LD   (IX+0),C   
08E2   DD 23                  INC   IX   
08E4   DD 70 00               LD   (IX+0),B   
08E7   DD 23                  INC   IX   
08E9   01 5D 32               LD   BC,var_latest_str   
08EC                          ;*Macro unroll:  NEXT
08EC   C3 63 0E               JP   enter   
08EF                          ;*Macro unroll: mCODE "{",1,msk_immed,lbrace
08EF                HEADER_LBRACE:      
08EF   D3 08                  DW   link   
08F1                LINK:     .SET   HEADER_lbrace   
08F1   81                     DB   msk_immed + 1   
08F2   7B                     DB   "{"   
08F3                LBRACE:      
08F3                          ;*Macro unroll:  ENTER
08F3   CF                     RST   $08   
08F4   7C 08 A7 0E 73 03      DW   state,fetch,ZEQUAL   
08FA   96 08 A7 0E 73 03      DW   nesting,fetch,ZEQUAL   
0900   86 00                  DW   ANDD   
0902                          ;*Macro unroll:  cIf
0902   20 07 00 00            DW   QBRAN,0   
0906                          ;*Macro unroll:  CPL_PUSH $
0906                CPL_COUNT:   .SET   CPL_COUNT + 1   
0906                CPL_10:   .SET   CPL_9   
0906                CPL_9:    .SET   CPL_8   
0906                CPL_8:    .SET   CPL_7   
0906                CPL_7:    .SET   CPL_6   
0906                CPL_6:    .SET   CPL_5   
0906                CPL_5:    .SET   CPL_4   
0906                CPL_4:    .SET   CPL_3   
0906                CPL_3:    .SET   CPL_2   
0906                CPL_2:    .SET   CPL_TOP   
0906                CPL_TOP:   .SET   $   
0906   48 08 A7 0E            DW   here,fetch   ; TOS = here
090A   73 11 CF 00 79 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0910                          ;*Macro unroll:  cEndIf
0910                          ;*Macro unroll:  cBRANCH_FWD
0910                CUR_ADR:   .SET   $   
0904                          .ORG   CPL_TOP - 2   
0904   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
0910                          .ORG   CUR_ADR   
0910                          ;*Macro unroll:  CPL_POP
0910                CPL_COUNT:   .SET   CPL_COUNT - 1   
0910                CPL_TOP:   .SET   CPL_2   
0910                CPL_2:    .SET   CPL_3   
0910                CPL_3:    .SET   CPL_4   
0910                CPL_4:    .SET   CPL_5   
0910                CPL_5:    .SET   CPL_6   
0910                CPL_6:    .SET   CPL_7   
0910                CPL_7:    .SET   CPL_8   
0910                CPL_8:    .SET   CPL_9   
0910                CPL_9:    .SET   CPL_10   
0910                CPL_10:   .SET   0   
0910   2D 0D                  DW   nestPlus   ; increase nesting
0912                          ;*Macro unroll:  EXIT                             ; return from the function.
0912   74 0E                  DW   exit   ; return from the function.
0914   C3 63 0E               JP   enter   
0917                          ;*Macro unroll: mCODE "}",1,msk_immed,rbrace
0917                HEADER_RBRACE:      
0917   EF 08                  DW   link   
0919                LINK:     .SET   HEADER_rbrace   
0919   81                     DB   msk_immed + 1   
091A   7D                     DB   "}"   
091B                RBRACE:      
091B                          ;*Macro unroll:  ENTER
091B   CF                     RST   $08   
091C   37 0D                  DW   nestMinus   ; reduce nesting
091E   7C 08 A7 0E 73 03      DW   state,fetch,ZEQUAL   
0924   96 08 A7 0E 73 03      DW   nesting,fetch,ZEQUAL   
092A   86 00                  DW   ANDD   
092C                          ;*Macro unroll:  cIf
092C   20 07 00 00            DW   QBRAN,0   
0930                          ;*Macro unroll:  CPL_PUSH $
0930                CPL_COUNT:   .SET   CPL_COUNT + 1   
0930                CPL_10:   .SET   CPL_9   
0930                CPL_9:    .SET   CPL_8   
0930                CPL_8:    .SET   CPL_7   
0930                CPL_7:    .SET   CPL_6   
0930                CPL_6:    .SET   CPL_5   
0930                CPL_5:    .SET   CPL_4   
0930                CPL_4:    .SET   CPL_3   
0930                CPL_3:    .SET   CPL_2   
0930                CPL_2:    .SET   CPL_TOP   
0930                CPL_TOP:   .SET   $   
0930   73 11 74 0E 5D 0F      DW   lit,exit,comma   ; append exit (so the word will return).
0936                          ;*Macro unroll:  cEndIf
0936                          ;*Macro unroll:  cBRANCH_FWD
0936                CUR_ADR:   .SET   $   
092E                          .ORG   CPL_TOP - 2   
092E   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0936                          .ORG   CUR_ADR   
0936                          ;*Macro unroll:  CPL_POP
0936                CPL_COUNT:   .SET   CPL_COUNT - 1   
0936                CPL_TOP:   .SET   CPL_2   
0936                CPL_2:    .SET   CPL_3   
0936                CPL_3:    .SET   CPL_4   
0936                CPL_4:    .SET   CPL_5   
0936                CPL_5:    .SET   CPL_6   
0936                CPL_6:    .SET   CPL_7   
0936                CPL_7:    .SET   CPL_8   
0936                CPL_8:    .SET   CPL_9   
0936                CPL_9:    .SET   CPL_10   
0936                CPL_10:   .SET   0   
0936                          ;*Macro unroll:  EXIT                             ; return from the function.
0936   74 0E                  DW   exit   ; return from the function.
0938   C3 63 0E               JP   enter   
093B                          ;*Macro unroll: mCODE "}exec",5,msk_immed,rbraceExec
093B                HEADER_RBRACEEXEC:      
093B   17 09                  DW   link   
093D                LINK:     .SET   HEADER_rbraceExec   
093D   85                     DB   msk_immed + 5   
093E   7D 65 78 65 63         DB   "}exec"   
0943                RBRACEEXEC:      
0943                          ;*Macro unroll:  ENTER
0943   CF                     RST   $08   
0944   1B 09                  DW   rbrace   
0946   7C 08 A7 0E 73 03      DW   state,fetch,ZEQUAL   
094C   96 08 A7 0E 73 03      DW   nesting,fetch,ZEQUAL   
0952   86 00                  DW   ANDD   
0954                          ;*Macro unroll:  cIf
0954   20 07 00 00            DW   QBRAN,0   
0958                          ;*Macro unroll:  CPL_PUSH $
0958                CPL_COUNT:   .SET   CPL_COUNT + 1   
0958                CPL_10:   .SET   CPL_9   
0958                CPL_9:    .SET   CPL_8   
0958                CPL_8:    .SET   CPL_7   
0958                CPL_7:    .SET   CPL_6   
0958                CPL_6:    .SET   CPL_5   
0958                CPL_5:    .SET   CPL_4   
0958                CPL_4:    .SET   CPL_3   
0958                CPL_3:    .SET   CPL_2   
0958                CPL_2:    .SET   CPL_TOP   
0958                CPL_TOP:   .SET   $   
0958   F4 11                  DW   DUPP   
095A   48 08 86 0E            DW   here,store   
095E   26 0B                  DW   execute   
0960                          ;*Macro unroll:  cEndIf
0960                          ;*Macro unroll:  cBRANCH_FWD
0960                CUR_ADR:   .SET   $   
0956                          .ORG   CPL_TOP - 2   
0956   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0960                          .ORG   CUR_ADR   
0960                          ;*Macro unroll:  CPL_POP
0960                CPL_COUNT:   .SET   CPL_COUNT - 1   
0960                CPL_TOP:   .SET   CPL_2   
0960                CPL_2:    .SET   CPL_3   
0960                CPL_3:    .SET   CPL_4   
0960                CPL_4:    .SET   CPL_5   
0960                CPL_5:    .SET   CPL_6   
0960                CPL_6:    .SET   CPL_7   
0960                CPL_7:    .SET   CPL_8   
0960                CPL_8:    .SET   CPL_9   
0960                CPL_9:    .SET   CPL_10   
0960                CPL_10:   .SET   0   
0960                          ;*Macro unroll:  EXIT                             ; return from the function.
0960   74 0E                  DW   exit   ; return from the function.
0962   C3 63 0E               JP   enter   
0965                          ;*Macro unroll: mCODE ".",1,0,DOT                 ; print top of stack in BASE
0965                HEADER_DOT:      ; print top of stack in BASE
0965   3B 09                  DW   link   
0967                LINK:     .SET   HEADER_DOT   
0967   01                     DB   0 + 1   
0968   2E                     DB   "."   
0969                DOT:         
0969   E5                     PUSH   HL   
096A   D5                     PUSH   DE   
096B   C5                     PUSH   BC   
096C                          ;*Macro unroll:  loadWord H,L, B,C
096C   69                     LD   L,C   
096D   60                     LD   H,B   
096E   3A 5B 32               LD   A,(VAR_BASE)   
0971   4F                     LD   C,A   
0972   11 CD 30               LD   DE,wordBuf   
0975   CD A7 09               CALL   formatNum   
0978   CD 52 11               CALL   printStr   
097B   CD 65 11               CALL   printSpace   
097E   C1                     POP   BC   
097F   D1                     POP   DE   
0980   E1                     POP   HL   
0981                          ;*Macro unroll:  ppop0 B,C
0981   DD 2B                  DEC   IX   
0983   DD 46 00               LD   B,(IX+0)   
0986   DD 2B                  DEC   IX   
0988   DD 4E 00               LD   C,(IX+0)   
098B                          ;*Macro unroll:  NEXT
098B   C3 63 0E               JP   enter   
098E                PRINTNUM:      
098E   E5                     PUSH   HL   
098F   D5                     PUSH   DE   
0990   C5                     PUSH   BC   
0991                          ;*Macro unroll:  loadWord H,L, B,C
0991   69                     LD   L,C   
0992   60                     LD   H,B   
0993   3A 5B 32               LD   A,(VAR_BASE)   
0996   4F                     LD   C,A   
0997   11 CD 30               LD   DE,wordBuf   
099A   CD A7 09               CALL   formatNum   
099D   CD 52 11               CALL   printStr   
09A0   CD 65 11               CALL   printSpace   
09A3   C1                     POP   BC   
09A4   D1                     POP   DE   
09A5   E1                     POP   HL   
09A6   C9                     RET      
09A7                             ; 
09A7                             ; HL = data, DE = ptr to lineBuf, C = base ***
09A7                             ; DE = ptr to string, BC = length
09A7                             ; 
09A7                FORMATNUM:      
09A7                             ; Detect sign of HL.
09A7   CB 7C                  BIT   7,H   
09A9                          ;*Macro unroll:  _if nz
09A9   C2 AF 09               JP   nz,L_M_1273S42   
09AC   C3 AC 09               JP   $   
09AF                          ;*Macro unroll:  STRUC_PUSH $
09AF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09AF                STRUC_12:   .SET   STRUC_11   
09AF                STRUC_11:   .SET   STRUC_10   
09AF                STRUC_10:   .SET   STRUC_9   
09AF                STRUC_9:   .SET   STRUC_8   
09AF                STRUC_8:   .SET   STRUC_7   
09AF                STRUC_7:   .SET   STRUC_6   
09AF                STRUC_6:   .SET   STRUC_5   
09AF                STRUC_5:   .SET   STRUC_4   
09AF                STRUC_4:   .SET   STRUC_3   
09AF                STRUC_3:   .SET   STRUC_2   
09AF                STRUC_2:   .SET   STRUC_TOP   
09AF                STRUC_TOP:   .SET   $   
09AF                L_M_1273S42:      
09AF                             ; HL is negative. Output "-" to string and negate HL.
09AF   3E 2D                  LD   A,"-"   
09B1   12                     LD   (DE),A   
09B2   13                     INC   DE   
09B3   CD C8 02               CALL   negateNum   
09B6                          ;*Macro unroll:  _endif
09B6                          ;*Macro unroll:  STRUC_FWD
09B6                CUR_ADR:   .SET   $   
09AD                          .ORG   STRUC_TOP - 2   
09AD   B6 09                  DW   CUR_ADR   
09B6                          .ORG   CUR_ADR   
09B6                          ;*Macro unroll:  STRUC_POP
09B6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09B6                STRUC_TOP:   .SET   STRUC_2   
09B6                STRUC_2:   .SET   STRUC_3   
09B6                STRUC_3:   .SET   STRUC_4   
09B6                STRUC_4:   .SET   STRUC_5   
09B6                STRUC_5:   .SET   STRUC_6   
09B6                STRUC_6:   .SET   STRUC_7   
09B6                STRUC_7:   .SET   STRUC_8   
09B6                STRUC_8:   .SET   STRUC_9   
09B6                STRUC_9:   .SET   STRUC_10   
09B6                STRUC_10:   .SET   STRUC_11   
09B6                STRUC_11:   .SET   STRUC_12   
09B6                STRUC_12:   .SET   0   
09B6   06 00                  LD   B,0   ; B will count character length of number
09B8                          ;*Macro unroll:  _do
09B8   18 03                  JR   L_M_1281S51   
09BA   C3 BA 09               JP   $   
09BD                          ;*Macro unroll:  DLOOP_PUSH $
09BD                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09BD                DLOOP_12:   .SET   DLOOP_11   
09BD                DLOOP_11:   .SET   DLOOP_10   
09BD                DLOOP_10:   .SET   DLOOP_9   
09BD                DLOOP_9:   .SET   DLOOP_8   
09BD                DLOOP_8:   .SET   DLOOP_7   
09BD                DLOOP_7:   .SET   DLOOP_6   
09BD                DLOOP_6:   .SET   DLOOP_5   
09BD                DLOOP_5:   .SET   DLOOP_4   
09BD                DLOOP_4:   .SET   DLOOP_3   
09BD                DLOOP_3:   .SET   DLOOP_2   
09BD                DLOOP_2:   .SET   DLOOP_TOP   
09BD                DLOOP_TOP:   .SET   $   
09BD                L_M_1281S51:      
09BD   C5                     PUSH   BC   
09BE   CD D0 02               CALL   divideWordByByte   ; HL = HL / A, A = remainder
09C1   C1                     POP   BC   
09C2   F5                     PUSH   AF   
09C3   04                     INC   B   
09C4                          ;*Macro unroll:  checkZeroWord H,L
09C4   7D                     LD   A,L   
09C5   B4                     OR   H   
09C6                          ;*Macro unroll:  _until z
09C6   CA BA 09               JP   z,DLOOP_TOP - 3   
09C9                          ;*Macro unroll:  DLOOP_FWD               ; needed?
09C9                CUR_ADR:   .SET   $   ; needed?
09BB                          .ORG   DLOOP_TOP - 2   
09BB   C9 09                  DW   CUR_ADR   
09C9                          .ORG   CUR_ADR   
09C9                          ;*Macro unroll:  _enddo
09C9   C3 BD 09               JP   DLOOP_TOP   
09CC                          ;*Macro unroll:  DLOOP_FWD
09CC                CUR_ADR:   .SET   $   
09BB                          .ORG   DLOOP_TOP - 2   
09BB   CC 09                  DW   CUR_ADR   
09CC                          .ORG   CUR_ADR   
09CC                          ;*Macro unroll:  DLOOP_POP
09CC                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09CC                DLOOP_TOP:   .SET   DLOOP_2   
09CC                DLOOP_2:   .SET   DLOOP_3   
09CC                DLOOP_3:   .SET   DLOOP_4   
09CC                DLOOP_4:   .SET   DLOOP_5   
09CC                DLOOP_5:   .SET   DLOOP_6   
09CC                DLOOP_6:   .SET   DLOOP_7   
09CC                DLOOP_7:   .SET   DLOOP_8   
09CC                DLOOP_8:   .SET   DLOOP_9   
09CC                DLOOP_9:   .SET   DLOOP_10   
09CC                DLOOP_10:   .SET   DLOOP_11   
09CC                DLOOP_11:   .SET   DLOOP_12   
09CC                DLOOP_12:   .SET   0   
09CC                          ;*Macro unroll:  _do
09CC   18 03                  JR   L_M_1290S60   
09CE   C3 CE 09               JP   $   
09D1                          ;*Macro unroll:  DLOOP_PUSH $
09D1                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09D1                DLOOP_12:   .SET   DLOOP_11   
09D1                DLOOP_11:   .SET   DLOOP_10   
09D1                DLOOP_10:   .SET   DLOOP_9   
09D1                DLOOP_9:   .SET   DLOOP_8   
09D1                DLOOP_8:   .SET   DLOOP_7   
09D1                DLOOP_7:   .SET   DLOOP_6   
09D1                DLOOP_6:   .SET   DLOOP_5   
09D1                DLOOP_5:   .SET   DLOOP_4   
09D1                DLOOP_4:   .SET   DLOOP_3   
09D1                DLOOP_3:   .SET   DLOOP_2   
09D1                DLOOP_2:   .SET   DLOOP_TOP   
09D1                DLOOP_TOP:   .SET   $   
09D1                L_M_1290S60:      
09D1   F1                     POP   AF   
09D2   C6 30                  ADD   A,$30   ; convert digit to ASCII
09D4   FE 3A                  CP   $3A   
09D6                          ;*Macro unroll:  _if nc
09D6   D2 DC 09               JP   nc,L_M_1294S64   
09D9   C3 D9 09               JP   $   
09DC                          ;*Macro unroll:  STRUC_PUSH $
09DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09DC                STRUC_12:   .SET   STRUC_11   
09DC                STRUC_11:   .SET   STRUC_10   
09DC                STRUC_10:   .SET   STRUC_9   
09DC                STRUC_9:   .SET   STRUC_8   
09DC                STRUC_8:   .SET   STRUC_7   
09DC                STRUC_7:   .SET   STRUC_6   
09DC                STRUC_6:   .SET   STRUC_5   
09DC                STRUC_5:   .SET   STRUC_4   
09DC                STRUC_4:   .SET   STRUC_3   
09DC                STRUC_3:   .SET   STRUC_2   
09DC                STRUC_2:   .SET   STRUC_TOP   
09DC                STRUC_TOP:   .SET   $   
09DC                L_M_1294S64:      
09DC   C6 07                  ADD   A,7   
09DE                          ;*Macro unroll:  _endif
09DE                          ;*Macro unroll:  STRUC_FWD
09DE                CUR_ADR:   .SET   $   
09DA                          .ORG   STRUC_TOP - 2   
09DA   DE 09                  DW   CUR_ADR   
09DE                          .ORG   CUR_ADR   
09DE                          ;*Macro unroll:  STRUC_POP
09DE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09DE                STRUC_TOP:   .SET   STRUC_2   
09DE                STRUC_2:   .SET   STRUC_3   
09DE                STRUC_3:   .SET   STRUC_4   
09DE                STRUC_4:   .SET   STRUC_5   
09DE                STRUC_5:   .SET   STRUC_6   
09DE                STRUC_6:   .SET   STRUC_7   
09DE                STRUC_7:   .SET   STRUC_8   
09DE                STRUC_8:   .SET   STRUC_9   
09DE                STRUC_9:   .SET   STRUC_10   
09DE                STRUC_10:   .SET   STRUC_11   
09DE                STRUC_11:   .SET   STRUC_12   
09DE                STRUC_12:   .SET   0   
09DE   12                     LD   (DE),A   
09DF   13                     INC   DE   
09E0                          ;*Macro unroll:  _djnz
09E0   10 EF                  DJNZ   DLOOP_TOP   
09E2                          ;*Macro unroll:  DLOOP_FWD
09E2                CUR_ADR:   .SET   $   
09CF                          .ORG   DLOOP_TOP - 2   
09CF   E2 09                  DW   CUR_ADR   
09E2                          .ORG   CUR_ADR   
09E2                          ;*Macro unroll:  DLOOP_POP
09E2                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09E2                DLOOP_TOP:   .SET   DLOOP_2   
09E2                DLOOP_2:   .SET   DLOOP_3   
09E2                DLOOP_3:   .SET   DLOOP_4   
09E2                DLOOP_4:   .SET   DLOOP_5   
09E2                DLOOP_5:   .SET   DLOOP_6   
09E2                DLOOP_6:   .SET   DLOOP_7   
09E2                DLOOP_7:   .SET   DLOOP_8   
09E2                DLOOP_8:   .SET   DLOOP_9   
09E2                DLOOP_9:   .SET   DLOOP_10   
09E2                DLOOP_10:   .SET   DLOOP_11   
09E2                DLOOP_11:   .SET   DLOOP_12   
09E2                DLOOP_12:   .SET   0   
09E2   21 CD 30               LD   HL,wordBuf   ;calc length
09E5   EB                     EX   DE,HL   
09E6   B7                     OR   A   
09E7   ED 52                  SBC   HL,DE   
09E9                          ;*Macro unroll:  loadWord B,C, H,L
09E9   4D                     LD   C,L   
09EA   44                     LD   B,H   
09EB   C9                     RET      
09EC                             ; 
09EC                             ; toNumber -  converts string to number in the ***
09EC                             ; base strored in VAR_BASE
09EC                             ; 
09EC                             ; params: HL = string address, BC = string length
09EC                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
09EC                             ; destroys: AF
09EC                             ; 
09EC                TONUMBER:      
09EC   FD E5                  PUSH   IY   ; save regs
09EE   E5                     PUSH   HL   
09EF   E5                     PUSH   HL   ; IY = HL
09F0   FD E1                  POP   IY   
09F2   11 00 00               LD   DE,0   ; 16 bit accum
09F5   21 00 00               LD   HL,0   ; 8 bit char
09F8                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
09F8   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
09F9   B0                     OR   B   
09FA                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
09FA   CA 00 0A               JP   z,L_M_1322S97   ; trying to parse a zero-length string is an error, But will return 0.
09FD   C3 FD 09               JP   $   
0A00                          ;*Macro unroll:  STRUC_PUSH $
0A00                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A00                STRUC_12:   .SET   STRUC_11   
0A00                STRUC_11:   .SET   STRUC_10   
0A00                STRUC_10:   .SET   STRUC_9   
0A00                STRUC_9:   .SET   STRUC_8   
0A00                STRUC_8:   .SET   STRUC_7   
0A00                STRUC_7:   .SET   STRUC_6   
0A00                STRUC_6:   .SET   STRUC_5   
0A00                STRUC_5:   .SET   STRUC_4   
0A00                STRUC_4:   .SET   STRUC_3   
0A00                STRUC_3:   .SET   STRUC_2   
0A00                STRUC_2:   .SET   STRUC_TOP   
0A00                STRUC_TOP:   .SET   $   
0A00                L_M_1322S97:      
0A00   E1                     POP   HL   
0A01   FD E1                  POP   IY   
0A03   C9                     RET      ; de = number, BC = err
0A04                          ;*Macro unroll:  _endif
0A04                          ;*Macro unroll:  STRUC_FWD
0A04                CUR_ADR:   .SET   $   
09FE                          .ORG   STRUC_TOP - 2   
09FE   04 0A                  DW   CUR_ADR   
0A04                          .ORG   CUR_ADR   
0A04                          ;*Macro unroll:  STRUC_POP
0A04                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A04                STRUC_TOP:   .SET   STRUC_2   
0A04                STRUC_2:   .SET   STRUC_3   
0A04                STRUC_3:   .SET   STRUC_4   
0A04                STRUC_4:   .SET   STRUC_5   
0A04                STRUC_5:   .SET   STRUC_6   
0A04                STRUC_6:   .SET   STRUC_7   
0A04                STRUC_7:   .SET   STRUC_8   
0A04                STRUC_8:   .SET   STRUC_9   
0A04                STRUC_9:   .SET   STRUC_10   
0A04                STRUC_10:   .SET   STRUC_11   
0A04                STRUC_11:   .SET   STRUC_12   
0A04                STRUC_12:   .SET   0   
0A04                             ; Check if first character is "-".
0A04   FD 7E 00               LD   A,(IY)   ; l = first character in string
0A07   FD 23                  INC   IY   
0A09   D5                     PUSH   DE   ; push 0 on stack
0A0A   FE 2D                  CP   "-"   ; negative number?
0A0C                          ;*Macro unroll:  _if z
0A0C   CA 12 0A               JP   z,L_M_1332S107   
0A0F   C3 0F 0A               JP   $   
0A12                          ;*Macro unroll:  STRUC_PUSH $
0A12                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A12                STRUC_12:   .SET   STRUC_11   
0A12                STRUC_11:   .SET   STRUC_10   
0A12                STRUC_10:   .SET   STRUC_9   
0A12                STRUC_9:   .SET   STRUC_8   
0A12                STRUC_8:   .SET   STRUC_7   
0A12                STRUC_7:   .SET   STRUC_6   
0A12                STRUC_6:   .SET   STRUC_5   
0A12                STRUC_5:   .SET   STRUC_4   
0A12                STRUC_4:   .SET   STRUC_3   
0A12                STRUC_3:   .SET   STRUC_2   
0A12                STRUC_2:   .SET   STRUC_TOP   
0A12                STRUC_TOP:   .SET   $   
0A12                L_M_1332S107:      
0A12   D1                     POP   DE   
0A13   21 01 00               LD   HL,1   
0A16   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
0A17   0B                     DEC   BC   
0A18                          ;*Macro unroll:  checkZeroWord B,C
0A18   79                     LD   A,C   
0A19   B0                     OR   B   
0A1A                          ;*Macro unroll:  _if z
0A1A   CA 20 0A               JP   z,L_M_1338S113   
0A1D   C3 1D 0A               JP   $   
0A20                          ;*Macro unroll:  STRUC_PUSH $
0A20                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A20                STRUC_12:   .SET   STRUC_11   
0A20                STRUC_11:   .SET   STRUC_10   
0A20                STRUC_10:   .SET   STRUC_9   
0A20                STRUC_9:   .SET   STRUC_8   
0A20                STRUC_8:   .SET   STRUC_7   
0A20                STRUC_7:   .SET   STRUC_6   
0A20                STRUC_6:   .SET   STRUC_5   
0A20                STRUC_5:   .SET   STRUC_4   
0A20                STRUC_4:   .SET   STRUC_3   
0A20                STRUC_3:   .SET   STRUC_2   
0A20                STRUC_2:   .SET   STRUC_TOP   
0A20                STRUC_TOP:   .SET   $   
0A20                L_M_1338S113:      
0A20   E1                     POP   HL   ; error: string is only "-".
0A21   01 01 00               LD   BC,1   
0A24   E1                     POP   HL   
0A25   FD E1                  POP   IY   
0A27   C9                     RET      ; de = number, BC = err
0A28                          ;*Macro unroll:  _endif
0A28                          ;*Macro unroll:  STRUC_FWD
0A28                CUR_ADR:   .SET   $   
0A1E                          .ORG   STRUC_TOP - 2   
0A1E   28 0A                  DW   CUR_ADR   
0A28                          .ORG   CUR_ADR   
0A28                          ;*Macro unroll:  STRUC_POP
0A28                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A28                STRUC_TOP:   .SET   STRUC_2   
0A28                STRUC_2:   .SET   STRUC_3   
0A28                STRUC_3:   .SET   STRUC_4   
0A28                STRUC_4:   .SET   STRUC_5   
0A28                STRUC_5:   .SET   STRUC_6   
0A28                STRUC_6:   .SET   STRUC_7   
0A28                STRUC_7:   .SET   STRUC_8   
0A28                STRUC_8:   .SET   STRUC_9   
0A28                STRUC_9:   .SET   STRUC_10   
0A28                STRUC_10:   .SET   STRUC_11   
0A28                STRUC_11:   .SET   STRUC_12   
0A28                STRUC_12:   .SET   0   
0A28                             ; Loop reading digits.
0A28   C5                     PUSH   BC   
0A29   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0A2D   CD 2B 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0A30   C1                     POP   BC   
0A31   FD 7E 00               LD   A,(IY)   ; a = next character in string
0A34   FD 23                  INC   IY   
0A36                          ;*Macro unroll:  _endif
0A36                          ;*Macro unroll:  STRUC_FWD
0A36                CUR_ADR:   .SET   $   
0A10                          .ORG   STRUC_TOP - 2   
0A10   36 0A                  DW   CUR_ADR   
0A36                          .ORG   CUR_ADR   
0A36                          ;*Macro unroll:  STRUC_POP
0A36                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A36                STRUC_TOP:   .SET   STRUC_2   
0A36                STRUC_2:   .SET   STRUC_3   
0A36                STRUC_3:   .SET   STRUC_4   
0A36                STRUC_4:   .SET   STRUC_5   
0A36                STRUC_5:   .SET   STRUC_6   
0A36                STRUC_6:   .SET   STRUC_7   
0A36                STRUC_7:   .SET   STRUC_8   
0A36                STRUC_8:   .SET   STRUC_9   
0A36                STRUC_9:   .SET   STRUC_10   
0A36                STRUC_10:   .SET   STRUC_11   
0A36                STRUC_11:   .SET   STRUC_12   
0A36                STRUC_12:   .SET   0   
0A36                             ; Convert 0-9, A-z to a number 0-35.
0A36                          ;*Macro unroll:  _do
0A36   18 03                  JR   L_M_1354S130   
0A38   C3 38 0A               JP   $   
0A3B                          ;*Macro unroll:  DLOOP_PUSH $
0A3B                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A3B                DLOOP_12:   .SET   DLOOP_11   
0A3B                DLOOP_11:   .SET   DLOOP_10   
0A3B                DLOOP_10:   .SET   DLOOP_9   
0A3B                DLOOP_9:   .SET   DLOOP_8   
0A3B                DLOOP_8:   .SET   DLOOP_7   
0A3B                DLOOP_7:   .SET   DLOOP_6   
0A3B                DLOOP_6:   .SET   DLOOP_5   
0A3B                DLOOP_5:   .SET   DLOOP_4   
0A3B                DLOOP_4:   .SET   DLOOP_3   
0A3B                DLOOP_3:   .SET   DLOOP_2   
0A3B                DLOOP_2:   .SET   DLOOP_TOP   
0A3B                DLOOP_TOP:   .SET   $   
0A3B                L_M_1354S130:      
0A3B   D6 30                  SUB   "0"   ; < "0"?
0A3D   38 33                  JR   c,toNumberExit   ; invalid char, end of number
0A3F   FE 0A                  CP   10   ; <= "9"?
0A41                          ;*Macro unroll:  _if nc
0A41   D2 47 0A               JP   nc,L_M_1358S134   
0A44   C3 44 0A               JP   $   
0A47                          ;*Macro unroll:  STRUC_PUSH $
0A47                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A47                STRUC_12:   .SET   STRUC_11   
0A47                STRUC_11:   .SET   STRUC_10   
0A47                STRUC_10:   .SET   STRUC_9   
0A47                STRUC_9:   .SET   STRUC_8   
0A47                STRUC_8:   .SET   STRUC_7   
0A47                STRUC_7:   .SET   STRUC_6   
0A47                STRUC_6:   .SET   STRUC_5   
0A47                STRUC_5:   .SET   STRUC_4   
0A47                STRUC_4:   .SET   STRUC_3   
0A47                STRUC_3:   .SET   STRUC_2   
0A47                STRUC_2:   .SET   STRUC_TOP   
0A47                STRUC_TOP:   .SET   $   
0A47                L_M_1358S134:      
0A47   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0A49                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0A49   DA 38 0A               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0A4C                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A4C                CUR_ADR:   .SET   $   ; needed?
0A39                          .ORG   DLOOP_TOP - 2   
0A39   4C 0A                  DW   CUR_ADR   
0A4C                          .ORG   CUR_ADR   
0A4C   C6 0A                  ADD   a,10   
0A4E                          ;*Macro unroll:  _endif
0A4E                          ;*Macro unroll:  STRUC_FWD
0A4E                CUR_ADR:   .SET   $   
0A45                          .ORG   STRUC_TOP - 2   
0A45   4E 0A                  DW   CUR_ADR   
0A4E                          .ORG   CUR_ADR   
0A4E                          ;*Macro unroll:  STRUC_POP
0A4E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A4E                STRUC_TOP:   .SET   STRUC_2   
0A4E                STRUC_2:   .SET   STRUC_3   
0A4E                STRUC_3:   .SET   STRUC_4   
0A4E                STRUC_4:   .SET   STRUC_5   
0A4E                STRUC_5:   .SET   STRUC_6   
0A4E                STRUC_6:   .SET   STRUC_7   
0A4E                STRUC_7:   .SET   STRUC_8   
0A4E                STRUC_8:   .SET   STRUC_9   
0A4E                STRUC_9:   .SET   STRUC_10   
0A4E                STRUC_10:   .SET   STRUC_11   
0A4E                STRUC_11:   .SET   STRUC_12   
0A4E                STRUC_12:   .SET   0   
0A4E   2A 5B 32               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
0A51   BD                     CP   L   ; >= BASE? then invalid char, end of number
0A52                          ;*Macro unroll:  _until nc
0A52   D2 38 0A               JP   nc,DLOOP_TOP - 3   
0A55                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A55                CUR_ADR:   .SET   $   ; needed?
0A39                          .ORG   DLOOP_TOP - 2   
0A39   55 0A                  DW   CUR_ADR   
0A55                          .ORG   CUR_ADR   
0A55   83                     ADD   A,E   
0A56   5F                     LD   E,A   
0A57   3E 00                  LD   A,0   
0A59   8A                     ADC   a,d   
0A5A   57                     LD   D,A   
0A5B   0B                     DEC   BC   ; dec char count
0A5C                          ;*Macro unroll:  checkZeroWord B,C
0A5C   79                     LD   A,C   
0A5D   B0                     OR   B   
0A5E                          ;*Macro unroll:  _until z
0A5E   CA 38 0A               JP   z,DLOOP_TOP - 3   
0A61                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A61                CUR_ADR:   .SET   $   ; needed?
0A39                          .ORG   DLOOP_TOP - 2   
0A39   61 0A                  DW   CUR_ADR   
0A61                          .ORG   CUR_ADR   
0A61   C5                     PUSH   BC   
0A62   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0A66   CD 2B 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0A69   C1                     POP   BC   
0A6A   FD 7E 00               LD   A,(IY)   ; a = next character in string
0A6D   FD 23                  INC   IY   
0A6F                          ;*Macro unroll:  _enddo
0A6F   C3 3B 0A               JP   DLOOP_TOP   
0A72                          ;*Macro unroll:  DLOOP_FWD
0A72                CUR_ADR:   .SET   $   
0A39                          .ORG   DLOOP_TOP - 2   
0A39   72 0A                  DW   CUR_ADR   
0A72                          .ORG   CUR_ADR   
0A72                          ;*Macro unroll:  DLOOP_POP
0A72                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A72                DLOOP_TOP:   .SET   DLOOP_2   
0A72                DLOOP_2:   .SET   DLOOP_3   
0A72                DLOOP_3:   .SET   DLOOP_4   
0A72                DLOOP_4:   .SET   DLOOP_5   
0A72                DLOOP_5:   .SET   DLOOP_6   
0A72                DLOOP_6:   .SET   DLOOP_7   
0A72                DLOOP_7:   .SET   DLOOP_8   
0A72                DLOOP_8:   .SET   DLOOP_9   
0A72                DLOOP_9:   .SET   DLOOP_10   
0A72                DLOOP_10:   .SET   DLOOP_11   
0A72                DLOOP_11:   .SET   DLOOP_12   
0A72                DLOOP_12:   .SET   0   
0A72                TONUMBEREXIT:      
0A72   E1                     POP   HL   
0A73                          ;*Macro unroll:  checkZeroWord H,L
0A73   7D                     LD   A,L   
0A74   B4                     OR   H   
0A75                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0A75   C2 7B 0A               JP   nz,L_M_1384S163   ; if not -ve then skip
0A78   C3 78 0A               JP   $   
0A7B                          ;*Macro unroll:  STRUC_PUSH $
0A7B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A7B                STRUC_12:   .SET   STRUC_11   
0A7B                STRUC_11:   .SET   STRUC_10   
0A7B                STRUC_10:   .SET   STRUC_9   
0A7B                STRUC_9:   .SET   STRUC_8   
0A7B                STRUC_8:   .SET   STRUC_7   
0A7B                STRUC_7:   .SET   STRUC_6   
0A7B                STRUC_6:   .SET   STRUC_5   
0A7B                STRUC_5:   .SET   STRUC_4   
0A7B                STRUC_4:   .SET   STRUC_3   
0A7B                STRUC_3:   .SET   STRUC_2   
0A7B                STRUC_2:   .SET   STRUC_TOP   
0A7B                STRUC_TOP:   .SET   $   
0A7B                L_M_1384S163:      
0A7B   EB                     EX   DE,HL   ; negate de
0A7C   CD C8 02               CALL   negateNum   
0A7F   EB                     EX   DE,HL   
0A80                          ;*Macro unroll:  _endif
0A80                          ;*Macro unroll:  STRUC_FWD
0A80                CUR_ADR:   .SET   $   
0A79                          .ORG   STRUC_TOP - 2   
0A79   80 0A                  DW   CUR_ADR   
0A80                          .ORG   CUR_ADR   
0A80                          ;*Macro unroll:  STRUC_POP
0A80                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A80                STRUC_TOP:   .SET   STRUC_2   
0A80                STRUC_2:   .SET   STRUC_3   
0A80                STRUC_3:   .SET   STRUC_4   
0A80                STRUC_4:   .SET   STRUC_5   
0A80                STRUC_5:   .SET   STRUC_6   
0A80                STRUC_6:   .SET   STRUC_7   
0A80                STRUC_7:   .SET   STRUC_8   
0A80                STRUC_8:   .SET   STRUC_9   
0A80                STRUC_9:   .SET   STRUC_10   
0A80                STRUC_10:   .SET   STRUC_11   
0A80                STRUC_11:   .SET   STRUC_12   
0A80                STRUC_12:   .SET   0   
0A80   E1                     POP   HL   
0A81   FD E1                  POP   IY   
0A83   C9                     RET      ; de = number, BC = err
0A84                          ;*Macro unroll: mCODE "number",6,0,NUMBER         ; ( ptr len -- num err )
0A84                HEADER_NUMBER:      ; ( ptr len -- num err )
0A84   65 09                  DW   link   
0A86                LINK:     .SET   HEADER_NUMBER   
0A86   06                     DB   0 + 6   
0A87   6E 75 6D 62 65 72      DB   "number"   
0A8D                NUMBER:      
0A8D                          ;*Macro unroll:  ppop0 H,L
0A8D   DD 2B                  DEC   IX   
0A8F   DD 66 00               LD   H,(IX+0)   
0A92   DD 2B                  DEC   IX   
0A94   DD 6E 00               LD   L,(IX+0)   
0A97   CD EC 09               CALL   toNumber   ; params: HL = string address, BC = string length
0A9A                             ; Returns the parsed number in DE,
0A9A                             ; BC = 0, success
0A9A                          ;*Macro unroll:  ppush0 D,E
0A9A   DD 73 00               LD   (IX+0),E   
0A9D   DD 23                  INC   IX   
0A9F   DD 72 00               LD   (IX+0),D   
0AA2   DD 23                  INC   IX   
0AA4                          ;*Macro unroll:  NEXT
0AA4   C3 63 0E               JP   enter   
0AA7                          ;*Macro unroll: mCODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
0AA7                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
0AA7   84 0A                  DW   link   
0AA9                LINK:     .SET   HEADER_decimal   
0AA9   07                     DB   0 + 7   
0AAA   64 65 63 69 6D 61 6C   DB   "decimal"   
0AB1                DECIMAL:      
0AB1                          ;*Macro unroll:  ENTER
0AB1   CF                     RST   $08   
0AB2   73 11 0A 00 C3 08 86 0E DW   lit,10,base,store   
0ABA                          ;*Macro unroll:  EXIT
0ABA   74 0E                  DW   exit   
0ABC   C3 63 0E               JP   enter   
0ABF                          ;*Macro unroll: mCODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
0ABF                HEADER_HEX:      ; pushes ptr to string and length on stack
0ABF   A7 0A                  DW   link   
0AC1                LINK:     .SET   HEADER_hex   
0AC1   03                     DB   0 + 3   
0AC2   68 65 78               DB   "hex"   
0AC5                HEX:         
0AC5                          ;*Macro unroll:  ENTER
0AC5   CF                     RST   $08   
0AC6   73 11 10 00 C3 08 86 0E DW   lit,16,base,store   
0ACE                          ;*Macro unroll:  EXIT
0ACE   74 0E                  DW   exit   
0AD0   C3 63 0E               JP   enter   
0AD3                          ;*Macro unroll: mCODE "quit",4,0,quit
0AD3                HEADER_QUIT:      
0AD3   BF 0A                  DW   link   
0AD5                LINK:     .SET   HEADER_quit   
0AD5   04                     DB   0 + 4   
0AD6   71 75 69 74            DB   "quit"   
0ADA                QUIT:        
0ADA                          ;*Macro unroll:  ENTER
0ADA   CF                     RST   $08   
0ADB   AC 08 A7 0E 10 0F      DW   sp0,fetch,spStore   
0AE1   3F 0B                  DW   interpret   
0AE3                          ;*Macro unroll:  EXIT
0AE3   74 0E                  DW   exit   
0AE5   C3 63 0E               JP   enter   
0AE8                          ;*Macro unroll: mCODE "word",5,0,WORD                 ; delim -- c-addr
0AE8                HEADER_WORD:      ; delim -- c-addr
0AE8   D3 0A                  DW   link   
0AEA                LINK:     .SET   HEADER_WORD   
0AEA   05                     DB   0 + 5   
0AEB   77 6F 72 64            DB   "word"   
0AEF                WORD:        
0AEF                          ;*Macro unroll:  ENTER
0AEF   CF                     RST   $08   
0AF0   73 11 40 00            DW   lit,64   ; limit
0AF4   48 08 A7 0E            DW   here,fetch   
0AF8   A7 0B                  DW   xword   ; writes to HERE!
0AFA                          ;*Macro unroll:  EXIT
0AFA   74 0E                  DW   exit   
0AFC   C3 63 0E               JP   enter   
0AFF                          ;*Macro unroll: mCODE ">cfa",4,0,tcfa
0AFF                HEADER_TCFA:      
0AFF   E8 0A                  DW   link   
0B01                LINK:     .SET   HEADER_tcfa   
0B01   04                     DB   0 + 4   
0B02   3E 63 66 61            DB   ">cfa"   
0B06                TCFA:        
0B06                          ;*Macro unroll:  ENTER
0B06   CF                     RST   $08   
0B07   73 11 02 00 CE 00      DW   lit,2,plus   
0B0D   C0 12                  DW   count   
0B0F   73 11 3F 00 86 00      DW   lit,msk_length,ANDD   
0B15   CE 00                  DW   plus   
0B17                          ;*Macro unroll:  EXIT
0B17   74 0E                  DW   exit   
0B19   C3 63 0E               JP   enter   
0B1C                          ;*Macro unroll: mCODE "execute",7,0,EXECUTE
0B1C                HEADER_EXECUTE:      
0B1C   FF 0A                  DW   link   
0B1E                LINK:     .SET   HEADER_EXECUTE   
0B1E   07                     DB   0 + 7   
0B1F   65 78 65 63 75 74 65   DB   "execute"   
0B26                EXECUTE:      
0B26                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0B26   60                     LD   H,B   ; POP TOS into HL
0B27   69                     LD   L,C   
0B28                          ;*Macro unroll:  ppop0 B,C
0B28   DD 2B                  DEC   IX   
0B2A   DD 46 00               LD   B,(IX+0)   
0B2D   DD 2B                  DEC   IX   
0B2F   DD 4E 00               LD   C,(IX+0)   
0B32   E9                     JP   (hl)   ; go do Forth word
0B33                          ;*Macro unroll: mCODE "interpret",6,0,interpret
0B33                HEADER_INTERPRET:      
0B33   1C 0B                  DW   link   
0B35                LINK:     .SET   HEADER_interpret   
0B35   06                     DB   0 + 6   
0B36   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0B3F                INTERPRET:      
0B3F   CF                     RST   $08   
0B40                          ;*Macro unroll:  cDo
0B40   3D 07 06 00            DW   BRAN,6   
0B44   3D 07 00 00            DW   BRAN,0   
0B48                          ;*Macro unroll:  CPL_PUSH $
0B48                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B48                CPL_10:   .SET   CPL_9   
0B48                CPL_9:    .SET   CPL_8   
0B48                CPL_8:    .SET   CPL_7   
0B48                CPL_7:    .SET   CPL_6   
0B48                CPL_6:    .SET   CPL_5   
0B48                CPL_5:    .SET   CPL_4   
0B48                CPL_4:    .SET   CPL_3   
0B48                CPL_3:    .SET   CPL_2   
0B48                CPL_2:    .SET   CPL_TOP   
0B48                CPL_TOP:   .SET   $   
0B48   E1 0D EF 0A C0 12      DW   bl,word,count   ; pstr -- ptr len
0B4E   F4 11 73 03            DW   DUPP,zEqual   
0B52                          ;*Macro unroll:  cIf
0B52   20 07 00 00            DW   QBRAN,0   
0B56                          ;*Macro unroll:  CPL_PUSH $
0B56                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B56                CPL_10:   .SET   CPL_9   
0B56                CPL_9:    .SET   CPL_8   
0B56                CPL_8:    .SET   CPL_7   
0B56                CPL_7:    .SET   CPL_6   
0B56                CPL_6:    .SET   CPL_5   
0B56                CPL_5:    .SET   CPL_4   
0B56                CPL_4:    .SET   CPL_3   
0B56                CPL_3:    .SET   CPL_2   
0B56                CPL_2:    .SET   CPL_TOP   
0B56                CPL_TOP:   .SET   $   
0B56   28 12 28 12            DW   drop,drop   ; ptr len --
0B5A                          ;*Macro unroll:  EXIT
0B5A   74 0E                  DW   exit   
0B5C   C3 63 0E               JP   enter   
0B5F                          ;*Macro unroll:  cEndif
0B5F                          ;*Macro unroll:  cBRANCH_FWD
0B5F                CUR_ADR:   .SET   $   
0B54                          .ORG   CPL_TOP - 2   
0B54   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0B5F                          .ORG   CUR_ADR   
0B5F                          ;*Macro unroll:  CPL_POP
0B5F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B5F                CPL_TOP:   .SET   CPL_2   
0B5F                CPL_2:    .SET   CPL_3   
0B5F                CPL_3:    .SET   CPL_4   
0B5F                CPL_4:    .SET   CPL_5   
0B5F                CPL_5:    .SET   CPL_6   
0B5F                CPL_6:    .SET   CPL_7   
0B5F                CPL_7:    .SET   CPL_8   
0B5F                CPL_8:    .SET   CPL_9   
0B5F                CPL_9:    .SET   CPL_10   
0B5F                CPL_10:   .SET   0   
0B5F   8E 0C                  DW   interpToken   ; interpret the next word
0B61                          ;*Macro unroll:  cEndDo
0B61   3D 07 E5 FF            DW   BRAN,CPL_TOP - $ - 2   
0B65                          ;*Macro unroll:  cBRANCH_FWD
0B65                CUR_ADR:   .SET   $   
0B46                          .ORG   CPL_TOP - 2   
0B46   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0B65                          .ORG   CUR_ADR   
0B65                          ;*Macro unroll:  CPL_POP
0B65                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B65                CPL_TOP:   .SET   CPL_2   
0B65                CPL_2:    .SET   CPL_3   
0B65                CPL_3:    .SET   CPL_4   
0B65                CPL_4:    .SET   CPL_5   
0B65                CPL_5:    .SET   CPL_6   
0B65                CPL_6:    .SET   CPL_7   
0B65                CPL_7:    .SET   CPL_8   
0B65                CPL_8:    .SET   CPL_9   
0B65                CPL_9:    .SET   CPL_10   
0B65                CPL_10:   .SET   0   
0B65                          ;*Macro unroll:  EXIT
0B65   74 0E                  DW   exit   
0B67   C3 63 0E               JP   enter   
0B6A                             ; 
0B6A                             ; lookup - lookup header in dictionary ***
0B6A                             ; 
0B6A                             ; params: HL = string address, BC = string length
0B6A                             ; returns: DE = found header ptr or 0
0B6A                             ; destroys: AF
0B6A                             ; 
0B6A                LOOKUP:      
0B6A   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0B6E                          ;*Macro unroll:  _do
0B6E   18 03                  JR   L_M_1449S49   
0B70   C3 70 0B               JP   $   
0B73                          ;*Macro unroll:  DLOOP_PUSH $
0B73                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0B73                DLOOP_12:   .SET   DLOOP_11   
0B73                DLOOP_11:   .SET   DLOOP_10   
0B73                DLOOP_10:   .SET   DLOOP_9   
0B73                DLOOP_9:   .SET   DLOOP_8   
0B73                DLOOP_8:   .SET   DLOOP_7   
0B73                DLOOP_7:   .SET   DLOOP_6   
0B73                DLOOP_6:   .SET   DLOOP_5   
0B73                DLOOP_5:   .SET   DLOOP_4   
0B73                DLOOP_4:   .SET   DLOOP_3   
0B73                DLOOP_3:   .SET   DLOOP_2   
0B73                DLOOP_2:   .SET   DLOOP_TOP   
0B73                DLOOP_TOP:   .SET   $   
0B73                L_M_1449S49:      
0B73                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0B73   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0B74   B2                     OR   D   
0B75   C8                     RET   z   
0B76                             ; Compare the length expected and the length of the word.
0B76                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0B76                             ; this won't pick the word (the length will appear to be wrong).
0B76   D5                     PUSH   DE   ; save ptr to header
0B77   13                     INC   DE   ; skip over first field
0B78   13                     INC   DE   
0B79   1A                     LD   A,(DE)   ; a = flags+length field
0B7A   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
0B7C   B9                     CP   C   ; Length is the same?
0B7D                          ;*Macro unroll:  _if z
0B7D   CA 83 0B               JP   z,L_M_1461S65   
0B80   C3 80 0B               JP   $   
0B83                          ;*Macro unroll:  STRUC_PUSH $
0B83                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B83                STRUC_12:   .SET   STRUC_11   
0B83                STRUC_11:   .SET   STRUC_10   
0B83                STRUC_10:   .SET   STRUC_9   
0B83                STRUC_9:   .SET   STRUC_8   
0B83                STRUC_8:   .SET   STRUC_7   
0B83                STRUC_7:   .SET   STRUC_6   
0B83                STRUC_6:   .SET   STRUC_5   
0B83                STRUC_5:   .SET   STRUC_4   
0B83                STRUC_4:   .SET   STRUC_3   
0B83                STRUC_3:   .SET   STRUC_2   
0B83                STRUC_2:   .SET   STRUC_TOP   
0B83                STRUC_TOP:   .SET   $   
0B83                L_M_1461S65:      
0B83                             ; Compare the strings in detail.
0B83   13                     INC   DE   ; DE = Dictionary string we are checking against.
0B84   E5                     PUSH   HL   ; save HL, BC
0B85   C5                     PUSH   BC   
0B86   CD 31 13               CALL   compareStr   ; Compare the strings. BC = len
0B89   C1                     POP   BC   
0B8A   E1                     POP   HL   
0B8B   B7                     OR   A   ; if A == 0 then matched
0B8C                          ;*Macro unroll:  _if z
0B8C   CA 92 0B               JP   z,L_M_1470S76   
0B8F   C3 8F 0B               JP   $   
0B92                          ;*Macro unroll:  STRUC_PUSH $
0B92                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B92                STRUC_12:   .SET   STRUC_11   
0B92                STRUC_11:   .SET   STRUC_10   
0B92                STRUC_10:   .SET   STRUC_9   
0B92                STRUC_9:   .SET   STRUC_8   
0B92                STRUC_8:   .SET   STRUC_7   
0B92                STRUC_7:   .SET   STRUC_6   
0B92                STRUC_6:   .SET   STRUC_5   
0B92                STRUC_5:   .SET   STRUC_4   
0B92                STRUC_4:   .SET   STRUC_3   
0B92                STRUC_3:   .SET   STRUC_2   
0B92                STRUC_2:   .SET   STRUC_TOP   
0B92                STRUC_TOP:   .SET   $   
0B92                L_M_1470S76:      
0B92   D1                     POP   DE   ; matched, restore DE and return
0B93   C9                     RET      
0B94                          ;*Macro unroll:  _endif
0B94                          ;*Macro unroll:  STRUC_FWD
0B94                CUR_ADR:   .SET   $   
0B90                          .ORG   STRUC_TOP - 2   
0B90   94 0B                  DW   CUR_ADR   
0B94                          .ORG   CUR_ADR   
0B94                          ;*Macro unroll:  STRUC_POP
0B94                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0B94                STRUC_TOP:   .SET   STRUC_2   
0B94                STRUC_2:   .SET   STRUC_3   
0B94                STRUC_3:   .SET   STRUC_4   
0B94                STRUC_4:   .SET   STRUC_5   
0B94                STRUC_5:   .SET   STRUC_6   
0B94                STRUC_6:   .SET   STRUC_7   
0B94                STRUC_7:   .SET   STRUC_8   
0B94                STRUC_8:   .SET   STRUC_9   
0B94                STRUC_9:   .SET   STRUC_10   
0B94                STRUC_10:   .SET   STRUC_11   
0B94                STRUC_11:   .SET   STRUC_12   
0B94                STRUC_12:   .SET   0   
0B94                          ;*Macro unroll:  _endif
0B94                          ;*Macro unroll:  STRUC_FWD
0B94                CUR_ADR:   .SET   $   
0B81                          .ORG   STRUC_TOP - 2   
0B81   94 0B                  DW   CUR_ADR   
0B94                          .ORG   CUR_ADR   
0B94                          ;*Macro unroll:  STRUC_POP
0B94                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0B94                STRUC_TOP:   .SET   STRUC_2   
0B94                STRUC_2:   .SET   STRUC_3   
0B94                STRUC_3:   .SET   STRUC_4   
0B94                STRUC_4:   .SET   STRUC_5   
0B94                STRUC_5:   .SET   STRUC_6   
0B94                STRUC_6:   .SET   STRUC_7   
0B94                STRUC_7:   .SET   STRUC_8   
0B94                STRUC_8:   .SET   STRUC_9   
0B94                STRUC_9:   .SET   STRUC_10   
0B94                STRUC_10:   .SET   STRUC_11   
0B94                STRUC_11:   .SET   STRUC_12   
0B94                STRUC_12:   .SET   0   
0B94   D1                     POP   DE   ; restore DE
0B95   1A                     LD   A,(DE)   
0B96   08                     EX   AF,AF'   
0B97   13                     INC   DE   
0B98   1A                     LD   A,(DE)   
0B99   57                     LD   D,A   
0B9A   08                     EX   AF,AF'   
0B9B   5F                     LD   E,A   
0B9C                          ;*Macro unroll:  _enddo
0B9C   C3 73 0B               JP   DLOOP_TOP   
0B9F                          ;*Macro unroll:  DLOOP_FWD
0B9F                CUR_ADR:   .SET   $   
0B71                          .ORG   DLOOP_TOP - 2   
0B71   9F 0B                  DW   CUR_ADR   
0B9F                          .ORG   CUR_ADR   
0B9F                          ;*Macro unroll:  DLOOP_POP
0B9F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0B9F                DLOOP_TOP:   .SET   DLOOP_2   
0B9F                DLOOP_2:   .SET   DLOOP_3   
0B9F                DLOOP_3:   .SET   DLOOP_4   
0B9F                DLOOP_4:   .SET   DLOOP_5   
0B9F                DLOOP_5:   .SET   DLOOP_6   
0B9F                DLOOP_6:   .SET   DLOOP_7   
0B9F                DLOOP_7:   .SET   DLOOP_8   
0B9F                DLOOP_8:   .SET   DLOOP_9   
0B9F                DLOOP_9:   .SET   DLOOP_10   
0B9F                DLOOP_10:   .SET   DLOOP_11   
0B9F                DLOOP_11:   .SET   DLOOP_12   
0B9F                DLOOP_12:   .SET   0   
0B9F                          ;*Macro unroll: mCODE "xword",6,0,xword               ; delim limit addr -- c-addr
0B9F                HEADER_XWORD:      ; delim limit addr -- c-addr
0B9F   33 0B                  DW   link   
0BA1                LINK:     .SET   HEADER_xword   
0BA1   06                     DB   0 + 6   
0BA2   78 77 6F 72 64         DB   "xword"   
0BA7                XWORD:       
0BA7   CD B0 0B               CALL   xwordSkip   
0BAA   CD 44 0C               CALL   xwordRead   
0BAD                          ;*Macro unroll:  NEXT
0BAD   C3 63 0E               JP   enter   
0BB0                XWORDSKIP:      ; delim addr -- delim addr char
0BB0                          ;*Macro unroll:  ppop H,L
0BB0   60                     LD   H,B   
0BB1   69                     LD   L,C   
0BB2                          ;*Macro unroll:  ppop0 B,C
0BB2   DD 2B                  DEC   IX   
0BB4   DD 46 00               LD   B,(IX+0)   
0BB7   DD 2B                  DEC   IX   
0BB9   DD 4E 00               LD   C,(IX+0)   
0BBC                          ;*Macro unroll:  ppop D,E
0BBC   50                     LD   D,B   
0BBD   59                     LD   E,C   
0BBE                          ;*Macro unroll:  ppop0 B,C
0BBE   DD 2B                  DEC   IX   
0BC0   DD 46 00               LD   B,(IX+0)   
0BC3   DD 2B                  DEC   IX   
0BC5   DD 4E 00               LD   C,(IX+0)   
0BC8                          ;*Macro unroll:  ppush0 B,C
0BC8   DD 71 00               LD   (IX+0),C   
0BCB   DD 23                  INC   IX   
0BCD   DD 70 00               LD   (IX+0),B   
0BD0   DD 23                  INC   IX   
0BD2                          ;*Macro unroll:  ppush0 D,E
0BD2   DD 73 00               LD   (IX+0),E   
0BD5   DD 23                  INC   IX   
0BD7   DD 72 00               LD   (IX+0),D   
0BDA   DD 23                  INC   IX   
0BDC                          ;*Macro unroll:  ppush0 H,L
0BDC   DD 75 00               LD   (IX+0),L   
0BDF   DD 23                  INC   IX   
0BE1   DD 74 00               LD   (IX+0),H   
0BE4   DD 23                  INC   IX   
0BE6                          ;*Macro unroll:  _do
0BE6   18 03                  JR   L_M_1494S103   
0BE8   C3 E8 0B               JP   $   
0BEB                          ;*Macro unroll:  DLOOP_PUSH $
0BEB                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0BEB                DLOOP_12:   .SET   DLOOP_11   
0BEB                DLOOP_11:   .SET   DLOOP_10   
0BEB                DLOOP_10:   .SET   DLOOP_9   
0BEB                DLOOP_9:   .SET   DLOOP_8   
0BEB                DLOOP_8:   .SET   DLOOP_7   
0BEB                DLOOP_7:   .SET   DLOOP_6   
0BEB                DLOOP_6:   .SET   DLOOP_5   
0BEB                DLOOP_5:   .SET   DLOOP_4   
0BEB                DLOOP_4:   .SET   DLOOP_3   
0BEB                DLOOP_3:   .SET   DLOOP_2   
0BEB                DLOOP_2:   .SET   DLOOP_TOP   
0BEB                DLOOP_TOP:   .SET   $   
0BEB                L_M_1494S103:      
0BEB   CD 0E 11               CALL   getKey   ; get next key, returned in A
0BEE                          ;*Macro unroll:  _switch
0BEE   18 03                  JR   L_M_1496S106   
0BF0   C3 F0 0B               JP   $   
0BF3                          ;*Macro unroll:  STRUC_PUSH $
0BF3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0BF3                STRUC_12:   .SET   STRUC_11   
0BF3                STRUC_11:   .SET   STRUC_10   
0BF3                STRUC_10:   .SET   STRUC_9   
0BF3                STRUC_9:   .SET   STRUC_8   
0BF3                STRUC_8:   .SET   STRUC_7   
0BF3                STRUC_7:   .SET   STRUC_6   
0BF3                STRUC_6:   .SET   STRUC_5   
0BF3                STRUC_5:   .SET   STRUC_4   
0BF3                STRUC_4:   .SET   STRUC_3   
0BF3                STRUC_3:   .SET   STRUC_2   
0BF3                STRUC_2:   .SET   STRUC_TOP   
0BF3                STRUC_TOP:   .SET   $   
0BF3                L_M_1496S106:      
0BF3   CB 7F                  BIT   7,A   ; check end of input
0BF5                          ;*Macro unroll:  _if nz
0BF5   C2 FB 0B               JP   nz,L_M_1498S109   
0BF8   C3 F8 0B               JP   $   
0BFB                          ;*Macro unroll:  STRUC_PUSH $
0BFB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0BFB                STRUC_12:   .SET   STRUC_11   
0BFB                STRUC_11:   .SET   STRUC_10   
0BFB                STRUC_10:   .SET   STRUC_9   
0BFB                STRUC_9:   .SET   STRUC_8   
0BFB                STRUC_8:   .SET   STRUC_7   
0BFB                STRUC_7:   .SET   STRUC_6   
0BFB                STRUC_6:   .SET   STRUC_5   
0BFB                STRUC_5:   .SET   STRUC_4   
0BFB                STRUC_4:   .SET   STRUC_3   
0BFB                STRUC_3:   .SET   STRUC_2   
0BFB                STRUC_2:   .SET   STRUC_TOP   
0BFB                STRUC_TOP:   .SET   $   
0BFB                L_M_1498S109:      
0BFB   36 00                  LD   (HL),0   
0BFD   3E 00                  LD   A,0   
0BFF                          ;*Macro unroll:  _break
0BFF   C3 E8 0B               JP   DLOOP_TOP - 3   
0C02                          ;*Macro unroll:  _endif
0C02                          ;*Macro unroll:  STRUC_FWD
0C02                CUR_ADR:   .SET   $   
0BF9                          .ORG   STRUC_TOP - 2   
0BF9   02 0C                  DW   CUR_ADR   
0C02                          .ORG   CUR_ADR   
0C02                          ;*Macro unroll:  STRUC_POP
0C02                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C02                STRUC_TOP:   .SET   STRUC_2   
0C02                STRUC_2:   .SET   STRUC_3   
0C02                STRUC_3:   .SET   STRUC_4   
0C02                STRUC_4:   .SET   STRUC_5   
0C02                STRUC_5:   .SET   STRUC_6   
0C02                STRUC_6:   .SET   STRUC_7   
0C02                STRUC_7:   .SET   STRUC_8   
0C02                STRUC_8:   .SET   STRUC_9   
0C02                STRUC_9:   .SET   STRUC_10   
0C02                STRUC_10:   .SET   STRUC_11   
0C02                STRUC_11:   .SET   STRUC_12   
0C02                STRUC_12:   .SET   0   
0C02   FE 5C                  CP   $5C   ; \ start of a comment?
0C04                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0C04   CA 0A 0C               JP   z,L_M_1504S116   ; if yes skip to end of line
0C07   C3 07 0C               JP   $   
0C0A                          ;*Macro unroll:  STRUC_PUSH $
0C0A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C0A                STRUC_12:   .SET   STRUC_11   
0C0A                STRUC_11:   .SET   STRUC_10   
0C0A                STRUC_10:   .SET   STRUC_9   
0C0A                STRUC_9:   .SET   STRUC_8   
0C0A                STRUC_8:   .SET   STRUC_7   
0C0A                STRUC_7:   .SET   STRUC_6   
0C0A                STRUC_6:   .SET   STRUC_5   
0C0A                STRUC_5:   .SET   STRUC_4   
0C0A                STRUC_4:   .SET   STRUC_3   
0C0A                STRUC_3:   .SET   STRUC_2   
0C0A                STRUC_2:   .SET   STRUC_TOP   
0C0A                STRUC_TOP:   .SET   $   
0C0A                L_M_1504S116:      
0C0A                          ;*Macro unroll:  _do
0C0A   18 03                  JR   L_M_1505S117   
0C0C   C3 0C 0C               JP   $   
0C0F                          ;*Macro unroll:  DLOOP_PUSH $
0C0F                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C0F                DLOOP_12:   .SET   DLOOP_11   
0C0F                DLOOP_11:   .SET   DLOOP_10   
0C0F                DLOOP_10:   .SET   DLOOP_9   
0C0F                DLOOP_9:   .SET   DLOOP_8   
0C0F                DLOOP_8:   .SET   DLOOP_7   
0C0F                DLOOP_7:   .SET   DLOOP_6   
0C0F                DLOOP_6:   .SET   DLOOP_5   
0C0F                DLOOP_5:   .SET   DLOOP_4   
0C0F                DLOOP_4:   .SET   DLOOP_3   
0C0F                DLOOP_3:   .SET   DLOOP_2   
0C0F                DLOOP_2:   .SET   DLOOP_TOP   
0C0F                DLOOP_TOP:   .SET   $   
0C0F                L_M_1505S117:      
0C0F   CD 0E 11               CALL   getKey   
0C12   FE 0D                  CP   "\r"   ; end of line yet?
0C14                          ;*Macro unroll:  _if nz
0C14   C2 1A 0C               JP   nz,L_M_1508S120   
0C17   C3 17 0C               JP   $   
0C1A                          ;*Macro unroll:  STRUC_PUSH $
0C1A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C1A                STRUC_12:   .SET   STRUC_11   
0C1A                STRUC_11:   .SET   STRUC_10   
0C1A                STRUC_10:   .SET   STRUC_9   
0C1A                STRUC_9:   .SET   STRUC_8   
0C1A                STRUC_8:   .SET   STRUC_7   
0C1A                STRUC_7:   .SET   STRUC_6   
0C1A                STRUC_6:   .SET   STRUC_5   
0C1A                STRUC_5:   .SET   STRUC_4   
0C1A                STRUC_4:   .SET   STRUC_3   
0C1A                STRUC_3:   .SET   STRUC_2   
0C1A                STRUC_2:   .SET   STRUC_TOP   
0C1A                STRUC_TOP:   .SET   $   
0C1A                L_M_1508S120:      
0C1A   FE 0A                  CP   "\n"   ; end of line yet?
0C1C                          ;*Macro unroll:  _endif
0C1C                          ;*Macro unroll:  STRUC_FWD
0C1C                CUR_ADR:   .SET   $   
0C18                          .ORG   STRUC_TOP - 2   
0C18   1C 0C                  DW   CUR_ADR   
0C1C                          .ORG   CUR_ADR   
0C1C                          ;*Macro unroll:  STRUC_POP
0C1C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C1C                STRUC_TOP:   .SET   STRUC_2   
0C1C                STRUC_2:   .SET   STRUC_3   
0C1C                STRUC_3:   .SET   STRUC_4   
0C1C                STRUC_4:   .SET   STRUC_5   
0C1C                STRUC_5:   .SET   STRUC_6   
0C1C                STRUC_6:   .SET   STRUC_7   
0C1C                STRUC_7:   .SET   STRUC_8   
0C1C                STRUC_8:   .SET   STRUC_9   
0C1C                STRUC_9:   .SET   STRUC_10   
0C1C                STRUC_10:   .SET   STRUC_11   
0C1C                STRUC_11:   .SET   STRUC_12   
0C1C                STRUC_12:   .SET   0   
0C1C                          ;*Macro unroll:  _until z
0C1C   CA 0C 0C               JP   z,DLOOP_TOP - 3   
0C1F                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C1F                CUR_ADR:   .SET   $   ; needed?
0C0D                          .ORG   DLOOP_TOP - 2   
0C0D   1F 0C                  DW   CUR_ADR   
0C1F                          .ORG   CUR_ADR   
0C1F                          ;*Macro unroll:  _enddo
0C1F   C3 0F 0C               JP   DLOOP_TOP   
0C22                          ;*Macro unroll:  DLOOP_FWD
0C22                CUR_ADR:   .SET   $   
0C0D                          .ORG   DLOOP_TOP - 2   
0C0D   22 0C                  DW   CUR_ADR   
0C22                          .ORG   CUR_ADR   
0C22                          ;*Macro unroll:  DLOOP_POP
0C22                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C22                DLOOP_TOP:   .SET   DLOOP_2   
0C22                DLOOP_2:   .SET   DLOOP_3   
0C22                DLOOP_3:   .SET   DLOOP_4   
0C22                DLOOP_4:   .SET   DLOOP_5   
0C22                DLOOP_5:   .SET   DLOOP_6   
0C22                DLOOP_6:   .SET   DLOOP_7   
0C22                DLOOP_7:   .SET   DLOOP_8   
0C22                DLOOP_8:   .SET   DLOOP_9   
0C22                DLOOP_9:   .SET   DLOOP_10   
0C22                DLOOP_10:   .SET   DLOOP_11   
0C22                DLOOP_11:   .SET   DLOOP_12   
0C22                DLOOP_12:   .SET   0   
0C22                          ;*Macro unroll:  _endcase
0C22   C3 F0 0B               JP   STRUC_2 - 3   
0C25                          ;*Macro unroll:  STRUC_FWD
0C25                CUR_ADR:   .SET   $   
0C08                          .ORG   STRUC_TOP - 2   
0C08   25 0C                  DW   CUR_ADR   
0C25                          .ORG   CUR_ADR   
0C25                          ;*Macro unroll:  STRUC_POP
0C25                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C25                STRUC_TOP:   .SET   STRUC_2   
0C25                STRUC_2:   .SET   STRUC_3   
0C25                STRUC_3:   .SET   STRUC_4   
0C25                STRUC_4:   .SET   STRUC_5   
0C25                STRUC_5:   .SET   STRUC_6   
0C25                STRUC_6:   .SET   STRUC_7   
0C25                STRUC_7:   .SET   STRUC_8   
0C25                STRUC_8:   .SET   STRUC_9   
0C25                STRUC_9:   .SET   STRUC_10   
0C25                STRUC_10:   .SET   STRUC_11   
0C25                STRUC_11:   .SET   STRUC_12   
0C25                STRUC_12:   .SET   0   
0C25   B9                     CP   C   ; = space?
0C26                          ;*Macro unroll:  _case z
0C26   CA 2C 0C               JP   z,L_M_1515S128   
0C29   C3 29 0C               JP   $   
0C2C                          ;*Macro unroll:  STRUC_PUSH $
0C2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C2C                STRUC_12:   .SET   STRUC_11   
0C2C                STRUC_11:   .SET   STRUC_10   
0C2C                STRUC_10:   .SET   STRUC_9   
0C2C                STRUC_9:   .SET   STRUC_8   
0C2C                STRUC_8:   .SET   STRUC_7   
0C2C                STRUC_7:   .SET   STRUC_6   
0C2C                STRUC_6:   .SET   STRUC_5   
0C2C                STRUC_5:   .SET   STRUC_4   
0C2C                STRUC_4:   .SET   STRUC_3   
0C2C                STRUC_3:   .SET   STRUC_2   
0C2C                STRUC_2:   .SET   STRUC_TOP   
0C2C                STRUC_TOP:   .SET   $   
0C2C                L_M_1515S128:      
0C2C                          ;*Macro unroll:  _endcase
0C2C   C3 F0 0B               JP   STRUC_2 - 3   
0C2F                          ;*Macro unroll:  STRUC_FWD
0C2F                CUR_ADR:   .SET   $   
0C2A                          .ORG   STRUC_TOP - 2   
0C2A   2F 0C                  DW   CUR_ADR   
0C2F                          .ORG   CUR_ADR   
0C2F                          ;*Macro unroll:  STRUC_POP
0C2F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C2F                STRUC_TOP:   .SET   STRUC_2   
0C2F                STRUC_2:   .SET   STRUC_3   
0C2F                STRUC_3:   .SET   STRUC_4   
0C2F                STRUC_4:   .SET   STRUC_5   
0C2F                STRUC_5:   .SET   STRUC_6   
0C2F                STRUC_6:   .SET   STRUC_7   
0C2F                STRUC_7:   .SET   STRUC_8   
0C2F                STRUC_8:   .SET   STRUC_9   
0C2F                STRUC_9:   .SET   STRUC_10   
0C2F                STRUC_10:   .SET   STRUC_11   
0C2F                STRUC_11:   .SET   STRUC_12   
0C2F                STRUC_12:   .SET   0   
0C2F   FE 20                  CP   " "   ; < space?
0C31                          ;*Macro unroll:  _case c
0C31   DA 37 0C               JP   c,L_M_1518S132   
0C34   C3 34 0C               JP   $   
0C37                          ;*Macro unroll:  STRUC_PUSH $
0C37                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C37                STRUC_12:   .SET   STRUC_11   
0C37                STRUC_11:   .SET   STRUC_10   
0C37                STRUC_10:   .SET   STRUC_9   
0C37                STRUC_9:   .SET   STRUC_8   
0C37                STRUC_8:   .SET   STRUC_7   
0C37                STRUC_7:   .SET   STRUC_6   
0C37                STRUC_6:   .SET   STRUC_5   
0C37                STRUC_5:   .SET   STRUC_4   
0C37                STRUC_4:   .SET   STRUC_3   
0C37                STRUC_3:   .SET   STRUC_2   
0C37                STRUC_2:   .SET   STRUC_TOP   
0C37                STRUC_TOP:   .SET   $   
0C37                L_M_1518S132:      
0C37                          ;*Macro unroll:  _endcase
0C37   C3 F0 0B               JP   STRUC_2 - 3   
0C3A                          ;*Macro unroll:  STRUC_FWD
0C3A                CUR_ADR:   .SET   $   
0C35                          .ORG   STRUC_TOP - 2   
0C35   3A 0C                  DW   CUR_ADR   
0C3A                          .ORG   CUR_ADR   
0C3A                          ;*Macro unroll:  STRUC_POP
0C3A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C3A                STRUC_TOP:   .SET   STRUC_2   
0C3A                STRUC_2:   .SET   STRUC_3   
0C3A                STRUC_3:   .SET   STRUC_4   
0C3A                STRUC_4:   .SET   STRUC_5   
0C3A                STRUC_5:   .SET   STRUC_6   
0C3A                STRUC_6:   .SET   STRUC_7   
0C3A                STRUC_7:   .SET   STRUC_8   
0C3A                STRUC_8:   .SET   STRUC_9   
0C3A                STRUC_9:   .SET   STRUC_10   
0C3A                STRUC_10:   .SET   STRUC_11   
0C3A                STRUC_11:   .SET   STRUC_12   
0C3A                STRUC_12:   .SET   0   
0C3A                             ; default case
0C3A                          ;*Macro unroll:  _break
0C3A   C3 E8 0B               JP   DLOOP_TOP - 3   
0C3D                          ;*Macro unroll:  _endswitch
0C3D                          ;*Macro unroll:  STRUC_FWD
0C3D                CUR_ADR:   .SET   $   
0BF1                          .ORG   STRUC_TOP - 2   
0BF1   3D 0C                  DW   CUR_ADR   
0C3D                          .ORG   CUR_ADR   
0C3D                          ;*Macro unroll:  STRUC_POP
0C3D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C3D                STRUC_TOP:   .SET   STRUC_2   
0C3D                STRUC_2:   .SET   STRUC_3   
0C3D                STRUC_3:   .SET   STRUC_4   
0C3D                STRUC_4:   .SET   STRUC_5   
0C3D                STRUC_5:   .SET   STRUC_6   
0C3D                STRUC_6:   .SET   STRUC_7   
0C3D                STRUC_7:   .SET   STRUC_8   
0C3D                STRUC_8:   .SET   STRUC_9   
0C3D                STRUC_9:   .SET   STRUC_10   
0C3D                STRUC_10:   .SET   STRUC_11   
0C3D                STRUC_11:   .SET   STRUC_12   
0C3D                STRUC_12:   .SET   0   
0C3D                          ;*Macro unroll:  _enddo
0C3D   C3 EB 0B               JP   DLOOP_TOP   
0C40                          ;*Macro unroll:  DLOOP_FWD
0C40                CUR_ADR:   .SET   $   
0BE9                          .ORG   DLOOP_TOP - 2   
0BE9   40 0C                  DW   CUR_ADR   
0C40                          .ORG   CUR_ADR   
0C40                          ;*Macro unroll:  DLOOP_POP
0C40                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C40                DLOOP_TOP:   .SET   DLOOP_2   
0C40                DLOOP_2:   .SET   DLOOP_3   
0C40                DLOOP_3:   .SET   DLOOP_4   
0C40                DLOOP_4:   .SET   DLOOP_5   
0C40                DLOOP_5:   .SET   DLOOP_6   
0C40                DLOOP_6:   .SET   DLOOP_7   
0C40                DLOOP_7:   .SET   DLOOP_8   
0C40                DLOOP_8:   .SET   DLOOP_9   
0C40                DLOOP_9:   .SET   DLOOP_10   
0C40                DLOOP_10:   .SET   DLOOP_11   
0C40                DLOOP_11:   .SET   DLOOP_12   
0C40                DLOOP_12:   .SET   0   
0C40   06 00                  LD   B,0   
0C42   4F                     LD   C,A   
0C43   C9                     RET      
0C44                XWORDREAD:      ; delim addr char -- c-addr
0C44   79                     LD   A,C   
0C45                          ;*Macro unroll:  ppop0 B,C
0C45   DD 2B                  DEC   IX   
0C47   DD 46 00               LD   B,(IX+0)   
0C4A   DD 2B                  DEC   IX   
0C4C   DD 4E 00               LD   C,(IX+0)   
0C4F                          ;*Macro unroll:  ppop H,L
0C4F   60                     LD   H,B   
0C50   69                     LD   L,C   
0C51                          ;*Macro unroll:  ppop0 B,C
0C51   DD 2B                  DEC   IX   
0C53   DD 46 00               LD   B,(IX+0)   
0C56   DD 2B                  DEC   IX   
0C58   DD 4E 00               LD   C,(IX+0)   
0C5B                          ;*Macro unroll:  ppop D,E
0C5B   50                     LD   D,B   
0C5C   59                     LD   E,C   
0C5D                          ;*Macro unroll:  ppop0 B,C
0C5D   DD 2B                  DEC   IX   
0C5F   DD 46 00               LD   B,(IX+0)   
0C62   DD 2B                  DEC   IX   
0C64   DD 4E 00               LD   C,(IX+0)   
0C67   16 00                  LD   D,0   
0C69   B7                     OR   A   
0C6A                          ;*Macro unroll:  _if nz
0C6A   C2 70 0C               JP   nz,L_M_1534S151   
0C6D   C3 6D 0C               JP   $   
0C70                          ;*Macro unroll:  STRUC_PUSH $
0C70                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C70                STRUC_12:   .SET   STRUC_11   
0C70                STRUC_11:   .SET   STRUC_10   
0C70                STRUC_10:   .SET   STRUC_9   
0C70                STRUC_9:   .SET   STRUC_8   
0C70                STRUC_8:   .SET   STRUC_7   
0C70                STRUC_7:   .SET   STRUC_6   
0C70                STRUC_6:   .SET   STRUC_5   
0C70                STRUC_5:   .SET   STRUC_4   
0C70                STRUC_4:   .SET   STRUC_3   
0C70                STRUC_3:   .SET   STRUC_2   
0C70                STRUC_2:   .SET   STRUC_TOP   
0C70                STRUC_TOP:   .SET   $   
0C70                L_M_1534S151:      
0C70   E5                     PUSH   HL   ; save a copy of HL
0C71   23                     INC   HL   ; move to leave space for length byte
0C72   43                     LD   B,E   
0C73                          ;*Macro unroll:  _do
0C73   18 03                  JR   L_M_1538S155   
0C75   C3 75 0C               JP   $   
0C78                          ;*Macro unroll:  DLOOP_PUSH $
0C78                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C78                DLOOP_12:   .SET   DLOOP_11   
0C78                DLOOP_11:   .SET   DLOOP_10   
0C78                DLOOP_10:   .SET   DLOOP_9   
0C78                DLOOP_9:   .SET   DLOOP_8   
0C78                DLOOP_8:   .SET   DLOOP_7   
0C78                DLOOP_7:   .SET   DLOOP_6   
0C78                DLOOP_6:   .SET   DLOOP_5   
0C78                DLOOP_5:   .SET   DLOOP_4   
0C78                DLOOP_4:   .SET   DLOOP_3   
0C78                DLOOP_3:   .SET   DLOOP_2   
0C78                DLOOP_2:   .SET   DLOOP_TOP   
0C78                DLOOP_TOP:   .SET   $   
0C78                L_M_1538S155:      
0C78   77                     LD   (HL),A   ; add character to return lineBuf
0C79   23                     INC   HL   
0C7A   14                     INC   D   
0C7B   CD 0E 11               CALL   getKey   ; get next key
0C7E   B9                     CP   C   ; = delim?
0C7F                          ;*Macro unroll:  _until z
0C7F   CA 75 0C               JP   z,DLOOP_TOP - 3   
0C82                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C82                CUR_ADR:   .SET   $   ; needed?
0C76                          .ORG   DLOOP_TOP - 2   
0C76   82 0C                  DW   CUR_ADR   
0C82                          .ORG   CUR_ADR   
0C82   FE 20                  CP   " "   ; < space? i.e. control chars
0C84                          ;*Macro unroll:  _until c
0C84   DA 75 0C               JP   c,DLOOP_TOP - 3   
0C87                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C87                CUR_ADR:   .SET   $   ; needed?
0C76                          .ORG   DLOOP_TOP - 2   
0C76   87 0C                  DW   CUR_ADR   
0C87                          .ORG   CUR_ADR   
0C87                          ;*Macro unroll:  _djnz
0C87   10 EF                  DJNZ   DLOOP_TOP   
0C89                          ;*Macro unroll:  DLOOP_FWD
0C89                CUR_ADR:   .SET   $   
0C76                          .ORG   DLOOP_TOP - 2   
0C76   89 0C                  DW   CUR_ADR   
0C89                          .ORG   CUR_ADR   
0C89                          ;*Macro unroll:  DLOOP_POP
0C89                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C89                DLOOP_TOP:   .SET   DLOOP_2   
0C89                DLOOP_2:   .SET   DLOOP_3   
0C89                DLOOP_3:   .SET   DLOOP_4   
0C89                DLOOP_4:   .SET   DLOOP_5   
0C89                DLOOP_5:   .SET   DLOOP_6   
0C89                DLOOP_6:   .SET   DLOOP_7   
0C89                DLOOP_7:   .SET   DLOOP_8   
0C89                DLOOP_8:   .SET   DLOOP_9   
0C89                DLOOP_9:   .SET   DLOOP_10   
0C89                DLOOP_10:   .SET   DLOOP_11   
0C89                DLOOP_11:   .SET   DLOOP_12   
0C89                DLOOP_12:   .SET   0   
0C89   E1                     POP   HL   ; restore HL
0C8A                          ;*Macro unroll:  _endif
0C8A                          ;*Macro unroll:  STRUC_FWD
0C8A                CUR_ADR:   .SET   $   
0C6E                          .ORG   STRUC_TOP - 2   
0C6E   8A 0C                  DW   CUR_ADR   
0C8A                          .ORG   CUR_ADR   
0C8A                          ;*Macro unroll:  STRUC_POP
0C8A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C8A                STRUC_TOP:   .SET   STRUC_2   
0C8A                STRUC_2:   .SET   STRUC_3   
0C8A                STRUC_3:   .SET   STRUC_4   
0C8A                STRUC_4:   .SET   STRUC_5   
0C8A                STRUC_5:   .SET   STRUC_6   
0C8A                STRUC_6:   .SET   STRUC_7   
0C8A                STRUC_7:   .SET   STRUC_8   
0C8A                STRUC_8:   .SET   STRUC_9   
0C8A                STRUC_9:   .SET   STRUC_10   
0C8A                STRUC_10:   .SET   STRUC_11   
0C8A                STRUC_11:   .SET   STRUC_12   
0C8A                STRUC_12:   .SET   0   
0C8A   72                     LD   (HL),D   ; write length
0C8B                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0C8B   4D                     LD   C,L   ; TOS = str ptr
0C8C   44                     LD   B,H   
0C8D   C9                     RET      
0C8E                INTERPTOKEN:      ; ptr len --
0C8E   CF                     RST   $08   
0C8F   3C 12 3C 12 2D 05      DW   over,over,find   ; ptr len -- ptr len addr
0C95   F4 11 88 03            DW   DUPP,ZNEQU   
0C99                          ;*Macro unroll:  cIf
0C99   20 07 00 00            DW   QBRAN,0   
0C9D                          ;*Macro unroll:  CPL_PUSH $
0C9D                CPL_COUNT:   .SET   CPL_COUNT + 1   
0C9D                CPL_10:   .SET   CPL_9   
0C9D                CPL_9:    .SET   CPL_8   
0C9D                CPL_8:    .SET   CPL_7   
0C9D                CPL_7:    .SET   CPL_6   
0C9D                CPL_6:    .SET   CPL_5   
0C9D                CPL_5:    .SET   CPL_4   
0C9D                CPL_4:    .SET   CPL_3   
0C9D                CPL_3:    .SET   CPL_2   
0C9D                CPL_2:    .SET   CPL_TOP   
0C9D                CPL_TOP:   .SET   $   
0C9D   AA 0C                  DW   interpWord   
0C9F                          ;*Macro unroll:  cElse
0C9F   3D 07 00 00            DW   BRAN,0   
0CA3                          ;*Macro unroll:  cBRANCH_FWD
0CA3                CUR_ADR:   .SET   $   
0C9B                          .ORG   CPL_TOP - 2   
0C9B   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0CA3                          .ORG   CUR_ADR   
0CA3                CPL_TOP:   .SET   $   
0CA3   EE 0C                  DW   interpLiteral   
0CA5                          ;*Macro unroll:  cEndif
0CA5                          ;*Macro unroll:  cBRANCH_FWD
0CA5                CUR_ADR:   .SET   $   
0CA1                          .ORG   CPL_TOP - 2   
0CA1   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0CA5                          .ORG   CUR_ADR   
0CA5                          ;*Macro unroll:  CPL_POP
0CA5                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CA5                CPL_TOP:   .SET   CPL_2   
0CA5                CPL_2:    .SET   CPL_3   
0CA5                CPL_3:    .SET   CPL_4   
0CA5                CPL_4:    .SET   CPL_5   
0CA5                CPL_5:    .SET   CPL_6   
0CA5                CPL_6:    .SET   CPL_7   
0CA5                CPL_7:    .SET   CPL_8   
0CA5                CPL_8:    .SET   CPL_9   
0CA5                CPL_9:    .SET   CPL_10   
0CA5                CPL_10:   .SET   0   
0CA5                          ;*Macro unroll:  EXIT
0CA5   74 0E                  DW   exit   
0CA7   C3 63 0E               JP   enter   
0CAA                INTERPWORD:      ; ptr len addr --
0CAA   CF                     RST   $08   ; enter forth
0CAB   08 12 28 12 08 12 28 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0CB3   F4 11 73 11 02 00 CE 00 D4 0E DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0CBD   73 11 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0CC3   73 03                  DW   zEqual   
0CC5                          ;*Macro unroll:  cif
0CC5   20 07 00 00            DW   QBRAN,0   
0CC9                          ;*Macro unroll:  CPL_PUSH $
0CC9                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CC9                CPL_10:   .SET   CPL_9   
0CC9                CPL_9:    .SET   CPL_8   
0CC9                CPL_8:    .SET   CPL_7   
0CC9                CPL_7:    .SET   CPL_6   
0CC9                CPL_6:    .SET   CPL_5   
0CC9                CPL_5:    .SET   CPL_4   
0CC9                CPL_4:    .SET   CPL_3   
0CC9                CPL_3:    .SET   CPL_2   
0CC9                CPL_2:    .SET   CPL_TOP   
0CC9                CPL_TOP:   .SET   $   
0CC9   06 0B                  DW   tcfa   ; ( headptr -- xt )
0CCB   7C 08 A7 0E            DW   state,fetch   
0CCF   96 08 A7 0E            DW   nesting,fetch   
0CD3   9E 00                  DW   ORR   
0CD5                          ;*Macro unroll:  cif
0CD5   20 07 00 00            DW   QBRAN,0   
0CD9                          ;*Macro unroll:  CPL_PUSH $
0CD9                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CD9                CPL_10:   .SET   CPL_9   
0CD9                CPL_9:    .SET   CPL_8   
0CD9                CPL_8:    .SET   CPL_7   
0CD9                CPL_7:    .SET   CPL_6   
0CD9                CPL_6:    .SET   CPL_5   
0CD9                CPL_5:    .SET   CPL_4   
0CD9                CPL_4:    .SET   CPL_3   
0CD9                CPL_3:    .SET   CPL_2   
0CD9                CPL_2:    .SET   CPL_TOP   
0CD9                CPL_TOP:   .SET   $   
0CD9   5D 0F                  DW   comma   ; compile xt
0CDB                          ;*Macro unroll:  cElse
0CDB   3D 07 00 00            DW   BRAN,0   
0CDF                          ;*Macro unroll:  cBRANCH_FWD
0CDF                CUR_ADR:   .SET   $   
0CD7                          .ORG   CPL_TOP - 2   
0CD7   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0CDF                          .ORG   CUR_ADR   
0CDF                CPL_TOP:   .SET   $   
0CDF   26 0B                  DW   execute   ; execute xt
0CE1                          ;*Macro unroll:  cendif
0CE1                          ;*Macro unroll:  cBRANCH_FWD
0CE1                CUR_ADR:   .SET   $   
0CDD                          .ORG   CPL_TOP - 2   
0CDD   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0CE1                          .ORG   CUR_ADR   
0CE1                          ;*Macro unroll:  CPL_POP
0CE1                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CE1                CPL_TOP:   .SET   CPL_2   
0CE1                CPL_2:    .SET   CPL_3   
0CE1                CPL_3:    .SET   CPL_4   
0CE1                CPL_4:    .SET   CPL_5   
0CE1                CPL_5:    .SET   CPL_6   
0CE1                CPL_6:    .SET   CPL_7   
0CE1                CPL_7:    .SET   CPL_8   
0CE1                CPL_8:    .SET   CPL_9   
0CE1                CPL_9:    .SET   CPL_10   
0CE1                CPL_10:   .SET   0   
0CE1                          ;*Macro unroll:  cElse
0CE1   3D 07 00 00            DW   BRAN,0   
0CE5                          ;*Macro unroll:  cBRANCH_FWD
0CE5                CUR_ADR:   .SET   $   
0CC7                          .ORG   CPL_TOP - 2   
0CC7   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0CE5                          .ORG   CUR_ADR   
0CE5                CPL_TOP:   .SET   $   
0CE5   06 0B 26 0B            DW   tcfa,execute   ; execute xt
0CE9                          ;*Macro unroll:  cendif
0CE9                          ;*Macro unroll:  cBRANCH_FWD
0CE9                CUR_ADR:   .SET   $   
0CE3                          .ORG   CPL_TOP - 2   
0CE3   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0CE9                          .ORG   CUR_ADR   
0CE9                          ;*Macro unroll:  CPL_POP
0CE9                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CE9                CPL_TOP:   .SET   CPL_2   
0CE9                CPL_2:    .SET   CPL_3   
0CE9                CPL_3:    .SET   CPL_4   
0CE9                CPL_4:    .SET   CPL_5   
0CE9                CPL_5:    .SET   CPL_6   
0CE9                CPL_6:    .SET   CPL_7   
0CE9                CPL_7:    .SET   CPL_8   
0CE9                CPL_8:    .SET   CPL_9   
0CE9                CPL_9:    .SET   CPL_10   
0CE9                CPL_10:   .SET   0   
0CE9                          ;*Macro unroll:  EXIT
0CE9   74 0E                  DW   exit   
0CEB   C3 63 0E               JP   enter   
0CEE                INTERPLITERAL:      ; ptr len addr --
0CEE   CF                     RST   $08   ; enter forth
0CEF   28 12                  DW   drop   ; ptr len addr - ptr len
0CF1   8D 0A 73 03            DW   number,zEqual   ; parse to number
0CF5                          ;*Macro unroll:  cif
0CF5   20 07 00 00            DW   QBRAN,0   
0CF9                          ;*Macro unroll:  CPL_PUSH $
0CF9                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CF9                CPL_10:   .SET   CPL_9   
0CF9                CPL_9:    .SET   CPL_8   
0CF9                CPL_8:    .SET   CPL_7   
0CF9                CPL_7:    .SET   CPL_6   
0CF9                CPL_6:    .SET   CPL_5   
0CF9                CPL_5:    .SET   CPL_4   
0CF9                CPL_4:    .SET   CPL_3   
0CF9                CPL_3:    .SET   CPL_2   
0CF9                CPL_2:    .SET   CPL_TOP   
0CF9                CPL_TOP:   .SET   $   
0CF9   7C 08 A7 0E            DW   state,fetch   
0CFD   96 08 A7 0E            DW   nesting,fetch   
0D01   9E 00                  DW   ORR   
0D03                          ;*Macro unroll:  cIf
0D03   20 07 00 00            DW   QBRAN,0   
0D07                          ;*Macro unroll:  CPL_PUSH $
0D07                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D07                CPL_10:   .SET   CPL_9   
0D07                CPL_9:    .SET   CPL_8   
0D07                CPL_8:    .SET   CPL_7   
0D07                CPL_7:    .SET   CPL_6   
0D07                CPL_6:    .SET   CPL_5   
0D07                CPL_5:    .SET   CPL_4   
0D07                CPL_4:    .SET   CPL_3   
0D07                CPL_3:    .SET   CPL_2   
0D07                CPL_2:    .SET   CPL_TOP   
0D07                CPL_TOP:   .SET   $   
0D07   73 11 73 11            DW   lit,lit   ; (val -- val "lit" )
0D0B   5D 0F 5D 0F            DW   comma,comma   ; compile "lit" val
0D0F                          ;*Macro unroll:  cEndIf
0D0F                          ;*Macro unroll:  cBRANCH_FWD
0D0F                CUR_ADR:   .SET   $   
0D05                          .ORG   CPL_TOP - 2   
0D05   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0D0F                          .ORG   CUR_ADR   
0D0F                          ;*Macro unroll:  CPL_POP
0D0F                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D0F                CPL_TOP:   .SET   CPL_2   
0D0F                CPL_2:    .SET   CPL_3   
0D0F                CPL_3:    .SET   CPL_4   
0D0F                CPL_4:    .SET   CPL_5   
0D0F                CPL_5:    .SET   CPL_6   
0D0F                CPL_6:    .SET   CPL_7   
0D0F                CPL_7:    .SET   CPL_8   
0D0F                CPL_8:    .SET   CPL_9   
0D0F                CPL_9:    .SET   CPL_10   
0D0F                CPL_10:   .SET   0   
0D0F                          ;*Macro unroll:  cElse
0D0F   3D 07 00 00            DW   BRAN,0   
0D13                          ;*Macro unroll:  cBRANCH_FWD
0D13                CUR_ADR:   .SET   $   
0CF7                          .ORG   CPL_TOP - 2   
0CF7   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
0D13                          .ORG   CUR_ADR   
0D13                CPL_TOP:   .SET   $   
0D13   28 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0D15   A6 12                  DW   litstr   ; err != 0, parse error
0D17   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0D26   48 0D                  DW   type   
0D28                          ;*Macro unroll:  cEndIf
0D28                          ;*Macro unroll:  cBRANCH_FWD
0D28                CUR_ADR:   .SET   $   
0D11                          .ORG   CPL_TOP - 2   
0D11   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0D28                          .ORG   CUR_ADR   
0D28                          ;*Macro unroll:  CPL_POP
0D28                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D28                CPL_TOP:   .SET   CPL_2   
0D28                CPL_2:    .SET   CPL_3   
0D28                CPL_3:    .SET   CPL_4   
0D28                CPL_4:    .SET   CPL_5   
0D28                CPL_5:    .SET   CPL_6   
0D28                CPL_6:    .SET   CPL_7   
0D28                CPL_7:    .SET   CPL_8   
0D28                CPL_8:    .SET   CPL_9   
0D28                CPL_9:    .SET   CPL_10   
0D28                CPL_10:   .SET   0   
0D28                          ;*Macro unroll:  EXIT
0D28   74 0E                  DW   exit   
0D2A   C3 63 0E               JP   enter   
0D2D                NESTPLUS:      
0D2D   2A 57 32               LD   HL,(VAR_NESTING)   
0D30   23                     INC   HL   
0D31   22 57 32               LD   (VAR_NESTING),HL   
0D34                          ;*Macro unroll:  NEXT
0D34   C3 63 0E               JP   enter   
0D37                NESTMINUS:      
0D37   2A 57 32               LD   HL,(VAR_NESTING)   
0D3A   2B                     DEC   HL   
0D3B   22 57 32               LD   (VAR_NESTING),HL   
0D3E                          ;*Macro unroll:  NEXT
0D3E   C3 63 0E               JP   enter   
0D41                          ;*Macro unroll: mCODE "type",4,0,TYPE             ; ( str len -- )
0D41                HEADER_TYPE:      ; ( str len -- )
0D41   9F 0B                  DW   link   
0D43                LINK:     .SET   HEADER_TYPE   
0D43   04                     DB   0 + 4   
0D44   74 79 70 65            DB   "type"   
0D48                TYPE:        
0D48                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
0D48   DD 2B                  DEC   IX   ; DE = str BC = length
0D4A   DD 56 00               LD   D,(IX+0)   
0D4D   DD 2B                  DEC   IX   
0D4F   DD 5E 00               LD   E,(IX+0)   
0D52   CD 52 11               CALL   printStr   
0D55                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0D55   DD 2B                  DEC   IX   ; clear TOS
0D57   DD 46 00               LD   B,(IX+0)   
0D5A   DD 2B                  DEC   IX   
0D5C   DD 4E 00               LD   C,(IX+0)   
0D5F                          ;*Macro unroll:  NEXT
0D5F   C3 63 0E               JP   enter   
0D62                          ;*Macro unroll: mCODE "cr",2,0,cr                 ; ( -- )
0D62                HEADER_CR:      ; ( -- )
0D62   41 0D                  DW   link   
0D64                LINK:     .SET   HEADER_cr   
0D64   02                     DB   0 + 2   
0D65   63 72                  DB   "cr"   
0D67                CR:          
0D67   CD 5C 11               CALL   printcr   
0D6A                          ;*Macro unroll:  NEXT
0D6A   C3 63 0E               JP   enter   
0D6D                          ;*Macro unroll:  mCODE "accept",6,0,ACCEPT              ; ( addr max -- len )
0D6D                HEADER_ACCEPT:      ; ( addr max -- len )
0D6D   62 0D                  DW   link   
0D6F                LINK:     .SET   HEADER_ACCEPT   
0D6F   06                     DB   0 + 6   
0D70   61 63 63 65 70 74      DB   "accept"   
0D76                ACCEPT:      
0D76                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
0D76   50                     LD   D,B   ; max - up to 255
0D77   59                     LD   E,C   
0D78                          ;*Macro unroll:  ppop0 B,C
0D78   DD 2B                  DEC   IX   
0D7A   DD 46 00               LD   B,(IX+0)   
0D7D   DD 2B                  DEC   IX   
0D7F   DD 4E 00               LD   C,(IX+0)   
0D82                          ;*Macro unroll: 	ppop0 H,L                          ; addr
0D82   DD 2B                  DEC   IX   ; addr
0D84   DD 66 00               LD   H,(IX+0)   
0D87   DD 2B                  DEC   IX   
0D89   DD 6E 00               LD   L,(IX+0)   
0D8C   CD 7E 10               CALL   getline   
0D8F                          ;*Macro unroll:  NEXT
0D8F   C3 63 0E               JP   enter   
0D92                          ;*Macro unroll: mCODE "key",3,0,KEY                ; ( -- c )
0D92                HEADER_KEY:      ; ( -- c )
0D92   6D 0D                  DW   link   
0D94                LINK:     .SET   HEADER_KEY   
0D94   03                     DB   0 + 3   
0D95   6B 65 79               DB   "key"   
0D98                KEY:         
0D98   CD 0E 11               CALL   getKey   
0D9B   06 00                  LD   b,0   
0D9D   4F                     LD   c,a   
0D9E                          ;*Macro unroll:  NEXT
0D9E   C3 63 0E               JP   enter   
0DA1                          ;*Macro unroll: mCODE "emit",4,0,EMIT              ; print the character on the stack
0DA1                HEADER_EMIT:      ; print the character on the stack
0DA1   92 0D                  DW   link   
0DA3                LINK:     .SET   HEADER_EMIT   
0DA3   04                     DB   0 + 4   
0DA4   65 6D 69 74            DB   "emit"   
0DA8                EMIT:        
0DA8   79                     LD   A,C   ; (c -- )
0DA9   CD 64 10               CALL   putc   
0DAC                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
0DAC   DD 2B                  DEC   IX   ; clear stack
0DAE   DD 46 00               LD   B,(IX+0)   
0DB1   DD 2B                  DEC   IX   
0DB3   DD 4E 00               LD   C,(IX+0)   
0DB6                          ;*Macro unroll:  NEXT
0DB6   C3 63 0E               JP   enter   
0DB9                          ;*Macro unroll: mCODE "key?",4,0,QKEY              ; ( -- c )
0DB9                HEADER_QKEY:      ; ( -- c )
0DB9   A1 0D                  DW   link   
0DBB                LINK:     .SET   HEADER_QKEY   
0DBB   04                     DB   0 + 4   
0DBC   6B 65 79 3F            DB   "key?"   
0DC0                QKEY:        
0DC0                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
0DC0   DD 71 00               LD   (IX+0),C   ; save TOS
0DC3   DD 23                  INC   IX   
0DC5   DD 70 00               LD   (IX+0),B   
0DC8   DD 23                  INC   IX   
0DCA   CD 78 10               CALL   inputReady   
0DCD   01 01 00               LD   BC,1   ; TOS = true
0DD0                          ;*Macro unroll:  _if z
0DD0   CA D6 0D               JP   z,L_M_1639S33   
0DD3   C3 D3 0D               JP   $   
0DD6                          ;*Macro unroll:  STRUC_PUSH $
0DD6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0DD6                STRUC_12:   .SET   STRUC_11   
0DD6                STRUC_11:   .SET   STRUC_10   
0DD6                STRUC_10:   .SET   STRUC_9   
0DD6                STRUC_9:   .SET   STRUC_8   
0DD6                STRUC_8:   .SET   STRUC_7   
0DD6                STRUC_7:   .SET   STRUC_6   
0DD6                STRUC_6:   .SET   STRUC_5   
0DD6                STRUC_5:   .SET   STRUC_4   
0DD6                STRUC_4:   .SET   STRUC_3   
0DD6                STRUC_3:   .SET   STRUC_2   
0DD6                STRUC_2:   .SET   STRUC_TOP   
0DD6                STRUC_TOP:   .SET   $   
0DD6                L_M_1639S33:      
0DD6   01 00 00               LD   BC,0   ; TOS = false
0DD9                          ;*Macro unroll:  _endif
0DD9                          ;*Macro unroll:  STRUC_FWD
0DD9                CUR_ADR:   .SET   $   
0DD4                          .ORG   STRUC_TOP - 2   
0DD4   D9 0D                  DW   CUR_ADR   
0DD9                          .ORG   CUR_ADR   
0DD9                          ;*Macro unroll:  STRUC_POP
0DD9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0DD9                STRUC_TOP:   .SET   STRUC_2   
0DD9                STRUC_2:   .SET   STRUC_3   
0DD9                STRUC_3:   .SET   STRUC_4   
0DD9                STRUC_4:   .SET   STRUC_5   
0DD9                STRUC_5:   .SET   STRUC_6   
0DD9                STRUC_6:   .SET   STRUC_7   
0DD9                STRUC_7:   .SET   STRUC_8   
0DD9                STRUC_8:   .SET   STRUC_9   
0DD9                STRUC_9:   .SET   STRUC_10   
0DD9                STRUC_10:   .SET   STRUC_11   
0DD9                STRUC_11:   .SET   STRUC_12   
0DD9                STRUC_12:   .SET   0   
0DD9                          ;*Macro unroll:  NEXT
0DD9   C3 63 0E               JP   enter   
0DDC                          ;*Macro unroll: mCODE "bl",2,0,bl
0DDC                HEADER_BL:      
0DDC   B9 0D                  DW   link   
0DDE                LINK:     .SET   HEADER_bl   
0DDE   02                     DB   0 + 2   
0DDF   62 6C                  DB   "bl"   
0DE1                BL:          
0DE1                          ;*Macro unroll:  ENTER
0DE1   CF                     RST   $08   
0DE2   73 11 20 00            DW   lit,$20   ; compile branch on zero
0DE6                          ;*Macro unroll:  EXIT
0DE6   74 0E                  DW   exit   
0DE8   C3 63 0E               JP   enter   
0DEB                          ;*Macro unroll: mCODE "print",5,0,PRINT
0DEB                HEADER_PRINT:      
0DEB   DC 0D                  DW   link   
0DED                LINK:     .SET   HEADER_PRINT   
0DED   05                     DB   0 + 5   
0DEE   70 72 69 6E 74         DB   "print"   
0DF3                PRINT:       
0DF3                          ;*Macro unroll:  ppop D,E
0DF3   50                     LD   D,B   
0DF4   59                     LD   E,C   
0DF5                          ;*Macro unroll:  ppop0 B,C
0DF5   DD 2B                  DEC   IX   
0DF7   DD 46 00               LD   B,(IX+0)   
0DFA   DD 2B                  DEC   IX   
0DFC   DD 4E 00               LD   C,(IX+0)   
0DFF   CD 43 11               CALL   printPStr   
0E02                          ;*Macro unroll:  NEXT
0E02   C3 63 0E               JP   enter   
0E05                             ; ." print string"
0E05                          ;*Macro unroll: mCODE {".",$22},2,msk_immed,dotquote
0E05                HEADER_DOTQUOTE:      
0E05   EB 0D                  DW   link   
0E07                LINK:     .SET   HEADER_dotquote   
0E07   82                     DB   msk_immed + 2   
0E08   2E 22                  DB   ".",$22   
0E0A                DOTQUOTE:      
0E0A                          ;*Macro unroll:  ENTER
0E0A   CF                     RST   $08   
0E0B   DD 12                  DW   qt   
0E0D   7C 08 A7 0E 73 03      DW   state,fetch,zequal   
0E13                          ;*Macro unroll:  cIf
0E13   20 07 00 00            DW   QBRAN,0   
0E17                          ;*Macro unroll:  CPL_PUSH $
0E17                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E17                CPL_10:   .SET   CPL_9   
0E17                CPL_9:    .SET   CPL_8   
0E17                CPL_8:    .SET   CPL_7   
0E17                CPL_7:    .SET   CPL_6   
0E17                CPL_6:    .SET   CPL_5   
0E17                CPL_5:    .SET   CPL_4   
0E17                CPL_4:    .SET   CPL_3   
0E17                CPL_3:    .SET   CPL_2   
0E17                CPL_2:    .SET   CPL_TOP   
0E17                CPL_TOP:   .SET   $   
0E17   48 0D                  DW   type   
0E19                          ;*Macro unroll:  cElse
0E19   3D 07 00 00            DW   BRAN,0   
0E1D                          ;*Macro unroll:  cBRANCH_FWD
0E1D                CUR_ADR:   .SET   $   
0E15                          .ORG   CPL_TOP - 2   
0E15   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E1D                          .ORG   CUR_ADR   
0E1D                CPL_TOP:   .SET   $   
0E1D   73 11 48 0D 5D 0F      DW   lit,type,comma   
0E23                          ;*Macro unroll:  cEndIf
0E23                          ;*Macro unroll:  cBRANCH_FWD
0E23                CUR_ADR:   .SET   $   
0E1B                          .ORG   CPL_TOP - 2   
0E1B   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E23                          .ORG   CUR_ADR   
0E23                          ;*Macro unroll:  CPL_POP
0E23                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E23                CPL_TOP:   .SET   CPL_2   
0E23                CPL_2:    .SET   CPL_3   
0E23                CPL_3:    .SET   CPL_4   
0E23                CPL_4:    .SET   CPL_5   
0E23                CPL_5:    .SET   CPL_6   
0E23                CPL_6:    .SET   CPL_7   
0E23                CPL_7:    .SET   CPL_8   
0E23                CPL_8:    .SET   CPL_9   
0E23                CPL_9:    .SET   CPL_10   
0E23                CPL_10:   .SET   0   
0E23                          ;*Macro unroll:  EXIT
0E23   74 0E                  DW   exit   
0E25   C3 63 0E               JP   enter   
0E28                INITFORTH:      
0E28   DD 21 A7 2E            LD   IX,data_stack   ; initialise the param stack.
0E2C   FD 21 63 0E            LD   IY,enter   
0E30   DD 22 59 32            LD   (var_sp0),IX   
0E34   01 00 00               LD   BC,0   ; tos
0E37   21 00 00               LD   HL,0   
0E3A   22 53 32               LD   (var_intp_stop),HL   
0E3D   22 4F 32               LD   (is_literal),HL   
0E40   22 57 32               LD   (var_nesting),HL   
0E43   22 55 32               LD   (var_state),HL   
0E46   21 0A 00               LD   HL,10   
0E49   22 5B 32               LD   (var_base),HL   
0E4C   21 63 32               LD   HL,start_user   
0E4F   22 51 32               LD   (var_here),HL   
0E52   21 11 14               LD   HL,header_latest   
0E55   22 5F 32               LD   (var_latest),HL   
0E58   22 5D 32               LD   (var_latest_str),HL   
0E5B   3E 96                  LD   A,rts_low   
0E5D   D3 80                  OUT   ($80),A   ; initialise acia
0E5F   ED 56                  IM   1   
0E61   FB                     EI      
0E62   C9                     RET      
0E63                ENTER:       
0E63   E1                     POP   HL   
0E64                ENTER1:      
0E64   5E                     LD   E,(HL)   
0E65   23                     INC   HL   
0E66   56                     LD   D,(HL)   
0E67   23                     INC   HL   
0E68   E5                     PUSH   HL   
0E69   EB                     EX   DE,HL   
0E6A   E9                     JP   (HL)   
0E6B                FORTH:       ; for calling forth words from assembly
0E6B   21 4D 32               LD   HL,exitAddr   
0E6E   E3                     EX   (SP),HL   
0E6F   22 4D 32               LD   (exitAddr),HL   
0E72   EB                     EX   DE,HL   
0E73   E9                     JP   (HL)   
0E74                EXIT:        
0E74   E1                     POP   HL   
0E75   FD E9                  JP   (IY)   
0E77                EXIT_FORTH:      
0E77   C9                     RET      
0E78                          ;*Macro unroll: mCODE "noop",4,0,noop
0E78                HEADER_NOOP:      
0E78   05 0E                  DW   link   
0E7A                LINK:     .SET   HEADER_noop   
0E7A   04                     DB   0 + 4   
0E7B   6E 6F 6F 70            DB   "noop"   
0E7F                NOOP:        
0E7F                          ;*Macro unroll:  NEXT
0E7F   C3 63 0E               JP   enter   
0E82                             ; !        x a-addr --   store cell in memory
0E82                          ;*Macro unroll: mCODE "!",1,0,STORE
0E82                HEADER_STORE:      
0E82   78 0E                  DW   link   
0E84                LINK:     .SET   HEADER_STORE   
0E84   01                     DB   0 + 1   
0E85   21                     DB   "!"   
0E86                STORE:       
0E86                          ;*Macro unroll:  ppop H,L
0E86   60                     LD   H,B   
0E87   69                     LD   L,C   
0E88                          ;*Macro unroll:  ppop0 B,C
0E88   DD 2B                  DEC   IX   
0E8A   DD 46 00               LD   B,(IX+0)   
0E8D   DD 2B                  DEC   IX   
0E8F   DD 4E 00               LD   C,(IX+0)   
0E92                          ;*Macro unroll:  writeWord HL, B,C
0E92                          ;*Macro unroll:  writeByte HL, C
0E92   71                     LD   (HL),C   
0E93   23                     INC   HL   
0E94                          ;*Macro unroll:  writeByte HL, B
0E94   70                     LD   (HL),B   
0E95   23                     INC   HL   
0E96                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0E96   DD 2B                  DEC   IX   ; POP new TOS
0E98   DD 46 00               LD   B,(IX+0)   
0E9B   DD 2B                  DEC   IX   
0E9D   DD 4E 00               LD   C,(IX+0)   
0EA0                          ;*Macro unroll:  NEXT
0EA0   C3 63 0E               JP   enter   
0EA3                          ;*Macro unroll: mCODE "@",1,0,FETCH
0EA3                HEADER_FETCH:      
0EA3   82 0E                  DW   link   
0EA5                LINK:     .SET   HEADER_FETCH   
0EA5   01                     DB   0 + 1   
0EA6   40                     DB   "@"   
0EA7                FETCH:       
0EA7                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0EA7   69                     LD   L,C   ; HL = TOS
0EA8   60                     LD   H,B   
0EA9                          ;*Macro unroll:  readWord HL, B,C
0EA9   4E                     LD   C,(HL)   
0EAA   23                     INC   HL   
0EAB   46                     LD   B,(HL)   
0EAC   23                     INC   HL   
0EAD                          ;*Macro unroll:  NEXT
0EAD   C3 63 0E               JP   enter   
0EB0                             ; C!      char c-addr --    store char in memory
0EB0                          ;*Macro unroll: mCODE "c!",2,0,CSTORE
0EB0                HEADER_CSTORE:      
0EB0   A3 0E                  DW   link   
0EB2                LINK:     .SET   HEADER_CSTORE   
0EB2   02                     DB   0 + 2   
0EB3   63 21                  DB   "c!"   
0EB5                CSTORE:      
0EB5                          ;*Macro unroll:  ppop H,L
0EB5   60                     LD   H,B   
0EB6   69                     LD   L,C   
0EB7                          ;*Macro unroll:  ppop0 B,C
0EB7   DD 2B                  DEC   IX   
0EB9   DD 46 00               LD   B,(IX+0)   
0EBC   DD 2B                  DEC   IX   
0EBE   DD 4E 00               LD   C,(IX+0)   
0EC1   71                     LD   (HL),C   
0EC2                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0EC2   DD 2B                  DEC   IX   ; POP new TOS
0EC4   DD 46 00               LD   B,(IX+0)   
0EC7   DD 2B                  DEC   IX   
0EC9   DD 4E 00               LD   C,(IX+0)   
0ECC                          ;*Macro unroll:  NEXT
0ECC   C3 63 0E               JP   enter   
0ECF                             ; C@     c-addr -- char   fetch char from memory
0ECF                          ;*Macro unroll: mCODE "c@",2,0,CFETCH
0ECF                HEADER_CFETCH:      
0ECF   B0 0E                  DW   link   
0ED1                LINK:     .SET   HEADER_CFETCH   
0ED1   02                     DB   0 + 2   
0ED2   63 40                  DB   "c@"   
0ED4                CFETCH:      
0ED4   0A                     LD   A,(BC)   
0ED5   4F                     LD   C,A   
0ED6   06 00                  LD   B,0   
0ED8                          ;*Macro unroll:  NEXT
0ED8   C3 63 0E               JP   enter   
0EDB                             ;z RSP!  a-addr --                  set return stack pointer
0EDB                          ;*Macro unroll: mCODE "rsp!",4,0,RSPSTORE
0EDB                HEADER_RSPSTORE:      
0EDB   CF 0E                  DW   link   
0EDD                LINK:     .SET   HEADER_RSPSTORE   
0EDD   04                     DB   0 + 4   
0EDE   72 73 70 21            DB   "rsp!"   
0EE2                RSPSTORE:      
0EE2                          ;*Macro unroll:  SET_RET_SP B,C
0EE2                          ;*Macro unroll:  loadWord H,L, B,C
0EE2   69                     LD   L,C   
0EE3   60                     LD   H,B   
0EE4   F9                     LD   SP,HL   
0EE5                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
0EE5   DD 2B                  DEC   IX   ; POP TOS
0EE7   DD 46 00               LD   B,(IX+0)   
0EEA   DD 2B                  DEC   IX   
0EEC   DD 4E 00               LD   C,(IX+0)   
0EEF                          ;*Macro unroll:  NEXT
0EEF   C3 63 0E               JP   enter   
0EF2                          ;*Macro unroll: mCODE "sp@",3,0,SPFETCH
0EF2                HEADER_SPFETCH:      
0EF2   DB 0E                  DW   link   
0EF4                LINK:     .SET   HEADER_SPFETCH   
0EF4   03                     DB   0 + 3   
0EF5   73 70 40               DB   "sp@"   
0EF8                SPFETCH:      
0EF8   DD E5                  PUSH   IX   
0EFA   E1                     POP   HL   
0EFB                          ;*Macro unroll:  ppush H,L
0EFB                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0EFB   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0EFE   DD 23                  INC   IX   
0F00   DD 70 00               LD   (IX+0),B   
0F03   DD 23                  INC   IX   
0F05   44                     LD   B,H   
0F06   4D                     LD   C,L   
0F07                          ;*Macro unroll:  NEXT
0F07   C3 63 0E               JP   enter   
0F0A                          ;*Macro unroll: mCODE "sp!",3,0,SPSTORE
0F0A                HEADER_SPSTORE:      
0F0A   F2 0E                  DW   link   
0F0C                LINK:     .SET   HEADER_SPSTORE   
0F0C   03                     DB   0 + 3   
0F0D   73 70 21               DB   "sp!"   
0F10                SPSTORE:      
0F10                          ;*Macro unroll:  ppop H,L
0F10   60                     LD   H,B   
0F11   69                     LD   L,C   
0F12                          ;*Macro unroll:  ppop0 B,C
0F12   DD 2B                  DEC   IX   
0F14   DD 46 00               LD   B,(IX+0)   
0F17   DD 2B                  DEC   IX   
0F19   DD 4E 00               LD   C,(IX+0)   
0F1C   E5                     PUSH   HL   
0F1D   DD E1                  POP   IX   
0F1F                          ;*Macro unroll:  NEXT
0F1F   C3 63 0E               JP   enter   
0F22                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0F22                          ;*Macro unroll: mCODE "allot",5,0,allot               ;
0F22                HEADER_ALLOT:      ; 
0F22   0A 0F                  DW   link   
0F24                LINK:     .SET   HEADER_allot   
0F24   05                     DB   0 + 5   
0F25   61 6C 6C 6F 74         DB   "allot"   
0F2A                ALLOT:       
0F2A                          ;*Macro unroll:  ENTER
0F2A   CF                     RST   $08   
0F2B   48 08 39 0F            DW   here,addstore   ; adds n to here
0F2F                          ;*Macro unroll:  EXIT
0F2F   74 0E                  DW   exit   
0F31   C3 63 0E               JP   enter   
0F34                          ;*Macro unroll: mCODE "+!",2,0,ADDSTORE               ; (n addr -- )
0F34                HEADER_ADDSTORE:      ; (n addr -- )
0F34   22 0F                  DW   link   
0F36                LINK:     .SET   HEADER_ADDSTORE   
0F36   02                     DB   0 + 2   
0F37   2B 21                  DB   "+!"   
0F39                ADDSTORE:      
0F39                          ;*Macro unroll: 	ppop H, L		            ; HL = address, TOS = amount to add
0F39   60                     LD   H,B   ; HL = address, TOS = amount to add
0F3A   69                     LD   L,C   
0F3B                          ;*Macro unroll:  ppop0 B,C
0F3B   DD 2B                  DEC   IX   
0F3D   DD 46 00               LD   B,(IX+0)   
0F40   DD 2B                  DEC   IX   
0F42   DD 4E 00               LD   C,(IX+0)   
0F45   7E                     LD   A,(HL)   
0F46   81                     ADD   A,C   ; add TOS at (HL),
0F47   77                     LD   (HL),A   
0F48   23                     INC   HL   
0F49   7E                     LD   A,(HL)   
0F4A   88                     ADC   A,B   
0F4B   77                     LD   (HL),A   
0F4C                          ;*Macro unroll: 	ppop0 B,C                      ; clear param stack
0F4C   DD 2B                  DEC   IX   ; clear param stack
0F4E   DD 46 00               LD   B,(IX+0)   
0F51   DD 2B                  DEC   IX   
0F53   DD 4E 00               LD   C,(IX+0)   
0F56                          ;*Macro unroll:  NEXT
0F56   C3 63 0E               JP   enter   
0F59                          ;*Macro unroll: mCODE ",",1,0,COMMA
0F59                HEADER_COMMA:      
0F59   34 0F                  DW   link   
0F5B                LINK:     .SET   HEADER_COMMA   
0F5B   01                     DB   0 + 1   
0F5C   2C                     DB   ","   
0F5D                COMMA:       
0F5D   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0F60                          ;*Macro unroll: 	writeWord HL, B,C
0F60                          ;*Macro unroll:  writeByte HL, C
0F60   71                     LD   (HL),C   
0F61   23                     INC   HL   
0F62                          ;*Macro unroll:  writeByte HL, B
0F62   70                     LD   (HL),B   
0F63   23                     INC   HL   
0F64   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0F67                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0F67   DD 2B                  DEC   IX   ; cleanup TOS
0F69   DD 46 00               LD   B,(IX+0)   
0F6C   DD 2B                  DEC   IX   
0F6E   DD 4E 00               LD   C,(IX+0)   
0F71                          ;*Macro unroll:  NEXT
0F71   C3 63 0E               JP   enter   
0F74                          ;*Macro unroll: mCODE "c,",1,0,CCOMMA
0F74                HEADER_CCOMMA:      
0F74   59 0F                  DW   link   
0F76                LINK:     .SET   HEADER_CCOMMA   
0F76   01                     DB   0 + 1   
0F77   63 2C                  DB   "c,"   
0F79                CCOMMA:      
0F79                          ;*Macro unroll:  ppush0 H,L
0F79   DD 75 00               LD   (IX+0),L   
0F7C   DD 23                  INC   IX   
0F7E   DD 74 00               LD   (IX+0),H   
0F81   DD 23                  INC   IX   
0F83   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0F86   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
0F87   23                     INC   HL   
0F88   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0F8B                          ;*Macro unroll:  ppop0 H,L
0F8B   DD 2B                  DEC   IX   
0F8D   DD 66 00               LD   H,(IX+0)   
0F90   DD 2B                  DEC   IX   
0F92   DD 6E 00               LD   L,(IX+0)   
0F95                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0F95   DD 2B                  DEC   IX   ; cleanup TOS
0F97   DD 46 00               LD   B,(IX+0)   
0F9A   DD 2B                  DEC   IX   
0F9C   DD 4E 00               LD   C,(IX+0)   
0F9F                          ;*Macro unroll:  NEXT
0F9F   C3 63 0E               JP   enter   
0FA2   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
0FC8   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
0FCB   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
0FD0   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
0FDB   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
0FE6                             ; serial I/O
0FE6                INITSERIAL:      
0FE6   21 00 00               LD   HL,0   
0FE9   22 43 30               LD   (serbufused),HL   
0FEC   21 00 30               LD   HL,serbuf   
0FEF   22 3F 30               LD   (serinptr),HL   
0FF2   22 41 30               LD   (serrdptr),HL   
0FF5   21 4D 30               LD   HL,linebuf   
0FF8   22 45 30               LD   (lineBufStart),HL   
0FFB   22 49 30               LD   (currkey),HL   
0FFE   22 4B 30               LD   (linebuftop),HL   
1001   21 80 00               LD   HL,LINE_BUFSIZE   
1004   22 47 30               LD   (lineBufSize),HL   
1007   3E 96                  LD   A,rts_low   
1009   D3 80                  OUT   ($80),A   ; initialise acia
100B   ED 56                  IM   1   
100D   FB                     EI      
100E   C9                     RET      
100F                SERIALIN:      
100F   F5                     PUSH   AF   
1010   E5                     PUSH   HL   
1011   DB 80                  IN   A,($80)   
1013   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
1015                          ;*Macro unroll:  _if nz
1015   C2 1B 10               JP   nz,L_M_1803S31   
1018   C3 18 10               JP   $   
101B                          ;*Macro unroll:  STRUC_PUSH $
101B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
101B                STRUC_12:   .SET   STRUC_11   
101B                STRUC_11:   .SET   STRUC_10   
101B                STRUC_10:   .SET   STRUC_9   
101B                STRUC_9:   .SET   STRUC_8   
101B                STRUC_8:   .SET   STRUC_7   
101B                STRUC_7:   .SET   STRUC_6   
101B                STRUC_6:   .SET   STRUC_5   
101B                STRUC_5:   .SET   STRUC_4   
101B                STRUC_4:   .SET   STRUC_3   
101B                STRUC_3:   .SET   STRUC_2   
101B                STRUC_2:   .SET   STRUC_TOP   
101B                STRUC_TOP:   .SET   $   
101B                L_M_1803S31:      
101B   DB 81                  IN   A,($81)   
101D   F5                     PUSH   AF   
101E   3A 43 30               LD   A,(serBufUsed)   
1021   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
1023                          ;*Macro unroll:  _if z
1023   CA 29 10               JP   z,L_M_1808S36   
1026   C3 26 10               JP   $   
1029                          ;*Macro unroll:  STRUC_PUSH $
1029                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1029                STRUC_12:   .SET   STRUC_11   
1029                STRUC_11:   .SET   STRUC_10   
1029                STRUC_10:   .SET   STRUC_9   
1029                STRUC_9:   .SET   STRUC_8   
1029                STRUC_8:   .SET   STRUC_7   
1029                STRUC_7:   .SET   STRUC_6   
1029                STRUC_6:   .SET   STRUC_5   
1029                STRUC_5:   .SET   STRUC_4   
1029                STRUC_4:   .SET   STRUC_3   
1029                STRUC_3:   .SET   STRUC_2   
1029                STRUC_2:   .SET   STRUC_TOP   
1029                STRUC_TOP:   .SET   $   
1029                L_M_1808S36:      
1029   F1                     POP   AF   
102A                          ;*Macro unroll:  _else
102A   C3 2A 10               JP   $   
102D                          ;*Macro unroll:  STRUC_FWD
102D                CUR_ADR:   .SET   $   
1027                          .ORG   STRUC_TOP - 2   
1027   2D 10                  DW   CUR_ADR   
102D                          .ORG   CUR_ADR   
102D                STRUC_TOP:   .SET   $   
102D   2A 3F 30               LD   HL,(serInPtr)   
1030   23                     INC   HL   
1031   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
1032   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
1034                          ;*Macro unroll:  _if z
1034   CA 3A 10               JP   z,L_M_1815S43   
1037   C3 37 10               JP   $   
103A                          ;*Macro unroll:  STRUC_PUSH $
103A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
103A                STRUC_12:   .SET   STRUC_11   
103A                STRUC_11:   .SET   STRUC_10   
103A                STRUC_10:   .SET   STRUC_9   
103A                STRUC_9:   .SET   STRUC_8   
103A                STRUC_8:   .SET   STRUC_7   
103A                STRUC_7:   .SET   STRUC_6   
103A                STRUC_6:   .SET   STRUC_5   
103A                STRUC_5:   .SET   STRUC_4   
103A                STRUC_4:   .SET   STRUC_3   
103A                STRUC_3:   .SET   STRUC_2   
103A                STRUC_2:   .SET   STRUC_TOP   
103A                STRUC_TOP:   .SET   $   
103A                L_M_1815S43:      
103A   21 00 30               LD   HL,serBuf   
103D                          ;*Macro unroll:  _endif
103D                          ;*Macro unroll:  STRUC_FWD
103D                CUR_ADR:   .SET   $   
1038                          .ORG   STRUC_TOP - 2   
1038   3D 10                  DW   CUR_ADR   
103D                          .ORG   CUR_ADR   
103D                          ;*Macro unroll:  STRUC_POP
103D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
103D                STRUC_TOP:   .SET   STRUC_2   
103D                STRUC_2:   .SET   STRUC_3   
103D                STRUC_3:   .SET   STRUC_4   
103D                STRUC_4:   .SET   STRUC_5   
103D                STRUC_5:   .SET   STRUC_6   
103D                STRUC_6:   .SET   STRUC_7   
103D                STRUC_7:   .SET   STRUC_8   
103D                STRUC_8:   .SET   STRUC_9   
103D                STRUC_9:   .SET   STRUC_10   
103D                STRUC_10:   .SET   STRUC_11   
103D                STRUC_11:   .SET   STRUC_12   
103D                STRUC_12:   .SET   0   
103D   22 3F 30               LD   (serInPtr),HL   
1040   F1                     POP   AF   
1041   77                     LD   (HL),A   
1042   3A 43 30               LD   A,(serBufUsed)   
1045   3C                     INC   A   
1046   32 43 30               LD   (serBufUsed),A   
1049   FE 30                  CP   SER_FULLSIZE   
104B                          ;*Macro unroll:  _if nc
104B   D2 51 10               JP   nc,L_M_1825S53   
104E   C3 4E 10               JP   $   
1051                          ;*Macro unroll:  STRUC_PUSH $
1051                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1051                STRUC_12:   .SET   STRUC_11   
1051                STRUC_11:   .SET   STRUC_10   
1051                STRUC_10:   .SET   STRUC_9   
1051                STRUC_9:   .SET   STRUC_8   
1051                STRUC_8:   .SET   STRUC_7   
1051                STRUC_7:   .SET   STRUC_6   
1051                STRUC_6:   .SET   STRUC_5   
1051                STRUC_5:   .SET   STRUC_4   
1051                STRUC_4:   .SET   STRUC_3   
1051                STRUC_3:   .SET   STRUC_2   
1051                STRUC_2:   .SET   STRUC_TOP   
1051                STRUC_TOP:   .SET   $   
1051                L_M_1825S53:      
1051   3E D6                  LD   A,RTS_HIGH   
1053   D3 80                  OUT   ($80),A   
1055                          ;*Macro unroll:  _endif
1055                          ;*Macro unroll:  STRUC_FWD
1055                CUR_ADR:   .SET   $   
104F                          .ORG   STRUC_TOP - 2   
104F   55 10                  DW   CUR_ADR   
1055                          .ORG   CUR_ADR   
1055                          ;*Macro unroll:  STRUC_POP
1055                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1055                STRUC_TOP:   .SET   STRUC_2   
1055                STRUC_2:   .SET   STRUC_3   
1055                STRUC_3:   .SET   STRUC_4   
1055                STRUC_4:   .SET   STRUC_5   
1055                STRUC_5:   .SET   STRUC_6   
1055                STRUC_6:   .SET   STRUC_7   
1055                STRUC_7:   .SET   STRUC_8   
1055                STRUC_8:   .SET   STRUC_9   
1055                STRUC_9:   .SET   STRUC_10   
1055                STRUC_10:   .SET   STRUC_11   
1055                STRUC_11:   .SET   STRUC_12   
1055                STRUC_12:   .SET   0   
1055                          ;*Macro unroll:  _endif
1055                          ;*Macro unroll:  STRUC_FWD
1055                CUR_ADR:   .SET   $   
102B                          .ORG   STRUC_TOP - 2   
102B   55 10                  DW   CUR_ADR   
1055                          .ORG   CUR_ADR   
1055                          ;*Macro unroll:  STRUC_POP
1055                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1055                STRUC_TOP:   .SET   STRUC_2   
1055                STRUC_2:   .SET   STRUC_3   
1055                STRUC_3:   .SET   STRUC_4   
1055                STRUC_4:   .SET   STRUC_5   
1055                STRUC_5:   .SET   STRUC_6   
1055                STRUC_6:   .SET   STRUC_7   
1055                STRUC_7:   .SET   STRUC_8   
1055                STRUC_8:   .SET   STRUC_9   
1055                STRUC_9:   .SET   STRUC_10   
1055                STRUC_10:   .SET   STRUC_11   
1055                STRUC_11:   .SET   STRUC_12   
1055                STRUC_12:   .SET   0   
1055                          ;*Macro unroll:  _endif
1055                          ;*Macro unroll:  STRUC_FWD
1055                CUR_ADR:   .SET   $   
1019                          .ORG   STRUC_TOP - 2   
1019   55 10                  DW   CUR_ADR   
1055                          .ORG   CUR_ADR   
1055                          ;*Macro unroll:  STRUC_POP
1055                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1055                STRUC_TOP:   .SET   STRUC_2   
1055                STRUC_2:   .SET   STRUC_3   
1055                STRUC_3:   .SET   STRUC_4   
1055                STRUC_4:   .SET   STRUC_5   
1055                STRUC_5:   .SET   STRUC_6   
1055                STRUC_6:   .SET   STRUC_7   
1055                STRUC_7:   .SET   STRUC_8   
1055                STRUC_8:   .SET   STRUC_9   
1055                STRUC_9:   .SET   STRUC_10   
1055                STRUC_10:   .SET   STRUC_11   
1055                STRUC_11:   .SET   STRUC_12   
1055                STRUC_12:   .SET   0   
1055   E1                     POP   HL   
1056   F1                     POP   AF   
1057   FB                     EI      
1058   C9                     RET      
1059                             ; 
1059                             ; getc - input
1059                             ; returns: A = input char
1059                             ; 
1059                GETC:        
1059                          IF   TESTMODE   
1059   E5                     PUSH   HL   
105A   2A 61 32               LD   HL,(char_pointer)   
105D   7E                     LD   A,(HL)   
105E   23                     INC   HL   
105F   22 61 32               LD   (char_pointer),HL   
1062   E1                     POP   HL   
1063   C9                     RET      
1064                          ELSE      
                              ;*Macro unroll:  _do
                              JR   L_M_1849S81   
                              JP   $   
                              ;*Macro unroll:  DLOOP_PUSH $
                    DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
                    DLOOP_12:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_TOP   
                    DLOOP_TOP:   .SET   $   
                    L_M_1849S81:      
                              LD   A,(serBufUsed)   
                              CP   $00   
                              ;*Macro unroll:  _until nz
                              JP   nz,DLOOP_TOP - 3   
                              ;*Macro unroll:  DLOOP_FWD               ; needed?
                    CUR_ADR:   .SET   $   ; needed?
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  _enddo
                              JP   DLOOP_TOP   
                              ;*Macro unroll:  DLOOP_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  DLOOP_POP
                    DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
                    DLOOP_TOP:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_12   
                    DLOOP_12:   .SET   0   
                              PUSH   HL   
                              LD   HL,(serRdPtr)   
                              INC   HL   
                              LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
                              CP   (serBuf + SER_BUFSIZE) & $FF   
                              ;*Macro unroll:  _if z
                              JP   z,L_M_1859S91   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1859S91:      
                              LD   HL,serBuf   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              DI      
                              LD   (serRdPtr),HL   
                              LD   A,(serBufUsed)   
                              DEC   A   
                              LD   (serBufUsed),A   
                              CP   SER_EMPTYSIZE   
                              ;*Macro unroll:  _if c
                              JP   c,L_M_1868S100   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1868S100:      
                              LD   A,RTS_LOW   
                              OUT   ($80),A   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              LD   A,(HL)   
                              EI      
                              POP   HL   
                              RET      ; Char ready in A
1064                          ENDIF      
1064                             ; 
1064                             ; putc - output a character
1064                             ; params: A = char to output
1064                             ; 
1064                PUTC:        
1064   F5                     PUSH   AF   ; Store character
1065                          ;*Macro unroll:  _do
1065   18 03                  JR   L_M_1883S117   
1067   C3 67 10               JP   $   
106A                          ;*Macro unroll:  DLOOP_PUSH $
106A                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
106A                DLOOP_12:   .SET   DLOOP_11   
106A                DLOOP_11:   .SET   DLOOP_10   
106A                DLOOP_10:   .SET   DLOOP_9   
106A                DLOOP_9:   .SET   DLOOP_8   
106A                DLOOP_8:   .SET   DLOOP_7   
106A                DLOOP_7:   .SET   DLOOP_6   
106A                DLOOP_6:   .SET   DLOOP_5   
106A                DLOOP_5:   .SET   DLOOP_4   
106A                DLOOP_4:   .SET   DLOOP_3   
106A                DLOOP_3:   .SET   DLOOP_2   
106A                DLOOP_2:   .SET   DLOOP_TOP   
106A                DLOOP_TOP:   .SET   $   
106A                L_M_1883S117:      
106A   DB 80                  IN   A,($80)   ; Status byte
106C   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
106E                          ;*Macro unroll:  _until nz
106E   C2 67 10               JP   nz,DLOOP_TOP - 3   
1071                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1071                CUR_ADR:   .SET   $   ; needed?
1068                          .ORG   DLOOP_TOP - 2   
1068   71 10                  DW   CUR_ADR   
1071                          .ORG   CUR_ADR   
1071                          ;*Macro unroll:  _enddo
1071   C3 6A 10               JP   DLOOP_TOP   
1074                          ;*Macro unroll:  DLOOP_FWD
1074                CUR_ADR:   .SET   $   
1068                          .ORG   DLOOP_TOP - 2   
1068   74 10                  DW   CUR_ADR   
1074                          .ORG   CUR_ADR   
1074                          ;*Macro unroll:  DLOOP_POP
1074                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1074                DLOOP_TOP:   .SET   DLOOP_2   
1074                DLOOP_2:   .SET   DLOOP_3   
1074                DLOOP_3:   .SET   DLOOP_4   
1074                DLOOP_4:   .SET   DLOOP_5   
1074                DLOOP_5:   .SET   DLOOP_6   
1074                DLOOP_6:   .SET   DLOOP_7   
1074                DLOOP_7:   .SET   DLOOP_8   
1074                DLOOP_8:   .SET   DLOOP_9   
1074                DLOOP_9:   .SET   DLOOP_10   
1074                DLOOP_10:   .SET   DLOOP_11   
1074                DLOOP_11:   .SET   DLOOP_12   
1074                DLOOP_12:   .SET   0   
1074   F1                     POP   AF   ; Retrieve character
1075   D3 81                  OUT   ($81),A   ; Output the character
1077   C9                     RET      
1078                INPUTREADY:      
1078   3A 43 30               LD   A,(serBufUsed)   
107B   FE 00                  CP   $0   
107D   C9                     RET      
107E                             ; 
107E                             ; getline - input line of text ***
107E                             ; params: HL = addr, DE = max (currently up to 255)
107E                             ; returns: BC = length - up to 255
107E                             ; 
107E                GETLINE:      
107E   F5                     PUSH   AF   
107F   E5                     PUSH   HL   
1080                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
1080                          ;*Macro unroll:  ppush0 D,E
1080   DD 73 00               LD   (IX+0),E   
1083   DD 23                  INC   IX   
1085   DD 72 00               LD   (IX+0),D   
1088   DD 23                  INC   IX   
108A   11 CB 0F               LD   DE,TXT_PROMPT   
108D   CD 43 11               CALL   printPStr   
1090                          ;*Macro unroll:  ppop0 D,E
1090   DD 2B                  DEC   IX   
1092   DD 56 00               LD   D,(IX+0)   
1095   DD 2B                  DEC   IX   
1097   DD 5E 00               LD   E,(IX+0)   
109A   E1                     POP   HL   
109B   E5                     PUSH   HL   
109C   01 00 00               LD   BC,0   
109F                          ;*Macro unroll:  _do
109F   18 03                  JR   L_M_1907S144   
10A1   C3 A1 10               JP   $   
10A4                          ;*Macro unroll:  DLOOP_PUSH $
10A4                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10A4                DLOOP_12:   .SET   DLOOP_11   
10A4                DLOOP_11:   .SET   DLOOP_10   
10A4                DLOOP_10:   .SET   DLOOP_9   
10A4                DLOOP_9:   .SET   DLOOP_8   
10A4                DLOOP_8:   .SET   DLOOP_7   
10A4                DLOOP_7:   .SET   DLOOP_6   
10A4                DLOOP_6:   .SET   DLOOP_5   
10A4                DLOOP_5:   .SET   DLOOP_4   
10A4                DLOOP_4:   .SET   DLOOP_3   
10A4                DLOOP_3:   .SET   DLOOP_2   
10A4                DLOOP_2:   .SET   DLOOP_TOP   
10A4                DLOOP_TOP:   .SET   $   
10A4                L_M_1907S144:      
10A4                          ;*Macro unroll:  _do
10A4   18 03                  JR   L_M_1908S145   
10A6   C3 A6 10               JP   $   
10A9                          ;*Macro unroll:  DLOOP_PUSH $
10A9                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10A9                DLOOP_12:   .SET   DLOOP_11   
10A9                DLOOP_11:   .SET   DLOOP_10   
10A9                DLOOP_10:   .SET   DLOOP_9   
10A9                DLOOP_9:   .SET   DLOOP_8   
10A9                DLOOP_8:   .SET   DLOOP_7   
10A9                DLOOP_7:   .SET   DLOOP_6   
10A9                DLOOP_6:   .SET   DLOOP_5   
10A9                DLOOP_5:   .SET   DLOOP_4   
10A9                DLOOP_4:   .SET   DLOOP_3   
10A9                DLOOP_3:   .SET   DLOOP_2   
10A9                DLOOP_2:   .SET   DLOOP_TOP   
10A9                DLOOP_TOP:   .SET   $   
10A9                L_M_1908S145:      
10A9   CD 59 10               CALL   getc   
10AC   FE 08                  CP   $08   
10AE                          ;*Macro unroll:  _if z
10AE   CA B4 10               JP   z,L_M_1911S148   
10B1   C3 B1 10               JP   $   
10B4                          ;*Macro unroll:  STRUC_PUSH $
10B4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10B4                STRUC_12:   .SET   STRUC_11   
10B4                STRUC_11:   .SET   STRUC_10   
10B4                STRUC_10:   .SET   STRUC_9   
10B4                STRUC_9:   .SET   STRUC_8   
10B4                STRUC_8:   .SET   STRUC_7   
10B4                STRUC_7:   .SET   STRUC_6   
10B4                STRUC_6:   .SET   STRUC_5   
10B4                STRUC_5:   .SET   STRUC_4   
10B4                STRUC_4:   .SET   STRUC_3   
10B4                STRUC_3:   .SET   STRUC_2   
10B4                STRUC_2:   .SET   STRUC_TOP   
10B4                STRUC_TOP:   .SET   $   
10B4                L_M_1911S148:      
10B4                          ;*Macro unroll:  checkZeroWord B,C
10B4   79                     LD   A,C   
10B5   B0                     OR   B   
10B6                          ;*Macro unroll:  _if nz
10B6   C2 BC 10               JP   nz,L_M_1913S150   
10B9   C3 B9 10               JP   $   
10BC                          ;*Macro unroll:  STRUC_PUSH $
10BC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10BC                STRUC_12:   .SET   STRUC_11   
10BC                STRUC_11:   .SET   STRUC_10   
10BC                STRUC_10:   .SET   STRUC_9   
10BC                STRUC_9:   .SET   STRUC_8   
10BC                STRUC_8:   .SET   STRUC_7   
10BC                STRUC_7:   .SET   STRUC_6   
10BC                STRUC_6:   .SET   STRUC_5   
10BC                STRUC_5:   .SET   STRUC_4   
10BC                STRUC_4:   .SET   STRUC_3   
10BC                STRUC_3:   .SET   STRUC_2   
10BC                STRUC_2:   .SET   STRUC_TOP   
10BC                STRUC_TOP:   .SET   $   
10BC                L_M_1913S150:      
10BC   2B                     DEC   HL   
10BD   0B                     DEC   BC   
10BE   3E 08                  LD   a,$08   
10C0   CD 64 10               CALL   putc   
10C3   CD 65 11               CALL   printSpace   
10C6   3E 08                  LD   A,$08   
10C8   CD 64 10               CALL   putc   
10CB                          ;*Macro unroll:  _endif
10CB                          ;*Macro unroll:  STRUC_FWD
10CB                CUR_ADR:   .SET   $   
10BA                          .ORG   STRUC_TOP - 2   
10BA   CB 10                  DW   CUR_ADR   
10CB                          .ORG   CUR_ADR   
10CB                          ;*Macro unroll:  STRUC_POP
10CB                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10CB                STRUC_TOP:   .SET   STRUC_2   
10CB                STRUC_2:   .SET   STRUC_3   
10CB                STRUC_3:   .SET   STRUC_4   
10CB                STRUC_4:   .SET   STRUC_5   
10CB                STRUC_5:   .SET   STRUC_6   
10CB                STRUC_6:   .SET   STRUC_7   
10CB                STRUC_7:   .SET   STRUC_8   
10CB                STRUC_8:   .SET   STRUC_9   
10CB                STRUC_9:   .SET   STRUC_10   
10CB                STRUC_10:   .SET   STRUC_11   
10CB                STRUC_11:   .SET   STRUC_12   
10CB                STRUC_12:   .SET   0   
10CB                          ;*Macro unroll:  _else
10CB   C3 CB 10               JP   $   
10CE                          ;*Macro unroll:  STRUC_FWD
10CE                CUR_ADR:   .SET   $   
10B2                          .ORG   STRUC_TOP - 2   
10B2   CE 10                  DW   CUR_ADR   
10CE                          .ORG   CUR_ADR   
10CE                STRUC_TOP:   .SET   $   
10CE   77                     LD   (HL),A   
10CF   23                     INC   HL   
10D0   03                     INC   BC   
10D1   CB 7F                  BIT   7,a   
10D3                          ;*Macro unroll:  _if z
10D3   CA D9 10               JP   z,L_M_1927S164   
10D6   C3 D6 10               JP   $   
10D9                          ;*Macro unroll:  STRUC_PUSH $
10D9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10D9                STRUC_12:   .SET   STRUC_11   
10D9                STRUC_11:   .SET   STRUC_10   
10D9                STRUC_10:   .SET   STRUC_9   
10D9                STRUC_9:   .SET   STRUC_8   
10D9                STRUC_8:   .SET   STRUC_7   
10D9                STRUC_7:   .SET   STRUC_6   
10D9                STRUC_6:   .SET   STRUC_5   
10D9                STRUC_5:   .SET   STRUC_4   
10D9                STRUC_4:   .SET   STRUC_3   
10D9                STRUC_3:   .SET   STRUC_2   
10D9                STRUC_2:   .SET   STRUC_TOP   
10D9                STRUC_TOP:   .SET   $   
10D9                L_M_1927S164:      
10D9   CD 64 10               CALL   putc   
10DC                          ;*Macro unroll:  _endif
10DC                          ;*Macro unroll:  STRUC_FWD
10DC                CUR_ADR:   .SET   $   
10D7                          .ORG   STRUC_TOP - 2   
10D7   DC 10                  DW   CUR_ADR   
10DC                          .ORG   CUR_ADR   
10DC                          ;*Macro unroll:  STRUC_POP
10DC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10DC                STRUC_TOP:   .SET   STRUC_2   
10DC                STRUC_2:   .SET   STRUC_3   
10DC                STRUC_3:   .SET   STRUC_4   
10DC                STRUC_4:   .SET   STRUC_5   
10DC                STRUC_5:   .SET   STRUC_6   
10DC                STRUC_6:   .SET   STRUC_7   
10DC                STRUC_7:   .SET   STRUC_8   
10DC                STRUC_8:   .SET   STRUC_9   
10DC                STRUC_9:   .SET   STRUC_10   
10DC                STRUC_10:   .SET   STRUC_11   
10DC                STRUC_11:   .SET   STRUC_12   
10DC                STRUC_12:   .SET   0   
10DC   FE 0D                  CP   "\r"   
10DE   28 0B                  JR   z,getLineCheck   
10E0   FE 0A                  CP   "\n"   
10E2   28 07                  JR   z,getLineCheck   
10E4   7B                     LD   A,E   
10E5   B9                     CP   C   
10E6   38 03                  JR   c,getLineCheck   
10E8                          ;*Macro unroll:  _endif
10E8                          ;*Macro unroll:  STRUC_FWD
10E8                CUR_ADR:   .SET   $   
10CC                          .ORG   STRUC_TOP - 2   
10CC   E8 10                  DW   CUR_ADR   
10E8                          .ORG   CUR_ADR   
10E8                          ;*Macro unroll:  STRUC_POP
10E8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10E8                STRUC_TOP:   .SET   STRUC_2   
10E8                STRUC_2:   .SET   STRUC_3   
10E8                STRUC_3:   .SET   STRUC_4   
10E8                STRUC_4:   .SET   STRUC_5   
10E8                STRUC_5:   .SET   STRUC_6   
10E8                STRUC_6:   .SET   STRUC_7   
10E8                STRUC_7:   .SET   STRUC_8   
10E8                STRUC_8:   .SET   STRUC_9   
10E8                STRUC_9:   .SET   STRUC_10   
10E8                STRUC_10:   .SET   STRUC_11   
10E8                STRUC_11:   .SET   STRUC_12   
10E8                STRUC_12:   .SET   0   
10E8                          ;*Macro unroll:  _enddo
10E8   C3 A9 10               JP   DLOOP_TOP   
10EB                          ;*Macro unroll:  DLOOP_FWD
10EB                CUR_ADR:   .SET   $   
10A7                          .ORG   DLOOP_TOP - 2   
10A7   EB 10                  DW   CUR_ADR   
10EB                          .ORG   CUR_ADR   
10EB                          ;*Macro unroll:  DLOOP_POP
10EB                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
10EB                DLOOP_TOP:   .SET   DLOOP_2   
10EB                DLOOP_2:   .SET   DLOOP_3   
10EB                DLOOP_3:   .SET   DLOOP_4   
10EB                DLOOP_4:   .SET   DLOOP_5   
10EB                DLOOP_5:   .SET   DLOOP_6   
10EB                DLOOP_6:   .SET   DLOOP_7   
10EB                DLOOP_7:   .SET   DLOOP_8   
10EB                DLOOP_8:   .SET   DLOOP_9   
10EB                DLOOP_9:   .SET   DLOOP_10   
10EB                DLOOP_10:   .SET   DLOOP_11   
10EB                DLOOP_11:   .SET   DLOOP_12   
10EB                DLOOP_12:   .SET   0   
10EB                GETLINECHECK:      
10EB   3E 00                  LD   a,0   
10ED   B9                     CP   c   
10EE                          ;*Macro unroll:  _until nz
10EE   C2 A1 10               JP   nz,DLOOP_TOP - 3   
10F1                          ;*Macro unroll:  DLOOP_FWD               ; needed?
10F1                CUR_ADR:   .SET   $   ; needed?
10A2                          .ORG   DLOOP_TOP - 2   
10A2   F1 10                  DW   CUR_ADR   
10F1                          .ORG   CUR_ADR   
10F1                          ;*Macro unroll:  _enddo
10F1   C3 A4 10               JP   DLOOP_TOP   
10F4                          ;*Macro unroll:  DLOOP_FWD
10F4                CUR_ADR:   .SET   $   
10A2                          .ORG   DLOOP_TOP - 2   
10A2   F4 10                  DW   CUR_ADR   
10F4                          .ORG   CUR_ADR   
10F4                          ;*Macro unroll:  DLOOP_POP
10F4                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
10F4                DLOOP_TOP:   .SET   DLOOP_2   
10F4                DLOOP_2:   .SET   DLOOP_3   
10F4                DLOOP_3:   .SET   DLOOP_4   
10F4                DLOOP_4:   .SET   DLOOP_5   
10F4                DLOOP_5:   .SET   DLOOP_6   
10F4                DLOOP_6:   .SET   DLOOP_7   
10F4                DLOOP_7:   .SET   DLOOP_8   
10F4                DLOOP_8:   .SET   DLOOP_9   
10F4                DLOOP_9:   .SET   DLOOP_10   
10F4                DLOOP_10:   .SET   DLOOP_11   
10F4                DLOOP_11:   .SET   DLOOP_12   
10F4                DLOOP_12:   .SET   0   
10F4   F1                     POP   AF   
10F5   E1                     POP   HL   
10F6   CD 5C 11               CALL   printCR   
10F9   C9                     RET      
10FA                PRINTROUTINE:      
10FA                          ;*Macro unroll:  _do
10FA   18 03                  JR   L_M_1949S188   
10FC   C3 FC 10               JP   $   
10FF                          ;*Macro unroll:  DLOOP_PUSH $
10FF                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10FF                DLOOP_12:   .SET   DLOOP_11   
10FF                DLOOP_11:   .SET   DLOOP_10   
10FF                DLOOP_10:   .SET   DLOOP_9   
10FF                DLOOP_9:   .SET   DLOOP_8   
10FF                DLOOP_8:   .SET   DLOOP_7   
10FF                DLOOP_7:   .SET   DLOOP_6   
10FF                DLOOP_6:   .SET   DLOOP_5   
10FF                DLOOP_5:   .SET   DLOOP_4   
10FF                DLOOP_4:   .SET   DLOOP_3   
10FF                DLOOP_3:   .SET   DLOOP_2   
10FF                DLOOP_2:   .SET   DLOOP_TOP   
10FF                DLOOP_TOP:   .SET   $   
10FF                L_M_1949S188:      
10FF   1A                     LD   A,(DE)   
1100   CD 64 10               CALL   putc   
1103   13                     INC   DE   
1104   0B                     DEC   BC   
1105                          ;*Macro unroll:  checkZeroWord B,C
1105   79                     LD   A,C   
1106   B0                     OR   B   
1107                          ;*Macro unroll:  _until z
1107   CA FC 10               JP   z,DLOOP_TOP - 3   
110A                          ;*Macro unroll:  DLOOP_FWD               ; needed?
110A                CUR_ADR:   .SET   $   ; needed?
10FD                          .ORG   DLOOP_TOP - 2   
10FD   0A 11                  DW   CUR_ADR   
110A                          .ORG   CUR_ADR   
110A                          ;*Macro unroll:  _enddo
110A   C3 FF 10               JP   DLOOP_TOP   
110D                          ;*Macro unroll:  DLOOP_FWD
110D                CUR_ADR:   .SET   $   
10FD                          .ORG   DLOOP_TOP - 2   
10FD   0D 11                  DW   CUR_ADR   
110D                          .ORG   CUR_ADR   
110D                          ;*Macro unroll:  DLOOP_POP
110D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
110D                DLOOP_TOP:   .SET   DLOOP_2   
110D                DLOOP_2:   .SET   DLOOP_3   
110D                DLOOP_3:   .SET   DLOOP_4   
110D                DLOOP_4:   .SET   DLOOP_5   
110D                DLOOP_5:   .SET   DLOOP_6   
110D                DLOOP_6:   .SET   DLOOP_7   
110D                DLOOP_7:   .SET   DLOOP_8   
110D                DLOOP_8:   .SET   DLOOP_9   
110D                DLOOP_9:   .SET   DLOOP_10   
110D                DLOOP_10:   .SET   DLOOP_11   
110D                DLOOP_11:   .SET   DLOOP_12   
110D                DLOOP_12:   .SET   0   
110D   C9                     RET      
110E                             ; 
110E                             ; getKey -  inputs a line buffered character
110E                             ; params: none
110E                             ; returns: A = character,
110E                             ; 
110E                GETKEY:      
110E   E5                     PUSH   HL   
110F   D5                     PUSH   DE   
1110   C5                     PUSH   BC   
1111   2A 49 30               LD   HL,(currkey)   
1114   ED 5B 4B 30            LD   DE,(lineBufTop)   
1118   B7                     OR   A   
1119   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
111B                          ;*Macro unroll:  _if nc
111B   D2 21 11               JP   nc,L_M_1971S212   
111E   C3 1E 11               JP   $   
1121                          ;*Macro unroll:  STRUC_PUSH $
1121                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1121                STRUC_12:   .SET   STRUC_11   
1121                STRUC_11:   .SET   STRUC_10   
1121                STRUC_10:   .SET   STRUC_9   
1121                STRUC_9:   .SET   STRUC_8   
1121                STRUC_8:   .SET   STRUC_7   
1121                STRUC_7:   .SET   STRUC_6   
1121                STRUC_6:   .SET   STRUC_5   
1121                STRUC_5:   .SET   STRUC_4   
1121                STRUC_4:   .SET   STRUC_3   
1121                STRUC_3:   .SET   STRUC_2   
1121                STRUC_2:   .SET   STRUC_TOP   
1121                STRUC_TOP:   .SET   $   
1121                L_M_1971S212:      
1121   2A 45 30               LD   HL,(lineBufStart)   ; lineBuf
1124   ED 5B 47 30            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
1128   CD 7E 10               CALL   getline   
112B   21 4D 30               LD   HL,lineBuf   
112E   22 49 30               LD   (currkey),HL   
1131   B7                     OR   A   
1132   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
1134   22 4B 30               LD   (lineBufTop),HL   
1137                          ;*Macro unroll:  _endif
1137                          ;*Macro unroll:  STRUC_FWD
1137                CUR_ADR:   .SET   $   
111F                          .ORG   STRUC_TOP - 2   
111F   37 11                  DW   CUR_ADR   
1137                          .ORG   CUR_ADR   
1137                          ;*Macro unroll:  STRUC_POP
1137                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1137                STRUC_TOP:   .SET   STRUC_2   
1137                STRUC_2:   .SET   STRUC_3   
1137                STRUC_3:   .SET   STRUC_4   
1137                STRUC_4:   .SET   STRUC_5   
1137                STRUC_5:   .SET   STRUC_6   
1137                STRUC_6:   .SET   STRUC_7   
1137                STRUC_7:   .SET   STRUC_8   
1137                STRUC_8:   .SET   STRUC_9   
1137                STRUC_9:   .SET   STRUC_10   
1137                STRUC_10:   .SET   STRUC_11   
1137                STRUC_11:   .SET   STRUC_12   
1137                STRUC_12:   .SET   0   
1137   2A 49 30               LD   HL,(currkey)   
113A   7E                     LD   A,(HL)   ; get next key from input lineBuf
113B   23                     INC   HL   
113C   22 49 30               LD   (currkey),HL   ; increment currkey
113F   C1                     POP   BC   
1140   D1                     POP   DE   
1141   E1                     POP   HL   
1142   C9                     RET      
1143                             ; 
1143                             ; Output pascal string ***
1143                             ; params: DE = addr
1143                             ; 
1143                PRINTPSTR:      
1143   F5                     PUSH   AF   
1144   C5                     PUSH   BC   
1145   D5                     PUSH   DE   
1146   1A                     LD   A,(DE)   
1147   4F                     LD   C,A   
1148   06 00                  LD   B,0   
114A   13                     INC   DE   
114B   CD FA 10               CALL   printRoutine   
114E   D1                     POP   DE   
114F   C1                     POP   BC   
1150   F1                     POP   AF   
1151   C9                     RET      
1152                             ; 
1152                             ; Output string
1152                             ; params: DE = addr, BC = length
1152                             ; 
1152                PRINTSTR:      
1152   F5                     PUSH   AF   
1153   C5                     PUSH   BC   
1154   D5                     PUSH   DE   
1155   CD FA 10               CALL   printRoutine   
1158   D1                     POP   DE   
1159   C1                     POP   BC   
115A   F1                     POP   AF   
115B   C9                     RET      
115C                PRINTCR:      
115C   D5                     PUSH   DE   
115D   11 C8 0F               LD   DE,TXT_NEWLINE   
1160   CD 43 11               CALL   printPStr   
1163   D1                     POP   DE   
1164   C9                     RET      
1165                PRINTSPACE:      
1165   F5                     PUSH   AF   
1166   3E 20                  LD   A," "   
1168   CD 64 10               CALL   putc   
116B   F1                     POP   AF   
116C   C9                     RET      
116D                          ;*Macro unroll: mCODE "lit",3,0,LIT
116D                HEADER_LIT:      
116D   74 0F                  DW   link   
116F                LINK:     .SET   HEADER_LIT   
116F   03                     DB   0 + 3   
1170   6C 69 74               DB   "lit"   
1173                LIT:         
1173                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
1173   DD 71 00               LD   (IX+0),C   ; pushTOS
1176   DD 23                  INC   IX   
1178   DD 70 00               LD   (IX+0),B   
117B   DD 23                  INC   IX   
117D   E1                     POP   HL   ; pop address of next Forth word in HL
117E                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
117E   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
117F   23                     INC   HL   
1180   46                     LD   B,(HL)   
1181   23                     INC   HL   
1182                          ;*Macro unroll:  NEXT1
1182   C3 64 0E               JP   enter1   
1185                          ;*Macro unroll: mCODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
1185                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
1185   6D 11                  DW   link   
1187                LINK:     .SET   HEADER_ROT   
1187   03                     DB   0 + 3   
1188   72 6F 74               DB   "rot"   
118B                ROT:         
118B                             ; x3 in BC
118B                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
118B   DD 2B                  DEC   IX   ; x2 in DE
118D   DD 56 00               LD   D,(IX+0)   
1190   DD 2B                  DEC   IX   
1192   DD 5E 00               LD   E,(IX+0)   
1195                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
1195   DD 2B                  DEC   IX   ; x1 in HL
1197   DD 66 00               LD   H,(IX+0)   
119A   DD 2B                  DEC   IX   
119C   DD 6E 00               LD   L,(IX+0)   
119F                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
119F   DD 73 00               LD   (IX+0),E   ; x2 on stack
11A2   DD 23                  INC   IX   
11A4   DD 72 00               LD   (IX+0),D   
11A7   DD 23                  INC   IX   
11A9                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
11A9                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11A9   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11AC   DD 23                  INC   IX   
11AE   DD 70 00               LD   (IX+0),B   
11B1   DD 23                  INC   IX   
11B3   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
11B4   4D                     LD   C,L   
11B5                             ; x1 in BC
11B5                          ;*Macro unroll:  NEXT
11B5   C3 63 0E               JP   enter   
11B8                          ;*Macro unroll: mCODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
11B8                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
11B8   85 11                  DW   link   
11BA                LINK:     .SET   HEADER_NROT   
11BA   04                     DB   0 + 4   
11BB   2D 72 6F 74            DB   "-rot"   
11BF                NROT:        
11BF                             ; x3 in BC
11BF                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
11BF   DD 2B                  DEC   IX   ; x2 in DE
11C1   DD 56 00               LD   D,(IX+0)   
11C4   DD 2B                  DEC   IX   
11C6   DD 5E 00               LD   E,(IX+0)   
11C9                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
11C9   DD 2B                  DEC   IX   ; x1 in HL
11CB   DD 66 00               LD   H,(IX+0)   
11CE   DD 2B                  DEC   IX   
11D0   DD 6E 00               LD   L,(IX+0)   
11D3                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
11D3                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11D3   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11D6   DD 23                  INC   IX   
11D8   DD 70 00               LD   (IX+0),B   
11DB   DD 23                  INC   IX   
11DD   44                     LD   B,H   ; PUSH x1 - x3 x1
11DE   4D                     LD   C,L   
11DF                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
11DF                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11DF   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11E2   DD 23                  INC   IX   
11E4   DD 70 00               LD   (IX+0),B   
11E7   DD 23                  INC   IX   
11E9   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
11EA   4B                     LD   C,E   
11EB                             ; x2 in BC
11EB                          ;*Macro unroll:  NEXT
11EB   C3 63 0E               JP   enter   
11EE                          ;*Macro unroll: mCODE "dup",3,0,DUPP        ; x -- x x
11EE                HEADER_DUPP:      ; x -- x x
11EE   B8 11                  DW   link   
11F0                LINK:     .SET   HEADER_DUPP   
11F0   03                     DB   0 + 3   
11F1   64 75 70               DB   "dup"   
11F4                DUPP:        
11F4                          ;*Macro unroll:  ppush0 B,C
11F4   DD 71 00               LD   (IX+0),C   
11F7   DD 23                  INC   IX   
11F9   DD 70 00               LD   (IX+0),B   
11FC   DD 23                  INC   IX   
11FE                          ;*Macro unroll:  NEXT
11FE   C3 63 0E               JP   enter   
1201                             ; SWAP     x1 x2 -- x2 x1    swap top two items
1201                          ;*Macro unroll: mCODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
1201                HEADER_SWAP:      ; x1 x2 -- x2 x1
1201   EE 11                  DW   link   
1203                LINK:     .SET   HEADER_SWAP   
1203   04                     DB   0 + 4   
1204   73 77 61 70            DB   "swap"   
1208                SWAP:        
1208                          ;*Macro unroll:  ppop0 D,E
1208   DD 2B                  DEC   IX   
120A   DD 56 00               LD   D,(IX+0)   
120D   DD 2B                  DEC   IX   
120F   DD 5E 00               LD   E,(IX+0)   
1212                          ;*Macro unroll:  ppush D,E
1212                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1212   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1215   DD 23                  INC   IX   
1217   DD 70 00               LD   (IX+0),B   
121A   DD 23                  INC   IX   
121C   42                     LD   B,D   
121D   4B                     LD   C,E   
121E                          ;*Macro unroll:  NEXT
121E   C3 63 0E               JP   enter   
1221                          ;*Macro unroll: mCODE "drop",4,0,DROP      ; x --
1221                HEADER_DROP:      ; x --
1221   01 12                  DW   link   
1223                LINK:     .SET   HEADER_DROP   
1223   04                     DB   0 + 4   
1224   64 72 6F 70            DB   "drop"   
1228                DROP:        
1228                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
1228   DD 2B                  DEC   IX   ; drop top of stack
122A   DD 46 00               LD   B,(IX+0)   
122D   DD 2B                  DEC   IX   
122F   DD 4E 00               LD   C,(IX+0)   
1232                          ;*Macro unroll:  NEXT
1232   C3 63 0E               JP   enter   
1235                             ; OVER    x1 x2 -- x1 x2 x1
1235                          ;*Macro unroll: mCODE "over",4,0,OVER
1235                HEADER_OVER:      
1235   21 12                  DW   link   
1237                LINK:     .SET   HEADER_OVER   
1237   04                     DB   0 + 4   
1238   6F 76 65 72            DB   "over"   
123C                OVER:        
123C                          ;*Macro unroll:  ppop0 H,L
123C   DD 2B                  DEC   IX   
123E   DD 66 00               LD   H,(IX+0)   
1241   DD 2B                  DEC   IX   
1243   DD 6E 00               LD   L,(IX+0)   
1246                          ;*Macro unroll:  ppush0 H,L
1246   DD 75 00               LD   (IX+0),L   
1249   DD 23                  INC   IX   
124B   DD 74 00               LD   (IX+0),H   
124E   DD 23                  INC   IX   
1250                          ;*Macro unroll:  ppush H,L
1250                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1250   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1253   DD 23                  INC   IX   
1255   DD 70 00               LD   (IX+0),B   
1258   DD 23                  INC   IX   
125A   44                     LD   B,H   
125B   4D                     LD   C,L   
125C                          ;*Macro unroll:  NEXT
125C   C3 63 0E               JP   enter   
125F                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
125F                          ;*Macro unroll: mCODE ">r",2,0,TOR
125F                HEADER_TOR:      
125F   35 12                  DW   link   
1261                LINK:     .SET   HEADER_TOR   
1261   02                     DB   0 + 2   
1262   3E 72                  DB   ">r"   
1264                TOR:         
1264   E1                     POP   HL   
1265   C5                     PUSH   BC   
1266   E5                     PUSH   HL   
1267                          ;*Macro unroll:  ppop0 B,C
1267   DD 2B                  DEC   IX   
1269   DD 46 00               LD   B,(IX+0)   
126C   DD 2B                  DEC   IX   
126E   DD 4E 00               LD   C,(IX+0)   
1271                          ;*Macro unroll:  NEXT
1271   C3 63 0E               JP   enter   
1274                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
1274                          ;*Macro unroll: mCODE "r>",2,0,RFROM
1274                HEADER_RFROM:      
1274   5F 12                  DW   link   
1276                LINK:     .SET   HEADER_RFROM   
1276   02                     DB   0 + 2   
1277   72 3E                  DB   "r>"   
1279                RFROM:       
1279                          ;*Macro unroll:  ppush0 B,C
1279   DD 71 00               LD   (IX+0),C   
127C   DD 23                  INC   IX   
127E   DD 70 00               LD   (IX+0),B   
1281   DD 23                  INC   IX   
1283   E1                     POP   HL   
1284   C1                     POP   BC   
1285   E5                     PUSH   HL   
1286                          ;*Macro unroll:  NEXT
1286   C3 63 0E               JP   enter   
1289                             ;   2DROP       ( w w -- )
1289                             ;               Discard two items on stack.
1289                          ;*Macro unroll: mCODE	'2DROP',5,0,DDROP
1289                HEADER_DDROP:      
1289   74 12                  DW   link   
128B                LINK:     .SET   HEADER_DDROP   
128B   05                     DB   0 + 5   
128C   32 44 52 4F 50         DB   "2DROP"   
1291                DDROP:       
1291                          ;*Macro unroll:  ENTER
1291   CF                     RST   $08   
1292   28 12 28 12 74 0E      DW   DROP,DROP,EXIT   
1298                             ;   2DUP        ( w1 w2 -- w1 w2 w1 w2 )
1298                             ;               Duplicate top two items.
1298                          ;*Macro unroll: mCODE	'2DUP',4,0,DDUP
1298                HEADER_DDUP:      
1298   89 12                  DW   link   
129A                LINK:     .SET   HEADER_DDUP   
129A   04                     DB   0 + 4   
129B   32 44 55 50            DB   "2DUP"   
129F                DDUP:        
129F                          ;*Macro unroll:  ENTER
129F   CF                     RST   $08   
12A0   3C 12 3C 12 74 0E      DW   OVER,OVER,EXIT   
12A6                LITSTR:      ; pushes ptr to string and length on stack
12A6   CF                     RST   $08   ; enter forth
12A7   79 12                  DW   rfrom   
12A9   C0 12 3C 12 3C 12 CE 00 DW   count,over,over,plus   
12B1   64 12                  DW   tor   
12B3                          ;*Macro unroll:  EXIT
12B3   74 0E                  DW   exit   
12B5   C3 63 0E               JP   enter   
12B8                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
12B8                          ;*Macro unroll: mCODE "count",5,0,count
12B8                HEADER_COUNT:      
12B8   98 12                  DW   link   
12BA                LINK:     .SET   HEADER_count   
12BA   05                     DB   0 + 5   
12BB   63 6F 75 6E 74         DB   "count"   
12C0                COUNT:       
12C0                          ;*Macro unroll:  ENTER
12C0   CF                     RST   $08   
12C1   F4 11 73 11 01 00 CE 00 DW   DUPP,lit,1,plus   ; ( ptr -- ptr ptr+1)
12C9   08 12 D4 0E            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
12CD                          ;*Macro unroll:  EXIT
12CD   74 0E                  DW   exit   
12CF   C3 63 0E               JP   enter   
12D2                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
12D2                             ; to define the name s" using asm80
12D2                          ;*Macro unroll: mCODE {"s",$22},2,msk_immed,squote
12D2                HEADER_SQUOTE:      
12D2   B8 12                  DW   link   
12D4                LINK:     .SET   HEADER_squote   
12D4   82                     DB   msk_immed + 2   
12D5   73 22                  DB   "s",$22   
12D7                SQUOTE:      
12D7   18 04                  JR   qt   
12D9                          ;*Macro unroll: mCODE $22,1,msk_immed,qt
12D9                HEADER_QT:      
12D9   D2 12                  DW   link   
12DB                LINK:     .SET   HEADER_qt   
12DB   81                     DB   msk_immed + 1   
12DC   22                     DB   $22   
12DD                QT:          
12DD                          ;*Macro unroll:  ENTER
12DD   CF                     RST   $08   
12DE   7C 08 A7 0E 73 03      DW   state,fetch,zequal   
12E4                          ;*Macro unroll:  cIf
12E4   20 07 00 00            DW   QBRAN,0   
12E8                          ;*Macro unroll:  CPL_PUSH $
12E8                CPL_COUNT:   .SET   CPL_COUNT + 1   
12E8                CPL_10:   .SET   CPL_9   
12E8                CPL_9:    .SET   CPL_8   
12E8                CPL_8:    .SET   CPL_7   
12E8                CPL_7:    .SET   CPL_6   
12E8                CPL_6:    .SET   CPL_5   
12E8                CPL_5:    .SET   CPL_4   
12E8                CPL_4:    .SET   CPL_3   
12E8                CPL_3:    .SET   CPL_2   
12E8                CPL_2:    .SET   CPL_TOP   
12E8                CPL_TOP:   .SET   $   
12E8   73 11 22 00            DW   lit,$22   ; delim
12EC   73 11 3F 00            DW   lit,63   ; limit 63 + length
12F0   DF 08 A7 0E            DW   latestStr,fetch   
12F4   73 11 CD 30 3C 01      DW   lit,wordBuf,equal   
12FA                          ;*Macro unroll:  cIf
12FA   20 07 00 00            DW   QBRAN,0   
12FE                          ;*Macro unroll:  CPL_PUSH $
12FE                CPL_COUNT:   .SET   CPL_COUNT + 1   
12FE                CPL_10:   .SET   CPL_9   
12FE                CPL_9:    .SET   CPL_8   
12FE                CPL_8:    .SET   CPL_7   
12FE                CPL_7:    .SET   CPL_6   
12FE                CPL_6:    .SET   CPL_5   
12FE                CPL_5:    .SET   CPL_4   
12FE                CPL_4:    .SET   CPL_3   
12FE                CPL_3:    .SET   CPL_2   
12FE                CPL_2:    .SET   CPL_TOP   
12FE                CPL_TOP:   .SET   $   
12FE   73 11 0D 31            DW   lit,wordBuf2   
1302                          ;*Macro unroll:  cElse
1302   3D 07 00 00            DW   BRAN,0   
1306                          ;*Macro unroll:  cBRANCH_FWD
1306                CUR_ADR:   .SET   $   
12FC                          .ORG   CPL_TOP - 2   
12FC   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
1306                          .ORG   CUR_ADR   
1306                CPL_TOP:   .SET   $   
1306   73 11 CD 30            DW   lit,wordBuf   
130A                          ;*Macro unroll:  cEndIf
130A                          ;*Macro unroll:  cBRANCH_FWD
130A                CUR_ADR:   .SET   $   
1304                          .ORG   CPL_TOP - 2   
1304   06 00                  DW   CUR_ADR - CPL_TOP + 2   
130A                          .ORG   CUR_ADR   
130A                          ;*Macro unroll:  CPL_POP
130A                CPL_COUNT:   .SET   CPL_COUNT - 1   
130A                CPL_TOP:   .SET   CPL_2   
130A                CPL_2:    .SET   CPL_3   
130A                CPL_3:    .SET   CPL_4   
130A                CPL_4:    .SET   CPL_5   
130A                CPL_5:    .SET   CPL_6   
130A                CPL_6:    .SET   CPL_7   
130A                CPL_7:    .SET   CPL_8   
130A                CPL_8:    .SET   CPL_9   
130A                CPL_9:    .SET   CPL_10   
130A                CPL_10:   .SET   0   
130A   DF 08 86 0E            DW   latestStr,store   ; store here in latestStr
130E   DF 08 A7 0E            DW   latestStr,fetch   
1312   A7 0B C0 12            DW   xword,count   
1316                          ;*Macro unroll:  cElse
1316   3D 07 00 00            DW   BRAN,0   
131A                          ;*Macro unroll:  cBRANCH_FWD
131A                CUR_ADR:   .SET   $   
12E6                          .ORG   CPL_TOP - 2   
12E6   34 00                  DW   CUR_ADR - CPL_TOP + 2   
131A                          .ORG   CUR_ADR   
131A                CPL_TOP:   .SET   $   
131A   73 11 A6 12 5D 0F      DW   lit,litstr,comma   
1320   73 11 22 00 EF 0A      DW   lit,$22,word   
1326   D4 0E 9B 03            DW   cfetch,ONEP   
132A   2A 0F                  DW   allot   
132C                          ;*Macro unroll:  cEndif
132C                          ;*Macro unroll:  cBRANCH_FWD
132C                CUR_ADR:   .SET   $   
1318                          .ORG   CPL_TOP - 2   
1318   14 00                  DW   CUR_ADR - CPL_TOP + 2   
132C                          .ORG   CUR_ADR   
132C                          ;*Macro unroll:  CPL_POP
132C                CPL_COUNT:   .SET   CPL_COUNT - 1   
132C                CPL_TOP:   .SET   CPL_2   
132C                CPL_2:    .SET   CPL_3   
132C                CPL_3:    .SET   CPL_4   
132C                CPL_4:    .SET   CPL_5   
132C                CPL_5:    .SET   CPL_6   
132C                CPL_6:    .SET   CPL_7   
132C                CPL_7:    .SET   CPL_8   
132C                CPL_8:    .SET   CPL_9   
132C                CPL_9:    .SET   CPL_10   
132C                CPL_10:   .SET   0   
132C                          ;*Macro unroll:  EXIT
132C   74 0E                  DW   exit   
132E   C3 63 0E               JP   enter   
1331                             ; 
1331                             ; compareStr - string equal
1331                             ; params: de = string1, HL = string2, BC = length
1331                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
1331                             ; destroys: de, HL, BC
1331                             ; 
1331                COMPARESTR:      
1331                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
1331   79                     LD   A,C   ; test for Count=0
1332   B0                     OR   B   
1333                          ;*Macro unroll:  _if nz          ; length zero = match
1333   C2 39 13               JP   nz,L_M_2140S56   ; length zero = match
1336   C3 36 13               JP   $   
1339                          ;*Macro unroll:  STRUC_PUSH $
1339                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1339                STRUC_12:   .SET   STRUC_11   
1339                STRUC_11:   .SET   STRUC_10   
1339                STRUC_10:   .SET   STRUC_9   
1339                STRUC_9:   .SET   STRUC_8   
1339                STRUC_8:   .SET   STRUC_7   
1339                STRUC_7:   .SET   STRUC_6   
1339                STRUC_6:   .SET   STRUC_5   
1339                STRUC_5:   .SET   STRUC_4   
1339                STRUC_4:   .SET   STRUC_3   
1339                STRUC_3:   .SET   STRUC_2   
1339                STRUC_2:   .SET   STRUC_TOP   
1339                STRUC_TOP:   .SET   $   
1339                L_M_2140S56:      
1339                          ;*Macro unroll:  _do
1339   18 03                  JR   L_M_2141S57   
133B   C3 3B 13               JP   $   
133E                          ;*Macro unroll:  DLOOP_PUSH $
133E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
133E                DLOOP_12:   .SET   DLOOP_11   
133E                DLOOP_11:   .SET   DLOOP_10   
133E                DLOOP_10:   .SET   DLOOP_9   
133E                DLOOP_9:   .SET   DLOOP_8   
133E                DLOOP_8:   .SET   DLOOP_7   
133E                DLOOP_7:   .SET   DLOOP_6   
133E                DLOOP_6:   .SET   DLOOP_5   
133E                DLOOP_5:   .SET   DLOOP_4   
133E                DLOOP_4:   .SET   DLOOP_3   
133E                DLOOP_3:   .SET   DLOOP_2   
133E                DLOOP_2:   .SET   DLOOP_TOP   
133E                DLOOP_TOP:   .SET   $   
133E                L_M_2141S57:      
133E   1A                     LD   A,(DE)   
133F   13                     INC   DE   
1340   ED A1                  CPI      
1342                          ;*Macro unroll:  _if nz          ; char mismatch: exit
1342   C2 48 13               JP   nz,L_M_2145S61   ; char mismatch: exit
1345   C3 45 13               JP   $   
1348                          ;*Macro unroll:  STRUC_PUSH $
1348                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1348                STRUC_12:   .SET   STRUC_11   
1348                STRUC_11:   .SET   STRUC_10   
1348                STRUC_10:   .SET   STRUC_9   
1348                STRUC_9:   .SET   STRUC_8   
1348                STRUC_8:   .SET   STRUC_7   
1348                STRUC_7:   .SET   STRUC_6   
1348                STRUC_6:   .SET   STRUC_5   
1348                STRUC_5:   .SET   STRUC_4   
1348                STRUC_4:   .SET   STRUC_3   
1348                STRUC_3:   .SET   STRUC_2   
1348                STRUC_2:   .SET   STRUC_TOP   
1348                STRUC_TOP:   .SET   $   
1348                L_M_2145S61:      
1348   2B                     DEC   HL   ; point at mismatch char
1349   BE                     CP   (HL)   ; set carry if char1 < char2
134A   9F                     SBC   A,A   
134B   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
134D   C9                     RET      
134E                          ;*Macro unroll:  _endif
134E                          ;*Macro unroll:  STRUC_FWD
134E                CUR_ADR:   .SET   $   
1346                          .ORG   STRUC_TOP - 2   
1346   4E 13                  DW   CUR_ADR   
134E                          .ORG   CUR_ADR   
134E                          ;*Macro unroll:  STRUC_POP
134E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
134E                STRUC_TOP:   .SET   STRUC_2   
134E                STRUC_2:   .SET   STRUC_3   
134E                STRUC_3:   .SET   STRUC_4   
134E                STRUC_4:   .SET   STRUC_5   
134E                STRUC_5:   .SET   STRUC_6   
134E                STRUC_6:   .SET   STRUC_7   
134E                STRUC_7:   .SET   STRUC_8   
134E                STRUC_8:   .SET   STRUC_9   
134E                STRUC_9:   .SET   STRUC_10   
134E                STRUC_10:   .SET   STRUC_11   
134E                STRUC_11:   .SET   STRUC_12   
134E                STRUC_12:   .SET   0   
134E                          ;*Macro unroll:  _until po
134E   E2 3B 13               JP   po,DLOOP_TOP - 3   
1351                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1351                CUR_ADR:   .SET   $   ; needed?
133C                          .ORG   DLOOP_TOP - 2   
133C   51 13                  DW   CUR_ADR   
1351                          .ORG   CUR_ADR   
1351                          ;*Macro unroll:  _enddo
1351   C3 3E 13               JP   DLOOP_TOP   
1354                          ;*Macro unroll:  DLOOP_FWD
1354                CUR_ADR:   .SET   $   
133C                          .ORG   DLOOP_TOP - 2   
133C   54 13                  DW   CUR_ADR   
1354                          .ORG   CUR_ADR   
1354                          ;*Macro unroll:  DLOOP_POP
1354                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1354                DLOOP_TOP:   .SET   DLOOP_2   
1354                DLOOP_2:   .SET   DLOOP_3   
1354                DLOOP_3:   .SET   DLOOP_4   
1354                DLOOP_4:   .SET   DLOOP_5   
1354                DLOOP_5:   .SET   DLOOP_6   
1354                DLOOP_6:   .SET   DLOOP_7   
1354                DLOOP_7:   .SET   DLOOP_8   
1354                DLOOP_8:   .SET   DLOOP_9   
1354                DLOOP_9:   .SET   DLOOP_10   
1354                DLOOP_10:   .SET   DLOOP_11   
1354                DLOOP_11:   .SET   DLOOP_12   
1354                DLOOP_12:   .SET   0   
1354                          ;*Macro unroll:  _endif
1354                          ;*Macro unroll:  STRUC_FWD
1354                CUR_ADR:   .SET   $   
1337                          .ORG   STRUC_TOP - 2   
1337   54 13                  DW   CUR_ADR   
1354                          .ORG   CUR_ADR   
1354                          ;*Macro unroll:  STRUC_POP
1354                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1354                STRUC_TOP:   .SET   STRUC_2   
1354                STRUC_2:   .SET   STRUC_3   
1354                STRUC_3:   .SET   STRUC_4   
1354                STRUC_4:   .SET   STRUC_5   
1354                STRUC_5:   .SET   STRUC_6   
1354                STRUC_6:   .SET   STRUC_7   
1354                STRUC_7:   .SET   STRUC_8   
1354                STRUC_8:   .SET   STRUC_9   
1354                STRUC_9:   .SET   STRUC_10   
1354                STRUC_10:   .SET   STRUC_11   
1354                STRUC_11:   .SET   STRUC_12   
1354                STRUC_12:   .SET   0   
1354                             ; count exhausted & no mismatch found
1354   3E 00                  LD   A,0   ; a=0 (s1=s2)
1356   C9                     RET      
1357                          ;*Macro unroll: mCODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
1357                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
1357   D9 12                  DW   link   
1359                LINK:     .SET   HEADER_pack   
1359   04                     DB   0 + 4   
135A   70 61 63 6B            DB   "pack"   
135E                PACK:        
135E                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
135E   50                     LD   D,B   ; DE = adr2, BC = len
135F   59                     LD   E,C   
1360                          ;*Macro unroll:  ppop0 B,C
1360   DD 2B                  DEC   IX   
1362   DD 46 00               LD   B,(IX+0)   
1365   DD 2B                  DEC   IX   
1367   DD 4E 00               LD   C,(IX+0)   
136A   D5                     PUSH   DE   
136B                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
136B   DD 2B                  DEC   IX   ; HL = adr1
136D   DD 66 00               LD   H,(IX+0)   
1370   DD 2B                  DEC   IX   
1372   DD 6E 00               LD   L,(IX+0)   
1375   79                     LD   A,C   
1376   12                     LD   (DE),A   ; write length byte to adr2
1377   13                     INC   DE   ; adr2 += 1
1378   ED B0                  LDIR      
137A   C1                     POP   BC   ; TOS = adr2
137B                          ;*Macro unroll:  NEXT
137B   C3 63 0E               JP   enter   
137E                             ; .s print stack (non-destructively)
137E                          ;*Macro unroll: mCODE ".s",2,0,dots                   ; ( -- )
137E                HEADER_DOTS:      ; ( -- )
137E   57 13                  DW   link   
1380                LINK:     .SET   HEADER_dots   
1380   02                     DB   0 + 2   
1381   2E 73                  DB   ".s"   
1383                DOTS:        
1383                          ;*Macro unroll:  ENTER
1383   CF                     RST   $08   
1384   F8 0E                  DW   spfetch   ; psp
1386   AC 08 A7 0E            DW   sp0,fetch   ; psp0
138A   1E 01                  DW   SUBB   
138C   73 11 00 00 8C 01      DW   lit,0,greaterThan   
1392                          ;*Macro unroll:  cif
1392   20 07 00 00            DW   QBRAN,0   
1396                          ;*Macro unroll:  CPL_PUSH $
1396                CPL_COUNT:   .SET   CPL_COUNT + 1   
1396                CPL_10:   .SET   CPL_9   
1396                CPL_9:    .SET   CPL_8   
1396                CPL_8:    .SET   CPL_7   
1396                CPL_7:    .SET   CPL_6   
1396                CPL_6:    .SET   CPL_5   
1396                CPL_5:    .SET   CPL_4   
1396                CPL_4:    .SET   CPL_3   
1396                CPL_3:    .SET   CPL_2   
1396                CPL_2:    .SET   CPL_TOP   
1396                CPL_TOP:   .SET   $   
1396   AC 08 A7 0E 73 11 02 00 CE 00 DW   sp0,fetch,lit,2,plus   
13A0                          ;*Macro unroll:  cdo
13A0   3D 07 06 00            DW   BRAN,6   
13A4   3D 07 00 00            DW   BRAN,0   
13A8                          ;*Macro unroll:  CPL_PUSH $
13A8                CPL_COUNT:   .SET   CPL_COUNT + 1   
13A8                CPL_10:   .SET   CPL_9   
13A8                CPL_9:    .SET   CPL_8   
13A8                CPL_8:    .SET   CPL_7   
13A8                CPL_7:    .SET   CPL_6   
13A8                CPL_6:    .SET   CPL_5   
13A8                CPL_5:    .SET   CPL_4   
13A8                CPL_4:    .SET   CPL_3   
13A8                CPL_3:    .SET   CPL_2   
13A8                CPL_2:    .SET   CPL_TOP   
13A8                CPL_TOP:   .SET   $   
13A8   F4 11                  DW   DUPP   
13AA   F8 0E 73 11 02 00 1E 01 DW   spfetch,lit,2,SUBB   
13B2   08 12 1E 01 73 03      DW   swap,SUBB,zequal   
13B8                          ;*Macro unroll:  cuntil
13B8   73 03 20 07 E8 FF      DW   ZEQUAL,QBRAN,CPL_TOP - $ - 8   
13BE   F4 11 A7 0E 69 09      DW   DUPP,fetch,dot   
13C4   73 11 02 00 CE 00      DW   lit,2,plus   
13CA                          ;*Macro unroll:  cenddo
13CA   3D 07 DC FF            DW   BRAN,CPL_TOP - $ - 2   
13CE                          ;*Macro unroll:  cBRANCH_FWD
13CE                CUR_ADR:   .SET   $   
13A6                          .ORG   CPL_TOP - 2   
13A6   28 00                  DW   CUR_ADR - CPL_TOP + 2   
13CE                          .ORG   CUR_ADR   
13CE                          ;*Macro unroll:  CPL_POP
13CE                CPL_COUNT:   .SET   CPL_COUNT - 1   
13CE                CPL_TOP:   .SET   CPL_2   
13CE                CPL_2:    .SET   CPL_3   
13CE                CPL_3:    .SET   CPL_4   
13CE                CPL_4:    .SET   CPL_5   
13CE                CPL_5:    .SET   CPL_6   
13CE                CPL_6:    .SET   CPL_7   
13CE                CPL_7:    .SET   CPL_8   
13CE                CPL_8:    .SET   CPL_9   
13CE                CPL_9:    .SET   CPL_10   
13CE                CPL_10:   .SET   0   
13CE   28 12                  DW   drop   
13D0                          ;*Macro unroll:  cendif
13D0                          ;*Macro unroll:  cBRANCH_FWD
13D0                CUR_ADR:   .SET   $   
1394                          .ORG   CPL_TOP - 2   
1394   3C 00                  DW   CUR_ADR - CPL_TOP + 2   
13D0                          .ORG   CUR_ADR   
13D0                          ;*Macro unroll:  CPL_POP
13D0                CPL_COUNT:   .SET   CPL_COUNT - 1   
13D0                CPL_TOP:   .SET   CPL_2   
13D0                CPL_2:    .SET   CPL_3   
13D0                CPL_3:    .SET   CPL_4   
13D0                CPL_4:    .SET   CPL_5   
13D0                CPL_5:    .SET   CPL_6   
13D0                CPL_6:    .SET   CPL_7   
13D0                CPL_7:    .SET   CPL_8   
13D0                CPL_8:    .SET   CPL_9   
13D0                CPL_9:    .SET   CPL_10   
13D0                CPL_10:   .SET   0   
13D0                          ;*Macro unroll:  EXIT
13D0   74 0E                  DW   exit   
13D2   C3 63 0E               JP   enter   
13D5                          ;*Macro unroll: mCODE "words", 5, 0, WORDS
13D5                HEADER_WORDS:      
13D5   7E 13                  DW   link   
13D7                LINK:     .SET   HEADER_WORDS   
13D7   05                     DB   0 + 5   
13D8   77 6F 72 64 73         DB   "words"   
13DD                WORDS:       
13DD   C5                     PUSH   BC   
13DE   CD E5 13               CALL   listWords   
13E1   C1                     POP   BC   
13E2                          ;*Macro unroll:  NEXT
13E2   C3 63 0E               JP   enter   
13E5                LISTWORDS:      
13E5   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
13E9                          ;*Macro unroll:  _do
13E9   18 03                  JR   L_M_2195S30   
13EB   C3 EB 13               JP   $   
13EE                          ;*Macro unroll:  DLOOP_PUSH $
13EE                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
13EE                DLOOP_12:   .SET   DLOOP_11   
13EE                DLOOP_11:   .SET   DLOOP_10   
13EE                DLOOP_10:   .SET   DLOOP_9   
13EE                DLOOP_9:   .SET   DLOOP_8   
13EE                DLOOP_8:   .SET   DLOOP_7   
13EE                DLOOP_7:   .SET   DLOOP_6   
13EE                DLOOP_6:   .SET   DLOOP_5   
13EE                DLOOP_5:   .SET   DLOOP_4   
13EE                DLOOP_4:   .SET   DLOOP_3   
13EE                DLOOP_3:   .SET   DLOOP_2   
13EE                DLOOP_2:   .SET   DLOOP_TOP   
13EE                DLOOP_TOP:   .SET   $   
13EE                L_M_2195S30:      
13EE                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
13EE   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
13EF   B2                     OR   D   
13F0                          ;*Macro unroll:  _until z
13F0   CA EB 13               JP   z,DLOOP_TOP - 3   
13F3                          ;*Macro unroll:  DLOOP_FWD               ; needed?
13F3                CUR_ADR:   .SET   $   ; needed?
13EC                          .ORG   DLOOP_TOP - 2   
13EC   F3 13                  DW   CUR_ADR   
13F3                          .ORG   CUR_ADR   
13F3   D5                     PUSH   DE   ; save ptr to header
13F4   13                     INC   DE   ; skip over first field
13F5   13                     INC   DE   
13F6   1A                     LD   A,(DE)   ; a = flags+length field
13F7   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
13F9   06 00                  LD   B,0   
13FB   4F                     LD   C,A   
13FC   13                     INC   DE   
13FD   CD 52 11               CALL   printStr   
1400   CD 65 11               CALL   printSpace   
1403   CD 64 10               CALL   putc   
1406   E1                     POP   HL   ; HL = link to previous header
1407   5E                     LD   E,(HL)   
1408   23                     INC   HL   
1409   56                     LD   D,(HL)   ; DE = previous word
140A                          ;*Macro unroll:  _enddo
140A   C3 EE 13               JP   DLOOP_TOP   
140D                          ;*Macro unroll:  DLOOP_FWD
140D                CUR_ADR:   .SET   $   
13EC                          .ORG   DLOOP_TOP - 2   
13EC   0D 14                  DW   CUR_ADR   
140D                          .ORG   CUR_ADR   
140D                          ;*Macro unroll:  DLOOP_POP
140D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
140D                DLOOP_TOP:   .SET   DLOOP_2   
140D                DLOOP_2:   .SET   DLOOP_3   
140D                DLOOP_3:   .SET   DLOOP_4   
140D                DLOOP_4:   .SET   DLOOP_5   
140D                DLOOP_5:   .SET   DLOOP_6   
140D                DLOOP_6:   .SET   DLOOP_7   
140D                DLOOP_7:   .SET   DLOOP_8   
140D                DLOOP_8:   .SET   DLOOP_9   
140D                DLOOP_9:   .SET   DLOOP_10   
140D                DLOOP_10:   .SET   DLOOP_11   
140D                DLOOP_11:   .SET   DLOOP_12   
140D                DLOOP_12:   .SET   0   
140D   CD 5C 11               CALL   printCR   
1410   C9                     RET      
1411                             ; "latest" must be the last word defined
1411                          ;*Macro unroll:  mVAR "latest",6,0,latest, var_latest
1411                          ;*Macro unroll: mCODE "latest",6,0,latest
1411                HEADER_LATEST:      
1411   D5 13                  DW   link   
1413                LINK:     .SET   HEADER_latest   
1413   06                     DB   0 + 6   
1414   6C 61 74 65 73 74      DB   "latest"   
141A                LATEST:      
141A                          ;*Macro unroll:  ppush0 B,C
141A   DD 71 00               LD   (IX+0),C   
141D   DD 23                  INC   IX   
141F   DD 70 00               LD   (IX+0),B   
1422   DD 23                  INC   IX   
1424   01 5F 32               LD   BC,var_latest   
1427                          ;*Macro unroll:  NEXT
1427   C3 63 0E               JP   enter   
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
2000                TESTS_START:      
2000                             ; 
2000                             ; test-macros
2000                             ; 
2000                             ; macros to facilitate tests
2000                             ; 
2000                .macro TEST_SET_TEXT,s1
2000                             ; 
2000                 ld HL, (lineBufStart)
2000                 ld (lineBufTop),HL
2000                 ld (currkey),HL
2000                 ld HL, tst_text%%M
2000                 ld (char_pointer), HL
2000                 _skip
2000                tst_text%%M:
2000                 db s1,"\r\n",-1,"\r\n"
2000                 _endskip
2000                .endm
2000                 
2000                             ; prevents using _if macro here
2000                .macro EXPECT,expect,failtxt
2000                             ; 
2000                 call printNum
2000                 loadWord H,L, B,C
2000                 ld L, C
2000                 ppop0 B,C
2000                 CMP16 expect
2000                 jp z, tf_done%%M            ; asm80 macro nesting issue
2000                 ld DE, FAILED
2000                 call printPStr
2000                 ld DE, te_fail%%M
2000                 call printPStr
2000                 halt
2000                 _skip
2000                te_fail%%M:
2000                 .pstr failtxt
2000                 _endskip
2000                tf_done%%M:
2000                .endm
2000                 
2000                             ; 
2000                             ; tests
2000                             ; 
2000                             ; these tests will evaluate when TESTMODE = 1
2000                             ; 
2000                          ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
2000   2A 45 30               LD   HL,(lineBufStart)   
2003   22 4B 30               LD   (lineBufTop),HL   
2006   22 49 30               LD   (currkey),HL   
2009   21 12 20               LD   HL,tst_textM_2265S7   
200C   22 61 32               LD   (char_pointer),HL   
200F                          ;*Macro unroll:  _skip
200F   C3 0F 20               JP   $   
2012                          ;*Macro unroll:  STRUC_PUSH $
2012                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2012                STRUC_12:   .SET   STRUC_11   
2012                STRUC_11:   .SET   STRUC_10   
2012                STRUC_10:   .SET   STRUC_9   
2012                STRUC_9:   .SET   STRUC_8   
2012                STRUC_8:   .SET   STRUC_7   
2012                STRUC_7:   .SET   STRUC_6   
2012                STRUC_6:   .SET   STRUC_5   
2012                STRUC_5:   .SET   STRUC_4   
2012                STRUC_4:   .SET   STRUC_3   
2012                STRUC_3:   .SET   STRUC_2   
2012                STRUC_2:   .SET   STRUC_TOP   
2012                STRUC_TOP:   .SET   $   
2012                TST_TEXTM_2265S7:      
2012   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 2C 20 64 6F 65 73 3E 20 40 20 3B 0D 0A FF 0D 0A DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
2031                          ;*Macro unroll:  _endskip
2031                          ;*Macro unroll:  STRUC_FWD
2031                CUR_ADR:   .SET   $   
2010                          .ORG   STRUC_TOP - 2   
2010   31 20                  DW   CUR_ADR   
2031                          .ORG   CUR_ADR   
2031                          ;*Macro unroll:  STRUC_POP
2031                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2031                STRUC_TOP:   .SET   STRUC_2   
2031                STRUC_2:   .SET   STRUC_3   
2031                STRUC_3:   .SET   STRUC_4   
2031                STRUC_4:   .SET   STRUC_5   
2031                STRUC_5:   .SET   STRUC_6   
2031                STRUC_6:   .SET   STRUC_7   
2031                STRUC_7:   .SET   STRUC_8   
2031                STRUC_8:   .SET   STRUC_9   
2031                STRUC_9:   .SET   STRUC_10   
2031                STRUC_10:   .SET   STRUC_11   
2031                STRUC_11:   .SET   STRUC_12   
2031                STRUC_12:   .SET   0   
2031                          ;*Macro unroll: INTERPRET
2031   CF                     RST   $08   
2032   3F 0B                  DW   interpret   
2034   77 0E                  DW   exit_forth   
2036                          ;*Macro unroll: TEST_SET_TEXT "100 const y"
2036   2A 45 30               LD   HL,(lineBufStart)   
2039   22 4B 30               LD   (lineBufTop),HL   
203C   22 49 30               LD   (currkey),HL   
203F   21 48 20               LD   HL,tst_textM_2267S9   
2042   22 61 32               LD   (char_pointer),HL   
2045                          ;*Macro unroll:  _skip
2045   C3 45 20               JP   $   
2048                          ;*Macro unroll:  STRUC_PUSH $
2048                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2048                STRUC_12:   .SET   STRUC_11   
2048                STRUC_11:   .SET   STRUC_10   
2048                STRUC_10:   .SET   STRUC_9   
2048                STRUC_9:   .SET   STRUC_8   
2048                STRUC_8:   .SET   STRUC_7   
2048                STRUC_7:   .SET   STRUC_6   
2048                STRUC_6:   .SET   STRUC_5   
2048                STRUC_5:   .SET   STRUC_4   
2048                STRUC_4:   .SET   STRUC_3   
2048                STRUC_3:   .SET   STRUC_2   
2048                STRUC_2:   .SET   STRUC_TOP   
2048                STRUC_TOP:   .SET   $   
2048                TST_TEXTM_2267S9:      
2048   31 30 30 20 63 6F 6E 73 74 20 79 0D 0A FF 0D 0A DB   "100 const y","\r\n",-1,"\r\n"   
2058                          ;*Macro unroll:  _endskip
2058                          ;*Macro unroll:  STRUC_FWD
2058                CUR_ADR:   .SET   $   
2046                          .ORG   STRUC_TOP - 2   
2046   58 20                  DW   CUR_ADR   
2058                          .ORG   CUR_ADR   
2058                          ;*Macro unroll:  STRUC_POP
2058                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2058                STRUC_TOP:   .SET   STRUC_2   
2058                STRUC_2:   .SET   STRUC_3   
2058                STRUC_3:   .SET   STRUC_4   
2058                STRUC_4:   .SET   STRUC_5   
2058                STRUC_5:   .SET   STRUC_6   
2058                STRUC_6:   .SET   STRUC_7   
2058                STRUC_7:   .SET   STRUC_8   
2058                STRUC_8:   .SET   STRUC_9   
2058                STRUC_9:   .SET   STRUC_10   
2058                STRUC_10:   .SET   STRUC_11   
2058                STRUC_11:   .SET   STRUC_12   
2058                STRUC_12:   .SET   0   
2058                          ;*Macro unroll: INTERPRET
2058   CF                     RST   $08   
2059   3F 0B                  DW   interpret   
205B   77 0E                  DW   exit_forth   
205D                          ;*Macro unroll: TEST_SET_TEXT "y"
205D   2A 45 30               LD   HL,(lineBufStart)   
2060   22 4B 30               LD   (lineBufTop),HL   
2063   22 49 30               LD   (currkey),HL   
2066   21 6F 20               LD   HL,tst_textM_2269S11   
2069   22 61 32               LD   (char_pointer),HL   
206C                          ;*Macro unroll:  _skip
206C   C3 6C 20               JP   $   
206F                          ;*Macro unroll:  STRUC_PUSH $
206F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
206F                STRUC_12:   .SET   STRUC_11   
206F                STRUC_11:   .SET   STRUC_10   
206F                STRUC_10:   .SET   STRUC_9   
206F                STRUC_9:   .SET   STRUC_8   
206F                STRUC_8:   .SET   STRUC_7   
206F                STRUC_7:   .SET   STRUC_6   
206F                STRUC_6:   .SET   STRUC_5   
206F                STRUC_5:   .SET   STRUC_4   
206F                STRUC_4:   .SET   STRUC_3   
206F                STRUC_3:   .SET   STRUC_2   
206F                STRUC_2:   .SET   STRUC_TOP   
206F                STRUC_TOP:   .SET   $   
206F                TST_TEXTM_2269S11:      
206F   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2075                          ;*Macro unroll:  _endskip
2075                          ;*Macro unroll:  STRUC_FWD
2075                CUR_ADR:   .SET   $   
206D                          .ORG   STRUC_TOP - 2   
206D   75 20                  DW   CUR_ADR   
2075                          .ORG   CUR_ADR   
2075                          ;*Macro unroll:  STRUC_POP
2075                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2075                STRUC_TOP:   .SET   STRUC_2   
2075                STRUC_2:   .SET   STRUC_3   
2075                STRUC_3:   .SET   STRUC_4   
2075                STRUC_4:   .SET   STRUC_5   
2075                STRUC_5:   .SET   STRUC_6   
2075                STRUC_6:   .SET   STRUC_7   
2075                STRUC_7:   .SET   STRUC_8   
2075                STRUC_8:   .SET   STRUC_9   
2075                STRUC_9:   .SET   STRUC_10   
2075                STRUC_10:   .SET   STRUC_11   
2075                STRUC_11:   .SET   STRUC_12   
2075                STRUC_12:   .SET   0   
2075                          ;*Macro unroll: INTERPRET
2075   CF                     RST   $08   
2076   3F 0B                  DW   interpret   
2078   77 0E                  DW   exit_forth   
207A                          ;*Macro unroll: EXPECT 100, "expect 100"
207A   CD 8E 09               CALL   printNum   
207D                          ;*Macro unroll:  loadWord H,L, B,C
207D   69                     LD   L,C   
207E   60                     LD   H,B   
207F   69                     LD   L,C   
2080                          ;*Macro unroll:  ppop0 B,C
2080   DD 2B                  DEC   IX   
2082   DD 46 00               LD   B,(IX+0)   
2085   DD 2B                  DEC   IX   
2087   DD 4E 00               LD   C,(IX+0)   
208A                          ;*Macro unroll:  CMP16 100
208A   11 64 00               LD   DE,100   
208D   B7                     OR   A   
208E   ED 52                  SBC   HL,DE   
2090                          ;*Macro unroll:  checkZeroWord H,L
2090   7D                     LD   A,L   
2091   B4                     OR   H   
2092   CA AD 20               JP   z,tf_doneM_2271S13   
2095   11 DB 0F               LD   DE,FAILED   
2098   CD 43 11               CALL   printPStr   
209B   11 A5 20               LD   DE,te_failM_2271S13   
209E   CD 43 11               CALL   printPStr   
20A1   76                     HALT      
20A2                          ;*Macro unroll:  _skip
20A2   C3 A2 20               JP   $   
20A5                          ;*Macro unroll:  STRUC_PUSH $
20A5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20A5                STRUC_12:   .SET   STRUC_11   
20A5                STRUC_11:   .SET   STRUC_10   
20A5                STRUC_10:   .SET   STRUC_9   
20A5                STRUC_9:   .SET   STRUC_8   
20A5                STRUC_8:   .SET   STRUC_7   
20A5                STRUC_7:   .SET   STRUC_6   
20A5                STRUC_6:   .SET   STRUC_5   
20A5                STRUC_5:   .SET   STRUC_4   
20A5                STRUC_4:   .SET   STRUC_3   
20A5                STRUC_3:   .SET   STRUC_2   
20A5                STRUC_2:   .SET   STRUC_TOP   
20A5                STRUC_TOP:   .SET   $   
20A5                TE_FAILM_2271S13:      
20A5   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
20AD                          ;*Macro unroll:  _endskip
20AD                          ;*Macro unroll:  STRUC_FWD
20AD                CUR_ADR:   .SET   $   
20A3                          .ORG   STRUC_TOP - 2   
20A3   AD 20                  DW   CUR_ADR   
20AD                          .ORG   CUR_ADR   
20AD                          ;*Macro unroll:  STRUC_POP
20AD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20AD                STRUC_TOP:   .SET   STRUC_2   
20AD                STRUC_2:   .SET   STRUC_3   
20AD                STRUC_3:   .SET   STRUC_4   
20AD                STRUC_4:   .SET   STRUC_5   
20AD                STRUC_5:   .SET   STRUC_6   
20AD                STRUC_6:   .SET   STRUC_7   
20AD                STRUC_7:   .SET   STRUC_8   
20AD                STRUC_8:   .SET   STRUC_9   
20AD                STRUC_9:   .SET   STRUC_10   
20AD                STRUC_10:   .SET   STRUC_11   
20AD                STRUC_11:   .SET   STRUC_12   
20AD                STRUC_12:   .SET   0   
20AD                TF_DONEM_2271S13:      
20AD                          ;*Macro unroll: TEST_SET_TEXT "100 constant y"
20AD   2A 45 30               LD   HL,(lineBufStart)   
20B0   22 4B 30               LD   (lineBufTop),HL   
20B3   22 49 30               LD   (currkey),HL   
20B6   21 BF 20               LD   HL,tst_textM_2272S15   
20B9   22 61 32               LD   (char_pointer),HL   
20BC                          ;*Macro unroll:  _skip
20BC   C3 BC 20               JP   $   
20BF                          ;*Macro unroll:  STRUC_PUSH $
20BF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20BF                STRUC_12:   .SET   STRUC_11   
20BF                STRUC_11:   .SET   STRUC_10   
20BF                STRUC_10:   .SET   STRUC_9   
20BF                STRUC_9:   .SET   STRUC_8   
20BF                STRUC_8:   .SET   STRUC_7   
20BF                STRUC_7:   .SET   STRUC_6   
20BF                STRUC_6:   .SET   STRUC_5   
20BF                STRUC_5:   .SET   STRUC_4   
20BF                STRUC_4:   .SET   STRUC_3   
20BF                STRUC_3:   .SET   STRUC_2   
20BF                STRUC_2:   .SET   STRUC_TOP   
20BF                STRUC_TOP:   .SET   $   
20BF                TST_TEXTM_2272S15:      
20BF   31 30 30 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "100 constant y","\r\n",-1,"\r\n"   
20D2                          ;*Macro unroll:  _endskip
20D2                          ;*Macro unroll:  STRUC_FWD
20D2                CUR_ADR:   .SET   $   
20BD                          .ORG   STRUC_TOP - 2   
20BD   D2 20                  DW   CUR_ADR   
20D2                          .ORG   CUR_ADR   
20D2                          ;*Macro unroll:  STRUC_POP
20D2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20D2                STRUC_TOP:   .SET   STRUC_2   
20D2                STRUC_2:   .SET   STRUC_3   
20D2                STRUC_3:   .SET   STRUC_4   
20D2                STRUC_4:   .SET   STRUC_5   
20D2                STRUC_5:   .SET   STRUC_6   
20D2                STRUC_6:   .SET   STRUC_7   
20D2                STRUC_7:   .SET   STRUC_8   
20D2                STRUC_8:   .SET   STRUC_9   
20D2                STRUC_9:   .SET   STRUC_10   
20D2                STRUC_10:   .SET   STRUC_11   
20D2                STRUC_11:   .SET   STRUC_12   
20D2                STRUC_12:   .SET   0   
20D2                          ;*Macro unroll: INTERPRET
20D2   CF                     RST   $08   
20D3   3F 0B                  DW   interpret   
20D5   77 0E                  DW   exit_forth   
20D7                          ;*Macro unroll: TEST_SET_TEXT "y"
20D7   2A 45 30               LD   HL,(lineBufStart)   
20DA   22 4B 30               LD   (lineBufTop),HL   
20DD   22 49 30               LD   (currkey),HL   
20E0   21 E9 20               LD   HL,tst_textM_2274S17   
20E3   22 61 32               LD   (char_pointer),HL   
20E6                          ;*Macro unroll:  _skip
20E6   C3 E6 20               JP   $   
20E9                          ;*Macro unroll:  STRUC_PUSH $
20E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20E9                STRUC_12:   .SET   STRUC_11   
20E9                STRUC_11:   .SET   STRUC_10   
20E9                STRUC_10:   .SET   STRUC_9   
20E9                STRUC_9:   .SET   STRUC_8   
20E9                STRUC_8:   .SET   STRUC_7   
20E9                STRUC_7:   .SET   STRUC_6   
20E9                STRUC_6:   .SET   STRUC_5   
20E9                STRUC_5:   .SET   STRUC_4   
20E9                STRUC_4:   .SET   STRUC_3   
20E9                STRUC_3:   .SET   STRUC_2   
20E9                STRUC_2:   .SET   STRUC_TOP   
20E9                STRUC_TOP:   .SET   $   
20E9                TST_TEXTM_2274S17:      
20E9   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
20EF                          ;*Macro unroll:  _endskip
20EF                          ;*Macro unroll:  STRUC_FWD
20EF                CUR_ADR:   .SET   $   
20E7                          .ORG   STRUC_TOP - 2   
20E7   EF 20                  DW   CUR_ADR   
20EF                          .ORG   CUR_ADR   
20EF                          ;*Macro unroll:  STRUC_POP
20EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20EF                STRUC_TOP:   .SET   STRUC_2   
20EF                STRUC_2:   .SET   STRUC_3   
20EF                STRUC_3:   .SET   STRUC_4   
20EF                STRUC_4:   .SET   STRUC_5   
20EF                STRUC_5:   .SET   STRUC_6   
20EF                STRUC_6:   .SET   STRUC_7   
20EF                STRUC_7:   .SET   STRUC_8   
20EF                STRUC_8:   .SET   STRUC_9   
20EF                STRUC_9:   .SET   STRUC_10   
20EF                STRUC_10:   .SET   STRUC_11   
20EF                STRUC_11:   .SET   STRUC_12   
20EF                STRUC_12:   .SET   0   
20EF                          ;*Macro unroll: INTERPRET
20EF   CF                     RST   $08   
20F0   3F 0B                  DW   interpret   
20F2   77 0E                  DW   exit_forth   
20F4                          ;*Macro unroll: EXPECT 100, "expect 100"
20F4   CD 8E 09               CALL   printNum   
20F7                          ;*Macro unroll:  loadWord H,L, B,C
20F7   69                     LD   L,C   
20F8   60                     LD   H,B   
20F9   69                     LD   L,C   
20FA                          ;*Macro unroll:  ppop0 B,C
20FA   DD 2B                  DEC   IX   
20FC   DD 46 00               LD   B,(IX+0)   
20FF   DD 2B                  DEC   IX   
2101   DD 4E 00               LD   C,(IX+0)   
2104                          ;*Macro unroll:  CMP16 100
2104   11 64 00               LD   DE,100   
2107   B7                     OR   A   
2108   ED 52                  SBC   HL,DE   
210A                          ;*Macro unroll:  checkZeroWord H,L
210A   7D                     LD   A,L   
210B   B4                     OR   H   
210C   CA 27 21               JP   z,tf_doneM_2276S19   
210F   11 DB 0F               LD   DE,FAILED   
2112   CD 43 11               CALL   printPStr   
2115   11 1F 21               LD   DE,te_failM_2276S19   
2118   CD 43 11               CALL   printPStr   
211B   76                     HALT      
211C                          ;*Macro unroll:  _skip
211C   C3 1C 21               JP   $   
211F                          ;*Macro unroll:  STRUC_PUSH $
211F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
211F                STRUC_12:   .SET   STRUC_11   
211F                STRUC_11:   .SET   STRUC_10   
211F                STRUC_10:   .SET   STRUC_9   
211F                STRUC_9:   .SET   STRUC_8   
211F                STRUC_8:   .SET   STRUC_7   
211F                STRUC_7:   .SET   STRUC_6   
211F                STRUC_6:   .SET   STRUC_5   
211F                STRUC_5:   .SET   STRUC_4   
211F                STRUC_4:   .SET   STRUC_3   
211F                STRUC_3:   .SET   STRUC_2   
211F                STRUC_2:   .SET   STRUC_TOP   
211F                STRUC_TOP:   .SET   $   
211F                TE_FAILM_2276S19:      
211F   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
2127                          ;*Macro unroll:  _endskip
2127                          ;*Macro unroll:  STRUC_FWD
2127                CUR_ADR:   .SET   $   
211D                          .ORG   STRUC_TOP - 2   
211D   27 21                  DW   CUR_ADR   
2127                          .ORG   CUR_ADR   
2127                          ;*Macro unroll:  STRUC_POP
2127                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2127                STRUC_TOP:   .SET   STRUC_2   
2127                STRUC_2:   .SET   STRUC_3   
2127                STRUC_3:   .SET   STRUC_4   
2127                STRUC_4:   .SET   STRUC_5   
2127                STRUC_5:   .SET   STRUC_6   
2127                STRUC_6:   .SET   STRUC_7   
2127                STRUC_7:   .SET   STRUC_8   
2127                STRUC_8:   .SET   STRUC_9   
2127                STRUC_9:   .SET   STRUC_10   
2127                STRUC_10:   .SET   STRUC_11   
2127                STRUC_11:   .SET   STRUC_12   
2127                STRUC_12:   .SET   0   
2127                TF_DONEM_2276S19:      
2127                          ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
2127   2A 45 30               LD   HL,(lineBufStart)   
212A   22 4B 30               LD   (lineBufTop),HL   
212D   22 49 30               LD   (currkey),HL   
2130   21 39 21               LD   HL,tst_textM_2277S21   
2133   22 61 32               LD   (char_pointer),HL   
2136                          ;*Macro unroll:  _skip
2136   C3 36 21               JP   $   
2139                          ;*Macro unroll:  STRUC_PUSH $
2139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2139                STRUC_12:   .SET   STRUC_11   
2139                STRUC_11:   .SET   STRUC_10   
2139                STRUC_10:   .SET   STRUC_9   
2139                STRUC_9:   .SET   STRUC_8   
2139                STRUC_8:   .SET   STRUC_7   
2139                STRUC_7:   .SET   STRUC_6   
2139                STRUC_6:   .SET   STRUC_5   
2139                STRUC_5:   .SET   STRUC_4   
2139                STRUC_4:   .SET   STRUC_3   
2139                STRUC_3:   .SET   STRUC_2   
2139                STRUC_2:   .SET   STRUC_TOP   
2139                STRUC_TOP:   .SET   $   
2139                TST_TEXTM_2277S21:      
2139   3A 20 78 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 31 20 2E 20 3B 0D 0A FF 0D 0A DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
2154                          ;*Macro unroll:  _endskip
2154                          ;*Macro unroll:  STRUC_FWD
2154                CUR_ADR:   .SET   $   
2137                          .ORG   STRUC_TOP - 2   
2137   54 21                  DW   CUR_ADR   
2154                          .ORG   CUR_ADR   
2154                          ;*Macro unroll:  STRUC_POP
2154                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2154                STRUC_TOP:   .SET   STRUC_2   
2154                STRUC_2:   .SET   STRUC_3   
2154                STRUC_3:   .SET   STRUC_4   
2154                STRUC_4:   .SET   STRUC_5   
2154                STRUC_5:   .SET   STRUC_6   
2154                STRUC_6:   .SET   STRUC_7   
2154                STRUC_7:   .SET   STRUC_8   
2154                STRUC_8:   .SET   STRUC_9   
2154                STRUC_9:   .SET   STRUC_10   
2154                STRUC_10:   .SET   STRUC_11   
2154                STRUC_11:   .SET   STRUC_12   
2154                STRUC_12:   .SET   0   
2154                          ;*Macro unroll: INTERPRET
2154   CF                     RST   $08   
2155   3F 0B                  DW   interpret   
2157   77 0E                  DW   exit_forth   
2159                          ;*Macro unroll: TEST_SET_TEXT "x y"
2159   2A 45 30               LD   HL,(lineBufStart)   
215C   22 4B 30               LD   (lineBufTop),HL   
215F   22 49 30               LD   (currkey),HL   
2162   21 6B 21               LD   HL,tst_textM_2279S23   
2165   22 61 32               LD   (char_pointer),HL   
2168                          ;*Macro unroll:  _skip
2168   C3 68 21               JP   $   
216B                          ;*Macro unroll:  STRUC_PUSH $
216B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
216B                STRUC_12:   .SET   STRUC_11   
216B                STRUC_11:   .SET   STRUC_10   
216B                STRUC_10:   .SET   STRUC_9   
216B                STRUC_9:   .SET   STRUC_8   
216B                STRUC_8:   .SET   STRUC_7   
216B                STRUC_7:   .SET   STRUC_6   
216B                STRUC_6:   .SET   STRUC_5   
216B                STRUC_5:   .SET   STRUC_4   
216B                STRUC_4:   .SET   STRUC_3   
216B                STRUC_3:   .SET   STRUC_2   
216B                STRUC_2:   .SET   STRUC_TOP   
216B                STRUC_TOP:   .SET   $   
216B                TST_TEXTM_2279S23:      
216B   78 20 79 0D 0A FF 0D 0A DB   "x y","\r\n",-1,"\r\n"   
2173                          ;*Macro unroll:  _endskip
2173                          ;*Macro unroll:  STRUC_FWD
2173                CUR_ADR:   .SET   $   
2169                          .ORG   STRUC_TOP - 2   
2169   73 21                  DW   CUR_ADR   
2173                          .ORG   CUR_ADR   
2173                          ;*Macro unroll:  STRUC_POP
2173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2173                STRUC_TOP:   .SET   STRUC_2   
2173                STRUC_2:   .SET   STRUC_3   
2173                STRUC_3:   .SET   STRUC_4   
2173                STRUC_4:   .SET   STRUC_5   
2173                STRUC_5:   .SET   STRUC_6   
2173                STRUC_6:   .SET   STRUC_7   
2173                STRUC_7:   .SET   STRUC_8   
2173                STRUC_8:   .SET   STRUC_9   
2173                STRUC_9:   .SET   STRUC_10   
2173                STRUC_10:   .SET   STRUC_11   
2173                STRUC_11:   .SET   STRUC_12   
2173                STRUC_12:   .SET   0   
2173                          ;*Macro unroll: INTERPRET
2173   CF                     RST   $08   
2174   3F 0B                  DW   interpret   
2176   77 0E                  DW   exit_forth   
2178                          ;*Macro unroll: TEST_SET_TEXT "y"
2178   2A 45 30               LD   HL,(lineBufStart)   
217B   22 4B 30               LD   (lineBufTop),HL   
217E   22 49 30               LD   (currkey),HL   
2181   21 8A 21               LD   HL,tst_textM_2281S25   
2184   22 61 32               LD   (char_pointer),HL   
2187                          ;*Macro unroll:  _skip
2187   C3 87 21               JP   $   
218A                          ;*Macro unroll:  STRUC_PUSH $
218A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
218A                STRUC_12:   .SET   STRUC_11   
218A                STRUC_11:   .SET   STRUC_10   
218A                STRUC_10:   .SET   STRUC_9   
218A                STRUC_9:   .SET   STRUC_8   
218A                STRUC_8:   .SET   STRUC_7   
218A                STRUC_7:   .SET   STRUC_6   
218A                STRUC_6:   .SET   STRUC_5   
218A                STRUC_5:   .SET   STRUC_4   
218A                STRUC_4:   .SET   STRUC_3   
218A                STRUC_3:   .SET   STRUC_2   
218A                STRUC_2:   .SET   STRUC_TOP   
218A                STRUC_TOP:   .SET   $   
218A                TST_TEXTM_2281S25:      
218A   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2190                          ;*Macro unroll:  _endskip
2190                          ;*Macro unroll:  STRUC_FWD
2190                CUR_ADR:   .SET   $   
2188                          .ORG   STRUC_TOP - 2   
2188   90 21                  DW   CUR_ADR   
2190                          .ORG   CUR_ADR   
2190                          ;*Macro unroll:  STRUC_POP
2190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2190                STRUC_TOP:   .SET   STRUC_2   
2190                STRUC_2:   .SET   STRUC_3   
2190                STRUC_3:   .SET   STRUC_4   
2190                STRUC_4:   .SET   STRUC_5   
2190                STRUC_5:   .SET   STRUC_6   
2190                STRUC_6:   .SET   STRUC_7   
2190                STRUC_7:   .SET   STRUC_8   
2190                STRUC_8:   .SET   STRUC_9   
2190                STRUC_9:   .SET   STRUC_10   
2190                STRUC_10:   .SET   STRUC_11   
2190                STRUC_11:   .SET   STRUC_12   
2190                STRUC_12:   .SET   0   
2190                          ;*Macro unroll: INTERPRET
2190   CF                     RST   $08   
2191   3F 0B                  DW   interpret   
2193   77 0E                  DW   exit_forth   
2195                          ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
2195   2A 45 30               LD   HL,(lineBufStart)   
2198   22 4B 30               LD   (lineBufTop),HL   
219B   22 49 30               LD   (currkey),HL   
219E   21 A7 21               LD   HL,tst_textM_2283S28   
21A1   22 61 32               LD   (char_pointer),HL   
21A4                          ;*Macro unroll:  _skip
21A4   C3 A4 21               JP   $   
21A7                          ;*Macro unroll:  STRUC_PUSH $
21A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21A7                STRUC_12:   .SET   STRUC_11   
21A7                STRUC_11:   .SET   STRUC_10   
21A7                STRUC_10:   .SET   STRUC_9   
21A7                STRUC_9:   .SET   STRUC_8   
21A7                STRUC_8:   .SET   STRUC_7   
21A7                STRUC_7:   .SET   STRUC_6   
21A7                STRUC_6:   .SET   STRUC_5   
21A7                STRUC_5:   .SET   STRUC_4   
21A7                STRUC_4:   .SET   STRUC_3   
21A7                STRUC_3:   .SET   STRUC_2   
21A7                STRUC_2:   .SET   STRUC_TOP   
21A7                STRUC_TOP:   .SET   $   
21A7                TST_TEXTM_2283S28:      
21A7   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 2C 20 3B 0D 0A FF 0D 0A DB   ": const create does> , ;","\r\n",-1,"\r\n"   
21C4                          ;*Macro unroll:  _endskip
21C4                          ;*Macro unroll:  STRUC_FWD
21C4                CUR_ADR:   .SET   $   
21A5                          .ORG   STRUC_TOP - 2   
21A5   C4 21                  DW   CUR_ADR   
21C4                          .ORG   CUR_ADR   
21C4                          ;*Macro unroll:  STRUC_POP
21C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21C4                STRUC_TOP:   .SET   STRUC_2   
21C4                STRUC_2:   .SET   STRUC_3   
21C4                STRUC_3:   .SET   STRUC_4   
21C4                STRUC_4:   .SET   STRUC_5   
21C4                STRUC_5:   .SET   STRUC_6   
21C4                STRUC_6:   .SET   STRUC_7   
21C4                STRUC_7:   .SET   STRUC_8   
21C4                STRUC_8:   .SET   STRUC_9   
21C4                STRUC_9:   .SET   STRUC_10   
21C4                STRUC_10:   .SET   STRUC_11   
21C4                STRUC_11:   .SET   STRUC_12   
21C4                STRUC_12:   .SET   0   
21C4                          ;*Macro unroll: INTERPRET
21C4   CF                     RST   $08   
21C5   3F 0B                  DW   interpret   
21C7   77 0E                  DW   exit_forth   
21C9                          ;*Macro unroll: TEST_SET_TEXT "23 const x"
21C9   2A 45 30               LD   HL,(lineBufStart)   
21CC   22 4B 30               LD   (lineBufTop),HL   
21CF   22 49 30               LD   (currkey),HL   
21D2   21 DB 21               LD   HL,tst_textM_2285S30   
21D5   22 61 32               LD   (char_pointer),HL   
21D8                          ;*Macro unroll:  _skip
21D8   C3 D8 21               JP   $   
21DB                          ;*Macro unroll:  STRUC_PUSH $
21DB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21DB                STRUC_12:   .SET   STRUC_11   
21DB                STRUC_11:   .SET   STRUC_10   
21DB                STRUC_10:   .SET   STRUC_9   
21DB                STRUC_9:   .SET   STRUC_8   
21DB                STRUC_8:   .SET   STRUC_7   
21DB                STRUC_7:   .SET   STRUC_6   
21DB                STRUC_6:   .SET   STRUC_5   
21DB                STRUC_5:   .SET   STRUC_4   
21DB                STRUC_4:   .SET   STRUC_3   
21DB                STRUC_3:   .SET   STRUC_2   
21DB                STRUC_2:   .SET   STRUC_TOP   
21DB                STRUC_TOP:   .SET   $   
21DB                TST_TEXTM_2285S30:      
21DB   32 33 20 63 6F 6E 73 74 20 78 0D 0A FF 0D 0A DB   "23 const x","\r\n",-1,"\r\n"   
21EA                          ;*Macro unroll:  _endskip
21EA                          ;*Macro unroll:  STRUC_FWD
21EA                CUR_ADR:   .SET   $   
21D9                          .ORG   STRUC_TOP - 2   
21D9   EA 21                  DW   CUR_ADR   
21EA                          .ORG   CUR_ADR   
21EA                          ;*Macro unroll:  STRUC_POP
21EA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21EA                STRUC_TOP:   .SET   STRUC_2   
21EA                STRUC_2:   .SET   STRUC_3   
21EA                STRUC_3:   .SET   STRUC_4   
21EA                STRUC_4:   .SET   STRUC_5   
21EA                STRUC_5:   .SET   STRUC_6   
21EA                STRUC_6:   .SET   STRUC_7   
21EA                STRUC_7:   .SET   STRUC_8   
21EA                STRUC_8:   .SET   STRUC_9   
21EA                STRUC_9:   .SET   STRUC_10   
21EA                STRUC_10:   .SET   STRUC_11   
21EA                STRUC_11:   .SET   STRUC_12   
21EA                STRUC_12:   .SET   0   
21EA                          ;*Macro unroll: INTERPRET
21EA   CF                     RST   $08   
21EB   3F 0B                  DW   interpret   
21ED   77 0E                  DW   exit_forth   
21EF                          ;*Macro unroll: TEST_SET_TEXT "x ."
21EF   2A 45 30               LD   HL,(lineBufStart)   
21F2   22 4B 30               LD   (lineBufTop),HL   
21F5   22 49 30               LD   (currkey),HL   
21F8   21 01 22               LD   HL,tst_textM_2287S32   
21FB   22 61 32               LD   (char_pointer),HL   
21FE                          ;*Macro unroll:  _skip
21FE   C3 FE 21               JP   $   
2201                          ;*Macro unroll:  STRUC_PUSH $
2201                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2201                STRUC_12:   .SET   STRUC_11   
2201                STRUC_11:   .SET   STRUC_10   
2201                STRUC_10:   .SET   STRUC_9   
2201                STRUC_9:   .SET   STRUC_8   
2201                STRUC_8:   .SET   STRUC_7   
2201                STRUC_7:   .SET   STRUC_6   
2201                STRUC_6:   .SET   STRUC_5   
2201                STRUC_5:   .SET   STRUC_4   
2201                STRUC_4:   .SET   STRUC_3   
2201                STRUC_3:   .SET   STRUC_2   
2201                STRUC_2:   .SET   STRUC_TOP   
2201                STRUC_TOP:   .SET   $   
2201                TST_TEXTM_2287S32:      
2201   78 20 2E 0D 0A FF 0D 0A DB   "x .","\r\n",-1,"\r\n"   
2209                          ;*Macro unroll:  _endskip
2209                          ;*Macro unroll:  STRUC_FWD
2209                CUR_ADR:   .SET   $   
21FF                          .ORG   STRUC_TOP - 2   
21FF   09 22                  DW   CUR_ADR   
2209                          .ORG   CUR_ADR   
2209                          ;*Macro unroll:  STRUC_POP
2209                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2209                STRUC_TOP:   .SET   STRUC_2   
2209                STRUC_2:   .SET   STRUC_3   
2209                STRUC_3:   .SET   STRUC_4   
2209                STRUC_4:   .SET   STRUC_5   
2209                STRUC_5:   .SET   STRUC_6   
2209                STRUC_6:   .SET   STRUC_7   
2209                STRUC_7:   .SET   STRUC_8   
2209                STRUC_8:   .SET   STRUC_9   
2209                STRUC_9:   .SET   STRUC_10   
2209                STRUC_10:   .SET   STRUC_11   
2209                STRUC_11:   .SET   STRUC_12   
2209                STRUC_12:   .SET   0   
2209                          ;*Macro unroll: INTERPRET
2209   CF                     RST   $08   
220A   3F 0B                  DW   interpret   
220C   77 0E                  DW   exit_forth   
220E                          ;*Macro unroll: TEST_SET_TEXT "23 constant y"
220E   2A 45 30               LD   HL,(lineBufStart)   
2211   22 4B 30               LD   (lineBufTop),HL   
2214   22 49 30               LD   (currkey),HL   
2217   21 20 22               LD   HL,tst_textM_2289S35   
221A   22 61 32               LD   (char_pointer),HL   
221D                          ;*Macro unroll:  _skip
221D   C3 1D 22               JP   $   
2220                          ;*Macro unroll:  STRUC_PUSH $
2220                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2220                STRUC_12:   .SET   STRUC_11   
2220                STRUC_11:   .SET   STRUC_10   
2220                STRUC_10:   .SET   STRUC_9   
2220                STRUC_9:   .SET   STRUC_8   
2220                STRUC_8:   .SET   STRUC_7   
2220                STRUC_7:   .SET   STRUC_6   
2220                STRUC_6:   .SET   STRUC_5   
2220                STRUC_5:   .SET   STRUC_4   
2220                STRUC_4:   .SET   STRUC_3   
2220                STRUC_3:   .SET   STRUC_2   
2220                STRUC_2:   .SET   STRUC_TOP   
2220                STRUC_TOP:   .SET   $   
2220                TST_TEXTM_2289S35:      
2220   32 33 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "23 constant y","\r\n",-1,"\r\n"   
2232                          ;*Macro unroll:  _endskip
2232                          ;*Macro unroll:  STRUC_FWD
2232                CUR_ADR:   .SET   $   
221E                          .ORG   STRUC_TOP - 2   
221E   32 22                  DW   CUR_ADR   
2232                          .ORG   CUR_ADR   
2232                          ;*Macro unroll:  STRUC_POP
2232                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2232                STRUC_TOP:   .SET   STRUC_2   
2232                STRUC_2:   .SET   STRUC_3   
2232                STRUC_3:   .SET   STRUC_4   
2232                STRUC_4:   .SET   STRUC_5   
2232                STRUC_5:   .SET   STRUC_6   
2232                STRUC_6:   .SET   STRUC_7   
2232                STRUC_7:   .SET   STRUC_8   
2232                STRUC_8:   .SET   STRUC_9   
2232                STRUC_9:   .SET   STRUC_10   
2232                STRUC_10:   .SET   STRUC_11   
2232                STRUC_11:   .SET   STRUC_12   
2232                STRUC_12:   .SET   0   
2232                          ;*Macro unroll: INTERPRET
2232   CF                     RST   $08   
2233   3F 0B                  DW   interpret   
2235   77 0E                  DW   exit_forth   
2237                          ;*Macro unroll: TEST_SET_TEXT "y"
2237   2A 45 30               LD   HL,(lineBufStart)   
223A   22 4B 30               LD   (lineBufTop),HL   
223D   22 49 30               LD   (currkey),HL   
2240   21 49 22               LD   HL,tst_textM_2291S37   
2243   22 61 32               LD   (char_pointer),HL   
2246                          ;*Macro unroll:  _skip
2246   C3 46 22               JP   $   
2249                          ;*Macro unroll:  STRUC_PUSH $
2249                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2249                STRUC_12:   .SET   STRUC_11   
2249                STRUC_11:   .SET   STRUC_10   
2249                STRUC_10:   .SET   STRUC_9   
2249                STRUC_9:   .SET   STRUC_8   
2249                STRUC_8:   .SET   STRUC_7   
2249                STRUC_7:   .SET   STRUC_6   
2249                STRUC_6:   .SET   STRUC_5   
2249                STRUC_5:   .SET   STRUC_4   
2249                STRUC_4:   .SET   STRUC_3   
2249                STRUC_3:   .SET   STRUC_2   
2249                STRUC_2:   .SET   STRUC_TOP   
2249                STRUC_TOP:   .SET   $   
2249                TST_TEXTM_2291S37:      
2249   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
224F                          ;*Macro unroll:  _endskip
224F                          ;*Macro unroll:  STRUC_FWD
224F                CUR_ADR:   .SET   $   
2247                          .ORG   STRUC_TOP - 2   
2247   4F 22                  DW   CUR_ADR   
224F                          .ORG   CUR_ADR   
224F                          ;*Macro unroll:  STRUC_POP
224F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
224F                STRUC_TOP:   .SET   STRUC_2   
224F                STRUC_2:   .SET   STRUC_3   
224F                STRUC_3:   .SET   STRUC_4   
224F                STRUC_4:   .SET   STRUC_5   
224F                STRUC_5:   .SET   STRUC_6   
224F                STRUC_6:   .SET   STRUC_7   
224F                STRUC_7:   .SET   STRUC_8   
224F                STRUC_8:   .SET   STRUC_9   
224F                STRUC_9:   .SET   STRUC_10   
224F                STRUC_10:   .SET   STRUC_11   
224F                STRUC_11:   .SET   STRUC_12   
224F                STRUC_12:   .SET   0   
224F                          ;*Macro unroll: INTERPRET
224F   CF                     RST   $08   
2250   3F 0B                  DW   interpret   
2252   77 0E                  DW   exit_forth   
2254                          ;*Macro unroll: EXPECT 23, "expect 23"
2254   CD 8E 09               CALL   printNum   
2257                          ;*Macro unroll:  loadWord H,L, B,C
2257   69                     LD   L,C   
2258   60                     LD   H,B   
2259   69                     LD   L,C   
225A                          ;*Macro unroll:  ppop0 B,C
225A   DD 2B                  DEC   IX   
225C   DD 46 00               LD   B,(IX+0)   
225F   DD 2B                  DEC   IX   
2261   DD 4E 00               LD   C,(IX+0)   
2264                          ;*Macro unroll:  CMP16 23
2264   11 17 00               LD   DE,23   
2267   B7                     OR   A   
2268   ED 52                  SBC   HL,DE   
226A                          ;*Macro unroll:  checkZeroWord H,L
226A   7D                     LD   A,L   
226B   B4                     OR   H   
226C   CA 85 22               JP   z,tf_doneM_2293S39   
226F   11 DB 0F               LD   DE,FAILED   
2272   CD 43 11               CALL   printPStr   
2275   11 7F 22               LD   DE,te_failM_2293S39   
2278   CD 43 11               CALL   printPStr   
227B   76                     HALT      
227C                          ;*Macro unroll:  _skip
227C   C3 7C 22               JP   $   
227F                          ;*Macro unroll:  STRUC_PUSH $
227F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
227F                STRUC_12:   .SET   STRUC_11   
227F                STRUC_11:   .SET   STRUC_10   
227F                STRUC_10:   .SET   STRUC_9   
227F                STRUC_9:   .SET   STRUC_8   
227F                STRUC_8:   .SET   STRUC_7   
227F                STRUC_7:   .SET   STRUC_6   
227F                STRUC_6:   .SET   STRUC_5   
227F                STRUC_5:   .SET   STRUC_4   
227F                STRUC_4:   .SET   STRUC_3   
227F                STRUC_3:   .SET   STRUC_2   
227F                STRUC_2:   .SET   STRUC_TOP   
227F                STRUC_TOP:   .SET   $   
227F                TE_FAILM_2293S39:      
227F   05 32 33 20 32 33      .PSTR   "23 23"   
2285                          ;*Macro unroll:  _endskip
2285                          ;*Macro unroll:  STRUC_FWD
2285                CUR_ADR:   .SET   $   
227D                          .ORG   STRUC_TOP - 2   
227D   85 22                  DW   CUR_ADR   
2285                          .ORG   CUR_ADR   
2285                          ;*Macro unroll:  STRUC_POP
2285                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2285                STRUC_TOP:   .SET   STRUC_2   
2285                STRUC_2:   .SET   STRUC_3   
2285                STRUC_3:   .SET   STRUC_4   
2285                STRUC_4:   .SET   STRUC_5   
2285                STRUC_5:   .SET   STRUC_6   
2285                STRUC_6:   .SET   STRUC_7   
2285                STRUC_7:   .SET   STRUC_8   
2285                STRUC_8:   .SET   STRUC_9   
2285                STRUC_9:   .SET   STRUC_10   
2285                STRUC_10:   .SET   STRUC_11   
2285                STRUC_11:   .SET   STRUC_12   
2285                STRUC_12:   .SET   0   
2285                TF_DONEM_2293S39:      
2285                          ;*Macro unroll: ppushValue 1
2285                          ;*Macro unroll:  ppush0 B,C
2285   DD 71 00               LD   (IX+0),C   
2288   DD 23                  INC   IX   
228A   DD 70 00               LD   (IX+0),B   
228D   DD 23                  INC   IX   
228F   01 01 00               LD   BC,1   
2292                          ;*Macro unroll: TEST_SET_TEXT "dup"
2292   2A 45 30               LD   HL,(lineBufStart)   
2295   22 4B 30               LD   (lineBufTop),HL   
2298   22 49 30               LD   (currkey),HL   
229B   21 A4 22               LD   HL,tst_textM_2295S42   
229E   22 61 32               LD   (char_pointer),HL   
22A1                          ;*Macro unroll:  _skip
22A1   C3 A1 22               JP   $   
22A4                          ;*Macro unroll:  STRUC_PUSH $
22A4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22A4                STRUC_12:   .SET   STRUC_11   
22A4                STRUC_11:   .SET   STRUC_10   
22A4                STRUC_10:   .SET   STRUC_9   
22A4                STRUC_9:   .SET   STRUC_8   
22A4                STRUC_8:   .SET   STRUC_7   
22A4                STRUC_7:   .SET   STRUC_6   
22A4                STRUC_6:   .SET   STRUC_5   
22A4                STRUC_5:   .SET   STRUC_4   
22A4                STRUC_4:   .SET   STRUC_3   
22A4                STRUC_3:   .SET   STRUC_2   
22A4                STRUC_2:   .SET   STRUC_TOP   
22A4                STRUC_TOP:   .SET   $   
22A4                TST_TEXTM_2295S42:      
22A4   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
22AC                          ;*Macro unroll:  _endskip
22AC                          ;*Macro unroll:  STRUC_FWD
22AC                CUR_ADR:   .SET   $   
22A2                          .ORG   STRUC_TOP - 2   
22A2   AC 22                  DW   CUR_ADR   
22AC                          .ORG   CUR_ADR   
22AC                          ;*Macro unroll:  STRUC_POP
22AC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22AC                STRUC_TOP:   .SET   STRUC_2   
22AC                STRUC_2:   .SET   STRUC_3   
22AC                STRUC_3:   .SET   STRUC_4   
22AC                STRUC_4:   .SET   STRUC_5   
22AC                STRUC_5:   .SET   STRUC_6   
22AC                STRUC_6:   .SET   STRUC_7   
22AC                STRUC_7:   .SET   STRUC_8   
22AC                STRUC_8:   .SET   STRUC_9   
22AC                STRUC_9:   .SET   STRUC_10   
22AC                STRUC_10:   .SET   STRUC_11   
22AC                STRUC_11:   .SET   STRUC_12   
22AC                STRUC_12:   .SET   0   
22AC                          ;*Macro unroll: INTERPRET
22AC   CF                     RST   $08   
22AD   3F 0B                  DW   interpret   
22AF   77 0E                  DW   exit_forth   
22B1                          ;*Macro unroll: EXPECT 1, "1 interpret dup"
22B1   CD 8E 09               CALL   printNum   
22B4                          ;*Macro unroll:  loadWord H,L, B,C
22B4   69                     LD   L,C   
22B5   60                     LD   H,B   
22B6   69                     LD   L,C   
22B7                          ;*Macro unroll:  ppop0 B,C
22B7   DD 2B                  DEC   IX   
22B9   DD 46 00               LD   B,(IX+0)   
22BC   DD 2B                  DEC   IX   
22BE   DD 4E 00               LD   C,(IX+0)   
22C1                          ;*Macro unroll:  CMP16 1
22C1   11 01 00               LD   DE,1   
22C4   B7                     OR   A   
22C5   ED 52                  SBC   HL,DE   
22C7                          ;*Macro unroll:  checkZeroWord H,L
22C7   7D                     LD   A,L   
22C8   B4                     OR   H   
22C9   CA EC 22               JP   z,tf_doneM_2297S44   
22CC   11 DB 0F               LD   DE,FAILED   
22CF   CD 43 11               CALL   printPStr   
22D2   11 DC 22               LD   DE,te_failM_2297S44   
22D5   CD 43 11               CALL   printPStr   
22D8   76                     HALT      
22D9                          ;*Macro unroll:  _skip
22D9   C3 D9 22               JP   $   
22DC                          ;*Macro unroll:  STRUC_PUSH $
22DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22DC                STRUC_12:   .SET   STRUC_11   
22DC                STRUC_11:   .SET   STRUC_10   
22DC                STRUC_10:   .SET   STRUC_9   
22DC                STRUC_9:   .SET   STRUC_8   
22DC                STRUC_8:   .SET   STRUC_7   
22DC                STRUC_7:   .SET   STRUC_6   
22DC                STRUC_6:   .SET   STRUC_5   
22DC                STRUC_5:   .SET   STRUC_4   
22DC                STRUC_4:   .SET   STRUC_3   
22DC                STRUC_3:   .SET   STRUC_2   
22DC                STRUC_2:   .SET   STRUC_TOP   
22DC                STRUC_TOP:   .SET   $   
22DC                TE_FAILM_2297S44:      
22DC   0F 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 .PSTR   "1 interpret dup"   
22EC                          ;*Macro unroll:  _endskip
22EC                          ;*Macro unroll:  STRUC_FWD
22EC                CUR_ADR:   .SET   $   
22DA                          .ORG   STRUC_TOP - 2   
22DA   EC 22                  DW   CUR_ADR   
22EC                          .ORG   CUR_ADR   
22EC                          ;*Macro unroll:  STRUC_POP
22EC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22EC                STRUC_TOP:   .SET   STRUC_2   
22EC                STRUC_2:   .SET   STRUC_3   
22EC                STRUC_3:   .SET   STRUC_4   
22EC                STRUC_4:   .SET   STRUC_5   
22EC                STRUC_5:   .SET   STRUC_6   
22EC                STRUC_6:   .SET   STRUC_7   
22EC                STRUC_7:   .SET   STRUC_8   
22EC                STRUC_8:   .SET   STRUC_9   
22EC                STRUC_9:   .SET   STRUC_10   
22EC                STRUC_10:   .SET   STRUC_11   
22EC                STRUC_11:   .SET   STRUC_12   
22EC                STRUC_12:   .SET   0   
22EC                TF_DONEM_2297S44:      
22EC                          ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
22EC   CD 8E 09               CALL   printNum   
22EF                          ;*Macro unroll:  loadWord H,L, B,C
22EF   69                     LD   L,C   
22F0   60                     LD   H,B   
22F1   69                     LD   L,C   
22F2                          ;*Macro unroll:  ppop0 B,C
22F2   DD 2B                  DEC   IX   
22F4   DD 46 00               LD   B,(IX+0)   
22F7   DD 2B                  DEC   IX   
22F9   DD 4E 00               LD   C,(IX+0)   
22FC                          ;*Macro unroll:  CMP16 1
22FC   11 01 00               LD   DE,1   
22FF   B7                     OR   A   
2300   ED 52                  SBC   HL,DE   
2302                          ;*Macro unroll:  checkZeroWord H,L
2302   7D                     LD   A,L   
2303   B4                     OR   H   
2304   CA 29 23               JP   z,tf_doneM_2298S45   
2307   11 DB 0F               LD   DE,FAILED   
230A   CD 43 11               CALL   printPStr   
230D   11 17 23               LD   DE,te_failM_2298S45   
2310   CD 43 11               CALL   printPStr   
2313   76                     HALT      
2314                          ;*Macro unroll:  _skip
2314   C3 14 23               JP   $   
2317                          ;*Macro unroll:  STRUC_PUSH $
2317                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2317                STRUC_12:   .SET   STRUC_11   
2317                STRUC_11:   .SET   STRUC_10   
2317                STRUC_10:   .SET   STRUC_9   
2317                STRUC_9:   .SET   STRUC_8   
2317                STRUC_8:   .SET   STRUC_7   
2317                STRUC_7:   .SET   STRUC_6   
2317                STRUC_6:   .SET   STRUC_5   
2317                STRUC_5:   .SET   STRUC_4   
2317                STRUC_4:   .SET   STRUC_3   
2317                STRUC_3:   .SET   STRUC_2   
2317                STRUC_2:   .SET   STRUC_TOP   
2317                STRUC_TOP:   .SET   $   
2317                TE_FAILM_2298S45:      
2317   11 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 20 32 .PSTR   "1 interpret dup 2"   
2329                          ;*Macro unroll:  _endskip
2329                          ;*Macro unroll:  STRUC_FWD
2329                CUR_ADR:   .SET   $   
2315                          .ORG   STRUC_TOP - 2   
2315   29 23                  DW   CUR_ADR   
2329                          .ORG   CUR_ADR   
2329                          ;*Macro unroll:  STRUC_POP
2329                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2329                STRUC_TOP:   .SET   STRUC_2   
2329                STRUC_2:   .SET   STRUC_3   
2329                STRUC_3:   .SET   STRUC_4   
2329                STRUC_4:   .SET   STRUC_5   
2329                STRUC_5:   .SET   STRUC_6   
2329                STRUC_6:   .SET   STRUC_7   
2329                STRUC_7:   .SET   STRUC_8   
2329                STRUC_8:   .SET   STRUC_9   
2329                STRUC_9:   .SET   STRUC_10   
2329                STRUC_10:   .SET   STRUC_11   
2329                STRUC_11:   .SET   STRUC_12   
2329                STRUC_12:   .SET   0   
2329                TF_DONEM_2298S45:      
2329                          ;*Macro unroll: TEST_SET_TEXT "123"
2329   2A 45 30               LD   HL,(lineBufStart)   
232C   22 4B 30               LD   (lineBufTop),HL   
232F   22 49 30               LD   (currkey),HL   
2332   21 3B 23               LD   HL,tst_textM_2299S47   
2335   22 61 32               LD   (char_pointer),HL   
2338                          ;*Macro unroll:  _skip
2338   C3 38 23               JP   $   
233B                          ;*Macro unroll:  STRUC_PUSH $
233B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
233B                STRUC_12:   .SET   STRUC_11   
233B                STRUC_11:   .SET   STRUC_10   
233B                STRUC_10:   .SET   STRUC_9   
233B                STRUC_9:   .SET   STRUC_8   
233B                STRUC_8:   .SET   STRUC_7   
233B                STRUC_7:   .SET   STRUC_6   
233B                STRUC_6:   .SET   STRUC_5   
233B                STRUC_5:   .SET   STRUC_4   
233B                STRUC_4:   .SET   STRUC_3   
233B                STRUC_3:   .SET   STRUC_2   
233B                STRUC_2:   .SET   STRUC_TOP   
233B                STRUC_TOP:   .SET   $   
233B                TST_TEXTM_2299S47:      
233B   31 32 33 0D 0A FF 0D 0A DB   "123","\r\n",-1,"\r\n"   
2343                          ;*Macro unroll:  _endskip
2343                          ;*Macro unroll:  STRUC_FWD
2343                CUR_ADR:   .SET   $   
2339                          .ORG   STRUC_TOP - 2   
2339   43 23                  DW   CUR_ADR   
2343                          .ORG   CUR_ADR   
2343                          ;*Macro unroll:  STRUC_POP
2343                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2343                STRUC_TOP:   .SET   STRUC_2   
2343                STRUC_2:   .SET   STRUC_3   
2343                STRUC_3:   .SET   STRUC_4   
2343                STRUC_4:   .SET   STRUC_5   
2343                STRUC_5:   .SET   STRUC_6   
2343                STRUC_6:   .SET   STRUC_7   
2343                STRUC_7:   .SET   STRUC_8   
2343                STRUC_8:   .SET   STRUC_9   
2343                STRUC_9:   .SET   STRUC_10   
2343                STRUC_10:   .SET   STRUC_11   
2343                STRUC_11:   .SET   STRUC_12   
2343                STRUC_12:   .SET   0   
2343                          ;*Macro unroll: INTERPRET
2343   CF                     RST   $08   
2344   3F 0B                  DW   interpret   
2346   77 0E                  DW   exit_forth   
2348                          ;*Macro unroll: EXPECT 123, "interpret 123"
2348   CD 8E 09               CALL   printNum   
234B                          ;*Macro unroll:  loadWord H,L, B,C
234B   69                     LD   L,C   
234C   60                     LD   H,B   
234D   69                     LD   L,C   
234E                          ;*Macro unroll:  ppop0 B,C
234E   DD 2B                  DEC   IX   
2350   DD 46 00               LD   B,(IX+0)   
2353   DD 2B                  DEC   IX   
2355   DD 4E 00               LD   C,(IX+0)   
2358                          ;*Macro unroll:  CMP16 123
2358   11 7B 00               LD   DE,123   
235B   B7                     OR   A   
235C   ED 52                  SBC   HL,DE   
235E                          ;*Macro unroll:  checkZeroWord H,L
235E   7D                     LD   A,L   
235F   B4                     OR   H   
2360   CA 81 23               JP   z,tf_doneM_2301S49   
2363   11 DB 0F               LD   DE,FAILED   
2366   CD 43 11               CALL   printPStr   
2369   11 73 23               LD   DE,te_failM_2301S49   
236C   CD 43 11               CALL   printPStr   
236F   76                     HALT      
2370                          ;*Macro unroll:  _skip
2370   C3 70 23               JP   $   
2373                          ;*Macro unroll:  STRUC_PUSH $
2373                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2373                STRUC_12:   .SET   STRUC_11   
2373                STRUC_11:   .SET   STRUC_10   
2373                STRUC_10:   .SET   STRUC_9   
2373                STRUC_9:   .SET   STRUC_8   
2373                STRUC_8:   .SET   STRUC_7   
2373                STRUC_7:   .SET   STRUC_6   
2373                STRUC_6:   .SET   STRUC_5   
2373                STRUC_5:   .SET   STRUC_4   
2373                STRUC_4:   .SET   STRUC_3   
2373                STRUC_3:   .SET   STRUC_2   
2373                STRUC_2:   .SET   STRUC_TOP   
2373                STRUC_TOP:   .SET   $   
2373                TE_FAILM_2301S49:      
2373   0D 69 6E 74 65 72 70 72 65 74 20 31 32 33 .PSTR   "interpret 123"   
2381                          ;*Macro unroll:  _endskip
2381                          ;*Macro unroll:  STRUC_FWD
2381                CUR_ADR:   .SET   $   
2371                          .ORG   STRUC_TOP - 2   
2371   81 23                  DW   CUR_ADR   
2381                          .ORG   CUR_ADR   
2381                          ;*Macro unroll:  STRUC_POP
2381                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2381                STRUC_TOP:   .SET   STRUC_2   
2381                STRUC_2:   .SET   STRUC_3   
2381                STRUC_3:   .SET   STRUC_4   
2381                STRUC_4:   .SET   STRUC_5   
2381                STRUC_5:   .SET   STRUC_6   
2381                STRUC_6:   .SET   STRUC_7   
2381                STRUC_7:   .SET   STRUC_8   
2381                STRUC_8:   .SET   STRUC_9   
2381                STRUC_9:   .SET   STRUC_10   
2381                STRUC_10:   .SET   STRUC_11   
2381                STRUC_11:   .SET   STRUC_12   
2381                STRUC_12:   .SET   0   
2381                TF_DONEM_2301S49:      
2381                          ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
2381   2A 45 30               LD   HL,(lineBufStart)   
2384   22 4B 30               LD   (lineBufTop),HL   
2387   22 49 30               LD   (currkey),HL   
238A   21 93 23               LD   HL,tst_textM_2302S51   
238D   22 61 32               LD   (char_pointer),HL   
2390                          ;*Macro unroll:  _skip
2390   C3 90 23               JP   $   
2393                          ;*Macro unroll:  STRUC_PUSH $
2393                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2393                STRUC_12:   .SET   STRUC_11   
2393                STRUC_11:   .SET   STRUC_10   
2393                STRUC_10:   .SET   STRUC_9   
2393                STRUC_9:   .SET   STRUC_8   
2393                STRUC_8:   .SET   STRUC_7   
2393                STRUC_7:   .SET   STRUC_6   
2393                STRUC_6:   .SET   STRUC_5   
2393                STRUC_5:   .SET   STRUC_4   
2393                STRUC_4:   .SET   STRUC_3   
2393                STRUC_3:   .SET   STRUC_2   
2393                STRUC_2:   .SET   STRUC_TOP   
2393                STRUC_TOP:   .SET   $   
2393                TST_TEXTM_2302S51:      
2393   31 32 33 20 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 0D 0A FF 0D 0A DB   "123 constant x123","\r\n",-1,"\r\n"   
23A9                          ;*Macro unroll:  _endskip
23A9                          ;*Macro unroll:  STRUC_FWD
23A9                CUR_ADR:   .SET   $   
2391                          .ORG   STRUC_TOP - 2   
2391   A9 23                  DW   CUR_ADR   
23A9                          .ORG   CUR_ADR   
23A9                          ;*Macro unroll:  STRUC_POP
23A9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23A9                STRUC_TOP:   .SET   STRUC_2   
23A9                STRUC_2:   .SET   STRUC_3   
23A9                STRUC_3:   .SET   STRUC_4   
23A9                STRUC_4:   .SET   STRUC_5   
23A9                STRUC_5:   .SET   STRUC_6   
23A9                STRUC_6:   .SET   STRUC_7   
23A9                STRUC_7:   .SET   STRUC_8   
23A9                STRUC_8:   .SET   STRUC_9   
23A9                STRUC_9:   .SET   STRUC_10   
23A9                STRUC_10:   .SET   STRUC_11   
23A9                STRUC_11:   .SET   STRUC_12   
23A9                STRUC_12:   .SET   0   
23A9                          ;*Macro unroll: INTERPRET
23A9   CF                     RST   $08   
23AA   3F 0B                  DW   interpret   
23AC   77 0E                  DW   exit_forth   
23AE                          ;*Macro unroll: TEST_SET_TEXT "x123"
23AE   2A 45 30               LD   HL,(lineBufStart)   
23B1   22 4B 30               LD   (lineBufTop),HL   
23B4   22 49 30               LD   (currkey),HL   
23B7   21 C0 23               LD   HL,tst_textM_2304S53   
23BA   22 61 32               LD   (char_pointer),HL   
23BD                          ;*Macro unroll:  _skip
23BD   C3 BD 23               JP   $   
23C0                          ;*Macro unroll:  STRUC_PUSH $
23C0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23C0                STRUC_12:   .SET   STRUC_11   
23C0                STRUC_11:   .SET   STRUC_10   
23C0                STRUC_10:   .SET   STRUC_9   
23C0                STRUC_9:   .SET   STRUC_8   
23C0                STRUC_8:   .SET   STRUC_7   
23C0                STRUC_7:   .SET   STRUC_6   
23C0                STRUC_6:   .SET   STRUC_5   
23C0                STRUC_5:   .SET   STRUC_4   
23C0                STRUC_4:   .SET   STRUC_3   
23C0                STRUC_3:   .SET   STRUC_2   
23C0                STRUC_2:   .SET   STRUC_TOP   
23C0                STRUC_TOP:   .SET   $   
23C0                TST_TEXTM_2304S53:      
23C0   78 31 32 33 0D 0A FF 0D 0A DB   "x123","\r\n",-1,"\r\n"   
23C9                          ;*Macro unroll:  _endskip
23C9                          ;*Macro unroll:  STRUC_FWD
23C9                CUR_ADR:   .SET   $   
23BE                          .ORG   STRUC_TOP - 2   
23BE   C9 23                  DW   CUR_ADR   
23C9                          .ORG   CUR_ADR   
23C9                          ;*Macro unroll:  STRUC_POP
23C9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23C9                STRUC_TOP:   .SET   STRUC_2   
23C9                STRUC_2:   .SET   STRUC_3   
23C9                STRUC_3:   .SET   STRUC_4   
23C9                STRUC_4:   .SET   STRUC_5   
23C9                STRUC_5:   .SET   STRUC_6   
23C9                STRUC_6:   .SET   STRUC_7   
23C9                STRUC_7:   .SET   STRUC_8   
23C9                STRUC_8:   .SET   STRUC_9   
23C9                STRUC_9:   .SET   STRUC_10   
23C9                STRUC_10:   .SET   STRUC_11   
23C9                STRUC_11:   .SET   STRUC_12   
23C9                STRUC_12:   .SET   0   
23C9                          ;*Macro unroll: INTERPRET
23C9   CF                     RST   $08   
23CA   3F 0B                  DW   interpret   
23CC   77 0E                  DW   exit_forth   
23CE                          ;*Macro unroll: EXPECT 123, "constant x123 = 123"
23CE   CD 8E 09               CALL   printNum   
23D1                          ;*Macro unroll:  loadWord H,L, B,C
23D1   69                     LD   L,C   
23D2   60                     LD   H,B   
23D3   69                     LD   L,C   
23D4                          ;*Macro unroll:  ppop0 B,C
23D4   DD 2B                  DEC   IX   
23D6   DD 46 00               LD   B,(IX+0)   
23D9   DD 2B                  DEC   IX   
23DB   DD 4E 00               LD   C,(IX+0)   
23DE                          ;*Macro unroll:  CMP16 123
23DE   11 7B 00               LD   DE,123   
23E1   B7                     OR   A   
23E2   ED 52                  SBC   HL,DE   
23E4                          ;*Macro unroll:  checkZeroWord H,L
23E4   7D                     LD   A,L   
23E5   B4                     OR   H   
23E6   CA 0D 24               JP   z,tf_doneM_2306S55   
23E9   11 DB 0F               LD   DE,FAILED   
23EC   CD 43 11               CALL   printPStr   
23EF   11 F9 23               LD   DE,te_failM_2306S55   
23F2   CD 43 11               CALL   printPStr   
23F5   76                     HALT      
23F6                          ;*Macro unroll:  _skip
23F6   C3 F6 23               JP   $   
23F9                          ;*Macro unroll:  STRUC_PUSH $
23F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23F9                STRUC_12:   .SET   STRUC_11   
23F9                STRUC_11:   .SET   STRUC_10   
23F9                STRUC_10:   .SET   STRUC_9   
23F9                STRUC_9:   .SET   STRUC_8   
23F9                STRUC_8:   .SET   STRUC_7   
23F9                STRUC_7:   .SET   STRUC_6   
23F9                STRUC_6:   .SET   STRUC_5   
23F9                STRUC_5:   .SET   STRUC_4   
23F9                STRUC_4:   .SET   STRUC_3   
23F9                STRUC_3:   .SET   STRUC_2   
23F9                STRUC_2:   .SET   STRUC_TOP   
23F9                STRUC_TOP:   .SET   $   
23F9                TE_FAILM_2306S55:      
23F9   13 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 20 3D 20 31 32 33 .PSTR   "constant x123 = 123"   
240D                          ;*Macro unroll:  _endskip
240D                          ;*Macro unroll:  STRUC_FWD
240D                CUR_ADR:   .SET   $   
23F7                          .ORG   STRUC_TOP - 2   
23F7   0D 24                  DW   CUR_ADR   
240D                          .ORG   CUR_ADR   
240D                          ;*Macro unroll:  STRUC_POP
240D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
240D                STRUC_TOP:   .SET   STRUC_2   
240D                STRUC_2:   .SET   STRUC_3   
240D                STRUC_3:   .SET   STRUC_4   
240D                STRUC_4:   .SET   STRUC_5   
240D                STRUC_5:   .SET   STRUC_6   
240D                STRUC_6:   .SET   STRUC_7   
240D                STRUC_7:   .SET   STRUC_8   
240D                STRUC_8:   .SET   STRUC_9   
240D                STRUC_9:   .SET   STRUC_10   
240D                STRUC_10:   .SET   STRUC_11   
240D                STRUC_11:   .SET   STRUC_12   
240D                STRUC_12:   .SET   0   
240D                TF_DONEM_2306S55:      
240D                          ;*Macro unroll: TEST_SET_TEXT "variable v1"
240D   2A 45 30               LD   HL,(lineBufStart)   
2410   22 4B 30               LD   (lineBufTop),HL   
2413   22 49 30               LD   (currkey),HL   
2416   21 1F 24               LD   HL,tst_textM_2307S57   
2419   22 61 32               LD   (char_pointer),HL   
241C                          ;*Macro unroll:  _skip
241C   C3 1C 24               JP   $   
241F                          ;*Macro unroll:  STRUC_PUSH $
241F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
241F                STRUC_12:   .SET   STRUC_11   
241F                STRUC_11:   .SET   STRUC_10   
241F                STRUC_10:   .SET   STRUC_9   
241F                STRUC_9:   .SET   STRUC_8   
241F                STRUC_8:   .SET   STRUC_7   
241F                STRUC_7:   .SET   STRUC_6   
241F                STRUC_6:   .SET   STRUC_5   
241F                STRUC_5:   .SET   STRUC_4   
241F                STRUC_4:   .SET   STRUC_3   
241F                STRUC_3:   .SET   STRUC_2   
241F                STRUC_2:   .SET   STRUC_TOP   
241F                STRUC_TOP:   .SET   $   
241F                TST_TEXTM_2307S57:      
241F   76 61 72 69 61 62 6C 65 20 76 31 0D 0A FF 0D 0A DB   "variable v1","\r\n",-1,"\r\n"   
242F                          ;*Macro unroll:  _endskip
242F                          ;*Macro unroll:  STRUC_FWD
242F                CUR_ADR:   .SET   $   
241D                          .ORG   STRUC_TOP - 2   
241D   2F 24                  DW   CUR_ADR   
242F                          .ORG   CUR_ADR   
242F                          ;*Macro unroll:  STRUC_POP
242F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
242F                STRUC_TOP:   .SET   STRUC_2   
242F                STRUC_2:   .SET   STRUC_3   
242F                STRUC_3:   .SET   STRUC_4   
242F                STRUC_4:   .SET   STRUC_5   
242F                STRUC_5:   .SET   STRUC_6   
242F                STRUC_6:   .SET   STRUC_7   
242F                STRUC_7:   .SET   STRUC_8   
242F                STRUC_8:   .SET   STRUC_9   
242F                STRUC_9:   .SET   STRUC_10   
242F                STRUC_10:   .SET   STRUC_11   
242F                STRUC_11:   .SET   STRUC_12   
242F                STRUC_12:   .SET   0   
242F                          ;*Macro unroll: INTERPRET
242F   CF                     RST   $08   
2430   3F 0B                  DW   interpret   
2432   77 0E                  DW   exit_forth   
2434                          ;*Macro unroll: ppushValue 123
2434                          ;*Macro unroll:  ppush0 B,C
2434   DD 71 00               LD   (IX+0),C   
2437   DD 23                  INC   IX   
2439   DD 70 00               LD   (IX+0),B   
243C   DD 23                  INC   IX   
243E   01 7B 00               LD   BC,123   
2441                          ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
2441   2A 45 30               LD   HL,(lineBufStart)   
2444   22 4B 30               LD   (lineBufTop),HL   
2447   22 49 30               LD   (currkey),HL   
244A   21 53 24               LD   HL,tst_textM_2310S60   
244D   22 61 32               LD   (char_pointer),HL   
2450                          ;*Macro unroll:  _skip
2450   C3 50 24               JP   $   
2453                          ;*Macro unroll:  STRUC_PUSH $
2453                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2453                STRUC_12:   .SET   STRUC_11   
2453                STRUC_11:   .SET   STRUC_10   
2453                STRUC_10:   .SET   STRUC_9   
2453                STRUC_9:   .SET   STRUC_8   
2453                STRUC_8:   .SET   STRUC_7   
2453                STRUC_7:   .SET   STRUC_6   
2453                STRUC_6:   .SET   STRUC_5   
2453                STRUC_5:   .SET   STRUC_4   
2453                STRUC_4:   .SET   STRUC_3   
2453                STRUC_3:   .SET   STRUC_2   
2453                STRUC_2:   .SET   STRUC_TOP   
2453                STRUC_TOP:   .SET   $   
2453                TST_TEXTM_2310S60:      
2453   31 32 33 20 76 31 20 21 0D 0A FF 0D 0A DB   "123 v1 !","\r\n",-1,"\r\n"   
2460                          ;*Macro unroll:  _endskip
2460                          ;*Macro unroll:  STRUC_FWD
2460                CUR_ADR:   .SET   $   
2451                          .ORG   STRUC_TOP - 2   
2451   60 24                  DW   CUR_ADR   
2460                          .ORG   CUR_ADR   
2460                          ;*Macro unroll:  STRUC_POP
2460                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2460                STRUC_TOP:   .SET   STRUC_2   
2460                STRUC_2:   .SET   STRUC_3   
2460                STRUC_3:   .SET   STRUC_4   
2460                STRUC_4:   .SET   STRUC_5   
2460                STRUC_5:   .SET   STRUC_6   
2460                STRUC_6:   .SET   STRUC_7   
2460                STRUC_7:   .SET   STRUC_8   
2460                STRUC_8:   .SET   STRUC_9   
2460                STRUC_9:   .SET   STRUC_10   
2460                STRUC_10:   .SET   STRUC_11   
2460                STRUC_11:   .SET   STRUC_12   
2460                STRUC_12:   .SET   0   
2460                          ;*Macro unroll: INTERPRET
2460   CF                     RST   $08   
2461   3F 0B                  DW   interpret   
2463   77 0E                  DW   exit_forth   
2465                          ;*Macro unroll: TEST_SET_TEXT "v1 @"
2465   2A 45 30               LD   HL,(lineBufStart)   
2468   22 4B 30               LD   (lineBufTop),HL   
246B   22 49 30               LD   (currkey),HL   
246E   21 77 24               LD   HL,tst_textM_2312S62   
2471   22 61 32               LD   (char_pointer),HL   
2474                          ;*Macro unroll:  _skip
2474   C3 74 24               JP   $   
2477                          ;*Macro unroll:  STRUC_PUSH $
2477                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2477                STRUC_12:   .SET   STRUC_11   
2477                STRUC_11:   .SET   STRUC_10   
2477                STRUC_10:   .SET   STRUC_9   
2477                STRUC_9:   .SET   STRUC_8   
2477                STRUC_8:   .SET   STRUC_7   
2477                STRUC_7:   .SET   STRUC_6   
2477                STRUC_6:   .SET   STRUC_5   
2477                STRUC_5:   .SET   STRUC_4   
2477                STRUC_4:   .SET   STRUC_3   
2477                STRUC_3:   .SET   STRUC_2   
2477                STRUC_2:   .SET   STRUC_TOP   
2477                STRUC_TOP:   .SET   $   
2477                TST_TEXTM_2312S62:      
2477   76 31 20 40 0D 0A FF 0D 0A DB   "v1 @","\r\n",-1,"\r\n"   
2480                          ;*Macro unroll:  _endskip
2480                          ;*Macro unroll:  STRUC_FWD
2480                CUR_ADR:   .SET   $   
2475                          .ORG   STRUC_TOP - 2   
2475   80 24                  DW   CUR_ADR   
2480                          .ORG   CUR_ADR   
2480                          ;*Macro unroll:  STRUC_POP
2480                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2480                STRUC_TOP:   .SET   STRUC_2   
2480                STRUC_2:   .SET   STRUC_3   
2480                STRUC_3:   .SET   STRUC_4   
2480                STRUC_4:   .SET   STRUC_5   
2480                STRUC_5:   .SET   STRUC_6   
2480                STRUC_6:   .SET   STRUC_7   
2480                STRUC_7:   .SET   STRUC_8   
2480                STRUC_8:   .SET   STRUC_9   
2480                STRUC_9:   .SET   STRUC_10   
2480                STRUC_10:   .SET   STRUC_11   
2480                STRUC_11:   .SET   STRUC_12   
2480                STRUC_12:   .SET   0   
2480                          ;*Macro unroll: INTERPRET
2480   CF                     RST   $08   
2481   3F 0B                  DW   interpret   
2483   77 0E                  DW   exit_forth   
2485                          ;*Macro unroll: EXPECT 123, "variable v1 = 123"
2485   CD 8E 09               CALL   printNum   
2488                          ;*Macro unroll:  loadWord H,L, B,C
2488   69                     LD   L,C   
2489   60                     LD   H,B   
248A   69                     LD   L,C   
248B                          ;*Macro unroll:  ppop0 B,C
248B   DD 2B                  DEC   IX   
248D   DD 46 00               LD   B,(IX+0)   
2490   DD 2B                  DEC   IX   
2492   DD 4E 00               LD   C,(IX+0)   
2495                          ;*Macro unroll:  CMP16 123
2495   11 7B 00               LD   DE,123   
2498   B7                     OR   A   
2499   ED 52                  SBC   HL,DE   
249B                          ;*Macro unroll:  checkZeroWord H,L
249B   7D                     LD   A,L   
249C   B4                     OR   H   
249D   CA C2 24               JP   z,tf_doneM_2314S64   
24A0   11 DB 0F               LD   DE,FAILED   
24A3   CD 43 11               CALL   printPStr   
24A6   11 B0 24               LD   DE,te_failM_2314S64   
24A9   CD 43 11               CALL   printPStr   
24AC   76                     HALT      
24AD                          ;*Macro unroll:  _skip
24AD   C3 AD 24               JP   $   
24B0                          ;*Macro unroll:  STRUC_PUSH $
24B0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24B0                STRUC_12:   .SET   STRUC_11   
24B0                STRUC_11:   .SET   STRUC_10   
24B0                STRUC_10:   .SET   STRUC_9   
24B0                STRUC_9:   .SET   STRUC_8   
24B0                STRUC_8:   .SET   STRUC_7   
24B0                STRUC_7:   .SET   STRUC_6   
24B0                STRUC_6:   .SET   STRUC_5   
24B0                STRUC_5:   .SET   STRUC_4   
24B0                STRUC_4:   .SET   STRUC_3   
24B0                STRUC_3:   .SET   STRUC_2   
24B0                STRUC_2:   .SET   STRUC_TOP   
24B0                STRUC_TOP:   .SET   $   
24B0                TE_FAILM_2314S64:      
24B0   11 76 61 72 69 61 62 6C 65 20 76 31 20 3D 20 31 32 33 .PSTR   "variable v1 = 123"   
24C2                          ;*Macro unroll:  _endskip
24C2                          ;*Macro unroll:  STRUC_FWD
24C2                CUR_ADR:   .SET   $   
24AE                          .ORG   STRUC_TOP - 2   
24AE   C2 24                  DW   CUR_ADR   
24C2                          .ORG   CUR_ADR   
24C2                          ;*Macro unroll:  STRUC_POP
24C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24C2                STRUC_TOP:   .SET   STRUC_2   
24C2                STRUC_2:   .SET   STRUC_3   
24C2                STRUC_3:   .SET   STRUC_4   
24C2                STRUC_4:   .SET   STRUC_5   
24C2                STRUC_5:   .SET   STRUC_6   
24C2                STRUC_6:   .SET   STRUC_7   
24C2                STRUC_7:   .SET   STRUC_8   
24C2                STRUC_8:   .SET   STRUC_9   
24C2                STRUC_9:   .SET   STRUC_10   
24C2                STRUC_10:   .SET   STRUC_11   
24C2                STRUC_11:   .SET   STRUC_12   
24C2                STRUC_12:   .SET   0   
24C2                TF_DONEM_2314S64:      
24C2                          ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
24C2   2A 45 30               LD   HL,(lineBufStart)   
24C5   22 4B 30               LD   (lineBufTop),HL   
24C8   22 49 30               LD   (currkey),HL   
24CB   21 D4 24               LD   HL,tst_textM_2315S66   
24CE   22 61 32               LD   (char_pointer),HL   
24D1                          ;*Macro unroll:  _skip
24D1   C3 D1 24               JP   $   
24D4                          ;*Macro unroll:  STRUC_PUSH $
24D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24D4                STRUC_12:   .SET   STRUC_11   
24D4                STRUC_11:   .SET   STRUC_10   
24D4                STRUC_10:   .SET   STRUC_9   
24D4                STRUC_9:   .SET   STRUC_8   
24D4                STRUC_8:   .SET   STRUC_7   
24D4                STRUC_7:   .SET   STRUC_6   
24D4                STRUC_6:   .SET   STRUC_5   
24D4                STRUC_5:   .SET   STRUC_4   
24D4                STRUC_4:   .SET   STRUC_3   
24D4                STRUC_3:   .SET   STRUC_2   
24D4                STRUC_2:   .SET   STRUC_TOP   
24D4                STRUC_TOP:   .SET   $   
24D4                TST_TEXTM_2315S66:      
24D4   3A 20 64 62 6C 20 64 75 70 20 2B 20 3B 0D 0A FF 0D 0A DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
24E6                          ;*Macro unroll:  _endskip
24E6                          ;*Macro unroll:  STRUC_FWD
24E6                CUR_ADR:   .SET   $   
24D2                          .ORG   STRUC_TOP - 2   
24D2   E6 24                  DW   CUR_ADR   
24E6                          .ORG   CUR_ADR   
24E6                          ;*Macro unroll:  STRUC_POP
24E6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24E6                STRUC_TOP:   .SET   STRUC_2   
24E6                STRUC_2:   .SET   STRUC_3   
24E6                STRUC_3:   .SET   STRUC_4   
24E6                STRUC_4:   .SET   STRUC_5   
24E6                STRUC_5:   .SET   STRUC_6   
24E6                STRUC_6:   .SET   STRUC_7   
24E6                STRUC_7:   .SET   STRUC_8   
24E6                STRUC_8:   .SET   STRUC_9   
24E6                STRUC_9:   .SET   STRUC_10   
24E6                STRUC_10:   .SET   STRUC_11   
24E6                STRUC_11:   .SET   STRUC_12   
24E6                STRUC_12:   .SET   0   
24E6                          ;*Macro unroll: INTERPRET
24E6   CF                     RST   $08   
24E7   3F 0B                  DW   interpret   
24E9   77 0E                  DW   exit_forth   
24EB                          ;*Macro unroll: ppushValue 2
24EB                          ;*Macro unroll:  ppush0 B,C
24EB   DD 71 00               LD   (IX+0),C   
24EE   DD 23                  INC   IX   
24F0   DD 70 00               LD   (IX+0),B   
24F3   DD 23                  INC   IX   
24F5   01 02 00               LD   BC,2   
24F8                          ;*Macro unroll: TEST_SET_TEXT "dbl"
24F8   2A 45 30               LD   HL,(lineBufStart)   
24FB   22 4B 30               LD   (lineBufTop),HL   
24FE   22 49 30               LD   (currkey),HL   
2501   21 0A 25               LD   HL,tst_textM_2318S69   
2504   22 61 32               LD   (char_pointer),HL   
2507                          ;*Macro unroll:  _skip
2507   C3 07 25               JP   $   
250A                          ;*Macro unroll:  STRUC_PUSH $
250A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
250A                STRUC_12:   .SET   STRUC_11   
250A                STRUC_11:   .SET   STRUC_10   
250A                STRUC_10:   .SET   STRUC_9   
250A                STRUC_9:   .SET   STRUC_8   
250A                STRUC_8:   .SET   STRUC_7   
250A                STRUC_7:   .SET   STRUC_6   
250A                STRUC_6:   .SET   STRUC_5   
250A                STRUC_5:   .SET   STRUC_4   
250A                STRUC_4:   .SET   STRUC_3   
250A                STRUC_3:   .SET   STRUC_2   
250A                STRUC_2:   .SET   STRUC_TOP   
250A                STRUC_TOP:   .SET   $   
250A                TST_TEXTM_2318S69:      
250A   64 62 6C 0D 0A FF 0D 0A DB   "dbl","\r\n",-1,"\r\n"   
2512                          ;*Macro unroll:  _endskip
2512                          ;*Macro unroll:  STRUC_FWD
2512                CUR_ADR:   .SET   $   
2508                          .ORG   STRUC_TOP - 2   
2508   12 25                  DW   CUR_ADR   
2512                          .ORG   CUR_ADR   
2512                          ;*Macro unroll:  STRUC_POP
2512                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2512                STRUC_TOP:   .SET   STRUC_2   
2512                STRUC_2:   .SET   STRUC_3   
2512                STRUC_3:   .SET   STRUC_4   
2512                STRUC_4:   .SET   STRUC_5   
2512                STRUC_5:   .SET   STRUC_6   
2512                STRUC_6:   .SET   STRUC_7   
2512                STRUC_7:   .SET   STRUC_8   
2512                STRUC_8:   .SET   STRUC_9   
2512                STRUC_9:   .SET   STRUC_10   
2512                STRUC_10:   .SET   STRUC_11   
2512                STRUC_11:   .SET   STRUC_12   
2512                STRUC_12:   .SET   0   
2512                          ;*Macro unroll: INTERPRET
2512   CF                     RST   $08   
2513   3F 0B                  DW   interpret   
2515   77 0E                  DW   exit_forth   
2517                          ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
2517   CD 8E 09               CALL   printNum   
251A                          ;*Macro unroll:  loadWord H,L, B,C
251A   69                     LD   L,C   
251B   60                     LD   H,B   
251C   69                     LD   L,C   
251D                          ;*Macro unroll:  ppop0 B,C
251D   DD 2B                  DEC   IX   
251F   DD 46 00               LD   B,(IX+0)   
2522   DD 2B                  DEC   IX   
2524   DD 4E 00               LD   C,(IX+0)   
2527                          ;*Macro unroll:  CMP16 4
2527   11 04 00               LD   DE,4   
252A   B7                     OR   A   
252B   ED 52                  SBC   HL,DE   
252D                          ;*Macro unroll:  checkZeroWord H,L
252D   7D                     LD   A,L   
252E   B4                     OR   H   
252F   CA 52 25               JP   z,tf_doneM_2320S71   
2532   11 DB 0F               LD   DE,FAILED   
2535   CD 43 11               CALL   printPStr   
2538   11 42 25               LD   DE,te_failM_2320S71   
253B   CD 43 11               CALL   printPStr   
253E   76                     HALT      
253F                          ;*Macro unroll:  _skip
253F   C3 3F 25               JP   $   
2542                          ;*Macro unroll:  STRUC_PUSH $
2542                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2542                STRUC_12:   .SET   STRUC_11   
2542                STRUC_11:   .SET   STRUC_10   
2542                STRUC_10:   .SET   STRUC_9   
2542                STRUC_9:   .SET   STRUC_8   
2542                STRUC_8:   .SET   STRUC_7   
2542                STRUC_7:   .SET   STRUC_6   
2542                STRUC_6:   .SET   STRUC_5   
2542                STRUC_5:   .SET   STRUC_4   
2542                STRUC_4:   .SET   STRUC_3   
2542                STRUC_3:   .SET   STRUC_2   
2542                STRUC_2:   .SET   STRUC_TOP   
2542                STRUC_TOP:   .SET   $   
2542                TE_FAILM_2320S71:      
2542   0F 63 6F 6C 6F 6E 20 64 62 6C 20 32 20 3D 20 34 .PSTR   "colon dbl 2 = 4"   
2552                          ;*Macro unroll:  _endskip
2552                          ;*Macro unroll:  STRUC_FWD
2552                CUR_ADR:   .SET   $   
2540                          .ORG   STRUC_TOP - 2   
2540   52 25                  DW   CUR_ADR   
2552                          .ORG   CUR_ADR   
2552                          ;*Macro unroll:  STRUC_POP
2552                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2552                STRUC_TOP:   .SET   STRUC_2   
2552                STRUC_2:   .SET   STRUC_3   
2552                STRUC_3:   .SET   STRUC_4   
2552                STRUC_4:   .SET   STRUC_5   
2552                STRUC_5:   .SET   STRUC_6   
2552                STRUC_6:   .SET   STRUC_7   
2552                STRUC_7:   .SET   STRUC_8   
2552                STRUC_8:   .SET   STRUC_9   
2552                STRUC_9:   .SET   STRUC_10   
2552                STRUC_10:   .SET   STRUC_11   
2552                STRUC_11:   .SET   STRUC_12   
2552                STRUC_12:   .SET   0   
2552                TF_DONEM_2320S71:      
2552                          ;*Macro unroll: ppushValue 200
2552                          ;*Macro unroll:  ppush0 B,C
2552   DD 71 00               LD   (IX+0),C   
2555   DD 23                  INC   IX   
2557   DD 70 00               LD   (IX+0),B   
255A   DD 23                  INC   IX   
255C   01 C8 00               LD   BC,200   
255F                          ;*Macro unroll: ppushValue 1
255F                          ;*Macro unroll:  ppush0 B,C
255F   DD 71 00               LD   (IX+0),C   
2562   DD 23                  INC   IX   
2564   DD 70 00               LD   (IX+0),B   
2567   DD 23                  INC   IX   
2569   01 01 00               LD   BC,1   
256C                          ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
256C   2A 45 30               LD   HL,(lineBufStart)   
256F   22 4B 30               LD   (lineBufTop),HL   
2572   22 49 30               LD   (currkey),HL   
2575   21 7E 25               LD   HL,tst_textM_2323S75   
2578   22 61 32               LD   (char_pointer),HL   
257B                          ;*Macro unroll:  _skip
257B   C3 7B 25               JP   $   
257E                          ;*Macro unroll:  STRUC_PUSH $
257E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
257E                STRUC_12:   .SET   STRUC_11   
257E                STRUC_11:   .SET   STRUC_10   
257E                STRUC_10:   .SET   STRUC_9   
257E                STRUC_9:   .SET   STRUC_8   
257E                STRUC_8:   .SET   STRUC_7   
257E                STRUC_7:   .SET   STRUC_6   
257E                STRUC_6:   .SET   STRUC_5   
257E                STRUC_5:   .SET   STRUC_4   
257E                STRUC_4:   .SET   STRUC_3   
257E                STRUC_3:   .SET   STRUC_2   
257E                STRUC_2:   .SET   STRUC_TOP   
257E                STRUC_TOP:   .SET   $   
257E                TST_TEXTM_2323S75:      
257E   3A 20 74 65 73 74 69 66 32 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
259B                          ;*Macro unroll:  _endskip
259B                          ;*Macro unroll:  STRUC_FWD
259B                CUR_ADR:   .SET   $   
257C                          .ORG   STRUC_TOP - 2   
257C   9B 25                  DW   CUR_ADR   
259B                          .ORG   CUR_ADR   
259B                          ;*Macro unroll:  STRUC_POP
259B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
259B                STRUC_TOP:   .SET   STRUC_2   
259B                STRUC_2:   .SET   STRUC_3   
259B                STRUC_3:   .SET   STRUC_4   
259B                STRUC_4:   .SET   STRUC_5   
259B                STRUC_5:   .SET   STRUC_6   
259B                STRUC_6:   .SET   STRUC_7   
259B                STRUC_7:   .SET   STRUC_8   
259B                STRUC_8:   .SET   STRUC_9   
259B                STRUC_9:   .SET   STRUC_10   
259B                STRUC_10:   .SET   STRUC_11   
259B                STRUC_11:   .SET   STRUC_12   
259B                STRUC_12:   .SET   0   
259B                          ;*Macro unroll: INTERPRET
259B   CF                     RST   $08   
259C   3F 0B                  DW   interpret   
259E   77 0E                  DW   exit_forth   
25A0                          ;*Macro unroll: TEST_SET_TEXT "testif2"
25A0   2A 45 30               LD   HL,(lineBufStart)   
25A3   22 4B 30               LD   (lineBufTop),HL   
25A6   22 49 30               LD   (currkey),HL   
25A9   21 B2 25               LD   HL,tst_textM_2325S78   
25AC   22 61 32               LD   (char_pointer),HL   
25AF                          ;*Macro unroll:  _skip
25AF   C3 AF 25               JP   $   
25B2                          ;*Macro unroll:  STRUC_PUSH $
25B2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25B2                STRUC_12:   .SET   STRUC_11   
25B2                STRUC_11:   .SET   STRUC_10   
25B2                STRUC_10:   .SET   STRUC_9   
25B2                STRUC_9:   .SET   STRUC_8   
25B2                STRUC_8:   .SET   STRUC_7   
25B2                STRUC_7:   .SET   STRUC_6   
25B2                STRUC_6:   .SET   STRUC_5   
25B2                STRUC_5:   .SET   STRUC_4   
25B2                STRUC_4:   .SET   STRUC_3   
25B2                STRUC_3:   .SET   STRUC_2   
25B2                STRUC_2:   .SET   STRUC_TOP   
25B2                STRUC_TOP:   .SET   $   
25B2                TST_TEXTM_2325S78:      
25B2   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
25BE                          ;*Macro unroll:  _endskip
25BE                          ;*Macro unroll:  STRUC_FWD
25BE                CUR_ADR:   .SET   $   
25B0                          .ORG   STRUC_TOP - 2   
25B0   BE 25                  DW   CUR_ADR   
25BE                          .ORG   CUR_ADR   
25BE                          ;*Macro unroll:  STRUC_POP
25BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
25BE                STRUC_TOP:   .SET   STRUC_2   
25BE                STRUC_2:   .SET   STRUC_3   
25BE                STRUC_3:   .SET   STRUC_4   
25BE                STRUC_4:   .SET   STRUC_5   
25BE                STRUC_5:   .SET   STRUC_6   
25BE                STRUC_6:   .SET   STRUC_7   
25BE                STRUC_7:   .SET   STRUC_8   
25BE                STRUC_8:   .SET   STRUC_9   
25BE                STRUC_9:   .SET   STRUC_10   
25BE                STRUC_10:   .SET   STRUC_11   
25BE                STRUC_11:   .SET   STRUC_12   
25BE                STRUC_12:   .SET   0   
25BE                          ;*Macro unroll: INTERPRET
25BE   CF                     RST   $08   
25BF   3F 0B                  DW   interpret   
25C1   77 0E                  DW   exit_forth   
25C3                          ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
25C3   CD 8E 09               CALL   printNum   
25C6                          ;*Macro unroll:  loadWord H,L, B,C
25C6   69                     LD   L,C   
25C7   60                     LD   H,B   
25C8   69                     LD   L,C   
25C9                          ;*Macro unroll:  ppop0 B,C
25C9   DD 2B                  DEC   IX   
25CB   DD 46 00               LD   B,(IX+0)   
25CE   DD 2B                  DEC   IX   
25D0   DD 4E 00               LD   C,(IX+0)   
25D3                          ;*Macro unroll:  CMP16 100
25D3   11 64 00               LD   DE,100   
25D6   B7                     OR   A   
25D7   ED 52                  SBC   HL,DE   
25D9                          ;*Macro unroll:  checkZeroWord H,L
25D9   7D                     LD   A,L   
25DA   B4                     OR   H   
25DB   CA 05 26               JP   z,tf_doneM_2327S80   
25DE   11 DB 0F               LD   DE,FAILED   
25E1   CD 43 11               CALL   printPStr   
25E4   11 EE 25               LD   DE,te_failM_2327S80   
25E7   CD 43 11               CALL   printPStr   
25EA   76                     HALT      
25EB                          ;*Macro unroll:  _skip
25EB   C3 EB 25               JP   $   
25EE                          ;*Macro unroll:  STRUC_PUSH $
25EE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25EE                STRUC_12:   .SET   STRUC_11   
25EE                STRUC_11:   .SET   STRUC_10   
25EE                STRUC_10:   .SET   STRUC_9   
25EE                STRUC_9:   .SET   STRUC_8   
25EE                STRUC_8:   .SET   STRUC_7   
25EE                STRUC_7:   .SET   STRUC_6   
25EE                STRUC_6:   .SET   STRUC_5   
25EE                STRUC_5:   .SET   STRUC_4   
25EE                STRUC_4:   .SET   STRUC_3   
25EE                STRUC_3:   .SET   STRUC_2   
25EE                STRUC_2:   .SET   STRUC_TOP   
25EE                STRUC_TOP:   .SET   $   
25EE                TE_FAILM_2327S80:      
25EE   16 31 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 31 30 30 .PSTR   "1 if 100 endif --> 100"   
2605                          ;*Macro unroll:  _endskip
2605                          ;*Macro unroll:  STRUC_FWD
2605                CUR_ADR:   .SET   $   
25EC                          .ORG   STRUC_TOP - 2   
25EC   05 26                  DW   CUR_ADR   
2605                          .ORG   CUR_ADR   
2605                          ;*Macro unroll:  STRUC_POP
2605                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2605                STRUC_TOP:   .SET   STRUC_2   
2605                STRUC_2:   .SET   STRUC_3   
2605                STRUC_3:   .SET   STRUC_4   
2605                STRUC_4:   .SET   STRUC_5   
2605                STRUC_5:   .SET   STRUC_6   
2605                STRUC_6:   .SET   STRUC_7   
2605                STRUC_7:   .SET   STRUC_8   
2605                STRUC_8:   .SET   STRUC_9   
2605                STRUC_9:   .SET   STRUC_10   
2605                STRUC_10:   .SET   STRUC_11   
2605                STRUC_11:   .SET   STRUC_12   
2605                STRUC_12:   .SET   0   
2605                TF_DONEM_2327S80:      
2605                          ;*Macro unroll: ppushValue 0
2605                          ;*Macro unroll:  ppush0 B,C
2605   DD 71 00               LD   (IX+0),C   
2608   DD 23                  INC   IX   
260A   DD 70 00               LD   (IX+0),B   
260D   DD 23                  INC   IX   
260F   01 00 00               LD   BC,0   
2612                          ;*Macro unroll: TEST_SET_TEXT "testif2"
2612   2A 45 30               LD   HL,(lineBufStart)   
2615   22 4B 30               LD   (lineBufTop),HL   
2618   22 49 30               LD   (currkey),HL   
261B   21 24 26               LD   HL,tst_textM_2329S83   
261E   22 61 32               LD   (char_pointer),HL   
2621                          ;*Macro unroll:  _skip
2621   C3 21 26               JP   $   
2624                          ;*Macro unroll:  STRUC_PUSH $
2624                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2624                STRUC_12:   .SET   STRUC_11   
2624                STRUC_11:   .SET   STRUC_10   
2624                STRUC_10:   .SET   STRUC_9   
2624                STRUC_9:   .SET   STRUC_8   
2624                STRUC_8:   .SET   STRUC_7   
2624                STRUC_7:   .SET   STRUC_6   
2624                STRUC_6:   .SET   STRUC_5   
2624                STRUC_5:   .SET   STRUC_4   
2624                STRUC_4:   .SET   STRUC_3   
2624                STRUC_3:   .SET   STRUC_2   
2624                STRUC_2:   .SET   STRUC_TOP   
2624                STRUC_TOP:   .SET   $   
2624                TST_TEXTM_2329S83:      
2624   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
2630                          ;*Macro unroll:  _endskip
2630                          ;*Macro unroll:  STRUC_FWD
2630                CUR_ADR:   .SET   $   
2622                          .ORG   STRUC_TOP - 2   
2622   30 26                  DW   CUR_ADR   
2630                          .ORG   CUR_ADR   
2630                          ;*Macro unroll:  STRUC_POP
2630                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2630                STRUC_TOP:   .SET   STRUC_2   
2630                STRUC_2:   .SET   STRUC_3   
2630                STRUC_3:   .SET   STRUC_4   
2630                STRUC_4:   .SET   STRUC_5   
2630                STRUC_5:   .SET   STRUC_6   
2630                STRUC_6:   .SET   STRUC_7   
2630                STRUC_7:   .SET   STRUC_8   
2630                STRUC_8:   .SET   STRUC_9   
2630                STRUC_9:   .SET   STRUC_10   
2630                STRUC_10:   .SET   STRUC_11   
2630                STRUC_11:   .SET   STRUC_12   
2630                STRUC_12:   .SET   0   
2630                          ;*Macro unroll: INTERPRET
2630   CF                     RST   $08   
2631   3F 0B                  DW   interpret   
2633   77 0E                  DW   exit_forth   
2635                          ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
2635   CD 8E 09               CALL   printNum   
2638                          ;*Macro unroll:  loadWord H,L, B,C
2638   69                     LD   L,C   
2639   60                     LD   H,B   
263A   69                     LD   L,C   
263B                          ;*Macro unroll:  ppop0 B,C
263B   DD 2B                  DEC   IX   
263D   DD 46 00               LD   B,(IX+0)   
2640   DD 2B                  DEC   IX   
2642   DD 4E 00               LD   C,(IX+0)   
2645                          ;*Macro unroll:  CMP16 200
2645   11 C8 00               LD   DE,200   
2648   B7                     OR   A   
2649   ED 52                  SBC   HL,DE   
264B                          ;*Macro unroll:  checkZeroWord H,L
264B   7D                     LD   A,L   
264C   B4                     OR   H   
264D   CA 77 26               JP   z,tf_doneM_2331S85   
2650   11 DB 0F               LD   DE,FAILED   
2653   CD 43 11               CALL   printPStr   
2656   11 60 26               LD   DE,te_failM_2331S85   
2659   CD 43 11               CALL   printPStr   
265C   76                     HALT      
265D                          ;*Macro unroll:  _skip
265D   C3 5D 26               JP   $   
2660                          ;*Macro unroll:  STRUC_PUSH $
2660                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2660                STRUC_12:   .SET   STRUC_11   
2660                STRUC_11:   .SET   STRUC_10   
2660                STRUC_10:   .SET   STRUC_9   
2660                STRUC_9:   .SET   STRUC_8   
2660                STRUC_8:   .SET   STRUC_7   
2660                STRUC_7:   .SET   STRUC_6   
2660                STRUC_6:   .SET   STRUC_5   
2660                STRUC_5:   .SET   STRUC_4   
2660                STRUC_4:   .SET   STRUC_3   
2660                STRUC_3:   .SET   STRUC_2   
2660                STRUC_2:   .SET   STRUC_TOP   
2660                STRUC_TOP:   .SET   $   
2660                TE_FAILM_2331S85:      
2660   16 30 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 32 30 30 .PSTR   "0 if 100 endif --> 200"   
2677                          ;*Macro unroll:  _endskip
2677                          ;*Macro unroll:  STRUC_FWD
2677                CUR_ADR:   .SET   $   
265E                          .ORG   STRUC_TOP - 2   
265E   77 26                  DW   CUR_ADR   
2677                          .ORG   CUR_ADR   
2677                          ;*Macro unroll:  STRUC_POP
2677                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2677                STRUC_TOP:   .SET   STRUC_2   
2677                STRUC_2:   .SET   STRUC_3   
2677                STRUC_3:   .SET   STRUC_4   
2677                STRUC_4:   .SET   STRUC_5   
2677                STRUC_5:   .SET   STRUC_6   
2677                STRUC_6:   .SET   STRUC_7   
2677                STRUC_7:   .SET   STRUC_8   
2677                STRUC_8:   .SET   STRUC_9   
2677                STRUC_9:   .SET   STRUC_10   
2677                STRUC_10:   .SET   STRUC_11   
2677                STRUC_11:   .SET   STRUC_12   
2677                STRUC_12:   .SET   0   
2677                TF_DONEM_2331S85:      
2677                          ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
2677   2A 45 30               LD   HL,(lineBufStart)   
267A   22 4B 30               LD   (lineBufTop),HL   
267D   22 49 30               LD   (currkey),HL   
2680   21 89 26               LD   HL,tst_textM_2332S87   
2683   22 61 32               LD   (char_pointer),HL   
2686                          ;*Macro unroll:  _skip
2686   C3 86 26               JP   $   
2689                          ;*Macro unroll:  STRUC_PUSH $
2689                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2689                STRUC_12:   .SET   STRUC_11   
2689                STRUC_11:   .SET   STRUC_10   
2689                STRUC_10:   .SET   STRUC_9   
2689                STRUC_9:   .SET   STRUC_8   
2689                STRUC_8:   .SET   STRUC_7   
2689                STRUC_7:   .SET   STRUC_6   
2689                STRUC_6:   .SET   STRUC_5   
2689                STRUC_5:   .SET   STRUC_4   
2689                STRUC_4:   .SET   STRUC_3   
2689                STRUC_3:   .SET   STRUC_2   
2689                STRUC_2:   .SET   STRUC_TOP   
2689                STRUC_TOP:   .SET   $   
2689                TST_TEXTM_2332S87:      
2689   3A 20 74 65 73 74 69 66 33 20 69 66 20 31 30 30 20 65 6C 73 65 20 32 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
26AF                          ;*Macro unroll:  _endskip
26AF                          ;*Macro unroll:  STRUC_FWD
26AF                CUR_ADR:   .SET   $   
2687                          .ORG   STRUC_TOP - 2   
2687   AF 26                  DW   CUR_ADR   
26AF                          .ORG   CUR_ADR   
26AF                          ;*Macro unroll:  STRUC_POP
26AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26AF                STRUC_TOP:   .SET   STRUC_2   
26AF                STRUC_2:   .SET   STRUC_3   
26AF                STRUC_3:   .SET   STRUC_4   
26AF                STRUC_4:   .SET   STRUC_5   
26AF                STRUC_5:   .SET   STRUC_6   
26AF                STRUC_6:   .SET   STRUC_7   
26AF                STRUC_7:   .SET   STRUC_8   
26AF                STRUC_8:   .SET   STRUC_9   
26AF                STRUC_9:   .SET   STRUC_10   
26AF                STRUC_10:   .SET   STRUC_11   
26AF                STRUC_11:   .SET   STRUC_12   
26AF                STRUC_12:   .SET   0   
26AF                          ;*Macro unroll: INTERPRET
26AF   CF                     RST   $08   
26B0   3F 0B                  DW   interpret   
26B2   77 0E                  DW   exit_forth   
26B4                          ;*Macro unroll: ppushValue 0
26B4                          ;*Macro unroll:  ppush0 B,C
26B4   DD 71 00               LD   (IX+0),C   
26B7   DD 23                  INC   IX   
26B9   DD 70 00               LD   (IX+0),B   
26BC   DD 23                  INC   IX   
26BE   01 00 00               LD   BC,0   
26C1                          ;*Macro unroll: TEST_SET_TEXT "testif3"
26C1   2A 45 30               LD   HL,(lineBufStart)   
26C4   22 4B 30               LD   (lineBufTop),HL   
26C7   22 49 30               LD   (currkey),HL   
26CA   21 D3 26               LD   HL,tst_textM_2335S92   
26CD   22 61 32               LD   (char_pointer),HL   
26D0                          ;*Macro unroll:  _skip
26D0   C3 D0 26               JP   $   
26D3                          ;*Macro unroll:  STRUC_PUSH $
26D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
26D3                STRUC_12:   .SET   STRUC_11   
26D3                STRUC_11:   .SET   STRUC_10   
26D3                STRUC_10:   .SET   STRUC_9   
26D3                STRUC_9:   .SET   STRUC_8   
26D3                STRUC_8:   .SET   STRUC_7   
26D3                STRUC_7:   .SET   STRUC_6   
26D3                STRUC_6:   .SET   STRUC_5   
26D3                STRUC_5:   .SET   STRUC_4   
26D3                STRUC_4:   .SET   STRUC_3   
26D3                STRUC_3:   .SET   STRUC_2   
26D3                STRUC_2:   .SET   STRUC_TOP   
26D3                STRUC_TOP:   .SET   $   
26D3                TST_TEXTM_2335S92:      
26D3   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
26DF                          ;*Macro unroll:  _endskip
26DF                          ;*Macro unroll:  STRUC_FWD
26DF                CUR_ADR:   .SET   $   
26D1                          .ORG   STRUC_TOP - 2   
26D1   DF 26                  DW   CUR_ADR   
26DF                          .ORG   CUR_ADR   
26DF                          ;*Macro unroll:  STRUC_POP
26DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26DF                STRUC_TOP:   .SET   STRUC_2   
26DF                STRUC_2:   .SET   STRUC_3   
26DF                STRUC_3:   .SET   STRUC_4   
26DF                STRUC_4:   .SET   STRUC_5   
26DF                STRUC_5:   .SET   STRUC_6   
26DF                STRUC_6:   .SET   STRUC_7   
26DF                STRUC_7:   .SET   STRUC_8   
26DF                STRUC_8:   .SET   STRUC_9   
26DF                STRUC_9:   .SET   STRUC_10   
26DF                STRUC_10:   .SET   STRUC_11   
26DF                STRUC_11:   .SET   STRUC_12   
26DF                STRUC_12:   .SET   0   
26DF                          ;*Macro unroll: INTERPRET
26DF   CF                     RST   $08   
26E0   3F 0B                  DW   interpret   
26E2   77 0E                  DW   exit_forth   
26E4                          ;*Macro unroll: EXPECT 200, "0 --> 200"
26E4   CD 8E 09               CALL   printNum   
26E7                          ;*Macro unroll:  loadWord H,L, B,C
26E7   69                     LD   L,C   
26E8   60                     LD   H,B   
26E9   69                     LD   L,C   
26EA                          ;*Macro unroll:  ppop0 B,C
26EA   DD 2B                  DEC   IX   
26EC   DD 46 00               LD   B,(IX+0)   
26EF   DD 2B                  DEC   IX   
26F1   DD 4E 00               LD   C,(IX+0)   
26F4                          ;*Macro unroll:  CMP16 200
26F4   11 C8 00               LD   DE,200   
26F7   B7                     OR   A   
26F8   ED 52                  SBC   HL,DE   
26FA                          ;*Macro unroll:  checkZeroWord H,L
26FA   7D                     LD   A,L   
26FB   B4                     OR   H   
26FC   CA 19 27               JP   z,tf_doneM_2337S94   
26FF   11 DB 0F               LD   DE,FAILED   
2702   CD 43 11               CALL   printPStr   
2705   11 0F 27               LD   DE,te_failM_2337S94   
2708   CD 43 11               CALL   printPStr   
270B   76                     HALT      
270C                          ;*Macro unroll:  _skip
270C   C3 0C 27               JP   $   
270F                          ;*Macro unroll:  STRUC_PUSH $
270F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
270F                STRUC_12:   .SET   STRUC_11   
270F                STRUC_11:   .SET   STRUC_10   
270F                STRUC_10:   .SET   STRUC_9   
270F                STRUC_9:   .SET   STRUC_8   
270F                STRUC_8:   .SET   STRUC_7   
270F                STRUC_7:   .SET   STRUC_6   
270F                STRUC_6:   .SET   STRUC_5   
270F                STRUC_5:   .SET   STRUC_4   
270F                STRUC_4:   .SET   STRUC_3   
270F                STRUC_3:   .SET   STRUC_2   
270F                STRUC_2:   .SET   STRUC_TOP   
270F                STRUC_TOP:   .SET   $   
270F                TE_FAILM_2337S94:      
270F   09 30 20 2D 2D 3E 20 32 30 30 .PSTR   "0 --> 200"   
2719                          ;*Macro unroll:  _endskip
2719                          ;*Macro unroll:  STRUC_FWD
2719                CUR_ADR:   .SET   $   
270D                          .ORG   STRUC_TOP - 2   
270D   19 27                  DW   CUR_ADR   
2719                          .ORG   CUR_ADR   
2719                          ;*Macro unroll:  STRUC_POP
2719                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2719                STRUC_TOP:   .SET   STRUC_2   
2719                STRUC_2:   .SET   STRUC_3   
2719                STRUC_3:   .SET   STRUC_4   
2719                STRUC_4:   .SET   STRUC_5   
2719                STRUC_5:   .SET   STRUC_6   
2719                STRUC_6:   .SET   STRUC_7   
2719                STRUC_7:   .SET   STRUC_8   
2719                STRUC_8:   .SET   STRUC_9   
2719                STRUC_9:   .SET   STRUC_10   
2719                STRUC_10:   .SET   STRUC_11   
2719                STRUC_11:   .SET   STRUC_12   
2719                STRUC_12:   .SET   0   
2719                TF_DONEM_2337S94:      
2719                          ;*Macro unroll: ppushValue 1
2719                          ;*Macro unroll:  ppush0 B,C
2719   DD 71 00               LD   (IX+0),C   
271C   DD 23                  INC   IX   
271E   DD 70 00               LD   (IX+0),B   
2721   DD 23                  INC   IX   
2723   01 01 00               LD   BC,1   
2726                          ;*Macro unroll: TEST_SET_TEXT "testif3"
2726   2A 45 30               LD   HL,(lineBufStart)   
2729   22 4B 30               LD   (lineBufTop),HL   
272C   22 49 30               LD   (currkey),HL   
272F   21 38 27               LD   HL,tst_textM_2339S98   
2732   22 61 32               LD   (char_pointer),HL   
2735                          ;*Macro unroll:  _skip
2735   C3 35 27               JP   $   
2738                          ;*Macro unroll:  STRUC_PUSH $
2738                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2738                STRUC_12:   .SET   STRUC_11   
2738                STRUC_11:   .SET   STRUC_10   
2738                STRUC_10:   .SET   STRUC_9   
2738                STRUC_9:   .SET   STRUC_8   
2738                STRUC_8:   .SET   STRUC_7   
2738                STRUC_7:   .SET   STRUC_6   
2738                STRUC_6:   .SET   STRUC_5   
2738                STRUC_5:   .SET   STRUC_4   
2738                STRUC_4:   .SET   STRUC_3   
2738                STRUC_3:   .SET   STRUC_2   
2738                STRUC_2:   .SET   STRUC_TOP   
2738                STRUC_TOP:   .SET   $   
2738                TST_TEXTM_2339S98:      
2738   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
2744                          ;*Macro unroll:  _endskip
2744                          ;*Macro unroll:  STRUC_FWD
2744                CUR_ADR:   .SET   $   
2736                          .ORG   STRUC_TOP - 2   
2736   44 27                  DW   CUR_ADR   
2744                          .ORG   CUR_ADR   
2744                          ;*Macro unroll:  STRUC_POP
2744                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2744                STRUC_TOP:   .SET   STRUC_2   
2744                STRUC_2:   .SET   STRUC_3   
2744                STRUC_3:   .SET   STRUC_4   
2744                STRUC_4:   .SET   STRUC_5   
2744                STRUC_5:   .SET   STRUC_6   
2744                STRUC_6:   .SET   STRUC_7   
2744                STRUC_7:   .SET   STRUC_8   
2744                STRUC_8:   .SET   STRUC_9   
2744                STRUC_9:   .SET   STRUC_10   
2744                STRUC_10:   .SET   STRUC_11   
2744                STRUC_11:   .SET   STRUC_12   
2744                STRUC_12:   .SET   0   
2744                          ;*Macro unroll: INTERPRET
2744   CF                     RST   $08   
2745   3F 0B                  DW   interpret   
2747   77 0E                  DW   exit_forth   
2749                          ;*Macro unroll: EXPECT 100, "1 --> 100"
2749   CD 8E 09               CALL   printNum   
274C                          ;*Macro unroll:  loadWord H,L, B,C
274C   69                     LD   L,C   
274D   60                     LD   H,B   
274E   69                     LD   L,C   
274F                          ;*Macro unroll:  ppop0 B,C
274F   DD 2B                  DEC   IX   
2751   DD 46 00               LD   B,(IX+0)   
2754   DD 2B                  DEC   IX   
2756   DD 4E 00               LD   C,(IX+0)   
2759                          ;*Macro unroll:  CMP16 100
2759   11 64 00               LD   DE,100   
275C   B7                     OR   A   
275D   ED 52                  SBC   HL,DE   
275F                          ;*Macro unroll:  checkZeroWord H,L
275F   7D                     LD   A,L   
2760   B4                     OR   H   
2761   CA 7E 27               JP   z,tf_doneM_2341S100   
2764   11 DB 0F               LD   DE,FAILED   
2767   CD 43 11               CALL   printPStr   
276A   11 74 27               LD   DE,te_failM_2341S100   
276D   CD 43 11               CALL   printPStr   
2770   76                     HALT      
2771                          ;*Macro unroll:  _skip
2771   C3 71 27               JP   $   
2774                          ;*Macro unroll:  STRUC_PUSH $
2774                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2774                STRUC_12:   .SET   STRUC_11   
2774                STRUC_11:   .SET   STRUC_10   
2774                STRUC_10:   .SET   STRUC_9   
2774                STRUC_9:   .SET   STRUC_8   
2774                STRUC_8:   .SET   STRUC_7   
2774                STRUC_7:   .SET   STRUC_6   
2774                STRUC_6:   .SET   STRUC_5   
2774                STRUC_5:   .SET   STRUC_4   
2774                STRUC_4:   .SET   STRUC_3   
2774                STRUC_3:   .SET   STRUC_2   
2774                STRUC_2:   .SET   STRUC_TOP   
2774                STRUC_TOP:   .SET   $   
2774                TE_FAILM_2341S100:      
2774   09 31 20 2D 2D 3E 20 31 30 30 .PSTR   "1 --> 100"   
277E                          ;*Macro unroll:  _endskip
277E                          ;*Macro unroll:  STRUC_FWD
277E                CUR_ADR:   .SET   $   
2772                          .ORG   STRUC_TOP - 2   
2772   7E 27                  DW   CUR_ADR   
277E                          .ORG   CUR_ADR   
277E                          ;*Macro unroll:  STRUC_POP
277E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
277E                STRUC_TOP:   .SET   STRUC_2   
277E                STRUC_2:   .SET   STRUC_3   
277E                STRUC_3:   .SET   STRUC_4   
277E                STRUC_4:   .SET   STRUC_5   
277E                STRUC_5:   .SET   STRUC_6   
277E                STRUC_6:   .SET   STRUC_7   
277E                STRUC_7:   .SET   STRUC_8   
277E                STRUC_8:   .SET   STRUC_9   
277E                STRUC_9:   .SET   STRUC_10   
277E                STRUC_10:   .SET   STRUC_11   
277E                STRUC_11:   .SET   STRUC_12   
277E                STRUC_12:   .SET   0   
277E                TF_DONEM_2341S100:      
277E                          ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
277E   2A 45 30               LD   HL,(lineBufStart)   
2781   22 4B 30               LD   (lineBufTop),HL   
2784   22 49 30               LD   (currkey),HL   
2787   21 90 27               LD   HL,tst_textM_2342S102   
278A   22 61 32               LD   (char_pointer),HL   
278D                          ;*Macro unroll:  _skip
278D   C3 8D 27               JP   $   
2790                          ;*Macro unroll:  STRUC_PUSH $
2790                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2790                STRUC_12:   .SET   STRUC_11   
2790                STRUC_11:   .SET   STRUC_10   
2790                STRUC_10:   .SET   STRUC_9   
2790                STRUC_9:   .SET   STRUC_8   
2790                STRUC_8:   .SET   STRUC_7   
2790                STRUC_7:   .SET   STRUC_6   
2790                STRUC_6:   .SET   STRUC_5   
2790                STRUC_5:   .SET   STRUC_4   
2790                STRUC_4:   .SET   STRUC_3   
2790                STRUC_3:   .SET   STRUC_2   
2790                STRUC_2:   .SET   STRUC_TOP   
2790                STRUC_TOP:   .SET   $   
2790                TST_TEXTM_2342S102:      
2790   3A 20 74 65 73 74 6C 6F 6F 70 20 62 65 67 69 6E 20 64 75 70 20 35 20 3C 20 77 68 69 6C 65 20 64 75 70 20 2E 20 31 2B 20 72 65 70 65 61 74 20 3B 0D 0A FF 0D 0A DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
27C5                          ;*Macro unroll:  _endskip
27C5                          ;*Macro unroll:  STRUC_FWD
27C5                CUR_ADR:   .SET   $   
278E                          .ORG   STRUC_TOP - 2   
278E   C5 27                  DW   CUR_ADR   
27C5                          .ORG   CUR_ADR   
27C5                          ;*Macro unroll:  STRUC_POP
27C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27C5                STRUC_TOP:   .SET   STRUC_2   
27C5                STRUC_2:   .SET   STRUC_3   
27C5                STRUC_3:   .SET   STRUC_4   
27C5                STRUC_4:   .SET   STRUC_5   
27C5                STRUC_5:   .SET   STRUC_6   
27C5                STRUC_6:   .SET   STRUC_7   
27C5                STRUC_7:   .SET   STRUC_8   
27C5                STRUC_8:   .SET   STRUC_9   
27C5                STRUC_9:   .SET   STRUC_10   
27C5                STRUC_10:   .SET   STRUC_11   
27C5                STRUC_11:   .SET   STRUC_12   
27C5                STRUC_12:   .SET   0   
27C5                          ;*Macro unroll: INTERPRET
27C5   CF                     RST   $08   
27C6   3F 0B                  DW   interpret   
27C8   77 0E                  DW   exit_forth   
27CA                          ;*Macro unroll: ppushValue 0
27CA                          ;*Macro unroll:  ppush0 B,C
27CA   DD 71 00               LD   (IX+0),C   
27CD   DD 23                  INC   IX   
27CF   DD 70 00               LD   (IX+0),B   
27D2   DD 23                  INC   IX   
27D4   01 00 00               LD   BC,0   
27D7                          ;*Macro unroll: TEST_SET_TEXT "testloop"
27D7   2A 45 30               LD   HL,(lineBufStart)   
27DA   22 4B 30               LD   (lineBufTop),HL   
27DD   22 49 30               LD   (currkey),HL   
27E0   21 E9 27               LD   HL,tst_textM_2345S105   
27E3   22 61 32               LD   (char_pointer),HL   
27E6                          ;*Macro unroll:  _skip
27E6   C3 E6 27               JP   $   
27E9                          ;*Macro unroll:  STRUC_PUSH $
27E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
27E9                STRUC_12:   .SET   STRUC_11   
27E9                STRUC_11:   .SET   STRUC_10   
27E9                STRUC_10:   .SET   STRUC_9   
27E9                STRUC_9:   .SET   STRUC_8   
27E9                STRUC_8:   .SET   STRUC_7   
27E9                STRUC_7:   .SET   STRUC_6   
27E9                STRUC_6:   .SET   STRUC_5   
27E9                STRUC_5:   .SET   STRUC_4   
27E9                STRUC_4:   .SET   STRUC_3   
27E9                STRUC_3:   .SET   STRUC_2   
27E9                STRUC_2:   .SET   STRUC_TOP   
27E9                STRUC_TOP:   .SET   $   
27E9                TST_TEXTM_2345S105:      
27E9   74 65 73 74 6C 6F 6F 70 0D 0A FF 0D 0A DB   "testloop","\r\n",-1,"\r\n"   
27F6                          ;*Macro unroll:  _endskip
27F6                          ;*Macro unroll:  STRUC_FWD
27F6                CUR_ADR:   .SET   $   
27E7                          .ORG   STRUC_TOP - 2   
27E7   F6 27                  DW   CUR_ADR   
27F6                          .ORG   CUR_ADR   
27F6                          ;*Macro unroll:  STRUC_POP
27F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27F6                STRUC_TOP:   .SET   STRUC_2   
27F6                STRUC_2:   .SET   STRUC_3   
27F6                STRUC_3:   .SET   STRUC_4   
27F6                STRUC_4:   .SET   STRUC_5   
27F6                STRUC_5:   .SET   STRUC_6   
27F6                STRUC_6:   .SET   STRUC_7   
27F6                STRUC_7:   .SET   STRUC_8   
27F6                STRUC_8:   .SET   STRUC_9   
27F6                STRUC_9:   .SET   STRUC_10   
27F6                STRUC_10:   .SET   STRUC_11   
27F6                STRUC_11:   .SET   STRUC_12   
27F6                STRUC_12:   .SET   0   
27F6                          ;*Macro unroll: INTERPRET
27F6   CF                     RST   $08   
27F7   3F 0B                  DW   interpret   
27F9   77 0E                  DW   exit_forth   
27FB                          ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
27FB   CD 8E 09               CALL   printNum   
27FE                          ;*Macro unroll:  loadWord H,L, B,C
27FE   69                     LD   L,C   
27FF   60                     LD   H,B   
2800   69                     LD   L,C   
2801                          ;*Macro unroll:  ppop0 B,C
2801   DD 2B                  DEC   IX   
2803   DD 46 00               LD   B,(IX+0)   
2806   DD 2B                  DEC   IX   
2808   DD 4E 00               LD   C,(IX+0)   
280B                          ;*Macro unroll:  CMP16 5
280B   11 05 00               LD   DE,5   
280E   B7                     OR   A   
280F   ED 52                  SBC   HL,DE   
2811                          ;*Macro unroll:  checkZeroWord H,L
2811   7D                     LD   A,L   
2812   B4                     OR   H   
2813   CA 3B 28               JP   z,tf_doneM_2347S107   
2816   11 DB 0F               LD   DE,FAILED   
2819   CD 43 11               CALL   printPStr   
281C   11 26 28               LD   DE,te_failM_2347S107   
281F   CD 43 11               CALL   printPStr   
2822   76                     HALT      
2823                          ;*Macro unroll:  _skip
2823   C3 23 28               JP   $   
2826                          ;*Macro unroll:  STRUC_PUSH $
2826                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2826                STRUC_12:   .SET   STRUC_11   
2826                STRUC_11:   .SET   STRUC_10   
2826                STRUC_10:   .SET   STRUC_9   
2826                STRUC_9:   .SET   STRUC_8   
2826                STRUC_8:   .SET   STRUC_7   
2826                STRUC_7:   .SET   STRUC_6   
2826                STRUC_6:   .SET   STRUC_5   
2826                STRUC_5:   .SET   STRUC_4   
2826                STRUC_4:   .SET   STRUC_3   
2826                STRUC_3:   .SET   STRUC_2   
2826                STRUC_2:   .SET   STRUC_TOP   
2826                STRUC_TOP:   .SET   $   
2826                TE_FAILM_2347S107:      
2826   14 4C 6F 6F 70 20 75 6E 74 69 6C 20 6C 69 6D 69 74 20 3C 20 35 .PSTR   "Loop until limit < 5"   
283B                          ;*Macro unroll:  _endskip
283B                          ;*Macro unroll:  STRUC_FWD
283B                CUR_ADR:   .SET   $   
2824                          .ORG   STRUC_TOP - 2   
2824   3B 28                  DW   CUR_ADR   
283B                          .ORG   CUR_ADR   
283B                          ;*Macro unroll:  STRUC_POP
283B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
283B                STRUC_TOP:   .SET   STRUC_2   
283B                STRUC_2:   .SET   STRUC_3   
283B                STRUC_3:   .SET   STRUC_4   
283B                STRUC_4:   .SET   STRUC_5   
283B                STRUC_5:   .SET   STRUC_6   
283B                STRUC_6:   .SET   STRUC_7   
283B                STRUC_7:   .SET   STRUC_8   
283B                STRUC_8:   .SET   STRUC_9   
283B                STRUC_9:   .SET   STRUC_10   
283B                STRUC_10:   .SET   STRUC_11   
283B                STRUC_11:   .SET   STRUC_12   
283B                STRUC_12:   .SET   0   
283B                TF_DONEM_2347S107:      
283B                          ;*Macro unroll: TEST_SET_TEXT "100"
283B   2A 45 30               LD   HL,(lineBufStart)   
283E   22 4B 30               LD   (lineBufTop),HL   
2841   22 49 30               LD   (currkey),HL   
2844   21 4D 28               LD   HL,tst_textM_2348S110   
2847   22 61 32               LD   (char_pointer),HL   
284A                          ;*Macro unroll:  _skip
284A   C3 4A 28               JP   $   
284D                          ;*Macro unroll:  STRUC_PUSH $
284D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
284D                STRUC_12:   .SET   STRUC_11   
284D                STRUC_11:   .SET   STRUC_10   
284D                STRUC_10:   .SET   STRUC_9   
284D                STRUC_9:   .SET   STRUC_8   
284D                STRUC_8:   .SET   STRUC_7   
284D                STRUC_7:   .SET   STRUC_6   
284D                STRUC_6:   .SET   STRUC_5   
284D                STRUC_5:   .SET   STRUC_4   
284D                STRUC_4:   .SET   STRUC_3   
284D                STRUC_3:   .SET   STRUC_2   
284D                STRUC_2:   .SET   STRUC_TOP   
284D                STRUC_TOP:   .SET   $   
284D                TST_TEXTM_2348S110:      
284D   31 30 30 0D 0A FF 0D 0A DB   "100","\r\n",-1,"\r\n"   
2855                          ;*Macro unroll:  _endskip
2855                          ;*Macro unroll:  STRUC_FWD
2855                CUR_ADR:   .SET   $   
284B                          .ORG   STRUC_TOP - 2   
284B   55 28                  DW   CUR_ADR   
2855                          .ORG   CUR_ADR   
2855                          ;*Macro unroll:  STRUC_POP
2855                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2855                STRUC_TOP:   .SET   STRUC_2   
2855                STRUC_2:   .SET   STRUC_3   
2855                STRUC_3:   .SET   STRUC_4   
2855                STRUC_4:   .SET   STRUC_5   
2855                STRUC_5:   .SET   STRUC_6   
2855                STRUC_6:   .SET   STRUC_7   
2855                STRUC_7:   .SET   STRUC_8   
2855                STRUC_8:   .SET   STRUC_9   
2855                STRUC_9:   .SET   STRUC_10   
2855                STRUC_10:   .SET   STRUC_11   
2855                STRUC_11:   .SET   STRUC_12   
2855                STRUC_12:   .SET   0   
2855                          ;*Macro unroll: INTERPRET
2855   CF                     RST   $08   
2856   3F 0B                  DW   interpret   
2858   77 0E                  DW   exit_forth   
285A                          ;*Macro unroll: EXPECT 100, "interpret parse 100"
285A   CD 8E 09               CALL   printNum   
285D                          ;*Macro unroll:  loadWord H,L, B,C
285D   69                     LD   L,C   
285E   60                     LD   H,B   
285F   69                     LD   L,C   
2860                          ;*Macro unroll:  ppop0 B,C
2860   DD 2B                  DEC   IX   
2862   DD 46 00               LD   B,(IX+0)   
2865   DD 2B                  DEC   IX   
2867   DD 4E 00               LD   C,(IX+0)   
286A                          ;*Macro unroll:  CMP16 100
286A   11 64 00               LD   DE,100   
286D   B7                     OR   A   
286E   ED 52                  SBC   HL,DE   
2870                          ;*Macro unroll:  checkZeroWord H,L
2870   7D                     LD   A,L   
2871   B4                     OR   H   
2872   CA 99 28               JP   z,tf_doneM_2350S112   
2875   11 DB 0F               LD   DE,FAILED   
2878   CD 43 11               CALL   printPStr   
287B   11 85 28               LD   DE,te_failM_2350S112   
287E   CD 43 11               CALL   printPStr   
2881   76                     HALT      
2882                          ;*Macro unroll:  _skip
2882   C3 82 28               JP   $   
2885                          ;*Macro unroll:  STRUC_PUSH $
2885                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2885                STRUC_12:   .SET   STRUC_11   
2885                STRUC_11:   .SET   STRUC_10   
2885                STRUC_10:   .SET   STRUC_9   
2885                STRUC_9:   .SET   STRUC_8   
2885                STRUC_8:   .SET   STRUC_7   
2885                STRUC_7:   .SET   STRUC_6   
2885                STRUC_6:   .SET   STRUC_5   
2885                STRUC_5:   .SET   STRUC_4   
2885                STRUC_4:   .SET   STRUC_3   
2885                STRUC_3:   .SET   STRUC_2   
2885                STRUC_2:   .SET   STRUC_TOP   
2885                STRUC_TOP:   .SET   $   
2885                TE_FAILM_2350S112:      
2885   13 69 6E 74 65 72 70 72 65 74 20 70 61 72 73 65 20 31 30 30 .PSTR   "interpret parse 100"   
2899                          ;*Macro unroll:  _endskip
2899                          ;*Macro unroll:  STRUC_FWD
2899                CUR_ADR:   .SET   $   
2883                          .ORG   STRUC_TOP - 2   
2883   99 28                  DW   CUR_ADR   
2899                          .ORG   CUR_ADR   
2899                          ;*Macro unroll:  STRUC_POP
2899                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2899                STRUC_TOP:   .SET   STRUC_2   
2899                STRUC_2:   .SET   STRUC_3   
2899                STRUC_3:   .SET   STRUC_4   
2899                STRUC_4:   .SET   STRUC_5   
2899                STRUC_5:   .SET   STRUC_6   
2899                STRUC_6:   .SET   STRUC_7   
2899                STRUC_7:   .SET   STRUC_8   
2899                STRUC_8:   .SET   STRUC_9   
2899                STRUC_9:   .SET   STRUC_10   
2899                STRUC_10:   .SET   STRUC_11   
2899                STRUC_11:   .SET   STRUC_12   
2899                STRUC_12:   .SET   0   
2899                TF_DONEM_2350S112:      
2899                          ;*Macro unroll: TEST_SET_TEXT "3 2 +"
2899   2A 45 30               LD   HL,(lineBufStart)   
289C   22 4B 30               LD   (lineBufTop),HL   
289F   22 49 30               LD   (currkey),HL   
28A2   21 AB 28               LD   HL,tst_textM_2351S114   
28A5   22 61 32               LD   (char_pointer),HL   
28A8                          ;*Macro unroll:  _skip
28A8   C3 A8 28               JP   $   
28AB                          ;*Macro unroll:  STRUC_PUSH $
28AB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28AB                STRUC_12:   .SET   STRUC_11   
28AB                STRUC_11:   .SET   STRUC_10   
28AB                STRUC_10:   .SET   STRUC_9   
28AB                STRUC_9:   .SET   STRUC_8   
28AB                STRUC_8:   .SET   STRUC_7   
28AB                STRUC_7:   .SET   STRUC_6   
28AB                STRUC_6:   .SET   STRUC_5   
28AB                STRUC_5:   .SET   STRUC_4   
28AB                STRUC_4:   .SET   STRUC_3   
28AB                STRUC_3:   .SET   STRUC_2   
28AB                STRUC_2:   .SET   STRUC_TOP   
28AB                STRUC_TOP:   .SET   $   
28AB                TST_TEXTM_2351S114:      
28AB   33 20 32 20 2B 0D 0A FF 0D 0A DB   "3 2 +","\r\n",-1,"\r\n"   
28B5                          ;*Macro unroll:  _endskip
28B5                          ;*Macro unroll:  STRUC_FWD
28B5                CUR_ADR:   .SET   $   
28A9                          .ORG   STRUC_TOP - 2   
28A9   B5 28                  DW   CUR_ADR   
28B5                          .ORG   CUR_ADR   
28B5                          ;*Macro unroll:  STRUC_POP
28B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28B5                STRUC_TOP:   .SET   STRUC_2   
28B5                STRUC_2:   .SET   STRUC_3   
28B5                STRUC_3:   .SET   STRUC_4   
28B5                STRUC_4:   .SET   STRUC_5   
28B5                STRUC_5:   .SET   STRUC_6   
28B5                STRUC_6:   .SET   STRUC_7   
28B5                STRUC_7:   .SET   STRUC_8   
28B5                STRUC_8:   .SET   STRUC_9   
28B5                STRUC_9:   .SET   STRUC_10   
28B5                STRUC_10:   .SET   STRUC_11   
28B5                STRUC_11:   .SET   STRUC_12   
28B5                STRUC_12:   .SET   0   
28B5                          ;*Macro unroll: INTERPRET
28B5   CF                     RST   $08   
28B6   3F 0B                  DW   interpret   
28B8   77 0E                  DW   exit_forth   
28BA                          ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
28BA   CD 8E 09               CALL   printNum   
28BD                          ;*Macro unroll:  loadWord H,L, B,C
28BD   69                     LD   L,C   
28BE   60                     LD   H,B   
28BF   69                     LD   L,C   
28C0                          ;*Macro unroll:  ppop0 B,C
28C0   DD 2B                  DEC   IX   
28C2   DD 46 00               LD   B,(IX+0)   
28C5   DD 2B                  DEC   IX   
28C7   DD 4E 00               LD   C,(IX+0)   
28CA                          ;*Macro unroll:  CMP16 5
28CA   11 05 00               LD   DE,5   
28CD   B7                     OR   A   
28CE   ED 52                  SBC   HL,DE   
28D0                          ;*Macro unroll:  checkZeroWord H,L
28D0   7D                     LD   A,L   
28D1   B4                     OR   H   
28D2   CA EF 28               JP   z,tf_doneM_2353S116   
28D5   11 DB 0F               LD   DE,FAILED   
28D8   CD 43 11               CALL   printPStr   
28DB   11 E5 28               LD   DE,te_failM_2353S116   
28DE   CD 43 11               CALL   printPStr   
28E1   76                     HALT      
28E2                          ;*Macro unroll:  _skip
28E2   C3 E2 28               JP   $   
28E5                          ;*Macro unroll:  STRUC_PUSH $
28E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28E5                STRUC_12:   .SET   STRUC_11   
28E5                STRUC_11:   .SET   STRUC_10   
28E5                STRUC_10:   .SET   STRUC_9   
28E5                STRUC_9:   .SET   STRUC_8   
28E5                STRUC_8:   .SET   STRUC_7   
28E5                STRUC_7:   .SET   STRUC_6   
28E5                STRUC_6:   .SET   STRUC_5   
28E5                STRUC_5:   .SET   STRUC_4   
28E5                STRUC_4:   .SET   STRUC_3   
28E5                STRUC_3:   .SET   STRUC_2   
28E5                STRUC_2:   .SET   STRUC_TOP   
28E5                STRUC_TOP:   .SET   $   
28E5                TE_FAILM_2353S116:      
28E5   09 33 20 2B 20 32 20 3D 20 35 .PSTR   "3 + 2 = 5"   
28EF                          ;*Macro unroll:  _endskip
28EF                          ;*Macro unroll:  STRUC_FWD
28EF                CUR_ADR:   .SET   $   
28E3                          .ORG   STRUC_TOP - 2   
28E3   EF 28                  DW   CUR_ADR   
28EF                          .ORG   CUR_ADR   
28EF                          ;*Macro unroll:  STRUC_POP
28EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28EF                STRUC_TOP:   .SET   STRUC_2   
28EF                STRUC_2:   .SET   STRUC_3   
28EF                STRUC_3:   .SET   STRUC_4   
28EF                STRUC_4:   .SET   STRUC_5   
28EF                STRUC_5:   .SET   STRUC_6   
28EF                STRUC_6:   .SET   STRUC_7   
28EF                STRUC_7:   .SET   STRUC_8   
28EF                STRUC_8:   .SET   STRUC_9   
28EF                STRUC_9:   .SET   STRUC_10   
28EF                STRUC_10:   .SET   STRUC_11   
28EF                STRUC_11:   .SET   STRUC_12   
28EF                STRUC_12:   .SET   0   
28EF                TF_DONEM_2353S116:      
28EF                          ;*Macro unroll: TEST_SET_TEXT ": add + ;"
28EF   2A 45 30               LD   HL,(lineBufStart)   
28F2   22 4B 30               LD   (lineBufTop),HL   
28F5   22 49 30               LD   (currkey),HL   
28F8   21 01 29               LD   HL,tst_textM_2354S118   
28FB   22 61 32               LD   (char_pointer),HL   
28FE                          ;*Macro unroll:  _skip
28FE   C3 FE 28               JP   $   
2901                          ;*Macro unroll:  STRUC_PUSH $
2901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2901                STRUC_12:   .SET   STRUC_11   
2901                STRUC_11:   .SET   STRUC_10   
2901                STRUC_10:   .SET   STRUC_9   
2901                STRUC_9:   .SET   STRUC_8   
2901                STRUC_8:   .SET   STRUC_7   
2901                STRUC_7:   .SET   STRUC_6   
2901                STRUC_6:   .SET   STRUC_5   
2901                STRUC_5:   .SET   STRUC_4   
2901                STRUC_4:   .SET   STRUC_3   
2901                STRUC_3:   .SET   STRUC_2   
2901                STRUC_2:   .SET   STRUC_TOP   
2901                STRUC_TOP:   .SET   $   
2901                TST_TEXTM_2354S118:      
2901   3A 20 61 64 64 20 2B 20 3B 0D 0A FF 0D 0A DB   ": add + ;","\r\n",-1,"\r\n"   
290F                          ;*Macro unroll:  _endskip
290F                          ;*Macro unroll:  STRUC_FWD
290F                CUR_ADR:   .SET   $   
28FF                          .ORG   STRUC_TOP - 2   
28FF   0F 29                  DW   CUR_ADR   
290F                          .ORG   CUR_ADR   
290F                          ;*Macro unroll:  STRUC_POP
290F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
290F                STRUC_TOP:   .SET   STRUC_2   
290F                STRUC_2:   .SET   STRUC_3   
290F                STRUC_3:   .SET   STRUC_4   
290F                STRUC_4:   .SET   STRUC_5   
290F                STRUC_5:   .SET   STRUC_6   
290F                STRUC_6:   .SET   STRUC_7   
290F                STRUC_7:   .SET   STRUC_8   
290F                STRUC_8:   .SET   STRUC_9   
290F                STRUC_9:   .SET   STRUC_10   
290F                STRUC_10:   .SET   STRUC_11   
290F                STRUC_11:   .SET   STRUC_12   
290F                STRUC_12:   .SET   0   
290F                          ;*Macro unroll: INTERPRET
290F   CF                     RST   $08   
2910   3F 0B                  DW   interpret   
2912   77 0E                  DW   exit_forth   
2914                          ;*Macro unroll: ppushValue 2
2914                          ;*Macro unroll:  ppush0 B,C
2914   DD 71 00               LD   (IX+0),C   
2917   DD 23                  INC   IX   
2919   DD 70 00               LD   (IX+0),B   
291C   DD 23                  INC   IX   
291E   01 02 00               LD   BC,2   
2921                          ;*Macro unroll: ppushValue 2
2921                          ;*Macro unroll:  ppush0 B,C
2921   DD 71 00               LD   (IX+0),C   
2924   DD 23                  INC   IX   
2926   DD 70 00               LD   (IX+0),B   
2929   DD 23                  INC   IX   
292B   01 02 00               LD   BC,2   
292E                          ;*Macro unroll: TEST_SET_TEXT "add"
292E   2A 45 30               LD   HL,(lineBufStart)   
2931   22 4B 30               LD   (lineBufTop),HL   
2934   22 49 30               LD   (currkey),HL   
2937   21 40 29               LD   HL,tst_textM_2358S123   
293A   22 61 32               LD   (char_pointer),HL   
293D                          ;*Macro unroll:  _skip
293D   C3 3D 29               JP   $   
2940                          ;*Macro unroll:  STRUC_PUSH $
2940                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2940                STRUC_12:   .SET   STRUC_11   
2940                STRUC_11:   .SET   STRUC_10   
2940                STRUC_10:   .SET   STRUC_9   
2940                STRUC_9:   .SET   STRUC_8   
2940                STRUC_8:   .SET   STRUC_7   
2940                STRUC_7:   .SET   STRUC_6   
2940                STRUC_6:   .SET   STRUC_5   
2940                STRUC_5:   .SET   STRUC_4   
2940                STRUC_4:   .SET   STRUC_3   
2940                STRUC_3:   .SET   STRUC_2   
2940                STRUC_2:   .SET   STRUC_TOP   
2940                STRUC_TOP:   .SET   $   
2940                TST_TEXTM_2358S123:      
2940   61 64 64 0D 0A FF 0D 0A DB   "add","\r\n",-1,"\r\n"   
2948                          ;*Macro unroll:  _endskip
2948                          ;*Macro unroll:  STRUC_FWD
2948                CUR_ADR:   .SET   $   
293E                          .ORG   STRUC_TOP - 2   
293E   48 29                  DW   CUR_ADR   
2948                          .ORG   CUR_ADR   
2948                          ;*Macro unroll:  STRUC_POP
2948                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2948                STRUC_TOP:   .SET   STRUC_2   
2948                STRUC_2:   .SET   STRUC_3   
2948                STRUC_3:   .SET   STRUC_4   
2948                STRUC_4:   .SET   STRUC_5   
2948                STRUC_5:   .SET   STRUC_6   
2948                STRUC_6:   .SET   STRUC_7   
2948                STRUC_7:   .SET   STRUC_8   
2948                STRUC_8:   .SET   STRUC_9   
2948                STRUC_9:   .SET   STRUC_10   
2948                STRUC_10:   .SET   STRUC_11   
2948                STRUC_11:   .SET   STRUC_12   
2948                STRUC_12:   .SET   0   
2948                          ;*Macro unroll: INTERPRET
2948   CF                     RST   $08   
2949   3F 0B                  DW   interpret   
294B   77 0E                  DW   exit_forth   
294D                          ;*Macro unroll: EXPECT 4, "2 2 add = 4"
294D   CD 8E 09               CALL   printNum   
2950                          ;*Macro unroll:  loadWord H,L, B,C
2950   69                     LD   L,C   
2951   60                     LD   H,B   
2952   69                     LD   L,C   
2953                          ;*Macro unroll:  ppop0 B,C
2953   DD 2B                  DEC   IX   
2955   DD 46 00               LD   B,(IX+0)   
2958   DD 2B                  DEC   IX   
295A   DD 4E 00               LD   C,(IX+0)   
295D                          ;*Macro unroll:  CMP16 4
295D   11 04 00               LD   DE,4   
2960   B7                     OR   A   
2961   ED 52                  SBC   HL,DE   
2963                          ;*Macro unroll:  checkZeroWord H,L
2963   7D                     LD   A,L   
2964   B4                     OR   H   
2965   CA 84 29               JP   z,tf_doneM_2360S125   
2968   11 DB 0F               LD   DE,FAILED   
296B   CD 43 11               CALL   printPStr   
296E   11 78 29               LD   DE,te_failM_2360S125   
2971   CD 43 11               CALL   printPStr   
2974   76                     HALT      
2975                          ;*Macro unroll:  _skip
2975   C3 75 29               JP   $   
2978                          ;*Macro unroll:  STRUC_PUSH $
2978                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2978                STRUC_12:   .SET   STRUC_11   
2978                STRUC_11:   .SET   STRUC_10   
2978                STRUC_10:   .SET   STRUC_9   
2978                STRUC_9:   .SET   STRUC_8   
2978                STRUC_8:   .SET   STRUC_7   
2978                STRUC_7:   .SET   STRUC_6   
2978                STRUC_6:   .SET   STRUC_5   
2978                STRUC_5:   .SET   STRUC_4   
2978                STRUC_4:   .SET   STRUC_3   
2978                STRUC_3:   .SET   STRUC_2   
2978                STRUC_2:   .SET   STRUC_TOP   
2978                STRUC_TOP:   .SET   $   
2978                TE_FAILM_2360S125:      
2978   0B 32 20 32 20 61 64 64 20 3D 20 34 .PSTR   "2 2 add = 4"   
2984                          ;*Macro unroll:  _endskip
2984                          ;*Macro unroll:  STRUC_FWD
2984                CUR_ADR:   .SET   $   
2976                          .ORG   STRUC_TOP - 2   
2976   84 29                  DW   CUR_ADR   
2984                          .ORG   CUR_ADR   
2984                          ;*Macro unroll:  STRUC_POP
2984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2984                STRUC_TOP:   .SET   STRUC_2   
2984                STRUC_2:   .SET   STRUC_3   
2984                STRUC_3:   .SET   STRUC_4   
2984                STRUC_4:   .SET   STRUC_5   
2984                STRUC_5:   .SET   STRUC_6   
2984                STRUC_6:   .SET   STRUC_7   
2984                STRUC_7:   .SET   STRUC_8   
2984                STRUC_8:   .SET   STRUC_9   
2984                STRUC_9:   .SET   STRUC_10   
2984                STRUC_10:   .SET   STRUC_11   
2984                STRUC_11:   .SET   STRUC_12   
2984                STRUC_12:   .SET   0   
2984                TF_DONEM_2360S125:      
2984                          ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
2984   2A 45 30               LD   HL,(lineBufStart)   
2987   22 4B 30               LD   (lineBufTop),HL   
298A   22 49 30               LD   (currkey),HL   
298D   21 96 29               LD   HL,tst_textM_2361S127   
2990   22 61 32               LD   (char_pointer),HL   
2993                          ;*Macro unroll:  _skip
2993   C3 93 29               JP   $   
2996                          ;*Macro unroll:  STRUC_PUSH $
2996                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2996                STRUC_12:   .SET   STRUC_11   
2996                STRUC_11:   .SET   STRUC_10   
2996                STRUC_10:   .SET   STRUC_9   
2996                STRUC_9:   .SET   STRUC_8   
2996                STRUC_8:   .SET   STRUC_7   
2996                STRUC_7:   .SET   STRUC_6   
2996                STRUC_6:   .SET   STRUC_5   
2996                STRUC_5:   .SET   STRUC_4   
2996                STRUC_4:   .SET   STRUC_3   
2996                STRUC_3:   .SET   STRUC_2   
2996                STRUC_2:   .SET   STRUC_TOP   
2996                STRUC_TOP:   .SET   $   
2996                TST_TEXTM_2361S127:      
2996   3A 20 64 75 6D 70 20 31 36 20 62 61 73 65 20 21 20 6F 76 65 72 20 2B 20 73 77 61 70 20 62 65 67 69 6E 20 6F 76 65 72 20 6F 76 65 72 20 73 77 61 70 20 3C 20 77 68 69 6C 65 20 64 75 70 20 37 20 61 6E 64 20 30 3D 20 69 66 20 63 72 20 64 75 70 20 2E 20 65 6E 64 69 66 20 64 75 70 20 63 40 20 2E 20 31 2B 20 72 65 70 65 61 74 20 63 72 20 31 30 20 62 61 73 65 20 21 20 3B 0D 0A FF 0D 0A DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
2A15                          ;*Macro unroll:  _endskip
2A15                          ;*Macro unroll:  STRUC_FWD
2A15                CUR_ADR:   .SET   $   
2994                          .ORG   STRUC_TOP - 2   
2994   15 2A                  DW   CUR_ADR   
2A15                          .ORG   CUR_ADR   
2A15                          ;*Macro unroll:  STRUC_POP
2A15                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A15                STRUC_TOP:   .SET   STRUC_2   
2A15                STRUC_2:   .SET   STRUC_3   
2A15                STRUC_3:   .SET   STRUC_4   
2A15                STRUC_4:   .SET   STRUC_5   
2A15                STRUC_5:   .SET   STRUC_6   
2A15                STRUC_6:   .SET   STRUC_7   
2A15                STRUC_7:   .SET   STRUC_8   
2A15                STRUC_8:   .SET   STRUC_9   
2A15                STRUC_9:   .SET   STRUC_10   
2A15                STRUC_10:   .SET   STRUC_11   
2A15                STRUC_11:   .SET   STRUC_12   
2A15                STRUC_12:   .SET   0   
2A15                          ;*Macro unroll: INTERPRET
2A15   CF                     RST   $08   
2A16   3F 0B                  DW   interpret   
2A18   77 0E                  DW   exit_forth   
2A1A                          ;*Macro unroll: TEST_SET_TEXT "dump"
2A1A   2A 45 30               LD   HL,(lineBufStart)   
2A1D   22 4B 30               LD   (lineBufTop),HL   
2A20   22 49 30               LD   (currkey),HL   
2A23   21 2C 2A               LD   HL,tst_textM_2363S130   
2A26   22 61 32               LD   (char_pointer),HL   
2A29                          ;*Macro unroll:  _skip
2A29   C3 29 2A               JP   $   
2A2C                          ;*Macro unroll:  STRUC_PUSH $
2A2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A2C                STRUC_12:   .SET   STRUC_11   
2A2C                STRUC_11:   .SET   STRUC_10   
2A2C                STRUC_10:   .SET   STRUC_9   
2A2C                STRUC_9:   .SET   STRUC_8   
2A2C                STRUC_8:   .SET   STRUC_7   
2A2C                STRUC_7:   .SET   STRUC_6   
2A2C                STRUC_6:   .SET   STRUC_5   
2A2C                STRUC_5:   .SET   STRUC_4   
2A2C                STRUC_4:   .SET   STRUC_3   
2A2C                STRUC_3:   .SET   STRUC_2   
2A2C                STRUC_2:   .SET   STRUC_TOP   
2A2C                STRUC_TOP:   .SET   $   
2A2C                TST_TEXTM_2363S130:      
2A2C   64 75 6D 70 0D 0A FF 0D 0A DB   "dump","\r\n",-1,"\r\n"   
2A35                          ;*Macro unroll:  _endskip
2A35                          ;*Macro unroll:  STRUC_FWD
2A35                CUR_ADR:   .SET   $   
2A2A                          .ORG   STRUC_TOP - 2   
2A2A   35 2A                  DW   CUR_ADR   
2A35                          .ORG   CUR_ADR   
2A35                          ;*Macro unroll:  STRUC_POP
2A35                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A35                STRUC_TOP:   .SET   STRUC_2   
2A35                STRUC_2:   .SET   STRUC_3   
2A35                STRUC_3:   .SET   STRUC_4   
2A35                STRUC_4:   .SET   STRUC_5   
2A35                STRUC_5:   .SET   STRUC_6   
2A35                STRUC_6:   .SET   STRUC_7   
2A35                STRUC_7:   .SET   STRUC_8   
2A35                STRUC_8:   .SET   STRUC_9   
2A35                STRUC_9:   .SET   STRUC_10   
2A35                STRUC_10:   .SET   STRUC_11   
2A35                STRUC_11:   .SET   STRUC_12   
2A35                STRUC_12:   .SET   0   
2A35                          ;*Macro unroll: INTERPRET
2A35   CF                     RST   $08   
2A36   3F 0B                  DW   interpret   
2A38   77 0E                  DW   exit_forth   
2A3A                          ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
2A3A   2A 45 30               LD   HL,(lineBufStart)   
2A3D   22 4B 30               LD   (lineBufTop),HL   
2A40   22 49 30               LD   (currkey),HL   
2A43   21 4C 2A               LD   HL,tst_textM_2365S133   
2A46   22 61 32               LD   (char_pointer),HL   
2A49                          ;*Macro unroll:  _skip
2A49   C3 49 2A               JP   $   
2A4C                          ;*Macro unroll:  STRUC_PUSH $
2A4C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A4C                STRUC_12:   .SET   STRUC_11   
2A4C                STRUC_11:   .SET   STRUC_10   
2A4C                STRUC_10:   .SET   STRUC_9   
2A4C                STRUC_9:   .SET   STRUC_8   
2A4C                STRUC_8:   .SET   STRUC_7   
2A4C                STRUC_7:   .SET   STRUC_6   
2A4C                STRUC_6:   .SET   STRUC_5   
2A4C                STRUC_5:   .SET   STRUC_4   
2A4C                STRUC_4:   .SET   STRUC_3   
2A4C                STRUC_3:   .SET   STRUC_2   
2A4C                STRUC_2:   .SET   STRUC_TOP   
2A4C                STRUC_TOP:   .SET   $   
2A4C                TST_TEXTM_2365S133:      
2A4C   3A 20 73 74 72 20 73 22 20 78 79 7A 22 20 3B 0D 0A FF 0D 0A DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
2A60                          ;*Macro unroll:  _endskip
2A60                          ;*Macro unroll:  STRUC_FWD
2A60                CUR_ADR:   .SET   $   
2A4A                          .ORG   STRUC_TOP - 2   
2A4A   60 2A                  DW   CUR_ADR   
2A60                          .ORG   CUR_ADR   
2A60                          ;*Macro unroll:  STRUC_POP
2A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A60                STRUC_TOP:   .SET   STRUC_2   
2A60                STRUC_2:   .SET   STRUC_3   
2A60                STRUC_3:   .SET   STRUC_4   
2A60                STRUC_4:   .SET   STRUC_5   
2A60                STRUC_5:   .SET   STRUC_6   
2A60                STRUC_6:   .SET   STRUC_7   
2A60                STRUC_7:   .SET   STRUC_8   
2A60                STRUC_8:   .SET   STRUC_9   
2A60                STRUC_9:   .SET   STRUC_10   
2A60                STRUC_10:   .SET   STRUC_11   
2A60                STRUC_11:   .SET   STRUC_12   
2A60                STRUC_12:   .SET   0   
2A60                          ;*Macro unroll: INTERPRET
2A60   CF                     RST   $08   
2A61   3F 0B                  DW   interpret   
2A63   77 0E                  DW   exit_forth   
2A65                          ;*Macro unroll: TEST_SET_TEXT "str type"
2A65   2A 45 30               LD   HL,(lineBufStart)   
2A68   22 4B 30               LD   (lineBufTop),HL   
2A6B   22 49 30               LD   (currkey),HL   
2A6E   21 77 2A               LD   HL,tst_textM_2367S135   
2A71   22 61 32               LD   (char_pointer),HL   
2A74                          ;*Macro unroll:  _skip
2A74   C3 74 2A               JP   $   
2A77                          ;*Macro unroll:  STRUC_PUSH $
2A77                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A77                STRUC_12:   .SET   STRUC_11   
2A77                STRUC_11:   .SET   STRUC_10   
2A77                STRUC_10:   .SET   STRUC_9   
2A77                STRUC_9:   .SET   STRUC_8   
2A77                STRUC_8:   .SET   STRUC_7   
2A77                STRUC_7:   .SET   STRUC_6   
2A77                STRUC_6:   .SET   STRUC_5   
2A77                STRUC_5:   .SET   STRUC_4   
2A77                STRUC_4:   .SET   STRUC_3   
2A77                STRUC_3:   .SET   STRUC_2   
2A77                STRUC_2:   .SET   STRUC_TOP   
2A77                STRUC_TOP:   .SET   $   
2A77                TST_TEXTM_2367S135:      
2A77   73 74 72 20 74 79 70 65 0D 0A FF 0D 0A DB   "str type","\r\n",-1,"\r\n"   
2A84                          ;*Macro unroll:  _endskip
2A84                          ;*Macro unroll:  STRUC_FWD
2A84                CUR_ADR:   .SET   $   
2A75                          .ORG   STRUC_TOP - 2   
2A75   84 2A                  DW   CUR_ADR   
2A84                          .ORG   CUR_ADR   
2A84                          ;*Macro unroll:  STRUC_POP
2A84                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A84                STRUC_TOP:   .SET   STRUC_2   
2A84                STRUC_2:   .SET   STRUC_3   
2A84                STRUC_3:   .SET   STRUC_4   
2A84                STRUC_4:   .SET   STRUC_5   
2A84                STRUC_5:   .SET   STRUC_6   
2A84                STRUC_6:   .SET   STRUC_7   
2A84                STRUC_7:   .SET   STRUC_8   
2A84                STRUC_8:   .SET   STRUC_9   
2A84                STRUC_9:   .SET   STRUC_10   
2A84                STRUC_10:   .SET   STRUC_11   
2A84                STRUC_11:   .SET   STRUC_12   
2A84                STRUC_12:   .SET   0   
2A84                          ;*Macro unroll: INTERPRET
2A84   CF                     RST   $08   
2A85   3F 0B                  DW   interpret   
2A87   77 0E                  DW   exit_forth   
2A89                          ;*Macro unroll: TEST_SET_TEXT "str"
2A89   2A 45 30               LD   HL,(lineBufStart)   
2A8C   22 4B 30               LD   (lineBufTop),HL   
2A8F   22 49 30               LD   (currkey),HL   
2A92   21 9B 2A               LD   HL,tst_textM_2369S137   
2A95   22 61 32               LD   (char_pointer),HL   
2A98                          ;*Macro unroll:  _skip
2A98   C3 98 2A               JP   $   
2A9B                          ;*Macro unroll:  STRUC_PUSH $
2A9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A9B                STRUC_12:   .SET   STRUC_11   
2A9B                STRUC_11:   .SET   STRUC_10   
2A9B                STRUC_10:   .SET   STRUC_9   
2A9B                STRUC_9:   .SET   STRUC_8   
2A9B                STRUC_8:   .SET   STRUC_7   
2A9B                STRUC_7:   .SET   STRUC_6   
2A9B                STRUC_6:   .SET   STRUC_5   
2A9B                STRUC_5:   .SET   STRUC_4   
2A9B                STRUC_4:   .SET   STRUC_3   
2A9B                STRUC_3:   .SET   STRUC_2   
2A9B                STRUC_2:   .SET   STRUC_TOP   
2A9B                STRUC_TOP:   .SET   $   
2A9B                TST_TEXTM_2369S137:      
2A9B   73 74 72 0D 0A FF 0D 0A DB   "str","\r\n",-1,"\r\n"   
2AA3                          ;*Macro unroll:  _endskip
2AA3                          ;*Macro unroll:  STRUC_FWD
2AA3                CUR_ADR:   .SET   $   
2A99                          .ORG   STRUC_TOP - 2   
2A99   A3 2A                  DW   CUR_ADR   
2AA3                          .ORG   CUR_ADR   
2AA3                          ;*Macro unroll:  STRUC_POP
2AA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AA3                STRUC_TOP:   .SET   STRUC_2   
2AA3                STRUC_2:   .SET   STRUC_3   
2AA3                STRUC_3:   .SET   STRUC_4   
2AA3                STRUC_4:   .SET   STRUC_5   
2AA3                STRUC_5:   .SET   STRUC_6   
2AA3                STRUC_6:   .SET   STRUC_7   
2AA3                STRUC_7:   .SET   STRUC_8   
2AA3                STRUC_8:   .SET   STRUC_9   
2AA3                STRUC_9:   .SET   STRUC_10   
2AA3                STRUC_10:   .SET   STRUC_11   
2AA3                STRUC_11:   .SET   STRUC_12   
2AA3                STRUC_12:   .SET   0   
2AA3                          ;*Macro unroll: INTERPRET
2AA3   CF                     RST   $08   
2AA4   3F 0B                  DW   interpret   
2AA6   77 0E                  DW   exit_forth   
2AA8                          ;*Macro unroll: EXPECT 3, "str len = 3"
2AA8   CD 8E 09               CALL   printNum   
2AAB                          ;*Macro unroll:  loadWord H,L, B,C
2AAB   69                     LD   L,C   
2AAC   60                     LD   H,B   
2AAD   69                     LD   L,C   
2AAE                          ;*Macro unroll:  ppop0 B,C
2AAE   DD 2B                  DEC   IX   
2AB0   DD 46 00               LD   B,(IX+0)   
2AB3   DD 2B                  DEC   IX   
2AB5   DD 4E 00               LD   C,(IX+0)   
2AB8                          ;*Macro unroll:  CMP16 3
2AB8   11 03 00               LD   DE,3   
2ABB   B7                     OR   A   
2ABC   ED 52                  SBC   HL,DE   
2ABE                          ;*Macro unroll:  checkZeroWord H,L
2ABE   7D                     LD   A,L   
2ABF   B4                     OR   H   
2AC0   CA DF 2A               JP   z,tf_doneM_2371S139   
2AC3   11 DB 0F               LD   DE,FAILED   
2AC6   CD 43 11               CALL   printPStr   
2AC9   11 D3 2A               LD   DE,te_failM_2371S139   
2ACC   CD 43 11               CALL   printPStr   
2ACF   76                     HALT      
2AD0                          ;*Macro unroll:  _skip
2AD0   C3 D0 2A               JP   $   
2AD3                          ;*Macro unroll:  STRUC_PUSH $
2AD3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AD3                STRUC_12:   .SET   STRUC_11   
2AD3                STRUC_11:   .SET   STRUC_10   
2AD3                STRUC_10:   .SET   STRUC_9   
2AD3                STRUC_9:   .SET   STRUC_8   
2AD3                STRUC_8:   .SET   STRUC_7   
2AD3                STRUC_7:   .SET   STRUC_6   
2AD3                STRUC_6:   .SET   STRUC_5   
2AD3                STRUC_5:   .SET   STRUC_4   
2AD3                STRUC_4:   .SET   STRUC_3   
2AD3                STRUC_3:   .SET   STRUC_2   
2AD3                STRUC_2:   .SET   STRUC_TOP   
2AD3                STRUC_TOP:   .SET   $   
2AD3                TE_FAILM_2371S139:      
2AD3   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2ADF                          ;*Macro unroll:  _endskip
2ADF                          ;*Macro unroll:  STRUC_FWD
2ADF                CUR_ADR:   .SET   $   
2AD1                          .ORG   STRUC_TOP - 2   
2AD1   DF 2A                  DW   CUR_ADR   
2ADF                          .ORG   CUR_ADR   
2ADF                          ;*Macro unroll:  STRUC_POP
2ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2ADF                STRUC_TOP:   .SET   STRUC_2   
2ADF                STRUC_2:   .SET   STRUC_3   
2ADF                STRUC_3:   .SET   STRUC_4   
2ADF                STRUC_4:   .SET   STRUC_5   
2ADF                STRUC_5:   .SET   STRUC_6   
2ADF                STRUC_6:   .SET   STRUC_7   
2ADF                STRUC_7:   .SET   STRUC_8   
2ADF                STRUC_8:   .SET   STRUC_9   
2ADF                STRUC_9:   .SET   STRUC_10   
2ADF                STRUC_10:   .SET   STRUC_11   
2ADF                STRUC_11:   .SET   STRUC_12   
2ADF                STRUC_12:   .SET   0   
2ADF                TF_DONEM_2371S139:      
2ADF                          ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
2ADF   2A 45 30               LD   HL,(lineBufStart)   
2AE2   22 4B 30               LD   (lineBufTop),HL   
2AE5   22 49 30               LD   (currkey),HL   
2AE8   21 F1 2A               LD   HL,tst_textM_2372S141   
2AEB   22 61 32               LD   (char_pointer),HL   
2AEE                          ;*Macro unroll:  _skip
2AEE   C3 EE 2A               JP   $   
2AF1                          ;*Macro unroll:  STRUC_PUSH $
2AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AF1                STRUC_12:   .SET   STRUC_11   
2AF1                STRUC_11:   .SET   STRUC_10   
2AF1                STRUC_10:   .SET   STRUC_9   
2AF1                STRUC_9:   .SET   STRUC_8   
2AF1                STRUC_8:   .SET   STRUC_7   
2AF1                STRUC_7:   .SET   STRUC_6   
2AF1                STRUC_6:   .SET   STRUC_5   
2AF1                STRUC_5:   .SET   STRUC_4   
2AF1                STRUC_4:   .SET   STRUC_3   
2AF1                STRUC_3:   .SET   STRUC_2   
2AF1                STRUC_2:   .SET   STRUC_TOP   
2AF1                STRUC_TOP:   .SET   $   
2AF1                TST_TEXTM_2372S141:      
2AF1   22 20 78 79 7A 22 0D 0A FF 0D 0A DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
2AFC                          ;*Macro unroll:  _endskip
2AFC                          ;*Macro unroll:  STRUC_FWD
2AFC                CUR_ADR:   .SET   $   
2AEF                          .ORG   STRUC_TOP - 2   
2AEF   FC 2A                  DW   CUR_ADR   
2AFC                          .ORG   CUR_ADR   
2AFC                          ;*Macro unroll:  STRUC_POP
2AFC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AFC                STRUC_TOP:   .SET   STRUC_2   
2AFC                STRUC_2:   .SET   STRUC_3   
2AFC                STRUC_3:   .SET   STRUC_4   
2AFC                STRUC_4:   .SET   STRUC_5   
2AFC                STRUC_5:   .SET   STRUC_6   
2AFC                STRUC_6:   .SET   STRUC_7   
2AFC                STRUC_7:   .SET   STRUC_8   
2AFC                STRUC_8:   .SET   STRUC_9   
2AFC                STRUC_9:   .SET   STRUC_10   
2AFC                STRUC_10:   .SET   STRUC_11   
2AFC                STRUC_11:   .SET   STRUC_12   
2AFC                STRUC_12:   .SET   0   
2AFC                          ;*Macro unroll: INTERPRET
2AFC   CF                     RST   $08   
2AFD   3F 0B                  DW   interpret   
2AFF   77 0E                  DW   exit_forth   
2B01                          ;*Macro unroll: TEST_SET_TEXT "dup"
2B01   2A 45 30               LD   HL,(lineBufStart)   
2B04   22 4B 30               LD   (lineBufTop),HL   
2B07   22 49 30               LD   (currkey),HL   
2B0A   21 13 2B               LD   HL,tst_textM_2374S143   
2B0D   22 61 32               LD   (char_pointer),HL   
2B10                          ;*Macro unroll:  _skip
2B10   C3 10 2B               JP   $   
2B13                          ;*Macro unroll:  STRUC_PUSH $
2B13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B13                STRUC_12:   .SET   STRUC_11   
2B13                STRUC_11:   .SET   STRUC_10   
2B13                STRUC_10:   .SET   STRUC_9   
2B13                STRUC_9:   .SET   STRUC_8   
2B13                STRUC_8:   .SET   STRUC_7   
2B13                STRUC_7:   .SET   STRUC_6   
2B13                STRUC_6:   .SET   STRUC_5   
2B13                STRUC_5:   .SET   STRUC_4   
2B13                STRUC_4:   .SET   STRUC_3   
2B13                STRUC_3:   .SET   STRUC_2   
2B13                STRUC_2:   .SET   STRUC_TOP   
2B13                STRUC_TOP:   .SET   $   
2B13                TST_TEXTM_2374S143:      
2B13   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
2B1B                          ;*Macro unroll:  _endskip
2B1B                          ;*Macro unroll:  STRUC_FWD
2B1B                CUR_ADR:   .SET   $   
2B11                          .ORG   STRUC_TOP - 2   
2B11   1B 2B                  DW   CUR_ADR   
2B1B                          .ORG   CUR_ADR   
2B1B                          ;*Macro unroll:  STRUC_POP
2B1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B1B                STRUC_TOP:   .SET   STRUC_2   
2B1B                STRUC_2:   .SET   STRUC_3   
2B1B                STRUC_3:   .SET   STRUC_4   
2B1B                STRUC_4:   .SET   STRUC_5   
2B1B                STRUC_5:   .SET   STRUC_6   
2B1B                STRUC_6:   .SET   STRUC_7   
2B1B                STRUC_7:   .SET   STRUC_8   
2B1B                STRUC_8:   .SET   STRUC_9   
2B1B                STRUC_9:   .SET   STRUC_10   
2B1B                STRUC_10:   .SET   STRUC_11   
2B1B                STRUC_11:   .SET   STRUC_12   
2B1B                STRUC_12:   .SET   0   
2B1B                          ;*Macro unroll: INTERPRET
2B1B   CF                     RST   $08   
2B1C   3F 0B                  DW   interpret   
2B1E   77 0E                  DW   exit_forth   
2B20                          ;*Macro unroll: EXPECT 3, "str len = 3"
2B20   CD 8E 09               CALL   printNum   
2B23                          ;*Macro unroll:  loadWord H,L, B,C
2B23   69                     LD   L,C   
2B24   60                     LD   H,B   
2B25   69                     LD   L,C   
2B26                          ;*Macro unroll:  ppop0 B,C
2B26   DD 2B                  DEC   IX   
2B28   DD 46 00               LD   B,(IX+0)   
2B2B   DD 2B                  DEC   IX   
2B2D   DD 4E 00               LD   C,(IX+0)   
2B30                          ;*Macro unroll:  CMP16 3
2B30   11 03 00               LD   DE,3   
2B33   B7                     OR   A   
2B34   ED 52                  SBC   HL,DE   
2B36                          ;*Macro unroll:  checkZeroWord H,L
2B36   7D                     LD   A,L   
2B37   B4                     OR   H   
2B38   CA 57 2B               JP   z,tf_doneM_2376S145   
2B3B   11 DB 0F               LD   DE,FAILED   
2B3E   CD 43 11               CALL   printPStr   
2B41   11 4B 2B               LD   DE,te_failM_2376S145   
2B44   CD 43 11               CALL   printPStr   
2B47   76                     HALT      
2B48                          ;*Macro unroll:  _skip
2B48   C3 48 2B               JP   $   
2B4B                          ;*Macro unroll:  STRUC_PUSH $
2B4B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B4B                STRUC_12:   .SET   STRUC_11   
2B4B                STRUC_11:   .SET   STRUC_10   
2B4B                STRUC_10:   .SET   STRUC_9   
2B4B                STRUC_9:   .SET   STRUC_8   
2B4B                STRUC_8:   .SET   STRUC_7   
2B4B                STRUC_7:   .SET   STRUC_6   
2B4B                STRUC_6:   .SET   STRUC_5   
2B4B                STRUC_5:   .SET   STRUC_4   
2B4B                STRUC_4:   .SET   STRUC_3   
2B4B                STRUC_3:   .SET   STRUC_2   
2B4B                STRUC_2:   .SET   STRUC_TOP   
2B4B                STRUC_TOP:   .SET   $   
2B4B                TE_FAILM_2376S145:      
2B4B   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2B57                          ;*Macro unroll:  _endskip
2B57                          ;*Macro unroll:  STRUC_FWD
2B57                CUR_ADR:   .SET   $   
2B49                          .ORG   STRUC_TOP - 2   
2B49   57 2B                  DW   CUR_ADR   
2B57                          .ORG   CUR_ADR   
2B57                          ;*Macro unroll:  STRUC_POP
2B57                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B57                STRUC_TOP:   .SET   STRUC_2   
2B57                STRUC_2:   .SET   STRUC_3   
2B57                STRUC_3:   .SET   STRUC_4   
2B57                STRUC_4:   .SET   STRUC_5   
2B57                STRUC_5:   .SET   STRUC_6   
2B57                STRUC_6:   .SET   STRUC_7   
2B57                STRUC_7:   .SET   STRUC_8   
2B57                STRUC_8:   .SET   STRUC_9   
2B57                STRUC_9:   .SET   STRUC_10   
2B57                STRUC_10:   .SET   STRUC_11   
2B57                STRUC_11:   .SET   STRUC_12   
2B57                STRUC_12:   .SET   0   
2B57                TF_DONEM_2376S145:      
2B57                          ;*Macro unroll: TEST_SET_TEXT "type"
2B57   2A 45 30               LD   HL,(lineBufStart)   
2B5A   22 4B 30               LD   (lineBufTop),HL   
2B5D   22 49 30               LD   (currkey),HL   
2B60   21 69 2B               LD   HL,tst_textM_2377S146   
2B63   22 61 32               LD   (char_pointer),HL   
2B66                          ;*Macro unroll:  _skip
2B66   C3 66 2B               JP   $   
2B69                          ;*Macro unroll:  STRUC_PUSH $
2B69                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B69                STRUC_12:   .SET   STRUC_11   
2B69                STRUC_11:   .SET   STRUC_10   
2B69                STRUC_10:   .SET   STRUC_9   
2B69                STRUC_9:   .SET   STRUC_8   
2B69                STRUC_8:   .SET   STRUC_7   
2B69                STRUC_7:   .SET   STRUC_6   
2B69                STRUC_6:   .SET   STRUC_5   
2B69                STRUC_5:   .SET   STRUC_4   
2B69                STRUC_4:   .SET   STRUC_3   
2B69                STRUC_3:   .SET   STRUC_2   
2B69                STRUC_2:   .SET   STRUC_TOP   
2B69                STRUC_TOP:   .SET   $   
2B69                TST_TEXTM_2377S146:      
2B69   74 79 70 65 0D 0A FF 0D 0A DB   "type","\r\n",-1,"\r\n"   
2B72                          ;*Macro unroll:  _endskip
2B72                          ;*Macro unroll:  STRUC_FWD
2B72                CUR_ADR:   .SET   $   
2B67                          .ORG   STRUC_TOP - 2   
2B67   72 2B                  DW   CUR_ADR   
2B72                          .ORG   CUR_ADR   
2B72                          ;*Macro unroll:  STRUC_POP
2B72                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B72                STRUC_TOP:   .SET   STRUC_2   
2B72                STRUC_2:   .SET   STRUC_3   
2B72                STRUC_3:   .SET   STRUC_4   
2B72                STRUC_4:   .SET   STRUC_5   
2B72                STRUC_5:   .SET   STRUC_6   
2B72                STRUC_6:   .SET   STRUC_7   
2B72                STRUC_7:   .SET   STRUC_8   
2B72                STRUC_8:   .SET   STRUC_9   
2B72                STRUC_9:   .SET   STRUC_10   
2B72                STRUC_10:   .SET   STRUC_11   
2B72                STRUC_11:   .SET   STRUC_12   
2B72                STRUC_12:   .SET   0   
2B72                          ;*Macro unroll: INTERPRET
2B72   CF                     RST   $08   
2B73   3F 0B                  DW   interpret   
2B75   77 0E                  DW   exit_forth   
2B77                             ; 
2B77                             ; ld HL, 12
2B77                             ; ld C, 10
2B77                             ; call divideWordByByte
2B77                             ; ld B, 0
2B77                             ; ld C, A
2B77                             ; EXPECT 2, "div 11 / 10 = 1 1"
2B77                             ; TEST_SET_TEXT "hello\r\n"
2B77                             ; call KEY
2B77                             ; EXPECT $68, "key 'h'"
2B77                             ; call KEY
2B77                             ; EXPECT $65, "key 'e'"
2B77                             ; TEST_SET_TEXT "x"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'x'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "a xyz "
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'a xyz'"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'a xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "here"
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; call CREATE
2B77                             ; call LATEST
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "create xyz latest"
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER + 6, "create xyz here"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; call DUP
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; ppushValue -10
2B77                             ; ppushValue 10
2B77                             ; call STAR
2B77                             ; EXPECT -100, "expect -10 * 10 to be -100"
2B77                             ; ppushValue -10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT 200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue 10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT -200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue -101
2B77                             ; ppushValue 20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5, "expect -101 / 20 to be -5"
2B77                             ; EXPECT -1, "expect -101 % 20 to be -1"
2B77                             ; ppushValue -101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT 5,  "expect -101 / -20 to be 5"
2B77                             ; EXPECT -1, "expect -101 % -20 to be -1"
2B77                             ; ppushValue 101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5,  "expect 101 / -20 to be -5"
2B77                             ; EXPECT 1, "expect 101 % -20 to be 1"
2B77                             ; TEST_SET_TEXT ": testif2 if 100 endif ;"
2B77                             ; ppushValue 0
2B77                             ; TEST_SET_TEXT "testloop"
2B77                             ; call INTERPRET
2B77                             ; EXPECT 5, "Loop until limit < 5"
2B77                             ; ppushPText "xyz"
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "xyz length 3"
2B77                             ; call CFETCH
2B77                             ; EXPECT "x" + 0, "xyz --> x"
2B77                             ; ppushValue HEADER_LATEST
2B77                             ; call TCFA
2B77                             ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; ppushValue HEADER_PLUS
2B77                             ; call TCFA
2B77                             ; call EXECUTE
2B77                             ; EXPECT 3, "1 2 plus = 3"
2B77                             ; ppushText "100",3
2B77                             ; call NUMBER
2B77                             ; EXPECT 0, "0 = no parse err"
2B77                             ; EXPECT 100, "parse 100"
2B77                             ; ppushText "latest",6
2B77                             ; call FIND
2B77                             ; EXPECT HEADER_LATEST, "find header of LATEST"
2B77                             ; TEST_SET_TEXT "base"
2B77                             ; rst $08
2B77                             ; dw interpret
2B77                             ; dw exit_forth
2B77                             ; call FETCH
2B77                             ; EXPECT 10, "expect base to be 10"
2B77                             ; ppushText "add",3
2B77                             ; call FIND
2B77                             ; ppushValue 64
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#h 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT $100, "expect hex $100"
2B77                             ; TEST_SET_TEXT "hex"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#d 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT 100, "expect decimal 100"
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                          ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
2B77   2A 45 30               LD   HL,(lineBufStart)   
2B7A   22 4B 30               LD   (lineBufTop),HL   
2B7D   22 49 30               LD   (currkey),HL   
2B80   21 89 2B               LD   HL,tst_textM_2503S18   
2B83   22 61 32               LD   (char_pointer),HL   
2B86                          ;*Macro unroll:  _skip
2B86   C3 86 2B               JP   $   
2B89                          ;*Macro unroll:  STRUC_PUSH $
2B89                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B89                STRUC_12:   .SET   STRUC_11   
2B89                STRUC_11:   .SET   STRUC_10   
2B89                STRUC_10:   .SET   STRUC_9   
2B89                STRUC_9:   .SET   STRUC_8   
2B89                STRUC_8:   .SET   STRUC_7   
2B89                STRUC_7:   .SET   STRUC_6   
2B89                STRUC_6:   .SET   STRUC_5   
2B89                STRUC_5:   .SET   STRUC_4   
2B89                STRUC_4:   .SET   STRUC_3   
2B89                STRUC_3:   .SET   STRUC_2   
2B89                STRUC_2:   .SET   STRUC_TOP   
2B89                STRUC_TOP:   .SET   $   
2B89                TST_TEXTM_2503S18:      
2B89   31 36 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "16 base ! 20","\r\n",-1,"\r\n"   
2B9A                          ;*Macro unroll:  _endskip
2B9A                          ;*Macro unroll:  STRUC_FWD
2B9A                CUR_ADR:   .SET   $   
2B87                          .ORG   STRUC_TOP - 2   
2B87   9A 2B                  DW   CUR_ADR   
2B9A                          .ORG   CUR_ADR   
2B9A                          ;*Macro unroll:  STRUC_POP
2B9A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B9A                STRUC_TOP:   .SET   STRUC_2   
2B9A                STRUC_2:   .SET   STRUC_3   
2B9A                STRUC_3:   .SET   STRUC_4   
2B9A                STRUC_4:   .SET   STRUC_5   
2B9A                STRUC_5:   .SET   STRUC_6   
2B9A                STRUC_6:   .SET   STRUC_7   
2B9A                STRUC_7:   .SET   STRUC_8   
2B9A                STRUC_8:   .SET   STRUC_9   
2B9A                STRUC_9:   .SET   STRUC_10   
2B9A                STRUC_10:   .SET   STRUC_11   
2B9A                STRUC_11:   .SET   STRUC_12   
2B9A                STRUC_12:   .SET   0   
2B9A                          ;*Macro unroll: INTERPRET
2B9A   CF                     RST   $08   
2B9B   3F 0B                  DW   interpret   
2B9D   77 0E                  DW   exit_forth   
2B9F                          ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
2B9F   CD 8E 09               CALL   printNum   
2BA2                          ;*Macro unroll:  loadWord H,L, B,C
2BA2   69                     LD   L,C   
2BA3   60                     LD   H,B   
2BA4   69                     LD   L,C   
2BA5                          ;*Macro unroll:  ppop0 B,C
2BA5   DD 2B                  DEC   IX   
2BA7   DD 46 00               LD   B,(IX+0)   
2BAA   DD 2B                  DEC   IX   
2BAC   DD 4E 00               LD   C,(IX+0)   
2BAF                          ;*Macro unroll:  CMP16 32
2BAF   11 20 00               LD   DE,32   
2BB2   B7                     OR   A   
2BB3   ED 52                  SBC   HL,DE   
2BB5                          ;*Macro unroll:  checkZeroWord H,L
2BB5   7D                     LD   A,L   
2BB6   B4                     OR   H   
2BB7   CA DA 2B               JP   z,tf_doneM_2505S20   
2BBA   11 DB 0F               LD   DE,FAILED   
2BBD   CD 43 11               CALL   printPStr   
2BC0   11 CA 2B               LD   DE,te_failM_2505S20   
2BC3   CD 43 11               CALL   printPStr   
2BC6   76                     HALT      
2BC7                          ;*Macro unroll:  _skip
2BC7   C3 C7 2B               JP   $   
2BCA                          ;*Macro unroll:  STRUC_PUSH $
2BCA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BCA                STRUC_12:   .SET   STRUC_11   
2BCA                STRUC_11:   .SET   STRUC_10   
2BCA                STRUC_10:   .SET   STRUC_9   
2BCA                STRUC_9:   .SET   STRUC_8   
2BCA                STRUC_8:   .SET   STRUC_7   
2BCA                STRUC_7:   .SET   STRUC_6   
2BCA                STRUC_6:   .SET   STRUC_5   
2BCA                STRUC_5:   .SET   STRUC_4   
2BCA                STRUC_4:   .SET   STRUC_3   
2BCA                STRUC_3:   .SET   STRUC_2   
2BCA                STRUC_2:   .SET   STRUC_TOP   
2BCA                STRUC_TOP:   .SET   $   
2BCA                TE_FAILM_2505S20:      
2BCA   0F 33 32 20 24 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "32 $20 to be 32"   
2BDA                          ;*Macro unroll:  _endskip
2BDA                          ;*Macro unroll:  STRUC_FWD
2BDA                CUR_ADR:   .SET   $   
2BC8                          .ORG   STRUC_TOP - 2   
2BC8   DA 2B                  DW   CUR_ADR   
2BDA                          .ORG   CUR_ADR   
2BDA                          ;*Macro unroll:  STRUC_POP
2BDA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BDA                STRUC_TOP:   .SET   STRUC_2   
2BDA                STRUC_2:   .SET   STRUC_3   
2BDA                STRUC_3:   .SET   STRUC_4   
2BDA                STRUC_4:   .SET   STRUC_5   
2BDA                STRUC_5:   .SET   STRUC_6   
2BDA                STRUC_6:   .SET   STRUC_7   
2BDA                STRUC_7:   .SET   STRUC_8   
2BDA                STRUC_8:   .SET   STRUC_9   
2BDA                STRUC_9:   .SET   STRUC_10   
2BDA                STRUC_10:   .SET   STRUC_11   
2BDA                STRUC_11:   .SET   STRUC_12   
2BDA                STRUC_12:   .SET   0   
2BDA                TF_DONEM_2505S20:      
2BDA                          ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
2BDA   2A 45 30               LD   HL,(lineBufStart)   
2BDD   22 4B 30               LD   (lineBufTop),HL   
2BE0   22 49 30               LD   (currkey),HL   
2BE3   21 EC 2B               LD   HL,tst_textM_2506S22   
2BE6   22 61 32               LD   (char_pointer),HL   
2BE9                          ;*Macro unroll:  _skip
2BE9   C3 E9 2B               JP   $   
2BEC                          ;*Macro unroll:  STRUC_PUSH $
2BEC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BEC                STRUC_12:   .SET   STRUC_11   
2BEC                STRUC_11:   .SET   STRUC_10   
2BEC                STRUC_10:   .SET   STRUC_9   
2BEC                STRUC_9:   .SET   STRUC_8   
2BEC                STRUC_8:   .SET   STRUC_7   
2BEC                STRUC_7:   .SET   STRUC_6   
2BEC                STRUC_6:   .SET   STRUC_5   
2BEC                STRUC_5:   .SET   STRUC_4   
2BEC                STRUC_4:   .SET   STRUC_3   
2BEC                STRUC_3:   .SET   STRUC_2   
2BEC                STRUC_2:   .SET   STRUC_TOP   
2BEC                STRUC_TOP:   .SET   $   
2BEC                TST_TEXTM_2506S22:      
2BEC   30 41 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "0A base ! 20","\r\n",-1,"\r\n"   
2BFD                          ;*Macro unroll:  _endskip
2BFD                          ;*Macro unroll:  STRUC_FWD
2BFD                CUR_ADR:   .SET   $   
2BEA                          .ORG   STRUC_TOP - 2   
2BEA   FD 2B                  DW   CUR_ADR   
2BFD                          .ORG   CUR_ADR   
2BFD                          ;*Macro unroll:  STRUC_POP
2BFD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BFD                STRUC_TOP:   .SET   STRUC_2   
2BFD                STRUC_2:   .SET   STRUC_3   
2BFD                STRUC_3:   .SET   STRUC_4   
2BFD                STRUC_4:   .SET   STRUC_5   
2BFD                STRUC_5:   .SET   STRUC_6   
2BFD                STRUC_6:   .SET   STRUC_7   
2BFD                STRUC_7:   .SET   STRUC_8   
2BFD                STRUC_8:   .SET   STRUC_9   
2BFD                STRUC_9:   .SET   STRUC_10   
2BFD                STRUC_10:   .SET   STRUC_11   
2BFD                STRUC_11:   .SET   STRUC_12   
2BFD                STRUC_12:   .SET   0   
2BFD                          ;*Macro unroll: INTERPRET
2BFD   CF                     RST   $08   
2BFE   3F 0B                  DW   interpret   
2C00   77 0E                  DW   exit_forth   
2C02                          ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
2C02   CD 8E 09               CALL   printNum   
2C05                          ;*Macro unroll:  loadWord H,L, B,C
2C05   69                     LD   L,C   
2C06   60                     LD   H,B   
2C07   69                     LD   L,C   
2C08                          ;*Macro unroll:  ppop0 B,C
2C08   DD 2B                  DEC   IX   
2C0A   DD 46 00               LD   B,(IX+0)   
2C0D   DD 2B                  DEC   IX   
2C0F   DD 4E 00               LD   C,(IX+0)   
2C12                          ;*Macro unroll:  CMP16 20
2C12   11 14 00               LD   DE,20   
2C15   B7                     OR   A   
2C16   ED 52                  SBC   HL,DE   
2C18                          ;*Macro unroll:  checkZeroWord H,L
2C18   7D                     LD   A,L   
2C19   B4                     OR   H   
2C1A   CA 44 2C               JP   z,tf_doneM_2508S24   
2C1D   11 DB 0F               LD   DE,FAILED   
2C20   CD 43 11               CALL   printPStr   
2C23   11 2D 2C               LD   DE,te_failM_2508S24   
2C26   CD 43 11               CALL   printPStr   
2C29   76                     HALT      
2C2A                          ;*Macro unroll:  _skip
2C2A   C3 2A 2C               JP   $   
2C2D                          ;*Macro unroll:  STRUC_PUSH $
2C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C2D                STRUC_12:   .SET   STRUC_11   
2C2D                STRUC_11:   .SET   STRUC_10   
2C2D                STRUC_10:   .SET   STRUC_9   
2C2D                STRUC_9:   .SET   STRUC_8   
2C2D                STRUC_8:   .SET   STRUC_7   
2C2D                STRUC_7:   .SET   STRUC_6   
2C2D                STRUC_6:   .SET   STRUC_5   
2C2D                STRUC_5:   .SET   STRUC_4   
2C2D                STRUC_4:   .SET   STRUC_3   
2C2D                STRUC_3:   .SET   STRUC_2   
2C2D                STRUC_2:   .SET   STRUC_TOP   
2C2D                STRUC_TOP:   .SET   $   
2C2D                TE_FAILM_2508S24:      
2C2D   16 32 30 20 64 65 63 69 6D 61 6C 20 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "20 decimal 20 to be 32"   
2C44                          ;*Macro unroll:  _endskip
2C44                          ;*Macro unroll:  STRUC_FWD
2C44                CUR_ADR:   .SET   $   
2C2B                          .ORG   STRUC_TOP - 2   
2C2B   44 2C                  DW   CUR_ADR   
2C44                          .ORG   CUR_ADR   
2C44                          ;*Macro unroll:  STRUC_POP
2C44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C44                STRUC_TOP:   .SET   STRUC_2   
2C44                STRUC_2:   .SET   STRUC_3   
2C44                STRUC_3:   .SET   STRUC_4   
2C44                STRUC_4:   .SET   STRUC_5   
2C44                STRUC_5:   .SET   STRUC_6   
2C44                STRUC_6:   .SET   STRUC_7   
2C44                STRUC_7:   .SET   STRUC_8   
2C44                STRUC_8:   .SET   STRUC_9   
2C44                STRUC_9:   .SET   STRUC_10   
2C44                STRUC_10:   .SET   STRUC_11   
2C44                STRUC_11:   .SET   STRUC_12   
2C44                STRUC_12:   .SET   0   
2C44                TF_DONEM_2508S24:      
2C44                          ;*Macro unroll: TEST_SET_TEXT "100 100 +"
2C44   2A 45 30               LD   HL,(lineBufStart)   
2C47   22 4B 30               LD   (lineBufTop),HL   
2C4A   22 49 30               LD   (currkey),HL   
2C4D   21 56 2C               LD   HL,tst_textM_2509S1   
2C50   22 61 32               LD   (char_pointer),HL   
2C53                          ;*Macro unroll:  _skip
2C53   C3 53 2C               JP   $   
2C56                          ;*Macro unroll:  STRUC_PUSH $
2C56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C56                STRUC_12:   .SET   STRUC_11   
2C56                STRUC_11:   .SET   STRUC_10   
2C56                STRUC_10:   .SET   STRUC_9   
2C56                STRUC_9:   .SET   STRUC_8   
2C56                STRUC_8:   .SET   STRUC_7   
2C56                STRUC_7:   .SET   STRUC_6   
2C56                STRUC_6:   .SET   STRUC_5   
2C56                STRUC_5:   .SET   STRUC_4   
2C56                STRUC_4:   .SET   STRUC_3   
2C56                STRUC_3:   .SET   STRUC_2   
2C56                STRUC_2:   .SET   STRUC_TOP   
2C56                STRUC_TOP:   .SET   $   
2C56                TST_TEXTM_2509S1:      
2C56   31 30 30 20 31 30 30 20 2B 0D 0A FF 0D 0A DB   "100 100 +","\r\n",-1,"\r\n"   
2C64                          ;*Macro unroll:  _endskip
2C64                          ;*Macro unroll:  STRUC_FWD
2C64                CUR_ADR:   .SET   $   
2C54                          .ORG   STRUC_TOP - 2   
2C54   64 2C                  DW   CUR_ADR   
2C64                          .ORG   CUR_ADR   
2C64                          ;*Macro unroll:  STRUC_POP
2C64                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C64                STRUC_TOP:   .SET   STRUC_2   
2C64                STRUC_2:   .SET   STRUC_3   
2C64                STRUC_3:   .SET   STRUC_4   
2C64                STRUC_4:   .SET   STRUC_5   
2C64                STRUC_5:   .SET   STRUC_6   
2C64                STRUC_6:   .SET   STRUC_7   
2C64                STRUC_7:   .SET   STRUC_8   
2C64                STRUC_8:   .SET   STRUC_9   
2C64                STRUC_9:   .SET   STRUC_10   
2C64                STRUC_10:   .SET   STRUC_11   
2C64                STRUC_11:   .SET   STRUC_12   
2C64                STRUC_12:   .SET   0   
2C64                          ;*Macro unroll: INTERPRET
2C64   CF                     RST   $08   
2C65   3F 0B                  DW   interpret   
2C67   77 0E                  DW   exit_forth   
2C69                          ;*Macro unroll: EXPECT 200, "100 100 + = 200"
2C69   CD 8E 09               CALL   printNum   
2C6C                          ;*Macro unroll:  loadWord H,L, B,C
2C6C   69                     LD   L,C   
2C6D   60                     LD   H,B   
2C6E   69                     LD   L,C   
2C6F                          ;*Macro unroll:  ppop0 B,C
2C6F   DD 2B                  DEC   IX   
2C71   DD 46 00               LD   B,(IX+0)   
2C74   DD 2B                  DEC   IX   
2C76   DD 4E 00               LD   C,(IX+0)   
2C79                          ;*Macro unroll:  CMP16 200
2C79   11 C8 00               LD   DE,200   
2C7C   B7                     OR   A   
2C7D   ED 52                  SBC   HL,DE   
2C7F                          ;*Macro unroll:  checkZeroWord H,L
2C7F   7D                     LD   A,L   
2C80   B4                     OR   H   
2C81   CA A4 2C               JP   z,tf_doneM_2511S3   
2C84   11 DB 0F               LD   DE,FAILED   
2C87   CD 43 11               CALL   printPStr   
2C8A   11 94 2C               LD   DE,te_failM_2511S3   
2C8D   CD 43 11               CALL   printPStr   
2C90   76                     HALT      
2C91                          ;*Macro unroll:  _skip
2C91   C3 91 2C               JP   $   
2C94                          ;*Macro unroll:  STRUC_PUSH $
2C94                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C94                STRUC_12:   .SET   STRUC_11   
2C94                STRUC_11:   .SET   STRUC_10   
2C94                STRUC_10:   .SET   STRUC_9   
2C94                STRUC_9:   .SET   STRUC_8   
2C94                STRUC_8:   .SET   STRUC_7   
2C94                STRUC_7:   .SET   STRUC_6   
2C94                STRUC_6:   .SET   STRUC_5   
2C94                STRUC_5:   .SET   STRUC_4   
2C94                STRUC_4:   .SET   STRUC_3   
2C94                STRUC_3:   .SET   STRUC_2   
2C94                STRUC_2:   .SET   STRUC_TOP   
2C94                STRUC_TOP:   .SET   $   
2C94                TE_FAILM_2511S3:      
2C94   0F 31 30 30 20 31 30 30 20 2B 20 3D 20 32 30 30 .PSTR   "100 100 + = 200"   
2CA4                          ;*Macro unroll:  _endskip
2CA4                          ;*Macro unroll:  STRUC_FWD
2CA4                CUR_ADR:   .SET   $   
2C92                          .ORG   STRUC_TOP - 2   
2C92   A4 2C                  DW   CUR_ADR   
2CA4                          .ORG   CUR_ADR   
2CA4                          ;*Macro unroll:  STRUC_POP
2CA4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CA4                STRUC_TOP:   .SET   STRUC_2   
2CA4                STRUC_2:   .SET   STRUC_3   
2CA4                STRUC_3:   .SET   STRUC_4   
2CA4                STRUC_4:   .SET   STRUC_5   
2CA4                STRUC_5:   .SET   STRUC_6   
2CA4                STRUC_6:   .SET   STRUC_7   
2CA4                STRUC_7:   .SET   STRUC_8   
2CA4                STRUC_8:   .SET   STRUC_9   
2CA4                STRUC_9:   .SET   STRUC_10   
2CA4                STRUC_10:   .SET   STRUC_11   
2CA4                STRUC_11:   .SET   STRUC_12   
2CA4                STRUC_12:   .SET   0   
2CA4                TF_DONEM_2511S3:      
2CA4                          ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
2CA4   2A 45 30               LD   HL,(lineBufStart)   
2CA7   22 4B 30               LD   (lineBufTop),HL   
2CAA   22 49 30               LD   (currkey),HL   
2CAD   21 B6 2C               LD   HL,tst_textM_2512S5   
2CB0   22 61 32               LD   (char_pointer),HL   
2CB3                          ;*Macro unroll:  _skip
2CB3   C3 B3 2C               JP   $   
2CB6                          ;*Macro unroll:  STRUC_PUSH $
2CB6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CB6                STRUC_12:   .SET   STRUC_11   
2CB6                STRUC_11:   .SET   STRUC_10   
2CB6                STRUC_10:   .SET   STRUC_9   
2CB6                STRUC_9:   .SET   STRUC_8   
2CB6                STRUC_8:   .SET   STRUC_7   
2CB6                STRUC_7:   .SET   STRUC_6   
2CB6                STRUC_6:   .SET   STRUC_5   
2CB6                STRUC_5:   .SET   STRUC_4   
2CB6                STRUC_4:   .SET   STRUC_3   
2CB6                STRUC_3:   .SET   STRUC_2   
2CB6                STRUC_2:   .SET   STRUC_TOP   
2CB6                STRUC_TOP:   .SET   $   
2CB6                TST_TEXTM_2512S5:      
2CB6   31 30 30 20 31 30 20 2B 20 2E 0D 0A FF 0D 0A DB   "100 10 + .","\r\n",-1,"\r\n"   
2CC5                          ;*Macro unroll:  _endskip
2CC5                          ;*Macro unroll:  STRUC_FWD
2CC5                CUR_ADR:   .SET   $   
2CB4                          .ORG   STRUC_TOP - 2   
2CB4   C5 2C                  DW   CUR_ADR   
2CC5                          .ORG   CUR_ADR   
2CC5                          ;*Macro unroll:  STRUC_POP
2CC5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CC5                STRUC_TOP:   .SET   STRUC_2   
2CC5                STRUC_2:   .SET   STRUC_3   
2CC5                STRUC_3:   .SET   STRUC_4   
2CC5                STRUC_4:   .SET   STRUC_5   
2CC5                STRUC_5:   .SET   STRUC_6   
2CC5                STRUC_6:   .SET   STRUC_7   
2CC5                STRUC_7:   .SET   STRUC_8   
2CC5                STRUC_8:   .SET   STRUC_9   
2CC5                STRUC_9:   .SET   STRUC_10   
2CC5                STRUC_10:   .SET   STRUC_11   
2CC5                STRUC_11:   .SET   STRUC_12   
2CC5                STRUC_12:   .SET   0   
2CC5                          ;*Macro unroll: INTERPRET
2CC5   CF                     RST   $08   
2CC6   3F 0B                  DW   interpret   
2CC8   77 0E                  DW   exit_forth   
2CCA                          ;*Macro unroll: TEST_SET_TEXT "-10 abs"
2CCA   2A 45 30               LD   HL,(lineBufStart)   
2CCD   22 4B 30               LD   (lineBufTop),HL   
2CD0   22 49 30               LD   (currkey),HL   
2CD3   21 DC 2C               LD   HL,tst_textM_2514S8   
2CD6   22 61 32               LD   (char_pointer),HL   
2CD9                          ;*Macro unroll:  _skip
2CD9   C3 D9 2C               JP   $   
2CDC                          ;*Macro unroll:  STRUC_PUSH $
2CDC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CDC                STRUC_12:   .SET   STRUC_11   
2CDC                STRUC_11:   .SET   STRUC_10   
2CDC                STRUC_10:   .SET   STRUC_9   
2CDC                STRUC_9:   .SET   STRUC_8   
2CDC                STRUC_8:   .SET   STRUC_7   
2CDC                STRUC_7:   .SET   STRUC_6   
2CDC                STRUC_6:   .SET   STRUC_5   
2CDC                STRUC_5:   .SET   STRUC_4   
2CDC                STRUC_4:   .SET   STRUC_3   
2CDC                STRUC_3:   .SET   STRUC_2   
2CDC                STRUC_2:   .SET   STRUC_TOP   
2CDC                STRUC_TOP:   .SET   $   
2CDC                TST_TEXTM_2514S8:      
2CDC   2D 31 30 20 61 62 73 0D 0A FF 0D 0A DB   "-10 abs","\r\n",-1,"\r\n"   
2CE8                          ;*Macro unroll:  _endskip
2CE8                          ;*Macro unroll:  STRUC_FWD
2CE8                CUR_ADR:   .SET   $   
2CDA                          .ORG   STRUC_TOP - 2   
2CDA   E8 2C                  DW   CUR_ADR   
2CE8                          .ORG   CUR_ADR   
2CE8                          ;*Macro unroll:  STRUC_POP
2CE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CE8                STRUC_TOP:   .SET   STRUC_2   
2CE8                STRUC_2:   .SET   STRUC_3   
2CE8                STRUC_3:   .SET   STRUC_4   
2CE8                STRUC_4:   .SET   STRUC_5   
2CE8                STRUC_5:   .SET   STRUC_6   
2CE8                STRUC_6:   .SET   STRUC_7   
2CE8                STRUC_7:   .SET   STRUC_8   
2CE8                STRUC_8:   .SET   STRUC_9   
2CE8                STRUC_9:   .SET   STRUC_10   
2CE8                STRUC_10:   .SET   STRUC_11   
2CE8                STRUC_11:   .SET   STRUC_12   
2CE8                STRUC_12:   .SET   0   
2CE8                          ;*Macro unroll: INTERPRET
2CE8   CF                     RST   $08   
2CE9   3F 0B                  DW   interpret   
2CEB   77 0E                  DW   exit_forth   
2CED                          ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
2CED   CD 8E 09               CALL   printNum   
2CF0                          ;*Macro unroll:  loadWord H,L, B,C
2CF0   69                     LD   L,C   
2CF1   60                     LD   H,B   
2CF2   69                     LD   L,C   
2CF3                          ;*Macro unroll:  ppop0 B,C
2CF3   DD 2B                  DEC   IX   
2CF5   DD 46 00               LD   B,(IX+0)   
2CF8   DD 2B                  DEC   IX   
2CFA   DD 4E 00               LD   C,(IX+0)   
2CFD                          ;*Macro unroll:  CMP16 10
2CFD   11 0A 00               LD   DE,10   
2D00   B7                     OR   A   
2D01   ED 52                  SBC   HL,DE   
2D03                          ;*Macro unroll:  checkZeroWord H,L
2D03   7D                     LD   A,L   
2D04   B4                     OR   H   
2D05   CA 2C 2D               JP   z,tf_doneM_2516S10   
2D08   11 DB 0F               LD   DE,FAILED   
2D0B   CD 43 11               CALL   printPStr   
2D0E   11 18 2D               LD   DE,te_failM_2516S10   
2D11   CD 43 11               CALL   printPStr   
2D14   76                     HALT      
2D15                          ;*Macro unroll:  _skip
2D15   C3 15 2D               JP   $   
2D18                          ;*Macro unroll:  STRUC_PUSH $
2D18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D18                STRUC_12:   .SET   STRUC_11   
2D18                STRUC_11:   .SET   STRUC_10   
2D18                STRUC_10:   .SET   STRUC_9   
2D18                STRUC_9:   .SET   STRUC_8   
2D18                STRUC_8:   .SET   STRUC_7   
2D18                STRUC_7:   .SET   STRUC_6   
2D18                STRUC_6:   .SET   STRUC_5   
2D18                STRUC_5:   .SET   STRUC_4   
2D18                STRUC_4:   .SET   STRUC_3   
2D18                STRUC_3:   .SET   STRUC_2   
2D18                STRUC_2:   .SET   STRUC_TOP   
2D18                STRUC_TOP:   .SET   $   
2D18                TE_FAILM_2516S10:      
2D18   13 31 30 20 61 62 73 20 2D 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs -10 to be 10"   
2D2C                          ;*Macro unroll:  _endskip
2D2C                          ;*Macro unroll:  STRUC_FWD
2D2C                CUR_ADR:   .SET   $   
2D16                          .ORG   STRUC_TOP - 2   
2D16   2C 2D                  DW   CUR_ADR   
2D2C                          .ORG   CUR_ADR   
2D2C                          ;*Macro unroll:  STRUC_POP
2D2C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D2C                STRUC_TOP:   .SET   STRUC_2   
2D2C                STRUC_2:   .SET   STRUC_3   
2D2C                STRUC_3:   .SET   STRUC_4   
2D2C                STRUC_4:   .SET   STRUC_5   
2D2C                STRUC_5:   .SET   STRUC_6   
2D2C                STRUC_6:   .SET   STRUC_7   
2D2C                STRUC_7:   .SET   STRUC_8   
2D2C                STRUC_8:   .SET   STRUC_9   
2D2C                STRUC_9:   .SET   STRUC_10   
2D2C                STRUC_10:   .SET   STRUC_11   
2D2C                STRUC_11:   .SET   STRUC_12   
2D2C                STRUC_12:   .SET   0   
2D2C                TF_DONEM_2516S10:      
2D2C                          ;*Macro unroll: TEST_SET_TEXT "10 abs"
2D2C   2A 45 30               LD   HL,(lineBufStart)   
2D2F   22 4B 30               LD   (lineBufTop),HL   
2D32   22 49 30               LD   (currkey),HL   
2D35   21 3E 2D               LD   HL,tst_textM_2517S12   
2D38   22 61 32               LD   (char_pointer),HL   
2D3B                          ;*Macro unroll:  _skip
2D3B   C3 3B 2D               JP   $   
2D3E                          ;*Macro unroll:  STRUC_PUSH $
2D3E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D3E                STRUC_12:   .SET   STRUC_11   
2D3E                STRUC_11:   .SET   STRUC_10   
2D3E                STRUC_10:   .SET   STRUC_9   
2D3E                STRUC_9:   .SET   STRUC_8   
2D3E                STRUC_8:   .SET   STRUC_7   
2D3E                STRUC_7:   .SET   STRUC_6   
2D3E                STRUC_6:   .SET   STRUC_5   
2D3E                STRUC_5:   .SET   STRUC_4   
2D3E                STRUC_4:   .SET   STRUC_3   
2D3E                STRUC_3:   .SET   STRUC_2   
2D3E                STRUC_2:   .SET   STRUC_TOP   
2D3E                STRUC_TOP:   .SET   $   
2D3E                TST_TEXTM_2517S12:      
2D3E   31 30 20 61 62 73 0D 0A FF 0D 0A DB   "10 abs","\r\n",-1,"\r\n"   
2D49                          ;*Macro unroll:  _endskip
2D49                          ;*Macro unroll:  STRUC_FWD
2D49                CUR_ADR:   .SET   $   
2D3C                          .ORG   STRUC_TOP - 2   
2D3C   49 2D                  DW   CUR_ADR   
2D49                          .ORG   CUR_ADR   
2D49                          ;*Macro unroll:  STRUC_POP
2D49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D49                STRUC_TOP:   .SET   STRUC_2   
2D49                STRUC_2:   .SET   STRUC_3   
2D49                STRUC_3:   .SET   STRUC_4   
2D49                STRUC_4:   .SET   STRUC_5   
2D49                STRUC_5:   .SET   STRUC_6   
2D49                STRUC_6:   .SET   STRUC_7   
2D49                STRUC_7:   .SET   STRUC_8   
2D49                STRUC_8:   .SET   STRUC_9   
2D49                STRUC_9:   .SET   STRUC_10   
2D49                STRUC_10:   .SET   STRUC_11   
2D49                STRUC_11:   .SET   STRUC_12   
2D49                STRUC_12:   .SET   0   
2D49                          ;*Macro unroll: INTERPRET
2D49   CF                     RST   $08   
2D4A   3F 0B                  DW   interpret   
2D4C   77 0E                  DW   exit_forth   
2D4E                          ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
2D4E   CD 8E 09               CALL   printNum   
2D51                          ;*Macro unroll:  loadWord H,L, B,C
2D51   69                     LD   L,C   
2D52   60                     LD   H,B   
2D53   69                     LD   L,C   
2D54                          ;*Macro unroll:  ppop0 B,C
2D54   DD 2B                  DEC   IX   
2D56   DD 46 00               LD   B,(IX+0)   
2D59   DD 2B                  DEC   IX   
2D5B   DD 4E 00               LD   C,(IX+0)   
2D5E                          ;*Macro unroll:  CMP16 10
2D5E   11 0A 00               LD   DE,10   
2D61   B7                     OR   A   
2D62   ED 52                  SBC   HL,DE   
2D64                          ;*Macro unroll:  checkZeroWord H,L
2D64   7D                     LD   A,L   
2D65   B4                     OR   H   
2D66   CA 8C 2D               JP   z,tf_doneM_2519S14   
2D69   11 DB 0F               LD   DE,FAILED   
2D6C   CD 43 11               CALL   printPStr   
2D6F   11 79 2D               LD   DE,te_failM_2519S14   
2D72   CD 43 11               CALL   printPStr   
2D75   76                     HALT      
2D76                          ;*Macro unroll:  _skip
2D76   C3 76 2D               JP   $   
2D79                          ;*Macro unroll:  STRUC_PUSH $
2D79                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D79                STRUC_12:   .SET   STRUC_11   
2D79                STRUC_11:   .SET   STRUC_10   
2D79                STRUC_10:   .SET   STRUC_9   
2D79                STRUC_9:   .SET   STRUC_8   
2D79                STRUC_8:   .SET   STRUC_7   
2D79                STRUC_7:   .SET   STRUC_6   
2D79                STRUC_6:   .SET   STRUC_5   
2D79                STRUC_5:   .SET   STRUC_4   
2D79                STRUC_4:   .SET   STRUC_3   
2D79                STRUC_3:   .SET   STRUC_2   
2D79                STRUC_2:   .SET   STRUC_TOP   
2D79                STRUC_TOP:   .SET   $   
2D79                TE_FAILM_2519S14:      
2D79   12 31 30 20 61 62 73 20 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs 10 to be 10"   
2D8C                          ;*Macro unroll:  _endskip
2D8C                          ;*Macro unroll:  STRUC_FWD
2D8C                CUR_ADR:   .SET   $   
2D77                          .ORG   STRUC_TOP - 2   
2D77   8C 2D                  DW   CUR_ADR   
2D8C                          .ORG   CUR_ADR   
2D8C                          ;*Macro unroll:  STRUC_POP
2D8C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D8C                STRUC_TOP:   .SET   STRUC_2   
2D8C                STRUC_2:   .SET   STRUC_3   
2D8C                STRUC_3:   .SET   STRUC_4   
2D8C                STRUC_4:   .SET   STRUC_5   
2D8C                STRUC_5:   .SET   STRUC_6   
2D8C                STRUC_6:   .SET   STRUC_7   
2D8C                STRUC_7:   .SET   STRUC_8   
2D8C                STRUC_8:   .SET   STRUC_9   
2D8C                STRUC_9:   .SET   STRUC_10   
2D8C                STRUC_10:   .SET   STRUC_11   
2D8C                STRUC_11:   .SET   STRUC_12   
2D8C                STRUC_12:   .SET   0   
2D8C                TF_DONEM_2519S14:      
2D8C                             ; TEST_SET_TEXT "100 buffer: xvar"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar pack"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar count dup"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "str len = 3"
2D8C                             ; TEST_SET_TEXT "type"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "x1"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
2D8C                             ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "select"
2D8C                             ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 5, "Loop until limit < 5"
2D8C                             ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "0 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "define: q 0 = 200"
2D8C                             ; TEST_SET_TEXT "1 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 100, "define: q 1 = 100"
2D8C                             ; rst $08
2D8C                             ; dw litstr
2D8C                             ; .pstr "Expected parse error"
2D8C                             ; dw type
2D8C                             ; dw exit_forth
2D8C                             ; ppushValue 999
2D8C                             ; TEST_SET_TEXT "$$123"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 999, "interpret $$123"
2D8C                          ;*Macro unroll:  PRINT_STR DONE
2D8C                          ;*Macro unroll:  ppush0 D,E
2D8C   DD 73 00               LD   (IX+0),E   
2D8F   DD 23                  INC   IX   
2D91   DD 72 00               LD   (IX+0),D   
2D94   DD 23                  INC   IX   
2D96   11 D0 0F               LD   DE,DONE   
2D99   CD 43 11               CALL   printPStr   
2D9C                          ;*Macro unroll:  ppop0 D,E
2D9C   DD 2B                  DEC   IX   
2D9E   DD 56 00               LD   D,(IX+0)   
2DA1   DD 2B                  DEC   IX   
2DA3   DD 5E 00               LD   E,(IX+0)   
2DA6   76                     HALT      
2DA7                          ENDIF      
2DA7                          DS   RET_STACK_SIZE   ; return stack size
2EA7                RET_STACK:      ; return stack, grows down
2EA7                RPP:         ; RP0 grows down (into TIBB)
2EA7                DATA_STACK:      
2EA7                          DS   DATA_STACK_SIZE   ; TODO: change remove double data stack size
2FA7                SPP:         ; SP0 (should) grow down
2FA7                          ALIGN   $100   
3000                SERBUF:   DS   SER_BUFSIZE   
303F   00 00        SERINPTR:   DW   0   
3041   00 00        SERRDPTR:   DW   0   
3043   00 00        SERBUFUSED:   DW   0   
3045   00 00        LINEBUFSTART:   DW   0   
3047   00 00        LINEBUFSIZE:   DW   0   
3049   00 00        CURRKEY:   DW   0   
304B   00 00        LINEBUFTOP:   DW   0   
304D                LINEBUF:   DS   LINE_BUFSIZE   
30CD                WORDBUF:   DS   64   
310D                WORDBUF2:   DS   64   
314D                VAR_PAD:   DS   PAD_SIZE   
324D   00 00        EXITADDR:   DW   0   
324F   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
3251   00 00        VAR_HERE:   DW   0   
3253   00 00        VAR_INTP_STOP:   DW   0   
3255   00 00        VAR_STATE:   DW   0   
3257   00 00        VAR_NESTING:   DW   0   
3259   00 00        VAR_SP0:   DW   0   ;PAR_STACK
325B   00 00        VAR_BASE:   DW   0   
325D   00 00        VAR_LATEST_STR:   DW   0   
325F   00 00        VAR_LATEST:   DW   0   
3261                          IF   TESTMODE   
3261                             ; used for mocking getc
3261   00 00        CHAR_POINTER:   DW   0   
3263                          ENDIF      
3263                START_USER:      ; user allocated data starts here


TESTMODE:           0001 DEFINED AT LINE 3
MEM_SIZE:           10000 DEFINED AT LINE 1 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
ROM_SIZE:           2000 DEFINED AT LINE 2 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 3 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
BM:                 0000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
EM:                 10000 DEFINED AT LINE 6 IN constants.z80
START_ROM:          0000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 14
END_ROM:            2000 DEFINED AT LINE 9 IN constants.z80
START_RAM:          2000 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
                    > USED AT LINE 63
END_RAM:            10000 DEFINED AT LINE 12 IN constants.z80
RET_STACK_SIZE:     0100 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 2 IN variables.z80
DATA_STACK_SIZE:    0100 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 7 IN variables.z80
PAD_SIZE:           0100 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 35 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 11 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 52 IN core-serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 20 IN constants.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 16 IN core-serial.z80
                    > USED AT LINE 19 IN variables.z80
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 26
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
MSK_HIDDEN:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 104 IN core-compiler.z80
                    > USED AT LINE 26
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
MSK_LENGTH:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 26
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
                    > USED AT LINE 48 IN core-compiler.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 8 IN core-extra.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN core-serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 23 IN core-kernel.z80
                    > USED AT LINE 19 IN core-serial.z80
LINK:               1411 DEFINED AT LINE 9
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
STRUC_COUNT:        2D8B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        140C DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
CPL_COUNT:          13CF DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 15
RST08:              0008 DEFINED AT LINE 20
RST38:              0038 DEFINED AT LINE 24
RST66:              0066 DEFINED AT LINE 28
START:              0067 DEFINED AT LINE 31
                    > USED AT LINE 17
HEADER_ZLESS:       0073 DEFINED AT LINE 6
                    > USED AT LINE 9
ZLESS:              0078 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
                    > USED AT LINE 167 IN core-alu.z80
                    > USED AT LINE 209 IN core-alu.z80
HEADER_ANDD:        0080 DEFINED AT LINE 6
                    > USED AT LINE 9
ANDD:               0086 DEFINED AT LINE 13
                    > USED AT LINE 5 IN core-extra.z80
                    > USED AT LINE 18 IN core-extra.z80
                    > USED AT LINE 29 IN core-extra.z80
HEADER_ORR:         0099 DEFINED AT LINE 6
                    > USED AT LINE 9
ORR:                009E DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-interpreter.z80
                    > USED AT LINE 210 IN core-interpreter.z80
HEADER_XORR:        00B1 DEFINED AT LINE 6
                    > USED AT LINE 9
XORR:               00B7 DEFINED AT LINE 13
                    > USED AT LINE 82 IN core-alu.z80
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 162 IN core-alu.z80
                    > USED AT LINE 208 IN core-alu.z80
HEADER_PLUS:        00CA DEFINED AT LINE 6
                    > USED AT LINE 9
PLUS:               00CE DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 19 IN core-interpreter.z80
HEADER_INVER:       00DE DEFINED AT LINE 6
                    > USED AT LINE 9
INVER:              00E4 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 63 IN core-alu.z80
HEADER_NEGAT:       00ED DEFINED AT LINE 6
                    > USED AT LINE 9
NEGAT:              00F6 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 75 IN core-alu.z80
                    > USED AT LINE 175 IN core-alu.z80
                    > USED AT LINE 180 IN core-alu.z80
                    > USED AT LINE 211 IN core-alu.z80
HEADER_DNEGA:       00FD DEFINED AT LINE 6
                    > USED AT LINE 9
DNEGA:              0107 DEFINED AT LINE 13
HEADER_SUBB:        011A DEFINED AT LINE 6
                    > USED AT LINE 9
SUBB:               011E DEFINED AT LINE 13
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 6 IN core-utilities.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_ABS:         0125 DEFINED AT LINE 6
                    > USED AT LINE 9
ABS:                012B DEFINED AT LINE 13
                    > USED AT LINE 170 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
ABS1:               0136 DEFINED AT LINE 76 IN core-alu.z80
HEADER_EQUAL:       0138 DEFINED AT LINE 6
                    > USED AT LINE 9
EQUAL:              013C DEFINED AT LINE 13
EQU1:               0149 DEFINED AT LINE 85 IN core-alu.z80
                    > USED AT LINE 83 IN core-alu.z80
HEADER_ULESS:       014F DEFINED AT LINE 6
                    > USED AT LINE 9
ULESS:              0154 DEFINED AT LINE 13
ULES1:              0167 DEFINED AT LINE 95 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
HEADER_LESS:        016D DEFINED AT LINE 6
                    > USED AT LINE 9
LESS:               0171 DEFINED AT LINE 13
                    > USED AT LINE 111 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
LESS1:              0182 DEFINED AT LINE 104 IN core-alu.z80
HEADER_GREATERTHAN: 0188 DEFINED AT LINE 6
                    > USED AT LINE 9
GREATERTHAN:        018C DEFINED AT LINE 13
HEADER_MAX:         01A4 DEFINED AT LINE 6
                    > USED AT LINE 9
MAX:                01AA DEFINED AT LINE 13
MAX1:               01B5 DEFINED AT LINE 118 IN core-alu.z80
HEADER_MIN:         01B9 DEFINED AT LINE 6
                    > USED AT LINE 9
MIN:                01BF DEFINED AT LINE 13
MIN1:               01CC DEFINED AT LINE 127 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
HEADER_WITHI:       01D0 DEFINED AT LINE 6
                    > USED AT LINE 9
WITHI:              01D9 DEFINED AT LINE 13
HEADER_UPLUS:       01E8 DEFINED AT LINE 6
                    > USED AT LINE 9
UPLUS:              01EE DEFINED AT LINE 13
UMP2:               0208 DEFINED AT LINE 145 IN core-alu.z80
UMP1:               0209 DEFINED AT LINE 147 IN core-alu.z80
                    > USED AT LINE 144 IN core-alu.z80
HEADER_USLASHMOD:   020C DEFINED AT LINE 6
                    > USED AT LINE 9
USLASHMOD:          0214 DEFINED AT LINE 13
                    > USED AT LINE 171 IN core-alu.z80
HEADER_SLASHMOD:    0230 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASHMOD:           0237 DEFINED AT LINE 13
                    > USED AT LINE 186 IN core-alu.z80
                    > USED AT LINE 190 IN core-alu.z80
CUR_ADR:            2D8C DEFINED AT LINE 63
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
HEADER_MOD:         026B DEFINED AT LINE 6
                    > USED AT LINE 9
MOD:                0271 DEFINED AT LINE 13
HEADER_SLASH:       0278 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASH:              027C DEFINED AT LINE 13
HEADER_USTAR:       0285 DEFINED AT LINE 6
                    > USED AT LINE 9
USTAR:              028A DEFINED AT LINE 13
                    > USED AT LINE 206 IN core-alu.z80
HEADER_STAR:        02A4 DEFINED AT LINE 6
                    > USED AT LINE 9
STAR:               02A8 DEFINED AT LINE 13
NEGATENUM:          02C8 DEFINED AT LINE 220 IN core-alu.z80
                    > USED AT LINE 47 IN core-format.z80
                    > USED AT LINE 165 IN core-format.z80
DIVIDEWORDBYBYTE:   02D0 DEFINED AT LINE 237 IN core-alu.z80
                    > USED AT LINE 53 IN core-format.z80
L_M_818S240:        02D8 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_821S243:        02E0 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_826S248:        02EC DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   02F1 DEFINED AT LINE 263 IN core-alu.z80
                    > USED AT LINE 154 IN core-alu.z80
L_M_844S268:        02FD DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_848S272:        0308 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_858S282:        0317 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_862S286:        0322 DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   032B DEFINED AT LINE 305 IN core-alu.z80
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 123 IN core-format.z80
                    > USED AT LINE 153 IN core-format.z80
L_M_883S309:        0336 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_888S314:        0344 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_CELLP:       034D DEFINED AT LINE 6
                    > USED AT LINE 9
CELLP:              0355 DEFINED AT LINE 13
HEADER_CELLM:       0358 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLM:              0360 DEFINED AT LINE 13
HEADER_CELLS:       0363 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLS:              036B DEFINED AT LINE 13
HEADER_ZEQUAL:      036E DEFINED AT LINE 6
                    > USED AT LINE 9
ZEQUAL:             0373 DEFINED AT LINE 13
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 161 IN core-compiler.z80
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 187 IN core-interpreter.z80
                    > USED AT LINE 206 IN core-interpreter.z80
                    > USED AT LINE 91
L_M_906S336:        037B DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ZNEQU:       0382 DEFINED AT LINE 6
                    > USED AT LINE 9
ZNEQU:              0388 DEFINED AT LINE 13
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 174 IN core-interpreter.z80
L_M_913S344:        0390 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ONEP:        0396 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEP:               039B DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_ONEM:        039F DEFINED AT LINE 6
                    > USED AT LINE 9
ONEM:               03A4 DEFINED AT LINE 13
HEADER_TWOP:        03A8 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOP:               03AD DEFINED AT LINE 13
                    > USED AT LINE 324 IN core-alu.z80
HEADER_TWOM:        03B2 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOM:               03B7 DEFINED AT LINE 13
                    > USED AT LINE 327 IN core-alu.z80
HEADER_TWOST:       03BC DEFINED AT LINE 6
                    > USED AT LINE 9
TWOST:              03C1 DEFINED AT LINE 13
                    > USED AT LINE 331 IN core-alu.z80
HEADER_TWOSLASH:    03C8 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSLASH:           03CD DEFINED AT LINE 13
HEADER_COLON:       03D4 DEFINED AT LINE 6
                    > USED AT LINE 9
COLON:              03D8 DEFINED AT LINE 13
HEADER_SEMICOLON:   03FC DEFINED AT LINE 6
                    > USED AT LINE 9
SEMICOLON:          0400 DEFINED AT LINE 13
HEADER_COLONNONAME: 0414 DEFINED AT LINE 6
                    > USED AT LINE 9
COLONNONAME:        041E DEFINED AT LINE 13
HEADER_VARIABLE:    0430 DEFINED AT LINE 6
                    > USED AT LINE 9
VARIABLE:           043B DEFINED AT LINE 13
HEADER_BUFFERCOLON: 0451 DEFINED AT LINE 6
                    > USED AT LINE 9
BUFFERCOLON:        045B DEFINED AT LINE 13
HEADER_CREATE:      046B DEFINED AT LINE 6
                    > USED AT LINE 9
CREATE:             0474 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-compiler.z80
                    > USED AT LINE 69 IN core-compiler.z80
XCREATE:            049E DEFINED AT LINE 51 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
HEADER_DOES:        04A6 DEFINED AT LINE 6
                    > USED AT LINE 9
DOES:               04AE DEFINED AT LINE 13
HEADER_CONSTANT:    04D4 DEFINED AT LINE 6
                    > USED AT LINE 9
CONSTANT:           04DF DEFINED AT LINE 13
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
HEADER_TICK:        04F0 DEFINED AT LINE 6
                    > USED AT LINE 9
TICK:               04F4 DEFINED AT LINE 13
HEADER_IMMEDIATE:   050E DEFINED AT LINE 6
                    > USED AT LINE 9
IMMEDIATE:          051A DEFINED AT LINE 13
HEADER_FIND:        0526 DEFINED AT LINE 6
                    > USED AT LINE 9
FIND:               052D DEFINED AT LINE 13
HEADER_HIDDEN:      053F DEFINED AT LINE 6
                    > USED AT LINE 9
HIDDEN:             0548 DEFINED AT LINE 13
HEADER_LBRAC:       055D DEFINED AT LINE 6
                    > USED AT LINE 9
LBRAC:              0561 DEFINED AT LINE 13
                    > USED AT LINE 16 IN core-compiler.z80
HEADER_RBRAC:       056A DEFINED AT LINE 6
                    > USED AT LINE 9
RBRAC:              056E DEFINED AT LINE 13
                    > USED AT LINE 9 IN core-compiler.z80
                    > USED AT LINE 23 IN core-compiler.z80
DODOES:             0577 DEFINED AT LINE 118 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
XDOES:              0587 DEFINED AT LINE 125 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
HEADER_POSTPONE:    05A1 DEFINED AT LINE 6
                    > USED AT LINE 9
POSTPONE:           05AC DEFINED AT LINE 13
POSTPONETOKEN:      05CA DEFINED AT LINE 145 IN core-compiler.z80
                    > USED AT LINE 141 IN core-compiler.z80
POSTPONEWORD:       05E6 DEFINED AT LINE 156 IN core-compiler.z80
                    > USED AT LINE 150 IN core-compiler.z80
POSTPONELITERAL:    0622 DEFINED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
HEADER_IF:          0653 DEFINED AT LINE 6
                    > USED AT LINE 9
IF:                 0658 DEFINED AT LINE 13
HEADER_ELSE:        066E DEFINED AT LINE 6
                    > USED AT LINE 9
ELSE:               0675 DEFINED AT LINE 13
HEADER_ENDIF:       068F DEFINED AT LINE 6
                    > USED AT LINE 9
ENDIF:              0697 DEFINED AT LINE 13
XENDIF:             06A1 DEFINED AT LINE 23 IN core-control.z80
                    > USED AT LINE 14 IN core-control.z80
                    > USED AT LINE 19 IN core-control.z80
HEADER_BEGIN:       06B5 DEFINED AT LINE 6
                    > USED AT LINE 9
BEGIN:              06BD DEFINED AT LINE 13
HEADER_WHILE:       06C9 DEFINED AT LINE 6
                    > USED AT LINE 9
WHILE:              06D1 DEFINED AT LINE 13
HEADER_REPEAT:      06E7 DEFINED AT LINE 6
                    > USED AT LINE 9
REPEAT:             06F0 DEFINED AT LINE 13
HEADER_QBRAN:       0716 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN:              0720 DEFINED AT LINE 13
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 91
HEADER_BRAN:        0734 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN:               073D DEFINED AT LINE 13
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 60 IN core-control.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
HEADER_QBRAN1:      0746 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN1:             0751 DEFINED AT LINE 13
                    > USED AT LINE 83 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
HEADER_BRAN1:       0765 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN1:              076F DEFINED AT LINE 13
                    > USED AT LINE 79 IN core-control.z80
HEADER_VERSION:     0777 DEFINED AT LINE 6
                    > USED AT LINE 9
VERSION:            0781 DEFINED AT LINE 13
HEADER_RZ:          0791 DEFINED AT LINE 6
                    > USED AT LINE 9
RZ:                 0796 DEFINED AT LINE 13
HEADER___MSK_IMMED: 07A6 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_HIDDEN: 07C2 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_LENGTH: 07DF DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER_TRUE:        07FC DEFINED AT LINE 6
                    > USED AT LINE 9
TRUE:               0803 DEFINED AT LINE 13
HEADER_FALSE:       0813 DEFINED AT LINE 6
                    > USED AT LINE 9
FALSE:              081B DEFINED AT LINE 13
HEADER_PAD:         082B DEFINED AT LINE 6
                    > USED AT LINE 9
PAD:                0831 DEFINED AT LINE 13
HEADER_HERE:        0841 DEFINED AT LINE 6
                    > USED AT LINE 9
HERE:               0848 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 48 IN core-memory.z80
HEADER_INTP_STOP:   0858 DEFINED AT LINE 6
                    > USED AT LINE 9
INTP_STOP:          0864 DEFINED AT LINE 13
HEADER_STATE:       0874 DEFINED AT LINE 6
                    > USED AT LINE 9
STATE:              087C DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
HEADER_NESTING:     088C DEFINED AT LINE 6
                    > USED AT LINE 9
NESTING:            0896 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
HEADER_SP0:         08A6 DEFINED AT LINE 6
                    > USED AT LINE 9
SP0:                08AC DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
HEADER_BASE:        08BC DEFINED AT LINE 6
                    > USED AT LINE 9
BASE:               08C3 DEFINED AT LINE 13
HEADER_LATESTSTR:   08D3 DEFINED AT LINE 6
                    > USED AT LINE 9
LATESTSTR:          08DF DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 33 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
HEADER_LBRACE:      08EF DEFINED AT LINE 6
                    > USED AT LINE 9
LBRACE:             08F3 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-control.z80
                    > USED AT LINE 34 IN core-control.z80
HEADER_RBRACE:      0917 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACE:             091B DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-extra.z80
HEADER_RBRACEEXEC:  093B DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACEEXEC:         0943 DEFINED AT LINE 13
                    > USED AT LINE 20 IN core-control.z80
                    > USED AT LINE 53 IN core-control.z80
HEADER_DOT:         0965 DEFINED AT LINE 6
                    > USED AT LINE 9
DOT:                0969 DEFINED AT LINE 13
PRINTNUM:           098E DEFINED AT LINE 18 IN core-format.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
FORMATNUM:          09A7 DEFINED AT LINE 39 IN core-format.z80
                    > USED AT LINE 9 IN core-format.z80
                    > USED AT LINE 26 IN core-format.z80
L_M_1273S42:        09AF DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1281S51:        09BD DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1290S60:        09D1 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1294S64:        09DC DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           09EC DEFINED AT LINE 87 IN core-format.z80
                    > USED AT LINE 174 IN core-format.z80
L_M_1322S97:        0A00 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1332S107:       0A12 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1338S113:       0A20 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1354S130:       0A3B DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1358S134:       0A47 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0A72 DEFINED AT LINE 160 IN core-format.z80
                    > USED AT LINE 132 IN core-format.z80
L_M_1384S163:       0A7B DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_NUMBER:      0A84 DEFINED AT LINE 6
                    > USED AT LINE 9
NUMBER:             0A8D DEFINED AT LINE 13
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 206 IN core-interpreter.z80
HEADER_DECIMAL:     0AA7 DEFINED AT LINE 6
                    > USED AT LINE 9
DECIMAL:            0AB1 DEFINED AT LINE 13
HEADER_HEX:         0ABF DEFINED AT LINE 6
                    > USED AT LINE 9
HEX:                0AC5 DEFINED AT LINE 13
HEADER_QUIT:        0AD3 DEFINED AT LINE 6
                    > USED AT LINE 9
QUIT:               0ADA DEFINED AT LINE 13
HEADER_WORD:        0AE8 DEFINED AT LINE 6
                    > USED AT LINE 9
WORD:               0AEF DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_TCFA:        0AFF DEFINED AT LINE 6
                    > USED AT LINE 9
TCFA:               0B06 DEFINED AT LINE 13
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 189 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_EXECUTE:     0B1C DEFINED AT LINE 6
                    > USED AT LINE 9
EXECUTE:            0B26 DEFINED AT LINE 13
                    > USED AT LINE 33 IN core-extra.z80
                    > USED AT LINE 196 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_INTERPRET:   0B33 DEFINED AT LINE 6
                    > USED AT LINE 9
INTERPRET:          0B3F DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-interpreter.z80
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
LOOKUP:             0B6A DEFINED AT LINE 47 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-compiler.z80
L_M_1449S49:        0B73 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1461S65:        0B83 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1470S76:        0B92 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_XWORD:       0B9F DEFINED AT LINE 6
                    > USED AT LINE 9
XWORD:              0BA7 DEFINED AT LINE 13
                    > USED AT LINE 11 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-strings.z80
XWORDSKIP:          0BB0 DEFINED AT LINE 97 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-interpreter.z80
L_M_1494S103:       0BEB DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1496S106:       0BF3 DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1498S109:       0BFB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1504S116:       0C0A DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1505S117:       0C0F DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1508S120:       0C1A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1515S128:       0C2C DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1518S132:       0C37 DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0C44 DEFINED AT LINE 144 IN core-interpreter.z80
                    > USED AT LINE 94 IN core-interpreter.z80
L_M_1534S151:       0C70 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1538S155:       0C78 DEFINED AT LINE 73
                    > USED AT LINE 70
INTERPTOKEN:        0C8E DEFINED AT LINE 171 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-interpreter.z80
INTERPWORD:         0CAA DEFINED AT LINE 182 IN core-interpreter.z80
                    > USED AT LINE 176 IN core-interpreter.z80
INTERPLITERAL:      0CEE DEFINED AT LINE 203 IN core-interpreter.z80
                    > USED AT LINE 178 IN core-interpreter.z80
NESTPLUS:           0D2D DEFINED AT LINE 223 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-extra.z80
NESTMINUS:          0D37 DEFINED AT LINE 229 IN core-interpreter.z80
                    > USED AT LINE 15 IN core-extra.z80
HEADER_TYPE:        0D41 DEFINED AT LINE 6
                    > USED AT LINE 9
TYPE:               0D48 DEFINED AT LINE 13
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 219 IN core-interpreter.z80
                    > USED AT LINE 54 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
HEADER_CR:          0D62 DEFINED AT LINE 6
                    > USED AT LINE 9
CR:                 0D67 DEFINED AT LINE 13
HEADER_ACCEPT:      0D6D DEFINED AT LINE 6
                    > USED AT LINE 9
ACCEPT:             0D76 DEFINED AT LINE 13
HEADER_KEY:         0D92 DEFINED AT LINE 6
                    > USED AT LINE 9
KEY:                0D98 DEFINED AT LINE 13
HEADER_EMIT:        0DA1 DEFINED AT LINE 6
                    > USED AT LINE 9
EMIT:               0DA8 DEFINED AT LINE 13
HEADER_QKEY:        0DB9 DEFINED AT LINE 6
                    > USED AT LINE 9
QKEY:               0DC0 DEFINED AT LINE 13
L_M_1639S33:        0DD6 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_BL:          0DDC DEFINED AT LINE 6
                    > USED AT LINE 9
BL:                 0DE1 DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_PRINT:       0DEB DEFINED AT LINE 6
                    > USED AT LINE 9
PRINT:              0DF3 DEFINED AT LINE 13
HEADER_DOTQUOTE:    0E05 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTQUOTE:           0E0A DEFINED AT LINE 13
INITFORTH:          0E28 DEFINED AT LINE 1 IN core-kernel.z80
                    > USED AT LINE 34
ENTER:              0E63 DEFINED AT LINE 29 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 3 IN core-kernel.z80
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
ENTER1:             0E64 DEFINED AT LINE 31 IN core-kernel.z80
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
FORTH:              0E6B DEFINED AT LINE 40 IN core-kernel.z80
EXIT:               0E74 DEFINED AT LINE 47 IN core-kernel.z80
                    > USED AT LINE 77 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
EXIT_FORTH:         0E77 DEFINED AT LINE 51 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
HEADER_NOOP:        0E78 DEFINED AT LINE 6
                    > USED AT LINE 9
NOOP:               0E7F DEFINED AT LINE 13
HEADER_STORE:       0E82 DEFINED AT LINE 6
                    > USED AT LINE 9
STORE:              0E86 DEFINED AT LINE 13
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 33 IN core-strings.z80
HEADER_FETCH:       0EA3 DEFINED AT LINE 6
                    > USED AT LINE 9
FETCH:              0EA7 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_CSTORE:      0EB0 DEFINED AT LINE 6
                    > USED AT LINE 9
CSTORE:             0EB5 DEFINED AT LINE 13
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
HEADER_CFETCH:      0ECF DEFINED AT LINE 6
                    > USED AT LINE 9
CFETCH:             0ED4 DEFINED AT LINE 13
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_RSPSTORE:    0EDB DEFINED AT LINE 6
                    > USED AT LINE 9
RSPSTORE:           0EE2 DEFINED AT LINE 13
HEADER_SPFETCH:     0EF2 DEFINED AT LINE 6
                    > USED AT LINE 9
SPFETCH:            0EF8 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
HEADER_SPSTORE:     0F0A DEFINED AT LINE 6
                    > USED AT LINE 9
SPSTORE:            0F10 DEFINED AT LINE 13
HEADER_ALLOT:       0F22 DEFINED AT LINE 6
                    > USED AT LINE 9
ALLOT:              0F2A DEFINED AT LINE 13
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 40 IN core-strings.z80
HEADER_ADDSTORE:    0F34 DEFINED AT LINE 6
                    > USED AT LINE 9
ADDSTORE:           0F39 DEFINED AT LINE 13
                    > USED AT LINE 48 IN core-memory.z80
HEADER_COMMA:       0F59 DEFINED AT LINE 6
                    > USED AT LINE 9
COMMA:              0F5D DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 194 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
HEADER_CCOMMA:      0F74 DEFINED AT LINE 6
                    > USED AT LINE 9
CCOMMA:             0F79 DEFINED AT LINE 13
TXT_INTRO:          0FA2 DEFINED AT LINE 1 IN core-messages.z80
TXT_NEWLINE:        0FC8 DEFINED AT LINE 3 IN core-messages.z80
                    > USED AT LINE 267 IN core-serial.z80
TXT_PROMPT:         0FCB DEFINED AT LINE 4 IN core-messages.z80
                    > USED AT LINE 52
DONE:               0FD0 DEFINED AT LINE 7 IN core-messages.z80
                    > USED AT LINE 52
FAILED:             0FDB DEFINED AT LINE 8 IN core-messages.z80
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
INITSERIAL:         0FE6 DEFINED AT LINE 3 IN core-serial.z80
                    > USED AT LINE 33
SERIALIN:           100F DEFINED AT LINE 25 IN core-serial.z80
                    > USED AT LINE 25
L_M_1803S31:        101B DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1808S36:        1029 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1815S43:        103A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1825S53:        1051 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               1059 DEFINED AT LINE 69 IN core-serial.z80
                    > USED AT LINE 146 IN core-serial.z80
PUTC:               1064 DEFINED AT LINE 115 IN core-serial.z80
                    > USED AT LINE 25 IN core-io.z80
                    > USED AT LINE 154 IN core-serial.z80
                    > USED AT LINE 157 IN core-serial.z80
                    > USED AT LINE 165 IN core-serial.z80
                    > USED AT LINE 190 IN core-serial.z80
                    > USED AT LINE 275 IN core-serial.z80
                    > USED AT LINE 43 IN core-utilities.z80
L_M_1883S117:       106A DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         1078 DEFINED AT LINE 126 IN core-serial.z80
                    > USED AT LINE 31 IN core-io.z80
GETLINE:            107E DEFINED AT LINE 137 IN core-serial.z80
                    > USED AT LINE 14 IN core-io.z80
                    > USED AT LINE 215 IN core-serial.z80
L_M_1907S144:       10A4 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1908S145:       10A9 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1911S148:       10B4 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1913S150:       10BC DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1927S164:       10D9 DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       10EB DEFINED AT LINE 177 IN core-serial.z80
                    > USED AT LINE 169 IN core-serial.z80
                    > USED AT LINE 171 IN core-serial.z80
                    > USED AT LINE 174 IN core-serial.z80
PRINTROUTINE:       10FA DEFINED AT LINE 187 IN core-serial.z80
                    > USED AT LINE 244 IN core-serial.z80
                    > USED AT LINE 259 IN core-serial.z80
L_M_1949S188:       10FF DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             110E DEFINED AT LINE 204 IN core-serial.z80
                    > USED AT LINE 104 IN core-interpreter.z80
                    > USED AT LINE 118 IN core-interpreter.z80
                    > USED AT LINE 159 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-io.z80
L_M_1971S212:       1121 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          1143 DEFINED AT LINE 236 IN core-serial.z80
                    > USED AT LINE 45 IN core-io.z80
                    > USED AT LINE 53
                    > USED AT LINE 268 IN core-serial.z80
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 53
PRINTSTR:           1152 DEFINED AT LINE 255 IN core-serial.z80
                    > USED AT LINE 10 IN core-format.z80
                    > USED AT LINE 27 IN core-format.z80
                    > USED AT LINE 3 IN core-io.z80
                    > USED AT LINE 41 IN core-utilities.z80
PRINTCR:            115C DEFINED AT LINE 265 IN core-serial.z80
                    > USED AT LINE 8 IN core-io.z80
                    > USED AT LINE 184 IN core-serial.z80
                    > USED AT LINE 49 IN core-utilities.z80
PRINTSPACE:         1165 DEFINED AT LINE 272 IN core-serial.z80
                    > USED AT LINE 11 IN core-format.z80
                    > USED AT LINE 28 IN core-format.z80
                    > USED AT LINE 155 IN core-serial.z80
                    > USED AT LINE 42 IN core-utilities.z80
HEADER_LIT:         116D DEFINED AT LINE 6
                    > USED AT LINE 9
LIT:                1173 DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-alu.z80
                    > USED AT LINE 64 IN core-alu.z80
                    > USED AT LINE 84 IN core-alu.z80
                    > USED AT LINE 86 IN core-alu.z80
                    > USED AT LINE 5 IN core-compiler.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 28 IN core-compiler.z80
                    > USED AT LINE 48 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 64 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 12 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 42 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 8 IN core-extra.z80
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 182 IN core-format.z80
                    > USED AT LINE 187 IN core-format.z80
                    > USED AT LINE 9 IN core-interpreter.z80
                    > USED AT LINE 16 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 40 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 24 IN core-strings.z80
                    > USED AT LINE 25 IN core-strings.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 29 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
                    > USED AT LINE 37 IN core-strings.z80
                    > USED AT LINE 38 IN core-strings.z80
                    > USED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 16 IN core-utilities.z80
HEADER_ROT:         1185 DEFINED AT LINE 6
                    > USED AT LINE 9
ROT:                118B DEFINED AT LINE 13
                    > USED AT LINE 173 IN core-alu.z80
HEADER_NROT:        11B8 DEFINED AT LINE 6
                    > USED AT LINE 9
NROT:               11BF DEFINED AT LINE 13
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 168 IN core-alu.z80
                    > USED AT LINE 177 IN core-alu.z80
                    > USED AT LINE 207 IN core-alu.z80
HEADER_DUPP:        11EE DEFINED AT LINE 6
                    > USED AT LINE 9
DUPP:               11F4 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 25 IN core-control.z80
                    > USED AT LINE 50 IN core-control.z80
                    > USED AT LINE 31 IN core-extra.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 174 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 11 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_SWAP:        1201 DEFINED AT LINE 6
                    > USED AT LINE 9
SWAP:               1208 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 117 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 126 IN core-alu.z80
                    > USED AT LINE 170 IN core-alu.z80
                    > USED AT LINE 172 IN core-alu.z80
                    > USED AT LINE 178 IN core-alu.z80
                    > USED AT LINE 190 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 13 IN core-control.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 48 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_DROP:        1221 DEFINED AT LINE 6
                    > USED AT LINE 9
DROP:               1228 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 186 IN core-alu.z80
                    > USED AT LINE 206 IN core-alu.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 173 IN core-compiler.z80
                    > USED AT LINE 179 IN core-compiler.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 205 IN core-interpreter.z80
                    > USED AT LINE 216 IN core-interpreter.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 18 IN core-utilities.z80
HEADER_OVER:        1235 DEFINED AT LINE 6
                    > USED AT LINE 9
OVER:               123C DEFINED AT LINE 13
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 161 IN core-alu.z80
                    > USED AT LINE 161 IN core-alu.z80
                    > USED AT LINE 166 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 4 IN core-strings.z80
HEADER_TOR:         125F DEFINED AT LINE 6
                    > USED AT LINE 9
TOR:                1264 DEFINED AT LINE 13
                    > USED AT LINE 63 IN core-alu.z80
                    > USED AT LINE 5 IN core-strings.z80
HEADER_RFROM:       1274 DEFINED AT LINE 6
                    > USED AT LINE 9
RFROM:              1279 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 53 IN core-compiler.z80
                    > USED AT LINE 71 IN core-compiler.z80
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 127 IN core-compiler.z80
                    > USED AT LINE 3 IN core-strings.z80
HEADER_DDROP:       1289 DEFINED AT LINE 6
                    > USED AT LINE 9
DDROP:              1291 DEFINED AT LINE 13
HEADER_DDUP:        1298 DEFINED AT LINE 6
                    > USED AT LINE 9
DDUP:               129F DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
LITSTR:             12A6 DEFINED AT LINE 1 IN core-strings.z80
                    > USED AT LINE 180 IN core-compiler.z80
                    > USED AT LINE 217 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-strings.z80
HEADER_COUNT:       12B8 DEFINED AT LINE 6
                    > USED AT LINE 9
COUNT:              12C0 DEFINED AT LINE 13
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 17 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
                    > USED AT LINE 35 IN core-strings.z80
HEADER_SQUOTE:      12D2 DEFINED AT LINE 6
                    > USED AT LINE 9
SQUOTE:             12D7 DEFINED AT LINE 13
HEADER_QT:          12D9 DEFINED AT LINE 6
                    > USED AT LINE 9
QT:                 12DD DEFINED AT LINE 13
                    > USED AT LINE 51 IN core-io.z80
                    > USED AT LINE 18 IN core-strings.z80
COMPARESTR:         1331 DEFINED AT LINE 53 IN core-strings.z80
                    > USED AT LINE 71 IN core-interpreter.z80
L_M_2140S56:        1339 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2141S57:        133E DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2145S61:        1348 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        1357 DEFINED AT LINE 6
                    > USED AT LINE 9
PACK:               135E DEFINED AT LINE 13
HEADER_DOTS:        137E DEFINED AT LINE 6
                    > USED AT LINE 9
DOTS:               1383 DEFINED AT LINE 13
HEADER_WORDS:       13D5 DEFINED AT LINE 6
                    > USED AT LINE 9
WORDS:              13DD DEFINED AT LINE 13
LISTWORDS:          13E5 DEFINED AT LINE 28 IN core-utilities.z80
                    > USED AT LINE 24 IN core-utilities.z80
L_M_2195S30:        13EE DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_LATEST:      1411 DEFINED AT LINE 6
                    > USED AT LINE 19 IN core-kernel.z80
                    > USED AT LINE 9
LATEST:             141A DEFINED AT LINE 13
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
TESTS_START:        2000 DEFINED AT LINE 67
                    > USED AT LINE 37
TST_TEXTM_2265S7:   2012 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2267S9:   2048 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2269S11:  206F DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2271S13:   20A5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2271S13:   20AD DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2272S15:  20BF DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2274S17:  20E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2276S19:   211F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2276S19:   2127 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2277S21:  2139 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2279S23:  216B DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2281S25:  218A DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2283S28:  21A7 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2285S30:  21DB DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2287S32:  2201 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2289S35:  2220 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2291S37:  2249 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2293S39:   227F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2293S39:   2285 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2295S42:  22A4 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2297S44:   22DC DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2297S44:   22EC DEFINED AT LINE 37
                    > USED AT LINE 26
TE_FAILM_2298S45:   2317 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2298S45:   2329 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2299S47:  233B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2301S49:   2373 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2301S49:   2381 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2302S51:  2393 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2304S53:  23C0 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2306S55:   23F9 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2306S55:   240D DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2307S57:  241F DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2310S60:  2453 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2312S62:  2477 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2314S64:   24B0 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2314S64:   24C2 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2315S66:  24D4 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2318S69:  250A DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2320S71:   2542 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2320S71:   2552 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2323S75:  257E DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2325S78:  25B2 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2327S80:   25EE DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2327S80:   2605 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2329S83:  2624 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2331S85:   2660 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2331S85:   2677 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2332S87:  2689 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2335S92:  26D3 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2337S94:   270F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2337S94:   2719 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2339S98:  2738 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2341S100:  2774 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2341S100:  277E DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2342S102: 2790 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2345S105: 27E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2347S107:  2826 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2347S107:  283B DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2348S110: 284D DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2350S112:  2885 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2350S112:  2899 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2351S114: 28AB DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2353S116:  28E5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2353S116:  28EF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2354S118: 2901 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2358S123: 2940 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2360S125:  2978 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2360S125:  2984 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2361S127: 2996 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2363S130: 2A2C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2365S133: 2A4C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2367S135: 2A77 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2369S137: 2A9B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2371S139:  2AD3 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2371S139:  2ADF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2372S141: 2AF1 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2374S143: 2B13 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2376S145:  2B4B DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2376S145:  2B57 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2377S146: 2B69 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2503S18:  2B89 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2505S20:   2BCA DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2505S20:   2BDA DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2506S22:  2BEC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2508S24:   2C2D DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2508S24:   2C44 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2509S1:   2C56 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2511S3:    2C94 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2511S3:    2CA4 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2512S5:   2CB6 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2514S8:   2CDC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2516S10:   2D18 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2516S10:   2D2C DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2517S12:  2D3E DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2519S14:   2D79 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2519S14:   2D8C DEFINED AT LINE 37
                    > USED AT LINE 26
RET_STACK:          2EA7 DEFINED AT LINE 3 IN variables.z80
                    > USED AT LINE 32
                    > USED AT LINE 26
RPP:                2EA7 DEFINED AT LINE 4 IN variables.z80
DATA_STACK:         2EA7 DEFINED AT LINE 6 IN variables.z80
                    > USED AT LINE 2 IN core-kernel.z80
SPP:                2FA7 DEFINED AT LINE 8 IN variables.z80
SERBUF:             3000 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 7 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 44 IN core-serial.z80
SERINPTR:           303F DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 8 IN core-serial.z80
                    > USED AT LINE 39 IN core-serial.z80
                    > USED AT LINE 46 IN core-serial.z80
SERRDPTR:           3041 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 9 IN core-serial.z80
SERBUFUSED:         3043 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 5 IN core-serial.z80
                    > USED AT LINE 34 IN core-serial.z80
                    > USED AT LINE 49 IN core-serial.z80
                    > USED AT LINE 51 IN core-serial.z80
                    > USED AT LINE 127 IN core-serial.z80
LINEBUFSTART:       3045 DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 12 IN core-serial.z80
                    > USED AT LINE 213 IN core-serial.z80
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
LINEBUFSIZE:        3047 DEFINED AT LINE 16 IN variables.z80
                    > USED AT LINE 17 IN core-serial.z80
                    > USED AT LINE 214 IN core-serial.z80
CURRKEY:            3049 DEFINED AT LINE 17 IN variables.z80
                    > USED AT LINE 13 IN core-serial.z80
                    > USED AT LINE 208 IN core-serial.z80
                    > USED AT LINE 217 IN core-serial.z80
                    > USED AT LINE 222 IN core-serial.z80
                    > USED AT LINE 225 IN core-serial.z80
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
LINEBUFTOP:         304B DEFINED AT LINE 18 IN variables.z80
                    > USED AT LINE 14 IN core-serial.z80
                    > USED AT LINE 209 IN core-serial.z80
                    > USED AT LINE 220 IN core-serial.z80
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
LINEBUF:            304D DEFINED AT LINE 19 IN variables.z80
                    > USED AT LINE 11 IN core-serial.z80
                    > USED AT LINE 216 IN core-serial.z80
WORDBUF:            30CD DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 8 IN core-format.z80
                    > USED AT LINE 25 IN core-format.z80
                    > USED AT LINE 71 IN core-format.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
WORDBUF2:           310D DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 29 IN core-strings.z80
VAR_PAD:            314D DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 19
EXITADDR:           324D DEFINED AT LINE 25 IN variables.z80
                    > USED AT LINE 41 IN core-kernel.z80
                    > USED AT LINE 43 IN core-kernel.z80
IS_LITERAL:         324F DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 9 IN core-kernel.z80
VAR_HERE:           3251 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 17 IN core-kernel.z80
                    > USED AT LINE 64 IN core-memory.z80
                    > USED AT LINE 66 IN core-memory.z80
                    > USED AT LINE 72 IN core-memory.z80
                    > USED AT LINE 75 IN core-memory.z80
VAR_INTP_STOP:      3253 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 8 IN core-kernel.z80
VAR_STATE:          3255 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 110 IN core-compiler.z80
                    > USED AT LINE 115 IN core-compiler.z80
                    > USED AT LINE 19
                    > USED AT LINE 11 IN core-kernel.z80
VAR_NESTING:        3257 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 224 IN core-interpreter.z80
                    > USED AT LINE 226 IN core-interpreter.z80
                    > USED AT LINE 230 IN core-interpreter.z80
                    > USED AT LINE 232 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-kernel.z80
VAR_SP0:            3259 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 4 IN core-kernel.z80
VAR_BASE:           325B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 6 IN core-format.z80
                    > USED AT LINE 23 IN core-format.z80
                    > USED AT LINE 122 IN core-format.z80
                    > USED AT LINE 140 IN core-format.z80
                    > USED AT LINE 152 IN core-format.z80
                    > USED AT LINE 14 IN core-kernel.z80
VAR_LATEST_STR:     325D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 21 IN core-kernel.z80
VAR_LATEST:         325F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 82 IN core-compiler.z80
                    > USED AT LINE 48 IN core-interpreter.z80
                    > USED AT LINE 20 IN core-kernel.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 19
CHAR_POINTER:       3261 DEFINED AT LINE 40 IN variables.z80
                    > USED AT LINE 73 IN core-serial.z80
                    > USED AT LINE 76 IN core-serial.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
START_USER:         3263 DEFINED AT LINE 82
                    > USED AT LINE 16 IN core-kernel.z80
