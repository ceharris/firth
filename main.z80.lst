0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   1   
0000                MEM_SIZE:   EQU   $10000   ; MEM is 64K
0000                ROM_SIZE:   EQU   $2000   ; ROM is 8K
0000                RAM_SIZE:   EQU   MEM_SIZE - ROM_SIZE   ; RAM is 64K - 8K
0000                BM:       EQU   0   ; bottom of ROM memory
0000                EM:       EQU   BM + MEM_SIZE   
0000                START_ROM:   EQU   BM   ; inclusive
0000                END_ROM:   EQU   BM + ROM_SIZE   ; exclusive
0000                START_RAM:   EQU   BM + ROM_SIZE   ; inclusive
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   ; exclusive
0000                RET_STACK_SIZE:   EQU   $100   ; return stack
0000                DATA_STACK_SIZE:   EQU   $100   ; data stack
0000                PAD_SIZE:   EQU   $100   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro CODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro MVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                CODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro MCONST,name,namelen,flags,label,value
0000                             ; 
0000                CODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRAN, 6
0000                 DW BRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro ENTER,
0000                             ; 
0000                 rst $08                             ; enter forth
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 67 00               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 F4 0E               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 AF 10               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                START:       
0067   31 A7 2E               LD   SP,RET_STACK   ; Initialise the return stack.
006A   CD 86 10               CALL   initSerial   
006D   CD B9 0E               CALL   initForth   
0070                          IF   TESTMODE   
0070   C3 00 20               JP   TESTS_START   
0073                          ELSE      
                              ;*Macro unroll:  PRINT_STR TXT_INTRO
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,TXT_INTRO   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              JP   QUIT   
0073                          ENDIF      
0073                             ;   0<          ( n -- t )
0073                             ;               Return true if n is negative.
0073                          ;*Macro unroll: CODE '0<',2,0,ZLESS
0073                HEADER_ZLESS:      
0073   00 00                  DW   link   
0075                LINK:     .SET   HEADER_ZLESS   
0075   02                     DB   0 + 2   
0076   30 3C                  DB   "0<"   
0078                ZLESS:       
0078   CB 20                  SLA   B   ; sign bit -> cy flag
007A   9F                     SBC   A,A   ; propagate cy through A
007B   47                     LD   B,A   ; put 0000 or FFFF in TOS
007C   4F                     LD   C,A   
007D                          ;*Macro unroll: 	NEXT
007D   C3 F4 0E               JP   enter   
0080                             ; and    x1 x2 -- x3            logical and
0080                          ;*Macro unroll: CODE "and",3,0,ANDD	        ; bitwise and
0080                HEADER_ANDD:      ; bitwise and
0080   73 00                  DW   link   
0082                LINK:     .SET   HEADER_ANDD   
0082   03                     DB   0 + 3   
0083   61 6E 64               DB   "and"   
0086                ANDD:        
0086                          ;*Macro unroll:  PPOP0 H,L
0086   DD 2B                  DEC   IX   
0088   DD 66 00               LD   H,(IX+0)   
008B   DD 2B                  DEC   IX   
008D   DD 6E 00               LD   L,(IX+0)   
0090   78                     LD   A,B   
0091   A4                     AND   H   
0092   47                     LD   B,A   
0093   79                     LD   A,C   
0094   A5                     AND   L   
0095   4F                     LD   C,A   
0096                          ;*Macro unroll:  NEXT
0096   C3 F4 0E               JP   enter   
0099                             ; OR    x1 x2 -- x3             logical OR
0099                          ;*Macro unroll: CODE "or",2,0,ORR	            ; bitwise OR
0099                HEADER_ORR:      ; bitwise OR
0099   80 00                  DW   link   
009B                LINK:     .SET   HEADER_ORR   
009B   02                     DB   0 + 2   
009C   6F 72                  DB   "or"   
009E                ORR:         
009E                          ;*Macro unroll:  ppop0 H,L
009E   DD 2B                  DEC   IX   
00A0   DD 66 00               LD   H,(IX+0)   
00A3   DD 2B                  DEC   IX   
00A5   DD 6E 00               LD   L,(IX+0)   
00A8   78                     LD   A,B   
00A9   B4                     OR   H   
00AA   47                     LD   B,A   
00AB   79                     LD   A,C   
00AC   B5                     OR   L   
00AD   4F                     LD   C,A   
00AE                          ;*Macro unroll:  NEXT
00AE   C3 F4 0E               JP   enter   
00B1                             ; xor    x1 x2 -- x3            logical xor
00B1                          ;*Macro unroll: CODE "xor",3,0,XORR	        ; bitwise xor
00B1                HEADER_XORR:      ; bitwise xor
00B1   99 00                  DW   link   
00B3                LINK:     .SET   HEADER_XORR   
00B3   03                     DB   0 + 3   
00B4   78 6F 72               DB   "xor"   
00B7                XORR:        
00B7                          ;*Macro unroll:  ppop0 H,L
00B7   DD 2B                  DEC   IX   
00B9   DD 66 00               LD   H,(IX+0)   
00BC   DD 2B                  DEC   IX   
00BE   DD 6E 00               LD   L,(IX+0)   
00C1   78                     LD   A,B   
00C2   AC                     XOR   H   
00C3   47                     LD   B,A   
00C4   79                     LD   A,C   
00C5   AD                     XOR   L   
00C6   4F                     LD   C,A   
00C7                          ;*Macro unroll:  NEXT
00C7   C3 F4 0E               JP   enter   
00CA                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
00CA                          ;*Macro unroll: CODE "+",1,0,PLUS
00CA                HEADER_PLUS:      
00CA   B1 00                  DW   link   
00CC                LINK:     .SET   HEADER_PLUS   
00CC   01                     DB   0 + 1   
00CD   2B                     DB   "+"   
00CE                PLUS:        
00CE                          ;*Macro unroll:  ppop0 H,L
00CE   DD 2B                  DEC   IX   
00D0   DD 66 00               LD   H,(IX+0)   
00D3   DD 2B                  DEC   IX   
00D5   DD 6E 00               LD   L,(IX+0)   
00D8   09                     ADD   HL,BC   
00D9                          ;*Macro unroll:  loadWord B,C, H,L
00D9   4D                     LD   C,L   
00DA   44                     LD   B,H   
00DB                          ;*Macro unroll:  NEXT
00DB   C3 F4 0E               JP   enter   
00DE                             ; INVERT x1 -- x2               ; bitwise complement
00DE                          ;*Macro unroll: CODE "not",6,0,INVER
00DE                HEADER_INVER:      
00DE   CA 00                  DW   link   
00E0                LINK:     .SET   HEADER_INVER   
00E0   06                     DB   0 + 6   
00E1   6E 6F 74               DB   "not"   
00E4                INVER:       
00E4                          ;*Macro unroll:  ENTER
00E4   CF                     RST   $08   
00E5   13 12 FF FF B7 00 05 0F DW   LIT,-1,XORR,EXIT   
00ED                             ; negate  n1 -- n2                      negate n1
00ED                          ;*Macro unroll: CODE "negate",6,0,NEGAT
00ED                HEADER_NEGAT:      
00ED   DE 00                  DW   link   
00EF                LINK:     .SET   HEADER_NEGAT   
00EF   06                     DB   0 + 6   
00F0   6E 65 67 61 74 65      DB   "negate"   
00F6                NEGAT:       
00F6                          ;*Macro unroll:  ENTER
00F6   CF                     RST   $08   
00F7   E4 00 05 04 05 0F      DW   INVER,ONEP,EXIT   
00FD                             ; negate  n1 -- n2                      negate n1
00FD                          ;*Macro unroll: CODE "dnegate",7,0,DNEGA
00FD                HEADER_DNEGA:      
00FD   ED 00                  DW   link   
00FF                LINK:     .SET   HEADER_DNEGA   
00FF   07                     DB   0 + 7   
0100   64 6E 65 67 61 74 65   DB   "dnegate"   
0107                DNEGA:       
0107                          ;*Macro unroll:  ENTER
0107   CF                     RST   $08   
0108   E4 00 04 13 E4 00      DW   INVER,TOR,INVER   
010E   13 12 01 00 EE 01      DW   LIT,1,UPLUS   
0114   19 13 CE 00 05 0F      DW   RFROM,PLUS,EXIT   
011A                          ;*Macro unroll: CODE "-",1,0,SUBB
011A                HEADER_SUBB:      
011A   FD 00                  DW   link   
011C                LINK:     .SET   HEADER_SUBB   
011C   01                     DB   0 + 1   
011D   2D                     DB   "-"   
011E                SUBB:        
011E                          ;*Macro unroll:  ENTER
011E   CF                     RST   $08   
011F   F6 00 CE 00 05 0F      DW   NEGAT,Plus,EXIT   
0125                             ; abs   n -- u                          absolute value
0125                          ;*Macro unroll: CODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0125                HEADER_ABS:      ; case sensitive for ABS label for some reason
0125   1A 01                  DW   link   
0127                LINK:     .SET   HEADER_ABS   
0127   03                     DB   0 + 3   
0128   61 62 73               DB   "abs"   
012B                ABS:         
012B                          ;*Macro unroll:  ENTER
012B   CF                     RST   $08   
012C   94 12 78 00 BB 07 36 01 DW   DUPP,ZLESS,QBRAN1,ABS1   
0134   F6 00                  DW   NEGAT   
0136                ABS1:        
0136   05 0F                  DW   EXIT   
0138                             ; =      x1 x2 -- flag         test x1=x2
0138                          ;*Macro unroll: CODE "=",1,0,EQUAL
0138                HEADER_EQUAL:      
0138   25 01                  DW   link   
013A                LINK:     .SET   HEADER_EQUAL   
013A   01                     DB   0 + 1   
013B   3D                     DB   "="   
013C                EQUAL:       
013C                          ;*Macro unroll:  ENTER
013C   CF                     RST   $08   
013D   B7 00                  DW   XORR   
013F   BB 07 49 01            DW   QBRAN1,EQU1   
0143   13 12 00 00 05 0F      DW   LIT,0,EXIT   ;false flag
0149                EQU1:        
0149   13 12 FF FF 05 0F      DW   LIT,-1,EXIT   ;true flag
014F                             ;   U<          ( u u -- t )
014F                             ;               Unsigned compare of top two items.
014F                          ;*Macro unroll: CODE "U<",2,0,ULESS	        ; less than
014F                HEADER_ULESS:      ; less than
014F   38 01                  DW   link   
0151                LINK:     .SET   HEADER_ULESS   
0151   02                     DB   0 + 2   
0152   55 3C                  DB   "U<"   
0154                ULESS:       
0154                          ;*Macro unroll:  ENTER
0154   CF                     RST   $08   
0155   3F 13 B7 00 78 00      DW   DDUP,XORR,ZLESS   
015B   BB 07 67 01            DW   QBRAN1,ULES1   
015F   A8 12 C8 12 78 00 05 0F DW   SWAP,DROP,ZLESS,EXIT   
0167                ULES1:       
0167   1E 01 78 00 05 0F      DW   SUBB,ZLESS,EXIT   
016D                             ;   <           ( n1 n2 -- t )
016D                             ;               is less than
016D                          ;*Macro unroll: CODE "<",1,0,LESS	        ; less than
016D                HEADER_LESS:      ; less than
016D   4F 01                  DW   link   
016F                LINK:     .SET   HEADER_LESS   
016F   01                     DB   0 + 1   
0170   3C                     DB   "<"   
0171                LESS:        
0171                          ;*Macro unroll:  ENTER
0171   CF                     RST   $08   
0172   3F 13 B7 00 78 00 BB 07 82 01 DW   DDUP,XORR,ZLESS,QBRAN1,LESS1   
017C   C8 12 78 00 05 0F      DW   DROP,ZLESS,EXIT   
0182                LESS1:       
0182   1E 01 78 00 05 0F      DW   SUBB,ZLESS,EXIT   
0188                             ; >      n1 n2 -- flag          test n1 > n2
0188                          ;*Macro unroll: CODE ">",1,0,GREATERTHAN	        ; less than
0188                HEADER_GREATERTHAN:      ; less than
0188   6D 01                  DW   link   
018A                LINK:     .SET   HEADER_GREATERTHAN   
018A   01                     DB   0 + 1   
018B   3E                     DB   ">"   
018C                GREATERTHAN:      
018C                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
018C   DD 2B                  DEC   IX   ; swap operands
018E   DD 66 00               LD   H,(IX+0)   
0191   DD 2B                  DEC   IX   
0193   DD 6E 00               LD   L,(IX+0)   
0196                          ;*Macro unroll:  ppush H,L
0196                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0196   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0199   DD 23                  INC   IX   
019B   DD 70 00               LD   (IX+0),B   
019E   DD 23                  INC   IX   
01A0   44                     LD   B,H   
01A1   4D                     LD   C,L   
01A2   18 CD                  JR   LESS   
01A4                             ; max   n1 n2 -- u                      maximum
01A4                          ;*Macro unroll: CODE "max",3,0,MAX
01A4                HEADER_MAX:      
01A4   88 01                  DW   link   
01A6                LINK:     .SET   HEADER_MAX   
01A6   03                     DB   0 + 3   
01A7   6D 61 78               DB   "max"   
01AA                MAX:         
01AA                          ;*Macro unroll:  ENTER
01AA   CF                     RST   $08   
01AB   3F 13 71 01 BB 07 B5 01 DW   DDUP,LESS,QBRAN1,MAX1   
01B3   A8 12                  DW   SWAP   
01B5                MAX1:        
01B5   C8 12 05 0F            DW   DROP,EXIT   
01B9                             ; min   n1 n2 -- u                      minimum
01B9                          ;*Macro unroll: CODE "min",3,0,MIN
01B9                HEADER_MIN:      
01B9   A4 01                  DW   link   
01BB                LINK:     .SET   HEADER_MIN   
01BB   03                     DB   0 + 3   
01BC   6D 69 6E               DB   "min"   
01BF                MIN:         
01BF                          ;*Macro unroll:  ENTER
01BF   CF                     RST   $08   
01C0   3F 13 A8 12 71 01      DW   DDUP,SWAP,LESS   
01C6   BB 07 CC 01            DW   QBRAN1,MIN1   
01CA   A8 12                  DW   SWAP   
01CC                MIN1:        
01CC   C8 12 05 0F            DW   DROP,EXIT   
01D0                             ;   WITHIN      ( u ul uh -- t )
01D0                             ;               Return true if u is within the range of ul and uh.
01D0                          ;*Macro unroll: CODE 'WITHIN',6,0,WITHI
01D0                HEADER_WITHI:      
01D0   B9 01                  DW   link   
01D2                LINK:     .SET   HEADER_WITHI   
01D2   06                     DB   0 + 6   
01D3   57 49 54 48 49 4E      DB   "WITHIN"   
01D9                WITHI:       
01D9                          ;*Macro unroll: 	ENTER
01D9   CF                     RST   $08   
01DA   DC 12 1E 01 04 13      DW   OVER,SUBB,TOR   ;ul <= u < uh
01E0   1E 01 19 13 54 01 05 0F DW   SUBB,RFROM,ULESS,EXIT   
01E8                             ;   UM+         ( w w -- w cy )
01E8                             ;               Add two numbers, return the sum and carry flag.
01E8                          ;*Macro unroll: CODE "UM+",6,0,UPLUS
01E8                HEADER_UPLUS:      
01E8   D0 01                  DW   link   
01EA                LINK:     .SET   HEADER_UPLUS   
01EA   06                     DB   0 + 6   
01EB   55 4D 2B               DB   "UM+"   
01EE                UPLUS:       
01EE                          ;*Macro unroll:  ppop0 H,L
01EE   DD 2B                  DEC   IX   
01F0   DD 66 00               LD   H,(IX+0)   
01F3   DD 2B                  DEC   IX   
01F5   DD 6E 00               LD   L,(IX+0)   
01F8   09                     ADD   HL,BC   ;11t
01F9                          ;*Macro unroll:  ppush0 H,L
01F9   DD 75 00               LD   (IX+0),L   
01FC   DD 23                  INC   IX   
01FE   DD 74 00               LD   (IX+0),H   
0201   DD 23                  INC   IX   
0203   01 00 00               LD   BC,0   ;10t
0206   30 01                  JR   NC,UMP1   ;12/7t
0208                UMP2:        
0208   03                     INC   BC   ; 6t
0209                UMP1:        
0209                          ;*Macro unroll:  NEXT
0209   C3 F4 0E               JP   enter   
020C                             ;   UM/MOD      ( udl udh u -- ur uq )
020C                             ;               Unsigned divide of a double by a single. Return mod and quotient.
020C                          ;*Macro unroll: CODE  'UM/MOD',6,0,UMMOD
020C                HEADER_UMMOD:      
020C   E8 01                  DW   link   
020E                LINK:     .SET   HEADER_UMMOD   
020E   06                     DB   0 + 6   
020F   55 4D 2F 4D 4F 44      DB   "UM/MOD"   
0215                UMMOD:       
0215                          ;*Macro unroll:  ENTER
0215   CF                     RST   $08   
0216   3F 13 54 01            DW   DDUP,ULESS   
021A   BB 07 6A 02            DW   QBRAN1,UMM4   
021E   F6 00 13 12 0F 00 04 13 DW   NEGAT,LIT,15,TOR   
0226                UMM1:        
0226   04 13 94 12 EE 01      DW   TOR,DUPP,UPLUS   
022C   04 13 04 13 94 12 EE 01 DW   TOR,TOR,DUPP,UPLUS   
0234   19 13 CE 00 94 12      DW   RFROM,PLUS,DUPP   
023A   19 13 38 10 A8 12 04 13 DW   RFROM,RAT,SWAP,TOR   
0242   EE 01 19 13 9E 00      DW   UPLUS,RFROM,ORR   
0248   BB 07 5C 02            DW   QBRAN1,UMM2   
024C   04 13 C8 12 13 12 01 00 CE 00 19 13 DW   TOR,DROP,LIT,1,PLUS,RFROM   
0258   D9 07 5E 02            DW   BRAN1,UMM3   
025C                UMM2:        
025C   C8 12                  DW   DROP   
025E                UMM3:        
025E   19 13                  DW   RFROM   
0260   E8 07 26 02            DW   DONXT,UMM1   
0264   C8 12 A8 12 05 0F      DW   DROP,SWAP,EXIT   
026A                UMM4:        
026A   C8 12 31 13            DW   DROP,DDROP   
026E   13 12 FF FF 94 12 05 0F DW   LIT,-1,DUPP,EXIT   ;overflow, return max
0276                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
0276                          ;*Macro unroll: CODE "u/mod",5,0,USLASHMOD
0276                HEADER_USLASHMOD:      
0276   0C 02                  DW   link   
0278                LINK:     .SET   HEADER_USLASHMOD   
0278   05                     DB   0 + 5   
0279   75 2F 6D 6F 64         DB   "u/mod"   
027E                USLASHMOD:      
027E                          ;*Macro unroll:  ppop D,E                ; DE = divisor
027E   50                     LD   D,B   ; DE = divisor
027F   59                     LD   E,C   
0280                          ;*Macro unroll:  ppop0 B,C
0280   DD 2B                  DEC   IX   
0282   DD 46 00               LD   B,(IX+0)   
0285   DD 2B                  DEC   IX   
0287   DD 4E 00               LD   C,(IX+0)   
028A                             ; BC = dividend
028A   CD 5B 03               CALL   divideWordByWord   
028D                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
028D   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
0290   DD 23                  INC   IX   
0292   DD 74 00               LD   (IX+0),H   
0295   DD 23                  INC   IX   
0297                          ;*Macro unroll:  NEXT
0297   C3 F4 0E               JP   enter   
029A                          ;*Macro unroll: CODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
029A                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
029A   76 02                  DW   link   
029C                LINK:     .SET   HEADER_slashmod   
029C   04                     DB   0 + 4   
029D   2F 6D 6F 64            DB   "/mod"   
02A1                SLASHMOD:      
02A1                          ;*Macro unroll:  ENTER
02A1   CF                     RST   $08   
02A2   DC 12 DC 12            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
02A6   B7 00                  DW   XORR   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
02A8   78 00                  DW   ZLESS   ; true if high bit still set
02AA   5F 12                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
02AC   DC 12                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
02AE   78 00                  DW   ZLESS   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
02B0   5F 12                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
02B2   2B 01 A8 12 2B 01 A8 12 DW   ABS,swap,ABS,swap   ; remove sign from both args
02BA   7E 02                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
02BC   A8 12                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
02BE   2B 12                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
02C0                          ;*Macro unroll:  cif
02C0   8A 07 00 00            DW   QBRAN,0   
02C4                          ;*Macro unroll:  CPL_PUSH $
02C4                CPL_COUNT:   .SET   CPL_COUNT + 1   
02C4                CPL_10:   .SET   CPL_9   
02C4                CPL_9:    .SET   CPL_8   
02C4                CPL_8:    .SET   CPL_7   
02C4                CPL_7:    .SET   CPL_6   
02C4                CPL_6:    .SET   CPL_5   
02C4                CPL_5:    .SET   CPL_4   
02C4                CPL_4:    .SET   CPL_3   
02C4                CPL_3:    .SET   CPL_2   
02C4                CPL_2:    .SET   CPL_TOP   
02C4                CPL_TOP:   .SET   $   
02C4   F6 00                  DW   NEGAT   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
02C6                          ;*Macro unroll:  cendif
02C6                          ;*Macro unroll:  cBRANCH_FWD
02C6                CUR_ADR:   .SET   $   
02C2                          .ORG   CPL_TOP - 2   
02C2   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02C6                          .ORG   CUR_ADR   
02C6                          ;*Macro unroll:  CPL_POP
02C6                CPL_COUNT:   .SET   CPL_COUNT - 1   
02C6                CPL_TOP:   .SET   CPL_2   
02C6                CPL_2:    .SET   CPL_3   
02C6                CPL_3:    .SET   CPL_4   
02C6                CPL_4:    .SET   CPL_5   
02C6                CPL_5:    .SET   CPL_6   
02C6                CPL_6:    .SET   CPL_7   
02C6                CPL_7:    .SET   CPL_8   
02C6                CPL_8:    .SET   CPL_9   
02C6                CPL_9:    .SET   CPL_10   
02C6                CPL_10:   .SET   0   
02C6   5F 12                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
02C8   A8 12                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
02CA                          ;*Macro unroll:  cif
02CA   8A 07 00 00            DW   QBRAN,0   
02CE                          ;*Macro unroll:  CPL_PUSH $
02CE                CPL_COUNT:   .SET   CPL_COUNT + 1   
02CE                CPL_10:   .SET   CPL_9   
02CE                CPL_9:    .SET   CPL_8   
02CE                CPL_8:    .SET   CPL_7   
02CE                CPL_7:    .SET   CPL_6   
02CE                CPL_6:    .SET   CPL_5   
02CE                CPL_5:    .SET   CPL_4   
02CE                CPL_4:    .SET   CPL_3   
02CE                CPL_3:    .SET   CPL_2   
02CE                CPL_2:    .SET   CPL_TOP   
02CE                CPL_TOP:   .SET   $   
02CE   F6 00                  DW   NEGAT   ;     -r q b1 -- -r -q       if signs differ then negate answer
02D0                          ;*Macro unroll:  cendif
02D0                          ;*Macro unroll:  cBRANCH_FWD
02D0                CUR_ADR:   .SET   $   
02CC                          .ORG   CPL_TOP - 2   
02CC   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02D0                          .ORG   CUR_ADR   
02D0                          ;*Macro unroll:  CPL_POP
02D0                CPL_COUNT:   .SET   CPL_COUNT - 1   
02D0                CPL_TOP:   .SET   CPL_2   
02D0                CPL_2:    .SET   CPL_3   
02D0                CPL_3:    .SET   CPL_4   
02D0                CPL_4:    .SET   CPL_5   
02D0                CPL_5:    .SET   CPL_6   
02D0                CPL_6:    .SET   CPL_7   
02D0                CPL_7:    .SET   CPL_8   
02D0                CPL_8:    .SET   CPL_9   
02D0                CPL_9:    .SET   CPL_10   
02D0                CPL_10:   .SET   0   
02D0                          ;*Macro unroll:  EXIT
02D0   05 0F                  DW   exit   
02D2   C3 F4 0E               JP   enter   
02D5                          ;*Macro unroll: CODE "mod",3,0,mod                   ; dvend dvisr -- remainder
02D5                HEADER_MOD:      ; dvend dvisr -- remainder
02D5   9A 02                  DW   link   
02D7                LINK:     .SET   HEADER_mod   
02D7   03                     DB   0 + 3   
02D8   6D 6F 64               DB   "mod"   
02DB                MOD:         
02DB                          ;*Macro unroll:  ENTER
02DB   CF                     RST   $08   
02DC   A1 02 C8 12 05 0F      DW   slashmod,DROP,EXIT   ; drop quotient
02E2                          ;*Macro unroll: CODE "/",1,0,slash                   ; dvend dvisr -- quot
02E2                HEADER_SLASH:      ; dvend dvisr -- quot
02E2   D5 02                  DW   link   
02E4                LINK:     .SET   HEADER_slash   
02E4   01                     DB   0 + 1   
02E5   2F                     DB   "/"   
02E6                SLASH:       
02E6                          ;*Macro unroll:  ENTER
02E6   CF                     RST   $08   
02E7   A1 02 A8 12 C8 12 05 0F DW   slashmod,swap,drop,EXIT   ; drop remainder
02EF                             ; U*   u1 u2 -- ud   unsigned mutliply
02EF                          ;*Macro unroll: CODE "u*",2,0,USTAR              ; u1 u2 -- ud
02EF                HEADER_USTAR:      ; u1 u2 -- ud
02EF   E2 02                  DW   link   
02F1                LINK:     .SET   HEADER_USTAR   
02F1   02                     DB   0 + 2   
02F2   75 2A                  DB   "u*"   
02F4                USTAR:       
02F4                             ; u2 in BC
02F4                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
02F4   DD 2B                  DEC   IX   ; u1 in DE
02F6   DD 56 00               LD   D,(IX+0)   
02F9   DD 2B                  DEC   IX   
02FB   DD 5E 00               LD   E,(IX+0)   
02FE   CD 95 03               CALL   unsignedMultiply   
0301                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
0301   DD 73 00               LD   (IX+0),E   ; udlo result
0304   DD 23                  INC   IX   
0306   DD 72 00               LD   (IX+0),D   
0309   DD 23                  INC   IX   
030B                             ; udhi result
030B                          ;*Macro unroll:  NEXT
030B   C3 F4 0E               JP   enter   
030E                          ;*Macro unroll: CODE "*",1,0,star                    ; u1 u2 -- ud
030E                HEADER_STAR:      ; u1 u2 -- ud
030E   EF 02                  DW   link   
0310                LINK:     .SET   HEADER_star   
0310   01                     DB   0 + 1   
0311   2A                     DB   "*"   
0312                STAR:        
0312                          ;*Macro unroll:  ENTER
0312   CF                     RST   $08   
0313   DC 12 DC 12            DW   over,over   ; dupe both args
0317   2B 01 A8 12 2B 01      DW   ABS,swap,ABS   ; remove sign from both args
031D   F4 02 C8 12            DW   ustar,drop   ; unsigned multiply, drop hi-word
0321   5F 12                  DW   nrot   ; move to bottom
0323   B7 00                  DW   XORR   ; zero if signs are the same
0325   78 00                  DW   ZLESS   ; if high bit set
0327                          ;*Macro unroll:  cif
0327   8A 07 00 00            DW   QBRAN,0   
032B                          ;*Macro unroll:  CPL_PUSH $
032B                CPL_COUNT:   .SET   CPL_COUNT + 1   
032B                CPL_10:   .SET   CPL_9   
032B                CPL_9:    .SET   CPL_8   
032B                CPL_8:    .SET   CPL_7   
032B                CPL_7:    .SET   CPL_6   
032B                CPL_6:    .SET   CPL_5   
032B                CPL_5:    .SET   CPL_4   
032B                CPL_4:    .SET   CPL_3   
032B                CPL_3:    .SET   CPL_2   
032B                CPL_2:    .SET   CPL_TOP   
032B                CPL_TOP:   .SET   $   
032B   F6 00                  DW   NEGAT   ; if signs differ then negate answer
032D                          ;*Macro unroll:  cendif
032D                          ;*Macro unroll:  cBRANCH_FWD
032D                CUR_ADR:   .SET   $   
0329                          .ORG   CPL_TOP - 2   
0329   04 00                  DW   CUR_ADR - CPL_TOP + 2   
032D                          .ORG   CUR_ADR   
032D                          ;*Macro unroll:  CPL_POP
032D                CPL_COUNT:   .SET   CPL_COUNT - 1   
032D                CPL_TOP:   .SET   CPL_2   
032D                CPL_2:    .SET   CPL_3   
032D                CPL_3:    .SET   CPL_4   
032D                CPL_4:    .SET   CPL_5   
032D                CPL_5:    .SET   CPL_6   
032D                CPL_6:    .SET   CPL_7   
032D                CPL_7:    .SET   CPL_8   
032D                CPL_8:    .SET   CPL_9   
032D                CPL_9:    .SET   CPL_10   
032D                CPL_10:   .SET   0   
032D                          ;*Macro unroll:  EXIT
032D   05 0F                  DW   exit   
032F   C3 F4 0E               JP   enter   
0332                             ; 
0332                             ; negate ***
0332                             ; params: HL = number
0332                             ; 
0332                NEGATENUM:      
0332                             ; Negate HL (using two's complement)
0332   AF                     XOR   A   
0333   95                     SUB   L   
0334   6F                     LD   L,A   
0335   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
0337   9C                     SBC   A,H   
0338   67                     LD   H,A   
0339   C9                     RET      
033A                             ; 
033A                             ; divide word by byte ***
033A                             ; params: HL = dividend, C = divisor
033A                             ; returns: HL = result, A = remainder
033A                             ; destroys: ?
033A                             ; 
033A                DIVIDEWORDBYBYTE:      
033A   06 10                  LD   B,16   
033C   AF                     XOR   A   
033D                          ;*Macro unroll:  _do
033D   18 03                  JR   L_M_843S267   
033F   C3 3F 03               JP   $   
0342                          ;*Macro unroll:  DLOOP_PUSH $
0342                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0342                DLOOP_12:   .SET   DLOOP_11   
0342                DLOOP_11:   .SET   DLOOP_10   
0342                DLOOP_10:   .SET   DLOOP_9   
0342                DLOOP_9:   .SET   DLOOP_8   
0342                DLOOP_8:   .SET   DLOOP_7   
0342                DLOOP_7:   .SET   DLOOP_6   
0342                DLOOP_6:   .SET   DLOOP_5   
0342                DLOOP_5:   .SET   DLOOP_4   
0342                DLOOP_4:   .SET   DLOOP_3   
0342                DLOOP_3:   .SET   DLOOP_2   
0342                DLOOP_2:   .SET   DLOOP_TOP   
0342                DLOOP_TOP:   .SET   $   
0342                L_M_843S267:      
0342   29                     ADD   HL,HL   
0343   17                     RLA      
0344                          ;*Macro unroll:  _if c
0344   DA 4A 03               JP   c,L_M_846S270   
0347   C3 47 03               JP   $   
034A                          ;*Macro unroll:  STRUC_PUSH $
034A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
034A                STRUC_12:   .SET   STRUC_11   
034A                STRUC_11:   .SET   STRUC_10   
034A                STRUC_10:   .SET   STRUC_9   
034A                STRUC_9:   .SET   STRUC_8   
034A                STRUC_8:   .SET   STRUC_7   
034A                STRUC_7:   .SET   STRUC_6   
034A                STRUC_6:   .SET   STRUC_5   
034A                STRUC_5:   .SET   STRUC_4   
034A                STRUC_4:   .SET   STRUC_3   
034A                STRUC_3:   .SET   STRUC_2   
034A                STRUC_2:   .SET   STRUC_TOP   
034A                STRUC_TOP:   .SET   $   
034A                L_M_846S270:      
034A   91                     SUB   C   
034B   2C                     INC   L   
034C                          ;*Macro unroll:  _else
034C   C3 4C 03               JP   $   
034F                          ;*Macro unroll:  STRUC_FWD
034F                CUR_ADR:   .SET   $   
0348                          .ORG   STRUC_TOP - 2   
0348   4F 03                  DW   CUR_ADR   
034F                          .ORG   CUR_ADR   
034F                STRUC_TOP:   .SET   $   
034F   B9                     CP   C   
0350                          ;*Macro unroll:  _if nc
0350   D2 56 03               JP   nc,L_M_851S275   
0353   C3 53 03               JP   $   
0356                          ;*Macro unroll:  STRUC_PUSH $
0356                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0356                STRUC_12:   .SET   STRUC_11   
0356                STRUC_11:   .SET   STRUC_10   
0356                STRUC_10:   .SET   STRUC_9   
0356                STRUC_9:   .SET   STRUC_8   
0356                STRUC_8:   .SET   STRUC_7   
0356                STRUC_7:   .SET   STRUC_6   
0356                STRUC_6:   .SET   STRUC_5   
0356                STRUC_5:   .SET   STRUC_4   
0356                STRUC_4:   .SET   STRUC_3   
0356                STRUC_3:   .SET   STRUC_2   
0356                STRUC_2:   .SET   STRUC_TOP   
0356                STRUC_TOP:   .SET   $   
0356                L_M_851S275:      
0356   91                     SUB   C   
0357   2C                     INC   L   
0358                          ;*Macro unroll:  _endif
0358                          ;*Macro unroll:  STRUC_FWD
0358                CUR_ADR:   .SET   $   
0354                          .ORG   STRUC_TOP - 2   
0354   58 03                  DW   CUR_ADR   
0358                          .ORG   CUR_ADR   
0358                          ;*Macro unroll:  STRUC_POP
0358                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0358                STRUC_TOP:   .SET   STRUC_2   
0358                STRUC_2:   .SET   STRUC_3   
0358                STRUC_3:   .SET   STRUC_4   
0358                STRUC_4:   .SET   STRUC_5   
0358                STRUC_5:   .SET   STRUC_6   
0358                STRUC_6:   .SET   STRUC_7   
0358                STRUC_7:   .SET   STRUC_8   
0358                STRUC_8:   .SET   STRUC_9   
0358                STRUC_9:   .SET   STRUC_10   
0358                STRUC_10:   .SET   STRUC_11   
0358                STRUC_11:   .SET   STRUC_12   
0358                STRUC_12:   .SET   0   
0358                          ;*Macro unroll:  _endif
0358                          ;*Macro unroll:  STRUC_FWD
0358                CUR_ADR:   .SET   $   
034D                          .ORG   STRUC_TOP - 2   
034D   58 03                  DW   CUR_ADR   
0358                          .ORG   CUR_ADR   
0358                          ;*Macro unroll:  STRUC_POP
0358                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0358                STRUC_TOP:   .SET   STRUC_2   
0358                STRUC_2:   .SET   STRUC_3   
0358                STRUC_3:   .SET   STRUC_4   
0358                STRUC_4:   .SET   STRUC_5   
0358                STRUC_5:   .SET   STRUC_6   
0358                STRUC_6:   .SET   STRUC_7   
0358                STRUC_7:   .SET   STRUC_8   
0358                STRUC_8:   .SET   STRUC_9   
0358                STRUC_9:   .SET   STRUC_10   
0358                STRUC_10:   .SET   STRUC_11   
0358                STRUC_11:   .SET   STRUC_12   
0358                STRUC_12:   .SET   0   
0358                          ;*Macro unroll:  _djnz
0358   10 E8                  DJNZ   DLOOP_TOP   
035A                          ;*Macro unroll:  DLOOP_FWD
035A                CUR_ADR:   .SET   $   
0340                          .ORG   DLOOP_TOP - 2   
0340   5A 03                  DW   CUR_ADR   
035A                          .ORG   CUR_ADR   
035A                          ;*Macro unroll:  DLOOP_POP
035A                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
035A                DLOOP_TOP:   .SET   DLOOP_2   
035A                DLOOP_2:   .SET   DLOOP_3   
035A                DLOOP_3:   .SET   DLOOP_4   
035A                DLOOP_4:   .SET   DLOOP_5   
035A                DLOOP_5:   .SET   DLOOP_6   
035A                DLOOP_6:   .SET   DLOOP_7   
035A                DLOOP_7:   .SET   DLOOP_8   
035A                DLOOP_8:   .SET   DLOOP_9   
035A                DLOOP_9:   .SET   DLOOP_10   
035A                DLOOP_10:   .SET   DLOOP_11   
035A                DLOOP_11:   .SET   DLOOP_12   
035A                DLOOP_12:   .SET   0   
035A   C9                     RET      
035B                             ; 
035B                             ; Divide word by word ***
035B                             ; params: BC = dividend, DE = divisor
035B                             ; returns: BC = result, HL = remainder
035B                             ; destroys: ?
035B                             ; 
035B                DIVIDEWORDBYWORD:      
035B   D5                     PUSH   DE   
035C   21 00 00               LD   HL,0   
035F   78                     LD   A,B   
0360   06 08                  LD   B,8   
0362                          ;*Macro unroll:  _do
0362   18 03                  JR   L_M_869S295   
0364   C3 64 03               JP   $   
0367                          ;*Macro unroll:  DLOOP_PUSH $
0367                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0367                DLOOP_12:   .SET   DLOOP_11   
0367                DLOOP_11:   .SET   DLOOP_10   
0367                DLOOP_10:   .SET   DLOOP_9   
0367                DLOOP_9:   .SET   DLOOP_8   
0367                DLOOP_8:   .SET   DLOOP_7   
0367                DLOOP_7:   .SET   DLOOP_6   
0367                DLOOP_6:   .SET   DLOOP_5   
0367                DLOOP_5:   .SET   DLOOP_4   
0367                DLOOP_4:   .SET   DLOOP_3   
0367                DLOOP_3:   .SET   DLOOP_2   
0367                DLOOP_2:   .SET   DLOOP_TOP   
0367                DLOOP_TOP:   .SET   $   
0367                L_M_869S295:      
0367   17                     RLA      
0368   ED 6A                  ADC   HL,HL   
036A   ED 52                  SBC   HL,DE   
036C                          ;*Macro unroll:  _if c
036C   DA 72 03               JP   c,L_M_873S299   
036F   C3 6F 03               JP   $   
0372                          ;*Macro unroll:  STRUC_PUSH $
0372                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0372                STRUC_12:   .SET   STRUC_11   
0372                STRUC_11:   .SET   STRUC_10   
0372                STRUC_10:   .SET   STRUC_9   
0372                STRUC_9:   .SET   STRUC_8   
0372                STRUC_8:   .SET   STRUC_7   
0372                STRUC_7:   .SET   STRUC_6   
0372                STRUC_6:   .SET   STRUC_5   
0372                STRUC_5:   .SET   STRUC_4   
0372                STRUC_4:   .SET   STRUC_3   
0372                STRUC_3:   .SET   STRUC_2   
0372                STRUC_2:   .SET   STRUC_TOP   
0372                STRUC_TOP:   .SET   $   
0372                L_M_873S299:      
0372   19                     ADD   HL,DE   
0373                          ;*Macro unroll:  _endif
0373                          ;*Macro unroll:  STRUC_FWD
0373                CUR_ADR:   .SET   $   
0370                          .ORG   STRUC_TOP - 2   
0370   73 03                  DW   CUR_ADR   
0373                          .ORG   CUR_ADR   
0373                          ;*Macro unroll:  STRUC_POP
0373                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0373                STRUC_TOP:   .SET   STRUC_2   
0373                STRUC_2:   .SET   STRUC_3   
0373                STRUC_3:   .SET   STRUC_4   
0373                STRUC_4:   .SET   STRUC_5   
0373                STRUC_5:   .SET   STRUC_6   
0373                STRUC_6:   .SET   STRUC_7   
0373                STRUC_7:   .SET   STRUC_8   
0373                STRUC_8:   .SET   STRUC_9   
0373                STRUC_9:   .SET   STRUC_10   
0373                STRUC_10:   .SET   STRUC_11   
0373                STRUC_11:   .SET   STRUC_12   
0373                STRUC_12:   .SET   0   
0373                          ;*Macro unroll:  _djnz
0373   10 F2                  DJNZ   DLOOP_TOP   
0375                          ;*Macro unroll:  DLOOP_FWD
0375                CUR_ADR:   .SET   $   
0365                          .ORG   DLOOP_TOP - 2   
0365   75 03                  DW   CUR_ADR   
0375                          .ORG   CUR_ADR   
0375                          ;*Macro unroll:  DLOOP_POP
0375                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0375                DLOOP_TOP:   .SET   DLOOP_2   
0375                DLOOP_2:   .SET   DLOOP_3   
0375                DLOOP_3:   .SET   DLOOP_4   
0375                DLOOP_4:   .SET   DLOOP_5   
0375                DLOOP_5:   .SET   DLOOP_6   
0375                DLOOP_6:   .SET   DLOOP_7   
0375                DLOOP_7:   .SET   DLOOP_8   
0375                DLOOP_8:   .SET   DLOOP_9   
0375                DLOOP_9:   .SET   DLOOP_10   
0375                DLOOP_10:   .SET   DLOOP_11   
0375                DLOOP_11:   .SET   DLOOP_12   
0375                DLOOP_12:   .SET   0   
0375   17                     RLA      
0376   2F                     CPL      
0377   47                     LD   B,A   
0378   79                     LD   A,C   
0379   48                     LD   C,B   
037A   06 08                  LD   B,8   
037C                          ;*Macro unroll:  _do
037C   18 03                  JR   L_M_883S309   
037E   C3 7E 03               JP   $   
0381                          ;*Macro unroll:  DLOOP_PUSH $
0381                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0381                DLOOP_12:   .SET   DLOOP_11   
0381                DLOOP_11:   .SET   DLOOP_10   
0381                DLOOP_10:   .SET   DLOOP_9   
0381                DLOOP_9:   .SET   DLOOP_8   
0381                DLOOP_8:   .SET   DLOOP_7   
0381                DLOOP_7:   .SET   DLOOP_6   
0381                DLOOP_6:   .SET   DLOOP_5   
0381                DLOOP_5:   .SET   DLOOP_4   
0381                DLOOP_4:   .SET   DLOOP_3   
0381                DLOOP_3:   .SET   DLOOP_2   
0381                DLOOP_2:   .SET   DLOOP_TOP   
0381                DLOOP_TOP:   .SET   $   
0381                L_M_883S309:      
0381   17                     RLA      
0382   ED 6A                  ADC   HL,HL   
0384   ED 52                  SBC   HL,DE   
0386                          ;*Macro unroll:  _if c
0386   DA 8C 03               JP   c,L_M_887S313   
0389   C3 89 03               JP   $   
038C                          ;*Macro unroll:  STRUC_PUSH $
038C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
038C                STRUC_12:   .SET   STRUC_11   
038C                STRUC_11:   .SET   STRUC_10   
038C                STRUC_10:   .SET   STRUC_9   
038C                STRUC_9:   .SET   STRUC_8   
038C                STRUC_8:   .SET   STRUC_7   
038C                STRUC_7:   .SET   STRUC_6   
038C                STRUC_6:   .SET   STRUC_5   
038C                STRUC_5:   .SET   STRUC_4   
038C                STRUC_4:   .SET   STRUC_3   
038C                STRUC_3:   .SET   STRUC_2   
038C                STRUC_2:   .SET   STRUC_TOP   
038C                STRUC_TOP:   .SET   $   
038C                L_M_887S313:      
038C   19                     ADD   HL,DE   
038D                          ;*Macro unroll:  _endif
038D                          ;*Macro unroll:  STRUC_FWD
038D                CUR_ADR:   .SET   $   
038A                          .ORG   STRUC_TOP - 2   
038A   8D 03                  DW   CUR_ADR   
038D                          .ORG   CUR_ADR   
038D                          ;*Macro unroll:  STRUC_POP
038D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
038D                STRUC_TOP:   .SET   STRUC_2   
038D                STRUC_2:   .SET   STRUC_3   
038D                STRUC_3:   .SET   STRUC_4   
038D                STRUC_4:   .SET   STRUC_5   
038D                STRUC_5:   .SET   STRUC_6   
038D                STRUC_6:   .SET   STRUC_7   
038D                STRUC_7:   .SET   STRUC_8   
038D                STRUC_8:   .SET   STRUC_9   
038D                STRUC_9:   .SET   STRUC_10   
038D                STRUC_10:   .SET   STRUC_11   
038D                STRUC_11:   .SET   STRUC_12   
038D                STRUC_12:   .SET   0   
038D                          ;*Macro unroll:  _djnz
038D   10 F2                  DJNZ   DLOOP_TOP   
038F                          ;*Macro unroll:  DLOOP_FWD
038F                CUR_ADR:   .SET   $   
037F                          .ORG   DLOOP_TOP - 2   
037F   8F 03                  DW   CUR_ADR   
038F                          .ORG   CUR_ADR   
038F                          ;*Macro unroll:  DLOOP_POP
038F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
038F                DLOOP_TOP:   .SET   DLOOP_2   
038F                DLOOP_2:   .SET   DLOOP_3   
038F                DLOOP_3:   .SET   DLOOP_4   
038F                DLOOP_4:   .SET   DLOOP_5   
038F                DLOOP_5:   .SET   DLOOP_6   
038F                DLOOP_6:   .SET   DLOOP_7   
038F                DLOOP_7:   .SET   DLOOP_8   
038F                DLOOP_8:   .SET   DLOOP_9   
038F                DLOOP_9:   .SET   DLOOP_10   
038F                DLOOP_10:   .SET   DLOOP_11   
038F                DLOOP_11:   .SET   DLOOP_12   
038F                DLOOP_12:   .SET   0   
038F   17                     RLA      
0390   2F                     CPL      
0391   41                     LD   B,C   
0392   4F                     LD   C,A   
0393   D1                     POP   DE   
0394   C9                     RET      
0395                             ; 
0395                             ; unsignedMultiply -  unsigned multiply ***
0395                             ; 
0395                             ; params:  u1 in BC, u2 in DE
0395                             ; returns: result in HLDE
0395                             ; destroys: AF
0395                             ; 
0395                UNSIGNEDMULTIPLY:      
0395   21 00 00               LD   HL,0   
0398   3E 11                  LD   A,17   ; loop counter
039A   B7                     OR   A   ; clear carry
039B                          ;*Macro unroll:  _do
039B   18 03                  JR   L_M_908S336   
039D   C3 9D 03               JP   $   
03A0                          ;*Macro unroll:  DLOOP_PUSH $
03A0                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03A0                DLOOP_12:   .SET   DLOOP_11   
03A0                DLOOP_11:   .SET   DLOOP_10   
03A0                DLOOP_10:   .SET   DLOOP_9   
03A0                DLOOP_9:   .SET   DLOOP_8   
03A0                DLOOP_8:   .SET   DLOOP_7   
03A0                DLOOP_7:   .SET   DLOOP_6   
03A0                DLOOP_6:   .SET   DLOOP_5   
03A0                DLOOP_5:   .SET   DLOOP_4   
03A0                DLOOP_4:   .SET   DLOOP_3   
03A0                DLOOP_3:   .SET   DLOOP_2   
03A0                DLOOP_2:   .SET   DLOOP_TOP   
03A0                DLOOP_TOP:   .SET   $   
03A0                L_M_908S336:      
03A0   CB 1C                  RR   H   
03A2   CB 1D                  RR   L   
03A4   CB 1A                  RR   D   
03A6   CB 1B                  RR   E   
03A8                          ;*Macro unroll:  _if c
03A8   DA AE 03               JP   c,L_M_913S341   
03AB   C3 AB 03               JP   $   
03AE                          ;*Macro unroll:  STRUC_PUSH $
03AE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03AE                STRUC_12:   .SET   STRUC_11   
03AE                STRUC_11:   .SET   STRUC_10   
03AE                STRUC_10:   .SET   STRUC_9   
03AE                STRUC_9:   .SET   STRUC_8   
03AE                STRUC_8:   .SET   STRUC_7   
03AE                STRUC_7:   .SET   STRUC_6   
03AE                STRUC_6:   .SET   STRUC_5   
03AE                STRUC_5:   .SET   STRUC_4   
03AE                STRUC_4:   .SET   STRUC_3   
03AE                STRUC_3:   .SET   STRUC_2   
03AE                STRUC_2:   .SET   STRUC_TOP   
03AE                STRUC_TOP:   .SET   $   
03AE                L_M_913S341:      
03AE   09                     ADD   HL,BC   
03AF                          ;*Macro unroll:  _endif
03AF                          ;*Macro unroll:  STRUC_FWD
03AF                CUR_ADR:   .SET   $   
03AC                          .ORG   STRUC_TOP - 2   
03AC   AF 03                  DW   CUR_ADR   
03AF                          .ORG   CUR_ADR   
03AF                          ;*Macro unroll:  STRUC_POP
03AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03AF                STRUC_TOP:   .SET   STRUC_2   
03AF                STRUC_2:   .SET   STRUC_3   
03AF                STRUC_3:   .SET   STRUC_4   
03AF                STRUC_4:   .SET   STRUC_5   
03AF                STRUC_5:   .SET   STRUC_6   
03AF                STRUC_6:   .SET   STRUC_7   
03AF                STRUC_7:   .SET   STRUC_8   
03AF                STRUC_8:   .SET   STRUC_9   
03AF                STRUC_9:   .SET   STRUC_10   
03AF                STRUC_10:   .SET   STRUC_11   
03AF                STRUC_11:   .SET   STRUC_12   
03AF                STRUC_12:   .SET   0   
03AF   3D                     DEC   A   
03B0                          ;*Macro unroll:  _until z
03B0   CA 9D 03               JP   z,DLOOP_TOP - 3   
03B3                          ;*Macro unroll:  DLOOP_FWD               ; needed?
03B3                CUR_ADR:   .SET   $   ; needed?
039E                          .ORG   DLOOP_TOP - 2   
039E   B3 03                  DW   CUR_ADR   
03B3                          .ORG   CUR_ADR   
03B3                          ;*Macro unroll:  _enddo
03B3   C3 A0 03               JP   DLOOP_TOP   
03B6                          ;*Macro unroll:  DLOOP_FWD
03B6                CUR_ADR:   .SET   $   
039E                          .ORG   DLOOP_TOP - 2   
039E   B6 03                  DW   CUR_ADR   
03B6                          .ORG   CUR_ADR   
03B6                          ;*Macro unroll:  DLOOP_POP
03B6                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03B6                DLOOP_TOP:   .SET   DLOOP_2   
03B6                DLOOP_2:   .SET   DLOOP_3   
03B6                DLOOP_3:   .SET   DLOOP_4   
03B6                DLOOP_4:   .SET   DLOOP_5   
03B6                DLOOP_5:   .SET   DLOOP_6   
03B6                DLOOP_6:   .SET   DLOOP_7   
03B6                DLOOP_7:   .SET   DLOOP_8   
03B6                DLOOP_8:   .SET   DLOOP_9   
03B6                DLOOP_9:   .SET   DLOOP_10   
03B6                DLOOP_10:   .SET   DLOOP_11   
03B6                DLOOP_11:   .SET   DLOOP_12   
03B6                DLOOP_12:   .SET   0   
03B6   C9                     RET      
03B7                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
03B7                          ;*Macro unroll: CODE "cell+",5,0,CELLP
03B7                HEADER_CELLP:      
03B7   0E 03                  DW   link   
03B9                LINK:     .SET   HEADER_CELLP   
03B9   05                     DB   0 + 5   
03BA   63 65 6C 6C 2B         DB   "cell+"   
03BF                CELLP:       
03BF   C3 17 04               JP   TWOP   
03C2                          ;*Macro unroll: CODE "cell-",5,0,CELLM
03C2                HEADER_CELLM:      
03C2   B7 03                  DW   link   
03C4                LINK:     .SET   HEADER_CELLM   
03C4   05                     DB   0 + 5   
03C5   63 65 6C 6C 2D         DB   "cell-"   
03CA                CELLM:       
03CA   C3 21 04               JP   TWOM   
03CD                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
03CD                          ;*Macro unroll: CODE "cells",5,0,CELLS
03CD                HEADER_CELLS:      
03CD   C2 03                  DW   link   
03CF                LINK:     .SET   HEADER_CELLS   
03CF   05                     DB   0 + 5   
03D0   63 65 6C 6C 73         DB   "cells"   
03D5                CELLS:       
03D5   C3 2B 04               JP   TWOST   
03D8                             ; 0= zero-equal
03D8                          ;*Macro unroll: CODE "0=",2,0,ZEQUAL
03D8                HEADER_ZEQUAL:      
03D8   CD 03                  DW   link   
03DA                LINK:     .SET   HEADER_ZEQUAL   
03DA   02                     DB   0 + 2   
03DB   30 3D                  DB   "0="   
03DD                ZEQUAL:      
03DD                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
03DD   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
03DE   B0                     OR   B   
03DF                          ;*Macro unroll:  _if nz
03DF   C2 E5 03               JP   nz,L_M_931S363   
03E2   C3 E2 03               JP   $   
03E5                          ;*Macro unroll:  STRUC_PUSH $
03E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03E5                STRUC_12:   .SET   STRUC_11   
03E5                STRUC_11:   .SET   STRUC_10   
03E5                STRUC_10:   .SET   STRUC_9   
03E5                STRUC_9:   .SET   STRUC_8   
03E5                STRUC_8:   .SET   STRUC_7   
03E5                STRUC_7:   .SET   STRUC_6   
03E5                STRUC_6:   .SET   STRUC_5   
03E5                STRUC_5:   .SET   STRUC_4   
03E5                STRUC_4:   .SET   STRUC_3   
03E5                STRUC_3:   .SET   STRUC_2   
03E5                STRUC_2:   .SET   STRUC_TOP   
03E5                STRUC_TOP:   .SET   $   
03E5                L_M_931S363:      
03E5   01 FF FF               LD   BC,-1   
03E8                          ;*Macro unroll:  _endif
03E8                          ;*Macro unroll:  STRUC_FWD
03E8                CUR_ADR:   .SET   $   
03E3                          .ORG   STRUC_TOP - 2   
03E3   E8 03                  DW   CUR_ADR   
03E8                          .ORG   CUR_ADR   
03E8                          ;*Macro unroll:  STRUC_POP
03E8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03E8                STRUC_TOP:   .SET   STRUC_2   
03E8                STRUC_2:   .SET   STRUC_3   
03E8                STRUC_3:   .SET   STRUC_4   
03E8                STRUC_4:   .SET   STRUC_5   
03E8                STRUC_5:   .SET   STRUC_6   
03E8                STRUC_6:   .SET   STRUC_7   
03E8                STRUC_7:   .SET   STRUC_8   
03E8                STRUC_8:   .SET   STRUC_9   
03E8                STRUC_9:   .SET   STRUC_10   
03E8                STRUC_10:   .SET   STRUC_11   
03E8                STRUC_11:   .SET   STRUC_12   
03E8                STRUC_12:   .SET   0   
03E8   03                     INC   BC   
03E9                          ;*Macro unroll:  NEXT
03E9   C3 F4 0E               JP   enter   
03EC                          ;*Macro unroll: CODE "0<>",3,0,ZNEQU
03EC                HEADER_ZNEQU:      
03EC   D8 03                  DW   link   
03EE                LINK:     .SET   HEADER_ZNEQU   
03EE   03                     DB   0 + 3   
03EF   30 3C 3E               DB   "0<>"   
03F2                ZNEQU:       
03F2                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
03F2   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
03F3   B0                     OR   B   
03F4                          ;*Macro unroll:  _if nz
03F4   C2 FA 03               JP   nz,L_M_938S371   
03F7   C3 F7 03               JP   $   
03FA                          ;*Macro unroll:  STRUC_PUSH $
03FA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03FA                STRUC_12:   .SET   STRUC_11   
03FA                STRUC_11:   .SET   STRUC_10   
03FA                STRUC_10:   .SET   STRUC_9   
03FA                STRUC_9:   .SET   STRUC_8   
03FA                STRUC_8:   .SET   STRUC_7   
03FA                STRUC_7:   .SET   STRUC_6   
03FA                STRUC_6:   .SET   STRUC_5   
03FA                STRUC_5:   .SET   STRUC_4   
03FA                STRUC_4:   .SET   STRUC_3   
03FA                STRUC_3:   .SET   STRUC_2   
03FA                STRUC_2:   .SET   STRUC_TOP   
03FA                STRUC_TOP:   .SET   $   
03FA                L_M_938S371:      
03FA   01 01 00               LD   BC,1   
03FD                          ;*Macro unroll:  _endif
03FD                          ;*Macro unroll:  STRUC_FWD
03FD                CUR_ADR:   .SET   $   
03F8                          .ORG   STRUC_TOP - 2   
03F8   FD 03                  DW   CUR_ADR   
03FD                          .ORG   CUR_ADR   
03FD                          ;*Macro unroll:  STRUC_POP
03FD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03FD                STRUC_TOP:   .SET   STRUC_2   
03FD                STRUC_2:   .SET   STRUC_3   
03FD                STRUC_3:   .SET   STRUC_4   
03FD                STRUC_4:   .SET   STRUC_5   
03FD                STRUC_5:   .SET   STRUC_6   
03FD                STRUC_6:   .SET   STRUC_7   
03FD                STRUC_7:   .SET   STRUC_8   
03FD                STRUC_8:   .SET   STRUC_9   
03FD                STRUC_9:   .SET   STRUC_10   
03FD                STRUC_10:   .SET   STRUC_11   
03FD                STRUC_11:   .SET   STRUC_12   
03FD                STRUC_12:   .SET   0   
03FD                          ;*Macro unroll:  NEXT
03FD   C3 F4 0E               JP   enter   
0400                             ; 1+      n -- n                    add 1 to TOS
0400                          ;*Macro unroll: CODE "1+",2,0,ONEP
0400                HEADER_ONEP:      
0400   EC 03                  DW   link   
0402                LINK:     .SET   HEADER_ONEP   
0402   02                     DB   0 + 2   
0403   31 2B                  DB   "1+"   
0405                ONEP:        
0405   03                     INC   BC   
0406                          ;*Macro unroll:  NEXT
0406   C3 F4 0E               JP   enter   
0409                             ; 1-      n -- n            sub 1 to TOS
0409                          ;*Macro unroll: CODE "1-",2,0,ONEM
0409                HEADER_ONEM:      
0409   00 04                  DW   link   
040B                LINK:     .SET   HEADER_ONEM   
040B   02                     DB   0 + 2   
040C   31 2D                  DB   "1-"   
040E                ONEM:        
040E   0B                     DEC   BC   
040F                          ;*Macro unroll:  NEXT
040F   C3 F4 0E               JP   enter   
0412                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
0412                          ;*Macro unroll: CODE "2+",2,0,TWOP
0412                HEADER_TWOP:      
0412   09 04                  DW   link   
0414                LINK:     .SET   HEADER_TWOP   
0414   02                     DB   0 + 2   
0415   32 2B                  DB   "2+"   
0417                TWOP:        
0417   03                     INC   BC   
0418   03                     INC   BC   
0419                          ;*Macro unroll:  NEXT
0419   C3 F4 0E               JP   enter   
041C                          ;*Macro unroll: CODE "2-",2,0,TWOM
041C                HEADER_TWOM:      
041C   12 04                  DW   link   
041E                LINK:     .SET   HEADER_TWOM   
041E   02                     DB   0 + 2   
041F   32 2D                  DB   "2-"   
0421                TWOM:        
0421   0B                     DEC   BC   
0422   0B                     DEC   BC   
0423                          ;*Macro unroll:  NEXT
0423   C3 F4 0E               JP   enter   
0426                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
0426                          ;*Macro unroll: CODE "2*",2,0,TWOST
0426                HEADER_TWOST:      
0426   1C 04                  DW   link   
0428                LINK:     .SET   HEADER_TWOST   
0428   02                     DB   0 + 2   
0429   32 2A                  DB   "2*"   
042B                TWOST:       
042B   CB 21                  SLA   C   
042D   CB 10                  RL   B   
042F                          ;*Macro unroll:  NEXT
042F   C3 F4 0E               JP   enter   
0432                             ; 2/      x1 -- x2                  arithmetic right shift
0432                          ;*Macro unroll: CODE "2/",2,0,TWOSLASH
0432                HEADER_TWOSLASH:      
0432   26 04                  DW   link   
0434                LINK:     .SET   HEADER_TWOSLASH   
0434   02                     DB   0 + 2   
0435   32 2F                  DB   "2/"   
0437                TWOSLASH:      
0437   CB 28                  SRA   B   
0439   CB 19                  RR   C   
043B                          ;*Macro unroll:  NEXT
043B   C3 F4 0E               JP   enter   
043E                          ;*Macro unroll: CODE ":",1,0,colon
043E                HEADER_COLON:      
043E   32 04                  DW   link   
0440                LINK:     .SET   HEADER_colon   
0440   01                     DB   0 + 1   
0441   3A                     DB   ":"   
0442                COLON:       
0442                          ;*Macro unroll:  ENTER
0442   CF                     RST   $08   
0443   DE 04                  DW   create   ; create the dictionary entry / header
0445   D9 08 38 0F            DW   here,fetch   ; back up 3 bytes to start of data area
0449   13 12 03 00 1E 01      DW   lit,3,SUBB   
044F   D9 08 17 0F            DW   here,store   
0453   13 12 CF 00 0A 10      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0459   BA 14 38 0F B2 05      DW   latest,fetch,hidden   ; make the word hidden (see below for definition).
045F   D8 05                  DW   rbrac   ; go into compile mode.
0461                          ;*Macro unroll:  EXIT                                ; return from the function.
0461   05 0F                  DW   exit   ; return from the function.
0463   C3 F4 0E               JP   enter   
0466                          ;*Macro unroll: CODE ";",1,msk_immed,semicolon
0466                HEADER_SEMICOLON:      
0466   3E 04                  DW   link   
0468                LINK:     .SET   HEADER_semicolon   
0468   81                     DB   msk_immed + 1   
0469   3B                     DB   ";"   
046A                SEMICOLON:      
046A                          ;*Macro unroll:  ENTER
046A   CF                     RST   $08   
046B   13 12 05 0F EE 0F      DW   lit,exit,comma   ; append exit (so the word will return).
0471   BA 14 38 0F B2 05      DW   latest,fetch,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
0477   CB 05                  DW   lbrac   ; go back to immediate mode.
0479                          ;*Macro unroll:  EXIT                                ; return from the function.
0479   05 0F                  DW   exit   ; return from the function.
047B   C3 F4 0E               JP   enter   
047E                          ;*Macro unroll: CODE ":noname",7,0,colonNoName
047E                HEADER_COLONNONAME:      
047E   66 04                  DW   link   
0480                LINK:     .SET   HEADER_colonNoName   
0480   07                     DB   0 + 7   
0481   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
0488                COLONNONAME:      
0488                          ;*Macro unroll:  ENTER
0488   CF                     RST   $08   
0489   D9 08 38 0F            DW   here,fetch   ; TOS = here
048D   13 12 CF 00 0A 10      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0493   D8 05                  DW   rbrac   ; go into compile mode.
0495                          ;*Macro unroll:  EXIT                                ; return from the function.
0495   05 0F                  DW   exit   ; return from the function.
0497   C3 F4 0E               JP   enter   
049A                          ;*Macro unroll: CODE "variable",8,0,variable         ; ( n -- ) get name from input
049A                HEADER_VARIABLE:      ; ( n -- ) get name from input
049A   7E 04                  DW   link   
049C                LINK:     .SET   HEADER_variable   
049C   08                     DB   0 + 8   
049D   76 61 72 69 61 62 6C 65 DB   "variable"   
04A5                VARIABLE:      
04A5                          ;*Macro unroll:  ENTER
04A5   CF                     RST   $08   
04A6   13 12 01 00 D5 03      DW   lit,1,cells   
04AC   D9 08 38 0F A8 12      DW   here,fetch,swap   ; n -- here n
04B2   BB 0F                  DW   allot   ; allocate n bytes, push addr
04B4   49 05                  DW   constant   
04B6                          ;*Macro unroll:  EXIT
04B6   05 0F                  DW   exit   
04B8   C3 F4 0E               JP   enter   
04BB                          ;*Macro unroll: CODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
04BB                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
04BB   9A 04                  DW   link   
04BD                LINK:     .SET   HEADER_bufferColon   
04BD   07                     DB   0 + 7   
04BE   62 75 66 66 65 72 3A   DB   "buffer:"   
04C5                BUFFERCOLON:      
04C5                          ;*Macro unroll:  ENTER
04C5   CF                     RST   $08   
04C6   D9 08 38 0F A8 12      DW   here,fetch,swap   ; n -- here n
04CC   BB 0F                  DW   allot   ; allocate n bytes, push addr
04CE   49 05                  DW   constant   
04D0                          ;*Macro unroll:  EXIT
04D0   05 0F                  DW   exit   
04D2   C3 F4 0E               JP   enter   
04D5                          ;*Macro unroll: CODE "create",6,0,create             ; --
04D5                HEADER_CREATE:      ; --
04D5   BB 04                  DW   link   
04D7                LINK:     .SET   HEADER_create   
04D7   06                     DB   0 + 6   
04D8   63 72 65 61 74 65      DB   "create"   
04DE                CREATE:      
04DE                          ;*Macro unroll:  ENTER
04DE   CF                     RST   $08   
04DF   D9 08 38 0F            DW   here,fetch   ; get old "here"
04E3   BA 14 38 0F EE 0F      DW   latest,fetch,comma   ; write link to previous word to "here"
04E9   BA 14 17 0F            DW   latest,store   ; update latest to old "here"
04ED   72 0E 80 0B            DW   bl,word   ; read word token
04F1   65 0F 05 04 BB 0F      DW   cfetch,ONEP,allot   ; 
04F7   13 12 C3 00 0A 10      DW   lit,jp_opcode,cComma   ; compile default behavious
04FD   13 12 08 05 EE 0F      DW   lit,xcreate,comma   ; i.e. push addr of data area
0503                          ;*Macro unroll:  EXIT                                ; exit from forth
0503   05 0F                  DW   exit   ; exit from forth
0505   C3 F4 0E               JP   enter   
0508                XCREATE:      
0508                          ;*Macro unroll:  ENTER
0508   CF                     RST   $08   
0509   19 13                  DW   rfrom   ; push onto stack
050B                          ;*Macro unroll:  EXIT
050B   05 0F                  DW   exit   
050D   C3 F4 0E               JP   enter   
0510                          ;*Macro unroll: CODE "does>", 5, msk_immed, does         ; --
0510                HEADER_DOES:      ; --
0510   D5 04                  DW   link   
0512                LINK:     .SET   HEADER_does   
0512   85                     DB   msk_immed + 5   
0513   64 6F 65 73 3E         DB   "does>"   
0518                DOES:        
0518                          ;*Macro unroll:  ENTER
0518   CF                     RST   $08   
0519   13 12 F1 05 EE 0F      DW   lit,xdoes,comma   
051F   13 12 E1 05            DW   lit,dodoes   
0523   D9 08 38 0F            DW   here,fetch   
0527   13 12 CD 00            DW   lit,call_opcode   
052B   DC 12 46 0F            DW   over,cstore   
052F   05 04 17 0F            DW   ONEP,store   
0533   13 12 03 00 BB 0F      DW   lit,3,allot   
0539                          ;*Macro unroll:  EXIT
0539   05 0F                  DW   exit   
053B   C3 F4 0E               JP   enter   
053E                          ;*Macro unroll: CODE "constant",8,0,constant         ; --
053E                HEADER_CONSTANT:      ; --
053E   10 05                  DW   link   
0540                LINK:     .SET   HEADER_constant   
0540   08                     DB   0 + 8   
0541   63 6F 6E 73 74 61 6E 74 DB   "constant"   
0549                CONSTANT:      
0549                          ;*Macro unroll:  ENTER
0549   CF                     RST   $08   
054A   DE 04 EE 0F F1 05      DW   create,comma,xdoes   
0550   CF                     RST   $08   
0551   19 13                  DW   rfrom   ; push onto stack
0553   38 0F                  DW   fetch   
0555                          ;*Macro unroll:  EXIT
0555   05 0F                  DW   exit   
0557   C3 F4 0E               JP   enter   
055A                          ;*Macro unroll: CODE "'",1,0,tick                    ; quotes next word
055A                HEADER_TICK:      ; quotes next word
055A   3E 05                  DW   link   
055C                LINK:     .SET   HEADER_tick   
055C   01                     DB   0 + 1   
055D   27                     DB   "'"   
055E                TICK:        
055E                          ;*Macro unroll:  ENTER
055E   CF                     RST   $08   
055F   72 0E 80 0B 97 05 DD 03 DW   bl,word,find,zEqual   
0567   19 13 60 13 DC 12 DC 12 CE 00 04 13 DW   rFrom,count,over,over,plus,toR   
0573                          ;*Macro unroll:  EXIT
0573   05 0F                  DW   exit   
0575   C3 F4 0E               JP   enter   
0578                          ;*Macro unroll: CODE "immediate",9,MSK_IMMED,IMMEDIATE
0578                HEADER_IMMEDIATE:      
0578   5A 05                  DW   link   
057A                LINK:     .SET   HEADER_IMMEDIATE   
057A   89                     DB   MSK_IMMED + 9   
057B   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
0584                IMMEDIATE:      
0584   2A 5F 32               LD   HL,(VAR_LATEST)   ; get head of latest word
0587   23                     INC   HL   ; point to flags byte
0588   23                     INC   HL   
0589   3E 80                  LD   a,MSK_IMMED   
058B   AE                     XOR   (HL)   ; toggle the IMMED bit.
058C   77                     LD   (HL),a   
058D                          ;*Macro unroll:  NEXT
058D   C3 F4 0E               JP   enter   
0590                          ;*Macro unroll: CODE "find",4,0,FIND
0590                HEADER_FIND:      
0590   78 05                  DW   link   
0592                LINK:     .SET   HEADER_FIND   
0592   04                     DB   0 + 4   
0593   66 69 6E 64            DB   "find"   
0597                FIND:        
0597                          ;*Macro unroll:  ppop0 H,L
0597   DD 2B                  DEC   IX   
0599   DD 66 00               LD   H,(IX+0)   
059C   DD 2B                  DEC   IX   
059E   DD 6E 00               LD   L,(IX+0)   
05A1   CD FB 0B               CALL   lookup   ; params: HL = string address, BC = string length
05A4                             ; returns: DE = found header ptr or 0
05A4                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
05A4   4B                     LD   C,E   ; move to TOS
05A5   42                     LD   B,D   
05A6                          ;*Macro unroll:  NEXT
05A6   C3 F4 0E               JP   enter   
05A9                          ;*Macro unroll: CODE "hidden",6,0,HIDDEN
05A9                HEADER_HIDDEN:      
05A9   90 05                  DW   link   
05AB                LINK:     .SET   HEADER_HIDDEN   
05AB   06                     DB   0 + 6   
05AC   68 69 64 64 65 6E      DB   "hidden"   
05B2                HIDDEN:      
05B2                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
05B2   60                     LD   H,B   ; HL = Dictionary entry.
05B3   69                     LD   L,C   
05B4                          ;*Macro unroll:  ppop0 B,C
05B4   DD 2B                  DEC   IX   
05B6   DD 46 00               LD   B,(IX+0)   
05B9   DD 2B                  DEC   IX   
05BB   DD 4E 00               LD   C,(IX+0)   
05BE   23                     INC   HL   
05BF   23                     INC   HL   ; Point to name/flags byte.
05C0   7E                     LD   A,(HL)   
05C1   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
05C3   77                     LD   (HL),A   
05C4                          ;*Macro unroll:  NEXT
05C4   C3 F4 0E               JP   enter   
05C7                          ;*Macro unroll: CODE "[",1,MSK_IMMED,LBRAC
05C7                HEADER_LBRAC:      
05C7   A9 05                  DW   link   
05C9                LINK:     .SET   HEADER_LBRAC   
05C9   81                     DB   MSK_IMMED + 1   
05CA   5B                     DB   "["   
05CB                LBRAC:       
05CB   21 00 00               LD   HL,0   
05CE   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 0.
05D1                          ;*Macro unroll:  NEXT
05D1   C3 F4 0E               JP   enter   
05D4                          ;*Macro unroll: CODE "]",1,0,RBRAC
05D4                HEADER_RBRAC:      
05D4   C7 05                  DW   link   
05D6                LINK:     .SET   HEADER_RBRAC   
05D6   01                     DB   0 + 1   
05D7   5D                     DB   "]"   
05D8                RBRAC:       
05D8   21 01 00               LD   HL,1   
05DB   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 1.
05DE                          ;*Macro unroll:  NEXT
05DE   C3 F4 0E               JP   enter   
05E1                DODOES:      ; -- a-addr
05E1                          ;*Macro unroll:  ppush0 B,C
05E1   DD 71 00               LD   (IX+0),C   
05E4   DD 23                  INC   IX   
05E6   DD 70 00               LD   (IX+0),B   
05E9   DD 23                  INC   IX   
05EB   E1                     POP   HL   ; parameter field address
05EC   C1                     POP   BC   
05ED   E5                     PUSH   HL   
05EE                          ;*Macro unroll:  NEXT
05EE   C3 F4 0E               JP   enter   
05F1                XDOES:       ; --
05F1                          ;*Macro unroll:  ENTER
05F1   CF                     RST   $08   
05F2   19 13                  DW   rfrom   
05F4   BA 14 38 0F 97 0B      DW   latest,fetch,tcfa   
05FA   13 12 CD 00            DW   lit,call_opcode   
05FE   DC 12 46 0F            DW   over,cstore   
0602   05 04 17 0F            DW   ONEP,store   
0606                          ;*Macro unroll:  EXIT
0606   05 0F                  DW   exit   
0608   C3 F4 0E               JP   enter   
060B                          ;*Macro unroll: CODE "postpone",8,msk_immed,postpone ; --
060B                HEADER_POSTPONE:      ; --
060B   D4 05                  DW   link   
060D                LINK:     .SET   HEADER_postpone   
060D   88                     DB   msk_immed + 8   
060E   70 6F 73 74 70 6F 6E 65 DB   "postpone"   
0616                POSTPONE:      
0616   CF                     RST   $08   
0617   72 0E 80 0B 60 13      DW   bl,word,count   ; pstr -- ptr len
061D   94 12 DD 03            DW   DUPP,zEqual   
0621                          ;*Macro unroll:  cIf
0621   8A 07 00 00            DW   QBRAN,0   
0625                          ;*Macro unroll:  CPL_PUSH $
0625                CPL_COUNT:   .SET   CPL_COUNT + 1   
0625                CPL_10:   .SET   CPL_9   
0625                CPL_9:    .SET   CPL_8   
0625                CPL_8:    .SET   CPL_7   
0625                CPL_7:    .SET   CPL_6   
0625                CPL_6:    .SET   CPL_5   
0625                CPL_5:    .SET   CPL_4   
0625                CPL_4:    .SET   CPL_3   
0625                CPL_3:    .SET   CPL_2   
0625                CPL_2:    .SET   CPL_TOP   
0625                CPL_TOP:   .SET   $   
0625   C8 12 C8 12            DW   drop,drop   ; ptr len --
0629                          ;*Macro unroll:  cElse
0629   A7 07 00 00            DW   BRAN,0   
062D                          ;*Macro unroll:  cBRANCH_FWD
062D                CUR_ADR:   .SET   $   
0623                          .ORG   CPL_TOP - 2   
0623   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
062D                          .ORG   CUR_ADR   
062D                CPL_TOP:   .SET   $   
062D   34 06                  DW   postponeToken   ; interpret the next word
062F                          ;*Macro unroll:  cEndif
062F                          ;*Macro unroll:  cBRANCH_FWD
062F                CUR_ADR:   .SET   $   
062B                          .ORG   CPL_TOP - 2   
062B   04 00                  DW   CUR_ADR - CPL_TOP + 2   
062F                          .ORG   CUR_ADR   
062F                          ;*Macro unroll:  CPL_POP
062F                CPL_COUNT:   .SET   CPL_COUNT - 1   
062F                CPL_TOP:   .SET   CPL_2   
062F                CPL_2:    .SET   CPL_3   
062F                CPL_3:    .SET   CPL_4   
062F                CPL_4:    .SET   CPL_5   
062F                CPL_5:    .SET   CPL_6   
062F                CPL_6:    .SET   CPL_7   
062F                CPL_7:    .SET   CPL_8   
062F                CPL_8:    .SET   CPL_9   
062F                CPL_9:    .SET   CPL_10   
062F                CPL_10:   .SET   0   
062F                          ;*Macro unroll:  EXIT
062F   05 0F                  DW   exit   
0631   C3 F4 0E               JP   enter   
0634                POSTPONETOKEN:      ; --
0634   CF                     RST   $08   
0635   DC 12 DC 12 97 05      DW   over,over,find   ; ptr len -- ptr len addr
063B   94 12 F2 03            DW   DUPP,ZNEQU   
063F                          ;*Macro unroll:  cIf
063F   8A 07 00 00            DW   QBRAN,0   
0643                          ;*Macro unroll:  CPL_PUSH $
0643                CPL_COUNT:   .SET   CPL_COUNT + 1   
0643                CPL_10:   .SET   CPL_9   
0643                CPL_9:    .SET   CPL_8   
0643                CPL_8:    .SET   CPL_7   
0643                CPL_7:    .SET   CPL_6   
0643                CPL_6:    .SET   CPL_5   
0643                CPL_5:    .SET   CPL_4   
0643                CPL_4:    .SET   CPL_3   
0643                CPL_3:    .SET   CPL_2   
0643                CPL_2:    .SET   CPL_TOP   
0643                CPL_TOP:   .SET   $   
0643   50 06                  DW   postponeWord   
0645                          ;*Macro unroll:  cElse
0645   A7 07 00 00            DW   BRAN,0   
0649                          ;*Macro unroll:  cBRANCH_FWD
0649                CUR_ADR:   .SET   $   
0641                          .ORG   CPL_TOP - 2   
0641   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0649                          .ORG   CUR_ADR   
0649                CPL_TOP:   .SET   $   
0649   8C 06                  DW   postponeLiteral   
064B                          ;*Macro unroll:  cEndif
064B                          ;*Macro unroll:  cBRANCH_FWD
064B                CUR_ADR:   .SET   $   
0647                          .ORG   CPL_TOP - 2   
0647   04 00                  DW   CUR_ADR - CPL_TOP + 2   
064B                          .ORG   CUR_ADR   
064B                          ;*Macro unroll:  CPL_POP
064B                CPL_COUNT:   .SET   CPL_COUNT - 1   
064B                CPL_TOP:   .SET   CPL_2   
064B                CPL_2:    .SET   CPL_3   
064B                CPL_3:    .SET   CPL_4   
064B                CPL_4:    .SET   CPL_5   
064B                CPL_5:    .SET   CPL_6   
064B                CPL_6:    .SET   CPL_7   
064B                CPL_7:    .SET   CPL_8   
064B                CPL_8:    .SET   CPL_9   
064B                CPL_9:    .SET   CPL_10   
064B                CPL_10:   .SET   0   
064B                          ;*Macro unroll:  EXIT
064B   05 0F                  DW   exit   
064D   C3 F4 0E               JP   enter   
0650                POSTPONEWORD:      ; ( headptr -- )
0650   CF                     RST   $08   ; enter forth
0651   A8 12 C8 12 A8 12 C8 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0659   94 12 13 12 02 00 CE 00 65 0F DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0663   13 12 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0669   DD 03                  DW   zEqual   
066B                          ;*Macro unroll:  cIf
066B   8A 07 00 00            DW   QBRAN,0   
066F                          ;*Macro unroll:  CPL_PUSH $
066F                CPL_COUNT:   .SET   CPL_COUNT + 1   
066F                CPL_10:   .SET   CPL_9   
066F                CPL_9:    .SET   CPL_8   
066F                CPL_8:    .SET   CPL_7   
066F                CPL_7:    .SET   CPL_6   
066F                CPL_6:    .SET   CPL_5   
066F                CPL_5:    .SET   CPL_4   
066F                CPL_4:    .SET   CPL_3   
066F                CPL_3:    .SET   CPL_2   
066F                CPL_2:    .SET   CPL_TOP   
066F                CPL_TOP:   .SET   $   
066F   13 12 13 12 EE 0F      DW   lit,lit,comma   
0675   97 0B EE 0F            DW   tcfa,comma   
0679   13 12 EE 0F EE 0F      DW   lit,comma,comma   
067F                          ;*Macro unroll:  cElse
067F   A7 07 00 00            DW   BRAN,0   
0683                          ;*Macro unroll:  cBRANCH_FWD
0683                CUR_ADR:   .SET   $   
066D                          .ORG   CPL_TOP - 2   
066D   16 00                  DW   CUR_ADR - CPL_TOP + 2   
0683                          .ORG   CUR_ADR   
0683                CPL_TOP:   .SET   $   
0683   97 0B EE 0F            DW   tcfa,comma   
0687                          ;*Macro unroll:  cEndIf
0687                          ;*Macro unroll:  cBRANCH_FWD
0687                CUR_ADR:   .SET   $   
0681                          .ORG   CPL_TOP - 2   
0681   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0687                          .ORG   CUR_ADR   
0687                          ;*Macro unroll:  CPL_POP
0687                CPL_COUNT:   .SET   CPL_COUNT - 1   
0687                CPL_TOP:   .SET   CPL_2   
0687                CPL_2:    .SET   CPL_3   
0687                CPL_3:    .SET   CPL_4   
0687                CPL_4:    .SET   CPL_5   
0687                CPL_5:    .SET   CPL_6   
0687                CPL_6:    .SET   CPL_7   
0687                CPL_7:    .SET   CPL_8   
0687                CPL_8:    .SET   CPL_9   
0687                CPL_9:    .SET   CPL_10   
0687                CPL_10:   .SET   0   
0687                          ;*Macro unroll:  EXIT
0687   05 0F                  DW   exit   
0689   C3 F4 0E               JP   enter   
068C                POSTPONELITERAL:      ; ( ptr len -- )
068C   CF                     RST   $08   ; enter forth
068D   C8 12                  DW   drop   ; ptr len addr - ptr len
068F   1E 0B DD 03            DW   number,zEqual   ; parse to number
0693                          ;*Macro unroll:  cif
0693   8A 07 00 00            DW   QBRAN,0   
0697                          ;*Macro unroll:  CPL_PUSH $
0697                CPL_COUNT:   .SET   CPL_COUNT + 1   
0697                CPL_10:   .SET   CPL_9   
0697                CPL_9:    .SET   CPL_8   
0697                CPL_8:    .SET   CPL_7   
0697                CPL_7:    .SET   CPL_6   
0697                CPL_6:    .SET   CPL_5   
0697                CPL_5:    .SET   CPL_4   
0697                CPL_4:    .SET   CPL_3   
0697                CPL_3:    .SET   CPL_2   
0697                CPL_2:    .SET   CPL_TOP   
0697                CPL_TOP:   .SET   $   
0697   13 12 13 12            DW   lit,lit   ; (val -- val "lit" )
069B   EE 0F EE 0F            DW   comma,comma   ; compile "lit" val
069F                          ;*Macro unroll:  cElse
069F   A7 07 00 00            DW   BRAN,0   
06A3                          ;*Macro unroll:  cBRANCH_FWD
06A3                CUR_ADR:   .SET   $   
0695                          .ORG   CPL_TOP - 2   
0695   0E 00                  DW   CUR_ADR - CPL_TOP + 2   
06A3                          .ORG   CUR_ADR   
06A3                CPL_TOP:   .SET   $   
06A3   C8 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
06A5   46 13                  DW   litstr   ; err != 0, parse error
06A7   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
06B6   D9 0D                  DW   type   
06B8                          ;*Macro unroll:  cEndIf
06B8                          ;*Macro unroll:  cBRANCH_FWD
06B8                CUR_ADR:   .SET   $   
06A1                          .ORG   CPL_TOP - 2   
06A1   17 00                  DW   CUR_ADR - CPL_TOP + 2   
06B8                          .ORG   CUR_ADR   
06B8                          ;*Macro unroll:  CPL_POP
06B8                CPL_COUNT:   .SET   CPL_COUNT - 1   
06B8                CPL_TOP:   .SET   CPL_2   
06B8                CPL_2:    .SET   CPL_3   
06B8                CPL_3:    .SET   CPL_4   
06B8                CPL_4:    .SET   CPL_5   
06B8                CPL_5:    .SET   CPL_6   
06B8                CPL_6:    .SET   CPL_7   
06B8                CPL_7:    .SET   CPL_8   
06B8                CPL_8:    .SET   CPL_9   
06B8                CPL_9:    .SET   CPL_10   
06B8                CPL_10:   .SET   0   
06B8                          ;*Macro unroll:  EXIT
06B8   05 0F                  DW   exit   
06BA   C3 F4 0E               JP   enter   
06BD                          ;*Macro unroll: CODE "if",2,msk_immed,if
06BD                HEADER_IF:      
06BD   0B 06                  DW   link   
06BF                LINK:     .SET   HEADER_if   
06BF   82                     DB   msk_immed + 2   
06C0   69 66                  DB   "if"   
06C2                IF:          
06C2                          ;*Macro unroll:  ENTER
06C2   CF                     RST   $08   
06C3   84 09                  DW   lbrace   
06C5   13 12 8A 07 EE 0F      DW   lit,QBRAN,comma   ; compile ?branch
06CB   D9 08 38 0F 94 12 EE 0F DW   here,fetch,DUPP,comma   ; compile here and also push on stack
06D3                          ;*Macro unroll:  EXIT
06D3   05 0F                  DW   exit   
06D5   C3 F4 0E               JP   enter   
06D8                          ;*Macro unroll: CODE "else",4,msk_immed,else
06D8                HEADER_ELSE:      
06D8   BD 06                  DW   link   
06DA                LINK:     .SET   HEADER_else   
06DA   84                     DB   msk_immed + 4   
06DB   65 6C 73 65            DB   "else"   
06DF                ELSE:        
06DF                          ;*Macro unroll:  ENTER
06DF   CF                     RST   $08   
06E0   13 12 A7 07 EE 0F      DW   lit,BRAN,comma   ; definite branch to just over the false-part
06E6   D9 08 38 0F            DW   here,fetch   ; save here on stack
06EA   13 12 00 00 EE 0F      DW   lit,0,comma   ; compile a dummy offset
06F0   A8 12                  DW   swap   ; now back-fill the original (if) offset
06F2   0B 07                  DW   xendif   ; must call xendif not endif
06F4                          ;*Macro unroll:  EXIT
06F4   05 0F                  DW   exit   
06F6   C3 F4 0E               JP   enter   
06F9                          ;*Macro unroll: CODE "endif",5,msk_immed,endif
06F9                HEADER_ENDIF:      
06F9   D8 06                  DW   link   
06FB                LINK:     .SET   HEADER_endif   
06FB   85                     DB   msk_immed + 5   
06FC   65 6E 64 69 66         DB   "endif"   
0701                ENDIF:       
0701                          ;*Macro unroll:  ENTER
0701   CF                     RST   $08   
0702   0B 07                  DW   xendif   ; must call xendif not endif
0704   D4 09                  DW   rbraceExec   
0706                          ;*Macro unroll:  EXIT
0706   05 0F                  DW   exit   
0708   C3 F4 0E               JP   enter   
070B                XENDIF:      ; must call xendif not endif
070B                          ;*Macro unroll:  ENTER
070B   CF                     RST   $08   
070C   94 12                  DW   DUPP   
070E   D9 08 38 0F A8 12 1E 01 DW   here,fetch,swap,SUBB   ; calculate the offset from the address saved on the stack
0716   A8 12 17 0F            DW   swap,store   ; store the offset in the back-filled location
071A                          ;*Macro unroll:  EXIT
071A   05 0F                  DW   exit   
071C   C3 F4 0E               JP   enter   
071F                             ; begin condition while ... repeat
071F                          ;*Macro unroll: CODE "begin",5,msk_immed,begin
071F                HEADER_BEGIN:      
071F   F9 06                  DW   link   
0721                LINK:     .SET   HEADER_begin   
0721   85                     DB   msk_immed + 5   
0722   62 65 67 69 6E         DB   "begin"   
0727                BEGIN:       
0727                          ;*Macro unroll:  ENTER
0727   CF                     RST   $08   
0728   84 09                  DW   lbrace   
072A   D9 08 38 0F            DW   here,fetch   ; save here on stack (here1)
072E                          ;*Macro unroll:  EXIT
072E   05 0F                  DW   exit   
0730   C3 F4 0E               JP   enter   
0733                          ;*Macro unroll: CODE "while",5,msk_immed,while
0733                HEADER_WHILE:      
0733   1F 07                  DW   link   
0735                LINK:     .SET   HEADER_while   
0735   85                     DB   msk_immed + 5   
0736   77 68 69 6C 65         DB   "while"   
073B                WHILE:       
073B                          ;*Macro unroll:  ENTER
073B   CF                     RST   $08   
073C   13 12 8A 07 EE 0F      DW   lit,QBRAN,comma   ; compile branch on zero
0742   D9 08 38 0F            DW   here,fetch   ; save here in stack (here2)
0746   13 12 00 00 EE 0F      DW   lit,0,comma   ; compile dummy offset
074C                          ;*Macro unroll:  EXIT
074C   05 0F                  DW   exit   
074E   C3 F4 0E               JP   enter   
0751                          ;*Macro unroll: CODE "repeat",6,msk_immed,repeat
0751                HEADER_REPEAT:      
0751   33 07                  DW   link   
0753                LINK:     .SET   HEADER_repeat   
0753   86                     DB   msk_immed + 6   
0754   72 65 70 65 61 74      DB   "repeat"   
075A                REPEAT:      
075A                          ;*Macro unroll:  ENTER
075A   CF                     RST   $08   
075B   13 12 A7 07 EE 0F      DW   lit,BRAN,comma   ; compile branch
0761   A8 12                  DW   swap   ; tos = here1
0763   D9 08 38 0F 1E 01 EE 0F DW   here,fetch,SUBB,comma   ; compile offset (here1 - here3)
076B   94 12                  DW   DUPP   
076D   D9 08 38 0F A8 12 1E 01 DW   here,fetch,swap,SUBB   ; compile offset (here2 - here3)
0775   A8 12 17 0F            DW   swap,store   ; save offset in here2
0779   D4 09                  DW   rbraceExec   
077B                          ;*Macro unroll:  EXIT
077B   05 0F                  DW   exit   
077D   C3 F4 0E               JP   enter   
0780                             ; ?branch   x --              branch if TOS zero
0780                          ;*Macro unroll: CODE "?branch",7,0,QBRAN
0780                HEADER_QBRAN:      
0780   51 07                  DW   link   
0782                LINK:     .SET   HEADER_QBRAN   
0782   07                     DB   0 + 7   
0783   3F 62 72 61 6E 63 68   DB   "?branch"   
078A                QBRAN:       
078A                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
078A   79                     LD   A,C   ; test old TOS
078B   B0                     OR   B   
078C                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
078C   DD 2B                  DEC   IX   ; POP new TOS
078E   DD 46 00               LD   B,(IX+0)   
0791   DD 2B                  DEC   IX   
0793   DD 4E 00               LD   C,(IX+0)   
0796   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
0798   E1                     POP   HL   
0799   23                     INC   HL   ; else skip inline value
079A   23                     INC   HL   
079B                          ;*Macro unroll:  NEXT1
079B   C3 F5 0E               JP   enter1   
079E                          ;*Macro unroll: CODE "branch",6,0,BRAN         ; relative branching
079E                HEADER_BRAN:      ; relative branching
079E   80 07                  DW   link   
07A0                LINK:     .SET   HEADER_BRAN   
07A0   06                     DB   0 + 6   
07A1   62 72 61 6E 63 68      DB   "branch"   
07A7                BRAN:        
07A7   E1                     POP   HL   ; add the offset to the instruction pointer
07A8   5E                     LD   E,(HL)   
07A9   23                     INC   HL   
07AA   56                     LD   D,(HL)   
07AB   2B                     DEC   HL   
07AC   19                     ADD   HL,DE   
07AD                          ;*Macro unroll:  NEXT1
07AD   C3 F5 0E               JP   enter1   
07B0                             ; ?branch   x --              branch if TOS zero
07B0                          ;*Macro unroll: CODE "?branch1",7,0,QBRAN1
07B0                HEADER_QBRAN1:      
07B0   9E 07                  DW   link   
07B2                LINK:     .SET   HEADER_QBRAN1   
07B2   07                     DB   0 + 7   
07B3   3F 62 72 61 6E 63 68 31 DB   "?branch1"   
07BB                QBRAN1:      
07BB                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
07BB   79                     LD   A,C   ; test old TOS
07BC   B0                     OR   B   
07BD                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
07BD   DD 2B                  DEC   IX   ; POP new TOS
07BF   DD 46 00               LD   B,(IX+0)   
07C2   DD 2B                  DEC   IX   
07C4   DD 4E 00               LD   C,(IX+0)   
07C7   28 10                  JR   z,BRAN1   ; if old TOS=0, branch
07C9   E1                     POP   HL   
07CA   23                     INC   HL   ; else skip inline value
07CB   23                     INC   HL   
07CC                          ;*Macro unroll:  NEXT1
07CC   C3 F5 0E               JP   enter1   
07CF                          ;*Macro unroll: CODE "branch1",6,0,BRAN1         ; relative branching
07CF                HEADER_BRAN1:      ; relative branching
07CF   B0 07                  DW   link   
07D1                LINK:     .SET   HEADER_BRAN1   
07D1   06                     DB   0 + 6   
07D2   62 72 61 6E 63 68 31   DB   "branch1"   
07D9                BRAN1:       
07D9   E1                     POP   HL   ; add the offset to the instruction pointer
07DA   5E                     LD   E,(HL)   
07DB   23                     INC   HL   
07DC   56                     LD   D,(HL)   
07DD   EB                     EX   DE,HL   
07DE                          ;*Macro unroll:  NEXT1
07DE   C3 F5 0E               JP   enter1   
07E1                             ;   next        ( -- )
07E1                             ;               Run time code for the single index loop.
07E1                             ;               : next ( -- ) \ hilevel model
07E1                             ;                 r> r> dup if 1 - >r @ >r exit then drop cell+ >r ;
07E1                          ;*Macro unroll: CODE   'next',4,0,DONXT
07E1                HEADER_DONXT:      
07E1   CF 07                  DW   link   
07E3                LINK:     .SET   HEADER_DONXT   
07E3   04                     DB   0 + 4   
07E4   6E 65 78 74            DB   "next"   
07E8                DONXT:       
07E8   DD E5                  PUSH   IX   
07EA   E1                     POP   HL   ; load rp into HL
07EB   7E                     LD   A,(HL)   ; a = low byte of r@
07EC   B7                     OR   A   
07ED   20 10                  JR   NZ,DECLOW   ; low > 0 goto dec low
07EF   23                     INC   HL   
07F0   7E                     LD   A,(HL)   ; a = high byte of r@
07F1   B7                     OR   A   
07F2   20 09                  JR   NZ,DECHILO   ; high > 0 goto dec hi dec lo
07F4   23                     INC   HL   
07F5   E5                     PUSH   HL   
07F6   DD E1                  POP   IX   ; pop r@
07F8   13                     INC   DE   ; IP = skip following word
07F9   13                     INC   DE   
07FA                          ;*Macro unroll:  NEXT                               ; continue
07FA   C3 F4 0E               JP   enter   ; continue
07FD                DECHILO:      
07FD   35                     DEC   (HL)   ; dec high byte of r@
07FE   2B                     DEC   HL   
07FF                DECLOW:      
07FF   35                     DEC   (HL)   ; dec low byte of r@
0800   6B                     LD   L,E   ; DE points to location of loop address
0801   62                     LD   H,D   
0802   5E                     LD   E,(HL)   ; DE points to loop address
0803   23                     INC   HL   
0804   56                     LD   D,(HL)   
0805                          ;*Macro unroll:  NEXT                               ; continue to loop address
0805   C3 F4 0E               JP   enter   ; continue to loop address
0808                          ;*Macro unroll: mCONST "version",7,0,version,1
0808                          ;*Macro unroll: CODE "version",7,0,version
0808                HEADER_VERSION:      
0808   E1 07                  DW   link   
080A                LINK:     .SET   HEADER_version   
080A   07                     DB   0 + 7   
080B   76 65 72 73 69 6F 6E   DB   "version"   
0812                VERSION:      
0812                          ;*Macro unroll:  ppush0 B,C
0812   DD 71 00               LD   (IX+0),C   
0815   DD 23                  INC   IX   
0817   DD 70 00               LD   (IX+0),B   
081A   DD 23                  INC   IX   
081C   01 01 00               LD   BC,1   
081F                          ;*Macro unroll:  NEXT
081F   C3 F4 0E               JP   enter   
0822                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
0822                          ;*Macro unroll: CODE "r0",2,0,rz
0822                HEADER_RZ:      
0822   08 08                  DW   link   
0824                LINK:     .SET   HEADER_rz   
0824   02                     DB   0 + 2   
0825   72 30                  DB   "r0"   
0827                RZ:          
0827                          ;*Macro unroll:  ppush0 B,C
0827   DD 71 00               LD   (IX+0),C   
082A   DD 23                  INC   IX   
082C   DD 70 00               LD   (IX+0),B   
082F   DD 23                  INC   IX   
0831   01 A7 2E               LD   BC,ret_stack   
0834                          ;*Macro unroll:  NEXT
0834   C3 F4 0E               JP   enter   
0837                          ;*Macro unroll: mCONST "msk_immed",9,0,__msk_immed,msk_immed
0837                          ;*Macro unroll: CODE "msk_immed",9,0,__msk_immed
0837                HEADER___MSK_IMMED:      
0837   22 08                  DW   link   
0839                LINK:     .SET   HEADER___msk_immed   
0839   09                     DB   0 + 9   
083A   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
0843                __MSK_IMMED:      
0843                          ;*Macro unroll:  ppush0 B,C
0843   DD 71 00               LD   (IX+0),C   
0846   DD 23                  INC   IX   
0848   DD 70 00               LD   (IX+0),B   
084B   DD 23                  INC   IX   
084D   01 80 00               LD   BC,msk_immed   
0850                          ;*Macro unroll:  NEXT
0850   C3 F4 0E               JP   enter   
0853                          ;*Macro unroll: mCONST "msk_hidden",10,0,__msk_hidden,msk_hidden
0853                          ;*Macro unroll: CODE "msk_hidden",10,0,__msk_hidden
0853                HEADER___MSK_HIDDEN:      
0853   37 08                  DW   link   
0855                LINK:     .SET   HEADER___msk_hidden   
0855   0A                     DB   0 + 10   
0856   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
0860                __MSK_HIDDEN:      
0860                          ;*Macro unroll:  ppush0 B,C
0860   DD 71 00               LD   (IX+0),C   
0863   DD 23                  INC   IX   
0865   DD 70 00               LD   (IX+0),B   
0868   DD 23                  INC   IX   
086A   01 40 00               LD   BC,msk_hidden   
086D                          ;*Macro unroll:  NEXT
086D   C3 F4 0E               JP   enter   
0870                          ;*Macro unroll: mCONST "msk_length",10,0,__msk_length,msk_length
0870                          ;*Macro unroll: CODE "msk_length",10,0,__msk_length
0870                HEADER___MSK_LENGTH:      
0870   53 08                  DW   link   
0872                LINK:     .SET   HEADER___msk_length   
0872   0A                     DB   0 + 10   
0873   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
087D                __MSK_LENGTH:      
087D                          ;*Macro unroll:  ppush0 B,C
087D   DD 71 00               LD   (IX+0),C   
0880   DD 23                  INC   IX   
0882   DD 70 00               LD   (IX+0),B   
0885   DD 23                  INC   IX   
0887   01 3F 00               LD   BC,msk_length   
088A                          ;*Macro unroll:  NEXT
088A   C3 F4 0E               JP   enter   
088D                          ;*Macro unroll: mCONST "TRUE",4,0,TRUE,-1
088D                          ;*Macro unroll: CODE "TRUE",4,0,TRUE
088D                HEADER_TRUE:      
088D   70 08                  DW   link   
088F                LINK:     .SET   HEADER_TRUE   
088F   04                     DB   0 + 4   
0890   54 52 55 45            DB   "TRUE"   
0894                TRUE:        
0894                          ;*Macro unroll:  ppush0 B,C
0894   DD 71 00               LD   (IX+0),C   
0897   DD 23                  INC   IX   
0899   DD 70 00               LD   (IX+0),B   
089C   DD 23                  INC   IX   
089E   01 FF FF               LD   BC,-1   
08A1                          ;*Macro unroll:  NEXT
08A1   C3 F4 0E               JP   enter   
08A4                          ;*Macro unroll: mCONST "FALSE",5,0,FALSE,0
08A4                          ;*Macro unroll: CODE "FALSE",5,0,FALSE
08A4                HEADER_FALSE:      
08A4   8D 08                  DW   link   
08A6                LINK:     .SET   HEADER_FALSE   
08A6   05                     DB   0 + 5   
08A7   46 41 4C 53 45         DB   "FALSE"   
08AC                FALSE:       
08AC                          ;*Macro unroll:  ppush0 B,C
08AC   DD 71 00               LD   (IX+0),C   
08AF   DD 23                  INC   IX   
08B1   DD 70 00               LD   (IX+0),B   
08B4   DD 23                  INC   IX   
08B6   01 00 00               LD   BC,0   
08B9                          ;*Macro unroll:  NEXT
08B9   C3 F4 0E               JP   enter   
08BC                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
08BC                          ;*Macro unroll: CODE "pad",3,0,pad
08BC                HEADER_PAD:      
08BC   A4 08                  DW   link   
08BE                LINK:     .SET   HEADER_pad   
08BE   03                     DB   0 + 3   
08BF   70 61 64               DB   "pad"   
08C2                PAD:         
08C2                          ;*Macro unroll:  ppush0 B,C
08C2   DD 71 00               LD   (IX+0),C   
08C5   DD 23                  INC   IX   
08C7   DD 70 00               LD   (IX+0),B   
08CA   DD 23                  INC   IX   
08CC   01 4D 31               LD   BC,var_pad   
08CF                          ;*Macro unroll:  NEXT
08CF   C3 F4 0E               JP   enter   
08D2                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
08D2                          ;*Macro unroll: CODE "here",4,0,here
08D2                HEADER_HERE:      
08D2   BC 08                  DW   link   
08D4                LINK:     .SET   HEADER_here   
08D4   04                     DB   0 + 4   
08D5   68 65 72 65            DB   "here"   
08D9                HERE:        
08D9                          ;*Macro unroll:  ppush0 B,C
08D9   DD 71 00               LD   (IX+0),C   
08DC   DD 23                  INC   IX   
08DE   DD 70 00               LD   (IX+0),B   
08E1   DD 23                  INC   IX   
08E3   01 51 32               LD   BC,var_here   
08E6                          ;*Macro unroll:  NEXT
08E6   C3 F4 0E               JP   enter   
08E9                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
08E9                          ;*Macro unroll: CODE "intp_stop",9,0,intp_stop
08E9                HEADER_INTP_STOP:      
08E9   D2 08                  DW   link   
08EB                LINK:     .SET   HEADER_intp_stop   
08EB   09                     DB   0 + 9   
08EC   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
08F5                INTP_STOP:      
08F5                          ;*Macro unroll:  ppush0 B,C
08F5   DD 71 00               LD   (IX+0),C   
08F8   DD 23                  INC   IX   
08FA   DD 70 00               LD   (IX+0),B   
08FD   DD 23                  INC   IX   
08FF   01 53 32               LD   BC,var_intp_stop   
0902                          ;*Macro unroll:  NEXT
0902   C3 F4 0E               JP   enter   
0905                          ;*Macro unroll: mVAR "state",5,0,state, var_state
0905                          ;*Macro unroll: CODE "state",5,0,state
0905                HEADER_STATE:      
0905   E9 08                  DW   link   
0907                LINK:     .SET   HEADER_state   
0907   05                     DB   0 + 5   
0908   73 74 61 74 65         DB   "state"   
090D                STATE:       
090D                          ;*Macro unroll:  ppush0 B,C
090D   DD 71 00               LD   (IX+0),C   
0910   DD 23                  INC   IX   
0912   DD 70 00               LD   (IX+0),B   
0915   DD 23                  INC   IX   
0917   01 55 32               LD   BC,var_state   
091A                          ;*Macro unroll:  NEXT
091A   C3 F4 0E               JP   enter   
091D                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
091D                          ;*Macro unroll: CODE "nesting",7,0,nesting
091D                HEADER_NESTING:      
091D   05 09                  DW   link   
091F                LINK:     .SET   HEADER_nesting   
091F   07                     DB   0 + 7   
0920   6E 65 73 74 69 6E 67   DB   "nesting"   
0927                NESTING:      
0927                          ;*Macro unroll:  ppush0 B,C
0927   DD 71 00               LD   (IX+0),C   
092A   DD 23                  INC   IX   
092C   DD 70 00               LD   (IX+0),B   
092F   DD 23                  INC   IX   
0931   01 57 32               LD   BC,var_nesting   
0934                          ;*Macro unroll:  NEXT
0934   C3 F4 0E               JP   enter   
0937                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
0937                          ;*Macro unroll: CODE "sp0",3,0,sp0
0937                HEADER_SP0:      
0937   1D 09                  DW   link   
0939                LINK:     .SET   HEADER_sp0   
0939   03                     DB   0 + 3   
093A   73 70 30               DB   "sp0"   
093D                SP0:         
093D                          ;*Macro unroll:  ppush0 B,C
093D   DD 71 00               LD   (IX+0),C   
0940   DD 23                  INC   IX   
0942   DD 70 00               LD   (IX+0),B   
0945   DD 23                  INC   IX   
0947   01 59 32               LD   BC,var_sp0   
094A                          ;*Macro unroll:  NEXT
094A   C3 F4 0E               JP   enter   
094D                          ;*Macro unroll: mVAR "base",4,0,base, var_base
094D                          ;*Macro unroll: CODE "base",4,0,base
094D                HEADER_BASE:      
094D   37 09                  DW   link   
094F                LINK:     .SET   HEADER_base   
094F   04                     DB   0 + 4   
0950   62 61 73 65            DB   "base"   
0954                BASE:        
0954                          ;*Macro unroll:  ppush0 B,C
0954   DD 71 00               LD   (IX+0),C   
0957   DD 23                  INC   IX   
0959   DD 70 00               LD   (IX+0),B   
095C   DD 23                  INC   IX   
095E   01 5B 32               LD   BC,var_base   
0961                          ;*Macro unroll:  NEXT
0961   C3 F4 0E               JP   enter   
0964                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
0964                          ;*Macro unroll: CODE "latestStr",6,0,latestStr
0964                HEADER_LATESTSTR:      
0964   4D 09                  DW   link   
0966                LINK:     .SET   HEADER_latestStr   
0966   06                     DB   0 + 6   
0967   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
0970                LATESTSTR:      
0970                          ;*Macro unroll:  ppush0 B,C
0970   DD 71 00               LD   (IX+0),C   
0973   DD 23                  INC   IX   
0975   DD 70 00               LD   (IX+0),B   
0978   DD 23                  INC   IX   
097A   01 5D 32               LD   BC,var_latest_str   
097D                          ;*Macro unroll:  NEXT
097D   C3 F4 0E               JP   enter   
0980                          ;*Macro unroll: CODE "{",1,msk_immed,lbrace
0980                HEADER_LBRACE:      
0980   64 09                  DW   link   
0982                LINK:     .SET   HEADER_lbrace   
0982   81                     DB   msk_immed + 1   
0983   7B                     DB   "{"   
0984                LBRACE:      
0984                          ;*Macro unroll:  ENTER
0984   CF                     RST   $08   
0985   0D 09 38 0F DD 03      DW   state,fetch,ZEQUAL   
098B   27 09 38 0F DD 03      DW   nesting,fetch,ZEQUAL   
0991   86 00                  DW   ANDD   
0993                          ;*Macro unroll:  cIf
0993   8A 07 00 00            DW   QBRAN,0   
0997                          ;*Macro unroll:  CPL_PUSH $
0997                CPL_COUNT:   .SET   CPL_COUNT + 1   
0997                CPL_10:   .SET   CPL_9   
0997                CPL_9:    .SET   CPL_8   
0997                CPL_8:    .SET   CPL_7   
0997                CPL_7:    .SET   CPL_6   
0997                CPL_6:    .SET   CPL_5   
0997                CPL_5:    .SET   CPL_4   
0997                CPL_4:    .SET   CPL_3   
0997                CPL_3:    .SET   CPL_2   
0997                CPL_2:    .SET   CPL_TOP   
0997                CPL_TOP:   .SET   $   
0997   D9 08 38 0F            DW   here,fetch   ; TOS = here
099B   13 12 CF 00 0A 10      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
09A1                          ;*Macro unroll:  cEndIf
09A1                          ;*Macro unroll:  cBRANCH_FWD
09A1                CUR_ADR:   .SET   $   
0995                          .ORG   CPL_TOP - 2   
0995   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
09A1                          .ORG   CUR_ADR   
09A1                          ;*Macro unroll:  CPL_POP
09A1                CPL_COUNT:   .SET   CPL_COUNT - 1   
09A1                CPL_TOP:   .SET   CPL_2   
09A1                CPL_2:    .SET   CPL_3   
09A1                CPL_3:    .SET   CPL_4   
09A1                CPL_4:    .SET   CPL_5   
09A1                CPL_5:    .SET   CPL_6   
09A1                CPL_6:    .SET   CPL_7   
09A1                CPL_7:    .SET   CPL_8   
09A1                CPL_8:    .SET   CPL_9   
09A1                CPL_9:    .SET   CPL_10   
09A1                CPL_10:   .SET   0   
09A1   BE 0D                  DW   nestPlus   ; increase nesting
09A3                          ;*Macro unroll:  EXIT                             ; return from the function.
09A3   05 0F                  DW   exit   ; return from the function.
09A5   C3 F4 0E               JP   enter   
09A8                          ;*Macro unroll: CODE "}",1,msk_immed,rbrace
09A8                HEADER_RBRACE:      
09A8   80 09                  DW   link   
09AA                LINK:     .SET   HEADER_rbrace   
09AA   81                     DB   msk_immed + 1   
09AB   7D                     DB   "}"   
09AC                RBRACE:      
09AC                          ;*Macro unroll:  ENTER
09AC   CF                     RST   $08   
09AD   C8 0D                  DW   nestMinus   ; reduce nesting
09AF   0D 09 38 0F DD 03      DW   state,fetch,ZEQUAL   
09B5   27 09 38 0F DD 03      DW   nesting,fetch,ZEQUAL   
09BB   86 00                  DW   ANDD   
09BD                          ;*Macro unroll:  cIf
09BD   8A 07 00 00            DW   QBRAN,0   
09C1                          ;*Macro unroll:  CPL_PUSH $
09C1                CPL_COUNT:   .SET   CPL_COUNT + 1   
09C1                CPL_10:   .SET   CPL_9   
09C1                CPL_9:    .SET   CPL_8   
09C1                CPL_8:    .SET   CPL_7   
09C1                CPL_7:    .SET   CPL_6   
09C1                CPL_6:    .SET   CPL_5   
09C1                CPL_5:    .SET   CPL_4   
09C1                CPL_4:    .SET   CPL_3   
09C1                CPL_3:    .SET   CPL_2   
09C1                CPL_2:    .SET   CPL_TOP   
09C1                CPL_TOP:   .SET   $   
09C1   13 12 05 0F EE 0F      DW   lit,exit,comma   ; append exit (so the word will return).
09C7                          ;*Macro unroll:  cEndIf
09C7                          ;*Macro unroll:  cBRANCH_FWD
09C7                CUR_ADR:   .SET   $   
09BF                          .ORG   CPL_TOP - 2   
09BF   08 00                  DW   CUR_ADR - CPL_TOP + 2   
09C7                          .ORG   CUR_ADR   
09C7                          ;*Macro unroll:  CPL_POP
09C7                CPL_COUNT:   .SET   CPL_COUNT - 1   
09C7                CPL_TOP:   .SET   CPL_2   
09C7                CPL_2:    .SET   CPL_3   
09C7                CPL_3:    .SET   CPL_4   
09C7                CPL_4:    .SET   CPL_5   
09C7                CPL_5:    .SET   CPL_6   
09C7                CPL_6:    .SET   CPL_7   
09C7                CPL_7:    .SET   CPL_8   
09C7                CPL_8:    .SET   CPL_9   
09C7                CPL_9:    .SET   CPL_10   
09C7                CPL_10:   .SET   0   
09C7                          ;*Macro unroll:  EXIT                             ; return from the function.
09C7   05 0F                  DW   exit   ; return from the function.
09C9   C3 F4 0E               JP   enter   
09CC                          ;*Macro unroll: CODE "}exec",5,msk_immed,rbraceExec
09CC                HEADER_RBRACEEXEC:      
09CC   A8 09                  DW   link   
09CE                LINK:     .SET   HEADER_rbraceExec   
09CE   85                     DB   msk_immed + 5   
09CF   7D 65 78 65 63         DB   "}exec"   
09D4                RBRACEEXEC:      
09D4                          ;*Macro unroll:  ENTER
09D4   CF                     RST   $08   
09D5   AC 09                  DW   rbrace   
09D7   0D 09 38 0F DD 03      DW   state,fetch,ZEQUAL   
09DD   27 09 38 0F DD 03      DW   nesting,fetch,ZEQUAL   
09E3   86 00                  DW   ANDD   
09E5                          ;*Macro unroll:  cIf
09E5   8A 07 00 00            DW   QBRAN,0   
09E9                          ;*Macro unroll:  CPL_PUSH $
09E9                CPL_COUNT:   .SET   CPL_COUNT + 1   
09E9                CPL_10:   .SET   CPL_9   
09E9                CPL_9:    .SET   CPL_8   
09E9                CPL_8:    .SET   CPL_7   
09E9                CPL_7:    .SET   CPL_6   
09E9                CPL_6:    .SET   CPL_5   
09E9                CPL_5:    .SET   CPL_4   
09E9                CPL_4:    .SET   CPL_3   
09E9                CPL_3:    .SET   CPL_2   
09E9                CPL_2:    .SET   CPL_TOP   
09E9                CPL_TOP:   .SET   $   
09E9   94 12                  DW   DUPP   
09EB   D9 08 17 0F            DW   here,store   
09EF   B7 0B                  DW   execute   
09F1                          ;*Macro unroll:  cEndIf
09F1                          ;*Macro unroll:  cBRANCH_FWD
09F1                CUR_ADR:   .SET   $   
09E7                          .ORG   CPL_TOP - 2   
09E7   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
09F1                          .ORG   CUR_ADR   
09F1                          ;*Macro unroll:  CPL_POP
09F1                CPL_COUNT:   .SET   CPL_COUNT - 1   
09F1                CPL_TOP:   .SET   CPL_2   
09F1                CPL_2:    .SET   CPL_3   
09F1                CPL_3:    .SET   CPL_4   
09F1                CPL_4:    .SET   CPL_5   
09F1                CPL_5:    .SET   CPL_6   
09F1                CPL_6:    .SET   CPL_7   
09F1                CPL_7:    .SET   CPL_8   
09F1                CPL_8:    .SET   CPL_9   
09F1                CPL_9:    .SET   CPL_10   
09F1                CPL_10:   .SET   0   
09F1                          ;*Macro unroll:  EXIT                             ; return from the function.
09F1   05 0F                  DW   exit   ; return from the function.
09F3   C3 F4 0E               JP   enter   
09F6                          ;*Macro unroll: CODE ".",1,0,DOT                 ; print top of stack in BASE
09F6                HEADER_DOT:      ; print top of stack in BASE
09F6   CC 09                  DW   link   
09F8                LINK:     .SET   HEADER_DOT   
09F8   01                     DB   0 + 1   
09F9   2E                     DB   "."   
09FA                DOT:         
09FA   E5                     PUSH   HL   
09FB   D5                     PUSH   DE   
09FC   C5                     PUSH   BC   
09FD                          ;*Macro unroll:  loadWord H,L, B,C
09FD   69                     LD   L,C   
09FE   60                     LD   H,B   
09FF   3A 5B 32               LD   A,(VAR_BASE)   
0A02   4F                     LD   C,A   
0A03   11 CD 30               LD   DE,wordBuf   
0A06   CD 38 0A               CALL   formatNum   
0A09   CD F2 11               CALL   printStr   
0A0C   CD 05 12               CALL   printSpace   
0A0F   C1                     POP   BC   
0A10   D1                     POP   DE   
0A11   E1                     POP   HL   
0A12                          ;*Macro unroll:  ppop0 B,C
0A12   DD 2B                  DEC   IX   
0A14   DD 46 00               LD   B,(IX+0)   
0A17   DD 2B                  DEC   IX   
0A19   DD 4E 00               LD   C,(IX+0)   
0A1C                          ;*Macro unroll:  NEXT
0A1C   C3 F4 0E               JP   enter   
0A1F                PRINTNUM:      
0A1F   E5                     PUSH   HL   
0A20   D5                     PUSH   DE   
0A21   C5                     PUSH   BC   
0A22                          ;*Macro unroll:  loadWord H,L, B,C
0A22   69                     LD   L,C   
0A23   60                     LD   H,B   
0A24   3A 5B 32               LD   A,(VAR_BASE)   
0A27   4F                     LD   C,A   
0A28   11 CD 30               LD   DE,wordBuf   
0A2B   CD 38 0A               CALL   formatNum   
0A2E   CD F2 11               CALL   printStr   
0A31   CD 05 12               CALL   printSpace   
0A34   C1                     POP   BC   
0A35   D1                     POP   DE   
0A36   E1                     POP   HL   
0A37   C9                     RET      
0A38                             ; 
0A38                             ; HL = data, DE = ptr to lineBuf, C = base ***
0A38                             ; DE = ptr to string, BC = length
0A38                             ; 
0A38                FORMATNUM:      
0A38                             ; Detect sign of HL.
0A38   CB 7C                  BIT   7,H   
0A3A                          ;*Macro unroll:  _if nz
0A3A   C2 40 0A               JP   nz,L_M_1329S42   
0A3D   C3 3D 0A               JP   $   
0A40                          ;*Macro unroll:  STRUC_PUSH $
0A40                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A40                STRUC_12:   .SET   STRUC_11   
0A40                STRUC_11:   .SET   STRUC_10   
0A40                STRUC_10:   .SET   STRUC_9   
0A40                STRUC_9:   .SET   STRUC_8   
0A40                STRUC_8:   .SET   STRUC_7   
0A40                STRUC_7:   .SET   STRUC_6   
0A40                STRUC_6:   .SET   STRUC_5   
0A40                STRUC_5:   .SET   STRUC_4   
0A40                STRUC_4:   .SET   STRUC_3   
0A40                STRUC_3:   .SET   STRUC_2   
0A40                STRUC_2:   .SET   STRUC_TOP   
0A40                STRUC_TOP:   .SET   $   
0A40                L_M_1329S42:      
0A40                             ; HL is negative. Output "-" to string and negate HL.
0A40   3E 2D                  LD   A,"-"   
0A42   12                     LD   (DE),A   
0A43   13                     INC   DE   
0A44   CD 32 03               CALL   negateNum   
0A47                          ;*Macro unroll:  _endif
0A47                          ;*Macro unroll:  STRUC_FWD
0A47                CUR_ADR:   .SET   $   
0A3E                          .ORG   STRUC_TOP - 2   
0A3E   47 0A                  DW   CUR_ADR   
0A47                          .ORG   CUR_ADR   
0A47                          ;*Macro unroll:  STRUC_POP
0A47                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A47                STRUC_TOP:   .SET   STRUC_2   
0A47                STRUC_2:   .SET   STRUC_3   
0A47                STRUC_3:   .SET   STRUC_4   
0A47                STRUC_4:   .SET   STRUC_5   
0A47                STRUC_5:   .SET   STRUC_6   
0A47                STRUC_6:   .SET   STRUC_7   
0A47                STRUC_7:   .SET   STRUC_8   
0A47                STRUC_8:   .SET   STRUC_9   
0A47                STRUC_9:   .SET   STRUC_10   
0A47                STRUC_10:   .SET   STRUC_11   
0A47                STRUC_11:   .SET   STRUC_12   
0A47                STRUC_12:   .SET   0   
0A47   06 00                  LD   B,0   ; B will count character length of number
0A49                          ;*Macro unroll:  _do
0A49   18 03                  JR   L_M_1337S51   
0A4B   C3 4B 0A               JP   $   
0A4E                          ;*Macro unroll:  DLOOP_PUSH $
0A4E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A4E                DLOOP_12:   .SET   DLOOP_11   
0A4E                DLOOP_11:   .SET   DLOOP_10   
0A4E                DLOOP_10:   .SET   DLOOP_9   
0A4E                DLOOP_9:   .SET   DLOOP_8   
0A4E                DLOOP_8:   .SET   DLOOP_7   
0A4E                DLOOP_7:   .SET   DLOOP_6   
0A4E                DLOOP_6:   .SET   DLOOP_5   
0A4E                DLOOP_5:   .SET   DLOOP_4   
0A4E                DLOOP_4:   .SET   DLOOP_3   
0A4E                DLOOP_3:   .SET   DLOOP_2   
0A4E                DLOOP_2:   .SET   DLOOP_TOP   
0A4E                DLOOP_TOP:   .SET   $   
0A4E                L_M_1337S51:      
0A4E   C5                     PUSH   BC   
0A4F   CD 3A 03               CALL   divideWordByByte   ; HL = HL / A, A = remainder
0A52   C1                     POP   BC   
0A53   F5                     PUSH   AF   
0A54   04                     INC   B   
0A55                          ;*Macro unroll:  checkZeroWord H,L
0A55   7D                     LD   A,L   
0A56   B4                     OR   H   
0A57                          ;*Macro unroll:  _until z
0A57   CA 4B 0A               JP   z,DLOOP_TOP - 3   
0A5A                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A5A                CUR_ADR:   .SET   $   ; needed?
0A4C                          .ORG   DLOOP_TOP - 2   
0A4C   5A 0A                  DW   CUR_ADR   
0A5A                          .ORG   CUR_ADR   
0A5A                          ;*Macro unroll:  _enddo
0A5A   C3 4E 0A               JP   DLOOP_TOP   
0A5D                          ;*Macro unroll:  DLOOP_FWD
0A5D                CUR_ADR:   .SET   $   
0A4C                          .ORG   DLOOP_TOP - 2   
0A4C   5D 0A                  DW   CUR_ADR   
0A5D                          .ORG   CUR_ADR   
0A5D                          ;*Macro unroll:  DLOOP_POP
0A5D                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A5D                DLOOP_TOP:   .SET   DLOOP_2   
0A5D                DLOOP_2:   .SET   DLOOP_3   
0A5D                DLOOP_3:   .SET   DLOOP_4   
0A5D                DLOOP_4:   .SET   DLOOP_5   
0A5D                DLOOP_5:   .SET   DLOOP_6   
0A5D                DLOOP_6:   .SET   DLOOP_7   
0A5D                DLOOP_7:   .SET   DLOOP_8   
0A5D                DLOOP_8:   .SET   DLOOP_9   
0A5D                DLOOP_9:   .SET   DLOOP_10   
0A5D                DLOOP_10:   .SET   DLOOP_11   
0A5D                DLOOP_11:   .SET   DLOOP_12   
0A5D                DLOOP_12:   .SET   0   
0A5D                          ;*Macro unroll:  _do
0A5D   18 03                  JR   L_M_1346S60   
0A5F   C3 5F 0A               JP   $   
0A62                          ;*Macro unroll:  DLOOP_PUSH $
0A62                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A62                DLOOP_12:   .SET   DLOOP_11   
0A62                DLOOP_11:   .SET   DLOOP_10   
0A62                DLOOP_10:   .SET   DLOOP_9   
0A62                DLOOP_9:   .SET   DLOOP_8   
0A62                DLOOP_8:   .SET   DLOOP_7   
0A62                DLOOP_7:   .SET   DLOOP_6   
0A62                DLOOP_6:   .SET   DLOOP_5   
0A62                DLOOP_5:   .SET   DLOOP_4   
0A62                DLOOP_4:   .SET   DLOOP_3   
0A62                DLOOP_3:   .SET   DLOOP_2   
0A62                DLOOP_2:   .SET   DLOOP_TOP   
0A62                DLOOP_TOP:   .SET   $   
0A62                L_M_1346S60:      
0A62   F1                     POP   AF   
0A63   C6 30                  ADD   A,$30   ; convert digit to ASCII
0A65   FE 3A                  CP   $3A   
0A67                          ;*Macro unroll:  _if nc
0A67   D2 6D 0A               JP   nc,L_M_1350S64   
0A6A   C3 6A 0A               JP   $   
0A6D                          ;*Macro unroll:  STRUC_PUSH $
0A6D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A6D                STRUC_12:   .SET   STRUC_11   
0A6D                STRUC_11:   .SET   STRUC_10   
0A6D                STRUC_10:   .SET   STRUC_9   
0A6D                STRUC_9:   .SET   STRUC_8   
0A6D                STRUC_8:   .SET   STRUC_7   
0A6D                STRUC_7:   .SET   STRUC_6   
0A6D                STRUC_6:   .SET   STRUC_5   
0A6D                STRUC_5:   .SET   STRUC_4   
0A6D                STRUC_4:   .SET   STRUC_3   
0A6D                STRUC_3:   .SET   STRUC_2   
0A6D                STRUC_2:   .SET   STRUC_TOP   
0A6D                STRUC_TOP:   .SET   $   
0A6D                L_M_1350S64:      
0A6D   C6 07                  ADD   A,7   
0A6F                          ;*Macro unroll:  _endif
0A6F                          ;*Macro unroll:  STRUC_FWD
0A6F                CUR_ADR:   .SET   $   
0A6B                          .ORG   STRUC_TOP - 2   
0A6B   6F 0A                  DW   CUR_ADR   
0A6F                          .ORG   CUR_ADR   
0A6F                          ;*Macro unroll:  STRUC_POP
0A6F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A6F                STRUC_TOP:   .SET   STRUC_2   
0A6F                STRUC_2:   .SET   STRUC_3   
0A6F                STRUC_3:   .SET   STRUC_4   
0A6F                STRUC_4:   .SET   STRUC_5   
0A6F                STRUC_5:   .SET   STRUC_6   
0A6F                STRUC_6:   .SET   STRUC_7   
0A6F                STRUC_7:   .SET   STRUC_8   
0A6F                STRUC_8:   .SET   STRUC_9   
0A6F                STRUC_9:   .SET   STRUC_10   
0A6F                STRUC_10:   .SET   STRUC_11   
0A6F                STRUC_11:   .SET   STRUC_12   
0A6F                STRUC_12:   .SET   0   
0A6F   12                     LD   (DE),A   
0A70   13                     INC   DE   
0A71                          ;*Macro unroll:  _djnz
0A71   10 EF                  DJNZ   DLOOP_TOP   
0A73                          ;*Macro unroll:  DLOOP_FWD
0A73                CUR_ADR:   .SET   $   
0A60                          .ORG   DLOOP_TOP - 2   
0A60   73 0A                  DW   CUR_ADR   
0A73                          .ORG   CUR_ADR   
0A73                          ;*Macro unroll:  DLOOP_POP
0A73                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A73                DLOOP_TOP:   .SET   DLOOP_2   
0A73                DLOOP_2:   .SET   DLOOP_3   
0A73                DLOOP_3:   .SET   DLOOP_4   
0A73                DLOOP_4:   .SET   DLOOP_5   
0A73                DLOOP_5:   .SET   DLOOP_6   
0A73                DLOOP_6:   .SET   DLOOP_7   
0A73                DLOOP_7:   .SET   DLOOP_8   
0A73                DLOOP_8:   .SET   DLOOP_9   
0A73                DLOOP_9:   .SET   DLOOP_10   
0A73                DLOOP_10:   .SET   DLOOP_11   
0A73                DLOOP_11:   .SET   DLOOP_12   
0A73                DLOOP_12:   .SET   0   
0A73   21 CD 30               LD   HL,wordBuf   ;calc length
0A76   EB                     EX   DE,HL   
0A77   B7                     OR   A   
0A78   ED 52                  SBC   HL,DE   
0A7A                          ;*Macro unroll:  loadWord B,C, H,L
0A7A   4D                     LD   C,L   
0A7B   44                     LD   B,H   
0A7C   C9                     RET      
0A7D                             ; 
0A7D                             ; toNumber -  converts string to number in the ***
0A7D                             ; base strored in VAR_BASE
0A7D                             ; 
0A7D                             ; params: HL = string address, BC = string length
0A7D                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
0A7D                             ; destroys: AF
0A7D                             ; 
0A7D                TONUMBER:      
0A7D   FD E5                  PUSH   IY   ; save regs
0A7F   E5                     PUSH   HL   
0A80   E5                     PUSH   HL   ; IY = HL
0A81   FD E1                  POP   IY   
0A83   11 00 00               LD   DE,0   ; 16 bit accum
0A86   21 00 00               LD   HL,0   ; 8 bit char
0A89                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
0A89   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
0A8A   B0                     OR   B   
0A8B                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
0A8B   CA 91 0A               JP   z,L_M_1378S97   ; trying to parse a zero-length string is an error, But will return 0.
0A8E   C3 8E 0A               JP   $   
0A91                          ;*Macro unroll:  STRUC_PUSH $
0A91                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A91                STRUC_12:   .SET   STRUC_11   
0A91                STRUC_11:   .SET   STRUC_10   
0A91                STRUC_10:   .SET   STRUC_9   
0A91                STRUC_9:   .SET   STRUC_8   
0A91                STRUC_8:   .SET   STRUC_7   
0A91                STRUC_7:   .SET   STRUC_6   
0A91                STRUC_6:   .SET   STRUC_5   
0A91                STRUC_5:   .SET   STRUC_4   
0A91                STRUC_4:   .SET   STRUC_3   
0A91                STRUC_3:   .SET   STRUC_2   
0A91                STRUC_2:   .SET   STRUC_TOP   
0A91                STRUC_TOP:   .SET   $   
0A91                L_M_1378S97:      
0A91   E1                     POP   HL   
0A92   FD E1                  POP   IY   
0A94   C9                     RET      ; de = number, BC = err
0A95                          ;*Macro unroll:  _endif
0A95                          ;*Macro unroll:  STRUC_FWD
0A95                CUR_ADR:   .SET   $   
0A8F                          .ORG   STRUC_TOP - 2   
0A8F   95 0A                  DW   CUR_ADR   
0A95                          .ORG   CUR_ADR   
0A95                          ;*Macro unroll:  STRUC_POP
0A95                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A95                STRUC_TOP:   .SET   STRUC_2   
0A95                STRUC_2:   .SET   STRUC_3   
0A95                STRUC_3:   .SET   STRUC_4   
0A95                STRUC_4:   .SET   STRUC_5   
0A95                STRUC_5:   .SET   STRUC_6   
0A95                STRUC_6:   .SET   STRUC_7   
0A95                STRUC_7:   .SET   STRUC_8   
0A95                STRUC_8:   .SET   STRUC_9   
0A95                STRUC_9:   .SET   STRUC_10   
0A95                STRUC_10:   .SET   STRUC_11   
0A95                STRUC_11:   .SET   STRUC_12   
0A95                STRUC_12:   .SET   0   
0A95                             ; Check if first character is "-".
0A95   FD 7E 00               LD   A,(IY)   ; l = first character in string
0A98   FD 23                  INC   IY   
0A9A   D5                     PUSH   DE   ; push 0 on stack
0A9B   FE 2D                  CP   "-"   ; negative number?
0A9D                          ;*Macro unroll:  _if z
0A9D   CA A3 0A               JP   z,L_M_1388S107   
0AA0   C3 A0 0A               JP   $   
0AA3                          ;*Macro unroll:  STRUC_PUSH $
0AA3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AA3                STRUC_12:   .SET   STRUC_11   
0AA3                STRUC_11:   .SET   STRUC_10   
0AA3                STRUC_10:   .SET   STRUC_9   
0AA3                STRUC_9:   .SET   STRUC_8   
0AA3                STRUC_8:   .SET   STRUC_7   
0AA3                STRUC_7:   .SET   STRUC_6   
0AA3                STRUC_6:   .SET   STRUC_5   
0AA3                STRUC_5:   .SET   STRUC_4   
0AA3                STRUC_4:   .SET   STRUC_3   
0AA3                STRUC_3:   .SET   STRUC_2   
0AA3                STRUC_2:   .SET   STRUC_TOP   
0AA3                STRUC_TOP:   .SET   $   
0AA3                L_M_1388S107:      
0AA3   D1                     POP   DE   
0AA4   21 01 00               LD   HL,1   
0AA7   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
0AA8   0B                     DEC   BC   
0AA9                          ;*Macro unroll:  checkZeroWord B,C
0AA9   79                     LD   A,C   
0AAA   B0                     OR   B   
0AAB                          ;*Macro unroll:  _if z
0AAB   CA B1 0A               JP   z,L_M_1394S113   
0AAE   C3 AE 0A               JP   $   
0AB1                          ;*Macro unroll:  STRUC_PUSH $
0AB1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AB1                STRUC_12:   .SET   STRUC_11   
0AB1                STRUC_11:   .SET   STRUC_10   
0AB1                STRUC_10:   .SET   STRUC_9   
0AB1                STRUC_9:   .SET   STRUC_8   
0AB1                STRUC_8:   .SET   STRUC_7   
0AB1                STRUC_7:   .SET   STRUC_6   
0AB1                STRUC_6:   .SET   STRUC_5   
0AB1                STRUC_5:   .SET   STRUC_4   
0AB1                STRUC_4:   .SET   STRUC_3   
0AB1                STRUC_3:   .SET   STRUC_2   
0AB1                STRUC_2:   .SET   STRUC_TOP   
0AB1                STRUC_TOP:   .SET   $   
0AB1                L_M_1394S113:      
0AB1   E1                     POP   HL   ; error: string is only "-".
0AB2   01 01 00               LD   BC,1   
0AB5   E1                     POP   HL   
0AB6   FD E1                  POP   IY   
0AB8   C9                     RET      ; de = number, BC = err
0AB9                          ;*Macro unroll:  _endif
0AB9                          ;*Macro unroll:  STRUC_FWD
0AB9                CUR_ADR:   .SET   $   
0AAF                          .ORG   STRUC_TOP - 2   
0AAF   B9 0A                  DW   CUR_ADR   
0AB9                          .ORG   CUR_ADR   
0AB9                          ;*Macro unroll:  STRUC_POP
0AB9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AB9                STRUC_TOP:   .SET   STRUC_2   
0AB9                STRUC_2:   .SET   STRUC_3   
0AB9                STRUC_3:   .SET   STRUC_4   
0AB9                STRUC_4:   .SET   STRUC_5   
0AB9                STRUC_5:   .SET   STRUC_6   
0AB9                STRUC_6:   .SET   STRUC_7   
0AB9                STRUC_7:   .SET   STRUC_8   
0AB9                STRUC_8:   .SET   STRUC_9   
0AB9                STRUC_9:   .SET   STRUC_10   
0AB9                STRUC_10:   .SET   STRUC_11   
0AB9                STRUC_11:   .SET   STRUC_12   
0AB9                STRUC_12:   .SET   0   
0AB9                             ; Loop reading digits.
0AB9   C5                     PUSH   BC   
0ABA   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0ABE   CD 95 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0AC1   C1                     POP   BC   
0AC2   FD 7E 00               LD   A,(IY)   ; a = next character in string
0AC5   FD 23                  INC   IY   
0AC7                          ;*Macro unroll:  _endif
0AC7                          ;*Macro unroll:  STRUC_FWD
0AC7                CUR_ADR:   .SET   $   
0AA1                          .ORG   STRUC_TOP - 2   
0AA1   C7 0A                  DW   CUR_ADR   
0AC7                          .ORG   CUR_ADR   
0AC7                          ;*Macro unroll:  STRUC_POP
0AC7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0AC7                STRUC_TOP:   .SET   STRUC_2   
0AC7                STRUC_2:   .SET   STRUC_3   
0AC7                STRUC_3:   .SET   STRUC_4   
0AC7                STRUC_4:   .SET   STRUC_5   
0AC7                STRUC_5:   .SET   STRUC_6   
0AC7                STRUC_6:   .SET   STRUC_7   
0AC7                STRUC_7:   .SET   STRUC_8   
0AC7                STRUC_8:   .SET   STRUC_9   
0AC7                STRUC_9:   .SET   STRUC_10   
0AC7                STRUC_10:   .SET   STRUC_11   
0AC7                STRUC_11:   .SET   STRUC_12   
0AC7                STRUC_12:   .SET   0   
0AC7                             ; Convert 0-9, A-z to a number 0-35.
0AC7                          ;*Macro unroll:  _do
0AC7   18 03                  JR   L_M_1410S130   
0AC9   C3 C9 0A               JP   $   
0ACC                          ;*Macro unroll:  DLOOP_PUSH $
0ACC                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0ACC                DLOOP_12:   .SET   DLOOP_11   
0ACC                DLOOP_11:   .SET   DLOOP_10   
0ACC                DLOOP_10:   .SET   DLOOP_9   
0ACC                DLOOP_9:   .SET   DLOOP_8   
0ACC                DLOOP_8:   .SET   DLOOP_7   
0ACC                DLOOP_7:   .SET   DLOOP_6   
0ACC                DLOOP_6:   .SET   DLOOP_5   
0ACC                DLOOP_5:   .SET   DLOOP_4   
0ACC                DLOOP_4:   .SET   DLOOP_3   
0ACC                DLOOP_3:   .SET   DLOOP_2   
0ACC                DLOOP_2:   .SET   DLOOP_TOP   
0ACC                DLOOP_TOP:   .SET   $   
0ACC                L_M_1410S130:      
0ACC   D6 30                  SUB   "0"   ; < "0"?
0ACE   38 33                  JR   c,toNumberExit   ; invalid char, end of number
0AD0   FE 0A                  CP   10   ; <= "9"?
0AD2                          ;*Macro unroll:  _if nc
0AD2   D2 D8 0A               JP   nc,L_M_1414S134   
0AD5   C3 D5 0A               JP   $   
0AD8                          ;*Macro unroll:  STRUC_PUSH $
0AD8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0AD8                STRUC_12:   .SET   STRUC_11   
0AD8                STRUC_11:   .SET   STRUC_10   
0AD8                STRUC_10:   .SET   STRUC_9   
0AD8                STRUC_9:   .SET   STRUC_8   
0AD8                STRUC_8:   .SET   STRUC_7   
0AD8                STRUC_7:   .SET   STRUC_6   
0AD8                STRUC_6:   .SET   STRUC_5   
0AD8                STRUC_5:   .SET   STRUC_4   
0AD8                STRUC_4:   .SET   STRUC_3   
0AD8                STRUC_3:   .SET   STRUC_2   
0AD8                STRUC_2:   .SET   STRUC_TOP   
0AD8                STRUC_TOP:   .SET   $   
0AD8                L_M_1414S134:      
0AD8   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0ADA                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0ADA   DA C9 0A               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0ADD                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0ADD                CUR_ADR:   .SET   $   ; needed?
0ACA                          .ORG   DLOOP_TOP - 2   
0ACA   DD 0A                  DW   CUR_ADR   
0ADD                          .ORG   CUR_ADR   
0ADD   C6 0A                  ADD   a,10   
0ADF                          ;*Macro unroll:  _endif
0ADF                          ;*Macro unroll:  STRUC_FWD
0ADF                CUR_ADR:   .SET   $   
0AD6                          .ORG   STRUC_TOP - 2   
0AD6   DF 0A                  DW   CUR_ADR   
0ADF                          .ORG   CUR_ADR   
0ADF                          ;*Macro unroll:  STRUC_POP
0ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0ADF                STRUC_TOP:   .SET   STRUC_2   
0ADF                STRUC_2:   .SET   STRUC_3   
0ADF                STRUC_3:   .SET   STRUC_4   
0ADF                STRUC_4:   .SET   STRUC_5   
0ADF                STRUC_5:   .SET   STRUC_6   
0ADF                STRUC_6:   .SET   STRUC_7   
0ADF                STRUC_7:   .SET   STRUC_8   
0ADF                STRUC_8:   .SET   STRUC_9   
0ADF                STRUC_9:   .SET   STRUC_10   
0ADF                STRUC_10:   .SET   STRUC_11   
0ADF                STRUC_11:   .SET   STRUC_12   
0ADF                STRUC_12:   .SET   0   
0ADF   2A 5B 32               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
0AE2   BD                     CP   L   ; >= BASE? then invalid char, end of number
0AE3                          ;*Macro unroll:  _until nc
0AE3   D2 C9 0A               JP   nc,DLOOP_TOP - 3   
0AE6                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0AE6                CUR_ADR:   .SET   $   ; needed?
0ACA                          .ORG   DLOOP_TOP - 2   
0ACA   E6 0A                  DW   CUR_ADR   
0AE6                          .ORG   CUR_ADR   
0AE6   83                     ADD   A,E   
0AE7   5F                     LD   E,A   
0AE8   3E 00                  LD   A,0   
0AEA   8A                     ADC   a,d   
0AEB   57                     LD   D,A   
0AEC   0B                     DEC   BC   ; dec char count
0AED                          ;*Macro unroll:  checkZeroWord B,C
0AED   79                     LD   A,C   
0AEE   B0                     OR   B   
0AEF                          ;*Macro unroll:  _until z
0AEF   CA C9 0A               JP   z,DLOOP_TOP - 3   
0AF2                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0AF2                CUR_ADR:   .SET   $   ; needed?
0ACA                          .ORG   DLOOP_TOP - 2   
0ACA   F2 0A                  DW   CUR_ADR   
0AF2                          .ORG   CUR_ADR   
0AF2   C5                     PUSH   BC   
0AF3   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0AF7   CD 95 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0AFA   C1                     POP   BC   
0AFB   FD 7E 00               LD   A,(IY)   ; a = next character in string
0AFE   FD 23                  INC   IY   
0B00                          ;*Macro unroll:  _enddo
0B00   C3 CC 0A               JP   DLOOP_TOP   
0B03                          ;*Macro unroll:  DLOOP_FWD
0B03                CUR_ADR:   .SET   $   
0ACA                          .ORG   DLOOP_TOP - 2   
0ACA   03 0B                  DW   CUR_ADR   
0B03                          .ORG   CUR_ADR   
0B03                          ;*Macro unroll:  DLOOP_POP
0B03                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0B03                DLOOP_TOP:   .SET   DLOOP_2   
0B03                DLOOP_2:   .SET   DLOOP_3   
0B03                DLOOP_3:   .SET   DLOOP_4   
0B03                DLOOP_4:   .SET   DLOOP_5   
0B03                DLOOP_5:   .SET   DLOOP_6   
0B03                DLOOP_6:   .SET   DLOOP_7   
0B03                DLOOP_7:   .SET   DLOOP_8   
0B03                DLOOP_8:   .SET   DLOOP_9   
0B03                DLOOP_9:   .SET   DLOOP_10   
0B03                DLOOP_10:   .SET   DLOOP_11   
0B03                DLOOP_11:   .SET   DLOOP_12   
0B03                DLOOP_12:   .SET   0   
0B03                TONUMBEREXIT:      
0B03   E1                     POP   HL   
0B04                          ;*Macro unroll:  checkZeroWord H,L
0B04   7D                     LD   A,L   
0B05   B4                     OR   H   
0B06                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0B06   C2 0C 0B               JP   nz,L_M_1440S163   ; if not -ve then skip
0B09   C3 09 0B               JP   $   
0B0C                          ;*Macro unroll:  STRUC_PUSH $
0B0C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B0C                STRUC_12:   .SET   STRUC_11   
0B0C                STRUC_11:   .SET   STRUC_10   
0B0C                STRUC_10:   .SET   STRUC_9   
0B0C                STRUC_9:   .SET   STRUC_8   
0B0C                STRUC_8:   .SET   STRUC_7   
0B0C                STRUC_7:   .SET   STRUC_6   
0B0C                STRUC_6:   .SET   STRUC_5   
0B0C                STRUC_5:   .SET   STRUC_4   
0B0C                STRUC_4:   .SET   STRUC_3   
0B0C                STRUC_3:   .SET   STRUC_2   
0B0C                STRUC_2:   .SET   STRUC_TOP   
0B0C                STRUC_TOP:   .SET   $   
0B0C                L_M_1440S163:      
0B0C   EB                     EX   DE,HL   ; negate de
0B0D   CD 32 03               CALL   negateNum   
0B10   EB                     EX   DE,HL   
0B11                          ;*Macro unroll:  _endif
0B11                          ;*Macro unroll:  STRUC_FWD
0B11                CUR_ADR:   .SET   $   
0B0A                          .ORG   STRUC_TOP - 2   
0B0A   11 0B                  DW   CUR_ADR   
0B11                          .ORG   CUR_ADR   
0B11                          ;*Macro unroll:  STRUC_POP
0B11                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0B11                STRUC_TOP:   .SET   STRUC_2   
0B11                STRUC_2:   .SET   STRUC_3   
0B11                STRUC_3:   .SET   STRUC_4   
0B11                STRUC_4:   .SET   STRUC_5   
0B11                STRUC_5:   .SET   STRUC_6   
0B11                STRUC_6:   .SET   STRUC_7   
0B11                STRUC_7:   .SET   STRUC_8   
0B11                STRUC_8:   .SET   STRUC_9   
0B11                STRUC_9:   .SET   STRUC_10   
0B11                STRUC_10:   .SET   STRUC_11   
0B11                STRUC_11:   .SET   STRUC_12   
0B11                STRUC_12:   .SET   0   
0B11   E1                     POP   HL   
0B12   FD E1                  POP   IY   
0B14   C9                     RET      ; de = number, BC = err
0B15                          ;*Macro unroll: CODE "number",6,0,NUMBER         ; ( ptr len -- num err )
0B15                HEADER_NUMBER:      ; ( ptr len -- num err )
0B15   F6 09                  DW   link   
0B17                LINK:     .SET   HEADER_NUMBER   
0B17   06                     DB   0 + 6   
0B18   6E 75 6D 62 65 72      DB   "number"   
0B1E                NUMBER:      
0B1E                          ;*Macro unroll:  ppop0 H,L
0B1E   DD 2B                  DEC   IX   
0B20   DD 66 00               LD   H,(IX+0)   
0B23   DD 2B                  DEC   IX   
0B25   DD 6E 00               LD   L,(IX+0)   
0B28   CD 7D 0A               CALL   toNumber   ; params: HL = string address, BC = string length
0B2B                             ; Returns the parsed number in DE,
0B2B                             ; BC = 0, success
0B2B                          ;*Macro unroll:  ppush0 D,E
0B2B   DD 73 00               LD   (IX+0),E   
0B2E   DD 23                  INC   IX   
0B30   DD 72 00               LD   (IX+0),D   
0B33   DD 23                  INC   IX   
0B35                          ;*Macro unroll:  NEXT
0B35   C3 F4 0E               JP   enter   
0B38                          ;*Macro unroll: CODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
0B38                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
0B38   15 0B                  DW   link   
0B3A                LINK:     .SET   HEADER_decimal   
0B3A   07                     DB   0 + 7   
0B3B   64 65 63 69 6D 61 6C   DB   "decimal"   
0B42                DECIMAL:      
0B42                          ;*Macro unroll:  ENTER
0B42   CF                     RST   $08   
0B43   13 12 0A 00 54 09 17 0F DW   lit,10,base,store   
0B4B                          ;*Macro unroll:  EXIT
0B4B   05 0F                  DW   exit   
0B4D   C3 F4 0E               JP   enter   
0B50                          ;*Macro unroll: CODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
0B50                HEADER_HEX:      ; pushes ptr to string and length on stack
0B50   38 0B                  DW   link   
0B52                LINK:     .SET   HEADER_hex   
0B52   03                     DB   0 + 3   
0B53   68 65 78               DB   "hex"   
0B56                HEX:         
0B56                          ;*Macro unroll:  ENTER
0B56   CF                     RST   $08   
0B57   13 12 10 00 54 09 17 0F DW   lit,16,base,store   
0B5F                          ;*Macro unroll:  EXIT
0B5F   05 0F                  DW   exit   
0B61   C3 F4 0E               JP   enter   
0B64                          ;*Macro unroll: CODE "quit",4,0,quit
0B64                HEADER_QUIT:      
0B64   50 0B                  DW   link   
0B66                LINK:     .SET   HEADER_quit   
0B66   04                     DB   0 + 4   
0B67   71 75 69 74            DB   "quit"   
0B6B                QUIT:        
0B6B                          ;*Macro unroll:  ENTER
0B6B   CF                     RST   $08   
0B6C   3D 09 38 0F A1 0F      DW   sp0,fetch,spStore   
0B72   D0 0B                  DW   interpret   
0B74                          ;*Macro unroll:  EXIT
0B74   05 0F                  DW   exit   
0B76   C3 F4 0E               JP   enter   
0B79                          ;*Macro unroll: CODE "word",5,0,WORD                 ; delim -- c-addr
0B79                HEADER_WORD:      ; delim -- c-addr
0B79   64 0B                  DW   link   
0B7B                LINK:     .SET   HEADER_WORD   
0B7B   05                     DB   0 + 5   
0B7C   77 6F 72 64            DB   "word"   
0B80                WORD:        
0B80                          ;*Macro unroll:  ENTER
0B80   CF                     RST   $08   
0B81   13 12 40 00            DW   lit,64   ; limit
0B85   D9 08 38 0F            DW   here,fetch   
0B89   38 0C                  DW   xword   ; writes to HERE!
0B8B                          ;*Macro unroll:  EXIT
0B8B   05 0F                  DW   exit   
0B8D   C3 F4 0E               JP   enter   
0B90                          ;*Macro unroll: CODE ">cfa",4,0,tcfa
0B90                HEADER_TCFA:      
0B90   79 0B                  DW   link   
0B92                LINK:     .SET   HEADER_tcfa   
0B92   04                     DB   0 + 4   
0B93   3E 63 66 61            DB   ">cfa"   
0B97                TCFA:        
0B97                          ;*Macro unroll:  ENTER
0B97   CF                     RST   $08   
0B98   13 12 02 00 CE 00      DW   lit,2,plus   
0B9E   60 13                  DW   count   
0BA0   13 12 3F 00 86 00      DW   lit,msk_length,ANDD   
0BA6   CE 00                  DW   plus   
0BA8                          ;*Macro unroll:  EXIT
0BA8   05 0F                  DW   exit   
0BAA   C3 F4 0E               JP   enter   
0BAD                          ;*Macro unroll: CODE "execute",7,0,EXECUTE
0BAD                HEADER_EXECUTE:      
0BAD   90 0B                  DW   link   
0BAF                LINK:     .SET   HEADER_EXECUTE   
0BAF   07                     DB   0 + 7   
0BB0   65 78 65 63 75 74 65   DB   "execute"   
0BB7                EXECUTE:      
0BB7                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0BB7   60                     LD   H,B   ; POP TOS into HL
0BB8   69                     LD   L,C   
0BB9                          ;*Macro unroll:  ppop0 B,C
0BB9   DD 2B                  DEC   IX   
0BBB   DD 46 00               LD   B,(IX+0)   
0BBE   DD 2B                  DEC   IX   
0BC0   DD 4E 00               LD   C,(IX+0)   
0BC3   E9                     JP   (hl)   ; go do Forth word
0BC4                          ;*Macro unroll: CODE "interpret",6,0,interpret
0BC4                HEADER_INTERPRET:      
0BC4   AD 0B                  DW   link   
0BC6                LINK:     .SET   HEADER_interpret   
0BC6   06                     DB   0 + 6   
0BC7   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0BD0                INTERPRET:      
0BD0   CF                     RST   $08   
0BD1                          ;*Macro unroll:  cDo
0BD1   A7 07 06 00            DW   BRAN,6   
0BD5   A7 07 00 00            DW   BRAN,0   
0BD9                          ;*Macro unroll:  CPL_PUSH $
0BD9                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BD9                CPL_10:   .SET   CPL_9   
0BD9                CPL_9:    .SET   CPL_8   
0BD9                CPL_8:    .SET   CPL_7   
0BD9                CPL_7:    .SET   CPL_6   
0BD9                CPL_6:    .SET   CPL_5   
0BD9                CPL_5:    .SET   CPL_4   
0BD9                CPL_4:    .SET   CPL_3   
0BD9                CPL_3:    .SET   CPL_2   
0BD9                CPL_2:    .SET   CPL_TOP   
0BD9                CPL_TOP:   .SET   $   
0BD9   72 0E 80 0B 60 13      DW   bl,word,count   ; pstr -- ptr len
0BDF   94 12 DD 03            DW   DUPP,zEqual   
0BE3                          ;*Macro unroll:  cIf
0BE3   8A 07 00 00            DW   QBRAN,0   
0BE7                          ;*Macro unroll:  CPL_PUSH $
0BE7                CPL_COUNT:   .SET   CPL_COUNT + 1   
0BE7                CPL_10:   .SET   CPL_9   
0BE7                CPL_9:    .SET   CPL_8   
0BE7                CPL_8:    .SET   CPL_7   
0BE7                CPL_7:    .SET   CPL_6   
0BE7                CPL_6:    .SET   CPL_5   
0BE7                CPL_5:    .SET   CPL_4   
0BE7                CPL_4:    .SET   CPL_3   
0BE7                CPL_3:    .SET   CPL_2   
0BE7                CPL_2:    .SET   CPL_TOP   
0BE7                CPL_TOP:   .SET   $   
0BE7   C8 12 C8 12            DW   drop,drop   ; ptr len --
0BEB                          ;*Macro unroll:  EXIT
0BEB   05 0F                  DW   exit   
0BED   C3 F4 0E               JP   enter   
0BF0                          ;*Macro unroll:  cEndif
0BF0                          ;*Macro unroll:  cBRANCH_FWD
0BF0                CUR_ADR:   .SET   $   
0BE5                          .ORG   CPL_TOP - 2   
0BE5   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0BF0                          .ORG   CUR_ADR   
0BF0                          ;*Macro unroll:  CPL_POP
0BF0                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BF0                CPL_TOP:   .SET   CPL_2   
0BF0                CPL_2:    .SET   CPL_3   
0BF0                CPL_3:    .SET   CPL_4   
0BF0                CPL_4:    .SET   CPL_5   
0BF0                CPL_5:    .SET   CPL_6   
0BF0                CPL_6:    .SET   CPL_7   
0BF0                CPL_7:    .SET   CPL_8   
0BF0                CPL_8:    .SET   CPL_9   
0BF0                CPL_9:    .SET   CPL_10   
0BF0                CPL_10:   .SET   0   
0BF0   1F 0D                  DW   interpToken   ; interpret the next word
0BF2                          ;*Macro unroll:  cEndDo
0BF2   A7 07 E5 FF            DW   BRAN,CPL_TOP - $ - 2   
0BF6                          ;*Macro unroll:  cBRANCH_FWD
0BF6                CUR_ADR:   .SET   $   
0BD7                          .ORG   CPL_TOP - 2   
0BD7   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0BF6                          .ORG   CUR_ADR   
0BF6                          ;*Macro unroll:  CPL_POP
0BF6                CPL_COUNT:   .SET   CPL_COUNT - 1   
0BF6                CPL_TOP:   .SET   CPL_2   
0BF6                CPL_2:    .SET   CPL_3   
0BF6                CPL_3:    .SET   CPL_4   
0BF6                CPL_4:    .SET   CPL_5   
0BF6                CPL_5:    .SET   CPL_6   
0BF6                CPL_6:    .SET   CPL_7   
0BF6                CPL_7:    .SET   CPL_8   
0BF6                CPL_8:    .SET   CPL_9   
0BF6                CPL_9:    .SET   CPL_10   
0BF6                CPL_10:   .SET   0   
0BF6                          ;*Macro unroll:  EXIT
0BF6   05 0F                  DW   exit   
0BF8   C3 F4 0E               JP   enter   
0BFB                             ; 
0BFB                             ; lookup - lookup header in dictionary ***
0BFB                             ; 
0BFB                             ; params: HL = string address, BC = string length
0BFB                             ; returns: DE = found header ptr or 0
0BFB                             ; destroys: AF
0BFB                             ; 
0BFB                LOOKUP:      
0BFB   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0BFF                          ;*Macro unroll:  _do
0BFF   18 03                  JR   L_M_1505S49   
0C01   C3 01 0C               JP   $   
0C04                          ;*Macro unroll:  DLOOP_PUSH $
0C04                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C04                DLOOP_12:   .SET   DLOOP_11   
0C04                DLOOP_11:   .SET   DLOOP_10   
0C04                DLOOP_10:   .SET   DLOOP_9   
0C04                DLOOP_9:   .SET   DLOOP_8   
0C04                DLOOP_8:   .SET   DLOOP_7   
0C04                DLOOP_7:   .SET   DLOOP_6   
0C04                DLOOP_6:   .SET   DLOOP_5   
0C04                DLOOP_5:   .SET   DLOOP_4   
0C04                DLOOP_4:   .SET   DLOOP_3   
0C04                DLOOP_3:   .SET   DLOOP_2   
0C04                DLOOP_2:   .SET   DLOOP_TOP   
0C04                DLOOP_TOP:   .SET   $   
0C04                L_M_1505S49:      
0C04                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0C04   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0C05   B2                     OR   D   
0C06   C8                     RET   z   
0C07                             ; Compare the length expected and the length of the word.
0C07                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0C07                             ; this won't pick the word (the length will appear to be wrong).
0C07   D5                     PUSH   DE   ; save ptr to header
0C08   13                     INC   DE   ; skip over first field
0C09   13                     INC   DE   
0C0A   1A                     LD   A,(DE)   ; a = flags+length field
0C0B   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
0C0D   B9                     CP   C   ; Length is the same?
0C0E                          ;*Macro unroll:  _if z
0C0E   CA 14 0C               JP   z,L_M_1517S65   
0C11   C3 11 0C               JP   $   
0C14                          ;*Macro unroll:  STRUC_PUSH $
0C14                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C14                STRUC_12:   .SET   STRUC_11   
0C14                STRUC_11:   .SET   STRUC_10   
0C14                STRUC_10:   .SET   STRUC_9   
0C14                STRUC_9:   .SET   STRUC_8   
0C14                STRUC_8:   .SET   STRUC_7   
0C14                STRUC_7:   .SET   STRUC_6   
0C14                STRUC_6:   .SET   STRUC_5   
0C14                STRUC_5:   .SET   STRUC_4   
0C14                STRUC_4:   .SET   STRUC_3   
0C14                STRUC_3:   .SET   STRUC_2   
0C14                STRUC_2:   .SET   STRUC_TOP   
0C14                STRUC_TOP:   .SET   $   
0C14                L_M_1517S65:      
0C14                             ; Compare the strings in detail.
0C14   13                     INC   DE   ; DE = Dictionary string we are checking against.
0C15   E5                     PUSH   HL   ; save HL, BC
0C16   C5                     PUSH   BC   
0C17   CD D1 13               CALL   compareStr   ; Compare the strings. BC = len
0C1A   C1                     POP   BC   
0C1B   E1                     POP   HL   
0C1C   B7                     OR   A   ; if A == 0 then matched
0C1D                          ;*Macro unroll:  _if z
0C1D   CA 23 0C               JP   z,L_M_1526S76   
0C20   C3 20 0C               JP   $   
0C23                          ;*Macro unroll:  STRUC_PUSH $
0C23                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C23                STRUC_12:   .SET   STRUC_11   
0C23                STRUC_11:   .SET   STRUC_10   
0C23                STRUC_10:   .SET   STRUC_9   
0C23                STRUC_9:   .SET   STRUC_8   
0C23                STRUC_8:   .SET   STRUC_7   
0C23                STRUC_7:   .SET   STRUC_6   
0C23                STRUC_6:   .SET   STRUC_5   
0C23                STRUC_5:   .SET   STRUC_4   
0C23                STRUC_4:   .SET   STRUC_3   
0C23                STRUC_3:   .SET   STRUC_2   
0C23                STRUC_2:   .SET   STRUC_TOP   
0C23                STRUC_TOP:   .SET   $   
0C23                L_M_1526S76:      
0C23   D1                     POP   DE   ; matched, restore DE and return
0C24   C9                     RET      
0C25                          ;*Macro unroll:  _endif
0C25                          ;*Macro unroll:  STRUC_FWD
0C25                CUR_ADR:   .SET   $   
0C21                          .ORG   STRUC_TOP - 2   
0C21   25 0C                  DW   CUR_ADR   
0C25                          .ORG   CUR_ADR   
0C25                          ;*Macro unroll:  STRUC_POP
0C25                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C25                STRUC_TOP:   .SET   STRUC_2   
0C25                STRUC_2:   .SET   STRUC_3   
0C25                STRUC_3:   .SET   STRUC_4   
0C25                STRUC_4:   .SET   STRUC_5   
0C25                STRUC_5:   .SET   STRUC_6   
0C25                STRUC_6:   .SET   STRUC_7   
0C25                STRUC_7:   .SET   STRUC_8   
0C25                STRUC_8:   .SET   STRUC_9   
0C25                STRUC_9:   .SET   STRUC_10   
0C25                STRUC_10:   .SET   STRUC_11   
0C25                STRUC_11:   .SET   STRUC_12   
0C25                STRUC_12:   .SET   0   
0C25                          ;*Macro unroll:  _endif
0C25                          ;*Macro unroll:  STRUC_FWD
0C25                CUR_ADR:   .SET   $   
0C12                          .ORG   STRUC_TOP - 2   
0C12   25 0C                  DW   CUR_ADR   
0C25                          .ORG   CUR_ADR   
0C25                          ;*Macro unroll:  STRUC_POP
0C25                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C25                STRUC_TOP:   .SET   STRUC_2   
0C25                STRUC_2:   .SET   STRUC_3   
0C25                STRUC_3:   .SET   STRUC_4   
0C25                STRUC_4:   .SET   STRUC_5   
0C25                STRUC_5:   .SET   STRUC_6   
0C25                STRUC_6:   .SET   STRUC_7   
0C25                STRUC_7:   .SET   STRUC_8   
0C25                STRUC_8:   .SET   STRUC_9   
0C25                STRUC_9:   .SET   STRUC_10   
0C25                STRUC_10:   .SET   STRUC_11   
0C25                STRUC_11:   .SET   STRUC_12   
0C25                STRUC_12:   .SET   0   
0C25   D1                     POP   DE   ; restore DE
0C26   1A                     LD   A,(DE)   
0C27   08                     EX   AF,AF'   
0C28   13                     INC   DE   
0C29   1A                     LD   A,(DE)   
0C2A   57                     LD   D,A   
0C2B   08                     EX   AF,AF'   
0C2C   5F                     LD   E,A   
0C2D                          ;*Macro unroll:  _enddo
0C2D   C3 04 0C               JP   DLOOP_TOP   
0C30                          ;*Macro unroll:  DLOOP_FWD
0C30                CUR_ADR:   .SET   $   
0C02                          .ORG   DLOOP_TOP - 2   
0C02   30 0C                  DW   CUR_ADR   
0C30                          .ORG   CUR_ADR   
0C30                          ;*Macro unroll:  DLOOP_POP
0C30                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C30                DLOOP_TOP:   .SET   DLOOP_2   
0C30                DLOOP_2:   .SET   DLOOP_3   
0C30                DLOOP_3:   .SET   DLOOP_4   
0C30                DLOOP_4:   .SET   DLOOP_5   
0C30                DLOOP_5:   .SET   DLOOP_6   
0C30                DLOOP_6:   .SET   DLOOP_7   
0C30                DLOOP_7:   .SET   DLOOP_8   
0C30                DLOOP_8:   .SET   DLOOP_9   
0C30                DLOOP_9:   .SET   DLOOP_10   
0C30                DLOOP_10:   .SET   DLOOP_11   
0C30                DLOOP_11:   .SET   DLOOP_12   
0C30                DLOOP_12:   .SET   0   
0C30                          ;*Macro unroll: CODE "xword",6,0,xword               ; delim limit addr -- c-addr
0C30                HEADER_XWORD:      ; delim limit addr -- c-addr
0C30   C4 0B                  DW   link   
0C32                LINK:     .SET   HEADER_xword   
0C32   06                     DB   0 + 6   
0C33   78 77 6F 72 64         DB   "xword"   
0C38                XWORD:       
0C38   CD 41 0C               CALL   xwordSkip   
0C3B   CD D5 0C               CALL   xwordRead   
0C3E                          ;*Macro unroll:  NEXT
0C3E   C3 F4 0E               JP   enter   
0C41                XWORDSKIP:      ; delim addr -- delim addr char
0C41                          ;*Macro unroll:  ppop H,L
0C41   60                     LD   H,B   
0C42   69                     LD   L,C   
0C43                          ;*Macro unroll:  ppop0 B,C
0C43   DD 2B                  DEC   IX   
0C45   DD 46 00               LD   B,(IX+0)   
0C48   DD 2B                  DEC   IX   
0C4A   DD 4E 00               LD   C,(IX+0)   
0C4D                          ;*Macro unroll:  ppop D,E
0C4D   50                     LD   D,B   
0C4E   59                     LD   E,C   
0C4F                          ;*Macro unroll:  ppop0 B,C
0C4F   DD 2B                  DEC   IX   
0C51   DD 46 00               LD   B,(IX+0)   
0C54   DD 2B                  DEC   IX   
0C56   DD 4E 00               LD   C,(IX+0)   
0C59                          ;*Macro unroll:  ppush0 B,C
0C59   DD 71 00               LD   (IX+0),C   
0C5C   DD 23                  INC   IX   
0C5E   DD 70 00               LD   (IX+0),B   
0C61   DD 23                  INC   IX   
0C63                          ;*Macro unroll:  ppush0 D,E
0C63   DD 73 00               LD   (IX+0),E   
0C66   DD 23                  INC   IX   
0C68   DD 72 00               LD   (IX+0),D   
0C6B   DD 23                  INC   IX   
0C6D                          ;*Macro unroll:  ppush0 H,L
0C6D   DD 75 00               LD   (IX+0),L   
0C70   DD 23                  INC   IX   
0C72   DD 74 00               LD   (IX+0),H   
0C75   DD 23                  INC   IX   
0C77                          ;*Macro unroll:  _do
0C77   18 03                  JR   L_M_1550S103   
0C79   C3 79 0C               JP   $   
0C7C                          ;*Macro unroll:  DLOOP_PUSH $
0C7C                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C7C                DLOOP_12:   .SET   DLOOP_11   
0C7C                DLOOP_11:   .SET   DLOOP_10   
0C7C                DLOOP_10:   .SET   DLOOP_9   
0C7C                DLOOP_9:   .SET   DLOOP_8   
0C7C                DLOOP_8:   .SET   DLOOP_7   
0C7C                DLOOP_7:   .SET   DLOOP_6   
0C7C                DLOOP_6:   .SET   DLOOP_5   
0C7C                DLOOP_5:   .SET   DLOOP_4   
0C7C                DLOOP_4:   .SET   DLOOP_3   
0C7C                DLOOP_3:   .SET   DLOOP_2   
0C7C                DLOOP_2:   .SET   DLOOP_TOP   
0C7C                DLOOP_TOP:   .SET   $   
0C7C                L_M_1550S103:      
0C7C   CD AE 11               CALL   getKey   ; get next key, returned in A
0C7F                          ;*Macro unroll:  _switch
0C7F   18 03                  JR   L_M_1552S106   
0C81   C3 81 0C               JP   $   
0C84                          ;*Macro unroll:  STRUC_PUSH $
0C84                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C84                STRUC_12:   .SET   STRUC_11   
0C84                STRUC_11:   .SET   STRUC_10   
0C84                STRUC_10:   .SET   STRUC_9   
0C84                STRUC_9:   .SET   STRUC_8   
0C84                STRUC_8:   .SET   STRUC_7   
0C84                STRUC_7:   .SET   STRUC_6   
0C84                STRUC_6:   .SET   STRUC_5   
0C84                STRUC_5:   .SET   STRUC_4   
0C84                STRUC_4:   .SET   STRUC_3   
0C84                STRUC_3:   .SET   STRUC_2   
0C84                STRUC_2:   .SET   STRUC_TOP   
0C84                STRUC_TOP:   .SET   $   
0C84                L_M_1552S106:      
0C84   CB 7F                  BIT   7,A   ; check end of input
0C86                          ;*Macro unroll:  _if nz
0C86   C2 8C 0C               JP   nz,L_M_1554S109   
0C89   C3 89 0C               JP   $   
0C8C                          ;*Macro unroll:  STRUC_PUSH $
0C8C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C8C                STRUC_12:   .SET   STRUC_11   
0C8C                STRUC_11:   .SET   STRUC_10   
0C8C                STRUC_10:   .SET   STRUC_9   
0C8C                STRUC_9:   .SET   STRUC_8   
0C8C                STRUC_8:   .SET   STRUC_7   
0C8C                STRUC_7:   .SET   STRUC_6   
0C8C                STRUC_6:   .SET   STRUC_5   
0C8C                STRUC_5:   .SET   STRUC_4   
0C8C                STRUC_4:   .SET   STRUC_3   
0C8C                STRUC_3:   .SET   STRUC_2   
0C8C                STRUC_2:   .SET   STRUC_TOP   
0C8C                STRUC_TOP:   .SET   $   
0C8C                L_M_1554S109:      
0C8C   36 00                  LD   (HL),0   
0C8E   3E 00                  LD   A,0   
0C90                          ;*Macro unroll:  _break
0C90   C3 79 0C               JP   DLOOP_TOP - 3   
0C93                          ;*Macro unroll:  _endif
0C93                          ;*Macro unroll:  STRUC_FWD
0C93                CUR_ADR:   .SET   $   
0C8A                          .ORG   STRUC_TOP - 2   
0C8A   93 0C                  DW   CUR_ADR   
0C93                          .ORG   CUR_ADR   
0C93                          ;*Macro unroll:  STRUC_POP
0C93                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C93                STRUC_TOP:   .SET   STRUC_2   
0C93                STRUC_2:   .SET   STRUC_3   
0C93                STRUC_3:   .SET   STRUC_4   
0C93                STRUC_4:   .SET   STRUC_5   
0C93                STRUC_5:   .SET   STRUC_6   
0C93                STRUC_6:   .SET   STRUC_7   
0C93                STRUC_7:   .SET   STRUC_8   
0C93                STRUC_8:   .SET   STRUC_9   
0C93                STRUC_9:   .SET   STRUC_10   
0C93                STRUC_10:   .SET   STRUC_11   
0C93                STRUC_11:   .SET   STRUC_12   
0C93                STRUC_12:   .SET   0   
0C93   FE 5C                  CP   $5C   ; \ start of a comment?
0C95                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0C95   CA 9B 0C               JP   z,L_M_1560S116   ; if yes skip to end of line
0C98   C3 98 0C               JP   $   
0C9B                          ;*Macro unroll:  STRUC_PUSH $
0C9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C9B                STRUC_12:   .SET   STRUC_11   
0C9B                STRUC_11:   .SET   STRUC_10   
0C9B                STRUC_10:   .SET   STRUC_9   
0C9B                STRUC_9:   .SET   STRUC_8   
0C9B                STRUC_8:   .SET   STRUC_7   
0C9B                STRUC_7:   .SET   STRUC_6   
0C9B                STRUC_6:   .SET   STRUC_5   
0C9B                STRUC_5:   .SET   STRUC_4   
0C9B                STRUC_4:   .SET   STRUC_3   
0C9B                STRUC_3:   .SET   STRUC_2   
0C9B                STRUC_2:   .SET   STRUC_TOP   
0C9B                STRUC_TOP:   .SET   $   
0C9B                L_M_1560S116:      
0C9B                          ;*Macro unroll:  _do
0C9B   18 03                  JR   L_M_1561S117   
0C9D   C3 9D 0C               JP   $   
0CA0                          ;*Macro unroll:  DLOOP_PUSH $
0CA0                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0CA0                DLOOP_12:   .SET   DLOOP_11   
0CA0                DLOOP_11:   .SET   DLOOP_10   
0CA0                DLOOP_10:   .SET   DLOOP_9   
0CA0                DLOOP_9:   .SET   DLOOP_8   
0CA0                DLOOP_8:   .SET   DLOOP_7   
0CA0                DLOOP_7:   .SET   DLOOP_6   
0CA0                DLOOP_6:   .SET   DLOOP_5   
0CA0                DLOOP_5:   .SET   DLOOP_4   
0CA0                DLOOP_4:   .SET   DLOOP_3   
0CA0                DLOOP_3:   .SET   DLOOP_2   
0CA0                DLOOP_2:   .SET   DLOOP_TOP   
0CA0                DLOOP_TOP:   .SET   $   
0CA0                L_M_1561S117:      
0CA0   CD AE 11               CALL   getKey   
0CA3   FE 0D                  CP   "\r"   ; end of line yet?
0CA5                          ;*Macro unroll:  _if nz
0CA5   C2 AB 0C               JP   nz,L_M_1564S120   
0CA8   C3 A8 0C               JP   $   
0CAB                          ;*Macro unroll:  STRUC_PUSH $
0CAB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CAB                STRUC_12:   .SET   STRUC_11   
0CAB                STRUC_11:   .SET   STRUC_10   
0CAB                STRUC_10:   .SET   STRUC_9   
0CAB                STRUC_9:   .SET   STRUC_8   
0CAB                STRUC_8:   .SET   STRUC_7   
0CAB                STRUC_7:   .SET   STRUC_6   
0CAB                STRUC_6:   .SET   STRUC_5   
0CAB                STRUC_5:   .SET   STRUC_4   
0CAB                STRUC_4:   .SET   STRUC_3   
0CAB                STRUC_3:   .SET   STRUC_2   
0CAB                STRUC_2:   .SET   STRUC_TOP   
0CAB                STRUC_TOP:   .SET   $   
0CAB                L_M_1564S120:      
0CAB   FE 0A                  CP   "\n"   ; end of line yet?
0CAD                          ;*Macro unroll:  _endif
0CAD                          ;*Macro unroll:  STRUC_FWD
0CAD                CUR_ADR:   .SET   $   
0CA9                          .ORG   STRUC_TOP - 2   
0CA9   AD 0C                  DW   CUR_ADR   
0CAD                          .ORG   CUR_ADR   
0CAD                          ;*Macro unroll:  STRUC_POP
0CAD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CAD                STRUC_TOP:   .SET   STRUC_2   
0CAD                STRUC_2:   .SET   STRUC_3   
0CAD                STRUC_3:   .SET   STRUC_4   
0CAD                STRUC_4:   .SET   STRUC_5   
0CAD                STRUC_5:   .SET   STRUC_6   
0CAD                STRUC_6:   .SET   STRUC_7   
0CAD                STRUC_7:   .SET   STRUC_8   
0CAD                STRUC_8:   .SET   STRUC_9   
0CAD                STRUC_9:   .SET   STRUC_10   
0CAD                STRUC_10:   .SET   STRUC_11   
0CAD                STRUC_11:   .SET   STRUC_12   
0CAD                STRUC_12:   .SET   0   
0CAD                          ;*Macro unroll:  _until z
0CAD   CA 9D 0C               JP   z,DLOOP_TOP - 3   
0CB0                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0CB0                CUR_ADR:   .SET   $   ; needed?
0C9E                          .ORG   DLOOP_TOP - 2   
0C9E   B0 0C                  DW   CUR_ADR   
0CB0                          .ORG   CUR_ADR   
0CB0                          ;*Macro unroll:  _enddo
0CB0   C3 A0 0C               JP   DLOOP_TOP   
0CB3                          ;*Macro unroll:  DLOOP_FWD
0CB3                CUR_ADR:   .SET   $   
0C9E                          .ORG   DLOOP_TOP - 2   
0C9E   B3 0C                  DW   CUR_ADR   
0CB3                          .ORG   CUR_ADR   
0CB3                          ;*Macro unroll:  DLOOP_POP
0CB3                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CB3                DLOOP_TOP:   .SET   DLOOP_2   
0CB3                DLOOP_2:   .SET   DLOOP_3   
0CB3                DLOOP_3:   .SET   DLOOP_4   
0CB3                DLOOP_4:   .SET   DLOOP_5   
0CB3                DLOOP_5:   .SET   DLOOP_6   
0CB3                DLOOP_6:   .SET   DLOOP_7   
0CB3                DLOOP_7:   .SET   DLOOP_8   
0CB3                DLOOP_8:   .SET   DLOOP_9   
0CB3                DLOOP_9:   .SET   DLOOP_10   
0CB3                DLOOP_10:   .SET   DLOOP_11   
0CB3                DLOOP_11:   .SET   DLOOP_12   
0CB3                DLOOP_12:   .SET   0   
0CB3                          ;*Macro unroll:  _endcase
0CB3   C3 81 0C               JP   STRUC_2 - 3   
0CB6                          ;*Macro unroll:  STRUC_FWD
0CB6                CUR_ADR:   .SET   $   
0C99                          .ORG   STRUC_TOP - 2   
0C99   B6 0C                  DW   CUR_ADR   
0CB6                          .ORG   CUR_ADR   
0CB6                          ;*Macro unroll:  STRUC_POP
0CB6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CB6                STRUC_TOP:   .SET   STRUC_2   
0CB6                STRUC_2:   .SET   STRUC_3   
0CB6                STRUC_3:   .SET   STRUC_4   
0CB6                STRUC_4:   .SET   STRUC_5   
0CB6                STRUC_5:   .SET   STRUC_6   
0CB6                STRUC_6:   .SET   STRUC_7   
0CB6                STRUC_7:   .SET   STRUC_8   
0CB6                STRUC_8:   .SET   STRUC_9   
0CB6                STRUC_9:   .SET   STRUC_10   
0CB6                STRUC_10:   .SET   STRUC_11   
0CB6                STRUC_11:   .SET   STRUC_12   
0CB6                STRUC_12:   .SET   0   
0CB6   B9                     CP   C   ; = space?
0CB7                          ;*Macro unroll:  _case z
0CB7   CA BD 0C               JP   z,L_M_1571S128   
0CBA   C3 BA 0C               JP   $   
0CBD                          ;*Macro unroll:  STRUC_PUSH $
0CBD                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CBD                STRUC_12:   .SET   STRUC_11   
0CBD                STRUC_11:   .SET   STRUC_10   
0CBD                STRUC_10:   .SET   STRUC_9   
0CBD                STRUC_9:   .SET   STRUC_8   
0CBD                STRUC_8:   .SET   STRUC_7   
0CBD                STRUC_7:   .SET   STRUC_6   
0CBD                STRUC_6:   .SET   STRUC_5   
0CBD                STRUC_5:   .SET   STRUC_4   
0CBD                STRUC_4:   .SET   STRUC_3   
0CBD                STRUC_3:   .SET   STRUC_2   
0CBD                STRUC_2:   .SET   STRUC_TOP   
0CBD                STRUC_TOP:   .SET   $   
0CBD                L_M_1571S128:      
0CBD                          ;*Macro unroll:  _endcase
0CBD   C3 81 0C               JP   STRUC_2 - 3   
0CC0                          ;*Macro unroll:  STRUC_FWD
0CC0                CUR_ADR:   .SET   $   
0CBB                          .ORG   STRUC_TOP - 2   
0CBB   C0 0C                  DW   CUR_ADR   
0CC0                          .ORG   CUR_ADR   
0CC0                          ;*Macro unroll:  STRUC_POP
0CC0                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CC0                STRUC_TOP:   .SET   STRUC_2   
0CC0                STRUC_2:   .SET   STRUC_3   
0CC0                STRUC_3:   .SET   STRUC_4   
0CC0                STRUC_4:   .SET   STRUC_5   
0CC0                STRUC_5:   .SET   STRUC_6   
0CC0                STRUC_6:   .SET   STRUC_7   
0CC0                STRUC_7:   .SET   STRUC_8   
0CC0                STRUC_8:   .SET   STRUC_9   
0CC0                STRUC_9:   .SET   STRUC_10   
0CC0                STRUC_10:   .SET   STRUC_11   
0CC0                STRUC_11:   .SET   STRUC_12   
0CC0                STRUC_12:   .SET   0   
0CC0   FE 20                  CP   " "   ; < space?
0CC2                          ;*Macro unroll:  _case c
0CC2   DA C8 0C               JP   c,L_M_1574S132   
0CC5   C3 C5 0C               JP   $   
0CC8                          ;*Macro unroll:  STRUC_PUSH $
0CC8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0CC8                STRUC_12:   .SET   STRUC_11   
0CC8                STRUC_11:   .SET   STRUC_10   
0CC8                STRUC_10:   .SET   STRUC_9   
0CC8                STRUC_9:   .SET   STRUC_8   
0CC8                STRUC_8:   .SET   STRUC_7   
0CC8                STRUC_7:   .SET   STRUC_6   
0CC8                STRUC_6:   .SET   STRUC_5   
0CC8                STRUC_5:   .SET   STRUC_4   
0CC8                STRUC_4:   .SET   STRUC_3   
0CC8                STRUC_3:   .SET   STRUC_2   
0CC8                STRUC_2:   .SET   STRUC_TOP   
0CC8                STRUC_TOP:   .SET   $   
0CC8                L_M_1574S132:      
0CC8                          ;*Macro unroll:  _endcase
0CC8   C3 81 0C               JP   STRUC_2 - 3   
0CCB                          ;*Macro unroll:  STRUC_FWD
0CCB                CUR_ADR:   .SET   $   
0CC6                          .ORG   STRUC_TOP - 2   
0CC6   CB 0C                  DW   CUR_ADR   
0CCB                          .ORG   CUR_ADR   
0CCB                          ;*Macro unroll:  STRUC_POP
0CCB                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CCB                STRUC_TOP:   .SET   STRUC_2   
0CCB                STRUC_2:   .SET   STRUC_3   
0CCB                STRUC_3:   .SET   STRUC_4   
0CCB                STRUC_4:   .SET   STRUC_5   
0CCB                STRUC_5:   .SET   STRUC_6   
0CCB                STRUC_6:   .SET   STRUC_7   
0CCB                STRUC_7:   .SET   STRUC_8   
0CCB                STRUC_8:   .SET   STRUC_9   
0CCB                STRUC_9:   .SET   STRUC_10   
0CCB                STRUC_10:   .SET   STRUC_11   
0CCB                STRUC_11:   .SET   STRUC_12   
0CCB                STRUC_12:   .SET   0   
0CCB                             ; default case
0CCB                          ;*Macro unroll:  _break
0CCB   C3 79 0C               JP   DLOOP_TOP - 3   
0CCE                          ;*Macro unroll:  _endswitch
0CCE                          ;*Macro unroll:  STRUC_FWD
0CCE                CUR_ADR:   .SET   $   
0C82                          .ORG   STRUC_TOP - 2   
0C82   CE 0C                  DW   CUR_ADR   
0CCE                          .ORG   CUR_ADR   
0CCE                          ;*Macro unroll:  STRUC_POP
0CCE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CCE                STRUC_TOP:   .SET   STRUC_2   
0CCE                STRUC_2:   .SET   STRUC_3   
0CCE                STRUC_3:   .SET   STRUC_4   
0CCE                STRUC_4:   .SET   STRUC_5   
0CCE                STRUC_5:   .SET   STRUC_6   
0CCE                STRUC_6:   .SET   STRUC_7   
0CCE                STRUC_7:   .SET   STRUC_8   
0CCE                STRUC_8:   .SET   STRUC_9   
0CCE                STRUC_9:   .SET   STRUC_10   
0CCE                STRUC_10:   .SET   STRUC_11   
0CCE                STRUC_11:   .SET   STRUC_12   
0CCE                STRUC_12:   .SET   0   
0CCE                          ;*Macro unroll:  _enddo
0CCE   C3 7C 0C               JP   DLOOP_TOP   
0CD1                          ;*Macro unroll:  DLOOP_FWD
0CD1                CUR_ADR:   .SET   $   
0C7A                          .ORG   DLOOP_TOP - 2   
0C7A   D1 0C                  DW   CUR_ADR   
0CD1                          .ORG   CUR_ADR   
0CD1                          ;*Macro unroll:  DLOOP_POP
0CD1                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CD1                DLOOP_TOP:   .SET   DLOOP_2   
0CD1                DLOOP_2:   .SET   DLOOP_3   
0CD1                DLOOP_3:   .SET   DLOOP_4   
0CD1                DLOOP_4:   .SET   DLOOP_5   
0CD1                DLOOP_5:   .SET   DLOOP_6   
0CD1                DLOOP_6:   .SET   DLOOP_7   
0CD1                DLOOP_7:   .SET   DLOOP_8   
0CD1                DLOOP_8:   .SET   DLOOP_9   
0CD1                DLOOP_9:   .SET   DLOOP_10   
0CD1                DLOOP_10:   .SET   DLOOP_11   
0CD1                DLOOP_11:   .SET   DLOOP_12   
0CD1                DLOOP_12:   .SET   0   
0CD1   06 00                  LD   B,0   
0CD3   4F                     LD   C,A   
0CD4   C9                     RET      
0CD5                XWORDREAD:      ; delim addr char -- c-addr
0CD5   79                     LD   A,C   
0CD6                          ;*Macro unroll:  ppop0 B,C
0CD6   DD 2B                  DEC   IX   
0CD8   DD 46 00               LD   B,(IX+0)   
0CDB   DD 2B                  DEC   IX   
0CDD   DD 4E 00               LD   C,(IX+0)   
0CE0                          ;*Macro unroll:  ppop H,L
0CE0   60                     LD   H,B   
0CE1   69                     LD   L,C   
0CE2                          ;*Macro unroll:  ppop0 B,C
0CE2   DD 2B                  DEC   IX   
0CE4   DD 46 00               LD   B,(IX+0)   
0CE7   DD 2B                  DEC   IX   
0CE9   DD 4E 00               LD   C,(IX+0)   
0CEC                          ;*Macro unroll:  ppop D,E
0CEC   50                     LD   D,B   
0CED   59                     LD   E,C   
0CEE                          ;*Macro unroll:  ppop0 B,C
0CEE   DD 2B                  DEC   IX   
0CF0   DD 46 00               LD   B,(IX+0)   
0CF3   DD 2B                  DEC   IX   
0CF5   DD 4E 00               LD   C,(IX+0)   
0CF8   16 00                  LD   D,0   
0CFA   B7                     OR   A   
0CFB                          ;*Macro unroll:  _if nz
0CFB   C2 01 0D               JP   nz,L_M_1590S151   
0CFE   C3 FE 0C               JP   $   
0D01                          ;*Macro unroll:  STRUC_PUSH $
0D01                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0D01                STRUC_12:   .SET   STRUC_11   
0D01                STRUC_11:   .SET   STRUC_10   
0D01                STRUC_10:   .SET   STRUC_9   
0D01                STRUC_9:   .SET   STRUC_8   
0D01                STRUC_8:   .SET   STRUC_7   
0D01                STRUC_7:   .SET   STRUC_6   
0D01                STRUC_6:   .SET   STRUC_5   
0D01                STRUC_5:   .SET   STRUC_4   
0D01                STRUC_4:   .SET   STRUC_3   
0D01                STRUC_3:   .SET   STRUC_2   
0D01                STRUC_2:   .SET   STRUC_TOP   
0D01                STRUC_TOP:   .SET   $   
0D01                L_M_1590S151:      
0D01   E5                     PUSH   HL   ; save a copy of HL
0D02   23                     INC   HL   ; move to leave space for length byte
0D03   43                     LD   B,E   
0D04                          ;*Macro unroll:  _do
0D04   18 03                  JR   L_M_1594S155   
0D06   C3 06 0D               JP   $   
0D09                          ;*Macro unroll:  DLOOP_PUSH $
0D09                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0D09                DLOOP_12:   .SET   DLOOP_11   
0D09                DLOOP_11:   .SET   DLOOP_10   
0D09                DLOOP_10:   .SET   DLOOP_9   
0D09                DLOOP_9:   .SET   DLOOP_8   
0D09                DLOOP_8:   .SET   DLOOP_7   
0D09                DLOOP_7:   .SET   DLOOP_6   
0D09                DLOOP_6:   .SET   DLOOP_5   
0D09                DLOOP_5:   .SET   DLOOP_4   
0D09                DLOOP_4:   .SET   DLOOP_3   
0D09                DLOOP_3:   .SET   DLOOP_2   
0D09                DLOOP_2:   .SET   DLOOP_TOP   
0D09                DLOOP_TOP:   .SET   $   
0D09                L_M_1594S155:      
0D09   77                     LD   (HL),A   ; add character to return lineBuf
0D0A   23                     INC   HL   
0D0B   14                     INC   D   
0D0C   CD AE 11               CALL   getKey   ; get next key
0D0F   B9                     CP   C   ; = delim?
0D10                          ;*Macro unroll:  _until z
0D10   CA 06 0D               JP   z,DLOOP_TOP - 3   
0D13                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0D13                CUR_ADR:   .SET   $   ; needed?
0D07                          .ORG   DLOOP_TOP - 2   
0D07   13 0D                  DW   CUR_ADR   
0D13                          .ORG   CUR_ADR   
0D13   FE 20                  CP   " "   ; < space? i.e. control chars
0D15                          ;*Macro unroll:  _until c
0D15   DA 06 0D               JP   c,DLOOP_TOP - 3   
0D18                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0D18                CUR_ADR:   .SET   $   ; needed?
0D07                          .ORG   DLOOP_TOP - 2   
0D07   18 0D                  DW   CUR_ADR   
0D18                          .ORG   CUR_ADR   
0D18                          ;*Macro unroll:  _djnz
0D18   10 EF                  DJNZ   DLOOP_TOP   
0D1A                          ;*Macro unroll:  DLOOP_FWD
0D1A                CUR_ADR:   .SET   $   
0D07                          .ORG   DLOOP_TOP - 2   
0D07   1A 0D                  DW   CUR_ADR   
0D1A                          .ORG   CUR_ADR   
0D1A                          ;*Macro unroll:  DLOOP_POP
0D1A                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0D1A                DLOOP_TOP:   .SET   DLOOP_2   
0D1A                DLOOP_2:   .SET   DLOOP_3   
0D1A                DLOOP_3:   .SET   DLOOP_4   
0D1A                DLOOP_4:   .SET   DLOOP_5   
0D1A                DLOOP_5:   .SET   DLOOP_6   
0D1A                DLOOP_6:   .SET   DLOOP_7   
0D1A                DLOOP_7:   .SET   DLOOP_8   
0D1A                DLOOP_8:   .SET   DLOOP_9   
0D1A                DLOOP_9:   .SET   DLOOP_10   
0D1A                DLOOP_10:   .SET   DLOOP_11   
0D1A                DLOOP_11:   .SET   DLOOP_12   
0D1A                DLOOP_12:   .SET   0   
0D1A   E1                     POP   HL   ; restore HL
0D1B                          ;*Macro unroll:  _endif
0D1B                          ;*Macro unroll:  STRUC_FWD
0D1B                CUR_ADR:   .SET   $   
0CFF                          .ORG   STRUC_TOP - 2   
0CFF   1B 0D                  DW   CUR_ADR   
0D1B                          .ORG   CUR_ADR   
0D1B                          ;*Macro unroll:  STRUC_POP
0D1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0D1B                STRUC_TOP:   .SET   STRUC_2   
0D1B                STRUC_2:   .SET   STRUC_3   
0D1B                STRUC_3:   .SET   STRUC_4   
0D1B                STRUC_4:   .SET   STRUC_5   
0D1B                STRUC_5:   .SET   STRUC_6   
0D1B                STRUC_6:   .SET   STRUC_7   
0D1B                STRUC_7:   .SET   STRUC_8   
0D1B                STRUC_8:   .SET   STRUC_9   
0D1B                STRUC_9:   .SET   STRUC_10   
0D1B                STRUC_10:   .SET   STRUC_11   
0D1B                STRUC_11:   .SET   STRUC_12   
0D1B                STRUC_12:   .SET   0   
0D1B   72                     LD   (HL),D   ; write length
0D1C                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0D1C   4D                     LD   C,L   ; TOS = str ptr
0D1D   44                     LD   B,H   
0D1E   C9                     RET      
0D1F                INTERPTOKEN:      ; ptr len --
0D1F   CF                     RST   $08   
0D20   DC 12 DC 12 97 05      DW   over,over,find   ; ptr len -- ptr len addr
0D26   94 12 F2 03            DW   DUPP,ZNEQU   
0D2A                          ;*Macro unroll:  cIf
0D2A   8A 07 00 00            DW   QBRAN,0   
0D2E                          ;*Macro unroll:  CPL_PUSH $
0D2E                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D2E                CPL_10:   .SET   CPL_9   
0D2E                CPL_9:    .SET   CPL_8   
0D2E                CPL_8:    .SET   CPL_7   
0D2E                CPL_7:    .SET   CPL_6   
0D2E                CPL_6:    .SET   CPL_5   
0D2E                CPL_5:    .SET   CPL_4   
0D2E                CPL_4:    .SET   CPL_3   
0D2E                CPL_3:    .SET   CPL_2   
0D2E                CPL_2:    .SET   CPL_TOP   
0D2E                CPL_TOP:   .SET   $   
0D2E   3B 0D                  DW   interpWord   
0D30                          ;*Macro unroll:  cElse
0D30   A7 07 00 00            DW   BRAN,0   
0D34                          ;*Macro unroll:  cBRANCH_FWD
0D34                CUR_ADR:   .SET   $   
0D2C                          .ORG   CPL_TOP - 2   
0D2C   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0D34                          .ORG   CUR_ADR   
0D34                CPL_TOP:   .SET   $   
0D34   7F 0D                  DW   interpLiteral   
0D36                          ;*Macro unroll:  cEndif
0D36                          ;*Macro unroll:  cBRANCH_FWD
0D36                CUR_ADR:   .SET   $   
0D32                          .ORG   CPL_TOP - 2   
0D32   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0D36                          .ORG   CUR_ADR   
0D36                          ;*Macro unroll:  CPL_POP
0D36                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D36                CPL_TOP:   .SET   CPL_2   
0D36                CPL_2:    .SET   CPL_3   
0D36                CPL_3:    .SET   CPL_4   
0D36                CPL_4:    .SET   CPL_5   
0D36                CPL_5:    .SET   CPL_6   
0D36                CPL_6:    .SET   CPL_7   
0D36                CPL_7:    .SET   CPL_8   
0D36                CPL_8:    .SET   CPL_9   
0D36                CPL_9:    .SET   CPL_10   
0D36                CPL_10:   .SET   0   
0D36                          ;*Macro unroll:  EXIT
0D36   05 0F                  DW   exit   
0D38   C3 F4 0E               JP   enter   
0D3B                INTERPWORD:      ; ptr len addr --
0D3B   CF                     RST   $08   ; enter forth
0D3C   A8 12 C8 12 A8 12 C8 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0D44   94 12 13 12 02 00 CE 00 65 0F DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0D4E   13 12 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0D54   DD 03                  DW   zEqual   
0D56                          ;*Macro unroll:  cif
0D56   8A 07 00 00            DW   QBRAN,0   
0D5A                          ;*Macro unroll:  CPL_PUSH $
0D5A                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D5A                CPL_10:   .SET   CPL_9   
0D5A                CPL_9:    .SET   CPL_8   
0D5A                CPL_8:    .SET   CPL_7   
0D5A                CPL_7:    .SET   CPL_6   
0D5A                CPL_6:    .SET   CPL_5   
0D5A                CPL_5:    .SET   CPL_4   
0D5A                CPL_4:    .SET   CPL_3   
0D5A                CPL_3:    .SET   CPL_2   
0D5A                CPL_2:    .SET   CPL_TOP   
0D5A                CPL_TOP:   .SET   $   
0D5A   97 0B                  DW   tcfa   ; ( headptr -- xt )
0D5C   0D 09 38 0F            DW   state,fetch   
0D60   27 09 38 0F            DW   nesting,fetch   
0D64   9E 00                  DW   ORR   
0D66                          ;*Macro unroll:  cif
0D66   8A 07 00 00            DW   QBRAN,0   
0D6A                          ;*Macro unroll:  CPL_PUSH $
0D6A                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D6A                CPL_10:   .SET   CPL_9   
0D6A                CPL_9:    .SET   CPL_8   
0D6A                CPL_8:    .SET   CPL_7   
0D6A                CPL_7:    .SET   CPL_6   
0D6A                CPL_6:    .SET   CPL_5   
0D6A                CPL_5:    .SET   CPL_4   
0D6A                CPL_4:    .SET   CPL_3   
0D6A                CPL_3:    .SET   CPL_2   
0D6A                CPL_2:    .SET   CPL_TOP   
0D6A                CPL_TOP:   .SET   $   
0D6A   EE 0F                  DW   comma   ; compile xt
0D6C                          ;*Macro unroll:  cElse
0D6C   A7 07 00 00            DW   BRAN,0   
0D70                          ;*Macro unroll:  cBRANCH_FWD
0D70                CUR_ADR:   .SET   $   
0D68                          .ORG   CPL_TOP - 2   
0D68   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0D70                          .ORG   CUR_ADR   
0D70                CPL_TOP:   .SET   $   
0D70   B7 0B                  DW   execute   ; execute xt
0D72                          ;*Macro unroll:  cendif
0D72                          ;*Macro unroll:  cBRANCH_FWD
0D72                CUR_ADR:   .SET   $   
0D6E                          .ORG   CPL_TOP - 2   
0D6E   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0D72                          .ORG   CUR_ADR   
0D72                          ;*Macro unroll:  CPL_POP
0D72                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D72                CPL_TOP:   .SET   CPL_2   
0D72                CPL_2:    .SET   CPL_3   
0D72                CPL_3:    .SET   CPL_4   
0D72                CPL_4:    .SET   CPL_5   
0D72                CPL_5:    .SET   CPL_6   
0D72                CPL_6:    .SET   CPL_7   
0D72                CPL_7:    .SET   CPL_8   
0D72                CPL_8:    .SET   CPL_9   
0D72                CPL_9:    .SET   CPL_10   
0D72                CPL_10:   .SET   0   
0D72                          ;*Macro unroll:  cElse
0D72   A7 07 00 00            DW   BRAN,0   
0D76                          ;*Macro unroll:  cBRANCH_FWD
0D76                CUR_ADR:   .SET   $   
0D58                          .ORG   CPL_TOP - 2   
0D58   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0D76                          .ORG   CUR_ADR   
0D76                CPL_TOP:   .SET   $   
0D76   97 0B B7 0B            DW   tcfa,execute   ; execute xt
0D7A                          ;*Macro unroll:  cendif
0D7A                          ;*Macro unroll:  cBRANCH_FWD
0D7A                CUR_ADR:   .SET   $   
0D74                          .ORG   CPL_TOP - 2   
0D74   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0D7A                          .ORG   CUR_ADR   
0D7A                          ;*Macro unroll:  CPL_POP
0D7A                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D7A                CPL_TOP:   .SET   CPL_2   
0D7A                CPL_2:    .SET   CPL_3   
0D7A                CPL_3:    .SET   CPL_4   
0D7A                CPL_4:    .SET   CPL_5   
0D7A                CPL_5:    .SET   CPL_6   
0D7A                CPL_6:    .SET   CPL_7   
0D7A                CPL_7:    .SET   CPL_8   
0D7A                CPL_8:    .SET   CPL_9   
0D7A                CPL_9:    .SET   CPL_10   
0D7A                CPL_10:   .SET   0   
0D7A                          ;*Macro unroll:  EXIT
0D7A   05 0F                  DW   exit   
0D7C   C3 F4 0E               JP   enter   
0D7F                INTERPLITERAL:      ; ptr len addr --
0D7F   CF                     RST   $08   ; enter forth
0D80   C8 12                  DW   drop   ; ptr len addr - ptr len
0D82   1E 0B DD 03            DW   number,zEqual   ; parse to number
0D86                          ;*Macro unroll:  cif
0D86   8A 07 00 00            DW   QBRAN,0   
0D8A                          ;*Macro unroll:  CPL_PUSH $
0D8A                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D8A                CPL_10:   .SET   CPL_9   
0D8A                CPL_9:    .SET   CPL_8   
0D8A                CPL_8:    .SET   CPL_7   
0D8A                CPL_7:    .SET   CPL_6   
0D8A                CPL_6:    .SET   CPL_5   
0D8A                CPL_5:    .SET   CPL_4   
0D8A                CPL_4:    .SET   CPL_3   
0D8A                CPL_3:    .SET   CPL_2   
0D8A                CPL_2:    .SET   CPL_TOP   
0D8A                CPL_TOP:   .SET   $   
0D8A   0D 09 38 0F            DW   state,fetch   
0D8E   27 09 38 0F            DW   nesting,fetch   
0D92   9E 00                  DW   ORR   
0D94                          ;*Macro unroll:  cIf
0D94   8A 07 00 00            DW   QBRAN,0   
0D98                          ;*Macro unroll:  CPL_PUSH $
0D98                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D98                CPL_10:   .SET   CPL_9   
0D98                CPL_9:    .SET   CPL_8   
0D98                CPL_8:    .SET   CPL_7   
0D98                CPL_7:    .SET   CPL_6   
0D98                CPL_6:    .SET   CPL_5   
0D98                CPL_5:    .SET   CPL_4   
0D98                CPL_4:    .SET   CPL_3   
0D98                CPL_3:    .SET   CPL_2   
0D98                CPL_2:    .SET   CPL_TOP   
0D98                CPL_TOP:   .SET   $   
0D98   13 12 13 12            DW   lit,lit   ; (val -- val "lit" )
0D9C   EE 0F EE 0F            DW   comma,comma   ; compile "lit" val
0DA0                          ;*Macro unroll:  cEndIf
0DA0                          ;*Macro unroll:  cBRANCH_FWD
0DA0                CUR_ADR:   .SET   $   
0D96                          .ORG   CPL_TOP - 2   
0D96   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0DA0                          .ORG   CUR_ADR   
0DA0                          ;*Macro unroll:  CPL_POP
0DA0                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DA0                CPL_TOP:   .SET   CPL_2   
0DA0                CPL_2:    .SET   CPL_3   
0DA0                CPL_3:    .SET   CPL_4   
0DA0                CPL_4:    .SET   CPL_5   
0DA0                CPL_5:    .SET   CPL_6   
0DA0                CPL_6:    .SET   CPL_7   
0DA0                CPL_7:    .SET   CPL_8   
0DA0                CPL_8:    .SET   CPL_9   
0DA0                CPL_9:    .SET   CPL_10   
0DA0                CPL_10:   .SET   0   
0DA0                          ;*Macro unroll:  cElse
0DA0   A7 07 00 00            DW   BRAN,0   
0DA4                          ;*Macro unroll:  cBRANCH_FWD
0DA4                CUR_ADR:   .SET   $   
0D88                          .ORG   CPL_TOP - 2   
0D88   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
0DA4                          .ORG   CUR_ADR   
0DA4                CPL_TOP:   .SET   $   
0DA4   C8 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0DA6   46 13                  DW   litstr   ; err != 0, parse error
0DA8   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0DB7   D9 0D                  DW   type   
0DB9                          ;*Macro unroll:  cEndIf
0DB9                          ;*Macro unroll:  cBRANCH_FWD
0DB9                CUR_ADR:   .SET   $   
0DA2                          .ORG   CPL_TOP - 2   
0DA2   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0DB9                          .ORG   CUR_ADR   
0DB9                          ;*Macro unroll:  CPL_POP
0DB9                CPL_COUNT:   .SET   CPL_COUNT - 1   
0DB9                CPL_TOP:   .SET   CPL_2   
0DB9                CPL_2:    .SET   CPL_3   
0DB9                CPL_3:    .SET   CPL_4   
0DB9                CPL_4:    .SET   CPL_5   
0DB9                CPL_5:    .SET   CPL_6   
0DB9                CPL_6:    .SET   CPL_7   
0DB9                CPL_7:    .SET   CPL_8   
0DB9                CPL_8:    .SET   CPL_9   
0DB9                CPL_9:    .SET   CPL_10   
0DB9                CPL_10:   .SET   0   
0DB9                          ;*Macro unroll:  EXIT
0DB9   05 0F                  DW   exit   
0DBB   C3 F4 0E               JP   enter   
0DBE                NESTPLUS:      
0DBE   2A 57 32               LD   HL,(VAR_NESTING)   
0DC1   23                     INC   HL   
0DC2   22 57 32               LD   (VAR_NESTING),HL   
0DC5                          ;*Macro unroll:  NEXT
0DC5   C3 F4 0E               JP   enter   
0DC8                NESTMINUS:      
0DC8   2A 57 32               LD   HL,(VAR_NESTING)   
0DCB   2B                     DEC   HL   
0DCC   22 57 32               LD   (VAR_NESTING),HL   
0DCF                          ;*Macro unroll:  NEXT
0DCF   C3 F4 0E               JP   enter   
0DD2                          ;*Macro unroll: CODE "type",4,0,TYPE             ; ( str len -- )
0DD2                HEADER_TYPE:      ; ( str len -- )
0DD2   30 0C                  DW   link   
0DD4                LINK:     .SET   HEADER_TYPE   
0DD4   04                     DB   0 + 4   
0DD5   74 79 70 65            DB   "type"   
0DD9                TYPE:        
0DD9                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
0DD9   DD 2B                  DEC   IX   ; DE = str BC = length
0DDB   DD 56 00               LD   D,(IX+0)   
0DDE   DD 2B                  DEC   IX   
0DE0   DD 5E 00               LD   E,(IX+0)   
0DE3   CD F2 11               CALL   printStr   
0DE6                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0DE6   DD 2B                  DEC   IX   ; clear TOS
0DE8   DD 46 00               LD   B,(IX+0)   
0DEB   DD 2B                  DEC   IX   
0DED   DD 4E 00               LD   C,(IX+0)   
0DF0                          ;*Macro unroll:  NEXT
0DF0   C3 F4 0E               JP   enter   
0DF3                          ;*Macro unroll: CODE "cr",2,0,cr                 ; ( -- )
0DF3                HEADER_CR:      ; ( -- )
0DF3   D2 0D                  DW   link   
0DF5                LINK:     .SET   HEADER_cr   
0DF5   02                     DB   0 + 2   
0DF6   63 72                  DB   "cr"   
0DF8                CR:          
0DF8   CD FC 11               CALL   printcr   
0DFB                          ;*Macro unroll:  NEXT
0DFB   C3 F4 0E               JP   enter   
0DFE                          ;*Macro unroll:  CODE "accept",6,0,ACCEPT              ; ( addr max -- len )
0DFE                HEADER_ACCEPT:      ; ( addr max -- len )
0DFE   F3 0D                  DW   link   
0E00                LINK:     .SET   HEADER_ACCEPT   
0E00   06                     DB   0 + 6   
0E01   61 63 63 65 70 74      DB   "accept"   
0E07                ACCEPT:      
0E07                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
0E07   50                     LD   D,B   ; max - up to 255
0E08   59                     LD   E,C   
0E09                          ;*Macro unroll:  ppop0 B,C
0E09   DD 2B                  DEC   IX   
0E0B   DD 46 00               LD   B,(IX+0)   
0E0E   DD 2B                  DEC   IX   
0E10   DD 4E 00               LD   C,(IX+0)   
0E13                          ;*Macro unroll: 	ppop0 H,L                          ; addr
0E13   DD 2B                  DEC   IX   ; addr
0E15   DD 66 00               LD   H,(IX+0)   
0E18   DD 2B                  DEC   IX   
0E1A   DD 6E 00               LD   L,(IX+0)   
0E1D   CD 1E 11               CALL   getline   
0E20                          ;*Macro unroll:  NEXT
0E20   C3 F4 0E               JP   enter   
0E23                          ;*Macro unroll: CODE "key",3,0,KEY                ; ( -- c )
0E23                HEADER_KEY:      ; ( -- c )
0E23   FE 0D                  DW   link   
0E25                LINK:     .SET   HEADER_KEY   
0E25   03                     DB   0 + 3   
0E26   6B 65 79               DB   "key"   
0E29                KEY:         
0E29   CD AE 11               CALL   getKey   
0E2C   06 00                  LD   b,0   
0E2E   4F                     LD   c,a   
0E2F                          ;*Macro unroll:  NEXT
0E2F   C3 F4 0E               JP   enter   
0E32                          ;*Macro unroll: CODE "emit",4,0,EMIT              ; print the character on the stack
0E32                HEADER_EMIT:      ; print the character on the stack
0E32   23 0E                  DW   link   
0E34                LINK:     .SET   HEADER_EMIT   
0E34   04                     DB   0 + 4   
0E35   65 6D 69 74            DB   "emit"   
0E39                EMIT:        
0E39   79                     LD   A,C   ; (c -- )
0E3A   CD 04 11               CALL   putc   
0E3D                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
0E3D   DD 2B                  DEC   IX   ; clear stack
0E3F   DD 46 00               LD   B,(IX+0)   
0E42   DD 2B                  DEC   IX   
0E44   DD 4E 00               LD   C,(IX+0)   
0E47                          ;*Macro unroll:  NEXT
0E47   C3 F4 0E               JP   enter   
0E4A                          ;*Macro unroll: CODE "key?",4,0,QKEY              ; ( -- c )
0E4A                HEADER_QKEY:      ; ( -- c )
0E4A   32 0E                  DW   link   
0E4C                LINK:     .SET   HEADER_QKEY   
0E4C   04                     DB   0 + 4   
0E4D   6B 65 79 3F            DB   "key?"   
0E51                QKEY:        
0E51                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
0E51   DD 71 00               LD   (IX+0),C   ; save TOS
0E54   DD 23                  INC   IX   
0E56   DD 70 00               LD   (IX+0),B   
0E59   DD 23                  INC   IX   
0E5B   CD 18 11               CALL   inputReady   
0E5E   01 01 00               LD   BC,1   ; TOS = true
0E61                          ;*Macro unroll:  _if z
0E61   CA 67 0E               JP   z,L_M_1695S33   
0E64   C3 64 0E               JP   $   
0E67                          ;*Macro unroll:  STRUC_PUSH $
0E67                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0E67                STRUC_12:   .SET   STRUC_11   
0E67                STRUC_11:   .SET   STRUC_10   
0E67                STRUC_10:   .SET   STRUC_9   
0E67                STRUC_9:   .SET   STRUC_8   
0E67                STRUC_8:   .SET   STRUC_7   
0E67                STRUC_7:   .SET   STRUC_6   
0E67                STRUC_6:   .SET   STRUC_5   
0E67                STRUC_5:   .SET   STRUC_4   
0E67                STRUC_4:   .SET   STRUC_3   
0E67                STRUC_3:   .SET   STRUC_2   
0E67                STRUC_2:   .SET   STRUC_TOP   
0E67                STRUC_TOP:   .SET   $   
0E67                L_M_1695S33:      
0E67   01 00 00               LD   BC,0   ; TOS = false
0E6A                          ;*Macro unroll:  _endif
0E6A                          ;*Macro unroll:  STRUC_FWD
0E6A                CUR_ADR:   .SET   $   
0E65                          .ORG   STRUC_TOP - 2   
0E65   6A 0E                  DW   CUR_ADR   
0E6A                          .ORG   CUR_ADR   
0E6A                          ;*Macro unroll:  STRUC_POP
0E6A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0E6A                STRUC_TOP:   .SET   STRUC_2   
0E6A                STRUC_2:   .SET   STRUC_3   
0E6A                STRUC_3:   .SET   STRUC_4   
0E6A                STRUC_4:   .SET   STRUC_5   
0E6A                STRUC_5:   .SET   STRUC_6   
0E6A                STRUC_6:   .SET   STRUC_7   
0E6A                STRUC_7:   .SET   STRUC_8   
0E6A                STRUC_8:   .SET   STRUC_9   
0E6A                STRUC_9:   .SET   STRUC_10   
0E6A                STRUC_10:   .SET   STRUC_11   
0E6A                STRUC_11:   .SET   STRUC_12   
0E6A                STRUC_12:   .SET   0   
0E6A                          ;*Macro unroll:  NEXT
0E6A   C3 F4 0E               JP   enter   
0E6D                          ;*Macro unroll: CODE "bl",2,0,bl
0E6D                HEADER_BL:      
0E6D   4A 0E                  DW   link   
0E6F                LINK:     .SET   HEADER_bl   
0E6F   02                     DB   0 + 2   
0E70   62 6C                  DB   "bl"   
0E72                BL:          
0E72                          ;*Macro unroll:  ENTER
0E72   CF                     RST   $08   
0E73   13 12 20 00            DW   lit,$20   ; compile branch on zero
0E77                          ;*Macro unroll:  EXIT
0E77   05 0F                  DW   exit   
0E79   C3 F4 0E               JP   enter   
0E7C                          ;*Macro unroll: CODE "print",5,0,PRINT
0E7C                HEADER_PRINT:      
0E7C   6D 0E                  DW   link   
0E7E                LINK:     .SET   HEADER_PRINT   
0E7E   05                     DB   0 + 5   
0E7F   70 72 69 6E 74         DB   "print"   
0E84                PRINT:       
0E84                          ;*Macro unroll:  ppop D,E
0E84   50                     LD   D,B   
0E85   59                     LD   E,C   
0E86                          ;*Macro unroll:  ppop0 B,C
0E86   DD 2B                  DEC   IX   
0E88   DD 46 00               LD   B,(IX+0)   
0E8B   DD 2B                  DEC   IX   
0E8D   DD 4E 00               LD   C,(IX+0)   
0E90   CD E3 11               CALL   printPStr   
0E93                          ;*Macro unroll:  NEXT
0E93   C3 F4 0E               JP   enter   
0E96                             ; ." print string"
0E96                          ;*Macro unroll: CODE {".",$22},2,msk_immed,dotquote
0E96                HEADER_DOTQUOTE:      
0E96   7C 0E                  DW   link   
0E98                LINK:     .SET   HEADER_dotquote   
0E98   82                     DB   msk_immed + 2   
0E99   2E 22                  DB   ".",$22   
0E9B                DOTQUOTE:      
0E9B                          ;*Macro unroll:  ENTER
0E9B   CF                     RST   $08   
0E9C   7D 13                  DW   qt   
0E9E   0D 09 38 0F DD 03      DW   state,fetch,zequal   
0EA4                          ;*Macro unroll:  cIf
0EA4   8A 07 00 00            DW   QBRAN,0   
0EA8                          ;*Macro unroll:  CPL_PUSH $
0EA8                CPL_COUNT:   .SET   CPL_COUNT + 1   
0EA8                CPL_10:   .SET   CPL_9   
0EA8                CPL_9:    .SET   CPL_8   
0EA8                CPL_8:    .SET   CPL_7   
0EA8                CPL_7:    .SET   CPL_6   
0EA8                CPL_6:    .SET   CPL_5   
0EA8                CPL_5:    .SET   CPL_4   
0EA8                CPL_4:    .SET   CPL_3   
0EA8                CPL_3:    .SET   CPL_2   
0EA8                CPL_2:    .SET   CPL_TOP   
0EA8                CPL_TOP:   .SET   $   
0EA8   D9 0D                  DW   type   
0EAA                          ;*Macro unroll:  cElse
0EAA   A7 07 00 00            DW   BRAN,0   
0EAE                          ;*Macro unroll:  cBRANCH_FWD
0EAE                CUR_ADR:   .SET   $   
0EA6                          .ORG   CPL_TOP - 2   
0EA6   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0EAE                          .ORG   CUR_ADR   
0EAE                CPL_TOP:   .SET   $   
0EAE   13 12 D9 0D EE 0F      DW   lit,type,comma   
0EB4                          ;*Macro unroll:  cEndIf
0EB4                          ;*Macro unroll:  cBRANCH_FWD
0EB4                CUR_ADR:   .SET   $   
0EAC                          .ORG   CPL_TOP - 2   
0EAC   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0EB4                          .ORG   CUR_ADR   
0EB4                          ;*Macro unroll:  CPL_POP
0EB4                CPL_COUNT:   .SET   CPL_COUNT - 1   
0EB4                CPL_TOP:   .SET   CPL_2   
0EB4                CPL_2:    .SET   CPL_3   
0EB4                CPL_3:    .SET   CPL_4   
0EB4                CPL_4:    .SET   CPL_5   
0EB4                CPL_5:    .SET   CPL_6   
0EB4                CPL_6:    .SET   CPL_7   
0EB4                CPL_7:    .SET   CPL_8   
0EB4                CPL_8:    .SET   CPL_9   
0EB4                CPL_9:    .SET   CPL_10   
0EB4                CPL_10:   .SET   0   
0EB4                          ;*Macro unroll:  EXIT
0EB4   05 0F                  DW   exit   
0EB6   C3 F4 0E               JP   enter   
0EB9                INITFORTH:      
0EB9   DD 21 A7 2E            LD   IX,data_stack   ; initialise the param stack.
0EBD   FD 21 F4 0E            LD   IY,enter   
0EC1   DD 22 59 32            LD   (var_sp0),IX   
0EC5   01 00 00               LD   BC,0   ; tos
0EC8   21 00 00               LD   HL,0   
0ECB   22 53 32               LD   (var_intp_stop),HL   
0ECE   22 4F 32               LD   (is_literal),HL   
0ED1   22 57 32               LD   (var_nesting),HL   
0ED4   22 55 32               LD   (var_state),HL   
0ED7   21 0A 00               LD   HL,10   
0EDA   22 5B 32               LD   (var_base),HL   
0EDD   21 63 32               LD   HL,start_user   
0EE0   22 51 32               LD   (var_here),HL   
0EE3   21 B1 14               LD   HL,header_latest   
0EE6   22 5F 32               LD   (var_latest),HL   
0EE9   22 5D 32               LD   (var_latest_str),HL   
0EEC   3E 96                  LD   A,rts_low   
0EEE   D3 80                  OUT   ($80),A   ; initialise acia
0EF0   ED 56                  IM   1   
0EF2   FB                     EI      
0EF3   C9                     RET      
0EF4                ENTER:       
0EF4   E1                     POP   HL   
0EF5                ENTER1:      
0EF5   5E                     LD   E,(HL)   
0EF6   23                     INC   HL   
0EF7   56                     LD   D,(HL)   
0EF8   23                     INC   HL   
0EF9   E5                     PUSH   HL   
0EFA   EB                     EX   DE,HL   
0EFB   E9                     JP   (HL)   
0EFC                FORTH:       ; for calling forth words from assembly
0EFC   21 4D 32               LD   HL,exitAddr   
0EFF   E3                     EX   (SP),HL   
0F00   22 4D 32               LD   (exitAddr),HL   
0F03   EB                     EX   DE,HL   
0F04   E9                     JP   (HL)   
0F05                EXIT:        
0F05   E1                     POP   HL   
0F06   FD E9                  JP   (IY)   
0F08                EXIT_FORTH:      
0F08   C9                     RET      
0F09                          ;*Macro unroll: CODE "noop",4,0,noop
0F09                HEADER_NOOP:      
0F09   96 0E                  DW   link   
0F0B                LINK:     .SET   HEADER_noop   
0F0B   04                     DB   0 + 4   
0F0C   6E 6F 6F 70            DB   "noop"   
0F10                NOOP:        
0F10                          ;*Macro unroll:  NEXT
0F10   C3 F4 0E               JP   enter   
0F13                             ; !        x a-addr --   store cell in memory
0F13                          ;*Macro unroll: CODE "!",1,0,STORE
0F13                HEADER_STORE:      
0F13   09 0F                  DW   link   
0F15                LINK:     .SET   HEADER_STORE   
0F15   01                     DB   0 + 1   
0F16   21                     DB   "!"   
0F17                STORE:       
0F17                          ;*Macro unroll:  ppop H,L
0F17   60                     LD   H,B   
0F18   69                     LD   L,C   
0F19                          ;*Macro unroll:  ppop0 B,C
0F19   DD 2B                  DEC   IX   
0F1B   DD 46 00               LD   B,(IX+0)   
0F1E   DD 2B                  DEC   IX   
0F20   DD 4E 00               LD   C,(IX+0)   
0F23                          ;*Macro unroll:  writeWord HL, B,C
0F23                          ;*Macro unroll:  writeByte HL, C
0F23   71                     LD   (HL),C   
0F24   23                     INC   HL   
0F25                          ;*Macro unroll:  writeByte HL, B
0F25   70                     LD   (HL),B   
0F26   23                     INC   HL   
0F27                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0F27   DD 2B                  DEC   IX   ; POP new TOS
0F29   DD 46 00               LD   B,(IX+0)   
0F2C   DD 2B                  DEC   IX   
0F2E   DD 4E 00               LD   C,(IX+0)   
0F31                          ;*Macro unroll:  NEXT
0F31   C3 F4 0E               JP   enter   
0F34                          ;*Macro unroll: CODE "@",1,0,FETCH
0F34                HEADER_FETCH:      
0F34   13 0F                  DW   link   
0F36                LINK:     .SET   HEADER_FETCH   
0F36   01                     DB   0 + 1   
0F37   40                     DB   "@"   
0F38                FETCH:       
0F38                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0F38   69                     LD   L,C   ; HL = TOS
0F39   60                     LD   H,B   
0F3A                          ;*Macro unroll:  readWord HL, B,C
0F3A   4E                     LD   C,(HL)   
0F3B   23                     INC   HL   
0F3C   46                     LD   B,(HL)   
0F3D   23                     INC   HL   
0F3E                          ;*Macro unroll:  NEXT
0F3E   C3 F4 0E               JP   enter   
0F41                             ; C!      char c-addr --    store char in memory
0F41                          ;*Macro unroll: CODE "c!",2,0,CSTORE
0F41                HEADER_CSTORE:      
0F41   34 0F                  DW   link   
0F43                LINK:     .SET   HEADER_CSTORE   
0F43   02                     DB   0 + 2   
0F44   63 21                  DB   "c!"   
0F46                CSTORE:      
0F46                          ;*Macro unroll:  ppop H,L
0F46   60                     LD   H,B   
0F47   69                     LD   L,C   
0F48                          ;*Macro unroll:  ppop0 B,C
0F48   DD 2B                  DEC   IX   
0F4A   DD 46 00               LD   B,(IX+0)   
0F4D   DD 2B                  DEC   IX   
0F4F   DD 4E 00               LD   C,(IX+0)   
0F52   71                     LD   (HL),C   
0F53                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0F53   DD 2B                  DEC   IX   ; POP new TOS
0F55   DD 46 00               LD   B,(IX+0)   
0F58   DD 2B                  DEC   IX   
0F5A   DD 4E 00               LD   C,(IX+0)   
0F5D                          ;*Macro unroll:  NEXT
0F5D   C3 F4 0E               JP   enter   
0F60                             ; C@     c-addr -- char   fetch char from memory
0F60                          ;*Macro unroll: CODE "c@",2,0,CFETCH
0F60                HEADER_CFETCH:      
0F60   41 0F                  DW   link   
0F62                LINK:     .SET   HEADER_CFETCH   
0F62   02                     DB   0 + 2   
0F63   63 40                  DB   "c@"   
0F65                CFETCH:      
0F65   0A                     LD   A,(BC)   
0F66   4F                     LD   C,A   
0F67   06 00                  LD   B,0   
0F69                          ;*Macro unroll:  NEXT
0F69   C3 F4 0E               JP   enter   
0F6C                             ;z RSP!  a-addr --                  set return stack pointer
0F6C                          ;*Macro unroll: CODE "rsp!",4,0,RSPSTORE
0F6C                HEADER_RSPSTORE:      
0F6C   60 0F                  DW   link   
0F6E                LINK:     .SET   HEADER_RSPSTORE   
0F6E   04                     DB   0 + 4   
0F6F   72 73 70 21            DB   "rsp!"   
0F73                RSPSTORE:      
0F73                          ;*Macro unroll:  SET_RET_SP B,C
0F73                          ;*Macro unroll:  loadWord H,L, B,C
0F73   69                     LD   L,C   
0F74   60                     LD   H,B   
0F75   F9                     LD   SP,HL   
0F76                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
0F76   DD 2B                  DEC   IX   ; POP TOS
0F78   DD 46 00               LD   B,(IX+0)   
0F7B   DD 2B                  DEC   IX   
0F7D   DD 4E 00               LD   C,(IX+0)   
0F80                          ;*Macro unroll:  NEXT
0F80   C3 F4 0E               JP   enter   
0F83                          ;*Macro unroll: CODE "sp@",3,0,SPFETCH
0F83                HEADER_SPFETCH:      
0F83   6C 0F                  DW   link   
0F85                LINK:     .SET   HEADER_SPFETCH   
0F85   03                     DB   0 + 3   
0F86   73 70 40               DB   "sp@"   
0F89                SPFETCH:      
0F89   DD E5                  PUSH   IX   
0F8B   E1                     POP   HL   
0F8C                          ;*Macro unroll:  ppush H,L
0F8C                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0F8C   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0F8F   DD 23                  INC   IX   
0F91   DD 70 00               LD   (IX+0),B   
0F94   DD 23                  INC   IX   
0F96   44                     LD   B,H   
0F97   4D                     LD   C,L   
0F98                          ;*Macro unroll:  NEXT
0F98   C3 F4 0E               JP   enter   
0F9B                          ;*Macro unroll: CODE "sp!",3,0,SPSTORE
0F9B                HEADER_SPSTORE:      
0F9B   83 0F                  DW   link   
0F9D                LINK:     .SET   HEADER_SPSTORE   
0F9D   03                     DB   0 + 3   
0F9E   73 70 21               DB   "sp!"   
0FA1                SPSTORE:      
0FA1                          ;*Macro unroll:  ppop H,L
0FA1   60                     LD   H,B   
0FA2   69                     LD   L,C   
0FA3                          ;*Macro unroll:  ppop0 B,C
0FA3   DD 2B                  DEC   IX   
0FA5   DD 46 00               LD   B,(IX+0)   
0FA8   DD 2B                  DEC   IX   
0FAA   DD 4E 00               LD   C,(IX+0)   
0FAD   E5                     PUSH   HL   
0FAE   DD E1                  POP   IX   
0FB0                          ;*Macro unroll:  NEXT
0FB0   C3 F4 0E               JP   enter   
0FB3                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0FB3                          ;*Macro unroll: CODE "allot",5,0,allot               ;
0FB3                HEADER_ALLOT:      ; 
0FB3   9B 0F                  DW   link   
0FB5                LINK:     .SET   HEADER_allot   
0FB5   05                     DB   0 + 5   
0FB6   61 6C 6C 6F 74         DB   "allot"   
0FBB                ALLOT:       
0FBB                          ;*Macro unroll:  ENTER
0FBB   CF                     RST   $08   
0FBC   D9 08 CA 0F            DW   here,addstore   ; adds n to here
0FC0                          ;*Macro unroll:  EXIT
0FC0   05 0F                  DW   exit   
0FC2   C3 F4 0E               JP   enter   
0FC5                          ;*Macro unroll: CODE "+!",2,0,ADDSTORE               ; (n addr -- )
0FC5                HEADER_ADDSTORE:      ; (n addr -- )
0FC5   B3 0F                  DW   link   
0FC7                LINK:     .SET   HEADER_ADDSTORE   
0FC7   02                     DB   0 + 2   
0FC8   2B 21                  DB   "+!"   
0FCA                ADDSTORE:      
0FCA                          ;*Macro unroll: 	ppop H, L		            ; HL = address, TOS = amount to add
0FCA   60                     LD   H,B   ; HL = address, TOS = amount to add
0FCB   69                     LD   L,C   
0FCC                          ;*Macro unroll:  ppop0 B,C
0FCC   DD 2B                  DEC   IX   
0FCE   DD 46 00               LD   B,(IX+0)   
0FD1   DD 2B                  DEC   IX   
0FD3   DD 4E 00               LD   C,(IX+0)   
0FD6   7E                     LD   A,(HL)   
0FD7   81                     ADD   A,C   ; add TOS at (HL),
0FD8   77                     LD   (HL),A   
0FD9   23                     INC   HL   
0FDA   7E                     LD   A,(HL)   
0FDB   88                     ADC   A,B   
0FDC   77                     LD   (HL),A   
0FDD                          ;*Macro unroll: 	ppop0 B,C                      ; clear param stack
0FDD   DD 2B                  DEC   IX   ; clear param stack
0FDF   DD 46 00               LD   B,(IX+0)   
0FE2   DD 2B                  DEC   IX   
0FE4   DD 4E 00               LD   C,(IX+0)   
0FE7                          ;*Macro unroll:  NEXT
0FE7   C3 F4 0E               JP   enter   
0FEA                          ;*Macro unroll: CODE ",",1,0,COMMA
0FEA                HEADER_COMMA:      
0FEA   C5 0F                  DW   link   
0FEC                LINK:     .SET   HEADER_COMMA   
0FEC   01                     DB   0 + 1   
0FED   2C                     DB   ","   
0FEE                COMMA:       
0FEE   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0FF1                          ;*Macro unroll: 	writeWord HL, B,C
0FF1                          ;*Macro unroll:  writeByte HL, C
0FF1   71                     LD   (HL),C   
0FF2   23                     INC   HL   
0FF3                          ;*Macro unroll:  writeByte HL, B
0FF3   70                     LD   (HL),B   
0FF4   23                     INC   HL   
0FF5   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0FF8                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0FF8   DD 2B                  DEC   IX   ; cleanup TOS
0FFA   DD 46 00               LD   B,(IX+0)   
0FFD   DD 2B                  DEC   IX   
0FFF   DD 4E 00               LD   C,(IX+0)   
1002                          ;*Macro unroll:  NEXT
1002   C3 F4 0E               JP   enter   
1005                          ;*Macro unroll: CODE "c,",1,0,CCOMMA
1005                HEADER_CCOMMA:      
1005   EA 0F                  DW   link   
1007                LINK:     .SET   HEADER_CCOMMA   
1007   01                     DB   0 + 1   
1008   63 2C                  DB   "c,"   
100A                CCOMMA:      
100A                          ;*Macro unroll:  ppush0 H,L
100A   DD 75 00               LD   (IX+0),L   
100D   DD 23                  INC   IX   
100F   DD 74 00               LD   (IX+0),H   
1012   DD 23                  INC   IX   
1014   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
1017   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
1018   23                     INC   HL   
1019   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
101C                          ;*Macro unroll:  ppop0 H,L
101C   DD 2B                  DEC   IX   
101E   DD 66 00               LD   H,(IX+0)   
1021   DD 2B                  DEC   IX   
1023   DD 6E 00               LD   L,(IX+0)   
1026                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
1026   DD 2B                  DEC   IX   ; cleanup TOS
1028   DD 46 00               LD   B,(IX+0)   
102B   DD 2B                  DEC   IX   
102D   DD 4E 00               LD   C,(IX+0)   
1030                          ;*Macro unroll:  NEXT
1030   C3 F4 0E               JP   enter   
1033                             ;   R@          ( -- w )
1033                             ;               Copy top of return stack to the data stack.
1033                          ;*Macro unroll: CODE	'R@',2,0,RAT
1033                HEADER_RAT:      
1033   05 10                  DW   link   
1035                LINK:     .SET   HEADER_RAT   
1035   02                     DB   0 + 2   
1036   52 40                  DB   "R@"   
1038                RAT:         
1038   C5                     PUSH   BC   
1039   DD 4E 00               LD   C,(IX+0)   
103C   DD 46 01               LD   B,(IX+1)   
103F                          ;*Macro unroll: 	NEXT
103F   C3 F4 0E               JP   enter   
1042   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
1068   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
106B   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
1070   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
107B   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
1086                             ; serial I/O
1086                INITSERIAL:      
1086   21 00 00               LD   HL,0   
1089   22 43 30               LD   (serbufused),HL   
108C   21 00 30               LD   HL,serbuf   
108F   22 3F 30               LD   (serinptr),HL   
1092   22 41 30               LD   (serrdptr),HL   
1095   21 4D 30               LD   HL,linebuf   
1098   22 45 30               LD   (lineBufStart),HL   
109B   22 49 30               LD   (currkey),HL   
109E   22 4B 30               LD   (linebuftop),HL   
10A1   21 80 00               LD   HL,LINE_BUFSIZE   
10A4   22 47 30               LD   (lineBufSize),HL   
10A7   3E 96                  LD   A,rts_low   
10A9   D3 80                  OUT   ($80),A   ; initialise acia
10AB   ED 56                  IM   1   
10AD   FB                     EI      
10AE   C9                     RET      
10AF                SERIALIN:      
10AF   F5                     PUSH   AF   
10B0   E5                     PUSH   HL   
10B1   DB 80                  IN   A,($80)   
10B3   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
10B5                          ;*Macro unroll:  _if nz
10B5   C2 BB 10               JP   nz,L_M_1866S31   
10B8   C3 B8 10               JP   $   
10BB                          ;*Macro unroll:  STRUC_PUSH $
10BB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10BB                STRUC_12:   .SET   STRUC_11   
10BB                STRUC_11:   .SET   STRUC_10   
10BB                STRUC_10:   .SET   STRUC_9   
10BB                STRUC_9:   .SET   STRUC_8   
10BB                STRUC_8:   .SET   STRUC_7   
10BB                STRUC_7:   .SET   STRUC_6   
10BB                STRUC_6:   .SET   STRUC_5   
10BB                STRUC_5:   .SET   STRUC_4   
10BB                STRUC_4:   .SET   STRUC_3   
10BB                STRUC_3:   .SET   STRUC_2   
10BB                STRUC_2:   .SET   STRUC_TOP   
10BB                STRUC_TOP:   .SET   $   
10BB                L_M_1866S31:      
10BB   DB 81                  IN   A,($81)   
10BD   F5                     PUSH   AF   
10BE   3A 43 30               LD   A,(serBufUsed)   
10C1   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
10C3                          ;*Macro unroll:  _if z
10C3   CA C9 10               JP   z,L_M_1871S36   
10C6   C3 C6 10               JP   $   
10C9                          ;*Macro unroll:  STRUC_PUSH $
10C9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10C9                STRUC_12:   .SET   STRUC_11   
10C9                STRUC_11:   .SET   STRUC_10   
10C9                STRUC_10:   .SET   STRUC_9   
10C9                STRUC_9:   .SET   STRUC_8   
10C9                STRUC_8:   .SET   STRUC_7   
10C9                STRUC_7:   .SET   STRUC_6   
10C9                STRUC_6:   .SET   STRUC_5   
10C9                STRUC_5:   .SET   STRUC_4   
10C9                STRUC_4:   .SET   STRUC_3   
10C9                STRUC_3:   .SET   STRUC_2   
10C9                STRUC_2:   .SET   STRUC_TOP   
10C9                STRUC_TOP:   .SET   $   
10C9                L_M_1871S36:      
10C9   F1                     POP   AF   
10CA                          ;*Macro unroll:  _else
10CA   C3 CA 10               JP   $   
10CD                          ;*Macro unroll:  STRUC_FWD
10CD                CUR_ADR:   .SET   $   
10C7                          .ORG   STRUC_TOP - 2   
10C7   CD 10                  DW   CUR_ADR   
10CD                          .ORG   CUR_ADR   
10CD                STRUC_TOP:   .SET   $   
10CD   2A 3F 30               LD   HL,(serInPtr)   
10D0   23                     INC   HL   
10D1   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
10D2   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
10D4                          ;*Macro unroll:  _if z
10D4   CA DA 10               JP   z,L_M_1878S43   
10D7   C3 D7 10               JP   $   
10DA                          ;*Macro unroll:  STRUC_PUSH $
10DA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10DA                STRUC_12:   .SET   STRUC_11   
10DA                STRUC_11:   .SET   STRUC_10   
10DA                STRUC_10:   .SET   STRUC_9   
10DA                STRUC_9:   .SET   STRUC_8   
10DA                STRUC_8:   .SET   STRUC_7   
10DA                STRUC_7:   .SET   STRUC_6   
10DA                STRUC_6:   .SET   STRUC_5   
10DA                STRUC_5:   .SET   STRUC_4   
10DA                STRUC_4:   .SET   STRUC_3   
10DA                STRUC_3:   .SET   STRUC_2   
10DA                STRUC_2:   .SET   STRUC_TOP   
10DA                STRUC_TOP:   .SET   $   
10DA                L_M_1878S43:      
10DA   21 00 30               LD   HL,serBuf   
10DD                          ;*Macro unroll:  _endif
10DD                          ;*Macro unroll:  STRUC_FWD
10DD                CUR_ADR:   .SET   $   
10D8                          .ORG   STRUC_TOP - 2   
10D8   DD 10                  DW   CUR_ADR   
10DD                          .ORG   CUR_ADR   
10DD                          ;*Macro unroll:  STRUC_POP
10DD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10DD                STRUC_TOP:   .SET   STRUC_2   
10DD                STRUC_2:   .SET   STRUC_3   
10DD                STRUC_3:   .SET   STRUC_4   
10DD                STRUC_4:   .SET   STRUC_5   
10DD                STRUC_5:   .SET   STRUC_6   
10DD                STRUC_6:   .SET   STRUC_7   
10DD                STRUC_7:   .SET   STRUC_8   
10DD                STRUC_8:   .SET   STRUC_9   
10DD                STRUC_9:   .SET   STRUC_10   
10DD                STRUC_10:   .SET   STRUC_11   
10DD                STRUC_11:   .SET   STRUC_12   
10DD                STRUC_12:   .SET   0   
10DD   22 3F 30               LD   (serInPtr),HL   
10E0   F1                     POP   AF   
10E1   77                     LD   (HL),A   
10E2   3A 43 30               LD   A,(serBufUsed)   
10E5   3C                     INC   A   
10E6   32 43 30               LD   (serBufUsed),A   
10E9   FE 30                  CP   SER_FULLSIZE   
10EB                          ;*Macro unroll:  _if nc
10EB   D2 F1 10               JP   nc,L_M_1888S53   
10EE   C3 EE 10               JP   $   
10F1                          ;*Macro unroll:  STRUC_PUSH $
10F1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10F1                STRUC_12:   .SET   STRUC_11   
10F1                STRUC_11:   .SET   STRUC_10   
10F1                STRUC_10:   .SET   STRUC_9   
10F1                STRUC_9:   .SET   STRUC_8   
10F1                STRUC_8:   .SET   STRUC_7   
10F1                STRUC_7:   .SET   STRUC_6   
10F1                STRUC_6:   .SET   STRUC_5   
10F1                STRUC_5:   .SET   STRUC_4   
10F1                STRUC_4:   .SET   STRUC_3   
10F1                STRUC_3:   .SET   STRUC_2   
10F1                STRUC_2:   .SET   STRUC_TOP   
10F1                STRUC_TOP:   .SET   $   
10F1                L_M_1888S53:      
10F1   3E D6                  LD   A,RTS_HIGH   
10F3   D3 80                  OUT   ($80),A   
10F5                          ;*Macro unroll:  _endif
10F5                          ;*Macro unroll:  STRUC_FWD
10F5                CUR_ADR:   .SET   $   
10EF                          .ORG   STRUC_TOP - 2   
10EF   F5 10                  DW   CUR_ADR   
10F5                          .ORG   CUR_ADR   
10F5                          ;*Macro unroll:  STRUC_POP
10F5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10F5                STRUC_TOP:   .SET   STRUC_2   
10F5                STRUC_2:   .SET   STRUC_3   
10F5                STRUC_3:   .SET   STRUC_4   
10F5                STRUC_4:   .SET   STRUC_5   
10F5                STRUC_5:   .SET   STRUC_6   
10F5                STRUC_6:   .SET   STRUC_7   
10F5                STRUC_7:   .SET   STRUC_8   
10F5                STRUC_8:   .SET   STRUC_9   
10F5                STRUC_9:   .SET   STRUC_10   
10F5                STRUC_10:   .SET   STRUC_11   
10F5                STRUC_11:   .SET   STRUC_12   
10F5                STRUC_12:   .SET   0   
10F5                          ;*Macro unroll:  _endif
10F5                          ;*Macro unroll:  STRUC_FWD
10F5                CUR_ADR:   .SET   $   
10CB                          .ORG   STRUC_TOP - 2   
10CB   F5 10                  DW   CUR_ADR   
10F5                          .ORG   CUR_ADR   
10F5                          ;*Macro unroll:  STRUC_POP
10F5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10F5                STRUC_TOP:   .SET   STRUC_2   
10F5                STRUC_2:   .SET   STRUC_3   
10F5                STRUC_3:   .SET   STRUC_4   
10F5                STRUC_4:   .SET   STRUC_5   
10F5                STRUC_5:   .SET   STRUC_6   
10F5                STRUC_6:   .SET   STRUC_7   
10F5                STRUC_7:   .SET   STRUC_8   
10F5                STRUC_8:   .SET   STRUC_9   
10F5                STRUC_9:   .SET   STRUC_10   
10F5                STRUC_10:   .SET   STRUC_11   
10F5                STRUC_11:   .SET   STRUC_12   
10F5                STRUC_12:   .SET   0   
10F5                          ;*Macro unroll:  _endif
10F5                          ;*Macro unroll:  STRUC_FWD
10F5                CUR_ADR:   .SET   $   
10B9                          .ORG   STRUC_TOP - 2   
10B9   F5 10                  DW   CUR_ADR   
10F5                          .ORG   CUR_ADR   
10F5                          ;*Macro unroll:  STRUC_POP
10F5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10F5                STRUC_TOP:   .SET   STRUC_2   
10F5                STRUC_2:   .SET   STRUC_3   
10F5                STRUC_3:   .SET   STRUC_4   
10F5                STRUC_4:   .SET   STRUC_5   
10F5                STRUC_5:   .SET   STRUC_6   
10F5                STRUC_6:   .SET   STRUC_7   
10F5                STRUC_7:   .SET   STRUC_8   
10F5                STRUC_8:   .SET   STRUC_9   
10F5                STRUC_9:   .SET   STRUC_10   
10F5                STRUC_10:   .SET   STRUC_11   
10F5                STRUC_11:   .SET   STRUC_12   
10F5                STRUC_12:   .SET   0   
10F5   E1                     POP   HL   
10F6   F1                     POP   AF   
10F7   FB                     EI      
10F8   C9                     RET      
10F9                             ; 
10F9                             ; getc - input
10F9                             ; returns: A = input char
10F9                             ; 
10F9                GETC:        
10F9                          IF   TESTMODE   
10F9   E5                     PUSH   HL   
10FA   2A 61 32               LD   HL,(char_pointer)   
10FD   7E                     LD   A,(HL)   
10FE   23                     INC   HL   
10FF   22 61 32               LD   (char_pointer),HL   
1102   E1                     POP   HL   
1103   C9                     RET      
1104                          ELSE      
                              ;*Macro unroll:  _do
                              JR   L_M_1912S81   
                              JP   $   
                              ;*Macro unroll:  DLOOP_PUSH $
                    DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
                    DLOOP_12:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_TOP   
                    DLOOP_TOP:   .SET   $   
                    L_M_1912S81:      
                              LD   A,(serBufUsed)   
                              CP   $00   
                              ;*Macro unroll:  _until nz
                              JP   nz,DLOOP_TOP - 3   
                              ;*Macro unroll:  DLOOP_FWD               ; needed?
                    CUR_ADR:   .SET   $   ; needed?
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  _enddo
                              JP   DLOOP_TOP   
                              ;*Macro unroll:  DLOOP_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  DLOOP_POP
                    DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
                    DLOOP_TOP:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_12   
                    DLOOP_12:   .SET   0   
                              PUSH   HL   
                              LD   HL,(serRdPtr)   
                              INC   HL   
                              LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
                              CP   (serBuf + SER_BUFSIZE) & $FF   
                              ;*Macro unroll:  _if z
                              JP   z,L_M_1922S91   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1922S91:      
                              LD   HL,serBuf   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              DI      
                              LD   (serRdPtr),HL   
                              LD   A,(serBufUsed)   
                              DEC   A   
                              LD   (serBufUsed),A   
                              CP   SER_EMPTYSIZE   
                              ;*Macro unroll:  _if c
                              JP   c,L_M_1931S100   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1931S100:      
                              LD   A,RTS_LOW   
                              OUT   ($80),A   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              LD   A,(HL)   
                              EI      
                              POP   HL   
                              RET      ; Char ready in A
1104                          ENDIF      
1104                             ; 
1104                             ; putc - output a character
1104                             ; params: A = char to output
1104                             ; 
1104                PUTC:        
1104   F5                     PUSH   AF   ; Store character
1105                          ;*Macro unroll:  _do
1105   18 03                  JR   L_M_1946S117   
1107   C3 07 11               JP   $   
110A                          ;*Macro unroll:  DLOOP_PUSH $
110A                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
110A                DLOOP_12:   .SET   DLOOP_11   
110A                DLOOP_11:   .SET   DLOOP_10   
110A                DLOOP_10:   .SET   DLOOP_9   
110A                DLOOP_9:   .SET   DLOOP_8   
110A                DLOOP_8:   .SET   DLOOP_7   
110A                DLOOP_7:   .SET   DLOOP_6   
110A                DLOOP_6:   .SET   DLOOP_5   
110A                DLOOP_5:   .SET   DLOOP_4   
110A                DLOOP_4:   .SET   DLOOP_3   
110A                DLOOP_3:   .SET   DLOOP_2   
110A                DLOOP_2:   .SET   DLOOP_TOP   
110A                DLOOP_TOP:   .SET   $   
110A                L_M_1946S117:      
110A   DB 80                  IN   A,($80)   ; Status byte
110C   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
110E                          ;*Macro unroll:  _until nz
110E   C2 07 11               JP   nz,DLOOP_TOP - 3   
1111                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1111                CUR_ADR:   .SET   $   ; needed?
1108                          .ORG   DLOOP_TOP - 2   
1108   11 11                  DW   CUR_ADR   
1111                          .ORG   CUR_ADR   
1111                          ;*Macro unroll:  _enddo
1111   C3 0A 11               JP   DLOOP_TOP   
1114                          ;*Macro unroll:  DLOOP_FWD
1114                CUR_ADR:   .SET   $   
1108                          .ORG   DLOOP_TOP - 2   
1108   14 11                  DW   CUR_ADR   
1114                          .ORG   CUR_ADR   
1114                          ;*Macro unroll:  DLOOP_POP
1114                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1114                DLOOP_TOP:   .SET   DLOOP_2   
1114                DLOOP_2:   .SET   DLOOP_3   
1114                DLOOP_3:   .SET   DLOOP_4   
1114                DLOOP_4:   .SET   DLOOP_5   
1114                DLOOP_5:   .SET   DLOOP_6   
1114                DLOOP_6:   .SET   DLOOP_7   
1114                DLOOP_7:   .SET   DLOOP_8   
1114                DLOOP_8:   .SET   DLOOP_9   
1114                DLOOP_9:   .SET   DLOOP_10   
1114                DLOOP_10:   .SET   DLOOP_11   
1114                DLOOP_11:   .SET   DLOOP_12   
1114                DLOOP_12:   .SET   0   
1114   F1                     POP   AF   ; Retrieve character
1115   D3 81                  OUT   ($81),A   ; Output the character
1117   C9                     RET      
1118                INPUTREADY:      
1118   3A 43 30               LD   A,(serBufUsed)   
111B   FE 00                  CP   $0   
111D   C9                     RET      
111E                             ; 
111E                             ; getline - input line of text ***
111E                             ; params: HL = addr, DE = max (currently up to 255)
111E                             ; returns: BC = length - up to 255
111E                             ; 
111E                GETLINE:      
111E   F5                     PUSH   AF   
111F   E5                     PUSH   HL   
1120                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
1120                          ;*Macro unroll:  ppush0 D,E
1120   DD 73 00               LD   (IX+0),E   
1123   DD 23                  INC   IX   
1125   DD 72 00               LD   (IX+0),D   
1128   DD 23                  INC   IX   
112A   11 6B 10               LD   DE,TXT_PROMPT   
112D   CD E3 11               CALL   printPStr   
1130                          ;*Macro unroll:  ppop0 D,E
1130   DD 2B                  DEC   IX   
1132   DD 56 00               LD   D,(IX+0)   
1135   DD 2B                  DEC   IX   
1137   DD 5E 00               LD   E,(IX+0)   
113A   E1                     POP   HL   
113B   E5                     PUSH   HL   
113C   01 00 00               LD   BC,0   
113F                          ;*Macro unroll:  _do
113F   18 03                  JR   L_M_1970S144   
1141   C3 41 11               JP   $   
1144                          ;*Macro unroll:  DLOOP_PUSH $
1144                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1144                DLOOP_12:   .SET   DLOOP_11   
1144                DLOOP_11:   .SET   DLOOP_10   
1144                DLOOP_10:   .SET   DLOOP_9   
1144                DLOOP_9:   .SET   DLOOP_8   
1144                DLOOP_8:   .SET   DLOOP_7   
1144                DLOOP_7:   .SET   DLOOP_6   
1144                DLOOP_6:   .SET   DLOOP_5   
1144                DLOOP_5:   .SET   DLOOP_4   
1144                DLOOP_4:   .SET   DLOOP_3   
1144                DLOOP_3:   .SET   DLOOP_2   
1144                DLOOP_2:   .SET   DLOOP_TOP   
1144                DLOOP_TOP:   .SET   $   
1144                L_M_1970S144:      
1144                          ;*Macro unroll:  _do
1144   18 03                  JR   L_M_1971S145   
1146   C3 46 11               JP   $   
1149                          ;*Macro unroll:  DLOOP_PUSH $
1149                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1149                DLOOP_12:   .SET   DLOOP_11   
1149                DLOOP_11:   .SET   DLOOP_10   
1149                DLOOP_10:   .SET   DLOOP_9   
1149                DLOOP_9:   .SET   DLOOP_8   
1149                DLOOP_8:   .SET   DLOOP_7   
1149                DLOOP_7:   .SET   DLOOP_6   
1149                DLOOP_6:   .SET   DLOOP_5   
1149                DLOOP_5:   .SET   DLOOP_4   
1149                DLOOP_4:   .SET   DLOOP_3   
1149                DLOOP_3:   .SET   DLOOP_2   
1149                DLOOP_2:   .SET   DLOOP_TOP   
1149                DLOOP_TOP:   .SET   $   
1149                L_M_1971S145:      
1149   CD F9 10               CALL   getc   
114C   FE 08                  CP   $08   
114E                          ;*Macro unroll:  _if z
114E   CA 54 11               JP   z,L_M_1974S148   
1151   C3 51 11               JP   $   
1154                          ;*Macro unroll:  STRUC_PUSH $
1154                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1154                STRUC_12:   .SET   STRUC_11   
1154                STRUC_11:   .SET   STRUC_10   
1154                STRUC_10:   .SET   STRUC_9   
1154                STRUC_9:   .SET   STRUC_8   
1154                STRUC_8:   .SET   STRUC_7   
1154                STRUC_7:   .SET   STRUC_6   
1154                STRUC_6:   .SET   STRUC_5   
1154                STRUC_5:   .SET   STRUC_4   
1154                STRUC_4:   .SET   STRUC_3   
1154                STRUC_3:   .SET   STRUC_2   
1154                STRUC_2:   .SET   STRUC_TOP   
1154                STRUC_TOP:   .SET   $   
1154                L_M_1974S148:      
1154                          ;*Macro unroll:  checkZeroWord B,C
1154   79                     LD   A,C   
1155   B0                     OR   B   
1156                          ;*Macro unroll:  _if nz
1156   C2 5C 11               JP   nz,L_M_1976S150   
1159   C3 59 11               JP   $   
115C                          ;*Macro unroll:  STRUC_PUSH $
115C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
115C                STRUC_12:   .SET   STRUC_11   
115C                STRUC_11:   .SET   STRUC_10   
115C                STRUC_10:   .SET   STRUC_9   
115C                STRUC_9:   .SET   STRUC_8   
115C                STRUC_8:   .SET   STRUC_7   
115C                STRUC_7:   .SET   STRUC_6   
115C                STRUC_6:   .SET   STRUC_5   
115C                STRUC_5:   .SET   STRUC_4   
115C                STRUC_4:   .SET   STRUC_3   
115C                STRUC_3:   .SET   STRUC_2   
115C                STRUC_2:   .SET   STRUC_TOP   
115C                STRUC_TOP:   .SET   $   
115C                L_M_1976S150:      
115C   2B                     DEC   HL   
115D   0B                     DEC   BC   
115E   3E 08                  LD   a,$08   
1160   CD 04 11               CALL   putc   
1163   CD 05 12               CALL   printSpace   
1166   3E 08                  LD   A,$08   
1168   CD 04 11               CALL   putc   
116B                          ;*Macro unroll:  _endif
116B                          ;*Macro unroll:  STRUC_FWD
116B                CUR_ADR:   .SET   $   
115A                          .ORG   STRUC_TOP - 2   
115A   6B 11                  DW   CUR_ADR   
116B                          .ORG   CUR_ADR   
116B                          ;*Macro unroll:  STRUC_POP
116B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
116B                STRUC_TOP:   .SET   STRUC_2   
116B                STRUC_2:   .SET   STRUC_3   
116B                STRUC_3:   .SET   STRUC_4   
116B                STRUC_4:   .SET   STRUC_5   
116B                STRUC_5:   .SET   STRUC_6   
116B                STRUC_6:   .SET   STRUC_7   
116B                STRUC_7:   .SET   STRUC_8   
116B                STRUC_8:   .SET   STRUC_9   
116B                STRUC_9:   .SET   STRUC_10   
116B                STRUC_10:   .SET   STRUC_11   
116B                STRUC_11:   .SET   STRUC_12   
116B                STRUC_12:   .SET   0   
116B                          ;*Macro unroll:  _else
116B   C3 6B 11               JP   $   
116E                          ;*Macro unroll:  STRUC_FWD
116E                CUR_ADR:   .SET   $   
1152                          .ORG   STRUC_TOP - 2   
1152   6E 11                  DW   CUR_ADR   
116E                          .ORG   CUR_ADR   
116E                STRUC_TOP:   .SET   $   
116E   77                     LD   (HL),A   
116F   23                     INC   HL   
1170   03                     INC   BC   
1171   CB 7F                  BIT   7,a   
1173                          ;*Macro unroll:  _if z
1173   CA 79 11               JP   z,L_M_1990S164   
1176   C3 76 11               JP   $   
1179                          ;*Macro unroll:  STRUC_PUSH $
1179                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1179                STRUC_12:   .SET   STRUC_11   
1179                STRUC_11:   .SET   STRUC_10   
1179                STRUC_10:   .SET   STRUC_9   
1179                STRUC_9:   .SET   STRUC_8   
1179                STRUC_8:   .SET   STRUC_7   
1179                STRUC_7:   .SET   STRUC_6   
1179                STRUC_6:   .SET   STRUC_5   
1179                STRUC_5:   .SET   STRUC_4   
1179                STRUC_4:   .SET   STRUC_3   
1179                STRUC_3:   .SET   STRUC_2   
1179                STRUC_2:   .SET   STRUC_TOP   
1179                STRUC_TOP:   .SET   $   
1179                L_M_1990S164:      
1179   CD 04 11               CALL   putc   
117C                          ;*Macro unroll:  _endif
117C                          ;*Macro unroll:  STRUC_FWD
117C                CUR_ADR:   .SET   $   
1177                          .ORG   STRUC_TOP - 2   
1177   7C 11                  DW   CUR_ADR   
117C                          .ORG   CUR_ADR   
117C                          ;*Macro unroll:  STRUC_POP
117C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
117C                STRUC_TOP:   .SET   STRUC_2   
117C                STRUC_2:   .SET   STRUC_3   
117C                STRUC_3:   .SET   STRUC_4   
117C                STRUC_4:   .SET   STRUC_5   
117C                STRUC_5:   .SET   STRUC_6   
117C                STRUC_6:   .SET   STRUC_7   
117C                STRUC_7:   .SET   STRUC_8   
117C                STRUC_8:   .SET   STRUC_9   
117C                STRUC_9:   .SET   STRUC_10   
117C                STRUC_10:   .SET   STRUC_11   
117C                STRUC_11:   .SET   STRUC_12   
117C                STRUC_12:   .SET   0   
117C   FE 0D                  CP   "\r"   
117E   28 0B                  JR   z,getLineCheck   
1180   FE 0A                  CP   "\n"   
1182   28 07                  JR   z,getLineCheck   
1184   7B                     LD   A,E   
1185   B9                     CP   C   
1186   38 03                  JR   c,getLineCheck   
1188                          ;*Macro unroll:  _endif
1188                          ;*Macro unroll:  STRUC_FWD
1188                CUR_ADR:   .SET   $   
116C                          .ORG   STRUC_TOP - 2   
116C   88 11                  DW   CUR_ADR   
1188                          .ORG   CUR_ADR   
1188                          ;*Macro unroll:  STRUC_POP
1188                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1188                STRUC_TOP:   .SET   STRUC_2   
1188                STRUC_2:   .SET   STRUC_3   
1188                STRUC_3:   .SET   STRUC_4   
1188                STRUC_4:   .SET   STRUC_5   
1188                STRUC_5:   .SET   STRUC_6   
1188                STRUC_6:   .SET   STRUC_7   
1188                STRUC_7:   .SET   STRUC_8   
1188                STRUC_8:   .SET   STRUC_9   
1188                STRUC_9:   .SET   STRUC_10   
1188                STRUC_10:   .SET   STRUC_11   
1188                STRUC_11:   .SET   STRUC_12   
1188                STRUC_12:   .SET   0   
1188                          ;*Macro unroll:  _enddo
1188   C3 49 11               JP   DLOOP_TOP   
118B                          ;*Macro unroll:  DLOOP_FWD
118B                CUR_ADR:   .SET   $   
1147                          .ORG   DLOOP_TOP - 2   
1147   8B 11                  DW   CUR_ADR   
118B                          .ORG   CUR_ADR   
118B                          ;*Macro unroll:  DLOOP_POP
118B                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
118B                DLOOP_TOP:   .SET   DLOOP_2   
118B                DLOOP_2:   .SET   DLOOP_3   
118B                DLOOP_3:   .SET   DLOOP_4   
118B                DLOOP_4:   .SET   DLOOP_5   
118B                DLOOP_5:   .SET   DLOOP_6   
118B                DLOOP_6:   .SET   DLOOP_7   
118B                DLOOP_7:   .SET   DLOOP_8   
118B                DLOOP_8:   .SET   DLOOP_9   
118B                DLOOP_9:   .SET   DLOOP_10   
118B                DLOOP_10:   .SET   DLOOP_11   
118B                DLOOP_11:   .SET   DLOOP_12   
118B                DLOOP_12:   .SET   0   
118B                GETLINECHECK:      
118B   3E 00                  LD   a,0   
118D   B9                     CP   c   
118E                          ;*Macro unroll:  _until nz
118E   C2 41 11               JP   nz,DLOOP_TOP - 3   
1191                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1191                CUR_ADR:   .SET   $   ; needed?
1142                          .ORG   DLOOP_TOP - 2   
1142   91 11                  DW   CUR_ADR   
1191                          .ORG   CUR_ADR   
1191                          ;*Macro unroll:  _enddo
1191   C3 44 11               JP   DLOOP_TOP   
1194                          ;*Macro unroll:  DLOOP_FWD
1194                CUR_ADR:   .SET   $   
1142                          .ORG   DLOOP_TOP - 2   
1142   94 11                  DW   CUR_ADR   
1194                          .ORG   CUR_ADR   
1194                          ;*Macro unroll:  DLOOP_POP
1194                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1194                DLOOP_TOP:   .SET   DLOOP_2   
1194                DLOOP_2:   .SET   DLOOP_3   
1194                DLOOP_3:   .SET   DLOOP_4   
1194                DLOOP_4:   .SET   DLOOP_5   
1194                DLOOP_5:   .SET   DLOOP_6   
1194                DLOOP_6:   .SET   DLOOP_7   
1194                DLOOP_7:   .SET   DLOOP_8   
1194                DLOOP_8:   .SET   DLOOP_9   
1194                DLOOP_9:   .SET   DLOOP_10   
1194                DLOOP_10:   .SET   DLOOP_11   
1194                DLOOP_11:   .SET   DLOOP_12   
1194                DLOOP_12:   .SET   0   
1194   F1                     POP   AF   
1195   E1                     POP   HL   
1196   CD FC 11               CALL   printCR   
1199   C9                     RET      
119A                PRINTROUTINE:      
119A                          ;*Macro unroll:  _do
119A   18 03                  JR   L_M_2012S188   
119C   C3 9C 11               JP   $   
119F                          ;*Macro unroll:  DLOOP_PUSH $
119F                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
119F                DLOOP_12:   .SET   DLOOP_11   
119F                DLOOP_11:   .SET   DLOOP_10   
119F                DLOOP_10:   .SET   DLOOP_9   
119F                DLOOP_9:   .SET   DLOOP_8   
119F                DLOOP_8:   .SET   DLOOP_7   
119F                DLOOP_7:   .SET   DLOOP_6   
119F                DLOOP_6:   .SET   DLOOP_5   
119F                DLOOP_5:   .SET   DLOOP_4   
119F                DLOOP_4:   .SET   DLOOP_3   
119F                DLOOP_3:   .SET   DLOOP_2   
119F                DLOOP_2:   .SET   DLOOP_TOP   
119F                DLOOP_TOP:   .SET   $   
119F                L_M_2012S188:      
119F   1A                     LD   A,(DE)   
11A0   CD 04 11               CALL   putc   
11A3   13                     INC   DE   
11A4   0B                     DEC   BC   
11A5                          ;*Macro unroll:  checkZeroWord B,C
11A5   79                     LD   A,C   
11A6   B0                     OR   B   
11A7                          ;*Macro unroll:  _until z
11A7   CA 9C 11               JP   z,DLOOP_TOP - 3   
11AA                          ;*Macro unroll:  DLOOP_FWD               ; needed?
11AA                CUR_ADR:   .SET   $   ; needed?
119D                          .ORG   DLOOP_TOP - 2   
119D   AA 11                  DW   CUR_ADR   
11AA                          .ORG   CUR_ADR   
11AA                          ;*Macro unroll:  _enddo
11AA   C3 9F 11               JP   DLOOP_TOP   
11AD                          ;*Macro unroll:  DLOOP_FWD
11AD                CUR_ADR:   .SET   $   
119D                          .ORG   DLOOP_TOP - 2   
119D   AD 11                  DW   CUR_ADR   
11AD                          .ORG   CUR_ADR   
11AD                          ;*Macro unroll:  DLOOP_POP
11AD                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
11AD                DLOOP_TOP:   .SET   DLOOP_2   
11AD                DLOOP_2:   .SET   DLOOP_3   
11AD                DLOOP_3:   .SET   DLOOP_4   
11AD                DLOOP_4:   .SET   DLOOP_5   
11AD                DLOOP_5:   .SET   DLOOP_6   
11AD                DLOOP_6:   .SET   DLOOP_7   
11AD                DLOOP_7:   .SET   DLOOP_8   
11AD                DLOOP_8:   .SET   DLOOP_9   
11AD                DLOOP_9:   .SET   DLOOP_10   
11AD                DLOOP_10:   .SET   DLOOP_11   
11AD                DLOOP_11:   .SET   DLOOP_12   
11AD                DLOOP_12:   .SET   0   
11AD   C9                     RET      
11AE                             ; 
11AE                             ; getKey -  inputs a line buffered character
11AE                             ; params: none
11AE                             ; returns: A = character,
11AE                             ; 
11AE                GETKEY:      
11AE   E5                     PUSH   HL   
11AF   D5                     PUSH   DE   
11B0   C5                     PUSH   BC   
11B1   2A 49 30               LD   HL,(currkey)   
11B4   ED 5B 4B 30            LD   DE,(lineBufTop)   
11B8   B7                     OR   A   
11B9   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
11BB                          ;*Macro unroll:  _if nc
11BB   D2 C1 11               JP   nc,L_M_2034S212   
11BE   C3 BE 11               JP   $   
11C1                          ;*Macro unroll:  STRUC_PUSH $
11C1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
11C1                STRUC_12:   .SET   STRUC_11   
11C1                STRUC_11:   .SET   STRUC_10   
11C1                STRUC_10:   .SET   STRUC_9   
11C1                STRUC_9:   .SET   STRUC_8   
11C1                STRUC_8:   .SET   STRUC_7   
11C1                STRUC_7:   .SET   STRUC_6   
11C1                STRUC_6:   .SET   STRUC_5   
11C1                STRUC_5:   .SET   STRUC_4   
11C1                STRUC_4:   .SET   STRUC_3   
11C1                STRUC_3:   .SET   STRUC_2   
11C1                STRUC_2:   .SET   STRUC_TOP   
11C1                STRUC_TOP:   .SET   $   
11C1                L_M_2034S212:      
11C1   2A 45 30               LD   HL,(lineBufStart)   ; lineBuf
11C4   ED 5B 47 30            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
11C8   CD 1E 11               CALL   getline   
11CB   21 4D 30               LD   HL,lineBuf   
11CE   22 49 30               LD   (currkey),HL   
11D1   B7                     OR   A   
11D2   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
11D4   22 4B 30               LD   (lineBufTop),HL   
11D7                          ;*Macro unroll:  _endif
11D7                          ;*Macro unroll:  STRUC_FWD
11D7                CUR_ADR:   .SET   $   
11BF                          .ORG   STRUC_TOP - 2   
11BF   D7 11                  DW   CUR_ADR   
11D7                          .ORG   CUR_ADR   
11D7                          ;*Macro unroll:  STRUC_POP
11D7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
11D7                STRUC_TOP:   .SET   STRUC_2   
11D7                STRUC_2:   .SET   STRUC_3   
11D7                STRUC_3:   .SET   STRUC_4   
11D7                STRUC_4:   .SET   STRUC_5   
11D7                STRUC_5:   .SET   STRUC_6   
11D7                STRUC_6:   .SET   STRUC_7   
11D7                STRUC_7:   .SET   STRUC_8   
11D7                STRUC_8:   .SET   STRUC_9   
11D7                STRUC_9:   .SET   STRUC_10   
11D7                STRUC_10:   .SET   STRUC_11   
11D7                STRUC_11:   .SET   STRUC_12   
11D7                STRUC_12:   .SET   0   
11D7   2A 49 30               LD   HL,(currkey)   
11DA   7E                     LD   A,(HL)   ; get next key from input lineBuf
11DB   23                     INC   HL   
11DC   22 49 30               LD   (currkey),HL   ; increment currkey
11DF   C1                     POP   BC   
11E0   D1                     POP   DE   
11E1   E1                     POP   HL   
11E2   C9                     RET      
11E3                             ; 
11E3                             ; Output pascal string ***
11E3                             ; params: DE = addr
11E3                             ; 
11E3                PRINTPSTR:      
11E3   F5                     PUSH   AF   
11E4   C5                     PUSH   BC   
11E5   D5                     PUSH   DE   
11E6   1A                     LD   A,(DE)   
11E7   4F                     LD   C,A   
11E8   06 00                  LD   B,0   
11EA   13                     INC   DE   
11EB   CD 9A 11               CALL   printRoutine   
11EE   D1                     POP   DE   
11EF   C1                     POP   BC   
11F0   F1                     POP   AF   
11F1   C9                     RET      
11F2                             ; 
11F2                             ; Output string
11F2                             ; params: DE = addr, BC = length
11F2                             ; 
11F2                PRINTSTR:      
11F2   F5                     PUSH   AF   
11F3   C5                     PUSH   BC   
11F4   D5                     PUSH   DE   
11F5   CD 9A 11               CALL   printRoutine   
11F8   D1                     POP   DE   
11F9   C1                     POP   BC   
11FA   F1                     POP   AF   
11FB   C9                     RET      
11FC                PRINTCR:      
11FC   D5                     PUSH   DE   
11FD   11 68 10               LD   DE,TXT_NEWLINE   
1200   CD E3 11               CALL   printPStr   
1203   D1                     POP   DE   
1204   C9                     RET      
1205                PRINTSPACE:      
1205   F5                     PUSH   AF   
1206   3E 20                  LD   A," "   
1208   CD 04 11               CALL   putc   
120B   F1                     POP   AF   
120C   C9                     RET      
120D                          ;*Macro unroll: CODE "lit",3,0,LIT
120D                HEADER_LIT:      
120D   33 10                  DW   link   
120F                LINK:     .SET   HEADER_LIT   
120F   03                     DB   0 + 3   
1210   6C 69 74               DB   "lit"   
1213                LIT:         
1213                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
1213   DD 71 00               LD   (IX+0),C   ; pushTOS
1216   DD 23                  INC   IX   
1218   DD 70 00               LD   (IX+0),B   
121B   DD 23                  INC   IX   
121D   E1                     POP   HL   ; pop address of next Forth word in HL
121E                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
121E   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
121F   23                     INC   HL   
1220   46                     LD   B,(HL)   
1221   23                     INC   HL   
1222                          ;*Macro unroll:  NEXT1
1222   C3 F5 0E               JP   enter1   
1225                          ;*Macro unroll: CODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
1225                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
1225   0D 12                  DW   link   
1227                LINK:     .SET   HEADER_ROT   
1227   03                     DB   0 + 3   
1228   72 6F 74               DB   "rot"   
122B                ROT:         
122B                             ; x3 in BC
122B                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
122B   DD 2B                  DEC   IX   ; x2 in DE
122D   DD 56 00               LD   D,(IX+0)   
1230   DD 2B                  DEC   IX   
1232   DD 5E 00               LD   E,(IX+0)   
1235                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
1235   DD 2B                  DEC   IX   ; x1 in HL
1237   DD 66 00               LD   H,(IX+0)   
123A   DD 2B                  DEC   IX   
123C   DD 6E 00               LD   L,(IX+0)   
123F                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
123F   DD 73 00               LD   (IX+0),E   ; x2 on stack
1242   DD 23                  INC   IX   
1244   DD 72 00               LD   (IX+0),D   
1247   DD 23                  INC   IX   
1249                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
1249                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1249   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
124C   DD 23                  INC   IX   
124E   DD 70 00               LD   (IX+0),B   
1251   DD 23                  INC   IX   
1253   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
1254   4D                     LD   C,L   
1255                             ; x1 in BC
1255                          ;*Macro unroll:  NEXT
1255   C3 F4 0E               JP   enter   
1258                          ;*Macro unroll: CODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
1258                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
1258   25 12                  DW   link   
125A                LINK:     .SET   HEADER_NROT   
125A   04                     DB   0 + 4   
125B   2D 72 6F 74            DB   "-rot"   
125F                NROT:        
125F                             ; x3 in BC
125F                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
125F   DD 2B                  DEC   IX   ; x2 in DE
1261   DD 56 00               LD   D,(IX+0)   
1264   DD 2B                  DEC   IX   
1266   DD 5E 00               LD   E,(IX+0)   
1269                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
1269   DD 2B                  DEC   IX   ; x1 in HL
126B   DD 66 00               LD   H,(IX+0)   
126E   DD 2B                  DEC   IX   
1270   DD 6E 00               LD   L,(IX+0)   
1273                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
1273                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1273   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1276   DD 23                  INC   IX   
1278   DD 70 00               LD   (IX+0),B   
127B   DD 23                  INC   IX   
127D   44                     LD   B,H   ; PUSH x1 - x3 x1
127E   4D                     LD   C,L   
127F                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
127F                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
127F   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1282   DD 23                  INC   IX   
1284   DD 70 00               LD   (IX+0),B   
1287   DD 23                  INC   IX   
1289   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
128A   4B                     LD   C,E   
128B                             ; x2 in BC
128B                          ;*Macro unroll:  NEXT
128B   C3 F4 0E               JP   enter   
128E                          ;*Macro unroll: CODE "dup",3,0,DUPP        ; x -- x x
128E                HEADER_DUPP:      ; x -- x x
128E   58 12                  DW   link   
1290                LINK:     .SET   HEADER_DUPP   
1290   03                     DB   0 + 3   
1291   64 75 70               DB   "dup"   
1294                DUPP:        
1294                          ;*Macro unroll:  ppush0 B,C
1294   DD 71 00               LD   (IX+0),C   
1297   DD 23                  INC   IX   
1299   DD 70 00               LD   (IX+0),B   
129C   DD 23                  INC   IX   
129E                          ;*Macro unroll:  NEXT
129E   C3 F4 0E               JP   enter   
12A1                             ; SWAP     x1 x2 -- x2 x1    swap top two items
12A1                          ;*Macro unroll: CODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
12A1                HEADER_SWAP:      ; x1 x2 -- x2 x1
12A1   8E 12                  DW   link   
12A3                LINK:     .SET   HEADER_SWAP   
12A3   04                     DB   0 + 4   
12A4   73 77 61 70            DB   "swap"   
12A8                SWAP:        
12A8                          ;*Macro unroll:  ppop0 D,E
12A8   DD 2B                  DEC   IX   
12AA   DD 56 00               LD   D,(IX+0)   
12AD   DD 2B                  DEC   IX   
12AF   DD 5E 00               LD   E,(IX+0)   
12B2                          ;*Macro unroll:  ppush D,E
12B2                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12B2   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
12B5   DD 23                  INC   IX   
12B7   DD 70 00               LD   (IX+0),B   
12BA   DD 23                  INC   IX   
12BC   42                     LD   B,D   
12BD   4B                     LD   C,E   
12BE                          ;*Macro unroll:  NEXT
12BE   C3 F4 0E               JP   enter   
12C1                          ;*Macro unroll: CODE "drop",4,0,DROP      ; x --
12C1                HEADER_DROP:      ; x --
12C1   A1 12                  DW   link   
12C3                LINK:     .SET   HEADER_DROP   
12C3   04                     DB   0 + 4   
12C4   64 72 6F 70            DB   "drop"   
12C8                DROP:        
12C8                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
12C8   DD 2B                  DEC   IX   ; drop top of stack
12CA   DD 46 00               LD   B,(IX+0)   
12CD   DD 2B                  DEC   IX   
12CF   DD 4E 00               LD   C,(IX+0)   
12D2                          ;*Macro unroll:  NEXT
12D2   C3 F4 0E               JP   enter   
12D5                             ; OVER    x1 x2 -- x1 x2 x1
12D5                          ;*Macro unroll: CODE "over",4,0,OVER
12D5                HEADER_OVER:      
12D5   C1 12                  DW   link   
12D7                LINK:     .SET   HEADER_OVER   
12D7   04                     DB   0 + 4   
12D8   6F 76 65 72            DB   "over"   
12DC                OVER:        
12DC                          ;*Macro unroll:  ppop0 H,L
12DC   DD 2B                  DEC   IX   
12DE   DD 66 00               LD   H,(IX+0)   
12E1   DD 2B                  DEC   IX   
12E3   DD 6E 00               LD   L,(IX+0)   
12E6                          ;*Macro unroll:  ppush0 H,L
12E6   DD 75 00               LD   (IX+0),L   
12E9   DD 23                  INC   IX   
12EB   DD 74 00               LD   (IX+0),H   
12EE   DD 23                  INC   IX   
12F0                          ;*Macro unroll:  ppush H,L
12F0                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
12F0   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
12F3   DD 23                  INC   IX   
12F5   DD 70 00               LD   (IX+0),B   
12F8   DD 23                  INC   IX   
12FA   44                     LD   B,H   
12FB   4D                     LD   C,L   
12FC                          ;*Macro unroll:  NEXT
12FC   C3 F4 0E               JP   enter   
12FF                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
12FF                          ;*Macro unroll: CODE ">r",2,0,TOR
12FF                HEADER_TOR:      
12FF   D5 12                  DW   link   
1301                LINK:     .SET   HEADER_TOR   
1301   02                     DB   0 + 2   
1302   3E 72                  DB   ">r"   
1304                TOR:         
1304   E1                     POP   HL   
1305   C5                     PUSH   BC   
1306   E5                     PUSH   HL   
1307                          ;*Macro unroll:  ppop0 B,C
1307   DD 2B                  DEC   IX   
1309   DD 46 00               LD   B,(IX+0)   
130C   DD 2B                  DEC   IX   
130E   DD 4E 00               LD   C,(IX+0)   
1311                          ;*Macro unroll:  NEXT
1311   C3 F4 0E               JP   enter   
1314                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
1314                          ;*Macro unroll: CODE "r>",2,0,RFROM
1314                HEADER_RFROM:      
1314   FF 12                  DW   link   
1316                LINK:     .SET   HEADER_RFROM   
1316   02                     DB   0 + 2   
1317   72 3E                  DB   "r>"   
1319                RFROM:       
1319                          ;*Macro unroll:  ppush0 B,C
1319   DD 71 00               LD   (IX+0),C   
131C   DD 23                  INC   IX   
131E   DD 70 00               LD   (IX+0),B   
1321   DD 23                  INC   IX   
1323   E1                     POP   HL   
1324   C1                     POP   BC   
1325   E5                     PUSH   HL   
1326                          ;*Macro unroll:  NEXT
1326   C3 F4 0E               JP   enter   
1329                             ;   2DROP       ( w w -- )
1329                             ;               Discard two items on stack.
1329                          ;*Macro unroll: CODE	'2DROP',5,0,DDROP
1329                HEADER_DDROP:      
1329   14 13                  DW   link   
132B                LINK:     .SET   HEADER_DDROP   
132B   05                     DB   0 + 5   
132C   32 44 52 4F 50         DB   "2DROP"   
1331                DDROP:       
1331                          ;*Macro unroll:  ENTER
1331   CF                     RST   $08   
1332   C8 12 C8 12 05 0F      DW   DROP,DROP,EXIT   
1338                             ;   2DUP        ( w1 w2 -- w1 w2 w1 w2 )
1338                             ;               Duplicate top two items.
1338                          ;*Macro unroll: CODE	'2DUP',4,0,DDUP
1338                HEADER_DDUP:      
1338   29 13                  DW   link   
133A                LINK:     .SET   HEADER_DDUP   
133A   04                     DB   0 + 4   
133B   32 44 55 50            DB   "2DUP"   
133F                DDUP:        
133F                          ;*Macro unroll:  ENTER
133F   CF                     RST   $08   
1340   DC 12 DC 12 05 0F      DW   OVER,OVER,EXIT   
1346                LITSTR:      ; pushes ptr to string and length on stack
1346   CF                     RST   $08   ; enter forth
1347   19 13                  DW   rfrom   
1349   60 13 DC 12 DC 12 CE 00 DW   count,over,over,plus   
1351   04 13                  DW   tor   
1353                          ;*Macro unroll:  EXIT
1353   05 0F                  DW   exit   
1355   C3 F4 0E               JP   enter   
1358                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
1358                          ;*Macro unroll: CODE "count",5,0,count
1358                HEADER_COUNT:      
1358   38 13                  DW   link   
135A                LINK:     .SET   HEADER_count   
135A   05                     DB   0 + 5   
135B   63 6F 75 6E 74         DB   "count"   
1360                COUNT:       
1360                          ;*Macro unroll:  ENTER
1360   CF                     RST   $08   
1361   94 12 13 12 01 00 CE 00 DW   DUPP,lit,1,plus   ; ( ptr -- ptr ptr+1)
1369   A8 12 65 0F            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
136D                          ;*Macro unroll:  EXIT
136D   05 0F                  DW   exit   
136F   C3 F4 0E               JP   enter   
1372                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
1372                             ; to define the name s" using asm80
1372                          ;*Macro unroll: CODE {"s",$22},2,msk_immed,squote
1372                HEADER_SQUOTE:      
1372   58 13                  DW   link   
1374                LINK:     .SET   HEADER_squote   
1374   82                     DB   msk_immed + 2   
1375   73 22                  DB   "s",$22   
1377                SQUOTE:      
1377   18 04                  JR   qt   
1379                          ;*Macro unroll: CODE $22,1,msk_immed,qt
1379                HEADER_QT:      
1379   72 13                  DW   link   
137B                LINK:     .SET   HEADER_qt   
137B   81                     DB   msk_immed + 1   
137C   22                     DB   $22   
137D                QT:          
137D                          ;*Macro unroll:  ENTER
137D   CF                     RST   $08   
137E   0D 09 38 0F DD 03      DW   state,fetch,zequal   
1384                          ;*Macro unroll:  cIf
1384   8A 07 00 00            DW   QBRAN,0   
1388                          ;*Macro unroll:  CPL_PUSH $
1388                CPL_COUNT:   .SET   CPL_COUNT + 1   
1388                CPL_10:   .SET   CPL_9   
1388                CPL_9:    .SET   CPL_8   
1388                CPL_8:    .SET   CPL_7   
1388                CPL_7:    .SET   CPL_6   
1388                CPL_6:    .SET   CPL_5   
1388                CPL_5:    .SET   CPL_4   
1388                CPL_4:    .SET   CPL_3   
1388                CPL_3:    .SET   CPL_2   
1388                CPL_2:    .SET   CPL_TOP   
1388                CPL_TOP:   .SET   $   
1388   13 12 22 00            DW   lit,$22   ; delim
138C   13 12 3F 00            DW   lit,63   ; limit 63 + length
1390   70 09 38 0F            DW   latestStr,fetch   
1394   13 12 CD 30 3C 01      DW   lit,wordBuf,equal   
139A                          ;*Macro unroll:  cIf
139A   8A 07 00 00            DW   QBRAN,0   
139E                          ;*Macro unroll:  CPL_PUSH $
139E                CPL_COUNT:   .SET   CPL_COUNT + 1   
139E                CPL_10:   .SET   CPL_9   
139E                CPL_9:    .SET   CPL_8   
139E                CPL_8:    .SET   CPL_7   
139E                CPL_7:    .SET   CPL_6   
139E                CPL_6:    .SET   CPL_5   
139E                CPL_5:    .SET   CPL_4   
139E                CPL_4:    .SET   CPL_3   
139E                CPL_3:    .SET   CPL_2   
139E                CPL_2:    .SET   CPL_TOP   
139E                CPL_TOP:   .SET   $   
139E   13 12 0D 31            DW   lit,wordBuf2   
13A2                          ;*Macro unroll:  cElse
13A2   A7 07 00 00            DW   BRAN,0   
13A6                          ;*Macro unroll:  cBRANCH_FWD
13A6                CUR_ADR:   .SET   $   
139C                          .ORG   CPL_TOP - 2   
139C   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
13A6                          .ORG   CUR_ADR   
13A6                CPL_TOP:   .SET   $   
13A6   13 12 CD 30            DW   lit,wordBuf   
13AA                          ;*Macro unroll:  cEndIf
13AA                          ;*Macro unroll:  cBRANCH_FWD
13AA                CUR_ADR:   .SET   $   
13A4                          .ORG   CPL_TOP - 2   
13A4   06 00                  DW   CUR_ADR - CPL_TOP + 2   
13AA                          .ORG   CUR_ADR   
13AA                          ;*Macro unroll:  CPL_POP
13AA                CPL_COUNT:   .SET   CPL_COUNT - 1   
13AA                CPL_TOP:   .SET   CPL_2   
13AA                CPL_2:    .SET   CPL_3   
13AA                CPL_3:    .SET   CPL_4   
13AA                CPL_4:    .SET   CPL_5   
13AA                CPL_5:    .SET   CPL_6   
13AA                CPL_6:    .SET   CPL_7   
13AA                CPL_7:    .SET   CPL_8   
13AA                CPL_8:    .SET   CPL_9   
13AA                CPL_9:    .SET   CPL_10   
13AA                CPL_10:   .SET   0   
13AA   70 09 17 0F            DW   latestStr,store   ; store here in latestStr
13AE   70 09 38 0F            DW   latestStr,fetch   
13B2   38 0C 60 13            DW   xword,count   
13B6                          ;*Macro unroll:  cElse
13B6   A7 07 00 00            DW   BRAN,0   
13BA                          ;*Macro unroll:  cBRANCH_FWD
13BA                CUR_ADR:   .SET   $   
1386                          .ORG   CPL_TOP - 2   
1386   34 00                  DW   CUR_ADR - CPL_TOP + 2   
13BA                          .ORG   CUR_ADR   
13BA                CPL_TOP:   .SET   $   
13BA   13 12 46 13 EE 0F      DW   lit,litstr,comma   
13C0   13 12 22 00 80 0B      DW   lit,$22,word   
13C6   65 0F 05 04            DW   cfetch,ONEP   
13CA   BB 0F                  DW   allot   
13CC                          ;*Macro unroll:  cEndif
13CC                          ;*Macro unroll:  cBRANCH_FWD
13CC                CUR_ADR:   .SET   $   
13B8                          .ORG   CPL_TOP - 2   
13B8   14 00                  DW   CUR_ADR - CPL_TOP + 2   
13CC                          .ORG   CUR_ADR   
13CC                          ;*Macro unroll:  CPL_POP
13CC                CPL_COUNT:   .SET   CPL_COUNT - 1   
13CC                CPL_TOP:   .SET   CPL_2   
13CC                CPL_2:    .SET   CPL_3   
13CC                CPL_3:    .SET   CPL_4   
13CC                CPL_4:    .SET   CPL_5   
13CC                CPL_5:    .SET   CPL_6   
13CC                CPL_6:    .SET   CPL_7   
13CC                CPL_7:    .SET   CPL_8   
13CC                CPL_8:    .SET   CPL_9   
13CC                CPL_9:    .SET   CPL_10   
13CC                CPL_10:   .SET   0   
13CC                          ;*Macro unroll:  EXIT
13CC   05 0F                  DW   exit   
13CE   C3 F4 0E               JP   enter   
13D1                             ; 
13D1                             ; compareStr - string equal
13D1                             ; params: de = string1, HL = string2, BC = length
13D1                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
13D1                             ; destroys: de, HL, BC
13D1                             ; 
13D1                COMPARESTR:      
13D1                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
13D1   79                     LD   A,C   ; test for Count=0
13D2   B0                     OR   B   
13D3                          ;*Macro unroll:  _if nz          ; length zero = match
13D3   C2 D9 13               JP   nz,L_M_2203S56   ; length zero = match
13D6   C3 D6 13               JP   $   
13D9                          ;*Macro unroll:  STRUC_PUSH $
13D9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
13D9                STRUC_12:   .SET   STRUC_11   
13D9                STRUC_11:   .SET   STRUC_10   
13D9                STRUC_10:   .SET   STRUC_9   
13D9                STRUC_9:   .SET   STRUC_8   
13D9                STRUC_8:   .SET   STRUC_7   
13D9                STRUC_7:   .SET   STRUC_6   
13D9                STRUC_6:   .SET   STRUC_5   
13D9                STRUC_5:   .SET   STRUC_4   
13D9                STRUC_4:   .SET   STRUC_3   
13D9                STRUC_3:   .SET   STRUC_2   
13D9                STRUC_2:   .SET   STRUC_TOP   
13D9                STRUC_TOP:   .SET   $   
13D9                L_M_2203S56:      
13D9                          ;*Macro unroll:  _do
13D9   18 03                  JR   L_M_2204S57   
13DB   C3 DB 13               JP   $   
13DE                          ;*Macro unroll:  DLOOP_PUSH $
13DE                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
13DE                DLOOP_12:   .SET   DLOOP_11   
13DE                DLOOP_11:   .SET   DLOOP_10   
13DE                DLOOP_10:   .SET   DLOOP_9   
13DE                DLOOP_9:   .SET   DLOOP_8   
13DE                DLOOP_8:   .SET   DLOOP_7   
13DE                DLOOP_7:   .SET   DLOOP_6   
13DE                DLOOP_6:   .SET   DLOOP_5   
13DE                DLOOP_5:   .SET   DLOOP_4   
13DE                DLOOP_4:   .SET   DLOOP_3   
13DE                DLOOP_3:   .SET   DLOOP_2   
13DE                DLOOP_2:   .SET   DLOOP_TOP   
13DE                DLOOP_TOP:   .SET   $   
13DE                L_M_2204S57:      
13DE   1A                     LD   A,(DE)   
13DF   13                     INC   DE   
13E0   ED A1                  CPI      
13E2                          ;*Macro unroll:  _if nz          ; char mismatch: exit
13E2   C2 E8 13               JP   nz,L_M_2208S61   ; char mismatch: exit
13E5   C3 E5 13               JP   $   
13E8                          ;*Macro unroll:  STRUC_PUSH $
13E8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
13E8                STRUC_12:   .SET   STRUC_11   
13E8                STRUC_11:   .SET   STRUC_10   
13E8                STRUC_10:   .SET   STRUC_9   
13E8                STRUC_9:   .SET   STRUC_8   
13E8                STRUC_8:   .SET   STRUC_7   
13E8                STRUC_7:   .SET   STRUC_6   
13E8                STRUC_6:   .SET   STRUC_5   
13E8                STRUC_5:   .SET   STRUC_4   
13E8                STRUC_4:   .SET   STRUC_3   
13E8                STRUC_3:   .SET   STRUC_2   
13E8                STRUC_2:   .SET   STRUC_TOP   
13E8                STRUC_TOP:   .SET   $   
13E8                L_M_2208S61:      
13E8   2B                     DEC   HL   ; point at mismatch char
13E9   BE                     CP   (HL)   ; set carry if char1 < char2
13EA   9F                     SBC   A,A   
13EB   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
13ED   C9                     RET      
13EE                          ;*Macro unroll:  _endif
13EE                          ;*Macro unroll:  STRUC_FWD
13EE                CUR_ADR:   .SET   $   
13E6                          .ORG   STRUC_TOP - 2   
13E6   EE 13                  DW   CUR_ADR   
13EE                          .ORG   CUR_ADR   
13EE                          ;*Macro unroll:  STRUC_POP
13EE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
13EE                STRUC_TOP:   .SET   STRUC_2   
13EE                STRUC_2:   .SET   STRUC_3   
13EE                STRUC_3:   .SET   STRUC_4   
13EE                STRUC_4:   .SET   STRUC_5   
13EE                STRUC_5:   .SET   STRUC_6   
13EE                STRUC_6:   .SET   STRUC_7   
13EE                STRUC_7:   .SET   STRUC_8   
13EE                STRUC_8:   .SET   STRUC_9   
13EE                STRUC_9:   .SET   STRUC_10   
13EE                STRUC_10:   .SET   STRUC_11   
13EE                STRUC_11:   .SET   STRUC_12   
13EE                STRUC_12:   .SET   0   
13EE                          ;*Macro unroll:  _until po
13EE   E2 DB 13               JP   po,DLOOP_TOP - 3   
13F1                          ;*Macro unroll:  DLOOP_FWD               ; needed?
13F1                CUR_ADR:   .SET   $   ; needed?
13DC                          .ORG   DLOOP_TOP - 2   
13DC   F1 13                  DW   CUR_ADR   
13F1                          .ORG   CUR_ADR   
13F1                          ;*Macro unroll:  _enddo
13F1   C3 DE 13               JP   DLOOP_TOP   
13F4                          ;*Macro unroll:  DLOOP_FWD
13F4                CUR_ADR:   .SET   $   
13DC                          .ORG   DLOOP_TOP - 2   
13DC   F4 13                  DW   CUR_ADR   
13F4                          .ORG   CUR_ADR   
13F4                          ;*Macro unroll:  DLOOP_POP
13F4                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
13F4                DLOOP_TOP:   .SET   DLOOP_2   
13F4                DLOOP_2:   .SET   DLOOP_3   
13F4                DLOOP_3:   .SET   DLOOP_4   
13F4                DLOOP_4:   .SET   DLOOP_5   
13F4                DLOOP_5:   .SET   DLOOP_6   
13F4                DLOOP_6:   .SET   DLOOP_7   
13F4                DLOOP_7:   .SET   DLOOP_8   
13F4                DLOOP_8:   .SET   DLOOP_9   
13F4                DLOOP_9:   .SET   DLOOP_10   
13F4                DLOOP_10:   .SET   DLOOP_11   
13F4                DLOOP_11:   .SET   DLOOP_12   
13F4                DLOOP_12:   .SET   0   
13F4                          ;*Macro unroll:  _endif
13F4                          ;*Macro unroll:  STRUC_FWD
13F4                CUR_ADR:   .SET   $   
13D7                          .ORG   STRUC_TOP - 2   
13D7   F4 13                  DW   CUR_ADR   
13F4                          .ORG   CUR_ADR   
13F4                          ;*Macro unroll:  STRUC_POP
13F4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
13F4                STRUC_TOP:   .SET   STRUC_2   
13F4                STRUC_2:   .SET   STRUC_3   
13F4                STRUC_3:   .SET   STRUC_4   
13F4                STRUC_4:   .SET   STRUC_5   
13F4                STRUC_5:   .SET   STRUC_6   
13F4                STRUC_6:   .SET   STRUC_7   
13F4                STRUC_7:   .SET   STRUC_8   
13F4                STRUC_8:   .SET   STRUC_9   
13F4                STRUC_9:   .SET   STRUC_10   
13F4                STRUC_10:   .SET   STRUC_11   
13F4                STRUC_11:   .SET   STRUC_12   
13F4                STRUC_12:   .SET   0   
13F4                             ; count exhausted & no mismatch found
13F4   3E 00                  LD   A,0   ; a=0 (s1=s2)
13F6   C9                     RET      
13F7                          ;*Macro unroll: CODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
13F7                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
13F7   79 13                  DW   link   
13F9                LINK:     .SET   HEADER_pack   
13F9   04                     DB   0 + 4   
13FA   70 61 63 6B            DB   "pack"   
13FE                PACK:        
13FE                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
13FE   50                     LD   D,B   ; DE = adr2, BC = len
13FF   59                     LD   E,C   
1400                          ;*Macro unroll:  ppop0 B,C
1400   DD 2B                  DEC   IX   
1402   DD 46 00               LD   B,(IX+0)   
1405   DD 2B                  DEC   IX   
1407   DD 4E 00               LD   C,(IX+0)   
140A   D5                     PUSH   DE   
140B                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
140B   DD 2B                  DEC   IX   ; HL = adr1
140D   DD 66 00               LD   H,(IX+0)   
1410   DD 2B                  DEC   IX   
1412   DD 6E 00               LD   L,(IX+0)   
1415   79                     LD   A,C   
1416   12                     LD   (DE),A   ; write length byte to adr2
1417   13                     INC   DE   ; adr2 += 1
1418   ED B0                  LDIR      
141A   C1                     POP   BC   ; TOS = adr2
141B                          ;*Macro unroll:  NEXT
141B   C3 F4 0E               JP   enter   
141E                             ; .s print stack (non-destructively)
141E                          ;*Macro unroll: CODE ".s",2,0,dots                   ; ( -- )
141E                HEADER_DOTS:      ; ( -- )
141E   F7 13                  DW   link   
1420                LINK:     .SET   HEADER_dots   
1420   02                     DB   0 + 2   
1421   2E 73                  DB   ".s"   
1423                DOTS:        
1423                          ;*Macro unroll:  ENTER
1423   CF                     RST   $08   
1424   89 0F                  DW   spfetch   ; psp
1426   3D 09 38 0F            DW   sp0,fetch   ; psp0
142A   1E 01                  DW   SUBB   
142C   13 12 00 00 8C 01      DW   lit,0,greaterThan   
1432                          ;*Macro unroll:  cif
1432   8A 07 00 00            DW   QBRAN,0   
1436                          ;*Macro unroll:  CPL_PUSH $
1436                CPL_COUNT:   .SET   CPL_COUNT + 1   
1436                CPL_10:   .SET   CPL_9   
1436                CPL_9:    .SET   CPL_8   
1436                CPL_8:    .SET   CPL_7   
1436                CPL_7:    .SET   CPL_6   
1436                CPL_6:    .SET   CPL_5   
1436                CPL_5:    .SET   CPL_4   
1436                CPL_4:    .SET   CPL_3   
1436                CPL_3:    .SET   CPL_2   
1436                CPL_2:    .SET   CPL_TOP   
1436                CPL_TOP:   .SET   $   
1436   3D 09 38 0F 13 12 02 00 CE 00 DW   sp0,fetch,lit,2,plus   
1440                          ;*Macro unroll:  cdo
1440   A7 07 06 00            DW   BRAN,6   
1444   A7 07 00 00            DW   BRAN,0   
1448                          ;*Macro unroll:  CPL_PUSH $
1448                CPL_COUNT:   .SET   CPL_COUNT + 1   
1448                CPL_10:   .SET   CPL_9   
1448                CPL_9:    .SET   CPL_8   
1448                CPL_8:    .SET   CPL_7   
1448                CPL_7:    .SET   CPL_6   
1448                CPL_6:    .SET   CPL_5   
1448                CPL_5:    .SET   CPL_4   
1448                CPL_4:    .SET   CPL_3   
1448                CPL_3:    .SET   CPL_2   
1448                CPL_2:    .SET   CPL_TOP   
1448                CPL_TOP:   .SET   $   
1448   94 12                  DW   DUPP   
144A   89 0F 13 12 02 00 1E 01 DW   spfetch,lit,2,SUBB   
1452   A8 12 1E 01 DD 03      DW   swap,SUBB,zequal   
1458                          ;*Macro unroll:  cuntil
1458   DD 03 8A 07 E8 FF      DW   ZEQUAL,QBRAN,CPL_TOP - $ - 8   
145E   94 12 38 0F FA 09      DW   DUPP,fetch,dot   
1464   13 12 02 00 CE 00      DW   lit,2,plus   
146A                          ;*Macro unroll:  cenddo
146A   A7 07 DC FF            DW   BRAN,CPL_TOP - $ - 2   
146E                          ;*Macro unroll:  cBRANCH_FWD
146E                CUR_ADR:   .SET   $   
1446                          .ORG   CPL_TOP - 2   
1446   28 00                  DW   CUR_ADR - CPL_TOP + 2   
146E                          .ORG   CUR_ADR   
146E                          ;*Macro unroll:  CPL_POP
146E                CPL_COUNT:   .SET   CPL_COUNT - 1   
146E                CPL_TOP:   .SET   CPL_2   
146E                CPL_2:    .SET   CPL_3   
146E                CPL_3:    .SET   CPL_4   
146E                CPL_4:    .SET   CPL_5   
146E                CPL_5:    .SET   CPL_6   
146E                CPL_6:    .SET   CPL_7   
146E                CPL_7:    .SET   CPL_8   
146E                CPL_8:    .SET   CPL_9   
146E                CPL_9:    .SET   CPL_10   
146E                CPL_10:   .SET   0   
146E   C8 12                  DW   drop   
1470                          ;*Macro unroll:  cendif
1470                          ;*Macro unroll:  cBRANCH_FWD
1470                CUR_ADR:   .SET   $   
1434                          .ORG   CPL_TOP - 2   
1434   3C 00                  DW   CUR_ADR - CPL_TOP + 2   
1470                          .ORG   CUR_ADR   
1470                          ;*Macro unroll:  CPL_POP
1470                CPL_COUNT:   .SET   CPL_COUNT - 1   
1470                CPL_TOP:   .SET   CPL_2   
1470                CPL_2:    .SET   CPL_3   
1470                CPL_3:    .SET   CPL_4   
1470                CPL_4:    .SET   CPL_5   
1470                CPL_5:    .SET   CPL_6   
1470                CPL_6:    .SET   CPL_7   
1470                CPL_7:    .SET   CPL_8   
1470                CPL_8:    .SET   CPL_9   
1470                CPL_9:    .SET   CPL_10   
1470                CPL_10:   .SET   0   
1470                          ;*Macro unroll:  EXIT
1470   05 0F                  DW   exit   
1472   C3 F4 0E               JP   enter   
1475                          ;*Macro unroll: CODE "words", 5, 0, WORDS
1475                HEADER_WORDS:      
1475   1E 14                  DW   link   
1477                LINK:     .SET   HEADER_WORDS   
1477   05                     DB   0 + 5   
1478   77 6F 72 64 73         DB   "words"   
147D                WORDS:       
147D   C5                     PUSH   BC   
147E   CD 85 14               CALL   listWords   
1481   C1                     POP   BC   
1482                          ;*Macro unroll:  NEXT
1482   C3 F4 0E               JP   enter   
1485                LISTWORDS:      
1485   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
1489                          ;*Macro unroll:  _do
1489   18 03                  JR   L_M_2258S30   
148B   C3 8B 14               JP   $   
148E                          ;*Macro unroll:  DLOOP_PUSH $
148E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
148E                DLOOP_12:   .SET   DLOOP_11   
148E                DLOOP_11:   .SET   DLOOP_10   
148E                DLOOP_10:   .SET   DLOOP_9   
148E                DLOOP_9:   .SET   DLOOP_8   
148E                DLOOP_8:   .SET   DLOOP_7   
148E                DLOOP_7:   .SET   DLOOP_6   
148E                DLOOP_6:   .SET   DLOOP_5   
148E                DLOOP_5:   .SET   DLOOP_4   
148E                DLOOP_4:   .SET   DLOOP_3   
148E                DLOOP_3:   .SET   DLOOP_2   
148E                DLOOP_2:   .SET   DLOOP_TOP   
148E                DLOOP_TOP:   .SET   $   
148E                L_M_2258S30:      
148E                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
148E   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
148F   B2                     OR   D   
1490                          ;*Macro unroll:  _until z
1490   CA 8B 14               JP   z,DLOOP_TOP - 3   
1493                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1493                CUR_ADR:   .SET   $   ; needed?
148C                          .ORG   DLOOP_TOP - 2   
148C   93 14                  DW   CUR_ADR   
1493                          .ORG   CUR_ADR   
1493   D5                     PUSH   DE   ; save ptr to header
1494   13                     INC   DE   ; skip over first field
1495   13                     INC   DE   
1496   1A                     LD   A,(DE)   ; a = flags+length field
1497   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
1499   06 00                  LD   B,0   
149B   4F                     LD   C,A   
149C   13                     INC   DE   
149D   CD F2 11               CALL   printStr   
14A0   CD 05 12               CALL   printSpace   
14A3   CD 04 11               CALL   putc   
14A6   E1                     POP   HL   ; HL = link to previous header
14A7   5E                     LD   E,(HL)   
14A8   23                     INC   HL   
14A9   56                     LD   D,(HL)   ; DE = previous word
14AA                          ;*Macro unroll:  _enddo
14AA   C3 8E 14               JP   DLOOP_TOP   
14AD                          ;*Macro unroll:  DLOOP_FWD
14AD                CUR_ADR:   .SET   $   
148C                          .ORG   DLOOP_TOP - 2   
148C   AD 14                  DW   CUR_ADR   
14AD                          .ORG   CUR_ADR   
14AD                          ;*Macro unroll:  DLOOP_POP
14AD                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
14AD                DLOOP_TOP:   .SET   DLOOP_2   
14AD                DLOOP_2:   .SET   DLOOP_3   
14AD                DLOOP_3:   .SET   DLOOP_4   
14AD                DLOOP_4:   .SET   DLOOP_5   
14AD                DLOOP_5:   .SET   DLOOP_6   
14AD                DLOOP_6:   .SET   DLOOP_7   
14AD                DLOOP_7:   .SET   DLOOP_8   
14AD                DLOOP_8:   .SET   DLOOP_9   
14AD                DLOOP_9:   .SET   DLOOP_10   
14AD                DLOOP_10:   .SET   DLOOP_11   
14AD                DLOOP_11:   .SET   DLOOP_12   
14AD                DLOOP_12:   .SET   0   
14AD   CD FC 11               CALL   printCR   
14B0   C9                     RET      
14B1                             ; "latest" must be the last word defined
14B1                          ;*Macro unroll:  mVAR "latest",6,0,latest, var_latest
14B1                          ;*Macro unroll: CODE "latest",6,0,latest
14B1                HEADER_LATEST:      
14B1   75 14                  DW   link   
14B3                LINK:     .SET   HEADER_latest   
14B3   06                     DB   0 + 6   
14B4   6C 61 74 65 73 74      DB   "latest"   
14BA                LATEST:      
14BA                          ;*Macro unroll:  ppush0 B,C
14BA   DD 71 00               LD   (IX+0),C   
14BD   DD 23                  INC   IX   
14BF   DD 70 00               LD   (IX+0),B   
14C2   DD 23                  INC   IX   
14C4   01 5F 32               LD   BC,var_latest   
14C7                          ;*Macro unroll:  NEXT
14C7   C3 F4 0E               JP   enter   
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
2000                TESTS_START:      
2000                             ; 
2000                             ; test-macros
2000                             ; 
2000                             ; macros to facilitate tests
2000                             ; 
2000                .macro TEST_SET_TEXT,s1
2000                             ; 
2000                 ld HL, (lineBufStart)
2000                 ld (lineBufTop),HL
2000                 ld (currkey),HL
2000                 ld HL, tst_text%%M
2000                 ld (char_pointer), HL
2000                 _skip
2000                tst_text%%M:
2000                 db s1,"\r\n",-1,"\r\n"
2000                 _endskip
2000                .endm
2000                 
2000                             ; prevents using _if macro here
2000                .macro EXPECT,expect,failtxt
2000                             ; 
2000                 call printNum
2000                 loadWord H,L, B,C
2000                 ld L, C
2000                 ppop0 B,C
2000                 CMP16 expect
2000                 jp z, tf_done%%M            ; asm80 macro nesting issue
2000                 ld DE, FAILED
2000                 call printPStr
2000                 ld DE, te_fail%%M
2000                 call printPStr
2000                 halt
2000                 _skip
2000                te_fail%%M:
2000                 .pstr failtxt
2000                 _endskip
2000                tf_done%%M:
2000                .endm
2000                 
2000                             ; 
2000                             ; tests
2000                             ; 
2000                             ; these tests will evaluate when TESTMODE = 1
2000                             ; 
2000                          ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
2000   2A 45 30               LD   HL,(lineBufStart)   
2003   22 4B 30               LD   (lineBufTop),HL   
2006   22 49 30               LD   (currkey),HL   
2009   21 12 20               LD   HL,tst_textM_2328S7   
200C   22 61 32               LD   (char_pointer),HL   
200F                          ;*Macro unroll:  _skip
200F   C3 0F 20               JP   $   
2012                          ;*Macro unroll:  STRUC_PUSH $
2012                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2012                STRUC_12:   .SET   STRUC_11   
2012                STRUC_11:   .SET   STRUC_10   
2012                STRUC_10:   .SET   STRUC_9   
2012                STRUC_9:   .SET   STRUC_8   
2012                STRUC_8:   .SET   STRUC_7   
2012                STRUC_7:   .SET   STRUC_6   
2012                STRUC_6:   .SET   STRUC_5   
2012                STRUC_5:   .SET   STRUC_4   
2012                STRUC_4:   .SET   STRUC_3   
2012                STRUC_3:   .SET   STRUC_2   
2012                STRUC_2:   .SET   STRUC_TOP   
2012                STRUC_TOP:   .SET   $   
2012                TST_TEXTM_2328S7:      
2012   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 2C 20 64 6F 65 73 3E 20 40 20 3B 0D 0A FF 0D 0A DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
2031                          ;*Macro unroll:  _endskip
2031                          ;*Macro unroll:  STRUC_FWD
2031                CUR_ADR:   .SET   $   
2010                          .ORG   STRUC_TOP - 2   
2010   31 20                  DW   CUR_ADR   
2031                          .ORG   CUR_ADR   
2031                          ;*Macro unroll:  STRUC_POP
2031                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2031                STRUC_TOP:   .SET   STRUC_2   
2031                STRUC_2:   .SET   STRUC_3   
2031                STRUC_3:   .SET   STRUC_4   
2031                STRUC_4:   .SET   STRUC_5   
2031                STRUC_5:   .SET   STRUC_6   
2031                STRUC_6:   .SET   STRUC_7   
2031                STRUC_7:   .SET   STRUC_8   
2031                STRUC_8:   .SET   STRUC_9   
2031                STRUC_9:   .SET   STRUC_10   
2031                STRUC_10:   .SET   STRUC_11   
2031                STRUC_11:   .SET   STRUC_12   
2031                STRUC_12:   .SET   0   
2031                          ;*Macro unroll: INTERPRET
2031   CF                     RST   $08   
2032   D0 0B                  DW   interpret   
2034   08 0F                  DW   exit_forth   
2036                          ;*Macro unroll: TEST_SET_TEXT "100 const y"
2036   2A 45 30               LD   HL,(lineBufStart)   
2039   22 4B 30               LD   (lineBufTop),HL   
203C   22 49 30               LD   (currkey),HL   
203F   21 48 20               LD   HL,tst_textM_2330S9   
2042   22 61 32               LD   (char_pointer),HL   
2045                          ;*Macro unroll:  _skip
2045   C3 45 20               JP   $   
2048                          ;*Macro unroll:  STRUC_PUSH $
2048                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2048                STRUC_12:   .SET   STRUC_11   
2048                STRUC_11:   .SET   STRUC_10   
2048                STRUC_10:   .SET   STRUC_9   
2048                STRUC_9:   .SET   STRUC_8   
2048                STRUC_8:   .SET   STRUC_7   
2048                STRUC_7:   .SET   STRUC_6   
2048                STRUC_6:   .SET   STRUC_5   
2048                STRUC_5:   .SET   STRUC_4   
2048                STRUC_4:   .SET   STRUC_3   
2048                STRUC_3:   .SET   STRUC_2   
2048                STRUC_2:   .SET   STRUC_TOP   
2048                STRUC_TOP:   .SET   $   
2048                TST_TEXTM_2330S9:      
2048   31 30 30 20 63 6F 6E 73 74 20 79 0D 0A FF 0D 0A DB   "100 const y","\r\n",-1,"\r\n"   
2058                          ;*Macro unroll:  _endskip
2058                          ;*Macro unroll:  STRUC_FWD
2058                CUR_ADR:   .SET   $   
2046                          .ORG   STRUC_TOP - 2   
2046   58 20                  DW   CUR_ADR   
2058                          .ORG   CUR_ADR   
2058                          ;*Macro unroll:  STRUC_POP
2058                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2058                STRUC_TOP:   .SET   STRUC_2   
2058                STRUC_2:   .SET   STRUC_3   
2058                STRUC_3:   .SET   STRUC_4   
2058                STRUC_4:   .SET   STRUC_5   
2058                STRUC_5:   .SET   STRUC_6   
2058                STRUC_6:   .SET   STRUC_7   
2058                STRUC_7:   .SET   STRUC_8   
2058                STRUC_8:   .SET   STRUC_9   
2058                STRUC_9:   .SET   STRUC_10   
2058                STRUC_10:   .SET   STRUC_11   
2058                STRUC_11:   .SET   STRUC_12   
2058                STRUC_12:   .SET   0   
2058                          ;*Macro unroll: INTERPRET
2058   CF                     RST   $08   
2059   D0 0B                  DW   interpret   
205B   08 0F                  DW   exit_forth   
205D                          ;*Macro unroll: TEST_SET_TEXT "y"
205D   2A 45 30               LD   HL,(lineBufStart)   
2060   22 4B 30               LD   (lineBufTop),HL   
2063   22 49 30               LD   (currkey),HL   
2066   21 6F 20               LD   HL,tst_textM_2332S11   
2069   22 61 32               LD   (char_pointer),HL   
206C                          ;*Macro unroll:  _skip
206C   C3 6C 20               JP   $   
206F                          ;*Macro unroll:  STRUC_PUSH $
206F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
206F                STRUC_12:   .SET   STRUC_11   
206F                STRUC_11:   .SET   STRUC_10   
206F                STRUC_10:   .SET   STRUC_9   
206F                STRUC_9:   .SET   STRUC_8   
206F                STRUC_8:   .SET   STRUC_7   
206F                STRUC_7:   .SET   STRUC_6   
206F                STRUC_6:   .SET   STRUC_5   
206F                STRUC_5:   .SET   STRUC_4   
206F                STRUC_4:   .SET   STRUC_3   
206F                STRUC_3:   .SET   STRUC_2   
206F                STRUC_2:   .SET   STRUC_TOP   
206F                STRUC_TOP:   .SET   $   
206F                TST_TEXTM_2332S11:      
206F   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2075                          ;*Macro unroll:  _endskip
2075                          ;*Macro unroll:  STRUC_FWD
2075                CUR_ADR:   .SET   $   
206D                          .ORG   STRUC_TOP - 2   
206D   75 20                  DW   CUR_ADR   
2075                          .ORG   CUR_ADR   
2075                          ;*Macro unroll:  STRUC_POP
2075                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2075                STRUC_TOP:   .SET   STRUC_2   
2075                STRUC_2:   .SET   STRUC_3   
2075                STRUC_3:   .SET   STRUC_4   
2075                STRUC_4:   .SET   STRUC_5   
2075                STRUC_5:   .SET   STRUC_6   
2075                STRUC_6:   .SET   STRUC_7   
2075                STRUC_7:   .SET   STRUC_8   
2075                STRUC_8:   .SET   STRUC_9   
2075                STRUC_9:   .SET   STRUC_10   
2075                STRUC_10:   .SET   STRUC_11   
2075                STRUC_11:   .SET   STRUC_12   
2075                STRUC_12:   .SET   0   
2075                          ;*Macro unroll: INTERPRET
2075   CF                     RST   $08   
2076   D0 0B                  DW   interpret   
2078   08 0F                  DW   exit_forth   
207A                          ;*Macro unroll: EXPECT 100, "expect 100"
207A   CD 1F 0A               CALL   printNum   
207D                          ;*Macro unroll:  loadWord H,L, B,C
207D   69                     LD   L,C   
207E   60                     LD   H,B   
207F   69                     LD   L,C   
2080                          ;*Macro unroll:  ppop0 B,C
2080   DD 2B                  DEC   IX   
2082   DD 46 00               LD   B,(IX+0)   
2085   DD 2B                  DEC   IX   
2087   DD 4E 00               LD   C,(IX+0)   
208A                          ;*Macro unroll:  CMP16 100
208A   11 64 00               LD   DE,100   
208D   B7                     OR   A   
208E   ED 52                  SBC   HL,DE   
2090                          ;*Macro unroll:  checkZeroWord H,L
2090   7D                     LD   A,L   
2091   B4                     OR   H   
2092   CA AD 20               JP   z,tf_doneM_2334S13   
2095   11 7B 10               LD   DE,FAILED   
2098   CD E3 11               CALL   printPStr   
209B   11 A5 20               LD   DE,te_failM_2334S13   
209E   CD E3 11               CALL   printPStr   
20A1   76                     HALT      
20A2                          ;*Macro unroll:  _skip
20A2   C3 A2 20               JP   $   
20A5                          ;*Macro unroll:  STRUC_PUSH $
20A5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20A5                STRUC_12:   .SET   STRUC_11   
20A5                STRUC_11:   .SET   STRUC_10   
20A5                STRUC_10:   .SET   STRUC_9   
20A5                STRUC_9:   .SET   STRUC_8   
20A5                STRUC_8:   .SET   STRUC_7   
20A5                STRUC_7:   .SET   STRUC_6   
20A5                STRUC_6:   .SET   STRUC_5   
20A5                STRUC_5:   .SET   STRUC_4   
20A5                STRUC_4:   .SET   STRUC_3   
20A5                STRUC_3:   .SET   STRUC_2   
20A5                STRUC_2:   .SET   STRUC_TOP   
20A5                STRUC_TOP:   .SET   $   
20A5                TE_FAILM_2334S13:      
20A5   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
20AD                          ;*Macro unroll:  _endskip
20AD                          ;*Macro unroll:  STRUC_FWD
20AD                CUR_ADR:   .SET   $   
20A3                          .ORG   STRUC_TOP - 2   
20A3   AD 20                  DW   CUR_ADR   
20AD                          .ORG   CUR_ADR   
20AD                          ;*Macro unroll:  STRUC_POP
20AD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20AD                STRUC_TOP:   .SET   STRUC_2   
20AD                STRUC_2:   .SET   STRUC_3   
20AD                STRUC_3:   .SET   STRUC_4   
20AD                STRUC_4:   .SET   STRUC_5   
20AD                STRUC_5:   .SET   STRUC_6   
20AD                STRUC_6:   .SET   STRUC_7   
20AD                STRUC_7:   .SET   STRUC_8   
20AD                STRUC_8:   .SET   STRUC_9   
20AD                STRUC_9:   .SET   STRUC_10   
20AD                STRUC_10:   .SET   STRUC_11   
20AD                STRUC_11:   .SET   STRUC_12   
20AD                STRUC_12:   .SET   0   
20AD                TF_DONEM_2334S13:      
20AD                          ;*Macro unroll: TEST_SET_TEXT "100 constant y"
20AD   2A 45 30               LD   HL,(lineBufStart)   
20B0   22 4B 30               LD   (lineBufTop),HL   
20B3   22 49 30               LD   (currkey),HL   
20B6   21 BF 20               LD   HL,tst_textM_2335S15   
20B9   22 61 32               LD   (char_pointer),HL   
20BC                          ;*Macro unroll:  _skip
20BC   C3 BC 20               JP   $   
20BF                          ;*Macro unroll:  STRUC_PUSH $
20BF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20BF                STRUC_12:   .SET   STRUC_11   
20BF                STRUC_11:   .SET   STRUC_10   
20BF                STRUC_10:   .SET   STRUC_9   
20BF                STRUC_9:   .SET   STRUC_8   
20BF                STRUC_8:   .SET   STRUC_7   
20BF                STRUC_7:   .SET   STRUC_6   
20BF                STRUC_6:   .SET   STRUC_5   
20BF                STRUC_5:   .SET   STRUC_4   
20BF                STRUC_4:   .SET   STRUC_3   
20BF                STRUC_3:   .SET   STRUC_2   
20BF                STRUC_2:   .SET   STRUC_TOP   
20BF                STRUC_TOP:   .SET   $   
20BF                TST_TEXTM_2335S15:      
20BF   31 30 30 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "100 constant y","\r\n",-1,"\r\n"   
20D2                          ;*Macro unroll:  _endskip
20D2                          ;*Macro unroll:  STRUC_FWD
20D2                CUR_ADR:   .SET   $   
20BD                          .ORG   STRUC_TOP - 2   
20BD   D2 20                  DW   CUR_ADR   
20D2                          .ORG   CUR_ADR   
20D2                          ;*Macro unroll:  STRUC_POP
20D2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20D2                STRUC_TOP:   .SET   STRUC_2   
20D2                STRUC_2:   .SET   STRUC_3   
20D2                STRUC_3:   .SET   STRUC_4   
20D2                STRUC_4:   .SET   STRUC_5   
20D2                STRUC_5:   .SET   STRUC_6   
20D2                STRUC_6:   .SET   STRUC_7   
20D2                STRUC_7:   .SET   STRUC_8   
20D2                STRUC_8:   .SET   STRUC_9   
20D2                STRUC_9:   .SET   STRUC_10   
20D2                STRUC_10:   .SET   STRUC_11   
20D2                STRUC_11:   .SET   STRUC_12   
20D2                STRUC_12:   .SET   0   
20D2                          ;*Macro unroll: INTERPRET
20D2   CF                     RST   $08   
20D3   D0 0B                  DW   interpret   
20D5   08 0F                  DW   exit_forth   
20D7                          ;*Macro unroll: TEST_SET_TEXT "y"
20D7   2A 45 30               LD   HL,(lineBufStart)   
20DA   22 4B 30               LD   (lineBufTop),HL   
20DD   22 49 30               LD   (currkey),HL   
20E0   21 E9 20               LD   HL,tst_textM_2337S17   
20E3   22 61 32               LD   (char_pointer),HL   
20E6                          ;*Macro unroll:  _skip
20E6   C3 E6 20               JP   $   
20E9                          ;*Macro unroll:  STRUC_PUSH $
20E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20E9                STRUC_12:   .SET   STRUC_11   
20E9                STRUC_11:   .SET   STRUC_10   
20E9                STRUC_10:   .SET   STRUC_9   
20E9                STRUC_9:   .SET   STRUC_8   
20E9                STRUC_8:   .SET   STRUC_7   
20E9                STRUC_7:   .SET   STRUC_6   
20E9                STRUC_6:   .SET   STRUC_5   
20E9                STRUC_5:   .SET   STRUC_4   
20E9                STRUC_4:   .SET   STRUC_3   
20E9                STRUC_3:   .SET   STRUC_2   
20E9                STRUC_2:   .SET   STRUC_TOP   
20E9                STRUC_TOP:   .SET   $   
20E9                TST_TEXTM_2337S17:      
20E9   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
20EF                          ;*Macro unroll:  _endskip
20EF                          ;*Macro unroll:  STRUC_FWD
20EF                CUR_ADR:   .SET   $   
20E7                          .ORG   STRUC_TOP - 2   
20E7   EF 20                  DW   CUR_ADR   
20EF                          .ORG   CUR_ADR   
20EF                          ;*Macro unroll:  STRUC_POP
20EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20EF                STRUC_TOP:   .SET   STRUC_2   
20EF                STRUC_2:   .SET   STRUC_3   
20EF                STRUC_3:   .SET   STRUC_4   
20EF                STRUC_4:   .SET   STRUC_5   
20EF                STRUC_5:   .SET   STRUC_6   
20EF                STRUC_6:   .SET   STRUC_7   
20EF                STRUC_7:   .SET   STRUC_8   
20EF                STRUC_8:   .SET   STRUC_9   
20EF                STRUC_9:   .SET   STRUC_10   
20EF                STRUC_10:   .SET   STRUC_11   
20EF                STRUC_11:   .SET   STRUC_12   
20EF                STRUC_12:   .SET   0   
20EF                          ;*Macro unroll: INTERPRET
20EF   CF                     RST   $08   
20F0   D0 0B                  DW   interpret   
20F2   08 0F                  DW   exit_forth   
20F4                          ;*Macro unroll: EXPECT 100, "expect 100"
20F4   CD 1F 0A               CALL   printNum   
20F7                          ;*Macro unroll:  loadWord H,L, B,C
20F7   69                     LD   L,C   
20F8   60                     LD   H,B   
20F9   69                     LD   L,C   
20FA                          ;*Macro unroll:  ppop0 B,C
20FA   DD 2B                  DEC   IX   
20FC   DD 46 00               LD   B,(IX+0)   
20FF   DD 2B                  DEC   IX   
2101   DD 4E 00               LD   C,(IX+0)   
2104                          ;*Macro unroll:  CMP16 100
2104   11 64 00               LD   DE,100   
2107   B7                     OR   A   
2108   ED 52                  SBC   HL,DE   
210A                          ;*Macro unroll:  checkZeroWord H,L
210A   7D                     LD   A,L   
210B   B4                     OR   H   
210C   CA 27 21               JP   z,tf_doneM_2339S19   
210F   11 7B 10               LD   DE,FAILED   
2112   CD E3 11               CALL   printPStr   
2115   11 1F 21               LD   DE,te_failM_2339S19   
2118   CD E3 11               CALL   printPStr   
211B   76                     HALT      
211C                          ;*Macro unroll:  _skip
211C   C3 1C 21               JP   $   
211F                          ;*Macro unroll:  STRUC_PUSH $
211F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
211F                STRUC_12:   .SET   STRUC_11   
211F                STRUC_11:   .SET   STRUC_10   
211F                STRUC_10:   .SET   STRUC_9   
211F                STRUC_9:   .SET   STRUC_8   
211F                STRUC_8:   .SET   STRUC_7   
211F                STRUC_7:   .SET   STRUC_6   
211F                STRUC_6:   .SET   STRUC_5   
211F                STRUC_5:   .SET   STRUC_4   
211F                STRUC_4:   .SET   STRUC_3   
211F                STRUC_3:   .SET   STRUC_2   
211F                STRUC_2:   .SET   STRUC_TOP   
211F                STRUC_TOP:   .SET   $   
211F                TE_FAILM_2339S19:      
211F   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
2127                          ;*Macro unroll:  _endskip
2127                          ;*Macro unroll:  STRUC_FWD
2127                CUR_ADR:   .SET   $   
211D                          .ORG   STRUC_TOP - 2   
211D   27 21                  DW   CUR_ADR   
2127                          .ORG   CUR_ADR   
2127                          ;*Macro unroll:  STRUC_POP
2127                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2127                STRUC_TOP:   .SET   STRUC_2   
2127                STRUC_2:   .SET   STRUC_3   
2127                STRUC_3:   .SET   STRUC_4   
2127                STRUC_4:   .SET   STRUC_5   
2127                STRUC_5:   .SET   STRUC_6   
2127                STRUC_6:   .SET   STRUC_7   
2127                STRUC_7:   .SET   STRUC_8   
2127                STRUC_8:   .SET   STRUC_9   
2127                STRUC_9:   .SET   STRUC_10   
2127                STRUC_10:   .SET   STRUC_11   
2127                STRUC_11:   .SET   STRUC_12   
2127                STRUC_12:   .SET   0   
2127                TF_DONEM_2339S19:      
2127                          ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
2127   2A 45 30               LD   HL,(lineBufStart)   
212A   22 4B 30               LD   (lineBufTop),HL   
212D   22 49 30               LD   (currkey),HL   
2130   21 39 21               LD   HL,tst_textM_2340S21   
2133   22 61 32               LD   (char_pointer),HL   
2136                          ;*Macro unroll:  _skip
2136   C3 36 21               JP   $   
2139                          ;*Macro unroll:  STRUC_PUSH $
2139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2139                STRUC_12:   .SET   STRUC_11   
2139                STRUC_11:   .SET   STRUC_10   
2139                STRUC_10:   .SET   STRUC_9   
2139                STRUC_9:   .SET   STRUC_8   
2139                STRUC_8:   .SET   STRUC_7   
2139                STRUC_7:   .SET   STRUC_6   
2139                STRUC_6:   .SET   STRUC_5   
2139                STRUC_5:   .SET   STRUC_4   
2139                STRUC_4:   .SET   STRUC_3   
2139                STRUC_3:   .SET   STRUC_2   
2139                STRUC_2:   .SET   STRUC_TOP   
2139                STRUC_TOP:   .SET   $   
2139                TST_TEXTM_2340S21:      
2139   3A 20 78 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 31 20 2E 20 3B 0D 0A FF 0D 0A DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
2154                          ;*Macro unroll:  _endskip
2154                          ;*Macro unroll:  STRUC_FWD
2154                CUR_ADR:   .SET   $   
2137                          .ORG   STRUC_TOP - 2   
2137   54 21                  DW   CUR_ADR   
2154                          .ORG   CUR_ADR   
2154                          ;*Macro unroll:  STRUC_POP
2154                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2154                STRUC_TOP:   .SET   STRUC_2   
2154                STRUC_2:   .SET   STRUC_3   
2154                STRUC_3:   .SET   STRUC_4   
2154                STRUC_4:   .SET   STRUC_5   
2154                STRUC_5:   .SET   STRUC_6   
2154                STRUC_6:   .SET   STRUC_7   
2154                STRUC_7:   .SET   STRUC_8   
2154                STRUC_8:   .SET   STRUC_9   
2154                STRUC_9:   .SET   STRUC_10   
2154                STRUC_10:   .SET   STRUC_11   
2154                STRUC_11:   .SET   STRUC_12   
2154                STRUC_12:   .SET   0   
2154                          ;*Macro unroll: INTERPRET
2154   CF                     RST   $08   
2155   D0 0B                  DW   interpret   
2157   08 0F                  DW   exit_forth   
2159                          ;*Macro unroll: TEST_SET_TEXT "x y"
2159   2A 45 30               LD   HL,(lineBufStart)   
215C   22 4B 30               LD   (lineBufTop),HL   
215F   22 49 30               LD   (currkey),HL   
2162   21 6B 21               LD   HL,tst_textM_2342S23   
2165   22 61 32               LD   (char_pointer),HL   
2168                          ;*Macro unroll:  _skip
2168   C3 68 21               JP   $   
216B                          ;*Macro unroll:  STRUC_PUSH $
216B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
216B                STRUC_12:   .SET   STRUC_11   
216B                STRUC_11:   .SET   STRUC_10   
216B                STRUC_10:   .SET   STRUC_9   
216B                STRUC_9:   .SET   STRUC_8   
216B                STRUC_8:   .SET   STRUC_7   
216B                STRUC_7:   .SET   STRUC_6   
216B                STRUC_6:   .SET   STRUC_5   
216B                STRUC_5:   .SET   STRUC_4   
216B                STRUC_4:   .SET   STRUC_3   
216B                STRUC_3:   .SET   STRUC_2   
216B                STRUC_2:   .SET   STRUC_TOP   
216B                STRUC_TOP:   .SET   $   
216B                TST_TEXTM_2342S23:      
216B   78 20 79 0D 0A FF 0D 0A DB   "x y","\r\n",-1,"\r\n"   
2173                          ;*Macro unroll:  _endskip
2173                          ;*Macro unroll:  STRUC_FWD
2173                CUR_ADR:   .SET   $   
2169                          .ORG   STRUC_TOP - 2   
2169   73 21                  DW   CUR_ADR   
2173                          .ORG   CUR_ADR   
2173                          ;*Macro unroll:  STRUC_POP
2173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2173                STRUC_TOP:   .SET   STRUC_2   
2173                STRUC_2:   .SET   STRUC_3   
2173                STRUC_3:   .SET   STRUC_4   
2173                STRUC_4:   .SET   STRUC_5   
2173                STRUC_5:   .SET   STRUC_6   
2173                STRUC_6:   .SET   STRUC_7   
2173                STRUC_7:   .SET   STRUC_8   
2173                STRUC_8:   .SET   STRUC_9   
2173                STRUC_9:   .SET   STRUC_10   
2173                STRUC_10:   .SET   STRUC_11   
2173                STRUC_11:   .SET   STRUC_12   
2173                STRUC_12:   .SET   0   
2173                          ;*Macro unroll: INTERPRET
2173   CF                     RST   $08   
2174   D0 0B                  DW   interpret   
2176   08 0F                  DW   exit_forth   
2178                          ;*Macro unroll: TEST_SET_TEXT "y"
2178   2A 45 30               LD   HL,(lineBufStart)   
217B   22 4B 30               LD   (lineBufTop),HL   
217E   22 49 30               LD   (currkey),HL   
2181   21 8A 21               LD   HL,tst_textM_2344S25   
2184   22 61 32               LD   (char_pointer),HL   
2187                          ;*Macro unroll:  _skip
2187   C3 87 21               JP   $   
218A                          ;*Macro unroll:  STRUC_PUSH $
218A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
218A                STRUC_12:   .SET   STRUC_11   
218A                STRUC_11:   .SET   STRUC_10   
218A                STRUC_10:   .SET   STRUC_9   
218A                STRUC_9:   .SET   STRUC_8   
218A                STRUC_8:   .SET   STRUC_7   
218A                STRUC_7:   .SET   STRUC_6   
218A                STRUC_6:   .SET   STRUC_5   
218A                STRUC_5:   .SET   STRUC_4   
218A                STRUC_4:   .SET   STRUC_3   
218A                STRUC_3:   .SET   STRUC_2   
218A                STRUC_2:   .SET   STRUC_TOP   
218A                STRUC_TOP:   .SET   $   
218A                TST_TEXTM_2344S25:      
218A   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2190                          ;*Macro unroll:  _endskip
2190                          ;*Macro unroll:  STRUC_FWD
2190                CUR_ADR:   .SET   $   
2188                          .ORG   STRUC_TOP - 2   
2188   90 21                  DW   CUR_ADR   
2190                          .ORG   CUR_ADR   
2190                          ;*Macro unroll:  STRUC_POP
2190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2190                STRUC_TOP:   .SET   STRUC_2   
2190                STRUC_2:   .SET   STRUC_3   
2190                STRUC_3:   .SET   STRUC_4   
2190                STRUC_4:   .SET   STRUC_5   
2190                STRUC_5:   .SET   STRUC_6   
2190                STRUC_6:   .SET   STRUC_7   
2190                STRUC_7:   .SET   STRUC_8   
2190                STRUC_8:   .SET   STRUC_9   
2190                STRUC_9:   .SET   STRUC_10   
2190                STRUC_10:   .SET   STRUC_11   
2190                STRUC_11:   .SET   STRUC_12   
2190                STRUC_12:   .SET   0   
2190                          ;*Macro unroll: INTERPRET
2190   CF                     RST   $08   
2191   D0 0B                  DW   interpret   
2193   08 0F                  DW   exit_forth   
2195                          ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
2195   2A 45 30               LD   HL,(lineBufStart)   
2198   22 4B 30               LD   (lineBufTop),HL   
219B   22 49 30               LD   (currkey),HL   
219E   21 A7 21               LD   HL,tst_textM_2346S28   
21A1   22 61 32               LD   (char_pointer),HL   
21A4                          ;*Macro unroll:  _skip
21A4   C3 A4 21               JP   $   
21A7                          ;*Macro unroll:  STRUC_PUSH $
21A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21A7                STRUC_12:   .SET   STRUC_11   
21A7                STRUC_11:   .SET   STRUC_10   
21A7                STRUC_10:   .SET   STRUC_9   
21A7                STRUC_9:   .SET   STRUC_8   
21A7                STRUC_8:   .SET   STRUC_7   
21A7                STRUC_7:   .SET   STRUC_6   
21A7                STRUC_6:   .SET   STRUC_5   
21A7                STRUC_5:   .SET   STRUC_4   
21A7                STRUC_4:   .SET   STRUC_3   
21A7                STRUC_3:   .SET   STRUC_2   
21A7                STRUC_2:   .SET   STRUC_TOP   
21A7                STRUC_TOP:   .SET   $   
21A7                TST_TEXTM_2346S28:      
21A7   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 2C 20 3B 0D 0A FF 0D 0A DB   ": const create does> , ;","\r\n",-1,"\r\n"   
21C4                          ;*Macro unroll:  _endskip
21C4                          ;*Macro unroll:  STRUC_FWD
21C4                CUR_ADR:   .SET   $   
21A5                          .ORG   STRUC_TOP - 2   
21A5   C4 21                  DW   CUR_ADR   
21C4                          .ORG   CUR_ADR   
21C4                          ;*Macro unroll:  STRUC_POP
21C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21C4                STRUC_TOP:   .SET   STRUC_2   
21C4                STRUC_2:   .SET   STRUC_3   
21C4                STRUC_3:   .SET   STRUC_4   
21C4                STRUC_4:   .SET   STRUC_5   
21C4                STRUC_5:   .SET   STRUC_6   
21C4                STRUC_6:   .SET   STRUC_7   
21C4                STRUC_7:   .SET   STRUC_8   
21C4                STRUC_8:   .SET   STRUC_9   
21C4                STRUC_9:   .SET   STRUC_10   
21C4                STRUC_10:   .SET   STRUC_11   
21C4                STRUC_11:   .SET   STRUC_12   
21C4                STRUC_12:   .SET   0   
21C4                          ;*Macro unroll: INTERPRET
21C4   CF                     RST   $08   
21C5   D0 0B                  DW   interpret   
21C7   08 0F                  DW   exit_forth   
21C9                          ;*Macro unroll: TEST_SET_TEXT "23 const x"
21C9   2A 45 30               LD   HL,(lineBufStart)   
21CC   22 4B 30               LD   (lineBufTop),HL   
21CF   22 49 30               LD   (currkey),HL   
21D2   21 DB 21               LD   HL,tst_textM_2348S30   
21D5   22 61 32               LD   (char_pointer),HL   
21D8                          ;*Macro unroll:  _skip
21D8   C3 D8 21               JP   $   
21DB                          ;*Macro unroll:  STRUC_PUSH $
21DB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21DB                STRUC_12:   .SET   STRUC_11   
21DB                STRUC_11:   .SET   STRUC_10   
21DB                STRUC_10:   .SET   STRUC_9   
21DB                STRUC_9:   .SET   STRUC_8   
21DB                STRUC_8:   .SET   STRUC_7   
21DB                STRUC_7:   .SET   STRUC_6   
21DB                STRUC_6:   .SET   STRUC_5   
21DB                STRUC_5:   .SET   STRUC_4   
21DB                STRUC_4:   .SET   STRUC_3   
21DB                STRUC_3:   .SET   STRUC_2   
21DB                STRUC_2:   .SET   STRUC_TOP   
21DB                STRUC_TOP:   .SET   $   
21DB                TST_TEXTM_2348S30:      
21DB   32 33 20 63 6F 6E 73 74 20 78 0D 0A FF 0D 0A DB   "23 const x","\r\n",-1,"\r\n"   
21EA                          ;*Macro unroll:  _endskip
21EA                          ;*Macro unroll:  STRUC_FWD
21EA                CUR_ADR:   .SET   $   
21D9                          .ORG   STRUC_TOP - 2   
21D9   EA 21                  DW   CUR_ADR   
21EA                          .ORG   CUR_ADR   
21EA                          ;*Macro unroll:  STRUC_POP
21EA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21EA                STRUC_TOP:   .SET   STRUC_2   
21EA                STRUC_2:   .SET   STRUC_3   
21EA                STRUC_3:   .SET   STRUC_4   
21EA                STRUC_4:   .SET   STRUC_5   
21EA                STRUC_5:   .SET   STRUC_6   
21EA                STRUC_6:   .SET   STRUC_7   
21EA                STRUC_7:   .SET   STRUC_8   
21EA                STRUC_8:   .SET   STRUC_9   
21EA                STRUC_9:   .SET   STRUC_10   
21EA                STRUC_10:   .SET   STRUC_11   
21EA                STRUC_11:   .SET   STRUC_12   
21EA                STRUC_12:   .SET   0   
21EA                          ;*Macro unroll: INTERPRET
21EA   CF                     RST   $08   
21EB   D0 0B                  DW   interpret   
21ED   08 0F                  DW   exit_forth   
21EF                          ;*Macro unroll: TEST_SET_TEXT "x ."
21EF   2A 45 30               LD   HL,(lineBufStart)   
21F2   22 4B 30               LD   (lineBufTop),HL   
21F5   22 49 30               LD   (currkey),HL   
21F8   21 01 22               LD   HL,tst_textM_2350S32   
21FB   22 61 32               LD   (char_pointer),HL   
21FE                          ;*Macro unroll:  _skip
21FE   C3 FE 21               JP   $   
2201                          ;*Macro unroll:  STRUC_PUSH $
2201                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2201                STRUC_12:   .SET   STRUC_11   
2201                STRUC_11:   .SET   STRUC_10   
2201                STRUC_10:   .SET   STRUC_9   
2201                STRUC_9:   .SET   STRUC_8   
2201                STRUC_8:   .SET   STRUC_7   
2201                STRUC_7:   .SET   STRUC_6   
2201                STRUC_6:   .SET   STRUC_5   
2201                STRUC_5:   .SET   STRUC_4   
2201                STRUC_4:   .SET   STRUC_3   
2201                STRUC_3:   .SET   STRUC_2   
2201                STRUC_2:   .SET   STRUC_TOP   
2201                STRUC_TOP:   .SET   $   
2201                TST_TEXTM_2350S32:      
2201   78 20 2E 0D 0A FF 0D 0A DB   "x .","\r\n",-1,"\r\n"   
2209                          ;*Macro unroll:  _endskip
2209                          ;*Macro unroll:  STRUC_FWD
2209                CUR_ADR:   .SET   $   
21FF                          .ORG   STRUC_TOP - 2   
21FF   09 22                  DW   CUR_ADR   
2209                          .ORG   CUR_ADR   
2209                          ;*Macro unroll:  STRUC_POP
2209                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2209                STRUC_TOP:   .SET   STRUC_2   
2209                STRUC_2:   .SET   STRUC_3   
2209                STRUC_3:   .SET   STRUC_4   
2209                STRUC_4:   .SET   STRUC_5   
2209                STRUC_5:   .SET   STRUC_6   
2209                STRUC_6:   .SET   STRUC_7   
2209                STRUC_7:   .SET   STRUC_8   
2209                STRUC_8:   .SET   STRUC_9   
2209                STRUC_9:   .SET   STRUC_10   
2209                STRUC_10:   .SET   STRUC_11   
2209                STRUC_11:   .SET   STRUC_12   
2209                STRUC_12:   .SET   0   
2209                          ;*Macro unroll: INTERPRET
2209   CF                     RST   $08   
220A   D0 0B                  DW   interpret   
220C   08 0F                  DW   exit_forth   
220E                          ;*Macro unroll: TEST_SET_TEXT "23 constant y"
220E   2A 45 30               LD   HL,(lineBufStart)   
2211   22 4B 30               LD   (lineBufTop),HL   
2214   22 49 30               LD   (currkey),HL   
2217   21 20 22               LD   HL,tst_textM_2352S35   
221A   22 61 32               LD   (char_pointer),HL   
221D                          ;*Macro unroll:  _skip
221D   C3 1D 22               JP   $   
2220                          ;*Macro unroll:  STRUC_PUSH $
2220                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2220                STRUC_12:   .SET   STRUC_11   
2220                STRUC_11:   .SET   STRUC_10   
2220                STRUC_10:   .SET   STRUC_9   
2220                STRUC_9:   .SET   STRUC_8   
2220                STRUC_8:   .SET   STRUC_7   
2220                STRUC_7:   .SET   STRUC_6   
2220                STRUC_6:   .SET   STRUC_5   
2220                STRUC_5:   .SET   STRUC_4   
2220                STRUC_4:   .SET   STRUC_3   
2220                STRUC_3:   .SET   STRUC_2   
2220                STRUC_2:   .SET   STRUC_TOP   
2220                STRUC_TOP:   .SET   $   
2220                TST_TEXTM_2352S35:      
2220   32 33 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "23 constant y","\r\n",-1,"\r\n"   
2232                          ;*Macro unroll:  _endskip
2232                          ;*Macro unroll:  STRUC_FWD
2232                CUR_ADR:   .SET   $   
221E                          .ORG   STRUC_TOP - 2   
221E   32 22                  DW   CUR_ADR   
2232                          .ORG   CUR_ADR   
2232                          ;*Macro unroll:  STRUC_POP
2232                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2232                STRUC_TOP:   .SET   STRUC_2   
2232                STRUC_2:   .SET   STRUC_3   
2232                STRUC_3:   .SET   STRUC_4   
2232                STRUC_4:   .SET   STRUC_5   
2232                STRUC_5:   .SET   STRUC_6   
2232                STRUC_6:   .SET   STRUC_7   
2232                STRUC_7:   .SET   STRUC_8   
2232                STRUC_8:   .SET   STRUC_9   
2232                STRUC_9:   .SET   STRUC_10   
2232                STRUC_10:   .SET   STRUC_11   
2232                STRUC_11:   .SET   STRUC_12   
2232                STRUC_12:   .SET   0   
2232                          ;*Macro unroll: INTERPRET
2232   CF                     RST   $08   
2233   D0 0B                  DW   interpret   
2235   08 0F                  DW   exit_forth   
2237                          ;*Macro unroll: TEST_SET_TEXT "y"
2237   2A 45 30               LD   HL,(lineBufStart)   
223A   22 4B 30               LD   (lineBufTop),HL   
223D   22 49 30               LD   (currkey),HL   
2240   21 49 22               LD   HL,tst_textM_2354S37   
2243   22 61 32               LD   (char_pointer),HL   
2246                          ;*Macro unroll:  _skip
2246   C3 46 22               JP   $   
2249                          ;*Macro unroll:  STRUC_PUSH $
2249                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2249                STRUC_12:   .SET   STRUC_11   
2249                STRUC_11:   .SET   STRUC_10   
2249                STRUC_10:   .SET   STRUC_9   
2249                STRUC_9:   .SET   STRUC_8   
2249                STRUC_8:   .SET   STRUC_7   
2249                STRUC_7:   .SET   STRUC_6   
2249                STRUC_6:   .SET   STRUC_5   
2249                STRUC_5:   .SET   STRUC_4   
2249                STRUC_4:   .SET   STRUC_3   
2249                STRUC_3:   .SET   STRUC_2   
2249                STRUC_2:   .SET   STRUC_TOP   
2249                STRUC_TOP:   .SET   $   
2249                TST_TEXTM_2354S37:      
2249   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
224F                          ;*Macro unroll:  _endskip
224F                          ;*Macro unroll:  STRUC_FWD
224F                CUR_ADR:   .SET   $   
2247                          .ORG   STRUC_TOP - 2   
2247   4F 22                  DW   CUR_ADR   
224F                          .ORG   CUR_ADR   
224F                          ;*Macro unroll:  STRUC_POP
224F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
224F                STRUC_TOP:   .SET   STRUC_2   
224F                STRUC_2:   .SET   STRUC_3   
224F                STRUC_3:   .SET   STRUC_4   
224F                STRUC_4:   .SET   STRUC_5   
224F                STRUC_5:   .SET   STRUC_6   
224F                STRUC_6:   .SET   STRUC_7   
224F                STRUC_7:   .SET   STRUC_8   
224F                STRUC_8:   .SET   STRUC_9   
224F                STRUC_9:   .SET   STRUC_10   
224F                STRUC_10:   .SET   STRUC_11   
224F                STRUC_11:   .SET   STRUC_12   
224F                STRUC_12:   .SET   0   
224F                          ;*Macro unroll: INTERPRET
224F   CF                     RST   $08   
2250   D0 0B                  DW   interpret   
2252   08 0F                  DW   exit_forth   
2254                          ;*Macro unroll: EXPECT 23, "expect 23"
2254   CD 1F 0A               CALL   printNum   
2257                          ;*Macro unroll:  loadWord H,L, B,C
2257   69                     LD   L,C   
2258   60                     LD   H,B   
2259   69                     LD   L,C   
225A                          ;*Macro unroll:  ppop0 B,C
225A   DD 2B                  DEC   IX   
225C   DD 46 00               LD   B,(IX+0)   
225F   DD 2B                  DEC   IX   
2261   DD 4E 00               LD   C,(IX+0)   
2264                          ;*Macro unroll:  CMP16 23
2264   11 17 00               LD   DE,23   
2267   B7                     OR   A   
2268   ED 52                  SBC   HL,DE   
226A                          ;*Macro unroll:  checkZeroWord H,L
226A   7D                     LD   A,L   
226B   B4                     OR   H   
226C   CA 85 22               JP   z,tf_doneM_2356S39   
226F   11 7B 10               LD   DE,FAILED   
2272   CD E3 11               CALL   printPStr   
2275   11 7F 22               LD   DE,te_failM_2356S39   
2278   CD E3 11               CALL   printPStr   
227B   76                     HALT      
227C                          ;*Macro unroll:  _skip
227C   C3 7C 22               JP   $   
227F                          ;*Macro unroll:  STRUC_PUSH $
227F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
227F                STRUC_12:   .SET   STRUC_11   
227F                STRUC_11:   .SET   STRUC_10   
227F                STRUC_10:   .SET   STRUC_9   
227F                STRUC_9:   .SET   STRUC_8   
227F                STRUC_8:   .SET   STRUC_7   
227F                STRUC_7:   .SET   STRUC_6   
227F                STRUC_6:   .SET   STRUC_5   
227F                STRUC_5:   .SET   STRUC_4   
227F                STRUC_4:   .SET   STRUC_3   
227F                STRUC_3:   .SET   STRUC_2   
227F                STRUC_2:   .SET   STRUC_TOP   
227F                STRUC_TOP:   .SET   $   
227F                TE_FAILM_2356S39:      
227F   05 32 33 20 32 33      .PSTR   "23 23"   
2285                          ;*Macro unroll:  _endskip
2285                          ;*Macro unroll:  STRUC_FWD
2285                CUR_ADR:   .SET   $   
227D                          .ORG   STRUC_TOP - 2   
227D   85 22                  DW   CUR_ADR   
2285                          .ORG   CUR_ADR   
2285                          ;*Macro unroll:  STRUC_POP
2285                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2285                STRUC_TOP:   .SET   STRUC_2   
2285                STRUC_2:   .SET   STRUC_3   
2285                STRUC_3:   .SET   STRUC_4   
2285                STRUC_4:   .SET   STRUC_5   
2285                STRUC_5:   .SET   STRUC_6   
2285                STRUC_6:   .SET   STRUC_7   
2285                STRUC_7:   .SET   STRUC_8   
2285                STRUC_8:   .SET   STRUC_9   
2285                STRUC_9:   .SET   STRUC_10   
2285                STRUC_10:   .SET   STRUC_11   
2285                STRUC_11:   .SET   STRUC_12   
2285                STRUC_12:   .SET   0   
2285                TF_DONEM_2356S39:      
2285                          ;*Macro unroll: ppushValue 1
2285                          ;*Macro unroll:  ppush0 B,C
2285   DD 71 00               LD   (IX+0),C   
2288   DD 23                  INC   IX   
228A   DD 70 00               LD   (IX+0),B   
228D   DD 23                  INC   IX   
228F   01 01 00               LD   BC,1   
2292                          ;*Macro unroll: TEST_SET_TEXT "dup"
2292   2A 45 30               LD   HL,(lineBufStart)   
2295   22 4B 30               LD   (lineBufTop),HL   
2298   22 49 30               LD   (currkey),HL   
229B   21 A4 22               LD   HL,tst_textM_2358S42   
229E   22 61 32               LD   (char_pointer),HL   
22A1                          ;*Macro unroll:  _skip
22A1   C3 A1 22               JP   $   
22A4                          ;*Macro unroll:  STRUC_PUSH $
22A4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22A4                STRUC_12:   .SET   STRUC_11   
22A4                STRUC_11:   .SET   STRUC_10   
22A4                STRUC_10:   .SET   STRUC_9   
22A4                STRUC_9:   .SET   STRUC_8   
22A4                STRUC_8:   .SET   STRUC_7   
22A4                STRUC_7:   .SET   STRUC_6   
22A4                STRUC_6:   .SET   STRUC_5   
22A4                STRUC_5:   .SET   STRUC_4   
22A4                STRUC_4:   .SET   STRUC_3   
22A4                STRUC_3:   .SET   STRUC_2   
22A4                STRUC_2:   .SET   STRUC_TOP   
22A4                STRUC_TOP:   .SET   $   
22A4                TST_TEXTM_2358S42:      
22A4   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
22AC                          ;*Macro unroll:  _endskip
22AC                          ;*Macro unroll:  STRUC_FWD
22AC                CUR_ADR:   .SET   $   
22A2                          .ORG   STRUC_TOP - 2   
22A2   AC 22                  DW   CUR_ADR   
22AC                          .ORG   CUR_ADR   
22AC                          ;*Macro unroll:  STRUC_POP
22AC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22AC                STRUC_TOP:   .SET   STRUC_2   
22AC                STRUC_2:   .SET   STRUC_3   
22AC                STRUC_3:   .SET   STRUC_4   
22AC                STRUC_4:   .SET   STRUC_5   
22AC                STRUC_5:   .SET   STRUC_6   
22AC                STRUC_6:   .SET   STRUC_7   
22AC                STRUC_7:   .SET   STRUC_8   
22AC                STRUC_8:   .SET   STRUC_9   
22AC                STRUC_9:   .SET   STRUC_10   
22AC                STRUC_10:   .SET   STRUC_11   
22AC                STRUC_11:   .SET   STRUC_12   
22AC                STRUC_12:   .SET   0   
22AC                          ;*Macro unroll: INTERPRET
22AC   CF                     RST   $08   
22AD   D0 0B                  DW   interpret   
22AF   08 0F                  DW   exit_forth   
22B1                          ;*Macro unroll: EXPECT 1, "1 interpret dup"
22B1   CD 1F 0A               CALL   printNum   
22B4                          ;*Macro unroll:  loadWord H,L, B,C
22B4   69                     LD   L,C   
22B5   60                     LD   H,B   
22B6   69                     LD   L,C   
22B7                          ;*Macro unroll:  ppop0 B,C
22B7   DD 2B                  DEC   IX   
22B9   DD 46 00               LD   B,(IX+0)   
22BC   DD 2B                  DEC   IX   
22BE   DD 4E 00               LD   C,(IX+0)   
22C1                          ;*Macro unroll:  CMP16 1
22C1   11 01 00               LD   DE,1   
22C4   B7                     OR   A   
22C5   ED 52                  SBC   HL,DE   
22C7                          ;*Macro unroll:  checkZeroWord H,L
22C7   7D                     LD   A,L   
22C8   B4                     OR   H   
22C9   CA EC 22               JP   z,tf_doneM_2360S44   
22CC   11 7B 10               LD   DE,FAILED   
22CF   CD E3 11               CALL   printPStr   
22D2   11 DC 22               LD   DE,te_failM_2360S44   
22D5   CD E3 11               CALL   printPStr   
22D8   76                     HALT      
22D9                          ;*Macro unroll:  _skip
22D9   C3 D9 22               JP   $   
22DC                          ;*Macro unroll:  STRUC_PUSH $
22DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22DC                STRUC_12:   .SET   STRUC_11   
22DC                STRUC_11:   .SET   STRUC_10   
22DC                STRUC_10:   .SET   STRUC_9   
22DC                STRUC_9:   .SET   STRUC_8   
22DC                STRUC_8:   .SET   STRUC_7   
22DC                STRUC_7:   .SET   STRUC_6   
22DC                STRUC_6:   .SET   STRUC_5   
22DC                STRUC_5:   .SET   STRUC_4   
22DC                STRUC_4:   .SET   STRUC_3   
22DC                STRUC_3:   .SET   STRUC_2   
22DC                STRUC_2:   .SET   STRUC_TOP   
22DC                STRUC_TOP:   .SET   $   
22DC                TE_FAILM_2360S44:      
22DC   0F 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 .PSTR   "1 interpret dup"   
22EC                          ;*Macro unroll:  _endskip
22EC                          ;*Macro unroll:  STRUC_FWD
22EC                CUR_ADR:   .SET   $   
22DA                          .ORG   STRUC_TOP - 2   
22DA   EC 22                  DW   CUR_ADR   
22EC                          .ORG   CUR_ADR   
22EC                          ;*Macro unroll:  STRUC_POP
22EC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22EC                STRUC_TOP:   .SET   STRUC_2   
22EC                STRUC_2:   .SET   STRUC_3   
22EC                STRUC_3:   .SET   STRUC_4   
22EC                STRUC_4:   .SET   STRUC_5   
22EC                STRUC_5:   .SET   STRUC_6   
22EC                STRUC_6:   .SET   STRUC_7   
22EC                STRUC_7:   .SET   STRUC_8   
22EC                STRUC_8:   .SET   STRUC_9   
22EC                STRUC_9:   .SET   STRUC_10   
22EC                STRUC_10:   .SET   STRUC_11   
22EC                STRUC_11:   .SET   STRUC_12   
22EC                STRUC_12:   .SET   0   
22EC                TF_DONEM_2360S44:      
22EC                          ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
22EC   CD 1F 0A               CALL   printNum   
22EF                          ;*Macro unroll:  loadWord H,L, B,C
22EF   69                     LD   L,C   
22F0   60                     LD   H,B   
22F1   69                     LD   L,C   
22F2                          ;*Macro unroll:  ppop0 B,C
22F2   DD 2B                  DEC   IX   
22F4   DD 46 00               LD   B,(IX+0)   
22F7   DD 2B                  DEC   IX   
22F9   DD 4E 00               LD   C,(IX+0)   
22FC                          ;*Macro unroll:  CMP16 1
22FC   11 01 00               LD   DE,1   
22FF   B7                     OR   A   
2300   ED 52                  SBC   HL,DE   
2302                          ;*Macro unroll:  checkZeroWord H,L
2302   7D                     LD   A,L   
2303   B4                     OR   H   
2304   CA 29 23               JP   z,tf_doneM_2361S45   
2307   11 7B 10               LD   DE,FAILED   
230A   CD E3 11               CALL   printPStr   
230D   11 17 23               LD   DE,te_failM_2361S45   
2310   CD E3 11               CALL   printPStr   
2313   76                     HALT      
2314                          ;*Macro unroll:  _skip
2314   C3 14 23               JP   $   
2317                          ;*Macro unroll:  STRUC_PUSH $
2317                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2317                STRUC_12:   .SET   STRUC_11   
2317                STRUC_11:   .SET   STRUC_10   
2317                STRUC_10:   .SET   STRUC_9   
2317                STRUC_9:   .SET   STRUC_8   
2317                STRUC_8:   .SET   STRUC_7   
2317                STRUC_7:   .SET   STRUC_6   
2317                STRUC_6:   .SET   STRUC_5   
2317                STRUC_5:   .SET   STRUC_4   
2317                STRUC_4:   .SET   STRUC_3   
2317                STRUC_3:   .SET   STRUC_2   
2317                STRUC_2:   .SET   STRUC_TOP   
2317                STRUC_TOP:   .SET   $   
2317                TE_FAILM_2361S45:      
2317   11 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 20 32 .PSTR   "1 interpret dup 2"   
2329                          ;*Macro unroll:  _endskip
2329                          ;*Macro unroll:  STRUC_FWD
2329                CUR_ADR:   .SET   $   
2315                          .ORG   STRUC_TOP - 2   
2315   29 23                  DW   CUR_ADR   
2329                          .ORG   CUR_ADR   
2329                          ;*Macro unroll:  STRUC_POP
2329                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2329                STRUC_TOP:   .SET   STRUC_2   
2329                STRUC_2:   .SET   STRUC_3   
2329                STRUC_3:   .SET   STRUC_4   
2329                STRUC_4:   .SET   STRUC_5   
2329                STRUC_5:   .SET   STRUC_6   
2329                STRUC_6:   .SET   STRUC_7   
2329                STRUC_7:   .SET   STRUC_8   
2329                STRUC_8:   .SET   STRUC_9   
2329                STRUC_9:   .SET   STRUC_10   
2329                STRUC_10:   .SET   STRUC_11   
2329                STRUC_11:   .SET   STRUC_12   
2329                STRUC_12:   .SET   0   
2329                TF_DONEM_2361S45:      
2329                          ;*Macro unroll: TEST_SET_TEXT "123"
2329   2A 45 30               LD   HL,(lineBufStart)   
232C   22 4B 30               LD   (lineBufTop),HL   
232F   22 49 30               LD   (currkey),HL   
2332   21 3B 23               LD   HL,tst_textM_2362S47   
2335   22 61 32               LD   (char_pointer),HL   
2338                          ;*Macro unroll:  _skip
2338   C3 38 23               JP   $   
233B                          ;*Macro unroll:  STRUC_PUSH $
233B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
233B                STRUC_12:   .SET   STRUC_11   
233B                STRUC_11:   .SET   STRUC_10   
233B                STRUC_10:   .SET   STRUC_9   
233B                STRUC_9:   .SET   STRUC_8   
233B                STRUC_8:   .SET   STRUC_7   
233B                STRUC_7:   .SET   STRUC_6   
233B                STRUC_6:   .SET   STRUC_5   
233B                STRUC_5:   .SET   STRUC_4   
233B                STRUC_4:   .SET   STRUC_3   
233B                STRUC_3:   .SET   STRUC_2   
233B                STRUC_2:   .SET   STRUC_TOP   
233B                STRUC_TOP:   .SET   $   
233B                TST_TEXTM_2362S47:      
233B   31 32 33 0D 0A FF 0D 0A DB   "123","\r\n",-1,"\r\n"   
2343                          ;*Macro unroll:  _endskip
2343                          ;*Macro unroll:  STRUC_FWD
2343                CUR_ADR:   .SET   $   
2339                          .ORG   STRUC_TOP - 2   
2339   43 23                  DW   CUR_ADR   
2343                          .ORG   CUR_ADR   
2343                          ;*Macro unroll:  STRUC_POP
2343                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2343                STRUC_TOP:   .SET   STRUC_2   
2343                STRUC_2:   .SET   STRUC_3   
2343                STRUC_3:   .SET   STRUC_4   
2343                STRUC_4:   .SET   STRUC_5   
2343                STRUC_5:   .SET   STRUC_6   
2343                STRUC_6:   .SET   STRUC_7   
2343                STRUC_7:   .SET   STRUC_8   
2343                STRUC_8:   .SET   STRUC_9   
2343                STRUC_9:   .SET   STRUC_10   
2343                STRUC_10:   .SET   STRUC_11   
2343                STRUC_11:   .SET   STRUC_12   
2343                STRUC_12:   .SET   0   
2343                          ;*Macro unroll: INTERPRET
2343   CF                     RST   $08   
2344   D0 0B                  DW   interpret   
2346   08 0F                  DW   exit_forth   
2348                          ;*Macro unroll: EXPECT 123, "interpret 123"
2348   CD 1F 0A               CALL   printNum   
234B                          ;*Macro unroll:  loadWord H,L, B,C
234B   69                     LD   L,C   
234C   60                     LD   H,B   
234D   69                     LD   L,C   
234E                          ;*Macro unroll:  ppop0 B,C
234E   DD 2B                  DEC   IX   
2350   DD 46 00               LD   B,(IX+0)   
2353   DD 2B                  DEC   IX   
2355   DD 4E 00               LD   C,(IX+0)   
2358                          ;*Macro unroll:  CMP16 123
2358   11 7B 00               LD   DE,123   
235B   B7                     OR   A   
235C   ED 52                  SBC   HL,DE   
235E                          ;*Macro unroll:  checkZeroWord H,L
235E   7D                     LD   A,L   
235F   B4                     OR   H   
2360   CA 81 23               JP   z,tf_doneM_2364S49   
2363   11 7B 10               LD   DE,FAILED   
2366   CD E3 11               CALL   printPStr   
2369   11 73 23               LD   DE,te_failM_2364S49   
236C   CD E3 11               CALL   printPStr   
236F   76                     HALT      
2370                          ;*Macro unroll:  _skip
2370   C3 70 23               JP   $   
2373                          ;*Macro unroll:  STRUC_PUSH $
2373                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2373                STRUC_12:   .SET   STRUC_11   
2373                STRUC_11:   .SET   STRUC_10   
2373                STRUC_10:   .SET   STRUC_9   
2373                STRUC_9:   .SET   STRUC_8   
2373                STRUC_8:   .SET   STRUC_7   
2373                STRUC_7:   .SET   STRUC_6   
2373                STRUC_6:   .SET   STRUC_5   
2373                STRUC_5:   .SET   STRUC_4   
2373                STRUC_4:   .SET   STRUC_3   
2373                STRUC_3:   .SET   STRUC_2   
2373                STRUC_2:   .SET   STRUC_TOP   
2373                STRUC_TOP:   .SET   $   
2373                TE_FAILM_2364S49:      
2373   0D 69 6E 74 65 72 70 72 65 74 20 31 32 33 .PSTR   "interpret 123"   
2381                          ;*Macro unroll:  _endskip
2381                          ;*Macro unroll:  STRUC_FWD
2381                CUR_ADR:   .SET   $   
2371                          .ORG   STRUC_TOP - 2   
2371   81 23                  DW   CUR_ADR   
2381                          .ORG   CUR_ADR   
2381                          ;*Macro unroll:  STRUC_POP
2381                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2381                STRUC_TOP:   .SET   STRUC_2   
2381                STRUC_2:   .SET   STRUC_3   
2381                STRUC_3:   .SET   STRUC_4   
2381                STRUC_4:   .SET   STRUC_5   
2381                STRUC_5:   .SET   STRUC_6   
2381                STRUC_6:   .SET   STRUC_7   
2381                STRUC_7:   .SET   STRUC_8   
2381                STRUC_8:   .SET   STRUC_9   
2381                STRUC_9:   .SET   STRUC_10   
2381                STRUC_10:   .SET   STRUC_11   
2381                STRUC_11:   .SET   STRUC_12   
2381                STRUC_12:   .SET   0   
2381                TF_DONEM_2364S49:      
2381                          ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
2381   2A 45 30               LD   HL,(lineBufStart)   
2384   22 4B 30               LD   (lineBufTop),HL   
2387   22 49 30               LD   (currkey),HL   
238A   21 93 23               LD   HL,tst_textM_2365S51   
238D   22 61 32               LD   (char_pointer),HL   
2390                          ;*Macro unroll:  _skip
2390   C3 90 23               JP   $   
2393                          ;*Macro unroll:  STRUC_PUSH $
2393                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2393                STRUC_12:   .SET   STRUC_11   
2393                STRUC_11:   .SET   STRUC_10   
2393                STRUC_10:   .SET   STRUC_9   
2393                STRUC_9:   .SET   STRUC_8   
2393                STRUC_8:   .SET   STRUC_7   
2393                STRUC_7:   .SET   STRUC_6   
2393                STRUC_6:   .SET   STRUC_5   
2393                STRUC_5:   .SET   STRUC_4   
2393                STRUC_4:   .SET   STRUC_3   
2393                STRUC_3:   .SET   STRUC_2   
2393                STRUC_2:   .SET   STRUC_TOP   
2393                STRUC_TOP:   .SET   $   
2393                TST_TEXTM_2365S51:      
2393   31 32 33 20 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 0D 0A FF 0D 0A DB   "123 constant x123","\r\n",-1,"\r\n"   
23A9                          ;*Macro unroll:  _endskip
23A9                          ;*Macro unroll:  STRUC_FWD
23A9                CUR_ADR:   .SET   $   
2391                          .ORG   STRUC_TOP - 2   
2391   A9 23                  DW   CUR_ADR   
23A9                          .ORG   CUR_ADR   
23A9                          ;*Macro unroll:  STRUC_POP
23A9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23A9                STRUC_TOP:   .SET   STRUC_2   
23A9                STRUC_2:   .SET   STRUC_3   
23A9                STRUC_3:   .SET   STRUC_4   
23A9                STRUC_4:   .SET   STRUC_5   
23A9                STRUC_5:   .SET   STRUC_6   
23A9                STRUC_6:   .SET   STRUC_7   
23A9                STRUC_7:   .SET   STRUC_8   
23A9                STRUC_8:   .SET   STRUC_9   
23A9                STRUC_9:   .SET   STRUC_10   
23A9                STRUC_10:   .SET   STRUC_11   
23A9                STRUC_11:   .SET   STRUC_12   
23A9                STRUC_12:   .SET   0   
23A9                          ;*Macro unroll: INTERPRET
23A9   CF                     RST   $08   
23AA   D0 0B                  DW   interpret   
23AC   08 0F                  DW   exit_forth   
23AE                          ;*Macro unroll: TEST_SET_TEXT "x123"
23AE   2A 45 30               LD   HL,(lineBufStart)   
23B1   22 4B 30               LD   (lineBufTop),HL   
23B4   22 49 30               LD   (currkey),HL   
23B7   21 C0 23               LD   HL,tst_textM_2367S53   
23BA   22 61 32               LD   (char_pointer),HL   
23BD                          ;*Macro unroll:  _skip
23BD   C3 BD 23               JP   $   
23C0                          ;*Macro unroll:  STRUC_PUSH $
23C0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23C0                STRUC_12:   .SET   STRUC_11   
23C0                STRUC_11:   .SET   STRUC_10   
23C0                STRUC_10:   .SET   STRUC_9   
23C0                STRUC_9:   .SET   STRUC_8   
23C0                STRUC_8:   .SET   STRUC_7   
23C0                STRUC_7:   .SET   STRUC_6   
23C0                STRUC_6:   .SET   STRUC_5   
23C0                STRUC_5:   .SET   STRUC_4   
23C0                STRUC_4:   .SET   STRUC_3   
23C0                STRUC_3:   .SET   STRUC_2   
23C0                STRUC_2:   .SET   STRUC_TOP   
23C0                STRUC_TOP:   .SET   $   
23C0                TST_TEXTM_2367S53:      
23C0   78 31 32 33 0D 0A FF 0D 0A DB   "x123","\r\n",-1,"\r\n"   
23C9                          ;*Macro unroll:  _endskip
23C9                          ;*Macro unroll:  STRUC_FWD
23C9                CUR_ADR:   .SET   $   
23BE                          .ORG   STRUC_TOP - 2   
23BE   C9 23                  DW   CUR_ADR   
23C9                          .ORG   CUR_ADR   
23C9                          ;*Macro unroll:  STRUC_POP
23C9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23C9                STRUC_TOP:   .SET   STRUC_2   
23C9                STRUC_2:   .SET   STRUC_3   
23C9                STRUC_3:   .SET   STRUC_4   
23C9                STRUC_4:   .SET   STRUC_5   
23C9                STRUC_5:   .SET   STRUC_6   
23C9                STRUC_6:   .SET   STRUC_7   
23C9                STRUC_7:   .SET   STRUC_8   
23C9                STRUC_8:   .SET   STRUC_9   
23C9                STRUC_9:   .SET   STRUC_10   
23C9                STRUC_10:   .SET   STRUC_11   
23C9                STRUC_11:   .SET   STRUC_12   
23C9                STRUC_12:   .SET   0   
23C9                          ;*Macro unroll: INTERPRET
23C9   CF                     RST   $08   
23CA   D0 0B                  DW   interpret   
23CC   08 0F                  DW   exit_forth   
23CE                          ;*Macro unroll: EXPECT 123, "constant x123 = 123"
23CE   CD 1F 0A               CALL   printNum   
23D1                          ;*Macro unroll:  loadWord H,L, B,C
23D1   69                     LD   L,C   
23D2   60                     LD   H,B   
23D3   69                     LD   L,C   
23D4                          ;*Macro unroll:  ppop0 B,C
23D4   DD 2B                  DEC   IX   
23D6   DD 46 00               LD   B,(IX+0)   
23D9   DD 2B                  DEC   IX   
23DB   DD 4E 00               LD   C,(IX+0)   
23DE                          ;*Macro unroll:  CMP16 123
23DE   11 7B 00               LD   DE,123   
23E1   B7                     OR   A   
23E2   ED 52                  SBC   HL,DE   
23E4                          ;*Macro unroll:  checkZeroWord H,L
23E4   7D                     LD   A,L   
23E5   B4                     OR   H   
23E6   CA 0D 24               JP   z,tf_doneM_2369S55   
23E9   11 7B 10               LD   DE,FAILED   
23EC   CD E3 11               CALL   printPStr   
23EF   11 F9 23               LD   DE,te_failM_2369S55   
23F2   CD E3 11               CALL   printPStr   
23F5   76                     HALT      
23F6                          ;*Macro unroll:  _skip
23F6   C3 F6 23               JP   $   
23F9                          ;*Macro unroll:  STRUC_PUSH $
23F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23F9                STRUC_12:   .SET   STRUC_11   
23F9                STRUC_11:   .SET   STRUC_10   
23F9                STRUC_10:   .SET   STRUC_9   
23F9                STRUC_9:   .SET   STRUC_8   
23F9                STRUC_8:   .SET   STRUC_7   
23F9                STRUC_7:   .SET   STRUC_6   
23F9                STRUC_6:   .SET   STRUC_5   
23F9                STRUC_5:   .SET   STRUC_4   
23F9                STRUC_4:   .SET   STRUC_3   
23F9                STRUC_3:   .SET   STRUC_2   
23F9                STRUC_2:   .SET   STRUC_TOP   
23F9                STRUC_TOP:   .SET   $   
23F9                TE_FAILM_2369S55:      
23F9   13 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 20 3D 20 31 32 33 .PSTR   "constant x123 = 123"   
240D                          ;*Macro unroll:  _endskip
240D                          ;*Macro unroll:  STRUC_FWD
240D                CUR_ADR:   .SET   $   
23F7                          .ORG   STRUC_TOP - 2   
23F7   0D 24                  DW   CUR_ADR   
240D                          .ORG   CUR_ADR   
240D                          ;*Macro unroll:  STRUC_POP
240D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
240D                STRUC_TOP:   .SET   STRUC_2   
240D                STRUC_2:   .SET   STRUC_3   
240D                STRUC_3:   .SET   STRUC_4   
240D                STRUC_4:   .SET   STRUC_5   
240D                STRUC_5:   .SET   STRUC_6   
240D                STRUC_6:   .SET   STRUC_7   
240D                STRUC_7:   .SET   STRUC_8   
240D                STRUC_8:   .SET   STRUC_9   
240D                STRUC_9:   .SET   STRUC_10   
240D                STRUC_10:   .SET   STRUC_11   
240D                STRUC_11:   .SET   STRUC_12   
240D                STRUC_12:   .SET   0   
240D                TF_DONEM_2369S55:      
240D                          ;*Macro unroll: TEST_SET_TEXT "variable v1"
240D   2A 45 30               LD   HL,(lineBufStart)   
2410   22 4B 30               LD   (lineBufTop),HL   
2413   22 49 30               LD   (currkey),HL   
2416   21 1F 24               LD   HL,tst_textM_2370S57   
2419   22 61 32               LD   (char_pointer),HL   
241C                          ;*Macro unroll:  _skip
241C   C3 1C 24               JP   $   
241F                          ;*Macro unroll:  STRUC_PUSH $
241F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
241F                STRUC_12:   .SET   STRUC_11   
241F                STRUC_11:   .SET   STRUC_10   
241F                STRUC_10:   .SET   STRUC_9   
241F                STRUC_9:   .SET   STRUC_8   
241F                STRUC_8:   .SET   STRUC_7   
241F                STRUC_7:   .SET   STRUC_6   
241F                STRUC_6:   .SET   STRUC_5   
241F                STRUC_5:   .SET   STRUC_4   
241F                STRUC_4:   .SET   STRUC_3   
241F                STRUC_3:   .SET   STRUC_2   
241F                STRUC_2:   .SET   STRUC_TOP   
241F                STRUC_TOP:   .SET   $   
241F                TST_TEXTM_2370S57:      
241F   76 61 72 69 61 62 6C 65 20 76 31 0D 0A FF 0D 0A DB   "variable v1","\r\n",-1,"\r\n"   
242F                          ;*Macro unroll:  _endskip
242F                          ;*Macro unroll:  STRUC_FWD
242F                CUR_ADR:   .SET   $   
241D                          .ORG   STRUC_TOP - 2   
241D   2F 24                  DW   CUR_ADR   
242F                          .ORG   CUR_ADR   
242F                          ;*Macro unroll:  STRUC_POP
242F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
242F                STRUC_TOP:   .SET   STRUC_2   
242F                STRUC_2:   .SET   STRUC_3   
242F                STRUC_3:   .SET   STRUC_4   
242F                STRUC_4:   .SET   STRUC_5   
242F                STRUC_5:   .SET   STRUC_6   
242F                STRUC_6:   .SET   STRUC_7   
242F                STRUC_7:   .SET   STRUC_8   
242F                STRUC_8:   .SET   STRUC_9   
242F                STRUC_9:   .SET   STRUC_10   
242F                STRUC_10:   .SET   STRUC_11   
242F                STRUC_11:   .SET   STRUC_12   
242F                STRUC_12:   .SET   0   
242F                          ;*Macro unroll: INTERPRET
242F   CF                     RST   $08   
2430   D0 0B                  DW   interpret   
2432   08 0F                  DW   exit_forth   
2434                          ;*Macro unroll: ppushValue 123
2434                          ;*Macro unroll:  ppush0 B,C
2434   DD 71 00               LD   (IX+0),C   
2437   DD 23                  INC   IX   
2439   DD 70 00               LD   (IX+0),B   
243C   DD 23                  INC   IX   
243E   01 7B 00               LD   BC,123   
2441                          ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
2441   2A 45 30               LD   HL,(lineBufStart)   
2444   22 4B 30               LD   (lineBufTop),HL   
2447   22 49 30               LD   (currkey),HL   
244A   21 53 24               LD   HL,tst_textM_2373S60   
244D   22 61 32               LD   (char_pointer),HL   
2450                          ;*Macro unroll:  _skip
2450   C3 50 24               JP   $   
2453                          ;*Macro unroll:  STRUC_PUSH $
2453                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2453                STRUC_12:   .SET   STRUC_11   
2453                STRUC_11:   .SET   STRUC_10   
2453                STRUC_10:   .SET   STRUC_9   
2453                STRUC_9:   .SET   STRUC_8   
2453                STRUC_8:   .SET   STRUC_7   
2453                STRUC_7:   .SET   STRUC_6   
2453                STRUC_6:   .SET   STRUC_5   
2453                STRUC_5:   .SET   STRUC_4   
2453                STRUC_4:   .SET   STRUC_3   
2453                STRUC_3:   .SET   STRUC_2   
2453                STRUC_2:   .SET   STRUC_TOP   
2453                STRUC_TOP:   .SET   $   
2453                TST_TEXTM_2373S60:      
2453   31 32 33 20 76 31 20 21 0D 0A FF 0D 0A DB   "123 v1 !","\r\n",-1,"\r\n"   
2460                          ;*Macro unroll:  _endskip
2460                          ;*Macro unroll:  STRUC_FWD
2460                CUR_ADR:   .SET   $   
2451                          .ORG   STRUC_TOP - 2   
2451   60 24                  DW   CUR_ADR   
2460                          .ORG   CUR_ADR   
2460                          ;*Macro unroll:  STRUC_POP
2460                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2460                STRUC_TOP:   .SET   STRUC_2   
2460                STRUC_2:   .SET   STRUC_3   
2460                STRUC_3:   .SET   STRUC_4   
2460                STRUC_4:   .SET   STRUC_5   
2460                STRUC_5:   .SET   STRUC_6   
2460                STRUC_6:   .SET   STRUC_7   
2460                STRUC_7:   .SET   STRUC_8   
2460                STRUC_8:   .SET   STRUC_9   
2460                STRUC_9:   .SET   STRUC_10   
2460                STRUC_10:   .SET   STRUC_11   
2460                STRUC_11:   .SET   STRUC_12   
2460                STRUC_12:   .SET   0   
2460                          ;*Macro unroll: INTERPRET
2460   CF                     RST   $08   
2461   D0 0B                  DW   interpret   
2463   08 0F                  DW   exit_forth   
2465                          ;*Macro unroll: TEST_SET_TEXT "v1 @"
2465   2A 45 30               LD   HL,(lineBufStart)   
2468   22 4B 30               LD   (lineBufTop),HL   
246B   22 49 30               LD   (currkey),HL   
246E   21 77 24               LD   HL,tst_textM_2375S62   
2471   22 61 32               LD   (char_pointer),HL   
2474                          ;*Macro unroll:  _skip
2474   C3 74 24               JP   $   
2477                          ;*Macro unroll:  STRUC_PUSH $
2477                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2477                STRUC_12:   .SET   STRUC_11   
2477                STRUC_11:   .SET   STRUC_10   
2477                STRUC_10:   .SET   STRUC_9   
2477                STRUC_9:   .SET   STRUC_8   
2477                STRUC_8:   .SET   STRUC_7   
2477                STRUC_7:   .SET   STRUC_6   
2477                STRUC_6:   .SET   STRUC_5   
2477                STRUC_5:   .SET   STRUC_4   
2477                STRUC_4:   .SET   STRUC_3   
2477                STRUC_3:   .SET   STRUC_2   
2477                STRUC_2:   .SET   STRUC_TOP   
2477                STRUC_TOP:   .SET   $   
2477                TST_TEXTM_2375S62:      
2477   76 31 20 40 0D 0A FF 0D 0A DB   "v1 @","\r\n",-1,"\r\n"   
2480                          ;*Macro unroll:  _endskip
2480                          ;*Macro unroll:  STRUC_FWD
2480                CUR_ADR:   .SET   $   
2475                          .ORG   STRUC_TOP - 2   
2475   80 24                  DW   CUR_ADR   
2480                          .ORG   CUR_ADR   
2480                          ;*Macro unroll:  STRUC_POP
2480                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2480                STRUC_TOP:   .SET   STRUC_2   
2480                STRUC_2:   .SET   STRUC_3   
2480                STRUC_3:   .SET   STRUC_4   
2480                STRUC_4:   .SET   STRUC_5   
2480                STRUC_5:   .SET   STRUC_6   
2480                STRUC_6:   .SET   STRUC_7   
2480                STRUC_7:   .SET   STRUC_8   
2480                STRUC_8:   .SET   STRUC_9   
2480                STRUC_9:   .SET   STRUC_10   
2480                STRUC_10:   .SET   STRUC_11   
2480                STRUC_11:   .SET   STRUC_12   
2480                STRUC_12:   .SET   0   
2480                          ;*Macro unroll: INTERPRET
2480   CF                     RST   $08   
2481   D0 0B                  DW   interpret   
2483   08 0F                  DW   exit_forth   
2485                          ;*Macro unroll: EXPECT 123, "variable v1 = 123"
2485   CD 1F 0A               CALL   printNum   
2488                          ;*Macro unroll:  loadWord H,L, B,C
2488   69                     LD   L,C   
2489   60                     LD   H,B   
248A   69                     LD   L,C   
248B                          ;*Macro unroll:  ppop0 B,C
248B   DD 2B                  DEC   IX   
248D   DD 46 00               LD   B,(IX+0)   
2490   DD 2B                  DEC   IX   
2492   DD 4E 00               LD   C,(IX+0)   
2495                          ;*Macro unroll:  CMP16 123
2495   11 7B 00               LD   DE,123   
2498   B7                     OR   A   
2499   ED 52                  SBC   HL,DE   
249B                          ;*Macro unroll:  checkZeroWord H,L
249B   7D                     LD   A,L   
249C   B4                     OR   H   
249D   CA C2 24               JP   z,tf_doneM_2377S64   
24A0   11 7B 10               LD   DE,FAILED   
24A3   CD E3 11               CALL   printPStr   
24A6   11 B0 24               LD   DE,te_failM_2377S64   
24A9   CD E3 11               CALL   printPStr   
24AC   76                     HALT      
24AD                          ;*Macro unroll:  _skip
24AD   C3 AD 24               JP   $   
24B0                          ;*Macro unroll:  STRUC_PUSH $
24B0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24B0                STRUC_12:   .SET   STRUC_11   
24B0                STRUC_11:   .SET   STRUC_10   
24B0                STRUC_10:   .SET   STRUC_9   
24B0                STRUC_9:   .SET   STRUC_8   
24B0                STRUC_8:   .SET   STRUC_7   
24B0                STRUC_7:   .SET   STRUC_6   
24B0                STRUC_6:   .SET   STRUC_5   
24B0                STRUC_5:   .SET   STRUC_4   
24B0                STRUC_4:   .SET   STRUC_3   
24B0                STRUC_3:   .SET   STRUC_2   
24B0                STRUC_2:   .SET   STRUC_TOP   
24B0                STRUC_TOP:   .SET   $   
24B0                TE_FAILM_2377S64:      
24B0   11 76 61 72 69 61 62 6C 65 20 76 31 20 3D 20 31 32 33 .PSTR   "variable v1 = 123"   
24C2                          ;*Macro unroll:  _endskip
24C2                          ;*Macro unroll:  STRUC_FWD
24C2                CUR_ADR:   .SET   $   
24AE                          .ORG   STRUC_TOP - 2   
24AE   C2 24                  DW   CUR_ADR   
24C2                          .ORG   CUR_ADR   
24C2                          ;*Macro unroll:  STRUC_POP
24C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24C2                STRUC_TOP:   .SET   STRUC_2   
24C2                STRUC_2:   .SET   STRUC_3   
24C2                STRUC_3:   .SET   STRUC_4   
24C2                STRUC_4:   .SET   STRUC_5   
24C2                STRUC_5:   .SET   STRUC_6   
24C2                STRUC_6:   .SET   STRUC_7   
24C2                STRUC_7:   .SET   STRUC_8   
24C2                STRUC_8:   .SET   STRUC_9   
24C2                STRUC_9:   .SET   STRUC_10   
24C2                STRUC_10:   .SET   STRUC_11   
24C2                STRUC_11:   .SET   STRUC_12   
24C2                STRUC_12:   .SET   0   
24C2                TF_DONEM_2377S64:      
24C2                          ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
24C2   2A 45 30               LD   HL,(lineBufStart)   
24C5   22 4B 30               LD   (lineBufTop),HL   
24C8   22 49 30               LD   (currkey),HL   
24CB   21 D4 24               LD   HL,tst_textM_2378S66   
24CE   22 61 32               LD   (char_pointer),HL   
24D1                          ;*Macro unroll:  _skip
24D1   C3 D1 24               JP   $   
24D4                          ;*Macro unroll:  STRUC_PUSH $
24D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24D4                STRUC_12:   .SET   STRUC_11   
24D4                STRUC_11:   .SET   STRUC_10   
24D4                STRUC_10:   .SET   STRUC_9   
24D4                STRUC_9:   .SET   STRUC_8   
24D4                STRUC_8:   .SET   STRUC_7   
24D4                STRUC_7:   .SET   STRUC_6   
24D4                STRUC_6:   .SET   STRUC_5   
24D4                STRUC_5:   .SET   STRUC_4   
24D4                STRUC_4:   .SET   STRUC_3   
24D4                STRUC_3:   .SET   STRUC_2   
24D4                STRUC_2:   .SET   STRUC_TOP   
24D4                STRUC_TOP:   .SET   $   
24D4                TST_TEXTM_2378S66:      
24D4   3A 20 64 62 6C 20 64 75 70 20 2B 20 3B 0D 0A FF 0D 0A DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
24E6                          ;*Macro unroll:  _endskip
24E6                          ;*Macro unroll:  STRUC_FWD
24E6                CUR_ADR:   .SET   $   
24D2                          .ORG   STRUC_TOP - 2   
24D2   E6 24                  DW   CUR_ADR   
24E6                          .ORG   CUR_ADR   
24E6                          ;*Macro unroll:  STRUC_POP
24E6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24E6                STRUC_TOP:   .SET   STRUC_2   
24E6                STRUC_2:   .SET   STRUC_3   
24E6                STRUC_3:   .SET   STRUC_4   
24E6                STRUC_4:   .SET   STRUC_5   
24E6                STRUC_5:   .SET   STRUC_6   
24E6                STRUC_6:   .SET   STRUC_7   
24E6                STRUC_7:   .SET   STRUC_8   
24E6                STRUC_8:   .SET   STRUC_9   
24E6                STRUC_9:   .SET   STRUC_10   
24E6                STRUC_10:   .SET   STRUC_11   
24E6                STRUC_11:   .SET   STRUC_12   
24E6                STRUC_12:   .SET   0   
24E6                          ;*Macro unroll: INTERPRET
24E6   CF                     RST   $08   
24E7   D0 0B                  DW   interpret   
24E9   08 0F                  DW   exit_forth   
24EB                          ;*Macro unroll: ppushValue 2
24EB                          ;*Macro unroll:  ppush0 B,C
24EB   DD 71 00               LD   (IX+0),C   
24EE   DD 23                  INC   IX   
24F0   DD 70 00               LD   (IX+0),B   
24F3   DD 23                  INC   IX   
24F5   01 02 00               LD   BC,2   
24F8                          ;*Macro unroll: TEST_SET_TEXT "dbl"
24F8   2A 45 30               LD   HL,(lineBufStart)   
24FB   22 4B 30               LD   (lineBufTop),HL   
24FE   22 49 30               LD   (currkey),HL   
2501   21 0A 25               LD   HL,tst_textM_2381S69   
2504   22 61 32               LD   (char_pointer),HL   
2507                          ;*Macro unroll:  _skip
2507   C3 07 25               JP   $   
250A                          ;*Macro unroll:  STRUC_PUSH $
250A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
250A                STRUC_12:   .SET   STRUC_11   
250A                STRUC_11:   .SET   STRUC_10   
250A                STRUC_10:   .SET   STRUC_9   
250A                STRUC_9:   .SET   STRUC_8   
250A                STRUC_8:   .SET   STRUC_7   
250A                STRUC_7:   .SET   STRUC_6   
250A                STRUC_6:   .SET   STRUC_5   
250A                STRUC_5:   .SET   STRUC_4   
250A                STRUC_4:   .SET   STRUC_3   
250A                STRUC_3:   .SET   STRUC_2   
250A                STRUC_2:   .SET   STRUC_TOP   
250A                STRUC_TOP:   .SET   $   
250A                TST_TEXTM_2381S69:      
250A   64 62 6C 0D 0A FF 0D 0A DB   "dbl","\r\n",-1,"\r\n"   
2512                          ;*Macro unroll:  _endskip
2512                          ;*Macro unroll:  STRUC_FWD
2512                CUR_ADR:   .SET   $   
2508                          .ORG   STRUC_TOP - 2   
2508   12 25                  DW   CUR_ADR   
2512                          .ORG   CUR_ADR   
2512                          ;*Macro unroll:  STRUC_POP
2512                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2512                STRUC_TOP:   .SET   STRUC_2   
2512                STRUC_2:   .SET   STRUC_3   
2512                STRUC_3:   .SET   STRUC_4   
2512                STRUC_4:   .SET   STRUC_5   
2512                STRUC_5:   .SET   STRUC_6   
2512                STRUC_6:   .SET   STRUC_7   
2512                STRUC_7:   .SET   STRUC_8   
2512                STRUC_8:   .SET   STRUC_9   
2512                STRUC_9:   .SET   STRUC_10   
2512                STRUC_10:   .SET   STRUC_11   
2512                STRUC_11:   .SET   STRUC_12   
2512                STRUC_12:   .SET   0   
2512                          ;*Macro unroll: INTERPRET
2512   CF                     RST   $08   
2513   D0 0B                  DW   interpret   
2515   08 0F                  DW   exit_forth   
2517                          ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
2517   CD 1F 0A               CALL   printNum   
251A                          ;*Macro unroll:  loadWord H,L, B,C
251A   69                     LD   L,C   
251B   60                     LD   H,B   
251C   69                     LD   L,C   
251D                          ;*Macro unroll:  ppop0 B,C
251D   DD 2B                  DEC   IX   
251F   DD 46 00               LD   B,(IX+0)   
2522   DD 2B                  DEC   IX   
2524   DD 4E 00               LD   C,(IX+0)   
2527                          ;*Macro unroll:  CMP16 4
2527   11 04 00               LD   DE,4   
252A   B7                     OR   A   
252B   ED 52                  SBC   HL,DE   
252D                          ;*Macro unroll:  checkZeroWord H,L
252D   7D                     LD   A,L   
252E   B4                     OR   H   
252F   CA 52 25               JP   z,tf_doneM_2383S71   
2532   11 7B 10               LD   DE,FAILED   
2535   CD E3 11               CALL   printPStr   
2538   11 42 25               LD   DE,te_failM_2383S71   
253B   CD E3 11               CALL   printPStr   
253E   76                     HALT      
253F                          ;*Macro unroll:  _skip
253F   C3 3F 25               JP   $   
2542                          ;*Macro unroll:  STRUC_PUSH $
2542                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2542                STRUC_12:   .SET   STRUC_11   
2542                STRUC_11:   .SET   STRUC_10   
2542                STRUC_10:   .SET   STRUC_9   
2542                STRUC_9:   .SET   STRUC_8   
2542                STRUC_8:   .SET   STRUC_7   
2542                STRUC_7:   .SET   STRUC_6   
2542                STRUC_6:   .SET   STRUC_5   
2542                STRUC_5:   .SET   STRUC_4   
2542                STRUC_4:   .SET   STRUC_3   
2542                STRUC_3:   .SET   STRUC_2   
2542                STRUC_2:   .SET   STRUC_TOP   
2542                STRUC_TOP:   .SET   $   
2542                TE_FAILM_2383S71:      
2542   0F 63 6F 6C 6F 6E 20 64 62 6C 20 32 20 3D 20 34 .PSTR   "colon dbl 2 = 4"   
2552                          ;*Macro unroll:  _endskip
2552                          ;*Macro unroll:  STRUC_FWD
2552                CUR_ADR:   .SET   $   
2540                          .ORG   STRUC_TOP - 2   
2540   52 25                  DW   CUR_ADR   
2552                          .ORG   CUR_ADR   
2552                          ;*Macro unroll:  STRUC_POP
2552                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2552                STRUC_TOP:   .SET   STRUC_2   
2552                STRUC_2:   .SET   STRUC_3   
2552                STRUC_3:   .SET   STRUC_4   
2552                STRUC_4:   .SET   STRUC_5   
2552                STRUC_5:   .SET   STRUC_6   
2552                STRUC_6:   .SET   STRUC_7   
2552                STRUC_7:   .SET   STRUC_8   
2552                STRUC_8:   .SET   STRUC_9   
2552                STRUC_9:   .SET   STRUC_10   
2552                STRUC_10:   .SET   STRUC_11   
2552                STRUC_11:   .SET   STRUC_12   
2552                STRUC_12:   .SET   0   
2552                TF_DONEM_2383S71:      
2552                          ;*Macro unroll: ppushValue 200
2552                          ;*Macro unroll:  ppush0 B,C
2552   DD 71 00               LD   (IX+0),C   
2555   DD 23                  INC   IX   
2557   DD 70 00               LD   (IX+0),B   
255A   DD 23                  INC   IX   
255C   01 C8 00               LD   BC,200   
255F                          ;*Macro unroll: ppushValue 1
255F                          ;*Macro unroll:  ppush0 B,C
255F   DD 71 00               LD   (IX+0),C   
2562   DD 23                  INC   IX   
2564   DD 70 00               LD   (IX+0),B   
2567   DD 23                  INC   IX   
2569   01 01 00               LD   BC,1   
256C                          ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
256C   2A 45 30               LD   HL,(lineBufStart)   
256F   22 4B 30               LD   (lineBufTop),HL   
2572   22 49 30               LD   (currkey),HL   
2575   21 7E 25               LD   HL,tst_textM_2386S75   
2578   22 61 32               LD   (char_pointer),HL   
257B                          ;*Macro unroll:  _skip
257B   C3 7B 25               JP   $   
257E                          ;*Macro unroll:  STRUC_PUSH $
257E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
257E                STRUC_12:   .SET   STRUC_11   
257E                STRUC_11:   .SET   STRUC_10   
257E                STRUC_10:   .SET   STRUC_9   
257E                STRUC_9:   .SET   STRUC_8   
257E                STRUC_8:   .SET   STRUC_7   
257E                STRUC_7:   .SET   STRUC_6   
257E                STRUC_6:   .SET   STRUC_5   
257E                STRUC_5:   .SET   STRUC_4   
257E                STRUC_4:   .SET   STRUC_3   
257E                STRUC_3:   .SET   STRUC_2   
257E                STRUC_2:   .SET   STRUC_TOP   
257E                STRUC_TOP:   .SET   $   
257E                TST_TEXTM_2386S75:      
257E   3A 20 74 65 73 74 69 66 32 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
259B                          ;*Macro unroll:  _endskip
259B                          ;*Macro unroll:  STRUC_FWD
259B                CUR_ADR:   .SET   $   
257C                          .ORG   STRUC_TOP - 2   
257C   9B 25                  DW   CUR_ADR   
259B                          .ORG   CUR_ADR   
259B                          ;*Macro unroll:  STRUC_POP
259B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
259B                STRUC_TOP:   .SET   STRUC_2   
259B                STRUC_2:   .SET   STRUC_3   
259B                STRUC_3:   .SET   STRUC_4   
259B                STRUC_4:   .SET   STRUC_5   
259B                STRUC_5:   .SET   STRUC_6   
259B                STRUC_6:   .SET   STRUC_7   
259B                STRUC_7:   .SET   STRUC_8   
259B                STRUC_8:   .SET   STRUC_9   
259B                STRUC_9:   .SET   STRUC_10   
259B                STRUC_10:   .SET   STRUC_11   
259B                STRUC_11:   .SET   STRUC_12   
259B                STRUC_12:   .SET   0   
259B                          ;*Macro unroll: INTERPRET
259B   CF                     RST   $08   
259C   D0 0B                  DW   interpret   
259E   08 0F                  DW   exit_forth   
25A0                          ;*Macro unroll: TEST_SET_TEXT "testif2"
25A0   2A 45 30               LD   HL,(lineBufStart)   
25A3   22 4B 30               LD   (lineBufTop),HL   
25A6   22 49 30               LD   (currkey),HL   
25A9   21 B2 25               LD   HL,tst_textM_2388S78   
25AC   22 61 32               LD   (char_pointer),HL   
25AF                          ;*Macro unroll:  _skip
25AF   C3 AF 25               JP   $   
25B2                          ;*Macro unroll:  STRUC_PUSH $
25B2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25B2                STRUC_12:   .SET   STRUC_11   
25B2                STRUC_11:   .SET   STRUC_10   
25B2                STRUC_10:   .SET   STRUC_9   
25B2                STRUC_9:   .SET   STRUC_8   
25B2                STRUC_8:   .SET   STRUC_7   
25B2                STRUC_7:   .SET   STRUC_6   
25B2                STRUC_6:   .SET   STRUC_5   
25B2                STRUC_5:   .SET   STRUC_4   
25B2                STRUC_4:   .SET   STRUC_3   
25B2                STRUC_3:   .SET   STRUC_2   
25B2                STRUC_2:   .SET   STRUC_TOP   
25B2                STRUC_TOP:   .SET   $   
25B2                TST_TEXTM_2388S78:      
25B2   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
25BE                          ;*Macro unroll:  _endskip
25BE                          ;*Macro unroll:  STRUC_FWD
25BE                CUR_ADR:   .SET   $   
25B0                          .ORG   STRUC_TOP - 2   
25B0   BE 25                  DW   CUR_ADR   
25BE                          .ORG   CUR_ADR   
25BE                          ;*Macro unroll:  STRUC_POP
25BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
25BE                STRUC_TOP:   .SET   STRUC_2   
25BE                STRUC_2:   .SET   STRUC_3   
25BE                STRUC_3:   .SET   STRUC_4   
25BE                STRUC_4:   .SET   STRUC_5   
25BE                STRUC_5:   .SET   STRUC_6   
25BE                STRUC_6:   .SET   STRUC_7   
25BE                STRUC_7:   .SET   STRUC_8   
25BE                STRUC_8:   .SET   STRUC_9   
25BE                STRUC_9:   .SET   STRUC_10   
25BE                STRUC_10:   .SET   STRUC_11   
25BE                STRUC_11:   .SET   STRUC_12   
25BE                STRUC_12:   .SET   0   
25BE                          ;*Macro unroll: INTERPRET
25BE   CF                     RST   $08   
25BF   D0 0B                  DW   interpret   
25C1   08 0F                  DW   exit_forth   
25C3                          ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
25C3   CD 1F 0A               CALL   printNum   
25C6                          ;*Macro unroll:  loadWord H,L, B,C
25C6   69                     LD   L,C   
25C7   60                     LD   H,B   
25C8   69                     LD   L,C   
25C9                          ;*Macro unroll:  ppop0 B,C
25C9   DD 2B                  DEC   IX   
25CB   DD 46 00               LD   B,(IX+0)   
25CE   DD 2B                  DEC   IX   
25D0   DD 4E 00               LD   C,(IX+0)   
25D3                          ;*Macro unroll:  CMP16 100
25D3   11 64 00               LD   DE,100   
25D6   B7                     OR   A   
25D7   ED 52                  SBC   HL,DE   
25D9                          ;*Macro unroll:  checkZeroWord H,L
25D9   7D                     LD   A,L   
25DA   B4                     OR   H   
25DB   CA 05 26               JP   z,tf_doneM_2390S80   
25DE   11 7B 10               LD   DE,FAILED   
25E1   CD E3 11               CALL   printPStr   
25E4   11 EE 25               LD   DE,te_failM_2390S80   
25E7   CD E3 11               CALL   printPStr   
25EA   76                     HALT      
25EB                          ;*Macro unroll:  _skip
25EB   C3 EB 25               JP   $   
25EE                          ;*Macro unroll:  STRUC_PUSH $
25EE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25EE                STRUC_12:   .SET   STRUC_11   
25EE                STRUC_11:   .SET   STRUC_10   
25EE                STRUC_10:   .SET   STRUC_9   
25EE                STRUC_9:   .SET   STRUC_8   
25EE                STRUC_8:   .SET   STRUC_7   
25EE                STRUC_7:   .SET   STRUC_6   
25EE                STRUC_6:   .SET   STRUC_5   
25EE                STRUC_5:   .SET   STRUC_4   
25EE                STRUC_4:   .SET   STRUC_3   
25EE                STRUC_3:   .SET   STRUC_2   
25EE                STRUC_2:   .SET   STRUC_TOP   
25EE                STRUC_TOP:   .SET   $   
25EE                TE_FAILM_2390S80:      
25EE   16 31 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 31 30 30 .PSTR   "1 if 100 endif --> 100"   
2605                          ;*Macro unroll:  _endskip
2605                          ;*Macro unroll:  STRUC_FWD
2605                CUR_ADR:   .SET   $   
25EC                          .ORG   STRUC_TOP - 2   
25EC   05 26                  DW   CUR_ADR   
2605                          .ORG   CUR_ADR   
2605                          ;*Macro unroll:  STRUC_POP
2605                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2605                STRUC_TOP:   .SET   STRUC_2   
2605                STRUC_2:   .SET   STRUC_3   
2605                STRUC_3:   .SET   STRUC_4   
2605                STRUC_4:   .SET   STRUC_5   
2605                STRUC_5:   .SET   STRUC_6   
2605                STRUC_6:   .SET   STRUC_7   
2605                STRUC_7:   .SET   STRUC_8   
2605                STRUC_8:   .SET   STRUC_9   
2605                STRUC_9:   .SET   STRUC_10   
2605                STRUC_10:   .SET   STRUC_11   
2605                STRUC_11:   .SET   STRUC_12   
2605                STRUC_12:   .SET   0   
2605                TF_DONEM_2390S80:      
2605                          ;*Macro unroll: ppushValue 0
2605                          ;*Macro unroll:  ppush0 B,C
2605   DD 71 00               LD   (IX+0),C   
2608   DD 23                  INC   IX   
260A   DD 70 00               LD   (IX+0),B   
260D   DD 23                  INC   IX   
260F   01 00 00               LD   BC,0   
2612                          ;*Macro unroll: TEST_SET_TEXT "testif2"
2612   2A 45 30               LD   HL,(lineBufStart)   
2615   22 4B 30               LD   (lineBufTop),HL   
2618   22 49 30               LD   (currkey),HL   
261B   21 24 26               LD   HL,tst_textM_2392S83   
261E   22 61 32               LD   (char_pointer),HL   
2621                          ;*Macro unroll:  _skip
2621   C3 21 26               JP   $   
2624                          ;*Macro unroll:  STRUC_PUSH $
2624                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2624                STRUC_12:   .SET   STRUC_11   
2624                STRUC_11:   .SET   STRUC_10   
2624                STRUC_10:   .SET   STRUC_9   
2624                STRUC_9:   .SET   STRUC_8   
2624                STRUC_8:   .SET   STRUC_7   
2624                STRUC_7:   .SET   STRUC_6   
2624                STRUC_6:   .SET   STRUC_5   
2624                STRUC_5:   .SET   STRUC_4   
2624                STRUC_4:   .SET   STRUC_3   
2624                STRUC_3:   .SET   STRUC_2   
2624                STRUC_2:   .SET   STRUC_TOP   
2624                STRUC_TOP:   .SET   $   
2624                TST_TEXTM_2392S83:      
2624   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
2630                          ;*Macro unroll:  _endskip
2630                          ;*Macro unroll:  STRUC_FWD
2630                CUR_ADR:   .SET   $   
2622                          .ORG   STRUC_TOP - 2   
2622   30 26                  DW   CUR_ADR   
2630                          .ORG   CUR_ADR   
2630                          ;*Macro unroll:  STRUC_POP
2630                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2630                STRUC_TOP:   .SET   STRUC_2   
2630                STRUC_2:   .SET   STRUC_3   
2630                STRUC_3:   .SET   STRUC_4   
2630                STRUC_4:   .SET   STRUC_5   
2630                STRUC_5:   .SET   STRUC_6   
2630                STRUC_6:   .SET   STRUC_7   
2630                STRUC_7:   .SET   STRUC_8   
2630                STRUC_8:   .SET   STRUC_9   
2630                STRUC_9:   .SET   STRUC_10   
2630                STRUC_10:   .SET   STRUC_11   
2630                STRUC_11:   .SET   STRUC_12   
2630                STRUC_12:   .SET   0   
2630                          ;*Macro unroll: INTERPRET
2630   CF                     RST   $08   
2631   D0 0B                  DW   interpret   
2633   08 0F                  DW   exit_forth   
2635                          ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
2635   CD 1F 0A               CALL   printNum   
2638                          ;*Macro unroll:  loadWord H,L, B,C
2638   69                     LD   L,C   
2639   60                     LD   H,B   
263A   69                     LD   L,C   
263B                          ;*Macro unroll:  ppop0 B,C
263B   DD 2B                  DEC   IX   
263D   DD 46 00               LD   B,(IX+0)   
2640   DD 2B                  DEC   IX   
2642   DD 4E 00               LD   C,(IX+0)   
2645                          ;*Macro unroll:  CMP16 200
2645   11 C8 00               LD   DE,200   
2648   B7                     OR   A   
2649   ED 52                  SBC   HL,DE   
264B                          ;*Macro unroll:  checkZeroWord H,L
264B   7D                     LD   A,L   
264C   B4                     OR   H   
264D   CA 77 26               JP   z,tf_doneM_2394S85   
2650   11 7B 10               LD   DE,FAILED   
2653   CD E3 11               CALL   printPStr   
2656   11 60 26               LD   DE,te_failM_2394S85   
2659   CD E3 11               CALL   printPStr   
265C   76                     HALT      
265D                          ;*Macro unroll:  _skip
265D   C3 5D 26               JP   $   
2660                          ;*Macro unroll:  STRUC_PUSH $
2660                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2660                STRUC_12:   .SET   STRUC_11   
2660                STRUC_11:   .SET   STRUC_10   
2660                STRUC_10:   .SET   STRUC_9   
2660                STRUC_9:   .SET   STRUC_8   
2660                STRUC_8:   .SET   STRUC_7   
2660                STRUC_7:   .SET   STRUC_6   
2660                STRUC_6:   .SET   STRUC_5   
2660                STRUC_5:   .SET   STRUC_4   
2660                STRUC_4:   .SET   STRUC_3   
2660                STRUC_3:   .SET   STRUC_2   
2660                STRUC_2:   .SET   STRUC_TOP   
2660                STRUC_TOP:   .SET   $   
2660                TE_FAILM_2394S85:      
2660   16 30 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 32 30 30 .PSTR   "0 if 100 endif --> 200"   
2677                          ;*Macro unroll:  _endskip
2677                          ;*Macro unroll:  STRUC_FWD
2677                CUR_ADR:   .SET   $   
265E                          .ORG   STRUC_TOP - 2   
265E   77 26                  DW   CUR_ADR   
2677                          .ORG   CUR_ADR   
2677                          ;*Macro unroll:  STRUC_POP
2677                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2677                STRUC_TOP:   .SET   STRUC_2   
2677                STRUC_2:   .SET   STRUC_3   
2677                STRUC_3:   .SET   STRUC_4   
2677                STRUC_4:   .SET   STRUC_5   
2677                STRUC_5:   .SET   STRUC_6   
2677                STRUC_6:   .SET   STRUC_7   
2677                STRUC_7:   .SET   STRUC_8   
2677                STRUC_8:   .SET   STRUC_9   
2677                STRUC_9:   .SET   STRUC_10   
2677                STRUC_10:   .SET   STRUC_11   
2677                STRUC_11:   .SET   STRUC_12   
2677                STRUC_12:   .SET   0   
2677                TF_DONEM_2394S85:      
2677                          ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
2677   2A 45 30               LD   HL,(lineBufStart)   
267A   22 4B 30               LD   (lineBufTop),HL   
267D   22 49 30               LD   (currkey),HL   
2680   21 89 26               LD   HL,tst_textM_2395S87   
2683   22 61 32               LD   (char_pointer),HL   
2686                          ;*Macro unroll:  _skip
2686   C3 86 26               JP   $   
2689                          ;*Macro unroll:  STRUC_PUSH $
2689                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2689                STRUC_12:   .SET   STRUC_11   
2689                STRUC_11:   .SET   STRUC_10   
2689                STRUC_10:   .SET   STRUC_9   
2689                STRUC_9:   .SET   STRUC_8   
2689                STRUC_8:   .SET   STRUC_7   
2689                STRUC_7:   .SET   STRUC_6   
2689                STRUC_6:   .SET   STRUC_5   
2689                STRUC_5:   .SET   STRUC_4   
2689                STRUC_4:   .SET   STRUC_3   
2689                STRUC_3:   .SET   STRUC_2   
2689                STRUC_2:   .SET   STRUC_TOP   
2689                STRUC_TOP:   .SET   $   
2689                TST_TEXTM_2395S87:      
2689   3A 20 74 65 73 74 69 66 33 20 69 66 20 31 30 30 20 65 6C 73 65 20 32 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
26AF                          ;*Macro unroll:  _endskip
26AF                          ;*Macro unroll:  STRUC_FWD
26AF                CUR_ADR:   .SET   $   
2687                          .ORG   STRUC_TOP - 2   
2687   AF 26                  DW   CUR_ADR   
26AF                          .ORG   CUR_ADR   
26AF                          ;*Macro unroll:  STRUC_POP
26AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26AF                STRUC_TOP:   .SET   STRUC_2   
26AF                STRUC_2:   .SET   STRUC_3   
26AF                STRUC_3:   .SET   STRUC_4   
26AF                STRUC_4:   .SET   STRUC_5   
26AF                STRUC_5:   .SET   STRUC_6   
26AF                STRUC_6:   .SET   STRUC_7   
26AF                STRUC_7:   .SET   STRUC_8   
26AF                STRUC_8:   .SET   STRUC_9   
26AF                STRUC_9:   .SET   STRUC_10   
26AF                STRUC_10:   .SET   STRUC_11   
26AF                STRUC_11:   .SET   STRUC_12   
26AF                STRUC_12:   .SET   0   
26AF                          ;*Macro unroll: INTERPRET
26AF   CF                     RST   $08   
26B0   D0 0B                  DW   interpret   
26B2   08 0F                  DW   exit_forth   
26B4                          ;*Macro unroll: ppushValue 0
26B4                          ;*Macro unroll:  ppush0 B,C
26B4   DD 71 00               LD   (IX+0),C   
26B7   DD 23                  INC   IX   
26B9   DD 70 00               LD   (IX+0),B   
26BC   DD 23                  INC   IX   
26BE   01 00 00               LD   BC,0   
26C1                          ;*Macro unroll: TEST_SET_TEXT "testif3"
26C1   2A 45 30               LD   HL,(lineBufStart)   
26C4   22 4B 30               LD   (lineBufTop),HL   
26C7   22 49 30               LD   (currkey),HL   
26CA   21 D3 26               LD   HL,tst_textM_2398S92   
26CD   22 61 32               LD   (char_pointer),HL   
26D0                          ;*Macro unroll:  _skip
26D0   C3 D0 26               JP   $   
26D3                          ;*Macro unroll:  STRUC_PUSH $
26D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
26D3                STRUC_12:   .SET   STRUC_11   
26D3                STRUC_11:   .SET   STRUC_10   
26D3                STRUC_10:   .SET   STRUC_9   
26D3                STRUC_9:   .SET   STRUC_8   
26D3                STRUC_8:   .SET   STRUC_7   
26D3                STRUC_7:   .SET   STRUC_6   
26D3                STRUC_6:   .SET   STRUC_5   
26D3                STRUC_5:   .SET   STRUC_4   
26D3                STRUC_4:   .SET   STRUC_3   
26D3                STRUC_3:   .SET   STRUC_2   
26D3                STRUC_2:   .SET   STRUC_TOP   
26D3                STRUC_TOP:   .SET   $   
26D3                TST_TEXTM_2398S92:      
26D3   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
26DF                          ;*Macro unroll:  _endskip
26DF                          ;*Macro unroll:  STRUC_FWD
26DF                CUR_ADR:   .SET   $   
26D1                          .ORG   STRUC_TOP - 2   
26D1   DF 26                  DW   CUR_ADR   
26DF                          .ORG   CUR_ADR   
26DF                          ;*Macro unroll:  STRUC_POP
26DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26DF                STRUC_TOP:   .SET   STRUC_2   
26DF                STRUC_2:   .SET   STRUC_3   
26DF                STRUC_3:   .SET   STRUC_4   
26DF                STRUC_4:   .SET   STRUC_5   
26DF                STRUC_5:   .SET   STRUC_6   
26DF                STRUC_6:   .SET   STRUC_7   
26DF                STRUC_7:   .SET   STRUC_8   
26DF                STRUC_8:   .SET   STRUC_9   
26DF                STRUC_9:   .SET   STRUC_10   
26DF                STRUC_10:   .SET   STRUC_11   
26DF                STRUC_11:   .SET   STRUC_12   
26DF                STRUC_12:   .SET   0   
26DF                          ;*Macro unroll: INTERPRET
26DF   CF                     RST   $08   
26E0   D0 0B                  DW   interpret   
26E2   08 0F                  DW   exit_forth   
26E4                          ;*Macro unroll: EXPECT 200, "0 --> 200"
26E4   CD 1F 0A               CALL   printNum   
26E7                          ;*Macro unroll:  loadWord H,L, B,C
26E7   69                     LD   L,C   
26E8   60                     LD   H,B   
26E9   69                     LD   L,C   
26EA                          ;*Macro unroll:  ppop0 B,C
26EA   DD 2B                  DEC   IX   
26EC   DD 46 00               LD   B,(IX+0)   
26EF   DD 2B                  DEC   IX   
26F1   DD 4E 00               LD   C,(IX+0)   
26F4                          ;*Macro unroll:  CMP16 200
26F4   11 C8 00               LD   DE,200   
26F7   B7                     OR   A   
26F8   ED 52                  SBC   HL,DE   
26FA                          ;*Macro unroll:  checkZeroWord H,L
26FA   7D                     LD   A,L   
26FB   B4                     OR   H   
26FC   CA 19 27               JP   z,tf_doneM_2400S94   
26FF   11 7B 10               LD   DE,FAILED   
2702   CD E3 11               CALL   printPStr   
2705   11 0F 27               LD   DE,te_failM_2400S94   
2708   CD E3 11               CALL   printPStr   
270B   76                     HALT      
270C                          ;*Macro unroll:  _skip
270C   C3 0C 27               JP   $   
270F                          ;*Macro unroll:  STRUC_PUSH $
270F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
270F                STRUC_12:   .SET   STRUC_11   
270F                STRUC_11:   .SET   STRUC_10   
270F                STRUC_10:   .SET   STRUC_9   
270F                STRUC_9:   .SET   STRUC_8   
270F                STRUC_8:   .SET   STRUC_7   
270F                STRUC_7:   .SET   STRUC_6   
270F                STRUC_6:   .SET   STRUC_5   
270F                STRUC_5:   .SET   STRUC_4   
270F                STRUC_4:   .SET   STRUC_3   
270F                STRUC_3:   .SET   STRUC_2   
270F                STRUC_2:   .SET   STRUC_TOP   
270F                STRUC_TOP:   .SET   $   
270F                TE_FAILM_2400S94:      
270F   09 30 20 2D 2D 3E 20 32 30 30 .PSTR   "0 --> 200"   
2719                          ;*Macro unroll:  _endskip
2719                          ;*Macro unroll:  STRUC_FWD
2719                CUR_ADR:   .SET   $   
270D                          .ORG   STRUC_TOP - 2   
270D   19 27                  DW   CUR_ADR   
2719                          .ORG   CUR_ADR   
2719                          ;*Macro unroll:  STRUC_POP
2719                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2719                STRUC_TOP:   .SET   STRUC_2   
2719                STRUC_2:   .SET   STRUC_3   
2719                STRUC_3:   .SET   STRUC_4   
2719                STRUC_4:   .SET   STRUC_5   
2719                STRUC_5:   .SET   STRUC_6   
2719                STRUC_6:   .SET   STRUC_7   
2719                STRUC_7:   .SET   STRUC_8   
2719                STRUC_8:   .SET   STRUC_9   
2719                STRUC_9:   .SET   STRUC_10   
2719                STRUC_10:   .SET   STRUC_11   
2719                STRUC_11:   .SET   STRUC_12   
2719                STRUC_12:   .SET   0   
2719                TF_DONEM_2400S94:      
2719                          ;*Macro unroll: ppushValue 1
2719                          ;*Macro unroll:  ppush0 B,C
2719   DD 71 00               LD   (IX+0),C   
271C   DD 23                  INC   IX   
271E   DD 70 00               LD   (IX+0),B   
2721   DD 23                  INC   IX   
2723   01 01 00               LD   BC,1   
2726                          ;*Macro unroll: TEST_SET_TEXT "testif3"
2726   2A 45 30               LD   HL,(lineBufStart)   
2729   22 4B 30               LD   (lineBufTop),HL   
272C   22 49 30               LD   (currkey),HL   
272F   21 38 27               LD   HL,tst_textM_2402S98   
2732   22 61 32               LD   (char_pointer),HL   
2735                          ;*Macro unroll:  _skip
2735   C3 35 27               JP   $   
2738                          ;*Macro unroll:  STRUC_PUSH $
2738                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2738                STRUC_12:   .SET   STRUC_11   
2738                STRUC_11:   .SET   STRUC_10   
2738                STRUC_10:   .SET   STRUC_9   
2738                STRUC_9:   .SET   STRUC_8   
2738                STRUC_8:   .SET   STRUC_7   
2738                STRUC_7:   .SET   STRUC_6   
2738                STRUC_6:   .SET   STRUC_5   
2738                STRUC_5:   .SET   STRUC_4   
2738                STRUC_4:   .SET   STRUC_3   
2738                STRUC_3:   .SET   STRUC_2   
2738                STRUC_2:   .SET   STRUC_TOP   
2738                STRUC_TOP:   .SET   $   
2738                TST_TEXTM_2402S98:      
2738   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
2744                          ;*Macro unroll:  _endskip
2744                          ;*Macro unroll:  STRUC_FWD
2744                CUR_ADR:   .SET   $   
2736                          .ORG   STRUC_TOP - 2   
2736   44 27                  DW   CUR_ADR   
2744                          .ORG   CUR_ADR   
2744                          ;*Macro unroll:  STRUC_POP
2744                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2744                STRUC_TOP:   .SET   STRUC_2   
2744                STRUC_2:   .SET   STRUC_3   
2744                STRUC_3:   .SET   STRUC_4   
2744                STRUC_4:   .SET   STRUC_5   
2744                STRUC_5:   .SET   STRUC_6   
2744                STRUC_6:   .SET   STRUC_7   
2744                STRUC_7:   .SET   STRUC_8   
2744                STRUC_8:   .SET   STRUC_9   
2744                STRUC_9:   .SET   STRUC_10   
2744                STRUC_10:   .SET   STRUC_11   
2744                STRUC_11:   .SET   STRUC_12   
2744                STRUC_12:   .SET   0   
2744                          ;*Macro unroll: INTERPRET
2744   CF                     RST   $08   
2745   D0 0B                  DW   interpret   
2747   08 0F                  DW   exit_forth   
2749                          ;*Macro unroll: EXPECT 100, "1 --> 100"
2749   CD 1F 0A               CALL   printNum   
274C                          ;*Macro unroll:  loadWord H,L, B,C
274C   69                     LD   L,C   
274D   60                     LD   H,B   
274E   69                     LD   L,C   
274F                          ;*Macro unroll:  ppop0 B,C
274F   DD 2B                  DEC   IX   
2751   DD 46 00               LD   B,(IX+0)   
2754   DD 2B                  DEC   IX   
2756   DD 4E 00               LD   C,(IX+0)   
2759                          ;*Macro unroll:  CMP16 100
2759   11 64 00               LD   DE,100   
275C   B7                     OR   A   
275D   ED 52                  SBC   HL,DE   
275F                          ;*Macro unroll:  checkZeroWord H,L
275F   7D                     LD   A,L   
2760   B4                     OR   H   
2761   CA 7E 27               JP   z,tf_doneM_2404S100   
2764   11 7B 10               LD   DE,FAILED   
2767   CD E3 11               CALL   printPStr   
276A   11 74 27               LD   DE,te_failM_2404S100   
276D   CD E3 11               CALL   printPStr   
2770   76                     HALT      
2771                          ;*Macro unroll:  _skip
2771   C3 71 27               JP   $   
2774                          ;*Macro unroll:  STRUC_PUSH $
2774                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2774                STRUC_12:   .SET   STRUC_11   
2774                STRUC_11:   .SET   STRUC_10   
2774                STRUC_10:   .SET   STRUC_9   
2774                STRUC_9:   .SET   STRUC_8   
2774                STRUC_8:   .SET   STRUC_7   
2774                STRUC_7:   .SET   STRUC_6   
2774                STRUC_6:   .SET   STRUC_5   
2774                STRUC_5:   .SET   STRUC_4   
2774                STRUC_4:   .SET   STRUC_3   
2774                STRUC_3:   .SET   STRUC_2   
2774                STRUC_2:   .SET   STRUC_TOP   
2774                STRUC_TOP:   .SET   $   
2774                TE_FAILM_2404S100:      
2774   09 31 20 2D 2D 3E 20 31 30 30 .PSTR   "1 --> 100"   
277E                          ;*Macro unroll:  _endskip
277E                          ;*Macro unroll:  STRUC_FWD
277E                CUR_ADR:   .SET   $   
2772                          .ORG   STRUC_TOP - 2   
2772   7E 27                  DW   CUR_ADR   
277E                          .ORG   CUR_ADR   
277E                          ;*Macro unroll:  STRUC_POP
277E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
277E                STRUC_TOP:   .SET   STRUC_2   
277E                STRUC_2:   .SET   STRUC_3   
277E                STRUC_3:   .SET   STRUC_4   
277E                STRUC_4:   .SET   STRUC_5   
277E                STRUC_5:   .SET   STRUC_6   
277E                STRUC_6:   .SET   STRUC_7   
277E                STRUC_7:   .SET   STRUC_8   
277E                STRUC_8:   .SET   STRUC_9   
277E                STRUC_9:   .SET   STRUC_10   
277E                STRUC_10:   .SET   STRUC_11   
277E                STRUC_11:   .SET   STRUC_12   
277E                STRUC_12:   .SET   0   
277E                TF_DONEM_2404S100:      
277E                          ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
277E   2A 45 30               LD   HL,(lineBufStart)   
2781   22 4B 30               LD   (lineBufTop),HL   
2784   22 49 30               LD   (currkey),HL   
2787   21 90 27               LD   HL,tst_textM_2405S102   
278A   22 61 32               LD   (char_pointer),HL   
278D                          ;*Macro unroll:  _skip
278D   C3 8D 27               JP   $   
2790                          ;*Macro unroll:  STRUC_PUSH $
2790                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2790                STRUC_12:   .SET   STRUC_11   
2790                STRUC_11:   .SET   STRUC_10   
2790                STRUC_10:   .SET   STRUC_9   
2790                STRUC_9:   .SET   STRUC_8   
2790                STRUC_8:   .SET   STRUC_7   
2790                STRUC_7:   .SET   STRUC_6   
2790                STRUC_6:   .SET   STRUC_5   
2790                STRUC_5:   .SET   STRUC_4   
2790                STRUC_4:   .SET   STRUC_3   
2790                STRUC_3:   .SET   STRUC_2   
2790                STRUC_2:   .SET   STRUC_TOP   
2790                STRUC_TOP:   .SET   $   
2790                TST_TEXTM_2405S102:      
2790   3A 20 74 65 73 74 6C 6F 6F 70 20 62 65 67 69 6E 20 64 75 70 20 35 20 3C 20 77 68 69 6C 65 20 64 75 70 20 2E 20 31 2B 20 72 65 70 65 61 74 20 3B 0D 0A FF 0D 0A DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
27C5                          ;*Macro unroll:  _endskip
27C5                          ;*Macro unroll:  STRUC_FWD
27C5                CUR_ADR:   .SET   $   
278E                          .ORG   STRUC_TOP - 2   
278E   C5 27                  DW   CUR_ADR   
27C5                          .ORG   CUR_ADR   
27C5                          ;*Macro unroll:  STRUC_POP
27C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27C5                STRUC_TOP:   .SET   STRUC_2   
27C5                STRUC_2:   .SET   STRUC_3   
27C5                STRUC_3:   .SET   STRUC_4   
27C5                STRUC_4:   .SET   STRUC_5   
27C5                STRUC_5:   .SET   STRUC_6   
27C5                STRUC_6:   .SET   STRUC_7   
27C5                STRUC_7:   .SET   STRUC_8   
27C5                STRUC_8:   .SET   STRUC_9   
27C5                STRUC_9:   .SET   STRUC_10   
27C5                STRUC_10:   .SET   STRUC_11   
27C5                STRUC_11:   .SET   STRUC_12   
27C5                STRUC_12:   .SET   0   
27C5                          ;*Macro unroll: INTERPRET
27C5   CF                     RST   $08   
27C6   D0 0B                  DW   interpret   
27C8   08 0F                  DW   exit_forth   
27CA                          ;*Macro unroll: ppushValue 0
27CA                          ;*Macro unroll:  ppush0 B,C
27CA   DD 71 00               LD   (IX+0),C   
27CD   DD 23                  INC   IX   
27CF   DD 70 00               LD   (IX+0),B   
27D2   DD 23                  INC   IX   
27D4   01 00 00               LD   BC,0   
27D7                          ;*Macro unroll: TEST_SET_TEXT "testloop"
27D7   2A 45 30               LD   HL,(lineBufStart)   
27DA   22 4B 30               LD   (lineBufTop),HL   
27DD   22 49 30               LD   (currkey),HL   
27E0   21 E9 27               LD   HL,tst_textM_2408S105   
27E3   22 61 32               LD   (char_pointer),HL   
27E6                          ;*Macro unroll:  _skip
27E6   C3 E6 27               JP   $   
27E9                          ;*Macro unroll:  STRUC_PUSH $
27E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
27E9                STRUC_12:   .SET   STRUC_11   
27E9                STRUC_11:   .SET   STRUC_10   
27E9                STRUC_10:   .SET   STRUC_9   
27E9                STRUC_9:   .SET   STRUC_8   
27E9                STRUC_8:   .SET   STRUC_7   
27E9                STRUC_7:   .SET   STRUC_6   
27E9                STRUC_6:   .SET   STRUC_5   
27E9                STRUC_5:   .SET   STRUC_4   
27E9                STRUC_4:   .SET   STRUC_3   
27E9                STRUC_3:   .SET   STRUC_2   
27E9                STRUC_2:   .SET   STRUC_TOP   
27E9                STRUC_TOP:   .SET   $   
27E9                TST_TEXTM_2408S105:      
27E9   74 65 73 74 6C 6F 6F 70 0D 0A FF 0D 0A DB   "testloop","\r\n",-1,"\r\n"   
27F6                          ;*Macro unroll:  _endskip
27F6                          ;*Macro unroll:  STRUC_FWD
27F6                CUR_ADR:   .SET   $   
27E7                          .ORG   STRUC_TOP - 2   
27E7   F6 27                  DW   CUR_ADR   
27F6                          .ORG   CUR_ADR   
27F6                          ;*Macro unroll:  STRUC_POP
27F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27F6                STRUC_TOP:   .SET   STRUC_2   
27F6                STRUC_2:   .SET   STRUC_3   
27F6                STRUC_3:   .SET   STRUC_4   
27F6                STRUC_4:   .SET   STRUC_5   
27F6                STRUC_5:   .SET   STRUC_6   
27F6                STRUC_6:   .SET   STRUC_7   
27F6                STRUC_7:   .SET   STRUC_8   
27F6                STRUC_8:   .SET   STRUC_9   
27F6                STRUC_9:   .SET   STRUC_10   
27F6                STRUC_10:   .SET   STRUC_11   
27F6                STRUC_11:   .SET   STRUC_12   
27F6                STRUC_12:   .SET   0   
27F6                          ;*Macro unroll: INTERPRET
27F6   CF                     RST   $08   
27F7   D0 0B                  DW   interpret   
27F9   08 0F                  DW   exit_forth   
27FB                          ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
27FB   CD 1F 0A               CALL   printNum   
27FE                          ;*Macro unroll:  loadWord H,L, B,C
27FE   69                     LD   L,C   
27FF   60                     LD   H,B   
2800   69                     LD   L,C   
2801                          ;*Macro unroll:  ppop0 B,C
2801   DD 2B                  DEC   IX   
2803   DD 46 00               LD   B,(IX+0)   
2806   DD 2B                  DEC   IX   
2808   DD 4E 00               LD   C,(IX+0)   
280B                          ;*Macro unroll:  CMP16 5
280B   11 05 00               LD   DE,5   
280E   B7                     OR   A   
280F   ED 52                  SBC   HL,DE   
2811                          ;*Macro unroll:  checkZeroWord H,L
2811   7D                     LD   A,L   
2812   B4                     OR   H   
2813   CA 3B 28               JP   z,tf_doneM_2410S107   
2816   11 7B 10               LD   DE,FAILED   
2819   CD E3 11               CALL   printPStr   
281C   11 26 28               LD   DE,te_failM_2410S107   
281F   CD E3 11               CALL   printPStr   
2822   76                     HALT      
2823                          ;*Macro unroll:  _skip
2823   C3 23 28               JP   $   
2826                          ;*Macro unroll:  STRUC_PUSH $
2826                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2826                STRUC_12:   .SET   STRUC_11   
2826                STRUC_11:   .SET   STRUC_10   
2826                STRUC_10:   .SET   STRUC_9   
2826                STRUC_9:   .SET   STRUC_8   
2826                STRUC_8:   .SET   STRUC_7   
2826                STRUC_7:   .SET   STRUC_6   
2826                STRUC_6:   .SET   STRUC_5   
2826                STRUC_5:   .SET   STRUC_4   
2826                STRUC_4:   .SET   STRUC_3   
2826                STRUC_3:   .SET   STRUC_2   
2826                STRUC_2:   .SET   STRUC_TOP   
2826                STRUC_TOP:   .SET   $   
2826                TE_FAILM_2410S107:      
2826   14 4C 6F 6F 70 20 75 6E 74 69 6C 20 6C 69 6D 69 74 20 3C 20 35 .PSTR   "Loop until limit < 5"   
283B                          ;*Macro unroll:  _endskip
283B                          ;*Macro unroll:  STRUC_FWD
283B                CUR_ADR:   .SET   $   
2824                          .ORG   STRUC_TOP - 2   
2824   3B 28                  DW   CUR_ADR   
283B                          .ORG   CUR_ADR   
283B                          ;*Macro unroll:  STRUC_POP
283B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
283B                STRUC_TOP:   .SET   STRUC_2   
283B                STRUC_2:   .SET   STRUC_3   
283B                STRUC_3:   .SET   STRUC_4   
283B                STRUC_4:   .SET   STRUC_5   
283B                STRUC_5:   .SET   STRUC_6   
283B                STRUC_6:   .SET   STRUC_7   
283B                STRUC_7:   .SET   STRUC_8   
283B                STRUC_8:   .SET   STRUC_9   
283B                STRUC_9:   .SET   STRUC_10   
283B                STRUC_10:   .SET   STRUC_11   
283B                STRUC_11:   .SET   STRUC_12   
283B                STRUC_12:   .SET   0   
283B                TF_DONEM_2410S107:      
283B                          ;*Macro unroll: TEST_SET_TEXT "100"
283B   2A 45 30               LD   HL,(lineBufStart)   
283E   22 4B 30               LD   (lineBufTop),HL   
2841   22 49 30               LD   (currkey),HL   
2844   21 4D 28               LD   HL,tst_textM_2411S110   
2847   22 61 32               LD   (char_pointer),HL   
284A                          ;*Macro unroll:  _skip
284A   C3 4A 28               JP   $   
284D                          ;*Macro unroll:  STRUC_PUSH $
284D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
284D                STRUC_12:   .SET   STRUC_11   
284D                STRUC_11:   .SET   STRUC_10   
284D                STRUC_10:   .SET   STRUC_9   
284D                STRUC_9:   .SET   STRUC_8   
284D                STRUC_8:   .SET   STRUC_7   
284D                STRUC_7:   .SET   STRUC_6   
284D                STRUC_6:   .SET   STRUC_5   
284D                STRUC_5:   .SET   STRUC_4   
284D                STRUC_4:   .SET   STRUC_3   
284D                STRUC_3:   .SET   STRUC_2   
284D                STRUC_2:   .SET   STRUC_TOP   
284D                STRUC_TOP:   .SET   $   
284D                TST_TEXTM_2411S110:      
284D   31 30 30 0D 0A FF 0D 0A DB   "100","\r\n",-1,"\r\n"   
2855                          ;*Macro unroll:  _endskip
2855                          ;*Macro unroll:  STRUC_FWD
2855                CUR_ADR:   .SET   $   
284B                          .ORG   STRUC_TOP - 2   
284B   55 28                  DW   CUR_ADR   
2855                          .ORG   CUR_ADR   
2855                          ;*Macro unroll:  STRUC_POP
2855                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2855                STRUC_TOP:   .SET   STRUC_2   
2855                STRUC_2:   .SET   STRUC_3   
2855                STRUC_3:   .SET   STRUC_4   
2855                STRUC_4:   .SET   STRUC_5   
2855                STRUC_5:   .SET   STRUC_6   
2855                STRUC_6:   .SET   STRUC_7   
2855                STRUC_7:   .SET   STRUC_8   
2855                STRUC_8:   .SET   STRUC_9   
2855                STRUC_9:   .SET   STRUC_10   
2855                STRUC_10:   .SET   STRUC_11   
2855                STRUC_11:   .SET   STRUC_12   
2855                STRUC_12:   .SET   0   
2855                          ;*Macro unroll: INTERPRET
2855   CF                     RST   $08   
2856   D0 0B                  DW   interpret   
2858   08 0F                  DW   exit_forth   
285A                          ;*Macro unroll: EXPECT 100, "interpret parse 100"
285A   CD 1F 0A               CALL   printNum   
285D                          ;*Macro unroll:  loadWord H,L, B,C
285D   69                     LD   L,C   
285E   60                     LD   H,B   
285F   69                     LD   L,C   
2860                          ;*Macro unroll:  ppop0 B,C
2860   DD 2B                  DEC   IX   
2862   DD 46 00               LD   B,(IX+0)   
2865   DD 2B                  DEC   IX   
2867   DD 4E 00               LD   C,(IX+0)   
286A                          ;*Macro unroll:  CMP16 100
286A   11 64 00               LD   DE,100   
286D   B7                     OR   A   
286E   ED 52                  SBC   HL,DE   
2870                          ;*Macro unroll:  checkZeroWord H,L
2870   7D                     LD   A,L   
2871   B4                     OR   H   
2872   CA 99 28               JP   z,tf_doneM_2413S112   
2875   11 7B 10               LD   DE,FAILED   
2878   CD E3 11               CALL   printPStr   
287B   11 85 28               LD   DE,te_failM_2413S112   
287E   CD E3 11               CALL   printPStr   
2881   76                     HALT      
2882                          ;*Macro unroll:  _skip
2882   C3 82 28               JP   $   
2885                          ;*Macro unroll:  STRUC_PUSH $
2885                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2885                STRUC_12:   .SET   STRUC_11   
2885                STRUC_11:   .SET   STRUC_10   
2885                STRUC_10:   .SET   STRUC_9   
2885                STRUC_9:   .SET   STRUC_8   
2885                STRUC_8:   .SET   STRUC_7   
2885                STRUC_7:   .SET   STRUC_6   
2885                STRUC_6:   .SET   STRUC_5   
2885                STRUC_5:   .SET   STRUC_4   
2885                STRUC_4:   .SET   STRUC_3   
2885                STRUC_3:   .SET   STRUC_2   
2885                STRUC_2:   .SET   STRUC_TOP   
2885                STRUC_TOP:   .SET   $   
2885                TE_FAILM_2413S112:      
2885   13 69 6E 74 65 72 70 72 65 74 20 70 61 72 73 65 20 31 30 30 .PSTR   "interpret parse 100"   
2899                          ;*Macro unroll:  _endskip
2899                          ;*Macro unroll:  STRUC_FWD
2899                CUR_ADR:   .SET   $   
2883                          .ORG   STRUC_TOP - 2   
2883   99 28                  DW   CUR_ADR   
2899                          .ORG   CUR_ADR   
2899                          ;*Macro unroll:  STRUC_POP
2899                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2899                STRUC_TOP:   .SET   STRUC_2   
2899                STRUC_2:   .SET   STRUC_3   
2899                STRUC_3:   .SET   STRUC_4   
2899                STRUC_4:   .SET   STRUC_5   
2899                STRUC_5:   .SET   STRUC_6   
2899                STRUC_6:   .SET   STRUC_7   
2899                STRUC_7:   .SET   STRUC_8   
2899                STRUC_8:   .SET   STRUC_9   
2899                STRUC_9:   .SET   STRUC_10   
2899                STRUC_10:   .SET   STRUC_11   
2899                STRUC_11:   .SET   STRUC_12   
2899                STRUC_12:   .SET   0   
2899                TF_DONEM_2413S112:      
2899                          ;*Macro unroll: TEST_SET_TEXT "3 2 +"
2899   2A 45 30               LD   HL,(lineBufStart)   
289C   22 4B 30               LD   (lineBufTop),HL   
289F   22 49 30               LD   (currkey),HL   
28A2   21 AB 28               LD   HL,tst_textM_2414S114   
28A5   22 61 32               LD   (char_pointer),HL   
28A8                          ;*Macro unroll:  _skip
28A8   C3 A8 28               JP   $   
28AB                          ;*Macro unroll:  STRUC_PUSH $
28AB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28AB                STRUC_12:   .SET   STRUC_11   
28AB                STRUC_11:   .SET   STRUC_10   
28AB                STRUC_10:   .SET   STRUC_9   
28AB                STRUC_9:   .SET   STRUC_8   
28AB                STRUC_8:   .SET   STRUC_7   
28AB                STRUC_7:   .SET   STRUC_6   
28AB                STRUC_6:   .SET   STRUC_5   
28AB                STRUC_5:   .SET   STRUC_4   
28AB                STRUC_4:   .SET   STRUC_3   
28AB                STRUC_3:   .SET   STRUC_2   
28AB                STRUC_2:   .SET   STRUC_TOP   
28AB                STRUC_TOP:   .SET   $   
28AB                TST_TEXTM_2414S114:      
28AB   33 20 32 20 2B 0D 0A FF 0D 0A DB   "3 2 +","\r\n",-1,"\r\n"   
28B5                          ;*Macro unroll:  _endskip
28B5                          ;*Macro unroll:  STRUC_FWD
28B5                CUR_ADR:   .SET   $   
28A9                          .ORG   STRUC_TOP - 2   
28A9   B5 28                  DW   CUR_ADR   
28B5                          .ORG   CUR_ADR   
28B5                          ;*Macro unroll:  STRUC_POP
28B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28B5                STRUC_TOP:   .SET   STRUC_2   
28B5                STRUC_2:   .SET   STRUC_3   
28B5                STRUC_3:   .SET   STRUC_4   
28B5                STRUC_4:   .SET   STRUC_5   
28B5                STRUC_5:   .SET   STRUC_6   
28B5                STRUC_6:   .SET   STRUC_7   
28B5                STRUC_7:   .SET   STRUC_8   
28B5                STRUC_8:   .SET   STRUC_9   
28B5                STRUC_9:   .SET   STRUC_10   
28B5                STRUC_10:   .SET   STRUC_11   
28B5                STRUC_11:   .SET   STRUC_12   
28B5                STRUC_12:   .SET   0   
28B5                          ;*Macro unroll: INTERPRET
28B5   CF                     RST   $08   
28B6   D0 0B                  DW   interpret   
28B8   08 0F                  DW   exit_forth   
28BA                          ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
28BA   CD 1F 0A               CALL   printNum   
28BD                          ;*Macro unroll:  loadWord H,L, B,C
28BD   69                     LD   L,C   
28BE   60                     LD   H,B   
28BF   69                     LD   L,C   
28C0                          ;*Macro unroll:  ppop0 B,C
28C0   DD 2B                  DEC   IX   
28C2   DD 46 00               LD   B,(IX+0)   
28C5   DD 2B                  DEC   IX   
28C7   DD 4E 00               LD   C,(IX+0)   
28CA                          ;*Macro unroll:  CMP16 5
28CA   11 05 00               LD   DE,5   
28CD   B7                     OR   A   
28CE   ED 52                  SBC   HL,DE   
28D0                          ;*Macro unroll:  checkZeroWord H,L
28D0   7D                     LD   A,L   
28D1   B4                     OR   H   
28D2   CA EF 28               JP   z,tf_doneM_2416S116   
28D5   11 7B 10               LD   DE,FAILED   
28D8   CD E3 11               CALL   printPStr   
28DB   11 E5 28               LD   DE,te_failM_2416S116   
28DE   CD E3 11               CALL   printPStr   
28E1   76                     HALT      
28E2                          ;*Macro unroll:  _skip
28E2   C3 E2 28               JP   $   
28E5                          ;*Macro unroll:  STRUC_PUSH $
28E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28E5                STRUC_12:   .SET   STRUC_11   
28E5                STRUC_11:   .SET   STRUC_10   
28E5                STRUC_10:   .SET   STRUC_9   
28E5                STRUC_9:   .SET   STRUC_8   
28E5                STRUC_8:   .SET   STRUC_7   
28E5                STRUC_7:   .SET   STRUC_6   
28E5                STRUC_6:   .SET   STRUC_5   
28E5                STRUC_5:   .SET   STRUC_4   
28E5                STRUC_4:   .SET   STRUC_3   
28E5                STRUC_3:   .SET   STRUC_2   
28E5                STRUC_2:   .SET   STRUC_TOP   
28E5                STRUC_TOP:   .SET   $   
28E5                TE_FAILM_2416S116:      
28E5   09 33 20 2B 20 32 20 3D 20 35 .PSTR   "3 + 2 = 5"   
28EF                          ;*Macro unroll:  _endskip
28EF                          ;*Macro unroll:  STRUC_FWD
28EF                CUR_ADR:   .SET   $   
28E3                          .ORG   STRUC_TOP - 2   
28E3   EF 28                  DW   CUR_ADR   
28EF                          .ORG   CUR_ADR   
28EF                          ;*Macro unroll:  STRUC_POP
28EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28EF                STRUC_TOP:   .SET   STRUC_2   
28EF                STRUC_2:   .SET   STRUC_3   
28EF                STRUC_3:   .SET   STRUC_4   
28EF                STRUC_4:   .SET   STRUC_5   
28EF                STRUC_5:   .SET   STRUC_6   
28EF                STRUC_6:   .SET   STRUC_7   
28EF                STRUC_7:   .SET   STRUC_8   
28EF                STRUC_8:   .SET   STRUC_9   
28EF                STRUC_9:   .SET   STRUC_10   
28EF                STRUC_10:   .SET   STRUC_11   
28EF                STRUC_11:   .SET   STRUC_12   
28EF                STRUC_12:   .SET   0   
28EF                TF_DONEM_2416S116:      
28EF                          ;*Macro unroll: TEST_SET_TEXT ": add + ;"
28EF   2A 45 30               LD   HL,(lineBufStart)   
28F2   22 4B 30               LD   (lineBufTop),HL   
28F5   22 49 30               LD   (currkey),HL   
28F8   21 01 29               LD   HL,tst_textM_2417S118   
28FB   22 61 32               LD   (char_pointer),HL   
28FE                          ;*Macro unroll:  _skip
28FE   C3 FE 28               JP   $   
2901                          ;*Macro unroll:  STRUC_PUSH $
2901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2901                STRUC_12:   .SET   STRUC_11   
2901                STRUC_11:   .SET   STRUC_10   
2901                STRUC_10:   .SET   STRUC_9   
2901                STRUC_9:   .SET   STRUC_8   
2901                STRUC_8:   .SET   STRUC_7   
2901                STRUC_7:   .SET   STRUC_6   
2901                STRUC_6:   .SET   STRUC_5   
2901                STRUC_5:   .SET   STRUC_4   
2901                STRUC_4:   .SET   STRUC_3   
2901                STRUC_3:   .SET   STRUC_2   
2901                STRUC_2:   .SET   STRUC_TOP   
2901                STRUC_TOP:   .SET   $   
2901                TST_TEXTM_2417S118:      
2901   3A 20 61 64 64 20 2B 20 3B 0D 0A FF 0D 0A DB   ": add + ;","\r\n",-1,"\r\n"   
290F                          ;*Macro unroll:  _endskip
290F                          ;*Macro unroll:  STRUC_FWD
290F                CUR_ADR:   .SET   $   
28FF                          .ORG   STRUC_TOP - 2   
28FF   0F 29                  DW   CUR_ADR   
290F                          .ORG   CUR_ADR   
290F                          ;*Macro unroll:  STRUC_POP
290F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
290F                STRUC_TOP:   .SET   STRUC_2   
290F                STRUC_2:   .SET   STRUC_3   
290F                STRUC_3:   .SET   STRUC_4   
290F                STRUC_4:   .SET   STRUC_5   
290F                STRUC_5:   .SET   STRUC_6   
290F                STRUC_6:   .SET   STRUC_7   
290F                STRUC_7:   .SET   STRUC_8   
290F                STRUC_8:   .SET   STRUC_9   
290F                STRUC_9:   .SET   STRUC_10   
290F                STRUC_10:   .SET   STRUC_11   
290F                STRUC_11:   .SET   STRUC_12   
290F                STRUC_12:   .SET   0   
290F                          ;*Macro unroll: INTERPRET
290F   CF                     RST   $08   
2910   D0 0B                  DW   interpret   
2912   08 0F                  DW   exit_forth   
2914                          ;*Macro unroll: ppushValue 2
2914                          ;*Macro unroll:  ppush0 B,C
2914   DD 71 00               LD   (IX+0),C   
2917   DD 23                  INC   IX   
2919   DD 70 00               LD   (IX+0),B   
291C   DD 23                  INC   IX   
291E   01 02 00               LD   BC,2   
2921                          ;*Macro unroll: ppushValue 2
2921                          ;*Macro unroll:  ppush0 B,C
2921   DD 71 00               LD   (IX+0),C   
2924   DD 23                  INC   IX   
2926   DD 70 00               LD   (IX+0),B   
2929   DD 23                  INC   IX   
292B   01 02 00               LD   BC,2   
292E                          ;*Macro unroll: TEST_SET_TEXT "add"
292E   2A 45 30               LD   HL,(lineBufStart)   
2931   22 4B 30               LD   (lineBufTop),HL   
2934   22 49 30               LD   (currkey),HL   
2937   21 40 29               LD   HL,tst_textM_2421S123   
293A   22 61 32               LD   (char_pointer),HL   
293D                          ;*Macro unroll:  _skip
293D   C3 3D 29               JP   $   
2940                          ;*Macro unroll:  STRUC_PUSH $
2940                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2940                STRUC_12:   .SET   STRUC_11   
2940                STRUC_11:   .SET   STRUC_10   
2940                STRUC_10:   .SET   STRUC_9   
2940                STRUC_9:   .SET   STRUC_8   
2940                STRUC_8:   .SET   STRUC_7   
2940                STRUC_7:   .SET   STRUC_6   
2940                STRUC_6:   .SET   STRUC_5   
2940                STRUC_5:   .SET   STRUC_4   
2940                STRUC_4:   .SET   STRUC_3   
2940                STRUC_3:   .SET   STRUC_2   
2940                STRUC_2:   .SET   STRUC_TOP   
2940                STRUC_TOP:   .SET   $   
2940                TST_TEXTM_2421S123:      
2940   61 64 64 0D 0A FF 0D 0A DB   "add","\r\n",-1,"\r\n"   
2948                          ;*Macro unroll:  _endskip
2948                          ;*Macro unroll:  STRUC_FWD
2948                CUR_ADR:   .SET   $   
293E                          .ORG   STRUC_TOP - 2   
293E   48 29                  DW   CUR_ADR   
2948                          .ORG   CUR_ADR   
2948                          ;*Macro unroll:  STRUC_POP
2948                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2948                STRUC_TOP:   .SET   STRUC_2   
2948                STRUC_2:   .SET   STRUC_3   
2948                STRUC_3:   .SET   STRUC_4   
2948                STRUC_4:   .SET   STRUC_5   
2948                STRUC_5:   .SET   STRUC_6   
2948                STRUC_6:   .SET   STRUC_7   
2948                STRUC_7:   .SET   STRUC_8   
2948                STRUC_8:   .SET   STRUC_9   
2948                STRUC_9:   .SET   STRUC_10   
2948                STRUC_10:   .SET   STRUC_11   
2948                STRUC_11:   .SET   STRUC_12   
2948                STRUC_12:   .SET   0   
2948                          ;*Macro unroll: INTERPRET
2948   CF                     RST   $08   
2949   D0 0B                  DW   interpret   
294B   08 0F                  DW   exit_forth   
294D                          ;*Macro unroll: EXPECT 4, "2 2 add = 4"
294D   CD 1F 0A               CALL   printNum   
2950                          ;*Macro unroll:  loadWord H,L, B,C
2950   69                     LD   L,C   
2951   60                     LD   H,B   
2952   69                     LD   L,C   
2953                          ;*Macro unroll:  ppop0 B,C
2953   DD 2B                  DEC   IX   
2955   DD 46 00               LD   B,(IX+0)   
2958   DD 2B                  DEC   IX   
295A   DD 4E 00               LD   C,(IX+0)   
295D                          ;*Macro unroll:  CMP16 4
295D   11 04 00               LD   DE,4   
2960   B7                     OR   A   
2961   ED 52                  SBC   HL,DE   
2963                          ;*Macro unroll:  checkZeroWord H,L
2963   7D                     LD   A,L   
2964   B4                     OR   H   
2965   CA 84 29               JP   z,tf_doneM_2423S125   
2968   11 7B 10               LD   DE,FAILED   
296B   CD E3 11               CALL   printPStr   
296E   11 78 29               LD   DE,te_failM_2423S125   
2971   CD E3 11               CALL   printPStr   
2974   76                     HALT      
2975                          ;*Macro unroll:  _skip
2975   C3 75 29               JP   $   
2978                          ;*Macro unroll:  STRUC_PUSH $
2978                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2978                STRUC_12:   .SET   STRUC_11   
2978                STRUC_11:   .SET   STRUC_10   
2978                STRUC_10:   .SET   STRUC_9   
2978                STRUC_9:   .SET   STRUC_8   
2978                STRUC_8:   .SET   STRUC_7   
2978                STRUC_7:   .SET   STRUC_6   
2978                STRUC_6:   .SET   STRUC_5   
2978                STRUC_5:   .SET   STRUC_4   
2978                STRUC_4:   .SET   STRUC_3   
2978                STRUC_3:   .SET   STRUC_2   
2978                STRUC_2:   .SET   STRUC_TOP   
2978                STRUC_TOP:   .SET   $   
2978                TE_FAILM_2423S125:      
2978   0B 32 20 32 20 61 64 64 20 3D 20 34 .PSTR   "2 2 add = 4"   
2984                          ;*Macro unroll:  _endskip
2984                          ;*Macro unroll:  STRUC_FWD
2984                CUR_ADR:   .SET   $   
2976                          .ORG   STRUC_TOP - 2   
2976   84 29                  DW   CUR_ADR   
2984                          .ORG   CUR_ADR   
2984                          ;*Macro unroll:  STRUC_POP
2984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2984                STRUC_TOP:   .SET   STRUC_2   
2984                STRUC_2:   .SET   STRUC_3   
2984                STRUC_3:   .SET   STRUC_4   
2984                STRUC_4:   .SET   STRUC_5   
2984                STRUC_5:   .SET   STRUC_6   
2984                STRUC_6:   .SET   STRUC_7   
2984                STRUC_7:   .SET   STRUC_8   
2984                STRUC_8:   .SET   STRUC_9   
2984                STRUC_9:   .SET   STRUC_10   
2984                STRUC_10:   .SET   STRUC_11   
2984                STRUC_11:   .SET   STRUC_12   
2984                STRUC_12:   .SET   0   
2984                TF_DONEM_2423S125:      
2984                          ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
2984   2A 45 30               LD   HL,(lineBufStart)   
2987   22 4B 30               LD   (lineBufTop),HL   
298A   22 49 30               LD   (currkey),HL   
298D   21 96 29               LD   HL,tst_textM_2424S127   
2990   22 61 32               LD   (char_pointer),HL   
2993                          ;*Macro unroll:  _skip
2993   C3 93 29               JP   $   
2996                          ;*Macro unroll:  STRUC_PUSH $
2996                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2996                STRUC_12:   .SET   STRUC_11   
2996                STRUC_11:   .SET   STRUC_10   
2996                STRUC_10:   .SET   STRUC_9   
2996                STRUC_9:   .SET   STRUC_8   
2996                STRUC_8:   .SET   STRUC_7   
2996                STRUC_7:   .SET   STRUC_6   
2996                STRUC_6:   .SET   STRUC_5   
2996                STRUC_5:   .SET   STRUC_4   
2996                STRUC_4:   .SET   STRUC_3   
2996                STRUC_3:   .SET   STRUC_2   
2996                STRUC_2:   .SET   STRUC_TOP   
2996                STRUC_TOP:   .SET   $   
2996                TST_TEXTM_2424S127:      
2996   3A 20 64 75 6D 70 20 31 36 20 62 61 73 65 20 21 20 6F 76 65 72 20 2B 20 73 77 61 70 20 62 65 67 69 6E 20 6F 76 65 72 20 6F 76 65 72 20 73 77 61 70 20 3C 20 77 68 69 6C 65 20 64 75 70 20 37 20 61 6E 64 20 30 3D 20 69 66 20 63 72 20 64 75 70 20 2E 20 65 6E 64 69 66 20 64 75 70 20 63 40 20 2E 20 31 2B 20 72 65 70 65 61 74 20 63 72 20 31 30 20 62 61 73 65 20 21 20 3B 0D 0A FF 0D 0A DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
2A15                          ;*Macro unroll:  _endskip
2A15                          ;*Macro unroll:  STRUC_FWD
2A15                CUR_ADR:   .SET   $   
2994                          .ORG   STRUC_TOP - 2   
2994   15 2A                  DW   CUR_ADR   
2A15                          .ORG   CUR_ADR   
2A15                          ;*Macro unroll:  STRUC_POP
2A15                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A15                STRUC_TOP:   .SET   STRUC_2   
2A15                STRUC_2:   .SET   STRUC_3   
2A15                STRUC_3:   .SET   STRUC_4   
2A15                STRUC_4:   .SET   STRUC_5   
2A15                STRUC_5:   .SET   STRUC_6   
2A15                STRUC_6:   .SET   STRUC_7   
2A15                STRUC_7:   .SET   STRUC_8   
2A15                STRUC_8:   .SET   STRUC_9   
2A15                STRUC_9:   .SET   STRUC_10   
2A15                STRUC_10:   .SET   STRUC_11   
2A15                STRUC_11:   .SET   STRUC_12   
2A15                STRUC_12:   .SET   0   
2A15                          ;*Macro unroll: INTERPRET
2A15   CF                     RST   $08   
2A16   D0 0B                  DW   interpret   
2A18   08 0F                  DW   exit_forth   
2A1A                          ;*Macro unroll: TEST_SET_TEXT "dump"
2A1A   2A 45 30               LD   HL,(lineBufStart)   
2A1D   22 4B 30               LD   (lineBufTop),HL   
2A20   22 49 30               LD   (currkey),HL   
2A23   21 2C 2A               LD   HL,tst_textM_2426S130   
2A26   22 61 32               LD   (char_pointer),HL   
2A29                          ;*Macro unroll:  _skip
2A29   C3 29 2A               JP   $   
2A2C                          ;*Macro unroll:  STRUC_PUSH $
2A2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A2C                STRUC_12:   .SET   STRUC_11   
2A2C                STRUC_11:   .SET   STRUC_10   
2A2C                STRUC_10:   .SET   STRUC_9   
2A2C                STRUC_9:   .SET   STRUC_8   
2A2C                STRUC_8:   .SET   STRUC_7   
2A2C                STRUC_7:   .SET   STRUC_6   
2A2C                STRUC_6:   .SET   STRUC_5   
2A2C                STRUC_5:   .SET   STRUC_4   
2A2C                STRUC_4:   .SET   STRUC_3   
2A2C                STRUC_3:   .SET   STRUC_2   
2A2C                STRUC_2:   .SET   STRUC_TOP   
2A2C                STRUC_TOP:   .SET   $   
2A2C                TST_TEXTM_2426S130:      
2A2C   64 75 6D 70 0D 0A FF 0D 0A DB   "dump","\r\n",-1,"\r\n"   
2A35                          ;*Macro unroll:  _endskip
2A35                          ;*Macro unroll:  STRUC_FWD
2A35                CUR_ADR:   .SET   $   
2A2A                          .ORG   STRUC_TOP - 2   
2A2A   35 2A                  DW   CUR_ADR   
2A35                          .ORG   CUR_ADR   
2A35                          ;*Macro unroll:  STRUC_POP
2A35                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A35                STRUC_TOP:   .SET   STRUC_2   
2A35                STRUC_2:   .SET   STRUC_3   
2A35                STRUC_3:   .SET   STRUC_4   
2A35                STRUC_4:   .SET   STRUC_5   
2A35                STRUC_5:   .SET   STRUC_6   
2A35                STRUC_6:   .SET   STRUC_7   
2A35                STRUC_7:   .SET   STRUC_8   
2A35                STRUC_8:   .SET   STRUC_9   
2A35                STRUC_9:   .SET   STRUC_10   
2A35                STRUC_10:   .SET   STRUC_11   
2A35                STRUC_11:   .SET   STRUC_12   
2A35                STRUC_12:   .SET   0   
2A35                          ;*Macro unroll: INTERPRET
2A35   CF                     RST   $08   
2A36   D0 0B                  DW   interpret   
2A38   08 0F                  DW   exit_forth   
2A3A                          ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
2A3A   2A 45 30               LD   HL,(lineBufStart)   
2A3D   22 4B 30               LD   (lineBufTop),HL   
2A40   22 49 30               LD   (currkey),HL   
2A43   21 4C 2A               LD   HL,tst_textM_2428S133   
2A46   22 61 32               LD   (char_pointer),HL   
2A49                          ;*Macro unroll:  _skip
2A49   C3 49 2A               JP   $   
2A4C                          ;*Macro unroll:  STRUC_PUSH $
2A4C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A4C                STRUC_12:   .SET   STRUC_11   
2A4C                STRUC_11:   .SET   STRUC_10   
2A4C                STRUC_10:   .SET   STRUC_9   
2A4C                STRUC_9:   .SET   STRUC_8   
2A4C                STRUC_8:   .SET   STRUC_7   
2A4C                STRUC_7:   .SET   STRUC_6   
2A4C                STRUC_6:   .SET   STRUC_5   
2A4C                STRUC_5:   .SET   STRUC_4   
2A4C                STRUC_4:   .SET   STRUC_3   
2A4C                STRUC_3:   .SET   STRUC_2   
2A4C                STRUC_2:   .SET   STRUC_TOP   
2A4C                STRUC_TOP:   .SET   $   
2A4C                TST_TEXTM_2428S133:      
2A4C   3A 20 73 74 72 20 73 22 20 78 79 7A 22 20 3B 0D 0A FF 0D 0A DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
2A60                          ;*Macro unroll:  _endskip
2A60                          ;*Macro unroll:  STRUC_FWD
2A60                CUR_ADR:   .SET   $   
2A4A                          .ORG   STRUC_TOP - 2   
2A4A   60 2A                  DW   CUR_ADR   
2A60                          .ORG   CUR_ADR   
2A60                          ;*Macro unroll:  STRUC_POP
2A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A60                STRUC_TOP:   .SET   STRUC_2   
2A60                STRUC_2:   .SET   STRUC_3   
2A60                STRUC_3:   .SET   STRUC_4   
2A60                STRUC_4:   .SET   STRUC_5   
2A60                STRUC_5:   .SET   STRUC_6   
2A60                STRUC_6:   .SET   STRUC_7   
2A60                STRUC_7:   .SET   STRUC_8   
2A60                STRUC_8:   .SET   STRUC_9   
2A60                STRUC_9:   .SET   STRUC_10   
2A60                STRUC_10:   .SET   STRUC_11   
2A60                STRUC_11:   .SET   STRUC_12   
2A60                STRUC_12:   .SET   0   
2A60                          ;*Macro unroll: INTERPRET
2A60   CF                     RST   $08   
2A61   D0 0B                  DW   interpret   
2A63   08 0F                  DW   exit_forth   
2A65                          ;*Macro unroll: TEST_SET_TEXT "str type"
2A65   2A 45 30               LD   HL,(lineBufStart)   
2A68   22 4B 30               LD   (lineBufTop),HL   
2A6B   22 49 30               LD   (currkey),HL   
2A6E   21 77 2A               LD   HL,tst_textM_2430S135   
2A71   22 61 32               LD   (char_pointer),HL   
2A74                          ;*Macro unroll:  _skip
2A74   C3 74 2A               JP   $   
2A77                          ;*Macro unroll:  STRUC_PUSH $
2A77                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A77                STRUC_12:   .SET   STRUC_11   
2A77                STRUC_11:   .SET   STRUC_10   
2A77                STRUC_10:   .SET   STRUC_9   
2A77                STRUC_9:   .SET   STRUC_8   
2A77                STRUC_8:   .SET   STRUC_7   
2A77                STRUC_7:   .SET   STRUC_6   
2A77                STRUC_6:   .SET   STRUC_5   
2A77                STRUC_5:   .SET   STRUC_4   
2A77                STRUC_4:   .SET   STRUC_3   
2A77                STRUC_3:   .SET   STRUC_2   
2A77                STRUC_2:   .SET   STRUC_TOP   
2A77                STRUC_TOP:   .SET   $   
2A77                TST_TEXTM_2430S135:      
2A77   73 74 72 20 74 79 70 65 0D 0A FF 0D 0A DB   "str type","\r\n",-1,"\r\n"   
2A84                          ;*Macro unroll:  _endskip
2A84                          ;*Macro unroll:  STRUC_FWD
2A84                CUR_ADR:   .SET   $   
2A75                          .ORG   STRUC_TOP - 2   
2A75   84 2A                  DW   CUR_ADR   
2A84                          .ORG   CUR_ADR   
2A84                          ;*Macro unroll:  STRUC_POP
2A84                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A84                STRUC_TOP:   .SET   STRUC_2   
2A84                STRUC_2:   .SET   STRUC_3   
2A84                STRUC_3:   .SET   STRUC_4   
2A84                STRUC_4:   .SET   STRUC_5   
2A84                STRUC_5:   .SET   STRUC_6   
2A84                STRUC_6:   .SET   STRUC_7   
2A84                STRUC_7:   .SET   STRUC_8   
2A84                STRUC_8:   .SET   STRUC_9   
2A84                STRUC_9:   .SET   STRUC_10   
2A84                STRUC_10:   .SET   STRUC_11   
2A84                STRUC_11:   .SET   STRUC_12   
2A84                STRUC_12:   .SET   0   
2A84                          ;*Macro unroll: INTERPRET
2A84   CF                     RST   $08   
2A85   D0 0B                  DW   interpret   
2A87   08 0F                  DW   exit_forth   
2A89                          ;*Macro unroll: TEST_SET_TEXT "str"
2A89   2A 45 30               LD   HL,(lineBufStart)   
2A8C   22 4B 30               LD   (lineBufTop),HL   
2A8F   22 49 30               LD   (currkey),HL   
2A92   21 9B 2A               LD   HL,tst_textM_2432S137   
2A95   22 61 32               LD   (char_pointer),HL   
2A98                          ;*Macro unroll:  _skip
2A98   C3 98 2A               JP   $   
2A9B                          ;*Macro unroll:  STRUC_PUSH $
2A9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A9B                STRUC_12:   .SET   STRUC_11   
2A9B                STRUC_11:   .SET   STRUC_10   
2A9B                STRUC_10:   .SET   STRUC_9   
2A9B                STRUC_9:   .SET   STRUC_8   
2A9B                STRUC_8:   .SET   STRUC_7   
2A9B                STRUC_7:   .SET   STRUC_6   
2A9B                STRUC_6:   .SET   STRUC_5   
2A9B                STRUC_5:   .SET   STRUC_4   
2A9B                STRUC_4:   .SET   STRUC_3   
2A9B                STRUC_3:   .SET   STRUC_2   
2A9B                STRUC_2:   .SET   STRUC_TOP   
2A9B                STRUC_TOP:   .SET   $   
2A9B                TST_TEXTM_2432S137:      
2A9B   73 74 72 0D 0A FF 0D 0A DB   "str","\r\n",-1,"\r\n"   
2AA3                          ;*Macro unroll:  _endskip
2AA3                          ;*Macro unroll:  STRUC_FWD
2AA3                CUR_ADR:   .SET   $   
2A99                          .ORG   STRUC_TOP - 2   
2A99   A3 2A                  DW   CUR_ADR   
2AA3                          .ORG   CUR_ADR   
2AA3                          ;*Macro unroll:  STRUC_POP
2AA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AA3                STRUC_TOP:   .SET   STRUC_2   
2AA3                STRUC_2:   .SET   STRUC_3   
2AA3                STRUC_3:   .SET   STRUC_4   
2AA3                STRUC_4:   .SET   STRUC_5   
2AA3                STRUC_5:   .SET   STRUC_6   
2AA3                STRUC_6:   .SET   STRUC_7   
2AA3                STRUC_7:   .SET   STRUC_8   
2AA3                STRUC_8:   .SET   STRUC_9   
2AA3                STRUC_9:   .SET   STRUC_10   
2AA3                STRUC_10:   .SET   STRUC_11   
2AA3                STRUC_11:   .SET   STRUC_12   
2AA3                STRUC_12:   .SET   0   
2AA3                          ;*Macro unroll: INTERPRET
2AA3   CF                     RST   $08   
2AA4   D0 0B                  DW   interpret   
2AA6   08 0F                  DW   exit_forth   
2AA8                          ;*Macro unroll: EXPECT 3, "str len = 3"
2AA8   CD 1F 0A               CALL   printNum   
2AAB                          ;*Macro unroll:  loadWord H,L, B,C
2AAB   69                     LD   L,C   
2AAC   60                     LD   H,B   
2AAD   69                     LD   L,C   
2AAE                          ;*Macro unroll:  ppop0 B,C
2AAE   DD 2B                  DEC   IX   
2AB0   DD 46 00               LD   B,(IX+0)   
2AB3   DD 2B                  DEC   IX   
2AB5   DD 4E 00               LD   C,(IX+0)   
2AB8                          ;*Macro unroll:  CMP16 3
2AB8   11 03 00               LD   DE,3   
2ABB   B7                     OR   A   
2ABC   ED 52                  SBC   HL,DE   
2ABE                          ;*Macro unroll:  checkZeroWord H,L
2ABE   7D                     LD   A,L   
2ABF   B4                     OR   H   
2AC0   CA DF 2A               JP   z,tf_doneM_2434S139   
2AC3   11 7B 10               LD   DE,FAILED   
2AC6   CD E3 11               CALL   printPStr   
2AC9   11 D3 2A               LD   DE,te_failM_2434S139   
2ACC   CD E3 11               CALL   printPStr   
2ACF   76                     HALT      
2AD0                          ;*Macro unroll:  _skip
2AD0   C3 D0 2A               JP   $   
2AD3                          ;*Macro unroll:  STRUC_PUSH $
2AD3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AD3                STRUC_12:   .SET   STRUC_11   
2AD3                STRUC_11:   .SET   STRUC_10   
2AD3                STRUC_10:   .SET   STRUC_9   
2AD3                STRUC_9:   .SET   STRUC_8   
2AD3                STRUC_8:   .SET   STRUC_7   
2AD3                STRUC_7:   .SET   STRUC_6   
2AD3                STRUC_6:   .SET   STRUC_5   
2AD3                STRUC_5:   .SET   STRUC_4   
2AD3                STRUC_4:   .SET   STRUC_3   
2AD3                STRUC_3:   .SET   STRUC_2   
2AD3                STRUC_2:   .SET   STRUC_TOP   
2AD3                STRUC_TOP:   .SET   $   
2AD3                TE_FAILM_2434S139:      
2AD3   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2ADF                          ;*Macro unroll:  _endskip
2ADF                          ;*Macro unroll:  STRUC_FWD
2ADF                CUR_ADR:   .SET   $   
2AD1                          .ORG   STRUC_TOP - 2   
2AD1   DF 2A                  DW   CUR_ADR   
2ADF                          .ORG   CUR_ADR   
2ADF                          ;*Macro unroll:  STRUC_POP
2ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2ADF                STRUC_TOP:   .SET   STRUC_2   
2ADF                STRUC_2:   .SET   STRUC_3   
2ADF                STRUC_3:   .SET   STRUC_4   
2ADF                STRUC_4:   .SET   STRUC_5   
2ADF                STRUC_5:   .SET   STRUC_6   
2ADF                STRUC_6:   .SET   STRUC_7   
2ADF                STRUC_7:   .SET   STRUC_8   
2ADF                STRUC_8:   .SET   STRUC_9   
2ADF                STRUC_9:   .SET   STRUC_10   
2ADF                STRUC_10:   .SET   STRUC_11   
2ADF                STRUC_11:   .SET   STRUC_12   
2ADF                STRUC_12:   .SET   0   
2ADF                TF_DONEM_2434S139:      
2ADF                          ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
2ADF   2A 45 30               LD   HL,(lineBufStart)   
2AE2   22 4B 30               LD   (lineBufTop),HL   
2AE5   22 49 30               LD   (currkey),HL   
2AE8   21 F1 2A               LD   HL,tst_textM_2435S141   
2AEB   22 61 32               LD   (char_pointer),HL   
2AEE                          ;*Macro unroll:  _skip
2AEE   C3 EE 2A               JP   $   
2AF1                          ;*Macro unroll:  STRUC_PUSH $
2AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AF1                STRUC_12:   .SET   STRUC_11   
2AF1                STRUC_11:   .SET   STRUC_10   
2AF1                STRUC_10:   .SET   STRUC_9   
2AF1                STRUC_9:   .SET   STRUC_8   
2AF1                STRUC_8:   .SET   STRUC_7   
2AF1                STRUC_7:   .SET   STRUC_6   
2AF1                STRUC_6:   .SET   STRUC_5   
2AF1                STRUC_5:   .SET   STRUC_4   
2AF1                STRUC_4:   .SET   STRUC_3   
2AF1                STRUC_3:   .SET   STRUC_2   
2AF1                STRUC_2:   .SET   STRUC_TOP   
2AF1                STRUC_TOP:   .SET   $   
2AF1                TST_TEXTM_2435S141:      
2AF1   22 20 78 79 7A 22 0D 0A FF 0D 0A DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
2AFC                          ;*Macro unroll:  _endskip
2AFC                          ;*Macro unroll:  STRUC_FWD
2AFC                CUR_ADR:   .SET   $   
2AEF                          .ORG   STRUC_TOP - 2   
2AEF   FC 2A                  DW   CUR_ADR   
2AFC                          .ORG   CUR_ADR   
2AFC                          ;*Macro unroll:  STRUC_POP
2AFC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AFC                STRUC_TOP:   .SET   STRUC_2   
2AFC                STRUC_2:   .SET   STRUC_3   
2AFC                STRUC_3:   .SET   STRUC_4   
2AFC                STRUC_4:   .SET   STRUC_5   
2AFC                STRUC_5:   .SET   STRUC_6   
2AFC                STRUC_6:   .SET   STRUC_7   
2AFC                STRUC_7:   .SET   STRUC_8   
2AFC                STRUC_8:   .SET   STRUC_9   
2AFC                STRUC_9:   .SET   STRUC_10   
2AFC                STRUC_10:   .SET   STRUC_11   
2AFC                STRUC_11:   .SET   STRUC_12   
2AFC                STRUC_12:   .SET   0   
2AFC                          ;*Macro unroll: INTERPRET
2AFC   CF                     RST   $08   
2AFD   D0 0B                  DW   interpret   
2AFF   08 0F                  DW   exit_forth   
2B01                          ;*Macro unroll: TEST_SET_TEXT "dup"
2B01   2A 45 30               LD   HL,(lineBufStart)   
2B04   22 4B 30               LD   (lineBufTop),HL   
2B07   22 49 30               LD   (currkey),HL   
2B0A   21 13 2B               LD   HL,tst_textM_2437S143   
2B0D   22 61 32               LD   (char_pointer),HL   
2B10                          ;*Macro unroll:  _skip
2B10   C3 10 2B               JP   $   
2B13                          ;*Macro unroll:  STRUC_PUSH $
2B13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B13                STRUC_12:   .SET   STRUC_11   
2B13                STRUC_11:   .SET   STRUC_10   
2B13                STRUC_10:   .SET   STRUC_9   
2B13                STRUC_9:   .SET   STRUC_8   
2B13                STRUC_8:   .SET   STRUC_7   
2B13                STRUC_7:   .SET   STRUC_6   
2B13                STRUC_6:   .SET   STRUC_5   
2B13                STRUC_5:   .SET   STRUC_4   
2B13                STRUC_4:   .SET   STRUC_3   
2B13                STRUC_3:   .SET   STRUC_2   
2B13                STRUC_2:   .SET   STRUC_TOP   
2B13                STRUC_TOP:   .SET   $   
2B13                TST_TEXTM_2437S143:      
2B13   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
2B1B                          ;*Macro unroll:  _endskip
2B1B                          ;*Macro unroll:  STRUC_FWD
2B1B                CUR_ADR:   .SET   $   
2B11                          .ORG   STRUC_TOP - 2   
2B11   1B 2B                  DW   CUR_ADR   
2B1B                          .ORG   CUR_ADR   
2B1B                          ;*Macro unroll:  STRUC_POP
2B1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B1B                STRUC_TOP:   .SET   STRUC_2   
2B1B                STRUC_2:   .SET   STRUC_3   
2B1B                STRUC_3:   .SET   STRUC_4   
2B1B                STRUC_4:   .SET   STRUC_5   
2B1B                STRUC_5:   .SET   STRUC_6   
2B1B                STRUC_6:   .SET   STRUC_7   
2B1B                STRUC_7:   .SET   STRUC_8   
2B1B                STRUC_8:   .SET   STRUC_9   
2B1B                STRUC_9:   .SET   STRUC_10   
2B1B                STRUC_10:   .SET   STRUC_11   
2B1B                STRUC_11:   .SET   STRUC_12   
2B1B                STRUC_12:   .SET   0   
2B1B                          ;*Macro unroll: INTERPRET
2B1B   CF                     RST   $08   
2B1C   D0 0B                  DW   interpret   
2B1E   08 0F                  DW   exit_forth   
2B20                          ;*Macro unroll: EXPECT 3, "str len = 3"
2B20   CD 1F 0A               CALL   printNum   
2B23                          ;*Macro unroll:  loadWord H,L, B,C
2B23   69                     LD   L,C   
2B24   60                     LD   H,B   
2B25   69                     LD   L,C   
2B26                          ;*Macro unroll:  ppop0 B,C
2B26   DD 2B                  DEC   IX   
2B28   DD 46 00               LD   B,(IX+0)   
2B2B   DD 2B                  DEC   IX   
2B2D   DD 4E 00               LD   C,(IX+0)   
2B30                          ;*Macro unroll:  CMP16 3
2B30   11 03 00               LD   DE,3   
2B33   B7                     OR   A   
2B34   ED 52                  SBC   HL,DE   
2B36                          ;*Macro unroll:  checkZeroWord H,L
2B36   7D                     LD   A,L   
2B37   B4                     OR   H   
2B38   CA 57 2B               JP   z,tf_doneM_2439S145   
2B3B   11 7B 10               LD   DE,FAILED   
2B3E   CD E3 11               CALL   printPStr   
2B41   11 4B 2B               LD   DE,te_failM_2439S145   
2B44   CD E3 11               CALL   printPStr   
2B47   76                     HALT      
2B48                          ;*Macro unroll:  _skip
2B48   C3 48 2B               JP   $   
2B4B                          ;*Macro unroll:  STRUC_PUSH $
2B4B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B4B                STRUC_12:   .SET   STRUC_11   
2B4B                STRUC_11:   .SET   STRUC_10   
2B4B                STRUC_10:   .SET   STRUC_9   
2B4B                STRUC_9:   .SET   STRUC_8   
2B4B                STRUC_8:   .SET   STRUC_7   
2B4B                STRUC_7:   .SET   STRUC_6   
2B4B                STRUC_6:   .SET   STRUC_5   
2B4B                STRUC_5:   .SET   STRUC_4   
2B4B                STRUC_4:   .SET   STRUC_3   
2B4B                STRUC_3:   .SET   STRUC_2   
2B4B                STRUC_2:   .SET   STRUC_TOP   
2B4B                STRUC_TOP:   .SET   $   
2B4B                TE_FAILM_2439S145:      
2B4B   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2B57                          ;*Macro unroll:  _endskip
2B57                          ;*Macro unroll:  STRUC_FWD
2B57                CUR_ADR:   .SET   $   
2B49                          .ORG   STRUC_TOP - 2   
2B49   57 2B                  DW   CUR_ADR   
2B57                          .ORG   CUR_ADR   
2B57                          ;*Macro unroll:  STRUC_POP
2B57                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B57                STRUC_TOP:   .SET   STRUC_2   
2B57                STRUC_2:   .SET   STRUC_3   
2B57                STRUC_3:   .SET   STRUC_4   
2B57                STRUC_4:   .SET   STRUC_5   
2B57                STRUC_5:   .SET   STRUC_6   
2B57                STRUC_6:   .SET   STRUC_7   
2B57                STRUC_7:   .SET   STRUC_8   
2B57                STRUC_8:   .SET   STRUC_9   
2B57                STRUC_9:   .SET   STRUC_10   
2B57                STRUC_10:   .SET   STRUC_11   
2B57                STRUC_11:   .SET   STRUC_12   
2B57                STRUC_12:   .SET   0   
2B57                TF_DONEM_2439S145:      
2B57                          ;*Macro unroll: TEST_SET_TEXT "type"
2B57   2A 45 30               LD   HL,(lineBufStart)   
2B5A   22 4B 30               LD   (lineBufTop),HL   
2B5D   22 49 30               LD   (currkey),HL   
2B60   21 69 2B               LD   HL,tst_textM_2440S146   
2B63   22 61 32               LD   (char_pointer),HL   
2B66                          ;*Macro unroll:  _skip
2B66   C3 66 2B               JP   $   
2B69                          ;*Macro unroll:  STRUC_PUSH $
2B69                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B69                STRUC_12:   .SET   STRUC_11   
2B69                STRUC_11:   .SET   STRUC_10   
2B69                STRUC_10:   .SET   STRUC_9   
2B69                STRUC_9:   .SET   STRUC_8   
2B69                STRUC_8:   .SET   STRUC_7   
2B69                STRUC_7:   .SET   STRUC_6   
2B69                STRUC_6:   .SET   STRUC_5   
2B69                STRUC_5:   .SET   STRUC_4   
2B69                STRUC_4:   .SET   STRUC_3   
2B69                STRUC_3:   .SET   STRUC_2   
2B69                STRUC_2:   .SET   STRUC_TOP   
2B69                STRUC_TOP:   .SET   $   
2B69                TST_TEXTM_2440S146:      
2B69   74 79 70 65 0D 0A FF 0D 0A DB   "type","\r\n",-1,"\r\n"   
2B72                          ;*Macro unroll:  _endskip
2B72                          ;*Macro unroll:  STRUC_FWD
2B72                CUR_ADR:   .SET   $   
2B67                          .ORG   STRUC_TOP - 2   
2B67   72 2B                  DW   CUR_ADR   
2B72                          .ORG   CUR_ADR   
2B72                          ;*Macro unroll:  STRUC_POP
2B72                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B72                STRUC_TOP:   .SET   STRUC_2   
2B72                STRUC_2:   .SET   STRUC_3   
2B72                STRUC_3:   .SET   STRUC_4   
2B72                STRUC_4:   .SET   STRUC_5   
2B72                STRUC_5:   .SET   STRUC_6   
2B72                STRUC_6:   .SET   STRUC_7   
2B72                STRUC_7:   .SET   STRUC_8   
2B72                STRUC_8:   .SET   STRUC_9   
2B72                STRUC_9:   .SET   STRUC_10   
2B72                STRUC_10:   .SET   STRUC_11   
2B72                STRUC_11:   .SET   STRUC_12   
2B72                STRUC_12:   .SET   0   
2B72                          ;*Macro unroll: INTERPRET
2B72   CF                     RST   $08   
2B73   D0 0B                  DW   interpret   
2B75   08 0F                  DW   exit_forth   
2B77                             ; 
2B77                             ; ld HL, 12
2B77                             ; ld C, 10
2B77                             ; call divideWordByByte
2B77                             ; ld B, 0
2B77                             ; ld C, A
2B77                             ; EXPECT 2, "div 11 / 10 = 1 1"
2B77                             ; TEST_SET_TEXT "hello\r\n"
2B77                             ; call KEY
2B77                             ; EXPECT $68, "key 'h'"
2B77                             ; call KEY
2B77                             ; EXPECT $65, "key 'e'"
2B77                             ; TEST_SET_TEXT "x"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'x'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "a xyz "
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'a xyz'"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'a xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "here"
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; call CREATE
2B77                             ; call LATEST
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "create xyz latest"
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER + 6, "create xyz here"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; call DUP
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; ppushValue -10
2B77                             ; ppushValue 10
2B77                             ; call STAR
2B77                             ; EXPECT -100, "expect -10 * 10 to be -100"
2B77                             ; ppushValue -10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT 200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue 10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT -200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue -101
2B77                             ; ppushValue 20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5, "expect -101 / 20 to be -5"
2B77                             ; EXPECT -1, "expect -101 % 20 to be -1"
2B77                             ; ppushValue -101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT 5,  "expect -101 / -20 to be 5"
2B77                             ; EXPECT -1, "expect -101 % -20 to be -1"
2B77                             ; ppushValue 101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5,  "expect 101 / -20 to be -5"
2B77                             ; EXPECT 1, "expect 101 % -20 to be 1"
2B77                             ; TEST_SET_TEXT ": testif2 if 100 endif ;"
2B77                             ; ppushValue 0
2B77                             ; TEST_SET_TEXT "testloop"
2B77                             ; call INTERPRET
2B77                             ; EXPECT 5, "Loop until limit < 5"
2B77                             ; ppushPText "xyz"
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "xyz length 3"
2B77                             ; call CFETCH
2B77                             ; EXPECT "x" + 0, "xyz --> x"
2B77                             ; ppushValue HEADER_LATEST
2B77                             ; call TCFA
2B77                             ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; ppushValue HEADER_PLUS
2B77                             ; call TCFA
2B77                             ; call EXECUTE
2B77                             ; EXPECT 3, "1 2 plus = 3"
2B77                             ; ppushText "100",3
2B77                             ; call NUMBER
2B77                             ; EXPECT 0, "0 = no parse err"
2B77                             ; EXPECT 100, "parse 100"
2B77                             ; ppushText "latest",6
2B77                             ; call FIND
2B77                             ; EXPECT HEADER_LATEST, "find header of LATEST"
2B77                             ; TEST_SET_TEXT "base"
2B77                             ; rst $08
2B77                             ; dw interpret
2B77                             ; dw exit_forth
2B77                             ; call FETCH
2B77                             ; EXPECT 10, "expect base to be 10"
2B77                             ; ppushText "add",3
2B77                             ; call FIND
2B77                             ; ppushValue 64
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#h 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT $100, "expect hex $100"
2B77                             ; TEST_SET_TEXT "hex"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#d 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT 100, "expect decimal 100"
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                          ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
2B77   2A 45 30               LD   HL,(lineBufStart)   
2B7A   22 4B 30               LD   (lineBufTop),HL   
2B7D   22 49 30               LD   (currkey),HL   
2B80   21 89 2B               LD   HL,tst_textM_2566S18   
2B83   22 61 32               LD   (char_pointer),HL   
2B86                          ;*Macro unroll:  _skip
2B86   C3 86 2B               JP   $   
2B89                          ;*Macro unroll:  STRUC_PUSH $
2B89                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B89                STRUC_12:   .SET   STRUC_11   
2B89                STRUC_11:   .SET   STRUC_10   
2B89                STRUC_10:   .SET   STRUC_9   
2B89                STRUC_9:   .SET   STRUC_8   
2B89                STRUC_8:   .SET   STRUC_7   
2B89                STRUC_7:   .SET   STRUC_6   
2B89                STRUC_6:   .SET   STRUC_5   
2B89                STRUC_5:   .SET   STRUC_4   
2B89                STRUC_4:   .SET   STRUC_3   
2B89                STRUC_3:   .SET   STRUC_2   
2B89                STRUC_2:   .SET   STRUC_TOP   
2B89                STRUC_TOP:   .SET   $   
2B89                TST_TEXTM_2566S18:      
2B89   31 36 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "16 base ! 20","\r\n",-1,"\r\n"   
2B9A                          ;*Macro unroll:  _endskip
2B9A                          ;*Macro unroll:  STRUC_FWD
2B9A                CUR_ADR:   .SET   $   
2B87                          .ORG   STRUC_TOP - 2   
2B87   9A 2B                  DW   CUR_ADR   
2B9A                          .ORG   CUR_ADR   
2B9A                          ;*Macro unroll:  STRUC_POP
2B9A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B9A                STRUC_TOP:   .SET   STRUC_2   
2B9A                STRUC_2:   .SET   STRUC_3   
2B9A                STRUC_3:   .SET   STRUC_4   
2B9A                STRUC_4:   .SET   STRUC_5   
2B9A                STRUC_5:   .SET   STRUC_6   
2B9A                STRUC_6:   .SET   STRUC_7   
2B9A                STRUC_7:   .SET   STRUC_8   
2B9A                STRUC_8:   .SET   STRUC_9   
2B9A                STRUC_9:   .SET   STRUC_10   
2B9A                STRUC_10:   .SET   STRUC_11   
2B9A                STRUC_11:   .SET   STRUC_12   
2B9A                STRUC_12:   .SET   0   
2B9A                          ;*Macro unroll: INTERPRET
2B9A   CF                     RST   $08   
2B9B   D0 0B                  DW   interpret   
2B9D   08 0F                  DW   exit_forth   
2B9F                          ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
2B9F   CD 1F 0A               CALL   printNum   
2BA2                          ;*Macro unroll:  loadWord H,L, B,C
2BA2   69                     LD   L,C   
2BA3   60                     LD   H,B   
2BA4   69                     LD   L,C   
2BA5                          ;*Macro unroll:  ppop0 B,C
2BA5   DD 2B                  DEC   IX   
2BA7   DD 46 00               LD   B,(IX+0)   
2BAA   DD 2B                  DEC   IX   
2BAC   DD 4E 00               LD   C,(IX+0)   
2BAF                          ;*Macro unroll:  CMP16 32
2BAF   11 20 00               LD   DE,32   
2BB2   B7                     OR   A   
2BB3   ED 52                  SBC   HL,DE   
2BB5                          ;*Macro unroll:  checkZeroWord H,L
2BB5   7D                     LD   A,L   
2BB6   B4                     OR   H   
2BB7   CA DA 2B               JP   z,tf_doneM_2568S20   
2BBA   11 7B 10               LD   DE,FAILED   
2BBD   CD E3 11               CALL   printPStr   
2BC0   11 CA 2B               LD   DE,te_failM_2568S20   
2BC3   CD E3 11               CALL   printPStr   
2BC6   76                     HALT      
2BC7                          ;*Macro unroll:  _skip
2BC7   C3 C7 2B               JP   $   
2BCA                          ;*Macro unroll:  STRUC_PUSH $
2BCA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BCA                STRUC_12:   .SET   STRUC_11   
2BCA                STRUC_11:   .SET   STRUC_10   
2BCA                STRUC_10:   .SET   STRUC_9   
2BCA                STRUC_9:   .SET   STRUC_8   
2BCA                STRUC_8:   .SET   STRUC_7   
2BCA                STRUC_7:   .SET   STRUC_6   
2BCA                STRUC_6:   .SET   STRUC_5   
2BCA                STRUC_5:   .SET   STRUC_4   
2BCA                STRUC_4:   .SET   STRUC_3   
2BCA                STRUC_3:   .SET   STRUC_2   
2BCA                STRUC_2:   .SET   STRUC_TOP   
2BCA                STRUC_TOP:   .SET   $   
2BCA                TE_FAILM_2568S20:      
2BCA   0F 33 32 20 24 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "32 $20 to be 32"   
2BDA                          ;*Macro unroll:  _endskip
2BDA                          ;*Macro unroll:  STRUC_FWD
2BDA                CUR_ADR:   .SET   $   
2BC8                          .ORG   STRUC_TOP - 2   
2BC8   DA 2B                  DW   CUR_ADR   
2BDA                          .ORG   CUR_ADR   
2BDA                          ;*Macro unroll:  STRUC_POP
2BDA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BDA                STRUC_TOP:   .SET   STRUC_2   
2BDA                STRUC_2:   .SET   STRUC_3   
2BDA                STRUC_3:   .SET   STRUC_4   
2BDA                STRUC_4:   .SET   STRUC_5   
2BDA                STRUC_5:   .SET   STRUC_6   
2BDA                STRUC_6:   .SET   STRUC_7   
2BDA                STRUC_7:   .SET   STRUC_8   
2BDA                STRUC_8:   .SET   STRUC_9   
2BDA                STRUC_9:   .SET   STRUC_10   
2BDA                STRUC_10:   .SET   STRUC_11   
2BDA                STRUC_11:   .SET   STRUC_12   
2BDA                STRUC_12:   .SET   0   
2BDA                TF_DONEM_2568S20:      
2BDA                          ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
2BDA   2A 45 30               LD   HL,(lineBufStart)   
2BDD   22 4B 30               LD   (lineBufTop),HL   
2BE0   22 49 30               LD   (currkey),HL   
2BE3   21 EC 2B               LD   HL,tst_textM_2569S22   
2BE6   22 61 32               LD   (char_pointer),HL   
2BE9                          ;*Macro unroll:  _skip
2BE9   C3 E9 2B               JP   $   
2BEC                          ;*Macro unroll:  STRUC_PUSH $
2BEC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BEC                STRUC_12:   .SET   STRUC_11   
2BEC                STRUC_11:   .SET   STRUC_10   
2BEC                STRUC_10:   .SET   STRUC_9   
2BEC                STRUC_9:   .SET   STRUC_8   
2BEC                STRUC_8:   .SET   STRUC_7   
2BEC                STRUC_7:   .SET   STRUC_6   
2BEC                STRUC_6:   .SET   STRUC_5   
2BEC                STRUC_5:   .SET   STRUC_4   
2BEC                STRUC_4:   .SET   STRUC_3   
2BEC                STRUC_3:   .SET   STRUC_2   
2BEC                STRUC_2:   .SET   STRUC_TOP   
2BEC                STRUC_TOP:   .SET   $   
2BEC                TST_TEXTM_2569S22:      
2BEC   30 41 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "0A base ! 20","\r\n",-1,"\r\n"   
2BFD                          ;*Macro unroll:  _endskip
2BFD                          ;*Macro unroll:  STRUC_FWD
2BFD                CUR_ADR:   .SET   $   
2BEA                          .ORG   STRUC_TOP - 2   
2BEA   FD 2B                  DW   CUR_ADR   
2BFD                          .ORG   CUR_ADR   
2BFD                          ;*Macro unroll:  STRUC_POP
2BFD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BFD                STRUC_TOP:   .SET   STRUC_2   
2BFD                STRUC_2:   .SET   STRUC_3   
2BFD                STRUC_3:   .SET   STRUC_4   
2BFD                STRUC_4:   .SET   STRUC_5   
2BFD                STRUC_5:   .SET   STRUC_6   
2BFD                STRUC_6:   .SET   STRUC_7   
2BFD                STRUC_7:   .SET   STRUC_8   
2BFD                STRUC_8:   .SET   STRUC_9   
2BFD                STRUC_9:   .SET   STRUC_10   
2BFD                STRUC_10:   .SET   STRUC_11   
2BFD                STRUC_11:   .SET   STRUC_12   
2BFD                STRUC_12:   .SET   0   
2BFD                          ;*Macro unroll: INTERPRET
2BFD   CF                     RST   $08   
2BFE   D0 0B                  DW   interpret   
2C00   08 0F                  DW   exit_forth   
2C02                          ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
2C02   CD 1F 0A               CALL   printNum   
2C05                          ;*Macro unroll:  loadWord H,L, B,C
2C05   69                     LD   L,C   
2C06   60                     LD   H,B   
2C07   69                     LD   L,C   
2C08                          ;*Macro unroll:  ppop0 B,C
2C08   DD 2B                  DEC   IX   
2C0A   DD 46 00               LD   B,(IX+0)   
2C0D   DD 2B                  DEC   IX   
2C0F   DD 4E 00               LD   C,(IX+0)   
2C12                          ;*Macro unroll:  CMP16 20
2C12   11 14 00               LD   DE,20   
2C15   B7                     OR   A   
2C16   ED 52                  SBC   HL,DE   
2C18                          ;*Macro unroll:  checkZeroWord H,L
2C18   7D                     LD   A,L   
2C19   B4                     OR   H   
2C1A   CA 44 2C               JP   z,tf_doneM_2571S24   
2C1D   11 7B 10               LD   DE,FAILED   
2C20   CD E3 11               CALL   printPStr   
2C23   11 2D 2C               LD   DE,te_failM_2571S24   
2C26   CD E3 11               CALL   printPStr   
2C29   76                     HALT      
2C2A                          ;*Macro unroll:  _skip
2C2A   C3 2A 2C               JP   $   
2C2D                          ;*Macro unroll:  STRUC_PUSH $
2C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C2D                STRUC_12:   .SET   STRUC_11   
2C2D                STRUC_11:   .SET   STRUC_10   
2C2D                STRUC_10:   .SET   STRUC_9   
2C2D                STRUC_9:   .SET   STRUC_8   
2C2D                STRUC_8:   .SET   STRUC_7   
2C2D                STRUC_7:   .SET   STRUC_6   
2C2D                STRUC_6:   .SET   STRUC_5   
2C2D                STRUC_5:   .SET   STRUC_4   
2C2D                STRUC_4:   .SET   STRUC_3   
2C2D                STRUC_3:   .SET   STRUC_2   
2C2D                STRUC_2:   .SET   STRUC_TOP   
2C2D                STRUC_TOP:   .SET   $   
2C2D                TE_FAILM_2571S24:      
2C2D   16 32 30 20 64 65 63 69 6D 61 6C 20 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "20 decimal 20 to be 32"   
2C44                          ;*Macro unroll:  _endskip
2C44                          ;*Macro unroll:  STRUC_FWD
2C44                CUR_ADR:   .SET   $   
2C2B                          .ORG   STRUC_TOP - 2   
2C2B   44 2C                  DW   CUR_ADR   
2C44                          .ORG   CUR_ADR   
2C44                          ;*Macro unroll:  STRUC_POP
2C44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C44                STRUC_TOP:   .SET   STRUC_2   
2C44                STRUC_2:   .SET   STRUC_3   
2C44                STRUC_3:   .SET   STRUC_4   
2C44                STRUC_4:   .SET   STRUC_5   
2C44                STRUC_5:   .SET   STRUC_6   
2C44                STRUC_6:   .SET   STRUC_7   
2C44                STRUC_7:   .SET   STRUC_8   
2C44                STRUC_8:   .SET   STRUC_9   
2C44                STRUC_9:   .SET   STRUC_10   
2C44                STRUC_10:   .SET   STRUC_11   
2C44                STRUC_11:   .SET   STRUC_12   
2C44                STRUC_12:   .SET   0   
2C44                TF_DONEM_2571S24:      
2C44                          ;*Macro unroll: TEST_SET_TEXT "100 100 +"
2C44   2A 45 30               LD   HL,(lineBufStart)   
2C47   22 4B 30               LD   (lineBufTop),HL   
2C4A   22 49 30               LD   (currkey),HL   
2C4D   21 56 2C               LD   HL,tst_textM_2572S1   
2C50   22 61 32               LD   (char_pointer),HL   
2C53                          ;*Macro unroll:  _skip
2C53   C3 53 2C               JP   $   
2C56                          ;*Macro unroll:  STRUC_PUSH $
2C56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C56                STRUC_12:   .SET   STRUC_11   
2C56                STRUC_11:   .SET   STRUC_10   
2C56                STRUC_10:   .SET   STRUC_9   
2C56                STRUC_9:   .SET   STRUC_8   
2C56                STRUC_8:   .SET   STRUC_7   
2C56                STRUC_7:   .SET   STRUC_6   
2C56                STRUC_6:   .SET   STRUC_5   
2C56                STRUC_5:   .SET   STRUC_4   
2C56                STRUC_4:   .SET   STRUC_3   
2C56                STRUC_3:   .SET   STRUC_2   
2C56                STRUC_2:   .SET   STRUC_TOP   
2C56                STRUC_TOP:   .SET   $   
2C56                TST_TEXTM_2572S1:      
2C56   31 30 30 20 31 30 30 20 2B 0D 0A FF 0D 0A DB   "100 100 +","\r\n",-1,"\r\n"   
2C64                          ;*Macro unroll:  _endskip
2C64                          ;*Macro unroll:  STRUC_FWD
2C64                CUR_ADR:   .SET   $   
2C54                          .ORG   STRUC_TOP - 2   
2C54   64 2C                  DW   CUR_ADR   
2C64                          .ORG   CUR_ADR   
2C64                          ;*Macro unroll:  STRUC_POP
2C64                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C64                STRUC_TOP:   .SET   STRUC_2   
2C64                STRUC_2:   .SET   STRUC_3   
2C64                STRUC_3:   .SET   STRUC_4   
2C64                STRUC_4:   .SET   STRUC_5   
2C64                STRUC_5:   .SET   STRUC_6   
2C64                STRUC_6:   .SET   STRUC_7   
2C64                STRUC_7:   .SET   STRUC_8   
2C64                STRUC_8:   .SET   STRUC_9   
2C64                STRUC_9:   .SET   STRUC_10   
2C64                STRUC_10:   .SET   STRUC_11   
2C64                STRUC_11:   .SET   STRUC_12   
2C64                STRUC_12:   .SET   0   
2C64                          ;*Macro unroll: INTERPRET
2C64   CF                     RST   $08   
2C65   D0 0B                  DW   interpret   
2C67   08 0F                  DW   exit_forth   
2C69                          ;*Macro unroll: EXPECT 200, "100 100 + = 200"
2C69   CD 1F 0A               CALL   printNum   
2C6C                          ;*Macro unroll:  loadWord H,L, B,C
2C6C   69                     LD   L,C   
2C6D   60                     LD   H,B   
2C6E   69                     LD   L,C   
2C6F                          ;*Macro unroll:  ppop0 B,C
2C6F   DD 2B                  DEC   IX   
2C71   DD 46 00               LD   B,(IX+0)   
2C74   DD 2B                  DEC   IX   
2C76   DD 4E 00               LD   C,(IX+0)   
2C79                          ;*Macro unroll:  CMP16 200
2C79   11 C8 00               LD   DE,200   
2C7C   B7                     OR   A   
2C7D   ED 52                  SBC   HL,DE   
2C7F                          ;*Macro unroll:  checkZeroWord H,L
2C7F   7D                     LD   A,L   
2C80   B4                     OR   H   
2C81   CA A4 2C               JP   z,tf_doneM_2574S3   
2C84   11 7B 10               LD   DE,FAILED   
2C87   CD E3 11               CALL   printPStr   
2C8A   11 94 2C               LD   DE,te_failM_2574S3   
2C8D   CD E3 11               CALL   printPStr   
2C90   76                     HALT      
2C91                          ;*Macro unroll:  _skip
2C91   C3 91 2C               JP   $   
2C94                          ;*Macro unroll:  STRUC_PUSH $
2C94                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C94                STRUC_12:   .SET   STRUC_11   
2C94                STRUC_11:   .SET   STRUC_10   
2C94                STRUC_10:   .SET   STRUC_9   
2C94                STRUC_9:   .SET   STRUC_8   
2C94                STRUC_8:   .SET   STRUC_7   
2C94                STRUC_7:   .SET   STRUC_6   
2C94                STRUC_6:   .SET   STRUC_5   
2C94                STRUC_5:   .SET   STRUC_4   
2C94                STRUC_4:   .SET   STRUC_3   
2C94                STRUC_3:   .SET   STRUC_2   
2C94                STRUC_2:   .SET   STRUC_TOP   
2C94                STRUC_TOP:   .SET   $   
2C94                TE_FAILM_2574S3:      
2C94   0F 31 30 30 20 31 30 30 20 2B 20 3D 20 32 30 30 .PSTR   "100 100 + = 200"   
2CA4                          ;*Macro unroll:  _endskip
2CA4                          ;*Macro unroll:  STRUC_FWD
2CA4                CUR_ADR:   .SET   $   
2C92                          .ORG   STRUC_TOP - 2   
2C92   A4 2C                  DW   CUR_ADR   
2CA4                          .ORG   CUR_ADR   
2CA4                          ;*Macro unroll:  STRUC_POP
2CA4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CA4                STRUC_TOP:   .SET   STRUC_2   
2CA4                STRUC_2:   .SET   STRUC_3   
2CA4                STRUC_3:   .SET   STRUC_4   
2CA4                STRUC_4:   .SET   STRUC_5   
2CA4                STRUC_5:   .SET   STRUC_6   
2CA4                STRUC_6:   .SET   STRUC_7   
2CA4                STRUC_7:   .SET   STRUC_8   
2CA4                STRUC_8:   .SET   STRUC_9   
2CA4                STRUC_9:   .SET   STRUC_10   
2CA4                STRUC_10:   .SET   STRUC_11   
2CA4                STRUC_11:   .SET   STRUC_12   
2CA4                STRUC_12:   .SET   0   
2CA4                TF_DONEM_2574S3:      
2CA4                          ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
2CA4   2A 45 30               LD   HL,(lineBufStart)   
2CA7   22 4B 30               LD   (lineBufTop),HL   
2CAA   22 49 30               LD   (currkey),HL   
2CAD   21 B6 2C               LD   HL,tst_textM_2575S5   
2CB0   22 61 32               LD   (char_pointer),HL   
2CB3                          ;*Macro unroll:  _skip
2CB3   C3 B3 2C               JP   $   
2CB6                          ;*Macro unroll:  STRUC_PUSH $
2CB6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CB6                STRUC_12:   .SET   STRUC_11   
2CB6                STRUC_11:   .SET   STRUC_10   
2CB6                STRUC_10:   .SET   STRUC_9   
2CB6                STRUC_9:   .SET   STRUC_8   
2CB6                STRUC_8:   .SET   STRUC_7   
2CB6                STRUC_7:   .SET   STRUC_6   
2CB6                STRUC_6:   .SET   STRUC_5   
2CB6                STRUC_5:   .SET   STRUC_4   
2CB6                STRUC_4:   .SET   STRUC_3   
2CB6                STRUC_3:   .SET   STRUC_2   
2CB6                STRUC_2:   .SET   STRUC_TOP   
2CB6                STRUC_TOP:   .SET   $   
2CB6                TST_TEXTM_2575S5:      
2CB6   31 30 30 20 31 30 20 2B 20 2E 0D 0A FF 0D 0A DB   "100 10 + .","\r\n",-1,"\r\n"   
2CC5                          ;*Macro unroll:  _endskip
2CC5                          ;*Macro unroll:  STRUC_FWD
2CC5                CUR_ADR:   .SET   $   
2CB4                          .ORG   STRUC_TOP - 2   
2CB4   C5 2C                  DW   CUR_ADR   
2CC5                          .ORG   CUR_ADR   
2CC5                          ;*Macro unroll:  STRUC_POP
2CC5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CC5                STRUC_TOP:   .SET   STRUC_2   
2CC5                STRUC_2:   .SET   STRUC_3   
2CC5                STRUC_3:   .SET   STRUC_4   
2CC5                STRUC_4:   .SET   STRUC_5   
2CC5                STRUC_5:   .SET   STRUC_6   
2CC5                STRUC_6:   .SET   STRUC_7   
2CC5                STRUC_7:   .SET   STRUC_8   
2CC5                STRUC_8:   .SET   STRUC_9   
2CC5                STRUC_9:   .SET   STRUC_10   
2CC5                STRUC_10:   .SET   STRUC_11   
2CC5                STRUC_11:   .SET   STRUC_12   
2CC5                STRUC_12:   .SET   0   
2CC5                          ;*Macro unroll: INTERPRET
2CC5   CF                     RST   $08   
2CC6   D0 0B                  DW   interpret   
2CC8   08 0F                  DW   exit_forth   
2CCA                          ;*Macro unroll: TEST_SET_TEXT "-10 abs"
2CCA   2A 45 30               LD   HL,(lineBufStart)   
2CCD   22 4B 30               LD   (lineBufTop),HL   
2CD0   22 49 30               LD   (currkey),HL   
2CD3   21 DC 2C               LD   HL,tst_textM_2577S8   
2CD6   22 61 32               LD   (char_pointer),HL   
2CD9                          ;*Macro unroll:  _skip
2CD9   C3 D9 2C               JP   $   
2CDC                          ;*Macro unroll:  STRUC_PUSH $
2CDC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CDC                STRUC_12:   .SET   STRUC_11   
2CDC                STRUC_11:   .SET   STRUC_10   
2CDC                STRUC_10:   .SET   STRUC_9   
2CDC                STRUC_9:   .SET   STRUC_8   
2CDC                STRUC_8:   .SET   STRUC_7   
2CDC                STRUC_7:   .SET   STRUC_6   
2CDC                STRUC_6:   .SET   STRUC_5   
2CDC                STRUC_5:   .SET   STRUC_4   
2CDC                STRUC_4:   .SET   STRUC_3   
2CDC                STRUC_3:   .SET   STRUC_2   
2CDC                STRUC_2:   .SET   STRUC_TOP   
2CDC                STRUC_TOP:   .SET   $   
2CDC                TST_TEXTM_2577S8:      
2CDC   2D 31 30 20 61 62 73 0D 0A FF 0D 0A DB   "-10 abs","\r\n",-1,"\r\n"   
2CE8                          ;*Macro unroll:  _endskip
2CE8                          ;*Macro unroll:  STRUC_FWD
2CE8                CUR_ADR:   .SET   $   
2CDA                          .ORG   STRUC_TOP - 2   
2CDA   E8 2C                  DW   CUR_ADR   
2CE8                          .ORG   CUR_ADR   
2CE8                          ;*Macro unroll:  STRUC_POP
2CE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CE8                STRUC_TOP:   .SET   STRUC_2   
2CE8                STRUC_2:   .SET   STRUC_3   
2CE8                STRUC_3:   .SET   STRUC_4   
2CE8                STRUC_4:   .SET   STRUC_5   
2CE8                STRUC_5:   .SET   STRUC_6   
2CE8                STRUC_6:   .SET   STRUC_7   
2CE8                STRUC_7:   .SET   STRUC_8   
2CE8                STRUC_8:   .SET   STRUC_9   
2CE8                STRUC_9:   .SET   STRUC_10   
2CE8                STRUC_10:   .SET   STRUC_11   
2CE8                STRUC_11:   .SET   STRUC_12   
2CE8                STRUC_12:   .SET   0   
2CE8                          ;*Macro unroll: INTERPRET
2CE8   CF                     RST   $08   
2CE9   D0 0B                  DW   interpret   
2CEB   08 0F                  DW   exit_forth   
2CED                          ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
2CED   CD 1F 0A               CALL   printNum   
2CF0                          ;*Macro unroll:  loadWord H,L, B,C
2CF0   69                     LD   L,C   
2CF1   60                     LD   H,B   
2CF2   69                     LD   L,C   
2CF3                          ;*Macro unroll:  ppop0 B,C
2CF3   DD 2B                  DEC   IX   
2CF5   DD 46 00               LD   B,(IX+0)   
2CF8   DD 2B                  DEC   IX   
2CFA   DD 4E 00               LD   C,(IX+0)   
2CFD                          ;*Macro unroll:  CMP16 10
2CFD   11 0A 00               LD   DE,10   
2D00   B7                     OR   A   
2D01   ED 52                  SBC   HL,DE   
2D03                          ;*Macro unroll:  checkZeroWord H,L
2D03   7D                     LD   A,L   
2D04   B4                     OR   H   
2D05   CA 2C 2D               JP   z,tf_doneM_2579S10   
2D08   11 7B 10               LD   DE,FAILED   
2D0B   CD E3 11               CALL   printPStr   
2D0E   11 18 2D               LD   DE,te_failM_2579S10   
2D11   CD E3 11               CALL   printPStr   
2D14   76                     HALT      
2D15                          ;*Macro unroll:  _skip
2D15   C3 15 2D               JP   $   
2D18                          ;*Macro unroll:  STRUC_PUSH $
2D18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D18                STRUC_12:   .SET   STRUC_11   
2D18                STRUC_11:   .SET   STRUC_10   
2D18                STRUC_10:   .SET   STRUC_9   
2D18                STRUC_9:   .SET   STRUC_8   
2D18                STRUC_8:   .SET   STRUC_7   
2D18                STRUC_7:   .SET   STRUC_6   
2D18                STRUC_6:   .SET   STRUC_5   
2D18                STRUC_5:   .SET   STRUC_4   
2D18                STRUC_4:   .SET   STRUC_3   
2D18                STRUC_3:   .SET   STRUC_2   
2D18                STRUC_2:   .SET   STRUC_TOP   
2D18                STRUC_TOP:   .SET   $   
2D18                TE_FAILM_2579S10:      
2D18   13 31 30 20 61 62 73 20 2D 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs -10 to be 10"   
2D2C                          ;*Macro unroll:  _endskip
2D2C                          ;*Macro unroll:  STRUC_FWD
2D2C                CUR_ADR:   .SET   $   
2D16                          .ORG   STRUC_TOP - 2   
2D16   2C 2D                  DW   CUR_ADR   
2D2C                          .ORG   CUR_ADR   
2D2C                          ;*Macro unroll:  STRUC_POP
2D2C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D2C                STRUC_TOP:   .SET   STRUC_2   
2D2C                STRUC_2:   .SET   STRUC_3   
2D2C                STRUC_3:   .SET   STRUC_4   
2D2C                STRUC_4:   .SET   STRUC_5   
2D2C                STRUC_5:   .SET   STRUC_6   
2D2C                STRUC_6:   .SET   STRUC_7   
2D2C                STRUC_7:   .SET   STRUC_8   
2D2C                STRUC_8:   .SET   STRUC_9   
2D2C                STRUC_9:   .SET   STRUC_10   
2D2C                STRUC_10:   .SET   STRUC_11   
2D2C                STRUC_11:   .SET   STRUC_12   
2D2C                STRUC_12:   .SET   0   
2D2C                TF_DONEM_2579S10:      
2D2C                          ;*Macro unroll: TEST_SET_TEXT "10 abs"
2D2C   2A 45 30               LD   HL,(lineBufStart)   
2D2F   22 4B 30               LD   (lineBufTop),HL   
2D32   22 49 30               LD   (currkey),HL   
2D35   21 3E 2D               LD   HL,tst_textM_2580S12   
2D38   22 61 32               LD   (char_pointer),HL   
2D3B                          ;*Macro unroll:  _skip
2D3B   C3 3B 2D               JP   $   
2D3E                          ;*Macro unroll:  STRUC_PUSH $
2D3E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D3E                STRUC_12:   .SET   STRUC_11   
2D3E                STRUC_11:   .SET   STRUC_10   
2D3E                STRUC_10:   .SET   STRUC_9   
2D3E                STRUC_9:   .SET   STRUC_8   
2D3E                STRUC_8:   .SET   STRUC_7   
2D3E                STRUC_7:   .SET   STRUC_6   
2D3E                STRUC_6:   .SET   STRUC_5   
2D3E                STRUC_5:   .SET   STRUC_4   
2D3E                STRUC_4:   .SET   STRUC_3   
2D3E                STRUC_3:   .SET   STRUC_2   
2D3E                STRUC_2:   .SET   STRUC_TOP   
2D3E                STRUC_TOP:   .SET   $   
2D3E                TST_TEXTM_2580S12:      
2D3E   31 30 20 61 62 73 0D 0A FF 0D 0A DB   "10 abs","\r\n",-1,"\r\n"   
2D49                          ;*Macro unroll:  _endskip
2D49                          ;*Macro unroll:  STRUC_FWD
2D49                CUR_ADR:   .SET   $   
2D3C                          .ORG   STRUC_TOP - 2   
2D3C   49 2D                  DW   CUR_ADR   
2D49                          .ORG   CUR_ADR   
2D49                          ;*Macro unroll:  STRUC_POP
2D49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D49                STRUC_TOP:   .SET   STRUC_2   
2D49                STRUC_2:   .SET   STRUC_3   
2D49                STRUC_3:   .SET   STRUC_4   
2D49                STRUC_4:   .SET   STRUC_5   
2D49                STRUC_5:   .SET   STRUC_6   
2D49                STRUC_6:   .SET   STRUC_7   
2D49                STRUC_7:   .SET   STRUC_8   
2D49                STRUC_8:   .SET   STRUC_9   
2D49                STRUC_9:   .SET   STRUC_10   
2D49                STRUC_10:   .SET   STRUC_11   
2D49                STRUC_11:   .SET   STRUC_12   
2D49                STRUC_12:   .SET   0   
2D49                          ;*Macro unroll: INTERPRET
2D49   CF                     RST   $08   
2D4A   D0 0B                  DW   interpret   
2D4C   08 0F                  DW   exit_forth   
2D4E                          ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
2D4E   CD 1F 0A               CALL   printNum   
2D51                          ;*Macro unroll:  loadWord H,L, B,C
2D51   69                     LD   L,C   
2D52   60                     LD   H,B   
2D53   69                     LD   L,C   
2D54                          ;*Macro unroll:  ppop0 B,C
2D54   DD 2B                  DEC   IX   
2D56   DD 46 00               LD   B,(IX+0)   
2D59   DD 2B                  DEC   IX   
2D5B   DD 4E 00               LD   C,(IX+0)   
2D5E                          ;*Macro unroll:  CMP16 10
2D5E   11 0A 00               LD   DE,10   
2D61   B7                     OR   A   
2D62   ED 52                  SBC   HL,DE   
2D64                          ;*Macro unroll:  checkZeroWord H,L
2D64   7D                     LD   A,L   
2D65   B4                     OR   H   
2D66   CA 8C 2D               JP   z,tf_doneM_2582S14   
2D69   11 7B 10               LD   DE,FAILED   
2D6C   CD E3 11               CALL   printPStr   
2D6F   11 79 2D               LD   DE,te_failM_2582S14   
2D72   CD E3 11               CALL   printPStr   
2D75   76                     HALT      
2D76                          ;*Macro unroll:  _skip
2D76   C3 76 2D               JP   $   
2D79                          ;*Macro unroll:  STRUC_PUSH $
2D79                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D79                STRUC_12:   .SET   STRUC_11   
2D79                STRUC_11:   .SET   STRUC_10   
2D79                STRUC_10:   .SET   STRUC_9   
2D79                STRUC_9:   .SET   STRUC_8   
2D79                STRUC_8:   .SET   STRUC_7   
2D79                STRUC_7:   .SET   STRUC_6   
2D79                STRUC_6:   .SET   STRUC_5   
2D79                STRUC_5:   .SET   STRUC_4   
2D79                STRUC_4:   .SET   STRUC_3   
2D79                STRUC_3:   .SET   STRUC_2   
2D79                STRUC_2:   .SET   STRUC_TOP   
2D79                STRUC_TOP:   .SET   $   
2D79                TE_FAILM_2582S14:      
2D79   12 31 30 20 61 62 73 20 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs 10 to be 10"   
2D8C                          ;*Macro unroll:  _endskip
2D8C                          ;*Macro unroll:  STRUC_FWD
2D8C                CUR_ADR:   .SET   $   
2D77                          .ORG   STRUC_TOP - 2   
2D77   8C 2D                  DW   CUR_ADR   
2D8C                          .ORG   CUR_ADR   
2D8C                          ;*Macro unroll:  STRUC_POP
2D8C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D8C                STRUC_TOP:   .SET   STRUC_2   
2D8C                STRUC_2:   .SET   STRUC_3   
2D8C                STRUC_3:   .SET   STRUC_4   
2D8C                STRUC_4:   .SET   STRUC_5   
2D8C                STRUC_5:   .SET   STRUC_6   
2D8C                STRUC_6:   .SET   STRUC_7   
2D8C                STRUC_7:   .SET   STRUC_8   
2D8C                STRUC_8:   .SET   STRUC_9   
2D8C                STRUC_9:   .SET   STRUC_10   
2D8C                STRUC_10:   .SET   STRUC_11   
2D8C                STRUC_11:   .SET   STRUC_12   
2D8C                STRUC_12:   .SET   0   
2D8C                TF_DONEM_2582S14:      
2D8C                             ; TEST_SET_TEXT "100 buffer: xvar"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar pack"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar count dup"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "str len = 3"
2D8C                             ; TEST_SET_TEXT "type"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "x1"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
2D8C                             ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "select"
2D8C                             ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 5, "Loop until limit < 5"
2D8C                             ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "0 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "define: q 0 = 200"
2D8C                             ; TEST_SET_TEXT "1 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 100, "define: q 1 = 100"
2D8C                             ; rst $08
2D8C                             ; dw litstr
2D8C                             ; .pstr "Expected parse error"
2D8C                             ; dw type
2D8C                             ; dw exit_forth
2D8C                             ; ppushValue 999
2D8C                             ; TEST_SET_TEXT "$$123"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 999, "interpret $$123"
2D8C                          ;*Macro unroll:  PRINT_STR DONE
2D8C                          ;*Macro unroll:  ppush0 D,E
2D8C   DD 73 00               LD   (IX+0),E   
2D8F   DD 23                  INC   IX   
2D91   DD 72 00               LD   (IX+0),D   
2D94   DD 23                  INC   IX   
2D96   11 70 10               LD   DE,DONE   
2D99   CD E3 11               CALL   printPStr   
2D9C                          ;*Macro unroll:  ppop0 D,E
2D9C   DD 2B                  DEC   IX   
2D9E   DD 56 00               LD   D,(IX+0)   
2DA1   DD 2B                  DEC   IX   
2DA3   DD 5E 00               LD   E,(IX+0)   
2DA6   76                     HALT      
2DA7                          ENDIF      
2DA7                          DS   RET_STACK_SIZE   ; return stack size
2EA7                RET_STACK:      ; return stack, grows down
2EA7                RPP:         ; RP0 grows down (into TIBB)
2EA7                DATA_STACK:      
2EA7                          DS   DATA_STACK_SIZE   ; TODO: change remove double data stack size
2FA7                SPP:         ; SP0 (should) grow down
2FA7                          ALIGN   $100   
3000                SERBUF:   DS   SER_BUFSIZE   
303F   00 00        SERINPTR:   DW   0   
3041   00 00        SERRDPTR:   DW   0   
3043   00 00        SERBUFUSED:   DW   0   
3045   00 00        LINEBUFSTART:   DW   0   
3047   00 00        LINEBUFSIZE:   DW   0   
3049   00 00        CURRKEY:   DW   0   
304B   00 00        LINEBUFTOP:   DW   0   
304D                LINEBUF:   DS   LINE_BUFSIZE   
30CD                WORDBUF:   DS   64   
310D                WORDBUF2:   DS   64   
314D                VAR_PAD:   DS   PAD_SIZE   
324D   00 00        EXITADDR:   DW   0   
324F   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
3251   00 00        VAR_HERE:   DW   0   
3253   00 00        VAR_INTP_STOP:   DW   0   
3255   00 00        VAR_STATE:   DW   0   
3257   00 00        VAR_NESTING:   DW   0   
3259   00 00        VAR_SP0:   DW   0   ;PAR_STACK
325B   00 00        VAR_BASE:   DW   0   
325D   00 00        VAR_LATEST_STR:   DW   0   
325F   00 00        VAR_LATEST:   DW   0   
3261                          IF   TESTMODE   
3261                             ; used for mocking getc
3261   00 00        CHAR_POINTER:   DW   0   
3263                          ENDIF      
3263                START_USER:      ; user allocated data starts here


TESTMODE:           0001 DEFINED AT LINE 3
MEM_SIZE:           10000 DEFINED AT LINE 1 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
ROM_SIZE:           2000 DEFINED AT LINE 2 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 3 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
BM:                 0000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
EM:                 10000 DEFINED AT LINE 6 IN constants.z80
START_ROM:          0000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 14
END_ROM:            2000 DEFINED AT LINE 9 IN constants.z80
START_RAM:          2000 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
                    > USED AT LINE 63
END_RAM:            10000 DEFINED AT LINE 12 IN constants.z80
RET_STACK_SIZE:     0100 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 2 IN variables.z80
DATA_STACK_SIZE:    0100 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 7 IN variables.z80
PAD_SIZE:           0100 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 35 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 11 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 52 IN core-serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 20 IN constants.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 16 IN core-serial.z80
                    > USED AT LINE 19 IN variables.z80
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 26
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
MSK_HIDDEN:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 104 IN core-compiler.z80
                    > USED AT LINE 26
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
MSK_LENGTH:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 26
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
                    > USED AT LINE 48 IN core-compiler.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 8 IN core-extra.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN core-serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 23 IN core-kernel.z80
                    > USED AT LINE 19 IN core-serial.z80
LINK:               14B1 DEFINED AT LINE 9
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
STRUC_COUNT:        2D8B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        14AC DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
CPL_COUNT:          146F DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 15
RST08:              0008 DEFINED AT LINE 20
RST38:              0038 DEFINED AT LINE 24
RST66:              0066 DEFINED AT LINE 28
START:              0067 DEFINED AT LINE 31
                    > USED AT LINE 17
HEADER_ZLESS:       0073 DEFINED AT LINE 6
                    > USED AT LINE 9
ZLESS:              0078 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 190 IN core-alu.z80
                    > USED AT LINE 194 IN core-alu.z80
                    > USED AT LINE 236 IN core-alu.z80
HEADER_ANDD:        0080 DEFINED AT LINE 6
                    > USED AT LINE 9
ANDD:               0086 DEFINED AT LINE 13
                    > USED AT LINE 5 IN core-extra.z80
                    > USED AT LINE 18 IN core-extra.z80
                    > USED AT LINE 29 IN core-extra.z80
HEADER_ORR:         0099 DEFINED AT LINE 6
                    > USED AT LINE 9
ORR:                009E DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-interpreter.z80
                    > USED AT LINE 210 IN core-interpreter.z80
HEADER_XORR:        00B1 DEFINED AT LINE 6
                    > USED AT LINE 9
XORR:               00B7 DEFINED AT LINE 13
                    > USED AT LINE 82 IN core-alu.z80
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 189 IN core-alu.z80
                    > USED AT LINE 235 IN core-alu.z80
HEADER_PLUS:        00CA DEFINED AT LINE 6
                    > USED AT LINE 9
PLUS:               00CE DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 160 IN core-alu.z80
                    > USED AT LINE 19 IN core-interpreter.z80
HEADER_INVER:       00DE DEFINED AT LINE 6
                    > USED AT LINE 9
INVER:              00E4 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 63 IN core-alu.z80
HEADER_NEGAT:       00ED DEFINED AT LINE 6
                    > USED AT LINE 9
NEGAT:              00F6 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 75 IN core-alu.z80
                    > USED AT LINE 156 IN core-alu.z80
                    > USED AT LINE 202 IN core-alu.z80
                    > USED AT LINE 207 IN core-alu.z80
                    > USED AT LINE 238 IN core-alu.z80
HEADER_DNEGA:       00FD DEFINED AT LINE 6
                    > USED AT LINE 9
DNEGA:              0107 DEFINED AT LINE 13
HEADER_SUBB:        011A DEFINED AT LINE 6
                    > USED AT LINE 9
SUBB:               011E DEFINED AT LINE 13
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 6 IN core-utilities.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_ABS:         0125 DEFINED AT LINE 6
                    > USED AT LINE 9
ABS:                012B DEFINED AT LINE 13
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
ABS1:               0136 DEFINED AT LINE 76 IN core-alu.z80
HEADER_EQUAL:       0138 DEFINED AT LINE 6
                    > USED AT LINE 9
EQUAL:              013C DEFINED AT LINE 13
EQU1:               0149 DEFINED AT LINE 85 IN core-alu.z80
                    > USED AT LINE 83 IN core-alu.z80
HEADER_ULESS:       014F DEFINED AT LINE 6
                    > USED AT LINE 9
ULESS:              0154 DEFINED AT LINE 13
                    > USED AT LINE 154 IN core-alu.z80
ULES1:              0167 DEFINED AT LINE 95 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
HEADER_LESS:        016D DEFINED AT LINE 6
                    > USED AT LINE 9
LESS:               0171 DEFINED AT LINE 13
                    > USED AT LINE 111 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
LESS1:              0182 DEFINED AT LINE 104 IN core-alu.z80
HEADER_GREATERTHAN: 0188 DEFINED AT LINE 6
                    > USED AT LINE 9
GREATERTHAN:        018C DEFINED AT LINE 13
HEADER_MAX:         01A4 DEFINED AT LINE 6
                    > USED AT LINE 9
MAX:                01AA DEFINED AT LINE 13
MAX1:               01B5 DEFINED AT LINE 118 IN core-alu.z80
HEADER_MIN:         01B9 DEFINED AT LINE 6
                    > USED AT LINE 9
MIN:                01BF DEFINED AT LINE 13
MIN1:               01CC DEFINED AT LINE 127 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
HEADER_WITHI:       01D0 DEFINED AT LINE 6
                    > USED AT LINE 9
WITHI:              01D9 DEFINED AT LINE 13
HEADER_UPLUS:       01E8 DEFINED AT LINE 6
                    > USED AT LINE 9
UPLUS:              01EE DEFINED AT LINE 13
                    > USED AT LINE 162 IN core-alu.z80
UMP2:               0208 DEFINED AT LINE 145 IN core-alu.z80
UMP1:               0209 DEFINED AT LINE 147 IN core-alu.z80
                    > USED AT LINE 144 IN core-alu.z80
HEADER_UMMOD:       020C DEFINED AT LINE 6
                    > USED AT LINE 9
UMMOD:              0215 DEFINED AT LINE 13
UMM1:               0226 DEFINED AT LINE 157 IN core-alu.z80
                    > USED AT LINE 170 IN core-alu.z80
UMM2:               025C DEFINED AT LINE 166 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
UMM3:               025E DEFINED AT LINE 168 IN core-alu.z80
                    > USED AT LINE 165 IN core-alu.z80
UMM4:               026A DEFINED AT LINE 172 IN core-alu.z80
                    > USED AT LINE 155 IN core-alu.z80
HEADER_USLASHMOD:   0276 DEFINED AT LINE 6
                    > USED AT LINE 9
USLASHMOD:          027E DEFINED AT LINE 13
                    > USED AT LINE 198 IN core-alu.z80
HEADER_SLASHMOD:    029A DEFINED AT LINE 6
                    > USED AT LINE 9
SLASHMOD:           02A1 DEFINED AT LINE 13
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 217 IN core-alu.z80
CUR_ADR:            2D8C DEFINED AT LINE 63
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
HEADER_MOD:         02D5 DEFINED AT LINE 6
                    > USED AT LINE 9
MOD:                02DB DEFINED AT LINE 13
HEADER_SLASH:       02E2 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASH:              02E6 DEFINED AT LINE 13
HEADER_USTAR:       02EF DEFINED AT LINE 6
                    > USED AT LINE 9
USTAR:              02F4 DEFINED AT LINE 13
                    > USED AT LINE 233 IN core-alu.z80
HEADER_STAR:        030E DEFINED AT LINE 6
                    > USED AT LINE 9
STAR:               0312 DEFINED AT LINE 13
NEGATENUM:          0332 DEFINED AT LINE 247 IN core-alu.z80
                    > USED AT LINE 47 IN core-format.z80
                    > USED AT LINE 165 IN core-format.z80
DIVIDEWORDBYBYTE:   033A DEFINED AT LINE 264 IN core-alu.z80
                    > USED AT LINE 53 IN core-format.z80
L_M_843S267:        0342 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_846S270:        034A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_851S275:        0356 DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   035B DEFINED AT LINE 290 IN core-alu.z80
                    > USED AT LINE 181 IN core-alu.z80
L_M_869S295:        0367 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_873S299:        0372 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_883S309:        0381 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_887S313:        038C DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   0395 DEFINED AT LINE 332 IN core-alu.z80
                    > USED AT LINE 224 IN core-alu.z80
                    > USED AT LINE 123 IN core-format.z80
                    > USED AT LINE 153 IN core-format.z80
L_M_908S336:        03A0 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_913S341:        03AE DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_CELLP:       03B7 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLP:              03BF DEFINED AT LINE 13
HEADER_CELLM:       03C2 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLM:              03CA DEFINED AT LINE 13
HEADER_CELLS:       03CD DEFINED AT LINE 6
                    > USED AT LINE 9
CELLS:              03D5 DEFINED AT LINE 13
HEADER_ZEQUAL:      03D8 DEFINED AT LINE 6
                    > USED AT LINE 9
ZEQUAL:             03DD DEFINED AT LINE 13
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 161 IN core-compiler.z80
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 187 IN core-interpreter.z80
                    > USED AT LINE 206 IN core-interpreter.z80
                    > USED AT LINE 91
L_M_931S363:        03E5 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ZNEQU:       03EC DEFINED AT LINE 6
                    > USED AT LINE 9
ZNEQU:              03F2 DEFINED AT LINE 13
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 174 IN core-interpreter.z80
L_M_938S371:        03FA DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ONEP:        0400 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEP:               0405 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_ONEM:        0409 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEM:               040E DEFINED AT LINE 13
HEADER_TWOP:        0412 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOP:               0417 DEFINED AT LINE 13
                    > USED AT LINE 351 IN core-alu.z80
HEADER_TWOM:        041C DEFINED AT LINE 6
                    > USED AT LINE 9
TWOM:               0421 DEFINED AT LINE 13
                    > USED AT LINE 354 IN core-alu.z80
HEADER_TWOST:       0426 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOST:              042B DEFINED AT LINE 13
                    > USED AT LINE 358 IN core-alu.z80
HEADER_TWOSLASH:    0432 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSLASH:           0437 DEFINED AT LINE 13
HEADER_COLON:       043E DEFINED AT LINE 6
                    > USED AT LINE 9
COLON:              0442 DEFINED AT LINE 13
HEADER_SEMICOLON:   0466 DEFINED AT LINE 6
                    > USED AT LINE 9
SEMICOLON:          046A DEFINED AT LINE 13
HEADER_COLONNONAME: 047E DEFINED AT LINE 6
                    > USED AT LINE 9
COLONNONAME:        0488 DEFINED AT LINE 13
HEADER_VARIABLE:    049A DEFINED AT LINE 6
                    > USED AT LINE 9
VARIABLE:           04A5 DEFINED AT LINE 13
HEADER_BUFFERCOLON: 04BB DEFINED AT LINE 6
                    > USED AT LINE 9
BUFFERCOLON:        04C5 DEFINED AT LINE 13
HEADER_CREATE:      04D5 DEFINED AT LINE 6
                    > USED AT LINE 9
CREATE:             04DE DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-compiler.z80
                    > USED AT LINE 69 IN core-compiler.z80
XCREATE:            0508 DEFINED AT LINE 51 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
HEADER_DOES:        0510 DEFINED AT LINE 6
                    > USED AT LINE 9
DOES:               0518 DEFINED AT LINE 13
HEADER_CONSTANT:    053E DEFINED AT LINE 6
                    > USED AT LINE 9
CONSTANT:           0549 DEFINED AT LINE 13
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
HEADER_TICK:        055A DEFINED AT LINE 6
                    > USED AT LINE 9
TICK:               055E DEFINED AT LINE 13
HEADER_IMMEDIATE:   0578 DEFINED AT LINE 6
                    > USED AT LINE 9
IMMEDIATE:          0584 DEFINED AT LINE 13
HEADER_FIND:        0590 DEFINED AT LINE 6
                    > USED AT LINE 9
FIND:               0597 DEFINED AT LINE 13
HEADER_HIDDEN:      05A9 DEFINED AT LINE 6
                    > USED AT LINE 9
HIDDEN:             05B2 DEFINED AT LINE 13
HEADER_LBRAC:       05C7 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRAC:              05CB DEFINED AT LINE 13
                    > USED AT LINE 16 IN core-compiler.z80
HEADER_RBRAC:       05D4 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRAC:              05D8 DEFINED AT LINE 13
                    > USED AT LINE 9 IN core-compiler.z80
                    > USED AT LINE 23 IN core-compiler.z80
DODOES:             05E1 DEFINED AT LINE 118 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
XDOES:              05F1 DEFINED AT LINE 125 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
HEADER_POSTPONE:    060B DEFINED AT LINE 6
                    > USED AT LINE 9
POSTPONE:           0616 DEFINED AT LINE 13
POSTPONETOKEN:      0634 DEFINED AT LINE 145 IN core-compiler.z80
                    > USED AT LINE 141 IN core-compiler.z80
POSTPONEWORD:       0650 DEFINED AT LINE 156 IN core-compiler.z80
                    > USED AT LINE 150 IN core-compiler.z80
POSTPONELITERAL:    068C DEFINED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
HEADER_IF:          06BD DEFINED AT LINE 6
                    > USED AT LINE 9
IF:                 06C2 DEFINED AT LINE 13
HEADER_ELSE:        06D8 DEFINED AT LINE 6
                    > USED AT LINE 9
ELSE:               06DF DEFINED AT LINE 13
HEADER_ENDIF:       06F9 DEFINED AT LINE 6
                    > USED AT LINE 9
ENDIF:              0701 DEFINED AT LINE 13
XENDIF:             070B DEFINED AT LINE 23 IN core-control.z80
                    > USED AT LINE 14 IN core-control.z80
                    > USED AT LINE 19 IN core-control.z80
HEADER_BEGIN:       071F DEFINED AT LINE 6
                    > USED AT LINE 9
BEGIN:              0727 DEFINED AT LINE 13
HEADER_WHILE:       0733 DEFINED AT LINE 6
                    > USED AT LINE 9
WHILE:              073B DEFINED AT LINE 13
HEADER_REPEAT:      0751 DEFINED AT LINE 6
                    > USED AT LINE 9
REPEAT:             075A DEFINED AT LINE 13
HEADER_QBRAN:       0780 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN:              078A DEFINED AT LINE 13
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 91
HEADER_BRAN:        079E DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN:               07A7 DEFINED AT LINE 13
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 60 IN core-control.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
HEADER_QBRAN1:      07B0 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN1:             07BB DEFINED AT LINE 13
                    > USED AT LINE 83 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
                    > USED AT LINE 125 IN core-alu.z80
                    > USED AT LINE 155 IN core-alu.z80
                    > USED AT LINE 163 IN core-alu.z80
HEADER_BRAN1:       07CF DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN1:              07D9 DEFINED AT LINE 13
                    > USED AT LINE 165 IN core-alu.z80
                    > USED AT LINE 79 IN core-control.z80
HEADER_DONXT:       07E1 DEFINED AT LINE 6
                    > USED AT LINE 9
DONXT:              07E8 DEFINED AT LINE 13
                    > USED AT LINE 170 IN core-alu.z80
DECHILO:            07FD DEFINED AT LINE 113 IN core-control.z80
                    > USED AT LINE 106 IN core-control.z80
DECLOW:             07FF DEFINED AT LINE 116 IN core-control.z80
                    > USED AT LINE 102 IN core-control.z80
HEADER_VERSION:     0808 DEFINED AT LINE 6
                    > USED AT LINE 9
VERSION:            0812 DEFINED AT LINE 13
HEADER_RZ:          0822 DEFINED AT LINE 6
                    > USED AT LINE 9
RZ:                 0827 DEFINED AT LINE 13
HEADER___MSK_IMMED: 0837 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_HIDDEN: 0853 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_LENGTH: 0870 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER_TRUE:        088D DEFINED AT LINE 6
                    > USED AT LINE 9
TRUE:               0894 DEFINED AT LINE 13
HEADER_FALSE:       08A4 DEFINED AT LINE 6
                    > USED AT LINE 9
FALSE:              08AC DEFINED AT LINE 13
HEADER_PAD:         08BC DEFINED AT LINE 6
                    > USED AT LINE 9
PAD:                08C2 DEFINED AT LINE 13
HEADER_HERE:        08D2 DEFINED AT LINE 6
                    > USED AT LINE 9
HERE:               08D9 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 48 IN core-memory.z80
HEADER_INTP_STOP:   08E9 DEFINED AT LINE 6
                    > USED AT LINE 9
INTP_STOP:          08F5 DEFINED AT LINE 13
HEADER_STATE:       0905 DEFINED AT LINE 6
                    > USED AT LINE 9
STATE:              090D DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
HEADER_NESTING:     091D DEFINED AT LINE 6
                    > USED AT LINE 9
NESTING:            0927 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
HEADER_SP0:         0937 DEFINED AT LINE 6
                    > USED AT LINE 9
SP0:                093D DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
HEADER_BASE:        094D DEFINED AT LINE 6
                    > USED AT LINE 9
BASE:               0954 DEFINED AT LINE 13
HEADER_LATESTSTR:   0964 DEFINED AT LINE 6
                    > USED AT LINE 9
LATESTSTR:          0970 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 33 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
HEADER_LBRACE:      0980 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRACE:             0984 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-control.z80
                    > USED AT LINE 34 IN core-control.z80
HEADER_RBRACE:      09A8 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACE:             09AC DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-extra.z80
HEADER_RBRACEEXEC:  09CC DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACEEXEC:         09D4 DEFINED AT LINE 13
                    > USED AT LINE 20 IN core-control.z80
                    > USED AT LINE 53 IN core-control.z80
HEADER_DOT:         09F6 DEFINED AT LINE 6
                    > USED AT LINE 9
DOT:                09FA DEFINED AT LINE 13
PRINTNUM:           0A1F DEFINED AT LINE 18 IN core-format.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
FORMATNUM:          0A38 DEFINED AT LINE 39 IN core-format.z80
                    > USED AT LINE 9 IN core-format.z80
                    > USED AT LINE 26 IN core-format.z80
L_M_1329S42:        0A40 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1337S51:        0A4E DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1346S60:        0A62 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1350S64:        0A6D DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           0A7D DEFINED AT LINE 87 IN core-format.z80
                    > USED AT LINE 174 IN core-format.z80
L_M_1378S97:        0A91 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1388S107:       0AA3 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1394S113:       0AB1 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1410S130:       0ACC DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1414S134:       0AD8 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0B03 DEFINED AT LINE 160 IN core-format.z80
                    > USED AT LINE 132 IN core-format.z80
L_M_1440S163:       0B0C DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_NUMBER:      0B15 DEFINED AT LINE 6
                    > USED AT LINE 9
NUMBER:             0B1E DEFINED AT LINE 13
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 206 IN core-interpreter.z80
HEADER_DECIMAL:     0B38 DEFINED AT LINE 6
                    > USED AT LINE 9
DECIMAL:            0B42 DEFINED AT LINE 13
HEADER_HEX:         0B50 DEFINED AT LINE 6
                    > USED AT LINE 9
HEX:                0B56 DEFINED AT LINE 13
HEADER_QUIT:        0B64 DEFINED AT LINE 6
                    > USED AT LINE 9
QUIT:               0B6B DEFINED AT LINE 13
HEADER_WORD:        0B79 DEFINED AT LINE 6
                    > USED AT LINE 9
WORD:               0B80 DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_TCFA:        0B90 DEFINED AT LINE 6
                    > USED AT LINE 9
TCFA:               0B97 DEFINED AT LINE 13
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 189 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_EXECUTE:     0BAD DEFINED AT LINE 6
                    > USED AT LINE 9
EXECUTE:            0BB7 DEFINED AT LINE 13
                    > USED AT LINE 33 IN core-extra.z80
                    > USED AT LINE 196 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_INTERPRET:   0BC4 DEFINED AT LINE 6
                    > USED AT LINE 9
INTERPRET:          0BD0 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-interpreter.z80
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
LOOKUP:             0BFB DEFINED AT LINE 47 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-compiler.z80
L_M_1505S49:        0C04 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1517S65:        0C14 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1526S76:        0C23 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_XWORD:       0C30 DEFINED AT LINE 6
                    > USED AT LINE 9
XWORD:              0C38 DEFINED AT LINE 13
                    > USED AT LINE 11 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-strings.z80
XWORDSKIP:          0C41 DEFINED AT LINE 97 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-interpreter.z80
L_M_1550S103:       0C7C DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1552S106:       0C84 DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1554S109:       0C8C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1560S116:       0C9B DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1561S117:       0CA0 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1564S120:       0CAB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1571S128:       0CBD DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1574S132:       0CC8 DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0CD5 DEFINED AT LINE 144 IN core-interpreter.z80
                    > USED AT LINE 94 IN core-interpreter.z80
L_M_1590S151:       0D01 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1594S155:       0D09 DEFINED AT LINE 73
                    > USED AT LINE 70
INTERPTOKEN:        0D1F DEFINED AT LINE 171 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-interpreter.z80
INTERPWORD:         0D3B DEFINED AT LINE 182 IN core-interpreter.z80
                    > USED AT LINE 176 IN core-interpreter.z80
INTERPLITERAL:      0D7F DEFINED AT LINE 203 IN core-interpreter.z80
                    > USED AT LINE 178 IN core-interpreter.z80
NESTPLUS:           0DBE DEFINED AT LINE 223 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-extra.z80
NESTMINUS:          0DC8 DEFINED AT LINE 229 IN core-interpreter.z80
                    > USED AT LINE 15 IN core-extra.z80
HEADER_TYPE:        0DD2 DEFINED AT LINE 6
                    > USED AT LINE 9
TYPE:               0DD9 DEFINED AT LINE 13
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 219 IN core-interpreter.z80
                    > USED AT LINE 54 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
HEADER_CR:          0DF3 DEFINED AT LINE 6
                    > USED AT LINE 9
CR:                 0DF8 DEFINED AT LINE 13
HEADER_ACCEPT:      0DFE DEFINED AT LINE 6
                    > USED AT LINE 9
ACCEPT:             0E07 DEFINED AT LINE 13
HEADER_KEY:         0E23 DEFINED AT LINE 6
                    > USED AT LINE 9
KEY:                0E29 DEFINED AT LINE 13
HEADER_EMIT:        0E32 DEFINED AT LINE 6
                    > USED AT LINE 9
EMIT:               0E39 DEFINED AT LINE 13
HEADER_QKEY:        0E4A DEFINED AT LINE 6
                    > USED AT LINE 9
QKEY:               0E51 DEFINED AT LINE 13
L_M_1695S33:        0E67 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_BL:          0E6D DEFINED AT LINE 6
                    > USED AT LINE 9
BL:                 0E72 DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_PRINT:       0E7C DEFINED AT LINE 6
                    > USED AT LINE 9
PRINT:              0E84 DEFINED AT LINE 13
HEADER_DOTQUOTE:    0E96 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTQUOTE:           0E9B DEFINED AT LINE 13
INITFORTH:          0EB9 DEFINED AT LINE 1 IN core-kernel.z80
                    > USED AT LINE 34
ENTER:              0EF4 DEFINED AT LINE 29 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 3 IN core-kernel.z80
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
ENTER1:             0EF5 DEFINED AT LINE 31 IN core-kernel.z80
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
FORTH:              0EFC DEFINED AT LINE 40 IN core-kernel.z80
EXIT:               0F05 DEFINED AT LINE 47 IN core-kernel.z80
                    > USED AT LINE 77 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
EXIT_FORTH:         0F08 DEFINED AT LINE 51 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
HEADER_NOOP:        0F09 DEFINED AT LINE 6
                    > USED AT LINE 9
NOOP:               0F10 DEFINED AT LINE 13
HEADER_STORE:       0F13 DEFINED AT LINE 6
                    > USED AT LINE 9
STORE:              0F17 DEFINED AT LINE 13
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 33 IN core-strings.z80
HEADER_FETCH:       0F34 DEFINED AT LINE 6
                    > USED AT LINE 9
FETCH:              0F38 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_CSTORE:      0F41 DEFINED AT LINE 6
                    > USED AT LINE 9
CSTORE:             0F46 DEFINED AT LINE 13
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
HEADER_CFETCH:      0F60 DEFINED AT LINE 6
                    > USED AT LINE 9
CFETCH:             0F65 DEFINED AT LINE 13
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_RSPSTORE:    0F6C DEFINED AT LINE 6
                    > USED AT LINE 9
RSPSTORE:           0F73 DEFINED AT LINE 13
HEADER_SPFETCH:     0F83 DEFINED AT LINE 6
                    > USED AT LINE 9
SPFETCH:            0F89 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
HEADER_SPSTORE:     0F9B DEFINED AT LINE 6
                    > USED AT LINE 9
SPSTORE:            0FA1 DEFINED AT LINE 13
HEADER_ALLOT:       0FB3 DEFINED AT LINE 6
                    > USED AT LINE 9
ALLOT:              0FBB DEFINED AT LINE 13
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 40 IN core-strings.z80
HEADER_ADDSTORE:    0FC5 DEFINED AT LINE 6
                    > USED AT LINE 9
ADDSTORE:           0FCA DEFINED AT LINE 13
                    > USED AT LINE 48 IN core-memory.z80
HEADER_COMMA:       0FEA DEFINED AT LINE 6
                    > USED AT LINE 9
COMMA:              0FEE DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 194 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
HEADER_CCOMMA:      1005 DEFINED AT LINE 6
                    > USED AT LINE 9
CCOMMA:             100A DEFINED AT LINE 13
HEADER_RAT:         1033 DEFINED AT LINE 6
                    > USED AT LINE 9
RAT:                1038 DEFINED AT LINE 13
                    > USED AT LINE 161 IN core-alu.z80
TXT_INTRO:          1042 DEFINED AT LINE 1 IN core-messages.z80
TXT_NEWLINE:        1068 DEFINED AT LINE 3 IN core-messages.z80
                    > USED AT LINE 267 IN core-serial.z80
TXT_PROMPT:         106B DEFINED AT LINE 4 IN core-messages.z80
                    > USED AT LINE 52
DONE:               1070 DEFINED AT LINE 7 IN core-messages.z80
                    > USED AT LINE 52
FAILED:             107B DEFINED AT LINE 8 IN core-messages.z80
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
INITSERIAL:         1086 DEFINED AT LINE 3 IN core-serial.z80
                    > USED AT LINE 33
SERIALIN:           10AF DEFINED AT LINE 25 IN core-serial.z80
                    > USED AT LINE 25
L_M_1866S31:        10BB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1871S36:        10C9 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1878S43:        10DA DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1888S53:        10F1 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               10F9 DEFINED AT LINE 69 IN core-serial.z80
                    > USED AT LINE 146 IN core-serial.z80
PUTC:               1104 DEFINED AT LINE 115 IN core-serial.z80
                    > USED AT LINE 25 IN core-io.z80
                    > USED AT LINE 154 IN core-serial.z80
                    > USED AT LINE 157 IN core-serial.z80
                    > USED AT LINE 165 IN core-serial.z80
                    > USED AT LINE 190 IN core-serial.z80
                    > USED AT LINE 275 IN core-serial.z80
                    > USED AT LINE 43 IN core-utilities.z80
L_M_1946S117:       110A DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         1118 DEFINED AT LINE 126 IN core-serial.z80
                    > USED AT LINE 31 IN core-io.z80
GETLINE:            111E DEFINED AT LINE 137 IN core-serial.z80
                    > USED AT LINE 14 IN core-io.z80
                    > USED AT LINE 215 IN core-serial.z80
L_M_1970S144:       1144 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1971S145:       1149 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1974S148:       1154 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1976S150:       115C DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1990S164:       1179 DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       118B DEFINED AT LINE 177 IN core-serial.z80
                    > USED AT LINE 169 IN core-serial.z80
                    > USED AT LINE 171 IN core-serial.z80
                    > USED AT LINE 174 IN core-serial.z80
PRINTROUTINE:       119A DEFINED AT LINE 187 IN core-serial.z80
                    > USED AT LINE 244 IN core-serial.z80
                    > USED AT LINE 259 IN core-serial.z80
L_M_2012S188:       119F DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             11AE DEFINED AT LINE 204 IN core-serial.z80
                    > USED AT LINE 104 IN core-interpreter.z80
                    > USED AT LINE 118 IN core-interpreter.z80
                    > USED AT LINE 159 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-io.z80
L_M_2034S212:       11C1 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          11E3 DEFINED AT LINE 236 IN core-serial.z80
                    > USED AT LINE 45 IN core-io.z80
                    > USED AT LINE 53
                    > USED AT LINE 268 IN core-serial.z80
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 53
PRINTSTR:           11F2 DEFINED AT LINE 255 IN core-serial.z80
                    > USED AT LINE 10 IN core-format.z80
                    > USED AT LINE 27 IN core-format.z80
                    > USED AT LINE 3 IN core-io.z80
                    > USED AT LINE 41 IN core-utilities.z80
PRINTCR:            11FC DEFINED AT LINE 265 IN core-serial.z80
                    > USED AT LINE 8 IN core-io.z80
                    > USED AT LINE 184 IN core-serial.z80
                    > USED AT LINE 49 IN core-utilities.z80
PRINTSPACE:         1205 DEFINED AT LINE 272 IN core-serial.z80
                    > USED AT LINE 11 IN core-format.z80
                    > USED AT LINE 28 IN core-format.z80
                    > USED AT LINE 155 IN core-serial.z80
                    > USED AT LINE 42 IN core-utilities.z80
HEADER_LIT:         120D DEFINED AT LINE 6
                    > USED AT LINE 9
LIT:                1213 DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-alu.z80
                    > USED AT LINE 64 IN core-alu.z80
                    > USED AT LINE 84 IN core-alu.z80
                    > USED AT LINE 86 IN core-alu.z80
                    > USED AT LINE 156 IN core-alu.z80
                    > USED AT LINE 174 IN core-alu.z80
                    > USED AT LINE 5 IN core-compiler.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 28 IN core-compiler.z80
                    > USED AT LINE 48 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 64 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 12 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 42 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 8 IN core-extra.z80
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 182 IN core-format.z80
                    > USED AT LINE 187 IN core-format.z80
                    > USED AT LINE 9 IN core-interpreter.z80
                    > USED AT LINE 16 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 40 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 24 IN core-strings.z80
                    > USED AT LINE 25 IN core-strings.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 29 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
                    > USED AT LINE 37 IN core-strings.z80
                    > USED AT LINE 38 IN core-strings.z80
                    > USED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 16 IN core-utilities.z80
HEADER_ROT:         1225 DEFINED AT LINE 6
                    > USED AT LINE 9
ROT:                122B DEFINED AT LINE 13
                    > USED AT LINE 200 IN core-alu.z80
HEADER_NROT:        1258 DEFINED AT LINE 6
                    > USED AT LINE 9
NROT:               125F DEFINED AT LINE 13
                    > USED AT LINE 191 IN core-alu.z80
                    > USED AT LINE 195 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 234 IN core-alu.z80
HEADER_DUPP:        128E DEFINED AT LINE 6
                    > USED AT LINE 9
DUPP:               1294 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 158 IN core-alu.z80
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 25 IN core-control.z80
                    > USED AT LINE 50 IN core-control.z80
                    > USED AT LINE 31 IN core-extra.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 174 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 11 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_SWAP:        12A1 DEFINED AT LINE 6
                    > USED AT LINE 9
SWAP:               12A8 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 117 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 126 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 197 IN core-alu.z80
                    > USED AT LINE 199 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
                    > USED AT LINE 217 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 13 IN core-control.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 48 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_DROP:        12C1 DEFINED AT LINE 6
                    > USED AT LINE 9
DROP:               12C8 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 119 IN core-alu.z80
                    > USED AT LINE 128 IN core-alu.z80
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 167 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 173 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 233 IN core-alu.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 173 IN core-compiler.z80
                    > USED AT LINE 179 IN core-compiler.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 205 IN core-interpreter.z80
                    > USED AT LINE 216 IN core-interpreter.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 18 IN core-utilities.z80
HEADER_OVER:        12D5 DEFINED AT LINE 6
                    > USED AT LINE 9
OVER:               12DC DEFINED AT LINE 13
                    > USED AT LINE 134 IN core-alu.z80
                    > USED AT LINE 188 IN core-alu.z80
                    > USED AT LINE 188 IN core-alu.z80
                    > USED AT LINE 193 IN core-alu.z80
                    > USED AT LINE 231 IN core-alu.z80
                    > USED AT LINE 231 IN core-alu.z80
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 4 IN core-strings.z80
HEADER_TOR:         12FF DEFINED AT LINE 6
                    > USED AT LINE 9
TOR:                1304 DEFINED AT LINE 13
                    > USED AT LINE 63 IN core-alu.z80
                    > USED AT LINE 158 IN core-alu.z80
                    > USED AT LINE 159 IN core-alu.z80
                    > USED AT LINE 159 IN core-alu.z80
                    > USED AT LINE 164 IN core-alu.z80
                    > USED AT LINE 5 IN core-strings.z80
HEADER_RFROM:       1314 DEFINED AT LINE 6
                    > USED AT LINE 9
RFROM:              1319 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 135 IN core-alu.z80
                    > USED AT LINE 160 IN core-alu.z80
                    > USED AT LINE 161 IN core-alu.z80
                    > USED AT LINE 162 IN core-alu.z80
                    > USED AT LINE 169 IN core-alu.z80
                    > USED AT LINE 53 IN core-compiler.z80
                    > USED AT LINE 71 IN core-compiler.z80
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 127 IN core-compiler.z80
                    > USED AT LINE 3 IN core-strings.z80
HEADER_DDROP:       1329 DEFINED AT LINE 6
                    > USED AT LINE 9
DDROP:              1331 DEFINED AT LINE 13
                    > USED AT LINE 173 IN core-alu.z80
HEADER_DDUP:        1338 DEFINED AT LINE 6
                    > USED AT LINE 9
DDUP:               133F DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 116 IN core-alu.z80
                    > USED AT LINE 124 IN core-alu.z80
                    > USED AT LINE 154 IN core-alu.z80
LITSTR:             1346 DEFINED AT LINE 1 IN core-strings.z80
                    > USED AT LINE 180 IN core-compiler.z80
                    > USED AT LINE 217 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-strings.z80
HEADER_COUNT:       1358 DEFINED AT LINE 6
                    > USED AT LINE 9
COUNT:              1360 DEFINED AT LINE 13
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 17 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
                    > USED AT LINE 35 IN core-strings.z80
HEADER_SQUOTE:      1372 DEFINED AT LINE 6
                    > USED AT LINE 9
SQUOTE:             1377 DEFINED AT LINE 13
HEADER_QT:          1379 DEFINED AT LINE 6
                    > USED AT LINE 9
QT:                 137D DEFINED AT LINE 13
                    > USED AT LINE 51 IN core-io.z80
                    > USED AT LINE 18 IN core-strings.z80
COMPARESTR:         13D1 DEFINED AT LINE 53 IN core-strings.z80
                    > USED AT LINE 71 IN core-interpreter.z80
L_M_2203S56:        13D9 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2204S57:        13DE DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2208S61:        13E8 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        13F7 DEFINED AT LINE 6
                    > USED AT LINE 9
PACK:               13FE DEFINED AT LINE 13
HEADER_DOTS:        141E DEFINED AT LINE 6
                    > USED AT LINE 9
DOTS:               1423 DEFINED AT LINE 13
HEADER_WORDS:       1475 DEFINED AT LINE 6
                    > USED AT LINE 9
WORDS:              147D DEFINED AT LINE 13
LISTWORDS:          1485 DEFINED AT LINE 28 IN core-utilities.z80
                    > USED AT LINE 24 IN core-utilities.z80
L_M_2258S30:        148E DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_LATEST:      14B1 DEFINED AT LINE 6
                    > USED AT LINE 19 IN core-kernel.z80
                    > USED AT LINE 9
LATEST:             14BA DEFINED AT LINE 13
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
TESTS_START:        2000 DEFINED AT LINE 67
                    > USED AT LINE 37
TST_TEXTM_2328S7:   2012 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2330S9:   2048 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2332S11:  206F DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2334S13:   20A5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2334S13:   20AD DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2335S15:  20BF DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2337S17:  20E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2339S19:   211F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2339S19:   2127 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2340S21:  2139 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2342S23:  216B DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2344S25:  218A DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2346S28:  21A7 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2348S30:  21DB DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2350S32:  2201 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2352S35:  2220 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2354S37:  2249 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2356S39:   227F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2356S39:   2285 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2358S42:  22A4 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2360S44:   22DC DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2360S44:   22EC DEFINED AT LINE 37
                    > USED AT LINE 26
TE_FAILM_2361S45:   2317 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2361S45:   2329 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2362S47:  233B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2364S49:   2373 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2364S49:   2381 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2365S51:  2393 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2367S53:  23C0 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2369S55:   23F9 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2369S55:   240D DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2370S57:  241F DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2373S60:  2453 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2375S62:  2477 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2377S64:   24B0 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2377S64:   24C2 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2378S66:  24D4 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2381S69:  250A DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2383S71:   2542 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2383S71:   2552 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2386S75:  257E DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2388S78:  25B2 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2390S80:   25EE DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2390S80:   2605 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2392S83:  2624 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2394S85:   2660 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2394S85:   2677 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2395S87:  2689 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2398S92:  26D3 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2400S94:   270F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2400S94:   2719 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2402S98:  2738 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2404S100:  2774 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2404S100:  277E DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2405S102: 2790 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2408S105: 27E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2410S107:  2826 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2410S107:  283B DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2411S110: 284D DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2413S112:  2885 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2413S112:  2899 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2414S114: 28AB DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2416S116:  28E5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2416S116:  28EF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2417S118: 2901 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2421S123: 2940 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2423S125:  2978 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2423S125:  2984 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2424S127: 2996 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2426S130: 2A2C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2428S133: 2A4C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2430S135: 2A77 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2432S137: 2A9B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2434S139:  2AD3 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2434S139:  2ADF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2435S141: 2AF1 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2437S143: 2B13 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2439S145:  2B4B DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2439S145:  2B57 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2440S146: 2B69 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2566S18:  2B89 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2568S20:   2BCA DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2568S20:   2BDA DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2569S22:  2BEC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2571S24:   2C2D DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2571S24:   2C44 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2572S1:   2C56 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2574S3:    2C94 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2574S3:    2CA4 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2575S5:   2CB6 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2577S8:   2CDC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2579S10:   2D18 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2579S10:   2D2C DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2580S12:  2D3E DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2582S14:   2D79 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2582S14:   2D8C DEFINED AT LINE 37
                    > USED AT LINE 26
RET_STACK:          2EA7 DEFINED AT LINE 3 IN variables.z80
                    > USED AT LINE 32
                    > USED AT LINE 26
RPP:                2EA7 DEFINED AT LINE 4 IN variables.z80
DATA_STACK:         2EA7 DEFINED AT LINE 6 IN variables.z80
                    > USED AT LINE 2 IN core-kernel.z80
SPP:                2FA7 DEFINED AT LINE 8 IN variables.z80
SERBUF:             3000 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 7 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 44 IN core-serial.z80
SERINPTR:           303F DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 8 IN core-serial.z80
                    > USED AT LINE 39 IN core-serial.z80
                    > USED AT LINE 46 IN core-serial.z80
SERRDPTR:           3041 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 9 IN core-serial.z80
SERBUFUSED:         3043 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 5 IN core-serial.z80
                    > USED AT LINE 34 IN core-serial.z80
                    > USED AT LINE 49 IN core-serial.z80
                    > USED AT LINE 51 IN core-serial.z80
                    > USED AT LINE 127 IN core-serial.z80
LINEBUFSTART:       3045 DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 12 IN core-serial.z80
                    > USED AT LINE 213 IN core-serial.z80
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
LINEBUFSIZE:        3047 DEFINED AT LINE 16 IN variables.z80
                    > USED AT LINE 17 IN core-serial.z80
                    > USED AT LINE 214 IN core-serial.z80
CURRKEY:            3049 DEFINED AT LINE 17 IN variables.z80
                    > USED AT LINE 13 IN core-serial.z80
                    > USED AT LINE 208 IN core-serial.z80
                    > USED AT LINE 217 IN core-serial.z80
                    > USED AT LINE 222 IN core-serial.z80
                    > USED AT LINE 225 IN core-serial.z80
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
LINEBUFTOP:         304B DEFINED AT LINE 18 IN variables.z80
                    > USED AT LINE 14 IN core-serial.z80
                    > USED AT LINE 209 IN core-serial.z80
                    > USED AT LINE 220 IN core-serial.z80
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
LINEBUF:            304D DEFINED AT LINE 19 IN variables.z80
                    > USED AT LINE 11 IN core-serial.z80
                    > USED AT LINE 216 IN core-serial.z80
WORDBUF:            30CD DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 8 IN core-format.z80
                    > USED AT LINE 25 IN core-format.z80
                    > USED AT LINE 71 IN core-format.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
WORDBUF2:           310D DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 29 IN core-strings.z80
VAR_PAD:            314D DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 19
EXITADDR:           324D DEFINED AT LINE 25 IN variables.z80
                    > USED AT LINE 41 IN core-kernel.z80
                    > USED AT LINE 43 IN core-kernel.z80
IS_LITERAL:         324F DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 9 IN core-kernel.z80
VAR_HERE:           3251 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 17 IN core-kernel.z80
                    > USED AT LINE 64 IN core-memory.z80
                    > USED AT LINE 66 IN core-memory.z80
                    > USED AT LINE 72 IN core-memory.z80
                    > USED AT LINE 75 IN core-memory.z80
VAR_INTP_STOP:      3253 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 8 IN core-kernel.z80
VAR_STATE:          3255 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 110 IN core-compiler.z80
                    > USED AT LINE 115 IN core-compiler.z80
                    > USED AT LINE 19
                    > USED AT LINE 11 IN core-kernel.z80
VAR_NESTING:        3257 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 224 IN core-interpreter.z80
                    > USED AT LINE 226 IN core-interpreter.z80
                    > USED AT LINE 230 IN core-interpreter.z80
                    > USED AT LINE 232 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-kernel.z80
VAR_SP0:            3259 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 4 IN core-kernel.z80
VAR_BASE:           325B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 6 IN core-format.z80
                    > USED AT LINE 23 IN core-format.z80
                    > USED AT LINE 122 IN core-format.z80
                    > USED AT LINE 140 IN core-format.z80
                    > USED AT LINE 152 IN core-format.z80
                    > USED AT LINE 14 IN core-kernel.z80
VAR_LATEST_STR:     325D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 21 IN core-kernel.z80
VAR_LATEST:         325F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 82 IN core-compiler.z80
                    > USED AT LINE 48 IN core-interpreter.z80
                    > USED AT LINE 20 IN core-kernel.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 19
CHAR_POINTER:       3261 DEFINED AT LINE 40 IN variables.z80
                    > USED AT LINE 73 IN core-serial.z80
                    > USED AT LINE 76 IN core-serial.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
START_USER:         3263 DEFINED AT LINE 82
                    > USED AT LINE 16 IN core-kernel.z80
