0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   1   
0000                MEM_SIZE:   EQU   $10000   ; MEM is 64K
0000                ROM_SIZE:   EQU   $2000   ; ROM is 8K
0000                RAM_SIZE:   EQU   MEM_SIZE - ROM_SIZE   ; RAM is 64K - 8K
0000                BM:       EQU   0   ; bottom of ROM memory
0000                EM:       EQU   BM + MEM_SIZE   
0000                START_ROM:   EQU   BM   ; inclusive
0000                END_ROM:   EQU   BM + ROM_SIZE   ; exclusive
0000                START_RAM:   EQU   BM + ROM_SIZE   ; inclusive
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   ; exclusive
0000                RET_STACK_SIZE:   EQU   $100   ; return stack
0000                DATA_STACK_SIZE:   EQU   $100   ; data stack
0000                PAD_SIZE:   EQU   $100   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro MCODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro MVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro MCONST,name,namelen,flags,label,value
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRAN, 6
0000                 DW BRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro ENTER,
0000                             ; 
0000                 rst $08                             ; enter forth
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 67 00               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 72 0E               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 1E 10               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                START:       
0067   31 A7 2E               LD   SP,RET_STACK   ; Initialise the return stack.
006A   CD F5 0F               CALL   initSerial   
006D   CD 37 0E               CALL   initForth   
0070                          IF   TESTMODE   
0070   C3 00 20               JP   TESTS_START   
0073                          ELSE      
                              ;*Macro unroll:  PRINT_STR TXT_INTRO
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,TXT_INTRO   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              JP   QUIT   
0073                          ENDIF      
0073                             ;   0<          ( n -- t )
0073                             ;               Return true if n is negative.
0073                          ;*Macro unroll: mCODE '0<',2,0,ZLESS
0073                HEADER_ZLESS:      
0073   00 00                  DW   link   
0075                LINK:     .SET   HEADER_ZLESS   
0075   02                     DB   0 + 2   
0076   30 3C                  DB   "0<"   
0078                ZLESS:       
0078   CB 20                  SLA   B   ; sign bit -> cy flag
007A   9F                     SBC   A,A   ; propagate cy through A
007B   47                     LD   B,A   ; put 0000 or FFFF in TOS
007C   4F                     LD   C,A   
007D                          ;*Macro unroll: 	NEXT
007D   C3 72 0E               JP   enter   
0080                             ; and    x1 x2 -- x3            logical and
0080                          ;*Macro unroll: mCODE "and",3,0,ANDD	        ; bitwise and
0080                HEADER_ANDD:      ; bitwise and
0080   73 00                  DW   link   
0082                LINK:     .SET   HEADER_ANDD   
0082   03                     DB   0 + 3   
0083   61 6E 64               DB   "and"   
0086                ANDD:        
0086                          ;*Macro unroll:  PPOP0 H,L
0086   DD 2B                  DEC   IX   
0088   DD 66 00               LD   H,(IX+0)   
008B   DD 2B                  DEC   IX   
008D   DD 6E 00               LD   L,(IX+0)   
0090   78                     LD   A,B   
0091   A4                     AND   H   
0092   47                     LD   B,A   
0093   79                     LD   A,C   
0094   A5                     AND   L   
0095   4F                     LD   C,A   
0096                          ;*Macro unroll:  NEXT
0096   C3 72 0E               JP   enter   
0099                             ; OR    x1 x2 -- x3             logical OR
0099                          ;*Macro unroll: mCODE "or",2,0,ORR	            ; bitwise OR
0099                HEADER_ORR:      ; bitwise OR
0099   80 00                  DW   link   
009B                LINK:     .SET   HEADER_ORR   
009B   02                     DB   0 + 2   
009C   6F 72                  DB   "or"   
009E                ORR:         
009E                          ;*Macro unroll:  ppop0 H,L
009E   DD 2B                  DEC   IX   
00A0   DD 66 00               LD   H,(IX+0)   
00A3   DD 2B                  DEC   IX   
00A5   DD 6E 00               LD   L,(IX+0)   
00A8   78                     LD   A,B   
00A9   B4                     OR   H   
00AA   47                     LD   B,A   
00AB   79                     LD   A,C   
00AC   B5                     OR   L   
00AD   4F                     LD   C,A   
00AE                          ;*Macro unroll:  NEXT
00AE   C3 72 0E               JP   enter   
00B1                             ; xor    x1 x2 -- x3            logical xor
00B1                          ;*Macro unroll: mCODE "xor",3,0,XORR	        ; bitwise xor
00B1                HEADER_XORR:      ; bitwise xor
00B1   99 00                  DW   link   
00B3                LINK:     .SET   HEADER_XORR   
00B3   03                     DB   0 + 3   
00B4   78 6F 72               DB   "xor"   
00B7                XORR:        
00B7                          ;*Macro unroll:  ppop0 H,L
00B7   DD 2B                  DEC   IX   
00B9   DD 66 00               LD   H,(IX+0)   
00BC   DD 2B                  DEC   IX   
00BE   DD 6E 00               LD   L,(IX+0)   
00C1   78                     LD   A,B   
00C2   AC                     XOR   H   
00C3   47                     LD   B,A   
00C4   79                     LD   A,C   
00C5   AD                     XOR   L   
00C6   4F                     LD   C,A   
00C7                          ;*Macro unroll:  NEXT
00C7   C3 72 0E               JP   enter   
00CA                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
00CA                          ;*Macro unroll: mCODE "+",1,0,PLUS
00CA                HEADER_PLUS:      
00CA   B1 00                  DW   link   
00CC                LINK:     .SET   HEADER_PLUS   
00CC   01                     DB   0 + 1   
00CD   2B                     DB   "+"   
00CE                PLUS:        
00CE                          ;*Macro unroll:  ppop0 H,L
00CE   DD 2B                  DEC   IX   
00D0   DD 66 00               LD   H,(IX+0)   
00D3   DD 2B                  DEC   IX   
00D5   DD 6E 00               LD   L,(IX+0)   
00D8   09                     ADD   HL,BC   
00D9                          ;*Macro unroll:  loadWord B,C, H,L
00D9   4D                     LD   C,L   
00DA   44                     LD   B,H   
00DB                          ;*Macro unroll:  NEXT
00DB   C3 72 0E               JP   enter   
00DE                             ; INVERT x1 -- x2               ; bitwise complement
00DE                          ;*Macro unroll: mCODE "not",6,0,INVER
00DE                HEADER_INVER:      
00DE   CA 00                  DW   link   
00E0                LINK:     .SET   HEADER_INVER   
00E0   06                     DB   0 + 6   
00E1   6E 6F 74               DB   "not"   
00E4                INVER:       
00E4                          ;*Macro unroll:  ENTER
00E4   CF                     RST   $08   
00E5   82 11 FF FF B7 00 83 0E DW   LIT,-1,XORR,EXIT   
00ED                             ; negate  n1 -- n2                      negate n1
00ED                          ;*Macro unroll: mCODE "negate",6,0,NEGAT
00ED                HEADER_NEGAT:      
00ED   DE 00                  DW   link   
00EF                LINK:     .SET   HEADER_NEGAT   
00EF   06                     DB   0 + 6   
00F0   6E 65 67 61 74 65      DB   "negate"   
00F6                NEGAT:       
00F6                          ;*Macro unroll:  ENTER
00F6   CF                     RST   $08   
00F7   E4 00 38 03 83 0E      DW   INVER,ONEP,EXIT   
00FD                             ; negate  n1 -- n2                      negate n1
00FD                          ;*Macro unroll: mCODE "dnegate",7,0,DNEGA
00FD                HEADER_DNEGA:      
00FD   ED 00                  DW   link   
00FF                LINK:     .SET   HEADER_DNEGA   
00FF   07                     DB   0 + 7   
0100   64 6E 65 67 61 74 65   DB   "dnegate"   
0107                DNEGA:       
0107                          ;*Macro unroll:  ENTER
0107   CF                     RST   $08   
0108   E4 00 73 12 E4 00      DW   INVER,TOR,INVER   
010E   82 11 01 00 8E 01      DW   LIT,1,UPLUS   
0114   88 12 CE 00 83 0E      DW   RFROM,PLUS,EXIT   
011A                          ;*Macro unroll: mCODE "-",1,0,SUBB
011A                HEADER_SUBB:      
011A   FD 00                  DW   link   
011C                LINK:     .SET   HEADER_SUBB   
011C   01                     DB   0 + 1   
011D   2D                     DB   "-"   
011E                SUBB:        
011E                          ;*Macro unroll:  ENTER
011E   CF                     RST   $08   
011F   F6 00 CE 00 83 0E      DW   NEGAT,Plus,EXIT   
0125                             ; abs   n -- u                          absolute value
0125                          ;*Macro unroll: mCODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0125                HEADER_ABS:      ; case sensitive for ABS label for some reason
0125   1A 01                  DW   link   
0127                LINK:     .SET   HEADER_ABS   
0127   03                     DB   0 + 3   
0128   61 62 73               DB   "abs"   
012B                ABS:         
012B                          ;*Macro unroll:  ENTER
012B   CF                     RST   $08   
012C   03 12 78 00 60 07 36 01 DW   DUPP,ZLESS,QBRAN1,ABS1   
0134   F6 00                  DW   NEGAT   
0136                ABS1:        
0136   83 0E                  DW   EXIT   
0138                             ; =      x1 x2 -- flag         test x1=x2
0138                          ;*Macro unroll: mCODE "=",1,0,EQUAL
0138                HEADER_EQUAL:      
0138   25 01                  DW   link   
013A                LINK:     .SET   HEADER_EQUAL   
013A   01                     DB   0 + 1   
013B   3D                     DB   "="   
013C                EQUAL:       
013C                          ;*Macro unroll:  ENTER
013C   CF                     RST   $08   
013D   B7 00                  DW   XORR   
013F   60 07 49 01            DW   QBRAN1,EQU1   
0143   82 11 00 00 83 0E      DW   LIT,0,EXIT   ;false flag
0149                EQU1:        
0149   82 11 FF FF 83 0E      DW   LIT,-1,EXIT   ;true flag
014F                             ;   U<          ( u u -- t )
014F                             ;               Unsigned compare of top two items.
014F                          ;*Macro unroll: mCODE "U<",2,0,ULESS	        ; less than
014F                HEADER_ULESS:      ; less than
014F   38 01                  DW   link   
0151                LINK:     .SET   HEADER_ULESS   
0151   02                     DB   0 + 2   
0152   55 3C                  DB   "U<"   
0154                ULESS:       
0154                          ;*Macro unroll:  ENTER
0154   CF                     RST   $08   
0155   AE 12 B7 00 78 00      DW   DDUP,XORR,ZLESS   
015B   60 07 67 01            DW   QBRAN1,ULES1   
015F   17 12 37 12 78 00 83 0E DW   SWAP,DROP,ZLESS,EXIT   
0167                ULES1:       
0167   1E 01 78 00 83 0E      DW   SUBB,ZLESS,EXIT   
016D                             ;   <           ( n1 n2 -- t )
016D                             ;               is less than
016D                          ;*Macro unroll: mCODE "<",1,0,LESS	        ; less than
016D                HEADER_LESS:      ; less than
016D   4F 01                  DW   link   
016F                LINK:     .SET   HEADER_LESS   
016F   01                     DB   0 + 1   
0170   3C                     DB   "<"   
0171                LESS:        
0171                          ;*Macro unroll:  ENTER
0171   CF                     RST   $08   
0172   AE 12 B7 00 78 00 60 07 82 01 DW   DDUP,XORR,ZLESS,QBRAN1,LESS1   
017C   37 12 78 00 83 0E      DW   DROP,ZLESS,EXIT   
0182                LESS1:       
0182   1E 01 78 00 83 0E      DW   SUBB,ZLESS,EXIT   
0188                             ; ; <      n1 n2 -- flag          test n1<n2
0188                             ; mCODE "<",1,0,LESS	        ; less than
0188                             ;     ppop0 H,L
0188                             ;     or A
0188                             ;     sbc HL,BC       ; n1-n2 in HL, SZVC valid
0188                             ;     _if pe
0188                             ;         _if m
0188                             ;             ld bc, 0
0188                             ;         _else
0188                             ;             ld bc, 1       ;   if -ve, result true
0188                             ;         _endif
0188                             ;     _else
0188                             ;         _if p
0188                             ;             ld bc, 0
0188                             ;         _else
0188                             ;             ld bc, 1       ;   if -ve, result true
0188                             ;         _endif
0188                             ;     _endif
0188                             ;     NEXT
0188                             ;   UM+         ( w w -- w cy )
0188                             ;               Add two numbers, return the sum and carry flag.
0188                          ;*Macro unroll: mCODE "UM+",6,0,UPLUS
0188                HEADER_UPLUS:      
0188   6D 01                  DW   link   
018A                LINK:     .SET   HEADER_UPLUS   
018A   06                     DB   0 + 6   
018B   55 4D 2B               DB   "UM+"   
018E                UPLUS:       
018E                          ;*Macro unroll:  ppop0 H,L
018E   DD 2B                  DEC   IX   
0190   DD 66 00               LD   H,(IX+0)   
0193   DD 2B                  DEC   IX   
0195   DD 6E 00               LD   L,(IX+0)   
0198   09                     ADD   HL,BC   ;11t
0199                          ;*Macro unroll:  ppush0 H,L
0199   DD 75 00               LD   (IX+0),L   
019C   DD 23                  INC   IX   
019E   DD 74 00               LD   (IX+0),H   
01A1   DD 23                  INC   IX   
01A3   01 00 00               LD   BC,0   ;10t
01A6   30 01                  JR   NC,UMP1   ;12/7t
01A8                UMP2:        
01A8   03                     INC   BC   ; 6t
01A9                UMP1:        
01A9                          ;*Macro unroll:  NEXT
01A9   C3 72 0E               JP   enter   
01AC                             ; >      n1 n2 -- flag          test n1 > n2
01AC                          ;*Macro unroll: mCODE ">",1,0,GREATERTHAN	        ; less than
01AC                HEADER_GREATERTHAN:      ; less than
01AC   88 01                  DW   link   
01AE                LINK:     .SET   HEADER_GREATERTHAN   
01AE   01                     DB   0 + 1   
01AF   3E                     DB   ">"   
01B0                GREATERTHAN:      
01B0                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
01B0   DD 2B                  DEC   IX   ; swap operands
01B2   DD 66 00               LD   H,(IX+0)   
01B5   DD 2B                  DEC   IX   
01B7   DD 6E 00               LD   L,(IX+0)   
01BA                          ;*Macro unroll:  ppush H,L
01BA                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
01BA   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
01BD   DD 23                  INC   IX   
01BF   DD 70 00               LD   (IX+0),B   
01C2   DD 23                  INC   IX   
01C4   44                     LD   B,H   
01C5   4D                     LD   C,L   
01C6   18 A9                  JR   LESS   
01C8                             ; 0= zero-equal
01C8                          ;*Macro unroll: mCODE "0=",2,0,zEqual
01C8                HEADER_ZEQUAL:      
01C8   AC 01                  DW   link   
01CA                LINK:     .SET   HEADER_zEqual   
01CA   02                     DB   0 + 2   
01CB   30 3D                  DB   "0="   
01CD                ZEQUAL:      
01CD                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
01CD   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
01CE   B0                     OR   B   
01CF                          ;*Macro unroll:  _if nz
01CF   C2 D5 01               JP   nz,L_M_742S152   
01D2   C3 D2 01               JP   $   
01D5                          ;*Macro unroll:  STRUC_PUSH $
01D5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01D5                STRUC_12:   .SET   STRUC_11   
01D5                STRUC_11:   .SET   STRUC_10   
01D5                STRUC_10:   .SET   STRUC_9   
01D5                STRUC_9:   .SET   STRUC_8   
01D5                STRUC_8:   .SET   STRUC_7   
01D5                STRUC_7:   .SET   STRUC_6   
01D5                STRUC_6:   .SET   STRUC_5   
01D5                STRUC_5:   .SET   STRUC_4   
01D5                STRUC_4:   .SET   STRUC_3   
01D5                STRUC_3:   .SET   STRUC_2   
01D5                STRUC_2:   .SET   STRUC_TOP   
01D5                STRUC_TOP:   .SET   $   
01D5                L_M_742S152:      
01D5   01 FF FF               LD   BC,-1   
01D8                          ;*Macro unroll:  _endif
01D8                          ;*Macro unroll:  STRUC_FWD
01D8                CUR_ADR:   .SET   $   
01D3                          .ORG   STRUC_TOP - 2   
01D3   D8 01                  DW   CUR_ADR   
01D8                          .ORG   CUR_ADR   
01D8                          ;*Macro unroll:  STRUC_POP
01D8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01D8                STRUC_TOP:   .SET   STRUC_2   
01D8                STRUC_2:   .SET   STRUC_3   
01D8                STRUC_3:   .SET   STRUC_4   
01D8                STRUC_4:   .SET   STRUC_5   
01D8                STRUC_5:   .SET   STRUC_6   
01D8                STRUC_6:   .SET   STRUC_7   
01D8                STRUC_7:   .SET   STRUC_8   
01D8                STRUC_8:   .SET   STRUC_9   
01D8                STRUC_9:   .SET   STRUC_10   
01D8                STRUC_10:   .SET   STRUC_11   
01D8                STRUC_11:   .SET   STRUC_12   
01D8                STRUC_12:   .SET   0   
01D8   03                     INC   BC   
01D9                          ;*Macro unroll:  NEXT
01D9   C3 72 0E               JP   enter   
01DC                          ;*Macro unroll: mCODE "0<>",3,0,zNotEqual
01DC                HEADER_ZNOTEQUAL:      
01DC   C8 01                  DW   link   
01DE                LINK:     .SET   HEADER_zNotEqual   
01DE   03                     DB   0 + 3   
01DF   30 3C 3E               DB   "0<>"   
01E2                ZNOTEQUAL:      
01E2                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
01E2   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
01E3   B0                     OR   B   
01E4                          ;*Macro unroll:  _if nz
01E4   C2 EA 01               JP   nz,L_M_749S160   
01E7   C3 E7 01               JP   $   
01EA                          ;*Macro unroll:  STRUC_PUSH $
01EA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01EA                STRUC_12:   .SET   STRUC_11   
01EA                STRUC_11:   .SET   STRUC_10   
01EA                STRUC_10:   .SET   STRUC_9   
01EA                STRUC_9:   .SET   STRUC_8   
01EA                STRUC_8:   .SET   STRUC_7   
01EA                STRUC_7:   .SET   STRUC_6   
01EA                STRUC_6:   .SET   STRUC_5   
01EA                STRUC_5:   .SET   STRUC_4   
01EA                STRUC_4:   .SET   STRUC_3   
01EA                STRUC_3:   .SET   STRUC_2   
01EA                STRUC_2:   .SET   STRUC_TOP   
01EA                STRUC_TOP:   .SET   $   
01EA                L_M_749S160:      
01EA   01 01 00               LD   BC,1   
01ED                          ;*Macro unroll:  _endif
01ED                          ;*Macro unroll:  STRUC_FWD
01ED                CUR_ADR:   .SET   $   
01E8                          .ORG   STRUC_TOP - 2   
01E8   ED 01                  DW   CUR_ADR   
01ED                          .ORG   CUR_ADR   
01ED                          ;*Macro unroll:  STRUC_POP
01ED                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01ED                STRUC_TOP:   .SET   STRUC_2   
01ED                STRUC_2:   .SET   STRUC_3   
01ED                STRUC_3:   .SET   STRUC_4   
01ED                STRUC_4:   .SET   STRUC_5   
01ED                STRUC_5:   .SET   STRUC_6   
01ED                STRUC_6:   .SET   STRUC_7   
01ED                STRUC_7:   .SET   STRUC_8   
01ED                STRUC_8:   .SET   STRUC_9   
01ED                STRUC_9:   .SET   STRUC_10   
01ED                STRUC_10:   .SET   STRUC_11   
01ED                STRUC_11:   .SET   STRUC_12   
01ED                STRUC_12:   .SET   0   
01ED                          ;*Macro unroll:  NEXT
01ED   C3 72 0E               JP   enter   
01F0                             ; OR    x1 x2 -- x3             logical OR
01F0                          ;*Macro unroll: mCODE "or",2,0,OR	            ; bitwise OR
01F0                HEADER_OR:      ; bitwise OR
01F0   DC 01                  DW   link   
01F2                LINK:     .SET   HEADER_OR   
01F2   02                     DB   0 + 2   
01F3   6F 72                  DB   "or"   
01F5                OR:          
01F5                          ;*Macro unroll:  ppop0 H,L
01F5   DD 2B                  DEC   IX   
01F7   DD 66 00               LD   H,(IX+0)   
01FA   DD 2B                  DEC   IX   
01FC   DD 6E 00               LD   L,(IX+0)   
01FF   78                     LD   A,B   
0200   B4                     OR   H   
0201   47                     LD   B,A   
0202   79                     LD   A,C   
0203   B5                     OR   L   
0204   4F                     LD   C,A   
0205                          ;*Macro unroll:  NEXT
0205   C3 72 0E               JP   enter   
0208                             ; U*   u1 u2 -- ud   unsigned mutliply
0208                          ;*Macro unroll: mCODE "u*",2,0,USTAR              ; u1 u2 -- ud
0208                HEADER_USTAR:      ; u1 u2 -- ud
0208   F0 01                  DW   link   
020A                LINK:     .SET   HEADER_USTAR   
020A   02                     DB   0 + 2   
020B   75 2A                  DB   "u*"   
020D                USTAR:       
020D                             ; u2 in BC
020D                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
020D   DD 2B                  DEC   IX   ; u1 in DE
020F   DD 56 00               LD   D,(IX+0)   
0212   DD 2B                  DEC   IX   
0214   DD 5E 00               LD   E,(IX+0)   
0217   CD C1 03               CALL   unsignedMultiply   
021A                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
021A   DD 73 00               LD   (IX+0),E   ; udlo result
021D   DD 23                  INC   IX   
021F   DD 72 00               LD   (IX+0),D   
0222   DD 23                  INC   IX   
0224                             ; udhi result
0224                          ;*Macro unroll:  NEXT
0224   C3 72 0E               JP   enter   
0227                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
0227                          ;*Macro unroll: mCODE "u/mod",5,0,USLASHMOD
0227                HEADER_USLASHMOD:      
0227   08 02                  DW   link   
0229                LINK:     .SET   HEADER_USLASHMOD   
0229   05                     DB   0 + 5   
022A   75 2F 6D 6F 64         DB   "u/mod"   
022F                USLASHMOD:      
022F                          ;*Macro unroll:  ppop D,E                ; DE = divisor
022F   50                     LD   D,B   ; DE = divisor
0230   59                     LD   E,C   
0231                          ;*Macro unroll:  ppop0 B,C
0231   DD 2B                  DEC   IX   
0233   DD 46 00               LD   B,(IX+0)   
0236   DD 2B                  DEC   IX   
0238   DD 4E 00               LD   C,(IX+0)   
023B                             ; BC = dividend
023B   CD 87 03               CALL   divideWordByWord   
023E                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
023E   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
0241   DD 23                  INC   IX   
0243   DD 74 00               LD   (IX+0),H   
0246   DD 23                  INC   IX   
0248                          ;*Macro unroll:  NEXT
0248   C3 72 0E               JP   enter   
024B                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
024B                          ;*Macro unroll: mCODE "cells",5,0,CELLS
024B                HEADER_CELLS:      
024B   27 02                  DW   link   
024D                LINK:     .SET   HEADER_CELLS   
024D   05                     DB   0 + 5   
024E   63 65 6C 6C 73         DB   "cells"   
0253                CELLS:       
0253   C3 4B 03               JP   twostar   
0256                          ;*Macro unroll: mCODE "*",1,0,star                    ; u1 u2 -- ud
0256                HEADER_STAR:      ; u1 u2 -- ud
0256   4B 02                  DW   link   
0258                LINK:     .SET   HEADER_star   
0258   01                     DB   0 + 1   
0259   2A                     DB   "*"   
025A                STAR:        
025A                          ;*Macro unroll:  ENTER
025A   CF                     RST   $08   
025B   4B 12 4B 12            DW   over,over   ; dupe both args
025F   2B 01 17 12 2B 01      DW   ABS,swap,ABS   ; remove sign from both args
0265   0D 02 37 12            DW   ustar,drop   ; unsigned multiply, drop hi-word
0269   CE 11                  DW   nrot   ; move to bottom
026B   B7 00                  DW   XORR   ; zero if signs are the same
026D   78 00                  DW   ZLESS   ; if high bit set
026F                          ;*Macro unroll:  cif
026F   2F 07 00 00            DW   QBRAN,0   
0273                          ;*Macro unroll:  CPL_PUSH $
0273                CPL_COUNT:   .SET   CPL_COUNT + 1   
0273                CPL_10:   .SET   CPL_9   
0273                CPL_9:    .SET   CPL_8   
0273                CPL_8:    .SET   CPL_7   
0273                CPL_7:    .SET   CPL_6   
0273                CPL_6:    .SET   CPL_5   
0273                CPL_5:    .SET   CPL_4   
0273                CPL_4:    .SET   CPL_3   
0273                CPL_3:    .SET   CPL_2   
0273                CPL_2:    .SET   CPL_TOP   
0273                CPL_TOP:   .SET   $   
0273   F6 00                  DW   NEGAT   ; if signs differ then negate answer
0275                          ;*Macro unroll:  cendif
0275                          ;*Macro unroll:  cBRANCH_FWD
0275                CUR_ADR:   .SET   $   
0271                          .ORG   CPL_TOP - 2   
0271   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0275                          .ORG   CUR_ADR   
0275                          ;*Macro unroll:  CPL_POP
0275                CPL_COUNT:   .SET   CPL_COUNT - 1   
0275                CPL_TOP:   .SET   CPL_2   
0275                CPL_2:    .SET   CPL_3   
0275                CPL_3:    .SET   CPL_4   
0275                CPL_4:    .SET   CPL_5   
0275                CPL_5:    .SET   CPL_6   
0275                CPL_6:    .SET   CPL_7   
0275                CPL_7:    .SET   CPL_8   
0275                CPL_8:    .SET   CPL_9   
0275                CPL_9:    .SET   CPL_10   
0275                CPL_10:   .SET   0   
0275                          ;*Macro unroll:  EXIT
0275   83 0E                  DW   exit   
0277   C3 72 0E               JP   enter   
027A                          ;*Macro unroll: mCODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
027A                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
027A   56 02                  DW   link   
027C                LINK:     .SET   HEADER_slashmod   
027C   04                     DB   0 + 4   
027D   2F 6D 6F 64            DB   "/mod"   
0281                SLASHMOD:      
0281                          ;*Macro unroll:  ENTER
0281   CF                     RST   $08   
0282   4B 12 4B 12            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
0286   B7 00                  DW   XORR   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
0288   78 00                  DW   ZLESS   ; true if high bit still set
028A   CE 11                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
028C   4B 12                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
028E   78 00                  DW   ZLESS   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
0290   CE 11                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
0292   2B 01 17 12 2B 01 17 12 DW   ABS,swap,ABS,swap   ; remove sign from both args
029A   2F 02                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
029C   17 12                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
029E   9A 11                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
02A0                          ;*Macro unroll:  cif
02A0   2F 07 00 00            DW   QBRAN,0   
02A4                          ;*Macro unroll:  CPL_PUSH $
02A4                CPL_COUNT:   .SET   CPL_COUNT + 1   
02A4                CPL_10:   .SET   CPL_9   
02A4                CPL_9:    .SET   CPL_8   
02A4                CPL_8:    .SET   CPL_7   
02A4                CPL_7:    .SET   CPL_6   
02A4                CPL_6:    .SET   CPL_5   
02A4                CPL_5:    .SET   CPL_4   
02A4                CPL_4:    .SET   CPL_3   
02A4                CPL_3:    .SET   CPL_2   
02A4                CPL_2:    .SET   CPL_TOP   
02A4                CPL_TOP:   .SET   $   
02A4   F6 00                  DW   NEGAT   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
02A6                          ;*Macro unroll:  cendif
02A6                          ;*Macro unroll:  cBRANCH_FWD
02A6                CUR_ADR:   .SET   $   
02A2                          .ORG   CPL_TOP - 2   
02A2   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02A6                          .ORG   CUR_ADR   
02A6                          ;*Macro unroll:  CPL_POP
02A6                CPL_COUNT:   .SET   CPL_COUNT - 1   
02A6                CPL_TOP:   .SET   CPL_2   
02A6                CPL_2:    .SET   CPL_3   
02A6                CPL_3:    .SET   CPL_4   
02A6                CPL_4:    .SET   CPL_5   
02A6                CPL_5:    .SET   CPL_6   
02A6                CPL_6:    .SET   CPL_7   
02A6                CPL_7:    .SET   CPL_8   
02A6                CPL_8:    .SET   CPL_9   
02A6                CPL_9:    .SET   CPL_10   
02A6                CPL_10:   .SET   0   
02A6   CE 11                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
02A8   17 12                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
02AA                          ;*Macro unroll:  cif
02AA   2F 07 00 00            DW   QBRAN,0   
02AE                          ;*Macro unroll:  CPL_PUSH $
02AE                CPL_COUNT:   .SET   CPL_COUNT + 1   
02AE                CPL_10:   .SET   CPL_9   
02AE                CPL_9:    .SET   CPL_8   
02AE                CPL_8:    .SET   CPL_7   
02AE                CPL_7:    .SET   CPL_6   
02AE                CPL_6:    .SET   CPL_5   
02AE                CPL_5:    .SET   CPL_4   
02AE                CPL_4:    .SET   CPL_3   
02AE                CPL_3:    .SET   CPL_2   
02AE                CPL_2:    .SET   CPL_TOP   
02AE                CPL_TOP:   .SET   $   
02AE   F6 00                  DW   NEGAT   ;     -r q b1 -- -r -q       if signs differ then negate answer
02B0                          ;*Macro unroll:  cendif
02B0                          ;*Macro unroll:  cBRANCH_FWD
02B0                CUR_ADR:   .SET   $   
02AC                          .ORG   CPL_TOP - 2   
02AC   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02B0                          .ORG   CUR_ADR   
02B0                          ;*Macro unroll:  CPL_POP
02B0                CPL_COUNT:   .SET   CPL_COUNT - 1   
02B0                CPL_TOP:   .SET   CPL_2   
02B0                CPL_2:    .SET   CPL_3   
02B0                CPL_3:    .SET   CPL_4   
02B0                CPL_4:    .SET   CPL_5   
02B0                CPL_5:    .SET   CPL_6   
02B0                CPL_6:    .SET   CPL_7   
02B0                CPL_7:    .SET   CPL_8   
02B0                CPL_8:    .SET   CPL_9   
02B0                CPL_9:    .SET   CPL_10   
02B0                CPL_10:   .SET   0   
02B0                          ;*Macro unroll:  EXIT
02B0   83 0E                  DW   exit   
02B2   C3 72 0E               JP   enter   
02B5                          ;*Macro unroll: mCODE "/",1,0,slash                   ; dvend dvisr -- quot
02B5                HEADER_SLASH:      ; dvend dvisr -- quot
02B5   7A 02                  DW   link   
02B7                LINK:     .SET   HEADER_slash   
02B7   01                     DB   0 + 1   
02B8   2F                     DB   "/"   
02B9                SLASH:       
02B9                          ;*Macro unroll:  ENTER
02B9   CF                     RST   $08   
02BA   81 02                  DW   slashmod   
02BC   17 12 37 12            DW   swap,drop   ; drop remainder
02C0                          ;*Macro unroll:  EXIT
02C0   83 0E                  DW   exit   
02C2   C3 72 0E               JP   enter   
02C5                          ;*Macro unroll: mCODE "mod",3,0,mod                   ; dvend dvisr -- remainder
02C5                HEADER_MOD:      ; dvend dvisr -- remainder
02C5   B5 02                  DW   link   
02C7                LINK:     .SET   HEADER_mod   
02C7   03                     DB   0 + 3   
02C8   6D 6F 64               DB   "mod"   
02CB                MOD:         
02CB                          ;*Macro unroll:  ENTER
02CB   CF                     RST   $08   
02CC   81 02                  DW   slashmod   
02CE   37 12                  DW   drop   ; drop quotient
02D0                          ;*Macro unroll:  EXIT
02D0   83 0E                  DW   exit   
02D2   C3 72 0E               JP   enter   
02D5                          ;*Macro unroll:  mCODE "1-",2,0,oneMinus
02D5                HEADER_ONEMINUS:      
02D5   C5 02                  DW   link   
02D7                LINK:     .SET   HEADER_oneMinus   
02D7   02                     DB   0 + 2   
02D8   31 2D                  DB   "1-"   
02DA                ONEMINUS:      
02DA   0B                     DEC   BC   
02DB                          ;*Macro unroll:  NEXT
02DB   C3 72 0E               JP   enter   
02DE                          ;*Macro unroll: mCODE "2-",2,0,twoMinus
02DE                HEADER_TWOMINUS:      
02DE   D5 02                  DW   link   
02E0                LINK:     .SET   HEADER_twoMinus   
02E0   02                     DB   0 + 2   
02E1   32 2D                  DB   "2-"   
02E3                TWOMINUS:      
02E3   0B                     DEC   BC   
02E4   0B                     DEC   BC   
02E5                          ;*Macro unroll:  NEXT
02E5   C3 72 0E               JP   enter   
02E8                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
02E8                          ;*Macro unroll: mCODE "cell+",5,0,CELLP
02E8                HEADER_CELLP:      
02E8   DE 02                  DW   link   
02EA                LINK:     .SET   HEADER_CELLP   
02EA   05                     DB   0 + 5   
02EB   63 65 6C 6C 2B         DB   "cell+"   
02F0                CELLP:       
02F0   C3 41 03               JP   twoplus   
02F3                             ; min   n1 n2 -- u                      minimum
02F3                          ;*Macro unroll: mCODE "min",3,0,min
02F3                HEADER_MIN:      
02F3   E8 02                  DW   link   
02F5                LINK:     .SET   HEADER_min   
02F5   03                     DB   0 + 3   
02F6   6D 69 6E               DB   "min"   
02F9                MIN:         
02F9   CF                     RST   $08   
02FA   4B 12 4B 12            DW   over,over   
02FE   71 01                  DW   LESS   
0300                          ;*Macro unroll:  cif
0300   2F 07 00 00            DW   QBRAN,0   
0304                          ;*Macro unroll:  CPL_PUSH $
0304                CPL_COUNT:   .SET   CPL_COUNT + 1   
0304                CPL_10:   .SET   CPL_9   
0304                CPL_9:    .SET   CPL_8   
0304                CPL_8:    .SET   CPL_7   
0304                CPL_7:    .SET   CPL_6   
0304                CPL_6:    .SET   CPL_5   
0304                CPL_5:    .SET   CPL_4   
0304                CPL_4:    .SET   CPL_3   
0304                CPL_3:    .SET   CPL_2   
0304                CPL_2:    .SET   CPL_TOP   
0304                CPL_TOP:   .SET   $   
0304   37 12                  DW   drop   
0306                          ;*Macro unroll:  cElse
0306   4C 07 00 00            DW   BRAN,0   
030A                          ;*Macro unroll:  cBRANCH_FWD
030A                CUR_ADR:   .SET   $   
0302                          .ORG   CPL_TOP - 2   
0302   08 00                  DW   CUR_ADR - CPL_TOP + 2   
030A                          .ORG   CUR_ADR   
030A                CPL_TOP:   .SET   $   
030A   17 12 37 12            DW   swap,drop   
030E                          ;*Macro unroll:  cendif
030E                          ;*Macro unroll:  cBRANCH_FWD
030E                CUR_ADR:   .SET   $   
0308                          .ORG   CPL_TOP - 2   
0308   06 00                  DW   CUR_ADR - CPL_TOP + 2   
030E                          .ORG   CUR_ADR   
030E                          ;*Macro unroll:  CPL_POP
030E                CPL_COUNT:   .SET   CPL_COUNT - 1   
030E                CPL_TOP:   .SET   CPL_2   
030E                CPL_2:    .SET   CPL_3   
030E                CPL_3:    .SET   CPL_4   
030E                CPL_4:    .SET   CPL_5   
030E                CPL_5:    .SET   CPL_6   
030E                CPL_6:    .SET   CPL_7   
030E                CPL_7:    .SET   CPL_8   
030E                CPL_8:    .SET   CPL_9   
030E                CPL_9:    .SET   CPL_10   
030E                CPL_10:   .SET   0   
030E                          ;*Macro unroll:  EXIT
030E   83 0E                  DW   exit   
0310   C3 72 0E               JP   enter   
0313                             ; max   n1 n2 -- u                      maximum
0313                          ;*Macro unroll: mCODE "max",3,0,max
0313                HEADER_MAX:      
0313   F3 02                  DW   link   
0315                LINK:     .SET   HEADER_max   
0315   03                     DB   0 + 3   
0316   6D 61 78               DB   "max"   
0319                MAX:         
0319   CF                     RST   $08   
031A   4B 12 4B 12            DW   over,over   
031E   71 01                  DW   LESS   
0320                          ;*Macro unroll:  cif
0320   2F 07 00 00            DW   QBRAN,0   
0324                          ;*Macro unroll:  CPL_PUSH $
0324                CPL_COUNT:   .SET   CPL_COUNT + 1   
0324                CPL_10:   .SET   CPL_9   
0324                CPL_9:    .SET   CPL_8   
0324                CPL_8:    .SET   CPL_7   
0324                CPL_7:    .SET   CPL_6   
0324                CPL_6:    .SET   CPL_5   
0324                CPL_5:    .SET   CPL_4   
0324                CPL_4:    .SET   CPL_3   
0324                CPL_3:    .SET   CPL_2   
0324                CPL_2:    .SET   CPL_TOP   
0324                CPL_TOP:   .SET   $   
0324   17 12 37 12            DW   swap,drop   
0328                          ;*Macro unroll:  cElse
0328   4C 07 00 00            DW   BRAN,0   
032C                          ;*Macro unroll:  cBRANCH_FWD
032C                CUR_ADR:   .SET   $   
0322                          .ORG   CPL_TOP - 2   
0322   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
032C                          .ORG   CUR_ADR   
032C                CPL_TOP:   .SET   $   
032C   37 12                  DW   drop   
032E                          ;*Macro unroll:  cendif
032E                          ;*Macro unroll:  cBRANCH_FWD
032E                CUR_ADR:   .SET   $   
032A                          .ORG   CPL_TOP - 2   
032A   04 00                  DW   CUR_ADR - CPL_TOP + 2   
032E                          .ORG   CUR_ADR   
032E                          ;*Macro unroll:  CPL_POP
032E                CPL_COUNT:   .SET   CPL_COUNT - 1   
032E                CPL_TOP:   .SET   CPL_2   
032E                CPL_2:    .SET   CPL_3   
032E                CPL_3:    .SET   CPL_4   
032E                CPL_4:    .SET   CPL_5   
032E                CPL_5:    .SET   CPL_6   
032E                CPL_6:    .SET   CPL_7   
032E                CPL_7:    .SET   CPL_8   
032E                CPL_8:    .SET   CPL_9   
032E                CPL_9:    .SET   CPL_10   
032E                CPL_10:   .SET   0   
032E                          ;*Macro unroll:  EXIT
032E   83 0E                  DW   exit   
0330   C3 72 0E               JP   enter   
0333                             ; 1+      n1/u1 -- n2/u2            add 1 to TOS
0333                          ;*Macro unroll: mCODE "1+",2,0,ONEP
0333                HEADER_ONEP:      
0333   13 03                  DW   link   
0335                LINK:     .SET   HEADER_ONEP   
0335   02                     DB   0 + 2   
0336   31 2B                  DB   "1+"   
0338                ONEP:        
0338   03                     INC   BC   
0339                          ;*Macro unroll:  NEXT
0339   C3 72 0E               JP   enter   
033C                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
033C                          ;*Macro unroll: mCODE "2+",2,0,twoPlus
033C                HEADER_TWOPLUS:      
033C   33 03                  DW   link   
033E                LINK:     .SET   HEADER_twoPlus   
033E   02                     DB   0 + 2   
033F   32 2B                  DB   "2+"   
0341                TWOPLUS:      
0341   03                     INC   BC   
0342   03                     INC   BC   
0343                          ;*Macro unroll:  NEXT
0343   C3 72 0E               JP   enter   
0346                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
0346                          ;*Macro unroll: mCODE "2*",2,0,TWOSTAR
0346                HEADER_TWOSTAR:      
0346   3C 03                  DW   link   
0348                LINK:     .SET   HEADER_TWOSTAR   
0348   02                     DB   0 + 2   
0349   32 2A                  DB   "2*"   
034B                TWOSTAR:      
034B   CB 21                  SLA   C   
034D   CB 10                  RL   B   
034F                          ;*Macro unroll:  NEXT
034F   C3 72 0E               JP   enter   
0352                             ; 2/      x1 -- x2                  arithmetic right shift
0352                          ;*Macro unroll: mCODE "2/",2,0,TWOSLASH
0352                HEADER_TWOSLASH:      
0352   46 03                  DW   link   
0354                LINK:     .SET   HEADER_TWOSLASH   
0354   02                     DB   0 + 2   
0355   32 2F                  DB   "2/"   
0357                TWOSLASH:      
0357   CB 28                  SRA   B   
0359   CB 19                  RR   C   
035B                          ;*Macro unroll:  NEXT
035B   C3 72 0E               JP   enter   
035E                             ; 
035E                             ; negate ***
035E                             ; params: HL = number
035E                             ; 
035E                NEGATENUM:      
035E                             ; Negate HL (using two's complement)
035E   AF                     XOR   A   
035F   95                     SUB   L   
0360   6F                     LD   L,A   
0361   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
0363   9C                     SBC   A,H   
0364   67                     LD   H,A   
0365   C9                     RET      
0366                             ; 
0366                             ; divide word by byte ***
0366                             ; params: HL = dividend, C = divisor
0366                             ; returns: HL = result, A = remainder
0366                             ; destroys: ?
0366                             ; 
0366                DIVIDEWORDBYBYTE:      
0366   06 10                  LD   B,16   
0368   AF                     XOR   A   
0369                          ;*Macro unroll:  _do
0369   18 03                  JR   L_M_898S333   
036B   C3 6B 03               JP   $   
036E                          ;*Macro unroll:  DLOOP_PUSH $
036E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
036E                DLOOP_12:   .SET   DLOOP_11   
036E                DLOOP_11:   .SET   DLOOP_10   
036E                DLOOP_10:   .SET   DLOOP_9   
036E                DLOOP_9:   .SET   DLOOP_8   
036E                DLOOP_8:   .SET   DLOOP_7   
036E                DLOOP_7:   .SET   DLOOP_6   
036E                DLOOP_6:   .SET   DLOOP_5   
036E                DLOOP_5:   .SET   DLOOP_4   
036E                DLOOP_4:   .SET   DLOOP_3   
036E                DLOOP_3:   .SET   DLOOP_2   
036E                DLOOP_2:   .SET   DLOOP_TOP   
036E                DLOOP_TOP:   .SET   $   
036E                L_M_898S333:      
036E   29                     ADD   HL,HL   
036F   17                     RLA      
0370                          ;*Macro unroll:  _if c
0370   DA 76 03               JP   c,L_M_901S336   
0373   C3 73 03               JP   $   
0376                          ;*Macro unroll:  STRUC_PUSH $
0376                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0376                STRUC_12:   .SET   STRUC_11   
0376                STRUC_11:   .SET   STRUC_10   
0376                STRUC_10:   .SET   STRUC_9   
0376                STRUC_9:   .SET   STRUC_8   
0376                STRUC_8:   .SET   STRUC_7   
0376                STRUC_7:   .SET   STRUC_6   
0376                STRUC_6:   .SET   STRUC_5   
0376                STRUC_5:   .SET   STRUC_4   
0376                STRUC_4:   .SET   STRUC_3   
0376                STRUC_3:   .SET   STRUC_2   
0376                STRUC_2:   .SET   STRUC_TOP   
0376                STRUC_TOP:   .SET   $   
0376                L_M_901S336:      
0376   91                     SUB   C   
0377   2C                     INC   L   
0378                          ;*Macro unroll:  _else
0378   C3 78 03               JP   $   
037B                          ;*Macro unroll:  STRUC_FWD
037B                CUR_ADR:   .SET   $   
0374                          .ORG   STRUC_TOP - 2   
0374   7B 03                  DW   CUR_ADR   
037B                          .ORG   CUR_ADR   
037B                STRUC_TOP:   .SET   $   
037B   B9                     CP   C   
037C                          ;*Macro unroll:  _if nc
037C   D2 82 03               JP   nc,L_M_906S341   
037F   C3 7F 03               JP   $   
0382                          ;*Macro unroll:  STRUC_PUSH $
0382                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0382                STRUC_12:   .SET   STRUC_11   
0382                STRUC_11:   .SET   STRUC_10   
0382                STRUC_10:   .SET   STRUC_9   
0382                STRUC_9:   .SET   STRUC_8   
0382                STRUC_8:   .SET   STRUC_7   
0382                STRUC_7:   .SET   STRUC_6   
0382                STRUC_6:   .SET   STRUC_5   
0382                STRUC_5:   .SET   STRUC_4   
0382                STRUC_4:   .SET   STRUC_3   
0382                STRUC_3:   .SET   STRUC_2   
0382                STRUC_2:   .SET   STRUC_TOP   
0382                STRUC_TOP:   .SET   $   
0382                L_M_906S341:      
0382   91                     SUB   C   
0383   2C                     INC   L   
0384                          ;*Macro unroll:  _endif
0384                          ;*Macro unroll:  STRUC_FWD
0384                CUR_ADR:   .SET   $   
0380                          .ORG   STRUC_TOP - 2   
0380   84 03                  DW   CUR_ADR   
0384                          .ORG   CUR_ADR   
0384                          ;*Macro unroll:  STRUC_POP
0384                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0384                STRUC_TOP:   .SET   STRUC_2   
0384                STRUC_2:   .SET   STRUC_3   
0384                STRUC_3:   .SET   STRUC_4   
0384                STRUC_4:   .SET   STRUC_5   
0384                STRUC_5:   .SET   STRUC_6   
0384                STRUC_6:   .SET   STRUC_7   
0384                STRUC_7:   .SET   STRUC_8   
0384                STRUC_8:   .SET   STRUC_9   
0384                STRUC_9:   .SET   STRUC_10   
0384                STRUC_10:   .SET   STRUC_11   
0384                STRUC_11:   .SET   STRUC_12   
0384                STRUC_12:   .SET   0   
0384                          ;*Macro unroll:  _endif
0384                          ;*Macro unroll:  STRUC_FWD
0384                CUR_ADR:   .SET   $   
0379                          .ORG   STRUC_TOP - 2   
0379   84 03                  DW   CUR_ADR   
0384                          .ORG   CUR_ADR   
0384                          ;*Macro unroll:  STRUC_POP
0384                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0384                STRUC_TOP:   .SET   STRUC_2   
0384                STRUC_2:   .SET   STRUC_3   
0384                STRUC_3:   .SET   STRUC_4   
0384                STRUC_4:   .SET   STRUC_5   
0384                STRUC_5:   .SET   STRUC_6   
0384                STRUC_6:   .SET   STRUC_7   
0384                STRUC_7:   .SET   STRUC_8   
0384                STRUC_8:   .SET   STRUC_9   
0384                STRUC_9:   .SET   STRUC_10   
0384                STRUC_10:   .SET   STRUC_11   
0384                STRUC_11:   .SET   STRUC_12   
0384                STRUC_12:   .SET   0   
0384                          ;*Macro unroll:  _djnz
0384   10 E8                  DJNZ   DLOOP_TOP   
0386                          ;*Macro unroll:  DLOOP_FWD
0386                CUR_ADR:   .SET   $   
036C                          .ORG   DLOOP_TOP - 2   
036C   86 03                  DW   CUR_ADR   
0386                          .ORG   CUR_ADR   
0386                          ;*Macro unroll:  DLOOP_POP
0386                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0386                DLOOP_TOP:   .SET   DLOOP_2   
0386                DLOOP_2:   .SET   DLOOP_3   
0386                DLOOP_3:   .SET   DLOOP_4   
0386                DLOOP_4:   .SET   DLOOP_5   
0386                DLOOP_5:   .SET   DLOOP_6   
0386                DLOOP_6:   .SET   DLOOP_7   
0386                DLOOP_7:   .SET   DLOOP_8   
0386                DLOOP_8:   .SET   DLOOP_9   
0386                DLOOP_9:   .SET   DLOOP_10   
0386                DLOOP_10:   .SET   DLOOP_11   
0386                DLOOP_11:   .SET   DLOOP_12   
0386                DLOOP_12:   .SET   0   
0386   C9                     RET      
0387                             ; 
0387                             ; Divide word by word ***
0387                             ; params: BC = dividend, DE = divisor
0387                             ; returns: BC = result, HL = remainder
0387                             ; destroys: ?
0387                             ; 
0387                DIVIDEWORDBYWORD:      
0387   D5                     PUSH   DE   
0388   21 00 00               LD   HL,0   
038B   78                     LD   A,B   
038C   06 08                  LD   B,8   
038E                          ;*Macro unroll:  _do
038E   18 03                  JR   L_M_924S361   
0390   C3 90 03               JP   $   
0393                          ;*Macro unroll:  DLOOP_PUSH $
0393                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0393                DLOOP_12:   .SET   DLOOP_11   
0393                DLOOP_11:   .SET   DLOOP_10   
0393                DLOOP_10:   .SET   DLOOP_9   
0393                DLOOP_9:   .SET   DLOOP_8   
0393                DLOOP_8:   .SET   DLOOP_7   
0393                DLOOP_7:   .SET   DLOOP_6   
0393                DLOOP_6:   .SET   DLOOP_5   
0393                DLOOP_5:   .SET   DLOOP_4   
0393                DLOOP_4:   .SET   DLOOP_3   
0393                DLOOP_3:   .SET   DLOOP_2   
0393                DLOOP_2:   .SET   DLOOP_TOP   
0393                DLOOP_TOP:   .SET   $   
0393                L_M_924S361:      
0393   17                     RLA      
0394   ED 6A                  ADC   HL,HL   
0396   ED 52                  SBC   HL,DE   
0398                          ;*Macro unroll:  _if c
0398   DA 9E 03               JP   c,L_M_928S365   
039B   C3 9B 03               JP   $   
039E                          ;*Macro unroll:  STRUC_PUSH $
039E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
039E                STRUC_12:   .SET   STRUC_11   
039E                STRUC_11:   .SET   STRUC_10   
039E                STRUC_10:   .SET   STRUC_9   
039E                STRUC_9:   .SET   STRUC_8   
039E                STRUC_8:   .SET   STRUC_7   
039E                STRUC_7:   .SET   STRUC_6   
039E                STRUC_6:   .SET   STRUC_5   
039E                STRUC_5:   .SET   STRUC_4   
039E                STRUC_4:   .SET   STRUC_3   
039E                STRUC_3:   .SET   STRUC_2   
039E                STRUC_2:   .SET   STRUC_TOP   
039E                STRUC_TOP:   .SET   $   
039E                L_M_928S365:      
039E   19                     ADD   HL,DE   
039F                          ;*Macro unroll:  _endif
039F                          ;*Macro unroll:  STRUC_FWD
039F                CUR_ADR:   .SET   $   
039C                          .ORG   STRUC_TOP - 2   
039C   9F 03                  DW   CUR_ADR   
039F                          .ORG   CUR_ADR   
039F                          ;*Macro unroll:  STRUC_POP
039F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
039F                STRUC_TOP:   .SET   STRUC_2   
039F                STRUC_2:   .SET   STRUC_3   
039F                STRUC_3:   .SET   STRUC_4   
039F                STRUC_4:   .SET   STRUC_5   
039F                STRUC_5:   .SET   STRUC_6   
039F                STRUC_6:   .SET   STRUC_7   
039F                STRUC_7:   .SET   STRUC_8   
039F                STRUC_8:   .SET   STRUC_9   
039F                STRUC_9:   .SET   STRUC_10   
039F                STRUC_10:   .SET   STRUC_11   
039F                STRUC_11:   .SET   STRUC_12   
039F                STRUC_12:   .SET   0   
039F                          ;*Macro unroll:  _djnz
039F   10 F2                  DJNZ   DLOOP_TOP   
03A1                          ;*Macro unroll:  DLOOP_FWD
03A1                CUR_ADR:   .SET   $   
0391                          .ORG   DLOOP_TOP - 2   
0391   A1 03                  DW   CUR_ADR   
03A1                          .ORG   CUR_ADR   
03A1                          ;*Macro unroll:  DLOOP_POP
03A1                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03A1                DLOOP_TOP:   .SET   DLOOP_2   
03A1                DLOOP_2:   .SET   DLOOP_3   
03A1                DLOOP_3:   .SET   DLOOP_4   
03A1                DLOOP_4:   .SET   DLOOP_5   
03A1                DLOOP_5:   .SET   DLOOP_6   
03A1                DLOOP_6:   .SET   DLOOP_7   
03A1                DLOOP_7:   .SET   DLOOP_8   
03A1                DLOOP_8:   .SET   DLOOP_9   
03A1                DLOOP_9:   .SET   DLOOP_10   
03A1                DLOOP_10:   .SET   DLOOP_11   
03A1                DLOOP_11:   .SET   DLOOP_12   
03A1                DLOOP_12:   .SET   0   
03A1   17                     RLA      
03A2   2F                     CPL      
03A3   47                     LD   B,A   
03A4   79                     LD   A,C   
03A5   48                     LD   C,B   
03A6   06 08                  LD   B,8   
03A8                          ;*Macro unroll:  _do
03A8   18 03                  JR   L_M_938S375   
03AA   C3 AA 03               JP   $   
03AD                          ;*Macro unroll:  DLOOP_PUSH $
03AD                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03AD                DLOOP_12:   .SET   DLOOP_11   
03AD                DLOOP_11:   .SET   DLOOP_10   
03AD                DLOOP_10:   .SET   DLOOP_9   
03AD                DLOOP_9:   .SET   DLOOP_8   
03AD                DLOOP_8:   .SET   DLOOP_7   
03AD                DLOOP_7:   .SET   DLOOP_6   
03AD                DLOOP_6:   .SET   DLOOP_5   
03AD                DLOOP_5:   .SET   DLOOP_4   
03AD                DLOOP_4:   .SET   DLOOP_3   
03AD                DLOOP_3:   .SET   DLOOP_2   
03AD                DLOOP_2:   .SET   DLOOP_TOP   
03AD                DLOOP_TOP:   .SET   $   
03AD                L_M_938S375:      
03AD   17                     RLA      
03AE   ED 6A                  ADC   HL,HL   
03B0   ED 52                  SBC   HL,DE   
03B2                          ;*Macro unroll:  _if c
03B2   DA B8 03               JP   c,L_M_942S379   
03B5   C3 B5 03               JP   $   
03B8                          ;*Macro unroll:  STRUC_PUSH $
03B8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03B8                STRUC_12:   .SET   STRUC_11   
03B8                STRUC_11:   .SET   STRUC_10   
03B8                STRUC_10:   .SET   STRUC_9   
03B8                STRUC_9:   .SET   STRUC_8   
03B8                STRUC_8:   .SET   STRUC_7   
03B8                STRUC_7:   .SET   STRUC_6   
03B8                STRUC_6:   .SET   STRUC_5   
03B8                STRUC_5:   .SET   STRUC_4   
03B8                STRUC_4:   .SET   STRUC_3   
03B8                STRUC_3:   .SET   STRUC_2   
03B8                STRUC_2:   .SET   STRUC_TOP   
03B8                STRUC_TOP:   .SET   $   
03B8                L_M_942S379:      
03B8   19                     ADD   HL,DE   
03B9                          ;*Macro unroll:  _endif
03B9                          ;*Macro unroll:  STRUC_FWD
03B9                CUR_ADR:   .SET   $   
03B6                          .ORG   STRUC_TOP - 2   
03B6   B9 03                  DW   CUR_ADR   
03B9                          .ORG   CUR_ADR   
03B9                          ;*Macro unroll:  STRUC_POP
03B9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03B9                STRUC_TOP:   .SET   STRUC_2   
03B9                STRUC_2:   .SET   STRUC_3   
03B9                STRUC_3:   .SET   STRUC_4   
03B9                STRUC_4:   .SET   STRUC_5   
03B9                STRUC_5:   .SET   STRUC_6   
03B9                STRUC_6:   .SET   STRUC_7   
03B9                STRUC_7:   .SET   STRUC_8   
03B9                STRUC_8:   .SET   STRUC_9   
03B9                STRUC_9:   .SET   STRUC_10   
03B9                STRUC_10:   .SET   STRUC_11   
03B9                STRUC_11:   .SET   STRUC_12   
03B9                STRUC_12:   .SET   0   
03B9                          ;*Macro unroll:  _djnz
03B9   10 F2                  DJNZ   DLOOP_TOP   
03BB                          ;*Macro unroll:  DLOOP_FWD
03BB                CUR_ADR:   .SET   $   
03AB                          .ORG   DLOOP_TOP - 2   
03AB   BB 03                  DW   CUR_ADR   
03BB                          .ORG   CUR_ADR   
03BB                          ;*Macro unroll:  DLOOP_POP
03BB                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03BB                DLOOP_TOP:   .SET   DLOOP_2   
03BB                DLOOP_2:   .SET   DLOOP_3   
03BB                DLOOP_3:   .SET   DLOOP_4   
03BB                DLOOP_4:   .SET   DLOOP_5   
03BB                DLOOP_5:   .SET   DLOOP_6   
03BB                DLOOP_6:   .SET   DLOOP_7   
03BB                DLOOP_7:   .SET   DLOOP_8   
03BB                DLOOP_8:   .SET   DLOOP_9   
03BB                DLOOP_9:   .SET   DLOOP_10   
03BB                DLOOP_10:   .SET   DLOOP_11   
03BB                DLOOP_11:   .SET   DLOOP_12   
03BB                DLOOP_12:   .SET   0   
03BB   17                     RLA      
03BC   2F                     CPL      
03BD   41                     LD   B,C   
03BE   4F                     LD   C,A   
03BF   D1                     POP   DE   
03C0   C9                     RET      
03C1                             ; 
03C1                             ; unsignedMultiply -  unsigned multiply ***
03C1                             ; 
03C1                             ; params:  u1 in BC, u2 in DE
03C1                             ; returns: result in HLDE
03C1                             ; destroys: AF
03C1                             ; 
03C1                UNSIGNEDMULTIPLY:      
03C1   21 00 00               LD   HL,0   
03C4   3E 11                  LD   A,17   ; loop counter
03C6   B7                     OR   A   ; clear carry
03C7                          ;*Macro unroll:  _do
03C7   18 03                  JR   L_M_963S402   
03C9   C3 C9 03               JP   $   
03CC                          ;*Macro unroll:  DLOOP_PUSH $
03CC                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03CC                DLOOP_12:   .SET   DLOOP_11   
03CC                DLOOP_11:   .SET   DLOOP_10   
03CC                DLOOP_10:   .SET   DLOOP_9   
03CC                DLOOP_9:   .SET   DLOOP_8   
03CC                DLOOP_8:   .SET   DLOOP_7   
03CC                DLOOP_7:   .SET   DLOOP_6   
03CC                DLOOP_6:   .SET   DLOOP_5   
03CC                DLOOP_5:   .SET   DLOOP_4   
03CC                DLOOP_4:   .SET   DLOOP_3   
03CC                DLOOP_3:   .SET   DLOOP_2   
03CC                DLOOP_2:   .SET   DLOOP_TOP   
03CC                DLOOP_TOP:   .SET   $   
03CC                L_M_963S402:      
03CC   CB 1C                  RR   H   
03CE   CB 1D                  RR   L   
03D0   CB 1A                  RR   D   
03D2   CB 1B                  RR   E   
03D4                          ;*Macro unroll:  _if c
03D4   DA DA 03               JP   c,L_M_968S407   
03D7   C3 D7 03               JP   $   
03DA                          ;*Macro unroll:  STRUC_PUSH $
03DA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03DA                STRUC_12:   .SET   STRUC_11   
03DA                STRUC_11:   .SET   STRUC_10   
03DA                STRUC_10:   .SET   STRUC_9   
03DA                STRUC_9:   .SET   STRUC_8   
03DA                STRUC_8:   .SET   STRUC_7   
03DA                STRUC_7:   .SET   STRUC_6   
03DA                STRUC_6:   .SET   STRUC_5   
03DA                STRUC_5:   .SET   STRUC_4   
03DA                STRUC_4:   .SET   STRUC_3   
03DA                STRUC_3:   .SET   STRUC_2   
03DA                STRUC_2:   .SET   STRUC_TOP   
03DA                STRUC_TOP:   .SET   $   
03DA                L_M_968S407:      
03DA   09                     ADD   HL,BC   
03DB                          ;*Macro unroll:  _endif
03DB                          ;*Macro unroll:  STRUC_FWD
03DB                CUR_ADR:   .SET   $   
03D8                          .ORG   STRUC_TOP - 2   
03D8   DB 03                  DW   CUR_ADR   
03DB                          .ORG   CUR_ADR   
03DB                          ;*Macro unroll:  STRUC_POP
03DB                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03DB                STRUC_TOP:   .SET   STRUC_2   
03DB                STRUC_2:   .SET   STRUC_3   
03DB                STRUC_3:   .SET   STRUC_4   
03DB                STRUC_4:   .SET   STRUC_5   
03DB                STRUC_5:   .SET   STRUC_6   
03DB                STRUC_6:   .SET   STRUC_7   
03DB                STRUC_7:   .SET   STRUC_8   
03DB                STRUC_8:   .SET   STRUC_9   
03DB                STRUC_9:   .SET   STRUC_10   
03DB                STRUC_10:   .SET   STRUC_11   
03DB                STRUC_11:   .SET   STRUC_12   
03DB                STRUC_12:   .SET   0   
03DB   3D                     DEC   A   
03DC                          ;*Macro unroll:  _until z
03DC   CA C9 03               JP   z,DLOOP_TOP - 3   
03DF                          ;*Macro unroll:  DLOOP_FWD               ; needed?
03DF                CUR_ADR:   .SET   $   ; needed?
03CA                          .ORG   DLOOP_TOP - 2   
03CA   DF 03                  DW   CUR_ADR   
03DF                          .ORG   CUR_ADR   
03DF                          ;*Macro unroll:  _enddo
03DF   C3 CC 03               JP   DLOOP_TOP   
03E2                          ;*Macro unroll:  DLOOP_FWD
03E2                CUR_ADR:   .SET   $   
03CA                          .ORG   DLOOP_TOP - 2   
03CA   E2 03                  DW   CUR_ADR   
03E2                          .ORG   CUR_ADR   
03E2                          ;*Macro unroll:  DLOOP_POP
03E2                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03E2                DLOOP_TOP:   .SET   DLOOP_2   
03E2                DLOOP_2:   .SET   DLOOP_3   
03E2                DLOOP_3:   .SET   DLOOP_4   
03E2                DLOOP_4:   .SET   DLOOP_5   
03E2                DLOOP_5:   .SET   DLOOP_6   
03E2                DLOOP_6:   .SET   DLOOP_7   
03E2                DLOOP_7:   .SET   DLOOP_8   
03E2                DLOOP_8:   .SET   DLOOP_9   
03E2                DLOOP_9:   .SET   DLOOP_10   
03E2                DLOOP_10:   .SET   DLOOP_11   
03E2                DLOOP_11:   .SET   DLOOP_12   
03E2                DLOOP_12:   .SET   0   
03E2   C9                     RET      
03E3                          ;*Macro unroll: mCODE ":",1,0,colon
03E3                HEADER_COLON:      
03E3   52 03                  DW   link   
03E5                LINK:     .SET   HEADER_colon   
03E5   01                     DB   0 + 1   
03E6   3A                     DB   ":"   
03E7                COLON:       
03E7                          ;*Macro unroll:  ENTER
03E7   CF                     RST   $08   
03E8   83 04                  DW   create   ; create the dictionary entry / header
03EA   57 08 B6 0E            DW   here,fetch   ; back up 3 bytes to start of data area
03EE   82 11 03 00 1E 01      DW   lit,3,SUBB   
03F4   57 08 95 0E            DW   here,store   
03F8   82 11 CF 00 88 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
03FE   29 14 B6 0E 57 05      DW   latest,fetch,hidden   ; make the word hidden (see below for definition).
0404   7D 05                  DW   rbrac   ; go into compile mode.
0406                          ;*Macro unroll:  EXIT                                ; return from the function.
0406   83 0E                  DW   exit   ; return from the function.
0408   C3 72 0E               JP   enter   
040B                          ;*Macro unroll: mCODE ";",1,msk_immed,semicolon
040B                HEADER_SEMICOLON:      
040B   E3 03                  DW   link   
040D                LINK:     .SET   HEADER_semicolon   
040D   81                     DB   msk_immed + 1   
040E   3B                     DB   ";"   
040F                SEMICOLON:      
040F                          ;*Macro unroll:  ENTER
040F   CF                     RST   $08   
0410   82 11 83 0E 6C 0F      DW   lit,exit,comma   ; append exit (so the word will return).
0416   29 14 B6 0E 57 05      DW   latest,fetch,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
041C   70 05                  DW   lbrac   ; go back to immediate mode.
041E                          ;*Macro unroll:  EXIT                                ; return from the function.
041E   83 0E                  DW   exit   ; return from the function.
0420   C3 72 0E               JP   enter   
0423                          ;*Macro unroll: mCODE ":noname",7,0,colonNoName
0423                HEADER_COLONNONAME:      
0423   0B 04                  DW   link   
0425                LINK:     .SET   HEADER_colonNoName   
0425   07                     DB   0 + 7   
0426   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
042D                COLONNONAME:      
042D                          ;*Macro unroll:  ENTER
042D   CF                     RST   $08   
042E   57 08 B6 0E            DW   here,fetch   ; TOS = here
0432   82 11 CF 00 88 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0438   7D 05                  DW   rbrac   ; go into compile mode.
043A                          ;*Macro unroll:  EXIT                                ; return from the function.
043A   83 0E                  DW   exit   ; return from the function.
043C   C3 72 0E               JP   enter   
043F                          ;*Macro unroll: mCODE "variable",8,0,variable         ; ( n -- ) get name from input
043F                HEADER_VARIABLE:      ; ( n -- ) get name from input
043F   23 04                  DW   link   
0441                LINK:     .SET   HEADER_variable   
0441   08                     DB   0 + 8   
0442   76 61 72 69 61 62 6C 65 DB   "variable"   
044A                VARIABLE:      
044A                          ;*Macro unroll:  ENTER
044A   CF                     RST   $08   
044B   82 11 01 00 53 02      DW   lit,1,cells   
0451   57 08 B6 0E 17 12      DW   here,fetch,swap   ; n -- here n
0457   39 0F                  DW   allot   ; allocate n bytes, push addr
0459   EE 04                  DW   constant   
045B                          ;*Macro unroll:  EXIT
045B   83 0E                  DW   exit   
045D   C3 72 0E               JP   enter   
0460                          ;*Macro unroll: mCODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
0460                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
0460   3F 04                  DW   link   
0462                LINK:     .SET   HEADER_bufferColon   
0462   07                     DB   0 + 7   
0463   62 75 66 66 65 72 3A   DB   "buffer:"   
046A                BUFFERCOLON:      
046A                          ;*Macro unroll:  ENTER
046A   CF                     RST   $08   
046B   57 08 B6 0E 17 12      DW   here,fetch,swap   ; n -- here n
0471   39 0F                  DW   allot   ; allocate n bytes, push addr
0473   EE 04                  DW   constant   
0475                          ;*Macro unroll:  EXIT
0475   83 0E                  DW   exit   
0477   C3 72 0E               JP   enter   
047A                          ;*Macro unroll: mCODE "create",6,0,create             ; --
047A                HEADER_CREATE:      ; --
047A   60 04                  DW   link   
047C                LINK:     .SET   HEADER_create   
047C   06                     DB   0 + 6   
047D   63 72 65 61 74 65      DB   "create"   
0483                CREATE:      
0483                          ;*Macro unroll:  ENTER
0483   CF                     RST   $08   
0484   57 08 B6 0E            DW   here,fetch   ; get old "here"
0488   29 14 B6 0E 6C 0F      DW   latest,fetch,comma   ; write link to previous word to "here"
048E   29 14 95 0E            DW   latest,store   ; update latest to old "here"
0492   F0 0D FE 0A            DW   bl,word   ; read word token
0496   E3 0E 38 03 39 0F      DW   cfetch,ONEP,allot   ; 
049C   82 11 C3 00 88 0F      DW   lit,jp_opcode,cComma   ; compile default behavious
04A2   82 11 AD 04 6C 0F      DW   lit,xcreate,comma   ; i.e. push addr of data area
04A8                          ;*Macro unroll:  EXIT                                ; exit from forth
04A8   83 0E                  DW   exit   ; exit from forth
04AA   C3 72 0E               JP   enter   
04AD                XCREATE:      
04AD                          ;*Macro unroll:  ENTER
04AD   CF                     RST   $08   
04AE   88 12                  DW   rfrom   ; push onto stack
04B0                          ;*Macro unroll:  EXIT
04B0   83 0E                  DW   exit   
04B2   C3 72 0E               JP   enter   
04B5                          ;*Macro unroll: mCODE "does>", 5, msk_immed, does         ; --
04B5                HEADER_DOES:      ; --
04B5   7A 04                  DW   link   
04B7                LINK:     .SET   HEADER_does   
04B7   85                     DB   msk_immed + 5   
04B8   64 6F 65 73 3E         DB   "does>"   
04BD                DOES:        
04BD                          ;*Macro unroll:  ENTER
04BD   CF                     RST   $08   
04BE   82 11 96 05 6C 0F      DW   lit,xdoes,comma   
04C4   82 11 86 05            DW   lit,dodoes   
04C8   57 08 B6 0E            DW   here,fetch   
04CC   82 11 CD 00            DW   lit,call_opcode   
04D0   4B 12 C4 0E            DW   over,cstore   
04D4   38 03 95 0E            DW   ONEP,store   
04D8   82 11 03 00 39 0F      DW   lit,3,allot   
04DE                          ;*Macro unroll:  EXIT
04DE   83 0E                  DW   exit   
04E0   C3 72 0E               JP   enter   
04E3                          ;*Macro unroll: mCODE "constant",8,0,constant         ; --
04E3                HEADER_CONSTANT:      ; --
04E3   B5 04                  DW   link   
04E5                LINK:     .SET   HEADER_constant   
04E5   08                     DB   0 + 8   
04E6   63 6F 6E 73 74 61 6E 74 DB   "constant"   
04EE                CONSTANT:      
04EE                          ;*Macro unroll:  ENTER
04EE   CF                     RST   $08   
04EF   83 04 6C 0F 96 05      DW   create,comma,xdoes   
04F5   CF                     RST   $08   
04F6   88 12                  DW   rfrom   ; push onto stack
04F8   B6 0E                  DW   fetch   
04FA                          ;*Macro unroll:  EXIT
04FA   83 0E                  DW   exit   
04FC   C3 72 0E               JP   enter   
04FF                          ;*Macro unroll: mCODE "'",1,0,tick                    ; quotes next word
04FF                HEADER_TICK:      ; quotes next word
04FF   E3 04                  DW   link   
0501                LINK:     .SET   HEADER_tick   
0501   01                     DB   0 + 1   
0502   27                     DB   "'"   
0503                TICK:        
0503                          ;*Macro unroll:  ENTER
0503   CF                     RST   $08   
0504   F0 0D FE 0A 3C 05 CD 01 DW   bl,word,find,zEqual   
050C   88 12 CF 12 4B 12 4B 12 CE 00 73 12 DW   rFrom,count,over,over,plus,toR   
0518                          ;*Macro unroll:  EXIT
0518   83 0E                  DW   exit   
051A   C3 72 0E               JP   enter   
051D                          ;*Macro unroll: mCODE "immediate",9,MSK_IMMED,IMMEDIATE
051D                HEADER_IMMEDIATE:      
051D   FF 04                  DW   link   
051F                LINK:     .SET   HEADER_IMMEDIATE   
051F   89                     DB   MSK_IMMED + 9   
0520   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
0529                IMMEDIATE:      
0529   2A 5F 32               LD   HL,(VAR_LATEST)   ; get head of latest word
052C   23                     INC   HL   ; point to flags byte
052D   23                     INC   HL   
052E   3E 80                  LD   a,MSK_IMMED   
0530   AE                     XOR   (HL)   ; toggle the IMMED bit.
0531   77                     LD   (HL),a   
0532                          ;*Macro unroll:  NEXT
0532   C3 72 0E               JP   enter   
0535                          ;*Macro unroll: mCODE "find",4,0,FIND
0535                HEADER_FIND:      
0535   1D 05                  DW   link   
0537                LINK:     .SET   HEADER_FIND   
0537   04                     DB   0 + 4   
0538   66 69 6E 64            DB   "find"   
053C                FIND:        
053C                          ;*Macro unroll:  ppop0 H,L
053C   DD 2B                  DEC   IX   
053E   DD 66 00               LD   H,(IX+0)   
0541   DD 2B                  DEC   IX   
0543   DD 6E 00               LD   L,(IX+0)   
0546   CD 79 0B               CALL   lookup   ; params: HL = string address, BC = string length
0549                             ; returns: DE = found header ptr or 0
0549                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
0549   4B                     LD   C,E   ; move to TOS
054A   42                     LD   B,D   
054B                          ;*Macro unroll:  NEXT
054B   C3 72 0E               JP   enter   
054E                          ;*Macro unroll: mCODE "hidden",6,0,HIDDEN
054E                HEADER_HIDDEN:      
054E   35 05                  DW   link   
0550                LINK:     .SET   HEADER_HIDDEN   
0550   06                     DB   0 + 6   
0551   68 69 64 64 65 6E      DB   "hidden"   
0557                HIDDEN:      
0557                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
0557   60                     LD   H,B   ; HL = Dictionary entry.
0558   69                     LD   L,C   
0559                          ;*Macro unroll:  ppop0 B,C
0559   DD 2B                  DEC   IX   
055B   DD 46 00               LD   B,(IX+0)   
055E   DD 2B                  DEC   IX   
0560   DD 4E 00               LD   C,(IX+0)   
0563   23                     INC   HL   
0564   23                     INC   HL   ; Point to name/flags byte.
0565   7E                     LD   A,(HL)   
0566   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
0568   77                     LD   (HL),A   
0569                          ;*Macro unroll:  NEXT
0569   C3 72 0E               JP   enter   
056C                          ;*Macro unroll: mCODE "[",1,MSK_IMMED,LBRAC
056C                HEADER_LBRAC:      
056C   4E 05                  DW   link   
056E                LINK:     .SET   HEADER_LBRAC   
056E   81                     DB   MSK_IMMED + 1   
056F   5B                     DB   "["   
0570                LBRAC:       
0570   21 00 00               LD   HL,0   
0573   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 0.
0576                          ;*Macro unroll:  NEXT
0576   C3 72 0E               JP   enter   
0579                          ;*Macro unroll: mCODE "]",1,0,RBRAC
0579                HEADER_RBRAC:      
0579   6C 05                  DW   link   
057B                LINK:     .SET   HEADER_RBRAC   
057B   01                     DB   0 + 1   
057C   5D                     DB   "]"   
057D                RBRAC:       
057D   21 01 00               LD   HL,1   
0580   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 1.
0583                          ;*Macro unroll:  NEXT
0583   C3 72 0E               JP   enter   
0586                DODOES:      ; -- a-addr
0586                          ;*Macro unroll:  ppush0 B,C
0586   DD 71 00               LD   (IX+0),C   
0589   DD 23                  INC   IX   
058B   DD 70 00               LD   (IX+0),B   
058E   DD 23                  INC   IX   
0590   E1                     POP   HL   ; parameter field address
0591   C1                     POP   BC   
0592   E5                     PUSH   HL   
0593                          ;*Macro unroll:  NEXT
0593   C3 72 0E               JP   enter   
0596                XDOES:       ; --
0596                          ;*Macro unroll:  ENTER
0596   CF                     RST   $08   
0597   88 12                  DW   rfrom   
0599   29 14 B6 0E 15 0B      DW   latest,fetch,tcfa   
059F   82 11 CD 00            DW   lit,call_opcode   
05A3   4B 12 C4 0E            DW   over,cstore   
05A7   38 03 95 0E            DW   ONEP,store   
05AB                          ;*Macro unroll:  EXIT
05AB   83 0E                  DW   exit   
05AD   C3 72 0E               JP   enter   
05B0                          ;*Macro unroll: mCODE "postpone",8,msk_immed,postpone ; --
05B0                HEADER_POSTPONE:      ; --
05B0   79 05                  DW   link   
05B2                LINK:     .SET   HEADER_postpone   
05B2   88                     DB   msk_immed + 8   
05B3   70 6F 73 74 70 6F 6E 65 DB   "postpone"   
05BB                POSTPONE:      
05BB   CF                     RST   $08   
05BC   F0 0D FE 0A CF 12      DW   bl,word,count   ; pstr -- ptr len
05C2   03 12 CD 01            DW   DUPP,zEqual   
05C6                          ;*Macro unroll:  cIf
05C6   2F 07 00 00            DW   QBRAN,0   
05CA                          ;*Macro unroll:  CPL_PUSH $
05CA                CPL_COUNT:   .SET   CPL_COUNT + 1   
05CA                CPL_10:   .SET   CPL_9   
05CA                CPL_9:    .SET   CPL_8   
05CA                CPL_8:    .SET   CPL_7   
05CA                CPL_7:    .SET   CPL_6   
05CA                CPL_6:    .SET   CPL_5   
05CA                CPL_5:    .SET   CPL_4   
05CA                CPL_4:    .SET   CPL_3   
05CA                CPL_3:    .SET   CPL_2   
05CA                CPL_2:    .SET   CPL_TOP   
05CA                CPL_TOP:   .SET   $   
05CA   37 12 37 12            DW   drop,drop   ; ptr len --
05CE                          ;*Macro unroll:  cElse
05CE   4C 07 00 00            DW   BRAN,0   
05D2                          ;*Macro unroll:  cBRANCH_FWD
05D2                CUR_ADR:   .SET   $   
05C8                          .ORG   CPL_TOP - 2   
05C8   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
05D2                          .ORG   CUR_ADR   
05D2                CPL_TOP:   .SET   $   
05D2   D9 05                  DW   postponeToken   ; interpret the next word
05D4                          ;*Macro unroll:  cEndif
05D4                          ;*Macro unroll:  cBRANCH_FWD
05D4                CUR_ADR:   .SET   $   
05D0                          .ORG   CPL_TOP - 2   
05D0   04 00                  DW   CUR_ADR - CPL_TOP + 2   
05D4                          .ORG   CUR_ADR   
05D4                          ;*Macro unroll:  CPL_POP
05D4                CPL_COUNT:   .SET   CPL_COUNT - 1   
05D4                CPL_TOP:   .SET   CPL_2   
05D4                CPL_2:    .SET   CPL_3   
05D4                CPL_3:    .SET   CPL_4   
05D4                CPL_4:    .SET   CPL_5   
05D4                CPL_5:    .SET   CPL_6   
05D4                CPL_6:    .SET   CPL_7   
05D4                CPL_7:    .SET   CPL_8   
05D4                CPL_8:    .SET   CPL_9   
05D4                CPL_9:    .SET   CPL_10   
05D4                CPL_10:   .SET   0   
05D4                          ;*Macro unroll:  EXIT
05D4   83 0E                  DW   exit   
05D6   C3 72 0E               JP   enter   
05D9                POSTPONETOKEN:      ; --
05D9   CF                     RST   $08   
05DA   4B 12 4B 12 3C 05      DW   over,over,find   ; ptr len -- ptr len addr
05E0   03 12 E2 01            DW   DUPP,zNotEqual   
05E4                          ;*Macro unroll:  cIf
05E4   2F 07 00 00            DW   QBRAN,0   
05E8                          ;*Macro unroll:  CPL_PUSH $
05E8                CPL_COUNT:   .SET   CPL_COUNT + 1   
05E8                CPL_10:   .SET   CPL_9   
05E8                CPL_9:    .SET   CPL_8   
05E8                CPL_8:    .SET   CPL_7   
05E8                CPL_7:    .SET   CPL_6   
05E8                CPL_6:    .SET   CPL_5   
05E8                CPL_5:    .SET   CPL_4   
05E8                CPL_4:    .SET   CPL_3   
05E8                CPL_3:    .SET   CPL_2   
05E8                CPL_2:    .SET   CPL_TOP   
05E8                CPL_TOP:   .SET   $   
05E8   F5 05                  DW   postponeWord   
05EA                          ;*Macro unroll:  cElse
05EA   4C 07 00 00            DW   BRAN,0   
05EE                          ;*Macro unroll:  cBRANCH_FWD
05EE                CUR_ADR:   .SET   $   
05E6                          .ORG   CPL_TOP - 2   
05E6   08 00                  DW   CUR_ADR - CPL_TOP + 2   
05EE                          .ORG   CUR_ADR   
05EE                CPL_TOP:   .SET   $   
05EE   31 06                  DW   postponeLiteral   
05F0                          ;*Macro unroll:  cEndif
05F0                          ;*Macro unroll:  cBRANCH_FWD
05F0                CUR_ADR:   .SET   $   
05EC                          .ORG   CPL_TOP - 2   
05EC   04 00                  DW   CUR_ADR - CPL_TOP + 2   
05F0                          .ORG   CUR_ADR   
05F0                          ;*Macro unroll:  CPL_POP
05F0                CPL_COUNT:   .SET   CPL_COUNT - 1   
05F0                CPL_TOP:   .SET   CPL_2   
05F0                CPL_2:    .SET   CPL_3   
05F0                CPL_3:    .SET   CPL_4   
05F0                CPL_4:    .SET   CPL_5   
05F0                CPL_5:    .SET   CPL_6   
05F0                CPL_6:    .SET   CPL_7   
05F0                CPL_7:    .SET   CPL_8   
05F0                CPL_8:    .SET   CPL_9   
05F0                CPL_9:    .SET   CPL_10   
05F0                CPL_10:   .SET   0   
05F0                          ;*Macro unroll:  EXIT
05F0   83 0E                  DW   exit   
05F2   C3 72 0E               JP   enter   
05F5                POSTPONEWORD:      ; ( headptr -- )
05F5   CF                     RST   $08   ; enter forth
05F6   17 12 37 12 17 12 37 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
05FE   03 12 82 11 02 00 CE 00 E3 0E DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0608   82 11 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
060E   CD 01                  DW   zEqual   
0610                          ;*Macro unroll:  cIf
0610   2F 07 00 00            DW   QBRAN,0   
0614                          ;*Macro unroll:  CPL_PUSH $
0614                CPL_COUNT:   .SET   CPL_COUNT + 1   
0614                CPL_10:   .SET   CPL_9   
0614                CPL_9:    .SET   CPL_8   
0614                CPL_8:    .SET   CPL_7   
0614                CPL_7:    .SET   CPL_6   
0614                CPL_6:    .SET   CPL_5   
0614                CPL_5:    .SET   CPL_4   
0614                CPL_4:    .SET   CPL_3   
0614                CPL_3:    .SET   CPL_2   
0614                CPL_2:    .SET   CPL_TOP   
0614                CPL_TOP:   .SET   $   
0614   82 11 82 11 6C 0F      DW   lit,lit,comma   
061A   15 0B 6C 0F            DW   tcfa,comma   
061E   82 11 6C 0F 6C 0F      DW   lit,comma,comma   
0624                          ;*Macro unroll:  cElse
0624   4C 07 00 00            DW   BRAN,0   
0628                          ;*Macro unroll:  cBRANCH_FWD
0628                CUR_ADR:   .SET   $   
0612                          .ORG   CPL_TOP - 2   
0612   16 00                  DW   CUR_ADR - CPL_TOP + 2   
0628                          .ORG   CUR_ADR   
0628                CPL_TOP:   .SET   $   
0628   15 0B 6C 0F            DW   tcfa,comma   
062C                          ;*Macro unroll:  cEndIf
062C                          ;*Macro unroll:  cBRANCH_FWD
062C                CUR_ADR:   .SET   $   
0626                          .ORG   CPL_TOP - 2   
0626   06 00                  DW   CUR_ADR - CPL_TOP + 2   
062C                          .ORG   CUR_ADR   
062C                          ;*Macro unroll:  CPL_POP
062C                CPL_COUNT:   .SET   CPL_COUNT - 1   
062C                CPL_TOP:   .SET   CPL_2   
062C                CPL_2:    .SET   CPL_3   
062C                CPL_3:    .SET   CPL_4   
062C                CPL_4:    .SET   CPL_5   
062C                CPL_5:    .SET   CPL_6   
062C                CPL_6:    .SET   CPL_7   
062C                CPL_7:    .SET   CPL_8   
062C                CPL_8:    .SET   CPL_9   
062C                CPL_9:    .SET   CPL_10   
062C                CPL_10:   .SET   0   
062C                          ;*Macro unroll:  EXIT
062C   83 0E                  DW   exit   
062E   C3 72 0E               JP   enter   
0631                POSTPONELITERAL:      ; ( ptr len -- )
0631   CF                     RST   $08   ; enter forth
0632   37 12                  DW   drop   ; ptr len addr - ptr len
0634   9C 0A CD 01            DW   number,zEqual   ; parse to number
0638                          ;*Macro unroll:  cif
0638   2F 07 00 00            DW   QBRAN,0   
063C                          ;*Macro unroll:  CPL_PUSH $
063C                CPL_COUNT:   .SET   CPL_COUNT + 1   
063C                CPL_10:   .SET   CPL_9   
063C                CPL_9:    .SET   CPL_8   
063C                CPL_8:    .SET   CPL_7   
063C                CPL_7:    .SET   CPL_6   
063C                CPL_6:    .SET   CPL_5   
063C                CPL_5:    .SET   CPL_4   
063C                CPL_4:    .SET   CPL_3   
063C                CPL_3:    .SET   CPL_2   
063C                CPL_2:    .SET   CPL_TOP   
063C                CPL_TOP:   .SET   $   
063C   82 11 82 11            DW   lit,lit   ; (val -- val "lit" )
0640   6C 0F 6C 0F            DW   comma,comma   ; compile "lit" val
0644                          ;*Macro unroll:  cElse
0644   4C 07 00 00            DW   BRAN,0   
0648                          ;*Macro unroll:  cBRANCH_FWD
0648                CUR_ADR:   .SET   $   
063A                          .ORG   CPL_TOP - 2   
063A   0E 00                  DW   CUR_ADR - CPL_TOP + 2   
0648                          .ORG   CUR_ADR   
0648                CPL_TOP:   .SET   $   
0648   37 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
064A   B5 12                  DW   litstr   ; err != 0, parse error
064C   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
065B   57 0D                  DW   type   
065D                          ;*Macro unroll:  cEndIf
065D                          ;*Macro unroll:  cBRANCH_FWD
065D                CUR_ADR:   .SET   $   
0646                          .ORG   CPL_TOP - 2   
0646   17 00                  DW   CUR_ADR - CPL_TOP + 2   
065D                          .ORG   CUR_ADR   
065D                          ;*Macro unroll:  CPL_POP
065D                CPL_COUNT:   .SET   CPL_COUNT - 1   
065D                CPL_TOP:   .SET   CPL_2   
065D                CPL_2:    .SET   CPL_3   
065D                CPL_3:    .SET   CPL_4   
065D                CPL_4:    .SET   CPL_5   
065D                CPL_5:    .SET   CPL_6   
065D                CPL_6:    .SET   CPL_7   
065D                CPL_7:    .SET   CPL_8   
065D                CPL_8:    .SET   CPL_9   
065D                CPL_9:    .SET   CPL_10   
065D                CPL_10:   .SET   0   
065D                          ;*Macro unroll:  EXIT
065D   83 0E                  DW   exit   
065F   C3 72 0E               JP   enter   
0662                          ;*Macro unroll: mCODE "if",2,msk_immed,if
0662                HEADER_IF:      
0662   B0 05                  DW   link   
0664                LINK:     .SET   HEADER_if   
0664   82                     DB   msk_immed + 2   
0665   69 66                  DB   "if"   
0667                IF:          
0667                          ;*Macro unroll:  ENTER
0667   CF                     RST   $08   
0668   02 09                  DW   lbrace   
066A   82 11 2F 07 6C 0F      DW   lit,QBRAN,comma   ; compile ?branch
0670   57 08 B6 0E 03 12 6C 0F DW   here,fetch,DUPP,comma   ; compile here and also push on stack
0678                          ;*Macro unroll:  EXIT
0678   83 0E                  DW   exit   
067A   C3 72 0E               JP   enter   
067D                          ;*Macro unroll: mCODE "else",4,msk_immed,else
067D                HEADER_ELSE:      
067D   62 06                  DW   link   
067F                LINK:     .SET   HEADER_else   
067F   84                     DB   msk_immed + 4   
0680   65 6C 73 65            DB   "else"   
0684                ELSE:        
0684                          ;*Macro unroll:  ENTER
0684   CF                     RST   $08   
0685   82 11 4C 07 6C 0F      DW   lit,BRAN,comma   ; definite branch to just over the false-part
068B   57 08 B6 0E            DW   here,fetch   ; save here on stack
068F   82 11 00 00 6C 0F      DW   lit,0,comma   ; compile a dummy offset
0695   17 12                  DW   swap   ; now back-fill the original (if) offset
0697   B0 06                  DW   xendif   ; must call xendif not endif
0699                          ;*Macro unroll:  EXIT
0699   83 0E                  DW   exit   
069B   C3 72 0E               JP   enter   
069E                          ;*Macro unroll: mCODE "endif",5,msk_immed,endif
069E                HEADER_ENDIF:      
069E   7D 06                  DW   link   
06A0                LINK:     .SET   HEADER_endif   
06A0   85                     DB   msk_immed + 5   
06A1   65 6E 64 69 66         DB   "endif"   
06A6                ENDIF:       
06A6                          ;*Macro unroll:  ENTER
06A6   CF                     RST   $08   
06A7   B0 06                  DW   xendif   ; must call xendif not endif
06A9   52 09                  DW   rbraceExec   
06AB                          ;*Macro unroll:  EXIT
06AB   83 0E                  DW   exit   
06AD   C3 72 0E               JP   enter   
06B0                XENDIF:      ; must call xendif not endif
06B0                          ;*Macro unroll:  ENTER
06B0   CF                     RST   $08   
06B1   03 12                  DW   DUPP   
06B3   57 08 B6 0E 17 12 1E 01 DW   here,fetch,swap,SUBB   ; calculate the offset from the address saved on the stack
06BB   17 12 95 0E            DW   swap,store   ; store the offset in the back-filled location
06BF                          ;*Macro unroll:  EXIT
06BF   83 0E                  DW   exit   
06C1   C3 72 0E               JP   enter   
06C4                             ; begin condition while ... repeat
06C4                          ;*Macro unroll: mCODE "begin",5,msk_immed,begin
06C4                HEADER_BEGIN:      
06C4   9E 06                  DW   link   
06C6                LINK:     .SET   HEADER_begin   
06C6   85                     DB   msk_immed + 5   
06C7   62 65 67 69 6E         DB   "begin"   
06CC                BEGIN:       
06CC                          ;*Macro unroll:  ENTER
06CC   CF                     RST   $08   
06CD   02 09                  DW   lbrace   
06CF   57 08 B6 0E            DW   here,fetch   ; save here on stack (here1)
06D3                          ;*Macro unroll:  EXIT
06D3   83 0E                  DW   exit   
06D5   C3 72 0E               JP   enter   
06D8                          ;*Macro unroll: mCODE "while",5,msk_immed,while
06D8                HEADER_WHILE:      
06D8   C4 06                  DW   link   
06DA                LINK:     .SET   HEADER_while   
06DA   85                     DB   msk_immed + 5   
06DB   77 68 69 6C 65         DB   "while"   
06E0                WHILE:       
06E0                          ;*Macro unroll:  ENTER
06E0   CF                     RST   $08   
06E1   82 11 2F 07 6C 0F      DW   lit,QBRAN,comma   ; compile branch on zero
06E7   57 08 B6 0E            DW   here,fetch   ; save here in stack (here2)
06EB   82 11 00 00 6C 0F      DW   lit,0,comma   ; compile dummy offset
06F1                          ;*Macro unroll:  EXIT
06F1   83 0E                  DW   exit   
06F3   C3 72 0E               JP   enter   
06F6                          ;*Macro unroll: mCODE "repeat",6,msk_immed,repeat
06F6                HEADER_REPEAT:      
06F6   D8 06                  DW   link   
06F8                LINK:     .SET   HEADER_repeat   
06F8   86                     DB   msk_immed + 6   
06F9   72 65 70 65 61 74      DB   "repeat"   
06FF                REPEAT:      
06FF                          ;*Macro unroll:  ENTER
06FF   CF                     RST   $08   
0700   82 11 4C 07 6C 0F      DW   lit,BRAN,comma   ; compile branch
0706   17 12                  DW   swap   ; tos = here1
0708   57 08 B6 0E 1E 01 6C 0F DW   here,fetch,SUBB,comma   ; compile offset (here1 - here3)
0710   03 12                  DW   DUPP   
0712   57 08 B6 0E 17 12 1E 01 DW   here,fetch,swap,SUBB   ; compile offset (here2 - here3)
071A   17 12 95 0E            DW   swap,store   ; save offset in here2
071E   52 09                  DW   rbraceExec   
0720                          ;*Macro unroll:  EXIT
0720   83 0E                  DW   exit   
0722   C3 72 0E               JP   enter   
0725                             ; ?branch   x --              branch if TOS zero
0725                          ;*Macro unroll: mCODE "?branch",7,0,QBRAN
0725                HEADER_QBRAN:      
0725   F6 06                  DW   link   
0727                LINK:     .SET   HEADER_QBRAN   
0727   07                     DB   0 + 7   
0728   3F 62 72 61 6E 63 68   DB   "?branch"   
072F                QBRAN:       
072F                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
072F   79                     LD   A,C   ; test old TOS
0730   B0                     OR   B   
0731                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
0731   DD 2B                  DEC   IX   ; POP new TOS
0733   DD 46 00               LD   B,(IX+0)   
0736   DD 2B                  DEC   IX   
0738   DD 4E 00               LD   C,(IX+0)   
073B   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
073D   E1                     POP   HL   
073E   23                     INC   HL   ; else skip inline value
073F   23                     INC   HL   
0740                          ;*Macro unroll:  NEXT1
0740   C3 73 0E               JP   enter1   
0743                          ;*Macro unroll: mCODE "branch",6,0,BRAN         ; relative branching
0743                HEADER_BRAN:      ; relative branching
0743   25 07                  DW   link   
0745                LINK:     .SET   HEADER_BRAN   
0745   06                     DB   0 + 6   
0746   62 72 61 6E 63 68      DB   "branch"   
074C                BRAN:        
074C   E1                     POP   HL   ; add the offset to the instruction pointer
074D   5E                     LD   E,(HL)   
074E   23                     INC   HL   
074F   56                     LD   D,(HL)   
0750   2B                     DEC   HL   
0751   19                     ADD   HL,DE   
0752                          ;*Macro unroll:  NEXT1
0752   C3 73 0E               JP   enter1   
0755                             ; ?branch   x --              branch if TOS zero
0755                          ;*Macro unroll: mCODE "?branch1",7,0,QBRAN1
0755                HEADER_QBRAN1:      
0755   43 07                  DW   link   
0757                LINK:     .SET   HEADER_QBRAN1   
0757   07                     DB   0 + 7   
0758   3F 62 72 61 6E 63 68 31 DB   "?branch1"   
0760                QBRAN1:      
0760                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
0760   79                     LD   A,C   ; test old TOS
0761   B0                     OR   B   
0762                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
0762   DD 2B                  DEC   IX   ; POP new TOS
0764   DD 46 00               LD   B,(IX+0)   
0767   DD 2B                  DEC   IX   
0769   DD 4E 00               LD   C,(IX+0)   
076C   28 10                  JR   z,BRAN1   ; if old TOS=0, branch
076E   E1                     POP   HL   
076F   23                     INC   HL   ; else skip inline value
0770   23                     INC   HL   
0771                          ;*Macro unroll:  NEXT1
0771   C3 73 0E               JP   enter1   
0774                          ;*Macro unroll: mCODE "branch1",6,0,BRAN1         ; relative branching
0774                HEADER_BRAN1:      ; relative branching
0774   55 07                  DW   link   
0776                LINK:     .SET   HEADER_BRAN1   
0776   06                     DB   0 + 6   
0777   62 72 61 6E 63 68 31   DB   "branch1"   
077E                BRAN1:       
077E   E1                     POP   HL   ; add the offset to the instruction pointer
077F   5E                     LD   E,(HL)   
0780   23                     INC   HL   
0781   56                     LD   D,(HL)   
0782   EB                     EX   DE,HL   
0783                          ;*Macro unroll:  NEXT1
0783   C3 73 0E               JP   enter1   
0786                          ;*Macro unroll: mCONST "version",7,0,version,1
0786                          ;*Macro unroll: mCODE "version",7,0,version
0786                HEADER_VERSION:      
0786   74 07                  DW   link   
0788                LINK:     .SET   HEADER_version   
0788   07                     DB   0 + 7   
0789   76 65 72 73 69 6F 6E   DB   "version"   
0790                VERSION:      
0790                          ;*Macro unroll:  ppush0 B,C
0790   DD 71 00               LD   (IX+0),C   
0793   DD 23                  INC   IX   
0795   DD 70 00               LD   (IX+0),B   
0798   DD 23                  INC   IX   
079A   01 01 00               LD   BC,1   
079D                          ;*Macro unroll:  NEXT
079D   C3 72 0E               JP   enter   
07A0                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
07A0                          ;*Macro unroll: mCODE "r0",2,0,rz
07A0                HEADER_RZ:      
07A0   86 07                  DW   link   
07A2                LINK:     .SET   HEADER_rz   
07A2   02                     DB   0 + 2   
07A3   72 30                  DB   "r0"   
07A5                RZ:          
07A5                          ;*Macro unroll:  ppush0 B,C
07A5   DD 71 00               LD   (IX+0),C   
07A8   DD 23                  INC   IX   
07AA   DD 70 00               LD   (IX+0),B   
07AD   DD 23                  INC   IX   
07AF   01 A7 2E               LD   BC,ret_stack   
07B2                          ;*Macro unroll:  NEXT
07B2   C3 72 0E               JP   enter   
07B5                          ;*Macro unroll: mCONST "msk_immed",9,0,__msk_immed,msk_immed
07B5                          ;*Macro unroll: mCODE "msk_immed",9,0,__msk_immed
07B5                HEADER___MSK_IMMED:      
07B5   A0 07                  DW   link   
07B7                LINK:     .SET   HEADER___msk_immed   
07B7   09                     DB   0 + 9   
07B8   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
07C1                __MSK_IMMED:      
07C1                          ;*Macro unroll:  ppush0 B,C
07C1   DD 71 00               LD   (IX+0),C   
07C4   DD 23                  INC   IX   
07C6   DD 70 00               LD   (IX+0),B   
07C9   DD 23                  INC   IX   
07CB   01 80 00               LD   BC,msk_immed   
07CE                          ;*Macro unroll:  NEXT
07CE   C3 72 0E               JP   enter   
07D1                          ;*Macro unroll: mCONST "msk_hidden",10,0,__msk_hidden,msk_hidden
07D1                          ;*Macro unroll: mCODE "msk_hidden",10,0,__msk_hidden
07D1                HEADER___MSK_HIDDEN:      
07D1   B5 07                  DW   link   
07D3                LINK:     .SET   HEADER___msk_hidden   
07D3   0A                     DB   0 + 10   
07D4   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
07DE                __MSK_HIDDEN:      
07DE                          ;*Macro unroll:  ppush0 B,C
07DE   DD 71 00               LD   (IX+0),C   
07E1   DD 23                  INC   IX   
07E3   DD 70 00               LD   (IX+0),B   
07E6   DD 23                  INC   IX   
07E8   01 40 00               LD   BC,msk_hidden   
07EB                          ;*Macro unroll:  NEXT
07EB   C3 72 0E               JP   enter   
07EE                          ;*Macro unroll: mCONST "msk_length",10,0,__msk_length,msk_length
07EE                          ;*Macro unroll: mCODE "msk_length",10,0,__msk_length
07EE                HEADER___MSK_LENGTH:      
07EE   D1 07                  DW   link   
07F0                LINK:     .SET   HEADER___msk_length   
07F0   0A                     DB   0 + 10   
07F1   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
07FB                __MSK_LENGTH:      
07FB                          ;*Macro unroll:  ppush0 B,C
07FB   DD 71 00               LD   (IX+0),C   
07FE   DD 23                  INC   IX   
0800   DD 70 00               LD   (IX+0),B   
0803   DD 23                  INC   IX   
0805   01 3F 00               LD   BC,msk_length   
0808                          ;*Macro unroll:  NEXT
0808   C3 72 0E               JP   enter   
080B                          ;*Macro unroll: mCONST "TRUE",4,0,TRUE,-1
080B                          ;*Macro unroll: mCODE "TRUE",4,0,TRUE
080B                HEADER_TRUE:      
080B   EE 07                  DW   link   
080D                LINK:     .SET   HEADER_TRUE   
080D   04                     DB   0 + 4   
080E   54 52 55 45            DB   "TRUE"   
0812                TRUE:        
0812                          ;*Macro unroll:  ppush0 B,C
0812   DD 71 00               LD   (IX+0),C   
0815   DD 23                  INC   IX   
0817   DD 70 00               LD   (IX+0),B   
081A   DD 23                  INC   IX   
081C   01 FF FF               LD   BC,-1   
081F                          ;*Macro unroll:  NEXT
081F   C3 72 0E               JP   enter   
0822                          ;*Macro unroll: mCONST "FALSE",5,0,FALSE,0
0822                          ;*Macro unroll: mCODE "FALSE",5,0,FALSE
0822                HEADER_FALSE:      
0822   0B 08                  DW   link   
0824                LINK:     .SET   HEADER_FALSE   
0824   05                     DB   0 + 5   
0825   46 41 4C 53 45         DB   "FALSE"   
082A                FALSE:       
082A                          ;*Macro unroll:  ppush0 B,C
082A   DD 71 00               LD   (IX+0),C   
082D   DD 23                  INC   IX   
082F   DD 70 00               LD   (IX+0),B   
0832   DD 23                  INC   IX   
0834   01 00 00               LD   BC,0   
0837                          ;*Macro unroll:  NEXT
0837   C3 72 0E               JP   enter   
083A                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
083A                          ;*Macro unroll: mCODE "pad",3,0,pad
083A                HEADER_PAD:      
083A   22 08                  DW   link   
083C                LINK:     .SET   HEADER_pad   
083C   03                     DB   0 + 3   
083D   70 61 64               DB   "pad"   
0840                PAD:         
0840                          ;*Macro unroll:  ppush0 B,C
0840   DD 71 00               LD   (IX+0),C   
0843   DD 23                  INC   IX   
0845   DD 70 00               LD   (IX+0),B   
0848   DD 23                  INC   IX   
084A   01 4D 31               LD   BC,var_pad   
084D                          ;*Macro unroll:  NEXT
084D   C3 72 0E               JP   enter   
0850                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
0850                          ;*Macro unroll: mCODE "here",4,0,here
0850                HEADER_HERE:      
0850   3A 08                  DW   link   
0852                LINK:     .SET   HEADER_here   
0852   04                     DB   0 + 4   
0853   68 65 72 65            DB   "here"   
0857                HERE:        
0857                          ;*Macro unroll:  ppush0 B,C
0857   DD 71 00               LD   (IX+0),C   
085A   DD 23                  INC   IX   
085C   DD 70 00               LD   (IX+0),B   
085F   DD 23                  INC   IX   
0861   01 51 32               LD   BC,var_here   
0864                          ;*Macro unroll:  NEXT
0864   C3 72 0E               JP   enter   
0867                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
0867                          ;*Macro unroll: mCODE "intp_stop",9,0,intp_stop
0867                HEADER_INTP_STOP:      
0867   50 08                  DW   link   
0869                LINK:     .SET   HEADER_intp_stop   
0869   09                     DB   0 + 9   
086A   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
0873                INTP_STOP:      
0873                          ;*Macro unroll:  ppush0 B,C
0873   DD 71 00               LD   (IX+0),C   
0876   DD 23                  INC   IX   
0878   DD 70 00               LD   (IX+0),B   
087B   DD 23                  INC   IX   
087D   01 53 32               LD   BC,var_intp_stop   
0880                          ;*Macro unroll:  NEXT
0880   C3 72 0E               JP   enter   
0883                          ;*Macro unroll: mVAR "state",5,0,state, var_state
0883                          ;*Macro unroll: mCODE "state",5,0,state
0883                HEADER_STATE:      
0883   67 08                  DW   link   
0885                LINK:     .SET   HEADER_state   
0885   05                     DB   0 + 5   
0886   73 74 61 74 65         DB   "state"   
088B                STATE:       
088B                          ;*Macro unroll:  ppush0 B,C
088B   DD 71 00               LD   (IX+0),C   
088E   DD 23                  INC   IX   
0890   DD 70 00               LD   (IX+0),B   
0893   DD 23                  INC   IX   
0895   01 55 32               LD   BC,var_state   
0898                          ;*Macro unroll:  NEXT
0898   C3 72 0E               JP   enter   
089B                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
089B                          ;*Macro unroll: mCODE "nesting",7,0,nesting
089B                HEADER_NESTING:      
089B   83 08                  DW   link   
089D                LINK:     .SET   HEADER_nesting   
089D   07                     DB   0 + 7   
089E   6E 65 73 74 69 6E 67   DB   "nesting"   
08A5                NESTING:      
08A5                          ;*Macro unroll:  ppush0 B,C
08A5   DD 71 00               LD   (IX+0),C   
08A8   DD 23                  INC   IX   
08AA   DD 70 00               LD   (IX+0),B   
08AD   DD 23                  INC   IX   
08AF   01 57 32               LD   BC,var_nesting   
08B2                          ;*Macro unroll:  NEXT
08B2   C3 72 0E               JP   enter   
08B5                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
08B5                          ;*Macro unroll: mCODE "sp0",3,0,sp0
08B5                HEADER_SP0:      
08B5   9B 08                  DW   link   
08B7                LINK:     .SET   HEADER_sp0   
08B7   03                     DB   0 + 3   
08B8   73 70 30               DB   "sp0"   
08BB                SP0:         
08BB                          ;*Macro unroll:  ppush0 B,C
08BB   DD 71 00               LD   (IX+0),C   
08BE   DD 23                  INC   IX   
08C0   DD 70 00               LD   (IX+0),B   
08C3   DD 23                  INC   IX   
08C5   01 59 32               LD   BC,var_sp0   
08C8                          ;*Macro unroll:  NEXT
08C8   C3 72 0E               JP   enter   
08CB                          ;*Macro unroll: mVAR "base",4,0,base, var_base
08CB                          ;*Macro unroll: mCODE "base",4,0,base
08CB                HEADER_BASE:      
08CB   B5 08                  DW   link   
08CD                LINK:     .SET   HEADER_base   
08CD   04                     DB   0 + 4   
08CE   62 61 73 65            DB   "base"   
08D2                BASE:        
08D2                          ;*Macro unroll:  ppush0 B,C
08D2   DD 71 00               LD   (IX+0),C   
08D5   DD 23                  INC   IX   
08D7   DD 70 00               LD   (IX+0),B   
08DA   DD 23                  INC   IX   
08DC   01 5B 32               LD   BC,var_base   
08DF                          ;*Macro unroll:  NEXT
08DF   C3 72 0E               JP   enter   
08E2                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
08E2                          ;*Macro unroll: mCODE "latestStr",6,0,latestStr
08E2                HEADER_LATESTSTR:      
08E2   CB 08                  DW   link   
08E4                LINK:     .SET   HEADER_latestStr   
08E4   06                     DB   0 + 6   
08E5   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
08EE                LATESTSTR:      
08EE                          ;*Macro unroll:  ppush0 B,C
08EE   DD 71 00               LD   (IX+0),C   
08F1   DD 23                  INC   IX   
08F3   DD 70 00               LD   (IX+0),B   
08F6   DD 23                  INC   IX   
08F8   01 5D 32               LD   BC,var_latest_str   
08FB                          ;*Macro unroll:  NEXT
08FB   C3 72 0E               JP   enter   
08FE                          ;*Macro unroll: mCODE "{",1,msk_immed,lbrace
08FE                HEADER_LBRACE:      
08FE   E2 08                  DW   link   
0900                LINK:     .SET   HEADER_lbrace   
0900   81                     DB   msk_immed + 1   
0901   7B                     DB   "{"   
0902                LBRACE:      
0902                          ;*Macro unroll:  ENTER
0902   CF                     RST   $08   
0903   8B 08 B6 0E CD 01      DW   state,fetch,ZEQUAL   
0909   A5 08 B6 0E CD 01      DW   nesting,fetch,ZEQUAL   
090F   86 00                  DW   ANDD   
0911                          ;*Macro unroll:  cIf
0911   2F 07 00 00            DW   QBRAN,0   
0915                          ;*Macro unroll:  CPL_PUSH $
0915                CPL_COUNT:   .SET   CPL_COUNT + 1   
0915                CPL_10:   .SET   CPL_9   
0915                CPL_9:    .SET   CPL_8   
0915                CPL_8:    .SET   CPL_7   
0915                CPL_7:    .SET   CPL_6   
0915                CPL_6:    .SET   CPL_5   
0915                CPL_5:    .SET   CPL_4   
0915                CPL_4:    .SET   CPL_3   
0915                CPL_3:    .SET   CPL_2   
0915                CPL_2:    .SET   CPL_TOP   
0915                CPL_TOP:   .SET   $   
0915   57 08 B6 0E            DW   here,fetch   ; TOS = here
0919   82 11 CF 00 88 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
091F                          ;*Macro unroll:  cEndIf
091F                          ;*Macro unroll:  cBRANCH_FWD
091F                CUR_ADR:   .SET   $   
0913                          .ORG   CPL_TOP - 2   
0913   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
091F                          .ORG   CUR_ADR   
091F                          ;*Macro unroll:  CPL_POP
091F                CPL_COUNT:   .SET   CPL_COUNT - 1   
091F                CPL_TOP:   .SET   CPL_2   
091F                CPL_2:    .SET   CPL_3   
091F                CPL_3:    .SET   CPL_4   
091F                CPL_4:    .SET   CPL_5   
091F                CPL_5:    .SET   CPL_6   
091F                CPL_6:    .SET   CPL_7   
091F                CPL_7:    .SET   CPL_8   
091F                CPL_8:    .SET   CPL_9   
091F                CPL_9:    .SET   CPL_10   
091F                CPL_10:   .SET   0   
091F   3C 0D                  DW   nestPlus   ; increase nesting
0921                          ;*Macro unroll:  EXIT                             ; return from the function.
0921   83 0E                  DW   exit   ; return from the function.
0923   C3 72 0E               JP   enter   
0926                          ;*Macro unroll: mCODE "}",1,msk_immed,rbrace
0926                HEADER_RBRACE:      
0926   FE 08                  DW   link   
0928                LINK:     .SET   HEADER_rbrace   
0928   81                     DB   msk_immed + 1   
0929   7D                     DB   "}"   
092A                RBRACE:      
092A                          ;*Macro unroll:  ENTER
092A   CF                     RST   $08   
092B   46 0D                  DW   nestMinus   ; reduce nesting
092D   8B 08 B6 0E CD 01      DW   state,fetch,ZEQUAL   
0933   A5 08 B6 0E CD 01      DW   nesting,fetch,ZEQUAL   
0939   86 00                  DW   ANDD   
093B                          ;*Macro unroll:  cIf
093B   2F 07 00 00            DW   QBRAN,0   
093F                          ;*Macro unroll:  CPL_PUSH $
093F                CPL_COUNT:   .SET   CPL_COUNT + 1   
093F                CPL_10:   .SET   CPL_9   
093F                CPL_9:    .SET   CPL_8   
093F                CPL_8:    .SET   CPL_7   
093F                CPL_7:    .SET   CPL_6   
093F                CPL_6:    .SET   CPL_5   
093F                CPL_5:    .SET   CPL_4   
093F                CPL_4:    .SET   CPL_3   
093F                CPL_3:    .SET   CPL_2   
093F                CPL_2:    .SET   CPL_TOP   
093F                CPL_TOP:   .SET   $   
093F   82 11 83 0E 6C 0F      DW   lit,exit,comma   ; append exit (so the word will return).
0945                          ;*Macro unroll:  cEndIf
0945                          ;*Macro unroll:  cBRANCH_FWD
0945                CUR_ADR:   .SET   $   
093D                          .ORG   CPL_TOP - 2   
093D   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0945                          .ORG   CUR_ADR   
0945                          ;*Macro unroll:  CPL_POP
0945                CPL_COUNT:   .SET   CPL_COUNT - 1   
0945                CPL_TOP:   .SET   CPL_2   
0945                CPL_2:    .SET   CPL_3   
0945                CPL_3:    .SET   CPL_4   
0945                CPL_4:    .SET   CPL_5   
0945                CPL_5:    .SET   CPL_6   
0945                CPL_6:    .SET   CPL_7   
0945                CPL_7:    .SET   CPL_8   
0945                CPL_8:    .SET   CPL_9   
0945                CPL_9:    .SET   CPL_10   
0945                CPL_10:   .SET   0   
0945                          ;*Macro unroll:  EXIT                             ; return from the function.
0945   83 0E                  DW   exit   ; return from the function.
0947   C3 72 0E               JP   enter   
094A                          ;*Macro unroll: mCODE "}exec",5,msk_immed,rbraceExec
094A                HEADER_RBRACEEXEC:      
094A   26 09                  DW   link   
094C                LINK:     .SET   HEADER_rbraceExec   
094C   85                     DB   msk_immed + 5   
094D   7D 65 78 65 63         DB   "}exec"   
0952                RBRACEEXEC:      
0952                          ;*Macro unroll:  ENTER
0952   CF                     RST   $08   
0953   2A 09                  DW   rbrace   
0955   8B 08 B6 0E CD 01      DW   state,fetch,ZEQUAL   
095B   A5 08 B6 0E CD 01      DW   nesting,fetch,ZEQUAL   
0961   86 00                  DW   ANDD   
0963                          ;*Macro unroll:  cIf
0963   2F 07 00 00            DW   QBRAN,0   
0967                          ;*Macro unroll:  CPL_PUSH $
0967                CPL_COUNT:   .SET   CPL_COUNT + 1   
0967                CPL_10:   .SET   CPL_9   
0967                CPL_9:    .SET   CPL_8   
0967                CPL_8:    .SET   CPL_7   
0967                CPL_7:    .SET   CPL_6   
0967                CPL_6:    .SET   CPL_5   
0967                CPL_5:    .SET   CPL_4   
0967                CPL_4:    .SET   CPL_3   
0967                CPL_3:    .SET   CPL_2   
0967                CPL_2:    .SET   CPL_TOP   
0967                CPL_TOP:   .SET   $   
0967   03 12                  DW   DUPP   
0969   57 08 95 0E            DW   here,store   
096D   35 0B                  DW   execute   
096F                          ;*Macro unroll:  cEndIf
096F                          ;*Macro unroll:  cBRANCH_FWD
096F                CUR_ADR:   .SET   $   
0965                          .ORG   CPL_TOP - 2   
0965   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
096F                          .ORG   CUR_ADR   
096F                          ;*Macro unroll:  CPL_POP
096F                CPL_COUNT:   .SET   CPL_COUNT - 1   
096F                CPL_TOP:   .SET   CPL_2   
096F                CPL_2:    .SET   CPL_3   
096F                CPL_3:    .SET   CPL_4   
096F                CPL_4:    .SET   CPL_5   
096F                CPL_5:    .SET   CPL_6   
096F                CPL_6:    .SET   CPL_7   
096F                CPL_7:    .SET   CPL_8   
096F                CPL_8:    .SET   CPL_9   
096F                CPL_9:    .SET   CPL_10   
096F                CPL_10:   .SET   0   
096F                          ;*Macro unroll:  EXIT                             ; return from the function.
096F   83 0E                  DW   exit   ; return from the function.
0971   C3 72 0E               JP   enter   
0974                          ;*Macro unroll: mCODE ".",1,0,DOT                 ; print top of stack in BASE
0974                HEADER_DOT:      ; print top of stack in BASE
0974   4A 09                  DW   link   
0976                LINK:     .SET   HEADER_DOT   
0976   01                     DB   0 + 1   
0977   2E                     DB   "."   
0978                DOT:         
0978   E5                     PUSH   HL   
0979   D5                     PUSH   DE   
097A   C5                     PUSH   BC   
097B                          ;*Macro unroll:  loadWord H,L, B,C
097B   69                     LD   L,C   
097C   60                     LD   H,B   
097D   3A 5B 32               LD   A,(VAR_BASE)   
0980   4F                     LD   C,A   
0981   11 CD 30               LD   DE,wordBuf   
0984   CD B6 09               CALL   formatNum   
0987   CD 61 11               CALL   printStr   
098A   CD 74 11               CALL   printSpace   
098D   C1                     POP   BC   
098E   D1                     POP   DE   
098F   E1                     POP   HL   
0990                          ;*Macro unroll:  ppop0 B,C
0990   DD 2B                  DEC   IX   
0992   DD 46 00               LD   B,(IX+0)   
0995   DD 2B                  DEC   IX   
0997   DD 4E 00               LD   C,(IX+0)   
099A                          ;*Macro unroll:  NEXT
099A   C3 72 0E               JP   enter   
099D                PRINTNUM:      
099D   E5                     PUSH   HL   
099E   D5                     PUSH   DE   
099F   C5                     PUSH   BC   
09A0                          ;*Macro unroll:  loadWord H,L, B,C
09A0   69                     LD   L,C   
09A1   60                     LD   H,B   
09A2   3A 5B 32               LD   A,(VAR_BASE)   
09A5   4F                     LD   C,A   
09A6   11 CD 30               LD   DE,wordBuf   
09A9   CD B6 09               CALL   formatNum   
09AC   CD 61 11               CALL   printStr   
09AF   CD 74 11               CALL   printSpace   
09B2   C1                     POP   BC   
09B3   D1                     POP   DE   
09B4   E1                     POP   HL   
09B5   C9                     RET      
09B6                             ; 
09B6                             ; HL = data, DE = ptr to lineBuf, C = base ***
09B6                             ; DE = ptr to string, BC = length
09B6                             ; 
09B6                FORMATNUM:      
09B6                             ; Detect sign of HL.
09B6   CB 7C                  BIT   7,H   
09B8                          ;*Macro unroll:  _if nz
09B8   C2 BE 09               JP   nz,L_M_1304S42   
09BB   C3 BB 09               JP   $   
09BE                          ;*Macro unroll:  STRUC_PUSH $
09BE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09BE                STRUC_12:   .SET   STRUC_11   
09BE                STRUC_11:   .SET   STRUC_10   
09BE                STRUC_10:   .SET   STRUC_9   
09BE                STRUC_9:   .SET   STRUC_8   
09BE                STRUC_8:   .SET   STRUC_7   
09BE                STRUC_7:   .SET   STRUC_6   
09BE                STRUC_6:   .SET   STRUC_5   
09BE                STRUC_5:   .SET   STRUC_4   
09BE                STRUC_4:   .SET   STRUC_3   
09BE                STRUC_3:   .SET   STRUC_2   
09BE                STRUC_2:   .SET   STRUC_TOP   
09BE                STRUC_TOP:   .SET   $   
09BE                L_M_1304S42:      
09BE                             ; HL is negative. Output "-" to string and negate HL.
09BE   3E 2D                  LD   A,"-"   
09C0   12                     LD   (DE),A   
09C1   13                     INC   DE   
09C2   CD 5E 03               CALL   negateNum   
09C5                          ;*Macro unroll:  _endif
09C5                          ;*Macro unroll:  STRUC_FWD
09C5                CUR_ADR:   .SET   $   
09BC                          .ORG   STRUC_TOP - 2   
09BC   C5 09                  DW   CUR_ADR   
09C5                          .ORG   CUR_ADR   
09C5                          ;*Macro unroll:  STRUC_POP
09C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09C5                STRUC_TOP:   .SET   STRUC_2   
09C5                STRUC_2:   .SET   STRUC_3   
09C5                STRUC_3:   .SET   STRUC_4   
09C5                STRUC_4:   .SET   STRUC_5   
09C5                STRUC_5:   .SET   STRUC_6   
09C5                STRUC_6:   .SET   STRUC_7   
09C5                STRUC_7:   .SET   STRUC_8   
09C5                STRUC_8:   .SET   STRUC_9   
09C5                STRUC_9:   .SET   STRUC_10   
09C5                STRUC_10:   .SET   STRUC_11   
09C5                STRUC_11:   .SET   STRUC_12   
09C5                STRUC_12:   .SET   0   
09C5   06 00                  LD   B,0   ; B will count character length of number
09C7                          ;*Macro unroll:  _do
09C7   18 03                  JR   L_M_1312S51   
09C9   C3 C9 09               JP   $   
09CC                          ;*Macro unroll:  DLOOP_PUSH $
09CC                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09CC                DLOOP_12:   .SET   DLOOP_11   
09CC                DLOOP_11:   .SET   DLOOP_10   
09CC                DLOOP_10:   .SET   DLOOP_9   
09CC                DLOOP_9:   .SET   DLOOP_8   
09CC                DLOOP_8:   .SET   DLOOP_7   
09CC                DLOOP_7:   .SET   DLOOP_6   
09CC                DLOOP_6:   .SET   DLOOP_5   
09CC                DLOOP_5:   .SET   DLOOP_4   
09CC                DLOOP_4:   .SET   DLOOP_3   
09CC                DLOOP_3:   .SET   DLOOP_2   
09CC                DLOOP_2:   .SET   DLOOP_TOP   
09CC                DLOOP_TOP:   .SET   $   
09CC                L_M_1312S51:      
09CC   C5                     PUSH   BC   
09CD   CD 66 03               CALL   divideWordByByte   ; HL = HL / A, A = remainder
09D0   C1                     POP   BC   
09D1   F5                     PUSH   AF   
09D2   04                     INC   B   
09D3                          ;*Macro unroll:  checkZeroWord H,L
09D3   7D                     LD   A,L   
09D4   B4                     OR   H   
09D5                          ;*Macro unroll:  _until z
09D5   CA C9 09               JP   z,DLOOP_TOP - 3   
09D8                          ;*Macro unroll:  DLOOP_FWD               ; needed?
09D8                CUR_ADR:   .SET   $   ; needed?
09CA                          .ORG   DLOOP_TOP - 2   
09CA   D8 09                  DW   CUR_ADR   
09D8                          .ORG   CUR_ADR   
09D8                          ;*Macro unroll:  _enddo
09D8   C3 CC 09               JP   DLOOP_TOP   
09DB                          ;*Macro unroll:  DLOOP_FWD
09DB                CUR_ADR:   .SET   $   
09CA                          .ORG   DLOOP_TOP - 2   
09CA   DB 09                  DW   CUR_ADR   
09DB                          .ORG   CUR_ADR   
09DB                          ;*Macro unroll:  DLOOP_POP
09DB                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09DB                DLOOP_TOP:   .SET   DLOOP_2   
09DB                DLOOP_2:   .SET   DLOOP_3   
09DB                DLOOP_3:   .SET   DLOOP_4   
09DB                DLOOP_4:   .SET   DLOOP_5   
09DB                DLOOP_5:   .SET   DLOOP_6   
09DB                DLOOP_6:   .SET   DLOOP_7   
09DB                DLOOP_7:   .SET   DLOOP_8   
09DB                DLOOP_8:   .SET   DLOOP_9   
09DB                DLOOP_9:   .SET   DLOOP_10   
09DB                DLOOP_10:   .SET   DLOOP_11   
09DB                DLOOP_11:   .SET   DLOOP_12   
09DB                DLOOP_12:   .SET   0   
09DB                          ;*Macro unroll:  _do
09DB   18 03                  JR   L_M_1321S60   
09DD   C3 DD 09               JP   $   
09E0                          ;*Macro unroll:  DLOOP_PUSH $
09E0                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09E0                DLOOP_12:   .SET   DLOOP_11   
09E0                DLOOP_11:   .SET   DLOOP_10   
09E0                DLOOP_10:   .SET   DLOOP_9   
09E0                DLOOP_9:   .SET   DLOOP_8   
09E0                DLOOP_8:   .SET   DLOOP_7   
09E0                DLOOP_7:   .SET   DLOOP_6   
09E0                DLOOP_6:   .SET   DLOOP_5   
09E0                DLOOP_5:   .SET   DLOOP_4   
09E0                DLOOP_4:   .SET   DLOOP_3   
09E0                DLOOP_3:   .SET   DLOOP_2   
09E0                DLOOP_2:   .SET   DLOOP_TOP   
09E0                DLOOP_TOP:   .SET   $   
09E0                L_M_1321S60:      
09E0   F1                     POP   AF   
09E1   C6 30                  ADD   A,$30   ; convert digit to ASCII
09E3   FE 3A                  CP   $3A   
09E5                          ;*Macro unroll:  _if nc
09E5   D2 EB 09               JP   nc,L_M_1325S64   
09E8   C3 E8 09               JP   $   
09EB                          ;*Macro unroll:  STRUC_PUSH $
09EB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09EB                STRUC_12:   .SET   STRUC_11   
09EB                STRUC_11:   .SET   STRUC_10   
09EB                STRUC_10:   .SET   STRUC_9   
09EB                STRUC_9:   .SET   STRUC_8   
09EB                STRUC_8:   .SET   STRUC_7   
09EB                STRUC_7:   .SET   STRUC_6   
09EB                STRUC_6:   .SET   STRUC_5   
09EB                STRUC_5:   .SET   STRUC_4   
09EB                STRUC_4:   .SET   STRUC_3   
09EB                STRUC_3:   .SET   STRUC_2   
09EB                STRUC_2:   .SET   STRUC_TOP   
09EB                STRUC_TOP:   .SET   $   
09EB                L_M_1325S64:      
09EB   C6 07                  ADD   A,7   
09ED                          ;*Macro unroll:  _endif
09ED                          ;*Macro unroll:  STRUC_FWD
09ED                CUR_ADR:   .SET   $   
09E9                          .ORG   STRUC_TOP - 2   
09E9   ED 09                  DW   CUR_ADR   
09ED                          .ORG   CUR_ADR   
09ED                          ;*Macro unroll:  STRUC_POP
09ED                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09ED                STRUC_TOP:   .SET   STRUC_2   
09ED                STRUC_2:   .SET   STRUC_3   
09ED                STRUC_3:   .SET   STRUC_4   
09ED                STRUC_4:   .SET   STRUC_5   
09ED                STRUC_5:   .SET   STRUC_6   
09ED                STRUC_6:   .SET   STRUC_7   
09ED                STRUC_7:   .SET   STRUC_8   
09ED                STRUC_8:   .SET   STRUC_9   
09ED                STRUC_9:   .SET   STRUC_10   
09ED                STRUC_10:   .SET   STRUC_11   
09ED                STRUC_11:   .SET   STRUC_12   
09ED                STRUC_12:   .SET   0   
09ED   12                     LD   (DE),A   
09EE   13                     INC   DE   
09EF                          ;*Macro unroll:  _djnz
09EF   10 EF                  DJNZ   DLOOP_TOP   
09F1                          ;*Macro unroll:  DLOOP_FWD
09F1                CUR_ADR:   .SET   $   
09DE                          .ORG   DLOOP_TOP - 2   
09DE   F1 09                  DW   CUR_ADR   
09F1                          .ORG   CUR_ADR   
09F1                          ;*Macro unroll:  DLOOP_POP
09F1                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09F1                DLOOP_TOP:   .SET   DLOOP_2   
09F1                DLOOP_2:   .SET   DLOOP_3   
09F1                DLOOP_3:   .SET   DLOOP_4   
09F1                DLOOP_4:   .SET   DLOOP_5   
09F1                DLOOP_5:   .SET   DLOOP_6   
09F1                DLOOP_6:   .SET   DLOOP_7   
09F1                DLOOP_7:   .SET   DLOOP_8   
09F1                DLOOP_8:   .SET   DLOOP_9   
09F1                DLOOP_9:   .SET   DLOOP_10   
09F1                DLOOP_10:   .SET   DLOOP_11   
09F1                DLOOP_11:   .SET   DLOOP_12   
09F1                DLOOP_12:   .SET   0   
09F1   21 CD 30               LD   HL,wordBuf   ;calc length
09F4   EB                     EX   DE,HL   
09F5   B7                     OR   A   
09F6   ED 52                  SBC   HL,DE   
09F8                          ;*Macro unroll:  loadWord B,C, H,L
09F8   4D                     LD   C,L   
09F9   44                     LD   B,H   
09FA   C9                     RET      
09FB                             ; 
09FB                             ; toNumber -  converts string to number in the ***
09FB                             ; base strored in VAR_BASE
09FB                             ; 
09FB                             ; params: HL = string address, BC = string length
09FB                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
09FB                             ; destroys: AF
09FB                             ; 
09FB                TONUMBER:      
09FB   FD E5                  PUSH   IY   ; save regs
09FD   E5                     PUSH   HL   
09FE   E5                     PUSH   HL   ; IY = HL
09FF   FD E1                  POP   IY   
0A01   11 00 00               LD   DE,0   ; 16 bit accum
0A04   21 00 00               LD   HL,0   ; 8 bit char
0A07                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
0A07   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
0A08   B0                     OR   B   
0A09                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
0A09   CA 0F 0A               JP   z,L_M_1353S97   ; trying to parse a zero-length string is an error, But will return 0.
0A0C   C3 0C 0A               JP   $   
0A0F                          ;*Macro unroll:  STRUC_PUSH $
0A0F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A0F                STRUC_12:   .SET   STRUC_11   
0A0F                STRUC_11:   .SET   STRUC_10   
0A0F                STRUC_10:   .SET   STRUC_9   
0A0F                STRUC_9:   .SET   STRUC_8   
0A0F                STRUC_8:   .SET   STRUC_7   
0A0F                STRUC_7:   .SET   STRUC_6   
0A0F                STRUC_6:   .SET   STRUC_5   
0A0F                STRUC_5:   .SET   STRUC_4   
0A0F                STRUC_4:   .SET   STRUC_3   
0A0F                STRUC_3:   .SET   STRUC_2   
0A0F                STRUC_2:   .SET   STRUC_TOP   
0A0F                STRUC_TOP:   .SET   $   
0A0F                L_M_1353S97:      
0A0F   E1                     POP   HL   
0A10   FD E1                  POP   IY   
0A12   C9                     RET      ; de = number, BC = err
0A13                          ;*Macro unroll:  _endif
0A13                          ;*Macro unroll:  STRUC_FWD
0A13                CUR_ADR:   .SET   $   
0A0D                          .ORG   STRUC_TOP - 2   
0A0D   13 0A                  DW   CUR_ADR   
0A13                          .ORG   CUR_ADR   
0A13                          ;*Macro unroll:  STRUC_POP
0A13                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A13                STRUC_TOP:   .SET   STRUC_2   
0A13                STRUC_2:   .SET   STRUC_3   
0A13                STRUC_3:   .SET   STRUC_4   
0A13                STRUC_4:   .SET   STRUC_5   
0A13                STRUC_5:   .SET   STRUC_6   
0A13                STRUC_6:   .SET   STRUC_7   
0A13                STRUC_7:   .SET   STRUC_8   
0A13                STRUC_8:   .SET   STRUC_9   
0A13                STRUC_9:   .SET   STRUC_10   
0A13                STRUC_10:   .SET   STRUC_11   
0A13                STRUC_11:   .SET   STRUC_12   
0A13                STRUC_12:   .SET   0   
0A13                             ; Check if first character is "-".
0A13   FD 7E 00               LD   A,(IY)   ; l = first character in string
0A16   FD 23                  INC   IY   
0A18   D5                     PUSH   DE   ; push 0 on stack
0A19   FE 2D                  CP   "-"   ; negative number?
0A1B                          ;*Macro unroll:  _if z
0A1B   CA 21 0A               JP   z,L_M_1363S107   
0A1E   C3 1E 0A               JP   $   
0A21                          ;*Macro unroll:  STRUC_PUSH $
0A21                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A21                STRUC_12:   .SET   STRUC_11   
0A21                STRUC_11:   .SET   STRUC_10   
0A21                STRUC_10:   .SET   STRUC_9   
0A21                STRUC_9:   .SET   STRUC_8   
0A21                STRUC_8:   .SET   STRUC_7   
0A21                STRUC_7:   .SET   STRUC_6   
0A21                STRUC_6:   .SET   STRUC_5   
0A21                STRUC_5:   .SET   STRUC_4   
0A21                STRUC_4:   .SET   STRUC_3   
0A21                STRUC_3:   .SET   STRUC_2   
0A21                STRUC_2:   .SET   STRUC_TOP   
0A21                STRUC_TOP:   .SET   $   
0A21                L_M_1363S107:      
0A21   D1                     POP   DE   
0A22   21 01 00               LD   HL,1   
0A25   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
0A26   0B                     DEC   BC   
0A27                          ;*Macro unroll:  checkZeroWord B,C
0A27   79                     LD   A,C   
0A28   B0                     OR   B   
0A29                          ;*Macro unroll:  _if z
0A29   CA 2F 0A               JP   z,L_M_1369S113   
0A2C   C3 2C 0A               JP   $   
0A2F                          ;*Macro unroll:  STRUC_PUSH $
0A2F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A2F                STRUC_12:   .SET   STRUC_11   
0A2F                STRUC_11:   .SET   STRUC_10   
0A2F                STRUC_10:   .SET   STRUC_9   
0A2F                STRUC_9:   .SET   STRUC_8   
0A2F                STRUC_8:   .SET   STRUC_7   
0A2F                STRUC_7:   .SET   STRUC_6   
0A2F                STRUC_6:   .SET   STRUC_5   
0A2F                STRUC_5:   .SET   STRUC_4   
0A2F                STRUC_4:   .SET   STRUC_3   
0A2F                STRUC_3:   .SET   STRUC_2   
0A2F                STRUC_2:   .SET   STRUC_TOP   
0A2F                STRUC_TOP:   .SET   $   
0A2F                L_M_1369S113:      
0A2F   E1                     POP   HL   ; error: string is only "-".
0A30   01 01 00               LD   BC,1   
0A33   E1                     POP   HL   
0A34   FD E1                  POP   IY   
0A36   C9                     RET      ; de = number, BC = err
0A37                          ;*Macro unroll:  _endif
0A37                          ;*Macro unroll:  STRUC_FWD
0A37                CUR_ADR:   .SET   $   
0A2D                          .ORG   STRUC_TOP - 2   
0A2D   37 0A                  DW   CUR_ADR   
0A37                          .ORG   CUR_ADR   
0A37                          ;*Macro unroll:  STRUC_POP
0A37                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A37                STRUC_TOP:   .SET   STRUC_2   
0A37                STRUC_2:   .SET   STRUC_3   
0A37                STRUC_3:   .SET   STRUC_4   
0A37                STRUC_4:   .SET   STRUC_5   
0A37                STRUC_5:   .SET   STRUC_6   
0A37                STRUC_6:   .SET   STRUC_7   
0A37                STRUC_7:   .SET   STRUC_8   
0A37                STRUC_8:   .SET   STRUC_9   
0A37                STRUC_9:   .SET   STRUC_10   
0A37                STRUC_10:   .SET   STRUC_11   
0A37                STRUC_11:   .SET   STRUC_12   
0A37                STRUC_12:   .SET   0   
0A37                             ; Loop reading digits.
0A37   C5                     PUSH   BC   
0A38   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0A3C   CD C1 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0A3F   C1                     POP   BC   
0A40   FD 7E 00               LD   A,(IY)   ; a = next character in string
0A43   FD 23                  INC   IY   
0A45                          ;*Macro unroll:  _endif
0A45                          ;*Macro unroll:  STRUC_FWD
0A45                CUR_ADR:   .SET   $   
0A1F                          .ORG   STRUC_TOP - 2   
0A1F   45 0A                  DW   CUR_ADR   
0A45                          .ORG   CUR_ADR   
0A45                          ;*Macro unroll:  STRUC_POP
0A45                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A45                STRUC_TOP:   .SET   STRUC_2   
0A45                STRUC_2:   .SET   STRUC_3   
0A45                STRUC_3:   .SET   STRUC_4   
0A45                STRUC_4:   .SET   STRUC_5   
0A45                STRUC_5:   .SET   STRUC_6   
0A45                STRUC_6:   .SET   STRUC_7   
0A45                STRUC_7:   .SET   STRUC_8   
0A45                STRUC_8:   .SET   STRUC_9   
0A45                STRUC_9:   .SET   STRUC_10   
0A45                STRUC_10:   .SET   STRUC_11   
0A45                STRUC_11:   .SET   STRUC_12   
0A45                STRUC_12:   .SET   0   
0A45                             ; Convert 0-9, A-z to a number 0-35.
0A45                          ;*Macro unroll:  _do
0A45   18 03                  JR   L_M_1385S130   
0A47   C3 47 0A               JP   $   
0A4A                          ;*Macro unroll:  DLOOP_PUSH $
0A4A                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A4A                DLOOP_12:   .SET   DLOOP_11   
0A4A                DLOOP_11:   .SET   DLOOP_10   
0A4A                DLOOP_10:   .SET   DLOOP_9   
0A4A                DLOOP_9:   .SET   DLOOP_8   
0A4A                DLOOP_8:   .SET   DLOOP_7   
0A4A                DLOOP_7:   .SET   DLOOP_6   
0A4A                DLOOP_6:   .SET   DLOOP_5   
0A4A                DLOOP_5:   .SET   DLOOP_4   
0A4A                DLOOP_4:   .SET   DLOOP_3   
0A4A                DLOOP_3:   .SET   DLOOP_2   
0A4A                DLOOP_2:   .SET   DLOOP_TOP   
0A4A                DLOOP_TOP:   .SET   $   
0A4A                L_M_1385S130:      
0A4A   D6 30                  SUB   "0"   ; < "0"?
0A4C   38 33                  JR   c,toNumberExit   ; invalid char, end of number
0A4E   FE 0A                  CP   10   ; <= "9"?
0A50                          ;*Macro unroll:  _if nc
0A50   D2 56 0A               JP   nc,L_M_1389S134   
0A53   C3 53 0A               JP   $   
0A56                          ;*Macro unroll:  STRUC_PUSH $
0A56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A56                STRUC_12:   .SET   STRUC_11   
0A56                STRUC_11:   .SET   STRUC_10   
0A56                STRUC_10:   .SET   STRUC_9   
0A56                STRUC_9:   .SET   STRUC_8   
0A56                STRUC_8:   .SET   STRUC_7   
0A56                STRUC_7:   .SET   STRUC_6   
0A56                STRUC_6:   .SET   STRUC_5   
0A56                STRUC_5:   .SET   STRUC_4   
0A56                STRUC_4:   .SET   STRUC_3   
0A56                STRUC_3:   .SET   STRUC_2   
0A56                STRUC_2:   .SET   STRUC_TOP   
0A56                STRUC_TOP:   .SET   $   
0A56                L_M_1389S134:      
0A56   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0A58                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0A58   DA 47 0A               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0A5B                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A5B                CUR_ADR:   .SET   $   ; needed?
0A48                          .ORG   DLOOP_TOP - 2   
0A48   5B 0A                  DW   CUR_ADR   
0A5B                          .ORG   CUR_ADR   
0A5B   C6 0A                  ADD   a,10   
0A5D                          ;*Macro unroll:  _endif
0A5D                          ;*Macro unroll:  STRUC_FWD
0A5D                CUR_ADR:   .SET   $   
0A54                          .ORG   STRUC_TOP - 2   
0A54   5D 0A                  DW   CUR_ADR   
0A5D                          .ORG   CUR_ADR   
0A5D                          ;*Macro unroll:  STRUC_POP
0A5D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A5D                STRUC_TOP:   .SET   STRUC_2   
0A5D                STRUC_2:   .SET   STRUC_3   
0A5D                STRUC_3:   .SET   STRUC_4   
0A5D                STRUC_4:   .SET   STRUC_5   
0A5D                STRUC_5:   .SET   STRUC_6   
0A5D                STRUC_6:   .SET   STRUC_7   
0A5D                STRUC_7:   .SET   STRUC_8   
0A5D                STRUC_8:   .SET   STRUC_9   
0A5D                STRUC_9:   .SET   STRUC_10   
0A5D                STRUC_10:   .SET   STRUC_11   
0A5D                STRUC_11:   .SET   STRUC_12   
0A5D                STRUC_12:   .SET   0   
0A5D   2A 5B 32               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
0A60   BD                     CP   L   ; >= BASE? then invalid char, end of number
0A61                          ;*Macro unroll:  _until nc
0A61   D2 47 0A               JP   nc,DLOOP_TOP - 3   
0A64                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A64                CUR_ADR:   .SET   $   ; needed?
0A48                          .ORG   DLOOP_TOP - 2   
0A48   64 0A                  DW   CUR_ADR   
0A64                          .ORG   CUR_ADR   
0A64   83                     ADD   A,E   
0A65   5F                     LD   E,A   
0A66   3E 00                  LD   A,0   
0A68   8A                     ADC   a,d   
0A69   57                     LD   D,A   
0A6A   0B                     DEC   BC   ; dec char count
0A6B                          ;*Macro unroll:  checkZeroWord B,C
0A6B   79                     LD   A,C   
0A6C   B0                     OR   B   
0A6D                          ;*Macro unroll:  _until z
0A6D   CA 47 0A               JP   z,DLOOP_TOP - 3   
0A70                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A70                CUR_ADR:   .SET   $   ; needed?
0A48                          .ORG   DLOOP_TOP - 2   
0A48   70 0A                  DW   CUR_ADR   
0A70                          .ORG   CUR_ADR   
0A70   C5                     PUSH   BC   
0A71   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0A75   CD C1 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0A78   C1                     POP   BC   
0A79   FD 7E 00               LD   A,(IY)   ; a = next character in string
0A7C   FD 23                  INC   IY   
0A7E                          ;*Macro unroll:  _enddo
0A7E   C3 4A 0A               JP   DLOOP_TOP   
0A81                          ;*Macro unroll:  DLOOP_FWD
0A81                CUR_ADR:   .SET   $   
0A48                          .ORG   DLOOP_TOP - 2   
0A48   81 0A                  DW   CUR_ADR   
0A81                          .ORG   CUR_ADR   
0A81                          ;*Macro unroll:  DLOOP_POP
0A81                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A81                DLOOP_TOP:   .SET   DLOOP_2   
0A81                DLOOP_2:   .SET   DLOOP_3   
0A81                DLOOP_3:   .SET   DLOOP_4   
0A81                DLOOP_4:   .SET   DLOOP_5   
0A81                DLOOP_5:   .SET   DLOOP_6   
0A81                DLOOP_6:   .SET   DLOOP_7   
0A81                DLOOP_7:   .SET   DLOOP_8   
0A81                DLOOP_8:   .SET   DLOOP_9   
0A81                DLOOP_9:   .SET   DLOOP_10   
0A81                DLOOP_10:   .SET   DLOOP_11   
0A81                DLOOP_11:   .SET   DLOOP_12   
0A81                DLOOP_12:   .SET   0   
0A81                TONUMBEREXIT:      
0A81   E1                     POP   HL   
0A82                          ;*Macro unroll:  checkZeroWord H,L
0A82   7D                     LD   A,L   
0A83   B4                     OR   H   
0A84                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0A84   C2 8A 0A               JP   nz,L_M_1415S163   ; if not -ve then skip
0A87   C3 87 0A               JP   $   
0A8A                          ;*Macro unroll:  STRUC_PUSH $
0A8A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A8A                STRUC_12:   .SET   STRUC_11   
0A8A                STRUC_11:   .SET   STRUC_10   
0A8A                STRUC_10:   .SET   STRUC_9   
0A8A                STRUC_9:   .SET   STRUC_8   
0A8A                STRUC_8:   .SET   STRUC_7   
0A8A                STRUC_7:   .SET   STRUC_6   
0A8A                STRUC_6:   .SET   STRUC_5   
0A8A                STRUC_5:   .SET   STRUC_4   
0A8A                STRUC_4:   .SET   STRUC_3   
0A8A                STRUC_3:   .SET   STRUC_2   
0A8A                STRUC_2:   .SET   STRUC_TOP   
0A8A                STRUC_TOP:   .SET   $   
0A8A                L_M_1415S163:      
0A8A   EB                     EX   DE,HL   ; negate de
0A8B   CD 5E 03               CALL   negateNum   
0A8E   EB                     EX   DE,HL   
0A8F                          ;*Macro unroll:  _endif
0A8F                          ;*Macro unroll:  STRUC_FWD
0A8F                CUR_ADR:   .SET   $   
0A88                          .ORG   STRUC_TOP - 2   
0A88   8F 0A                  DW   CUR_ADR   
0A8F                          .ORG   CUR_ADR   
0A8F                          ;*Macro unroll:  STRUC_POP
0A8F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A8F                STRUC_TOP:   .SET   STRUC_2   
0A8F                STRUC_2:   .SET   STRUC_3   
0A8F                STRUC_3:   .SET   STRUC_4   
0A8F                STRUC_4:   .SET   STRUC_5   
0A8F                STRUC_5:   .SET   STRUC_6   
0A8F                STRUC_6:   .SET   STRUC_7   
0A8F                STRUC_7:   .SET   STRUC_8   
0A8F                STRUC_8:   .SET   STRUC_9   
0A8F                STRUC_9:   .SET   STRUC_10   
0A8F                STRUC_10:   .SET   STRUC_11   
0A8F                STRUC_11:   .SET   STRUC_12   
0A8F                STRUC_12:   .SET   0   
0A8F   E1                     POP   HL   
0A90   FD E1                  POP   IY   
0A92   C9                     RET      ; de = number, BC = err
0A93                          ;*Macro unroll: mCODE "number",6,0,NUMBER         ; ( ptr len -- num err )
0A93                HEADER_NUMBER:      ; ( ptr len -- num err )
0A93   74 09                  DW   link   
0A95                LINK:     .SET   HEADER_NUMBER   
0A95   06                     DB   0 + 6   
0A96   6E 75 6D 62 65 72      DB   "number"   
0A9C                NUMBER:      
0A9C                          ;*Macro unroll:  ppop0 H,L
0A9C   DD 2B                  DEC   IX   
0A9E   DD 66 00               LD   H,(IX+0)   
0AA1   DD 2B                  DEC   IX   
0AA3   DD 6E 00               LD   L,(IX+0)   
0AA6   CD FB 09               CALL   toNumber   ; params: HL = string address, BC = string length
0AA9                             ; Returns the parsed number in DE,
0AA9                             ; BC = 0, success
0AA9                          ;*Macro unroll:  ppush0 D,E
0AA9   DD 73 00               LD   (IX+0),E   
0AAC   DD 23                  INC   IX   
0AAE   DD 72 00               LD   (IX+0),D   
0AB1   DD 23                  INC   IX   
0AB3                          ;*Macro unroll:  NEXT
0AB3   C3 72 0E               JP   enter   
0AB6                          ;*Macro unroll: mCODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
0AB6                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
0AB6   93 0A                  DW   link   
0AB8                LINK:     .SET   HEADER_decimal   
0AB8   07                     DB   0 + 7   
0AB9   64 65 63 69 6D 61 6C   DB   "decimal"   
0AC0                DECIMAL:      
0AC0                          ;*Macro unroll:  ENTER
0AC0   CF                     RST   $08   
0AC1   82 11 0A 00 D2 08 95 0E DW   lit,10,base,store   
0AC9                          ;*Macro unroll:  EXIT
0AC9   83 0E                  DW   exit   
0ACB   C3 72 0E               JP   enter   
0ACE                          ;*Macro unroll: mCODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
0ACE                HEADER_HEX:      ; pushes ptr to string and length on stack
0ACE   B6 0A                  DW   link   
0AD0                LINK:     .SET   HEADER_hex   
0AD0   03                     DB   0 + 3   
0AD1   68 65 78               DB   "hex"   
0AD4                HEX:         
0AD4                          ;*Macro unroll:  ENTER
0AD4   CF                     RST   $08   
0AD5   82 11 10 00 D2 08 95 0E DW   lit,16,base,store   
0ADD                          ;*Macro unroll:  EXIT
0ADD   83 0E                  DW   exit   
0ADF   C3 72 0E               JP   enter   
0AE2                          ;*Macro unroll: mCODE "quit",4,0,quit
0AE2                HEADER_QUIT:      
0AE2   CE 0A                  DW   link   
0AE4                LINK:     .SET   HEADER_quit   
0AE4   04                     DB   0 + 4   
0AE5   71 75 69 74            DB   "quit"   
0AE9                QUIT:        
0AE9                          ;*Macro unroll:  ENTER
0AE9   CF                     RST   $08   
0AEA   BB 08 B6 0E 1F 0F      DW   sp0,fetch,spStore   
0AF0   4E 0B                  DW   interpret   
0AF2                          ;*Macro unroll:  EXIT
0AF2   83 0E                  DW   exit   
0AF4   C3 72 0E               JP   enter   
0AF7                          ;*Macro unroll: mCODE "word",5,0,WORD                 ; delim -- c-addr
0AF7                HEADER_WORD:      ; delim -- c-addr
0AF7   E2 0A                  DW   link   
0AF9                LINK:     .SET   HEADER_WORD   
0AF9   05                     DB   0 + 5   
0AFA   77 6F 72 64            DB   "word"   
0AFE                WORD:        
0AFE                          ;*Macro unroll:  ENTER
0AFE   CF                     RST   $08   
0AFF   82 11 40 00            DW   lit,64   ; limit
0B03   57 08 B6 0E            DW   here,fetch   
0B07   B6 0B                  DW   xword   ; writes to HERE!
0B09                          ;*Macro unroll:  EXIT
0B09   83 0E                  DW   exit   
0B0B   C3 72 0E               JP   enter   
0B0E                          ;*Macro unroll: mCODE ">cfa",4,0,tcfa
0B0E                HEADER_TCFA:      
0B0E   F7 0A                  DW   link   
0B10                LINK:     .SET   HEADER_tcfa   
0B10   04                     DB   0 + 4   
0B11   3E 63 66 61            DB   ">cfa"   
0B15                TCFA:        
0B15                          ;*Macro unroll:  ENTER
0B15   CF                     RST   $08   
0B16   82 11 02 00 CE 00      DW   lit,2,plus   
0B1C   CF 12                  DW   count   
0B1E   82 11 3F 00 86 00      DW   lit,msk_length,ANDD   
0B24   CE 00                  DW   plus   
0B26                          ;*Macro unroll:  EXIT
0B26   83 0E                  DW   exit   
0B28   C3 72 0E               JP   enter   
0B2B                          ;*Macro unroll: mCODE "execute",7,0,EXECUTE
0B2B                HEADER_EXECUTE:      
0B2B   0E 0B                  DW   link   
0B2D                LINK:     .SET   HEADER_EXECUTE   
0B2D   07                     DB   0 + 7   
0B2E   65 78 65 63 75 74 65   DB   "execute"   
0B35                EXECUTE:      
0B35                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0B35   60                     LD   H,B   ; POP TOS into HL
0B36   69                     LD   L,C   
0B37                          ;*Macro unroll:  ppop0 B,C
0B37   DD 2B                  DEC   IX   
0B39   DD 46 00               LD   B,(IX+0)   
0B3C   DD 2B                  DEC   IX   
0B3E   DD 4E 00               LD   C,(IX+0)   
0B41   E9                     JP   (hl)   ; go do Forth word
0B42                          ;*Macro unroll: mCODE "interpret",6,0,interpret
0B42                HEADER_INTERPRET:      
0B42   2B 0B                  DW   link   
0B44                LINK:     .SET   HEADER_interpret   
0B44   06                     DB   0 + 6   
0B45   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0B4E                INTERPRET:      
0B4E   CF                     RST   $08   
0B4F                          ;*Macro unroll:  cDo
0B4F   4C 07 06 00            DW   BRAN,6   
0B53   4C 07 00 00            DW   BRAN,0   
0B57                          ;*Macro unroll:  CPL_PUSH $
0B57                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B57                CPL_10:   .SET   CPL_9   
0B57                CPL_9:    .SET   CPL_8   
0B57                CPL_8:    .SET   CPL_7   
0B57                CPL_7:    .SET   CPL_6   
0B57                CPL_6:    .SET   CPL_5   
0B57                CPL_5:    .SET   CPL_4   
0B57                CPL_4:    .SET   CPL_3   
0B57                CPL_3:    .SET   CPL_2   
0B57                CPL_2:    .SET   CPL_TOP   
0B57                CPL_TOP:   .SET   $   
0B57   F0 0D FE 0A CF 12      DW   bl,word,count   ; pstr -- ptr len
0B5D   03 12 CD 01            DW   DUPP,zEqual   
0B61                          ;*Macro unroll:  cIf
0B61   2F 07 00 00            DW   QBRAN,0   
0B65                          ;*Macro unroll:  CPL_PUSH $
0B65                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B65                CPL_10:   .SET   CPL_9   
0B65                CPL_9:    .SET   CPL_8   
0B65                CPL_8:    .SET   CPL_7   
0B65                CPL_7:    .SET   CPL_6   
0B65                CPL_6:    .SET   CPL_5   
0B65                CPL_5:    .SET   CPL_4   
0B65                CPL_4:    .SET   CPL_3   
0B65                CPL_3:    .SET   CPL_2   
0B65                CPL_2:    .SET   CPL_TOP   
0B65                CPL_TOP:   .SET   $   
0B65   37 12 37 12            DW   drop,drop   ; ptr len --
0B69                          ;*Macro unroll:  EXIT
0B69   83 0E                  DW   exit   
0B6B   C3 72 0E               JP   enter   
0B6E                          ;*Macro unroll:  cEndif
0B6E                          ;*Macro unroll:  cBRANCH_FWD
0B6E                CUR_ADR:   .SET   $   
0B63                          .ORG   CPL_TOP - 2   
0B63   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0B6E                          .ORG   CUR_ADR   
0B6E                          ;*Macro unroll:  CPL_POP
0B6E                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B6E                CPL_TOP:   .SET   CPL_2   
0B6E                CPL_2:    .SET   CPL_3   
0B6E                CPL_3:    .SET   CPL_4   
0B6E                CPL_4:    .SET   CPL_5   
0B6E                CPL_5:    .SET   CPL_6   
0B6E                CPL_6:    .SET   CPL_7   
0B6E                CPL_7:    .SET   CPL_8   
0B6E                CPL_8:    .SET   CPL_9   
0B6E                CPL_9:    .SET   CPL_10   
0B6E                CPL_10:   .SET   0   
0B6E   9D 0C                  DW   interpToken   ; interpret the next word
0B70                          ;*Macro unroll:  cEndDo
0B70   4C 07 E5 FF            DW   BRAN,CPL_TOP - $ - 2   
0B74                          ;*Macro unroll:  cBRANCH_FWD
0B74                CUR_ADR:   .SET   $   
0B55                          .ORG   CPL_TOP - 2   
0B55   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0B74                          .ORG   CUR_ADR   
0B74                          ;*Macro unroll:  CPL_POP
0B74                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B74                CPL_TOP:   .SET   CPL_2   
0B74                CPL_2:    .SET   CPL_3   
0B74                CPL_3:    .SET   CPL_4   
0B74                CPL_4:    .SET   CPL_5   
0B74                CPL_5:    .SET   CPL_6   
0B74                CPL_6:    .SET   CPL_7   
0B74                CPL_7:    .SET   CPL_8   
0B74                CPL_8:    .SET   CPL_9   
0B74                CPL_9:    .SET   CPL_10   
0B74                CPL_10:   .SET   0   
0B74                          ;*Macro unroll:  EXIT
0B74   83 0E                  DW   exit   
0B76   C3 72 0E               JP   enter   
0B79                             ; 
0B79                             ; lookup - lookup header in dictionary ***
0B79                             ; 
0B79                             ; params: HL = string address, BC = string length
0B79                             ; returns: DE = found header ptr or 0
0B79                             ; destroys: AF
0B79                             ; 
0B79                LOOKUP:      
0B79   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0B7D                          ;*Macro unroll:  _do
0B7D   18 03                  JR   L_M_1480S49   
0B7F   C3 7F 0B               JP   $   
0B82                          ;*Macro unroll:  DLOOP_PUSH $
0B82                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0B82                DLOOP_12:   .SET   DLOOP_11   
0B82                DLOOP_11:   .SET   DLOOP_10   
0B82                DLOOP_10:   .SET   DLOOP_9   
0B82                DLOOP_9:   .SET   DLOOP_8   
0B82                DLOOP_8:   .SET   DLOOP_7   
0B82                DLOOP_7:   .SET   DLOOP_6   
0B82                DLOOP_6:   .SET   DLOOP_5   
0B82                DLOOP_5:   .SET   DLOOP_4   
0B82                DLOOP_4:   .SET   DLOOP_3   
0B82                DLOOP_3:   .SET   DLOOP_2   
0B82                DLOOP_2:   .SET   DLOOP_TOP   
0B82                DLOOP_TOP:   .SET   $   
0B82                L_M_1480S49:      
0B82                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0B82   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0B83   B2                     OR   D   
0B84   C8                     RET   z   
0B85                             ; Compare the length expected and the length of the word.
0B85                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0B85                             ; this won't pick the word (the length will appear to be wrong).
0B85   D5                     PUSH   DE   ; save ptr to header
0B86   13                     INC   DE   ; skip over first field
0B87   13                     INC   DE   
0B88   1A                     LD   A,(DE)   ; a = flags+length field
0B89   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
0B8B   B9                     CP   C   ; Length is the same?
0B8C                          ;*Macro unroll:  _if z
0B8C   CA 92 0B               JP   z,L_M_1492S65   
0B8F   C3 8F 0B               JP   $   
0B92                          ;*Macro unroll:  STRUC_PUSH $
0B92                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B92                STRUC_12:   .SET   STRUC_11   
0B92                STRUC_11:   .SET   STRUC_10   
0B92                STRUC_10:   .SET   STRUC_9   
0B92                STRUC_9:   .SET   STRUC_8   
0B92                STRUC_8:   .SET   STRUC_7   
0B92                STRUC_7:   .SET   STRUC_6   
0B92                STRUC_6:   .SET   STRUC_5   
0B92                STRUC_5:   .SET   STRUC_4   
0B92                STRUC_4:   .SET   STRUC_3   
0B92                STRUC_3:   .SET   STRUC_2   
0B92                STRUC_2:   .SET   STRUC_TOP   
0B92                STRUC_TOP:   .SET   $   
0B92                L_M_1492S65:      
0B92                             ; Compare the strings in detail.
0B92   13                     INC   DE   ; DE = Dictionary string we are checking against.
0B93   E5                     PUSH   HL   ; save HL, BC
0B94   C5                     PUSH   BC   
0B95   CD 40 13               CALL   compareStr   ; Compare the strings. BC = len
0B98   C1                     POP   BC   
0B99   E1                     POP   HL   
0B9A   B7                     OR   A   ; if A == 0 then matched
0B9B                          ;*Macro unroll:  _if z
0B9B   CA A1 0B               JP   z,L_M_1501S76   
0B9E   C3 9E 0B               JP   $   
0BA1                          ;*Macro unroll:  STRUC_PUSH $
0BA1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0BA1                STRUC_12:   .SET   STRUC_11   
0BA1                STRUC_11:   .SET   STRUC_10   
0BA1                STRUC_10:   .SET   STRUC_9   
0BA1                STRUC_9:   .SET   STRUC_8   
0BA1                STRUC_8:   .SET   STRUC_7   
0BA1                STRUC_7:   .SET   STRUC_6   
0BA1                STRUC_6:   .SET   STRUC_5   
0BA1                STRUC_5:   .SET   STRUC_4   
0BA1                STRUC_4:   .SET   STRUC_3   
0BA1                STRUC_3:   .SET   STRUC_2   
0BA1                STRUC_2:   .SET   STRUC_TOP   
0BA1                STRUC_TOP:   .SET   $   
0BA1                L_M_1501S76:      
0BA1   D1                     POP   DE   ; matched, restore DE and return
0BA2   C9                     RET      
0BA3                          ;*Macro unroll:  _endif
0BA3                          ;*Macro unroll:  STRUC_FWD
0BA3                CUR_ADR:   .SET   $   
0B9F                          .ORG   STRUC_TOP - 2   
0B9F   A3 0B                  DW   CUR_ADR   
0BA3                          .ORG   CUR_ADR   
0BA3                          ;*Macro unroll:  STRUC_POP
0BA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0BA3                STRUC_TOP:   .SET   STRUC_2   
0BA3                STRUC_2:   .SET   STRUC_3   
0BA3                STRUC_3:   .SET   STRUC_4   
0BA3                STRUC_4:   .SET   STRUC_5   
0BA3                STRUC_5:   .SET   STRUC_6   
0BA3                STRUC_6:   .SET   STRUC_7   
0BA3                STRUC_7:   .SET   STRUC_8   
0BA3                STRUC_8:   .SET   STRUC_9   
0BA3                STRUC_9:   .SET   STRUC_10   
0BA3                STRUC_10:   .SET   STRUC_11   
0BA3                STRUC_11:   .SET   STRUC_12   
0BA3                STRUC_12:   .SET   0   
0BA3                          ;*Macro unroll:  _endif
0BA3                          ;*Macro unroll:  STRUC_FWD
0BA3                CUR_ADR:   .SET   $   
0B90                          .ORG   STRUC_TOP - 2   
0B90   A3 0B                  DW   CUR_ADR   
0BA3                          .ORG   CUR_ADR   
0BA3                          ;*Macro unroll:  STRUC_POP
0BA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0BA3                STRUC_TOP:   .SET   STRUC_2   
0BA3                STRUC_2:   .SET   STRUC_3   
0BA3                STRUC_3:   .SET   STRUC_4   
0BA3                STRUC_4:   .SET   STRUC_5   
0BA3                STRUC_5:   .SET   STRUC_6   
0BA3                STRUC_6:   .SET   STRUC_7   
0BA3                STRUC_7:   .SET   STRUC_8   
0BA3                STRUC_8:   .SET   STRUC_9   
0BA3                STRUC_9:   .SET   STRUC_10   
0BA3                STRUC_10:   .SET   STRUC_11   
0BA3                STRUC_11:   .SET   STRUC_12   
0BA3                STRUC_12:   .SET   0   
0BA3   D1                     POP   DE   ; restore DE
0BA4   1A                     LD   A,(DE)   
0BA5   08                     EX   AF,AF'   
0BA6   13                     INC   DE   
0BA7   1A                     LD   A,(DE)   
0BA8   57                     LD   D,A   
0BA9   08                     EX   AF,AF'   
0BAA   5F                     LD   E,A   
0BAB                          ;*Macro unroll:  _enddo
0BAB   C3 82 0B               JP   DLOOP_TOP   
0BAE                          ;*Macro unroll:  DLOOP_FWD
0BAE                CUR_ADR:   .SET   $   
0B80                          .ORG   DLOOP_TOP - 2   
0B80   AE 0B                  DW   CUR_ADR   
0BAE                          .ORG   CUR_ADR   
0BAE                          ;*Macro unroll:  DLOOP_POP
0BAE                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0BAE                DLOOP_TOP:   .SET   DLOOP_2   
0BAE                DLOOP_2:   .SET   DLOOP_3   
0BAE                DLOOP_3:   .SET   DLOOP_4   
0BAE                DLOOP_4:   .SET   DLOOP_5   
0BAE                DLOOP_5:   .SET   DLOOP_6   
0BAE                DLOOP_6:   .SET   DLOOP_7   
0BAE                DLOOP_7:   .SET   DLOOP_8   
0BAE                DLOOP_8:   .SET   DLOOP_9   
0BAE                DLOOP_9:   .SET   DLOOP_10   
0BAE                DLOOP_10:   .SET   DLOOP_11   
0BAE                DLOOP_11:   .SET   DLOOP_12   
0BAE                DLOOP_12:   .SET   0   
0BAE                          ;*Macro unroll: mCODE "xword",6,0,xword               ; delim limit addr -- c-addr
0BAE                HEADER_XWORD:      ; delim limit addr -- c-addr
0BAE   42 0B                  DW   link   
0BB0                LINK:     .SET   HEADER_xword   
0BB0   06                     DB   0 + 6   
0BB1   78 77 6F 72 64         DB   "xword"   
0BB6                XWORD:       
0BB6   CD BF 0B               CALL   xwordSkip   
0BB9   CD 53 0C               CALL   xwordRead   
0BBC                          ;*Macro unroll:  NEXT
0BBC   C3 72 0E               JP   enter   
0BBF                XWORDSKIP:      ; delim addr -- delim addr char
0BBF                          ;*Macro unroll:  ppop H,L
0BBF   60                     LD   H,B   
0BC0   69                     LD   L,C   
0BC1                          ;*Macro unroll:  ppop0 B,C
0BC1   DD 2B                  DEC   IX   
0BC3   DD 46 00               LD   B,(IX+0)   
0BC6   DD 2B                  DEC   IX   
0BC8   DD 4E 00               LD   C,(IX+0)   
0BCB                          ;*Macro unroll:  ppop D,E
0BCB   50                     LD   D,B   
0BCC   59                     LD   E,C   
0BCD                          ;*Macro unroll:  ppop0 B,C
0BCD   DD 2B                  DEC   IX   
0BCF   DD 46 00               LD   B,(IX+0)   
0BD2   DD 2B                  DEC   IX   
0BD4   DD 4E 00               LD   C,(IX+0)   
0BD7                          ;*Macro unroll:  ppush0 B,C
0BD7   DD 71 00               LD   (IX+0),C   
0BDA   DD 23                  INC   IX   
0BDC   DD 70 00               LD   (IX+0),B   
0BDF   DD 23                  INC   IX   
0BE1                          ;*Macro unroll:  ppush0 D,E
0BE1   DD 73 00               LD   (IX+0),E   
0BE4   DD 23                  INC   IX   
0BE6   DD 72 00               LD   (IX+0),D   
0BE9   DD 23                  INC   IX   
0BEB                          ;*Macro unroll:  ppush0 H,L
0BEB   DD 75 00               LD   (IX+0),L   
0BEE   DD 23                  INC   IX   
0BF0   DD 74 00               LD   (IX+0),H   
0BF3   DD 23                  INC   IX   
0BF5                          ;*Macro unroll:  _do
0BF5   18 03                  JR   L_M_1525S103   
0BF7   C3 F7 0B               JP   $   
0BFA                          ;*Macro unroll:  DLOOP_PUSH $
0BFA                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0BFA                DLOOP_12:   .SET   DLOOP_11   
0BFA                DLOOP_11:   .SET   DLOOP_10   
0BFA                DLOOP_10:   .SET   DLOOP_9   
0BFA                DLOOP_9:   .SET   DLOOP_8   
0BFA                DLOOP_8:   .SET   DLOOP_7   
0BFA                DLOOP_7:   .SET   DLOOP_6   
0BFA                DLOOP_6:   .SET   DLOOP_5   
0BFA                DLOOP_5:   .SET   DLOOP_4   
0BFA                DLOOP_4:   .SET   DLOOP_3   
0BFA                DLOOP_3:   .SET   DLOOP_2   
0BFA                DLOOP_2:   .SET   DLOOP_TOP   
0BFA                DLOOP_TOP:   .SET   $   
0BFA                L_M_1525S103:      
0BFA   CD 1D 11               CALL   getKey   ; get next key, returned in A
0BFD                          ;*Macro unroll:  _switch
0BFD   18 03                  JR   L_M_1527S106   
0BFF   C3 FF 0B               JP   $   
0C02                          ;*Macro unroll:  STRUC_PUSH $
0C02                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C02                STRUC_12:   .SET   STRUC_11   
0C02                STRUC_11:   .SET   STRUC_10   
0C02                STRUC_10:   .SET   STRUC_9   
0C02                STRUC_9:   .SET   STRUC_8   
0C02                STRUC_8:   .SET   STRUC_7   
0C02                STRUC_7:   .SET   STRUC_6   
0C02                STRUC_6:   .SET   STRUC_5   
0C02                STRUC_5:   .SET   STRUC_4   
0C02                STRUC_4:   .SET   STRUC_3   
0C02                STRUC_3:   .SET   STRUC_2   
0C02                STRUC_2:   .SET   STRUC_TOP   
0C02                STRUC_TOP:   .SET   $   
0C02                L_M_1527S106:      
0C02   CB 7F                  BIT   7,A   ; check end of input
0C04                          ;*Macro unroll:  _if nz
0C04   C2 0A 0C               JP   nz,L_M_1529S109   
0C07   C3 07 0C               JP   $   
0C0A                          ;*Macro unroll:  STRUC_PUSH $
0C0A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C0A                STRUC_12:   .SET   STRUC_11   
0C0A                STRUC_11:   .SET   STRUC_10   
0C0A                STRUC_10:   .SET   STRUC_9   
0C0A                STRUC_9:   .SET   STRUC_8   
0C0A                STRUC_8:   .SET   STRUC_7   
0C0A                STRUC_7:   .SET   STRUC_6   
0C0A                STRUC_6:   .SET   STRUC_5   
0C0A                STRUC_5:   .SET   STRUC_4   
0C0A                STRUC_4:   .SET   STRUC_3   
0C0A                STRUC_3:   .SET   STRUC_2   
0C0A                STRUC_2:   .SET   STRUC_TOP   
0C0A                STRUC_TOP:   .SET   $   
0C0A                L_M_1529S109:      
0C0A   36 00                  LD   (HL),0   
0C0C   3E 00                  LD   A,0   
0C0E                          ;*Macro unroll:  _break
0C0E   C3 F7 0B               JP   DLOOP_TOP - 3   
0C11                          ;*Macro unroll:  _endif
0C11                          ;*Macro unroll:  STRUC_FWD
0C11                CUR_ADR:   .SET   $   
0C08                          .ORG   STRUC_TOP - 2   
0C08   11 0C                  DW   CUR_ADR   
0C11                          .ORG   CUR_ADR   
0C11                          ;*Macro unroll:  STRUC_POP
0C11                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C11                STRUC_TOP:   .SET   STRUC_2   
0C11                STRUC_2:   .SET   STRUC_3   
0C11                STRUC_3:   .SET   STRUC_4   
0C11                STRUC_4:   .SET   STRUC_5   
0C11                STRUC_5:   .SET   STRUC_6   
0C11                STRUC_6:   .SET   STRUC_7   
0C11                STRUC_7:   .SET   STRUC_8   
0C11                STRUC_8:   .SET   STRUC_9   
0C11                STRUC_9:   .SET   STRUC_10   
0C11                STRUC_10:   .SET   STRUC_11   
0C11                STRUC_11:   .SET   STRUC_12   
0C11                STRUC_12:   .SET   0   
0C11   FE 5C                  CP   $5C   ; \ start of a comment?
0C13                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0C13   CA 19 0C               JP   z,L_M_1535S116   ; if yes skip to end of line
0C16   C3 16 0C               JP   $   
0C19                          ;*Macro unroll:  STRUC_PUSH $
0C19                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C19                STRUC_12:   .SET   STRUC_11   
0C19                STRUC_11:   .SET   STRUC_10   
0C19                STRUC_10:   .SET   STRUC_9   
0C19                STRUC_9:   .SET   STRUC_8   
0C19                STRUC_8:   .SET   STRUC_7   
0C19                STRUC_7:   .SET   STRUC_6   
0C19                STRUC_6:   .SET   STRUC_5   
0C19                STRUC_5:   .SET   STRUC_4   
0C19                STRUC_4:   .SET   STRUC_3   
0C19                STRUC_3:   .SET   STRUC_2   
0C19                STRUC_2:   .SET   STRUC_TOP   
0C19                STRUC_TOP:   .SET   $   
0C19                L_M_1535S116:      
0C19                          ;*Macro unroll:  _do
0C19   18 03                  JR   L_M_1536S117   
0C1B   C3 1B 0C               JP   $   
0C1E                          ;*Macro unroll:  DLOOP_PUSH $
0C1E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C1E                DLOOP_12:   .SET   DLOOP_11   
0C1E                DLOOP_11:   .SET   DLOOP_10   
0C1E                DLOOP_10:   .SET   DLOOP_9   
0C1E                DLOOP_9:   .SET   DLOOP_8   
0C1E                DLOOP_8:   .SET   DLOOP_7   
0C1E                DLOOP_7:   .SET   DLOOP_6   
0C1E                DLOOP_6:   .SET   DLOOP_5   
0C1E                DLOOP_5:   .SET   DLOOP_4   
0C1E                DLOOP_4:   .SET   DLOOP_3   
0C1E                DLOOP_3:   .SET   DLOOP_2   
0C1E                DLOOP_2:   .SET   DLOOP_TOP   
0C1E                DLOOP_TOP:   .SET   $   
0C1E                L_M_1536S117:      
0C1E   CD 1D 11               CALL   getKey   
0C21   FE 0D                  CP   "\r"   ; end of line yet?
0C23                          ;*Macro unroll:  _if nz
0C23   C2 29 0C               JP   nz,L_M_1539S120   
0C26   C3 26 0C               JP   $   
0C29                          ;*Macro unroll:  STRUC_PUSH $
0C29                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C29                STRUC_12:   .SET   STRUC_11   
0C29                STRUC_11:   .SET   STRUC_10   
0C29                STRUC_10:   .SET   STRUC_9   
0C29                STRUC_9:   .SET   STRUC_8   
0C29                STRUC_8:   .SET   STRUC_7   
0C29                STRUC_7:   .SET   STRUC_6   
0C29                STRUC_6:   .SET   STRUC_5   
0C29                STRUC_5:   .SET   STRUC_4   
0C29                STRUC_4:   .SET   STRUC_3   
0C29                STRUC_3:   .SET   STRUC_2   
0C29                STRUC_2:   .SET   STRUC_TOP   
0C29                STRUC_TOP:   .SET   $   
0C29                L_M_1539S120:      
0C29   FE 0A                  CP   "\n"   ; end of line yet?
0C2B                          ;*Macro unroll:  _endif
0C2B                          ;*Macro unroll:  STRUC_FWD
0C2B                CUR_ADR:   .SET   $   
0C27                          .ORG   STRUC_TOP - 2   
0C27   2B 0C                  DW   CUR_ADR   
0C2B                          .ORG   CUR_ADR   
0C2B                          ;*Macro unroll:  STRUC_POP
0C2B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C2B                STRUC_TOP:   .SET   STRUC_2   
0C2B                STRUC_2:   .SET   STRUC_3   
0C2B                STRUC_3:   .SET   STRUC_4   
0C2B                STRUC_4:   .SET   STRUC_5   
0C2B                STRUC_5:   .SET   STRUC_6   
0C2B                STRUC_6:   .SET   STRUC_7   
0C2B                STRUC_7:   .SET   STRUC_8   
0C2B                STRUC_8:   .SET   STRUC_9   
0C2B                STRUC_9:   .SET   STRUC_10   
0C2B                STRUC_10:   .SET   STRUC_11   
0C2B                STRUC_11:   .SET   STRUC_12   
0C2B                STRUC_12:   .SET   0   
0C2B                          ;*Macro unroll:  _until z
0C2B   CA 1B 0C               JP   z,DLOOP_TOP - 3   
0C2E                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C2E                CUR_ADR:   .SET   $   ; needed?
0C1C                          .ORG   DLOOP_TOP - 2   
0C1C   2E 0C                  DW   CUR_ADR   
0C2E                          .ORG   CUR_ADR   
0C2E                          ;*Macro unroll:  _enddo
0C2E   C3 1E 0C               JP   DLOOP_TOP   
0C31                          ;*Macro unroll:  DLOOP_FWD
0C31                CUR_ADR:   .SET   $   
0C1C                          .ORG   DLOOP_TOP - 2   
0C1C   31 0C                  DW   CUR_ADR   
0C31                          .ORG   CUR_ADR   
0C31                          ;*Macro unroll:  DLOOP_POP
0C31                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C31                DLOOP_TOP:   .SET   DLOOP_2   
0C31                DLOOP_2:   .SET   DLOOP_3   
0C31                DLOOP_3:   .SET   DLOOP_4   
0C31                DLOOP_4:   .SET   DLOOP_5   
0C31                DLOOP_5:   .SET   DLOOP_6   
0C31                DLOOP_6:   .SET   DLOOP_7   
0C31                DLOOP_7:   .SET   DLOOP_8   
0C31                DLOOP_8:   .SET   DLOOP_9   
0C31                DLOOP_9:   .SET   DLOOP_10   
0C31                DLOOP_10:   .SET   DLOOP_11   
0C31                DLOOP_11:   .SET   DLOOP_12   
0C31                DLOOP_12:   .SET   0   
0C31                          ;*Macro unroll:  _endcase
0C31   C3 FF 0B               JP   STRUC_2 - 3   
0C34                          ;*Macro unroll:  STRUC_FWD
0C34                CUR_ADR:   .SET   $   
0C17                          .ORG   STRUC_TOP - 2   
0C17   34 0C                  DW   CUR_ADR   
0C34                          .ORG   CUR_ADR   
0C34                          ;*Macro unroll:  STRUC_POP
0C34                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C34                STRUC_TOP:   .SET   STRUC_2   
0C34                STRUC_2:   .SET   STRUC_3   
0C34                STRUC_3:   .SET   STRUC_4   
0C34                STRUC_4:   .SET   STRUC_5   
0C34                STRUC_5:   .SET   STRUC_6   
0C34                STRUC_6:   .SET   STRUC_7   
0C34                STRUC_7:   .SET   STRUC_8   
0C34                STRUC_8:   .SET   STRUC_9   
0C34                STRUC_9:   .SET   STRUC_10   
0C34                STRUC_10:   .SET   STRUC_11   
0C34                STRUC_11:   .SET   STRUC_12   
0C34                STRUC_12:   .SET   0   
0C34   B9                     CP   C   ; = space?
0C35                          ;*Macro unroll:  _case z
0C35   CA 3B 0C               JP   z,L_M_1546S128   
0C38   C3 38 0C               JP   $   
0C3B                          ;*Macro unroll:  STRUC_PUSH $
0C3B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C3B                STRUC_12:   .SET   STRUC_11   
0C3B                STRUC_11:   .SET   STRUC_10   
0C3B                STRUC_10:   .SET   STRUC_9   
0C3B                STRUC_9:   .SET   STRUC_8   
0C3B                STRUC_8:   .SET   STRUC_7   
0C3B                STRUC_7:   .SET   STRUC_6   
0C3B                STRUC_6:   .SET   STRUC_5   
0C3B                STRUC_5:   .SET   STRUC_4   
0C3B                STRUC_4:   .SET   STRUC_3   
0C3B                STRUC_3:   .SET   STRUC_2   
0C3B                STRUC_2:   .SET   STRUC_TOP   
0C3B                STRUC_TOP:   .SET   $   
0C3B                L_M_1546S128:      
0C3B                          ;*Macro unroll:  _endcase
0C3B   C3 FF 0B               JP   STRUC_2 - 3   
0C3E                          ;*Macro unroll:  STRUC_FWD
0C3E                CUR_ADR:   .SET   $   
0C39                          .ORG   STRUC_TOP - 2   
0C39   3E 0C                  DW   CUR_ADR   
0C3E                          .ORG   CUR_ADR   
0C3E                          ;*Macro unroll:  STRUC_POP
0C3E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C3E                STRUC_TOP:   .SET   STRUC_2   
0C3E                STRUC_2:   .SET   STRUC_3   
0C3E                STRUC_3:   .SET   STRUC_4   
0C3E                STRUC_4:   .SET   STRUC_5   
0C3E                STRUC_5:   .SET   STRUC_6   
0C3E                STRUC_6:   .SET   STRUC_7   
0C3E                STRUC_7:   .SET   STRUC_8   
0C3E                STRUC_8:   .SET   STRUC_9   
0C3E                STRUC_9:   .SET   STRUC_10   
0C3E                STRUC_10:   .SET   STRUC_11   
0C3E                STRUC_11:   .SET   STRUC_12   
0C3E                STRUC_12:   .SET   0   
0C3E   FE 20                  CP   " "   ; < space?
0C40                          ;*Macro unroll:  _case c
0C40   DA 46 0C               JP   c,L_M_1549S132   
0C43   C3 43 0C               JP   $   
0C46                          ;*Macro unroll:  STRUC_PUSH $
0C46                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C46                STRUC_12:   .SET   STRUC_11   
0C46                STRUC_11:   .SET   STRUC_10   
0C46                STRUC_10:   .SET   STRUC_9   
0C46                STRUC_9:   .SET   STRUC_8   
0C46                STRUC_8:   .SET   STRUC_7   
0C46                STRUC_7:   .SET   STRUC_6   
0C46                STRUC_6:   .SET   STRUC_5   
0C46                STRUC_5:   .SET   STRUC_4   
0C46                STRUC_4:   .SET   STRUC_3   
0C46                STRUC_3:   .SET   STRUC_2   
0C46                STRUC_2:   .SET   STRUC_TOP   
0C46                STRUC_TOP:   .SET   $   
0C46                L_M_1549S132:      
0C46                          ;*Macro unroll:  _endcase
0C46   C3 FF 0B               JP   STRUC_2 - 3   
0C49                          ;*Macro unroll:  STRUC_FWD
0C49                CUR_ADR:   .SET   $   
0C44                          .ORG   STRUC_TOP - 2   
0C44   49 0C                  DW   CUR_ADR   
0C49                          .ORG   CUR_ADR   
0C49                          ;*Macro unroll:  STRUC_POP
0C49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C49                STRUC_TOP:   .SET   STRUC_2   
0C49                STRUC_2:   .SET   STRUC_3   
0C49                STRUC_3:   .SET   STRUC_4   
0C49                STRUC_4:   .SET   STRUC_5   
0C49                STRUC_5:   .SET   STRUC_6   
0C49                STRUC_6:   .SET   STRUC_7   
0C49                STRUC_7:   .SET   STRUC_8   
0C49                STRUC_8:   .SET   STRUC_9   
0C49                STRUC_9:   .SET   STRUC_10   
0C49                STRUC_10:   .SET   STRUC_11   
0C49                STRUC_11:   .SET   STRUC_12   
0C49                STRUC_12:   .SET   0   
0C49                             ; default case
0C49                          ;*Macro unroll:  _break
0C49   C3 F7 0B               JP   DLOOP_TOP - 3   
0C4C                          ;*Macro unroll:  _endswitch
0C4C                          ;*Macro unroll:  STRUC_FWD
0C4C                CUR_ADR:   .SET   $   
0C00                          .ORG   STRUC_TOP - 2   
0C00   4C 0C                  DW   CUR_ADR   
0C4C                          .ORG   CUR_ADR   
0C4C                          ;*Macro unroll:  STRUC_POP
0C4C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C4C                STRUC_TOP:   .SET   STRUC_2   
0C4C                STRUC_2:   .SET   STRUC_3   
0C4C                STRUC_3:   .SET   STRUC_4   
0C4C                STRUC_4:   .SET   STRUC_5   
0C4C                STRUC_5:   .SET   STRUC_6   
0C4C                STRUC_6:   .SET   STRUC_7   
0C4C                STRUC_7:   .SET   STRUC_8   
0C4C                STRUC_8:   .SET   STRUC_9   
0C4C                STRUC_9:   .SET   STRUC_10   
0C4C                STRUC_10:   .SET   STRUC_11   
0C4C                STRUC_11:   .SET   STRUC_12   
0C4C                STRUC_12:   .SET   0   
0C4C                          ;*Macro unroll:  _enddo
0C4C   C3 FA 0B               JP   DLOOP_TOP   
0C4F                          ;*Macro unroll:  DLOOP_FWD
0C4F                CUR_ADR:   .SET   $   
0BF8                          .ORG   DLOOP_TOP - 2   
0BF8   4F 0C                  DW   CUR_ADR   
0C4F                          .ORG   CUR_ADR   
0C4F                          ;*Macro unroll:  DLOOP_POP
0C4F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C4F                DLOOP_TOP:   .SET   DLOOP_2   
0C4F                DLOOP_2:   .SET   DLOOP_3   
0C4F                DLOOP_3:   .SET   DLOOP_4   
0C4F                DLOOP_4:   .SET   DLOOP_5   
0C4F                DLOOP_5:   .SET   DLOOP_6   
0C4F                DLOOP_6:   .SET   DLOOP_7   
0C4F                DLOOP_7:   .SET   DLOOP_8   
0C4F                DLOOP_8:   .SET   DLOOP_9   
0C4F                DLOOP_9:   .SET   DLOOP_10   
0C4F                DLOOP_10:   .SET   DLOOP_11   
0C4F                DLOOP_11:   .SET   DLOOP_12   
0C4F                DLOOP_12:   .SET   0   
0C4F   06 00                  LD   B,0   
0C51   4F                     LD   C,A   
0C52   C9                     RET      
0C53                XWORDREAD:      ; delim addr char -- c-addr
0C53   79                     LD   A,C   
0C54                          ;*Macro unroll:  ppop0 B,C
0C54   DD 2B                  DEC   IX   
0C56   DD 46 00               LD   B,(IX+0)   
0C59   DD 2B                  DEC   IX   
0C5B   DD 4E 00               LD   C,(IX+0)   
0C5E                          ;*Macro unroll:  ppop H,L
0C5E   60                     LD   H,B   
0C5F   69                     LD   L,C   
0C60                          ;*Macro unroll:  ppop0 B,C
0C60   DD 2B                  DEC   IX   
0C62   DD 46 00               LD   B,(IX+0)   
0C65   DD 2B                  DEC   IX   
0C67   DD 4E 00               LD   C,(IX+0)   
0C6A                          ;*Macro unroll:  ppop D,E
0C6A   50                     LD   D,B   
0C6B   59                     LD   E,C   
0C6C                          ;*Macro unroll:  ppop0 B,C
0C6C   DD 2B                  DEC   IX   
0C6E   DD 46 00               LD   B,(IX+0)   
0C71   DD 2B                  DEC   IX   
0C73   DD 4E 00               LD   C,(IX+0)   
0C76   16 00                  LD   D,0   
0C78   B7                     OR   A   
0C79                          ;*Macro unroll:  _if nz
0C79   C2 7F 0C               JP   nz,L_M_1565S151   
0C7C   C3 7C 0C               JP   $   
0C7F                          ;*Macro unroll:  STRUC_PUSH $
0C7F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C7F                STRUC_12:   .SET   STRUC_11   
0C7F                STRUC_11:   .SET   STRUC_10   
0C7F                STRUC_10:   .SET   STRUC_9   
0C7F                STRUC_9:   .SET   STRUC_8   
0C7F                STRUC_8:   .SET   STRUC_7   
0C7F                STRUC_7:   .SET   STRUC_6   
0C7F                STRUC_6:   .SET   STRUC_5   
0C7F                STRUC_5:   .SET   STRUC_4   
0C7F                STRUC_4:   .SET   STRUC_3   
0C7F                STRUC_3:   .SET   STRUC_2   
0C7F                STRUC_2:   .SET   STRUC_TOP   
0C7F                STRUC_TOP:   .SET   $   
0C7F                L_M_1565S151:      
0C7F   E5                     PUSH   HL   ; save a copy of HL
0C80   23                     INC   HL   ; move to leave space for length byte
0C81   43                     LD   B,E   
0C82                          ;*Macro unroll:  _do
0C82   18 03                  JR   L_M_1569S155   
0C84   C3 84 0C               JP   $   
0C87                          ;*Macro unroll:  DLOOP_PUSH $
0C87                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C87                DLOOP_12:   .SET   DLOOP_11   
0C87                DLOOP_11:   .SET   DLOOP_10   
0C87                DLOOP_10:   .SET   DLOOP_9   
0C87                DLOOP_9:   .SET   DLOOP_8   
0C87                DLOOP_8:   .SET   DLOOP_7   
0C87                DLOOP_7:   .SET   DLOOP_6   
0C87                DLOOP_6:   .SET   DLOOP_5   
0C87                DLOOP_5:   .SET   DLOOP_4   
0C87                DLOOP_4:   .SET   DLOOP_3   
0C87                DLOOP_3:   .SET   DLOOP_2   
0C87                DLOOP_2:   .SET   DLOOP_TOP   
0C87                DLOOP_TOP:   .SET   $   
0C87                L_M_1569S155:      
0C87   77                     LD   (HL),A   ; add character to return lineBuf
0C88   23                     INC   HL   
0C89   14                     INC   D   
0C8A   CD 1D 11               CALL   getKey   ; get next key
0C8D   B9                     CP   C   ; = delim?
0C8E                          ;*Macro unroll:  _until z
0C8E   CA 84 0C               JP   z,DLOOP_TOP - 3   
0C91                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C91                CUR_ADR:   .SET   $   ; needed?
0C85                          .ORG   DLOOP_TOP - 2   
0C85   91 0C                  DW   CUR_ADR   
0C91                          .ORG   CUR_ADR   
0C91   FE 20                  CP   " "   ; < space? i.e. control chars
0C93                          ;*Macro unroll:  _until c
0C93   DA 84 0C               JP   c,DLOOP_TOP - 3   
0C96                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C96                CUR_ADR:   .SET   $   ; needed?
0C85                          .ORG   DLOOP_TOP - 2   
0C85   96 0C                  DW   CUR_ADR   
0C96                          .ORG   CUR_ADR   
0C96                          ;*Macro unroll:  _djnz
0C96   10 EF                  DJNZ   DLOOP_TOP   
0C98                          ;*Macro unroll:  DLOOP_FWD
0C98                CUR_ADR:   .SET   $   
0C85                          .ORG   DLOOP_TOP - 2   
0C85   98 0C                  DW   CUR_ADR   
0C98                          .ORG   CUR_ADR   
0C98                          ;*Macro unroll:  DLOOP_POP
0C98                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C98                DLOOP_TOP:   .SET   DLOOP_2   
0C98                DLOOP_2:   .SET   DLOOP_3   
0C98                DLOOP_3:   .SET   DLOOP_4   
0C98                DLOOP_4:   .SET   DLOOP_5   
0C98                DLOOP_5:   .SET   DLOOP_6   
0C98                DLOOP_6:   .SET   DLOOP_7   
0C98                DLOOP_7:   .SET   DLOOP_8   
0C98                DLOOP_8:   .SET   DLOOP_9   
0C98                DLOOP_9:   .SET   DLOOP_10   
0C98                DLOOP_10:   .SET   DLOOP_11   
0C98                DLOOP_11:   .SET   DLOOP_12   
0C98                DLOOP_12:   .SET   0   
0C98   E1                     POP   HL   ; restore HL
0C99                          ;*Macro unroll:  _endif
0C99                          ;*Macro unroll:  STRUC_FWD
0C99                CUR_ADR:   .SET   $   
0C7D                          .ORG   STRUC_TOP - 2   
0C7D   99 0C                  DW   CUR_ADR   
0C99                          .ORG   CUR_ADR   
0C99                          ;*Macro unroll:  STRUC_POP
0C99                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C99                STRUC_TOP:   .SET   STRUC_2   
0C99                STRUC_2:   .SET   STRUC_3   
0C99                STRUC_3:   .SET   STRUC_4   
0C99                STRUC_4:   .SET   STRUC_5   
0C99                STRUC_5:   .SET   STRUC_6   
0C99                STRUC_6:   .SET   STRUC_7   
0C99                STRUC_7:   .SET   STRUC_8   
0C99                STRUC_8:   .SET   STRUC_9   
0C99                STRUC_9:   .SET   STRUC_10   
0C99                STRUC_10:   .SET   STRUC_11   
0C99                STRUC_11:   .SET   STRUC_12   
0C99                STRUC_12:   .SET   0   
0C99   72                     LD   (HL),D   ; write length
0C9A                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0C9A   4D                     LD   C,L   ; TOS = str ptr
0C9B   44                     LD   B,H   
0C9C   C9                     RET      
0C9D                INTERPTOKEN:      ; ptr len --
0C9D   CF                     RST   $08   
0C9E   4B 12 4B 12 3C 05      DW   over,over,find   ; ptr len -- ptr len addr
0CA4   03 12 E2 01            DW   DUPP,zNotEqual   
0CA8                          ;*Macro unroll:  cIf
0CA8   2F 07 00 00            DW   QBRAN,0   
0CAC                          ;*Macro unroll:  CPL_PUSH $
0CAC                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CAC                CPL_10:   .SET   CPL_9   
0CAC                CPL_9:    .SET   CPL_8   
0CAC                CPL_8:    .SET   CPL_7   
0CAC                CPL_7:    .SET   CPL_6   
0CAC                CPL_6:    .SET   CPL_5   
0CAC                CPL_5:    .SET   CPL_4   
0CAC                CPL_4:    .SET   CPL_3   
0CAC                CPL_3:    .SET   CPL_2   
0CAC                CPL_2:    .SET   CPL_TOP   
0CAC                CPL_TOP:   .SET   $   
0CAC   B9 0C                  DW   interpWord   
0CAE                          ;*Macro unroll:  cElse
0CAE   4C 07 00 00            DW   BRAN,0   
0CB2                          ;*Macro unroll:  cBRANCH_FWD
0CB2                CUR_ADR:   .SET   $   
0CAA                          .ORG   CPL_TOP - 2   
0CAA   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0CB2                          .ORG   CUR_ADR   
0CB2                CPL_TOP:   .SET   $   
0CB2   FD 0C                  DW   interpLiteral   
0CB4                          ;*Macro unroll:  cEndif
0CB4                          ;*Macro unroll:  cBRANCH_FWD
0CB4                CUR_ADR:   .SET   $   
0CB0                          .ORG   CPL_TOP - 2   
0CB0   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0CB4                          .ORG   CUR_ADR   
0CB4                          ;*Macro unroll:  CPL_POP
0CB4                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CB4                CPL_TOP:   .SET   CPL_2   
0CB4                CPL_2:    .SET   CPL_3   
0CB4                CPL_3:    .SET   CPL_4   
0CB4                CPL_4:    .SET   CPL_5   
0CB4                CPL_5:    .SET   CPL_6   
0CB4                CPL_6:    .SET   CPL_7   
0CB4                CPL_7:    .SET   CPL_8   
0CB4                CPL_8:    .SET   CPL_9   
0CB4                CPL_9:    .SET   CPL_10   
0CB4                CPL_10:   .SET   0   
0CB4                          ;*Macro unroll:  EXIT
0CB4   83 0E                  DW   exit   
0CB6   C3 72 0E               JP   enter   
0CB9                INTERPWORD:      ; ptr len addr --
0CB9   CF                     RST   $08   ; enter forth
0CBA   17 12 37 12 17 12 37 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0CC2   03 12 82 11 02 00 CE 00 E3 0E DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0CCC   82 11 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0CD2   CD 01                  DW   zEqual   
0CD4                          ;*Macro unroll:  cif
0CD4   2F 07 00 00            DW   QBRAN,0   
0CD8                          ;*Macro unroll:  CPL_PUSH $
0CD8                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CD8                CPL_10:   .SET   CPL_9   
0CD8                CPL_9:    .SET   CPL_8   
0CD8                CPL_8:    .SET   CPL_7   
0CD8                CPL_7:    .SET   CPL_6   
0CD8                CPL_6:    .SET   CPL_5   
0CD8                CPL_5:    .SET   CPL_4   
0CD8                CPL_4:    .SET   CPL_3   
0CD8                CPL_3:    .SET   CPL_2   
0CD8                CPL_2:    .SET   CPL_TOP   
0CD8                CPL_TOP:   .SET   $   
0CD8   15 0B                  DW   tcfa   ; ( headptr -- xt )
0CDA   8B 08 B6 0E            DW   state,fetch   
0CDE   A5 08 B6 0E            DW   nesting,fetch   
0CE2   F5 01                  DW   or   
0CE4                          ;*Macro unroll:  cif
0CE4   2F 07 00 00            DW   QBRAN,0   
0CE8                          ;*Macro unroll:  CPL_PUSH $
0CE8                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CE8                CPL_10:   .SET   CPL_9   
0CE8                CPL_9:    .SET   CPL_8   
0CE8                CPL_8:    .SET   CPL_7   
0CE8                CPL_7:    .SET   CPL_6   
0CE8                CPL_6:    .SET   CPL_5   
0CE8                CPL_5:    .SET   CPL_4   
0CE8                CPL_4:    .SET   CPL_3   
0CE8                CPL_3:    .SET   CPL_2   
0CE8                CPL_2:    .SET   CPL_TOP   
0CE8                CPL_TOP:   .SET   $   
0CE8   6C 0F                  DW   comma   ; compile xt
0CEA                          ;*Macro unroll:  cElse
0CEA   4C 07 00 00            DW   BRAN,0   
0CEE                          ;*Macro unroll:  cBRANCH_FWD
0CEE                CUR_ADR:   .SET   $   
0CE6                          .ORG   CPL_TOP - 2   
0CE6   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0CEE                          .ORG   CUR_ADR   
0CEE                CPL_TOP:   .SET   $   
0CEE   35 0B                  DW   execute   ; execute xt
0CF0                          ;*Macro unroll:  cendif
0CF0                          ;*Macro unroll:  cBRANCH_FWD
0CF0                CUR_ADR:   .SET   $   
0CEC                          .ORG   CPL_TOP - 2   
0CEC   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0CF0                          .ORG   CUR_ADR   
0CF0                          ;*Macro unroll:  CPL_POP
0CF0                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CF0                CPL_TOP:   .SET   CPL_2   
0CF0                CPL_2:    .SET   CPL_3   
0CF0                CPL_3:    .SET   CPL_4   
0CF0                CPL_4:    .SET   CPL_5   
0CF0                CPL_5:    .SET   CPL_6   
0CF0                CPL_6:    .SET   CPL_7   
0CF0                CPL_7:    .SET   CPL_8   
0CF0                CPL_8:    .SET   CPL_9   
0CF0                CPL_9:    .SET   CPL_10   
0CF0                CPL_10:   .SET   0   
0CF0                          ;*Macro unroll:  cElse
0CF0   4C 07 00 00            DW   BRAN,0   
0CF4                          ;*Macro unroll:  cBRANCH_FWD
0CF4                CUR_ADR:   .SET   $   
0CD6                          .ORG   CPL_TOP - 2   
0CD6   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0CF4                          .ORG   CUR_ADR   
0CF4                CPL_TOP:   .SET   $   
0CF4   15 0B 35 0B            DW   tcfa,execute   ; execute xt
0CF8                          ;*Macro unroll:  cendif
0CF8                          ;*Macro unroll:  cBRANCH_FWD
0CF8                CUR_ADR:   .SET   $   
0CF2                          .ORG   CPL_TOP - 2   
0CF2   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0CF8                          .ORG   CUR_ADR   
0CF8                          ;*Macro unroll:  CPL_POP
0CF8                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CF8                CPL_TOP:   .SET   CPL_2   
0CF8                CPL_2:    .SET   CPL_3   
0CF8                CPL_3:    .SET   CPL_4   
0CF8                CPL_4:    .SET   CPL_5   
0CF8                CPL_5:    .SET   CPL_6   
0CF8                CPL_6:    .SET   CPL_7   
0CF8                CPL_7:    .SET   CPL_8   
0CF8                CPL_8:    .SET   CPL_9   
0CF8                CPL_9:    .SET   CPL_10   
0CF8                CPL_10:   .SET   0   
0CF8                          ;*Macro unroll:  EXIT
0CF8   83 0E                  DW   exit   
0CFA   C3 72 0E               JP   enter   
0CFD                INTERPLITERAL:      ; ptr len addr --
0CFD   CF                     RST   $08   ; enter forth
0CFE   37 12                  DW   drop   ; ptr len addr - ptr len
0D00   9C 0A CD 01            DW   number,zEqual   ; parse to number
0D04                          ;*Macro unroll:  cif
0D04   2F 07 00 00            DW   QBRAN,0   
0D08                          ;*Macro unroll:  CPL_PUSH $
0D08                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D08                CPL_10:   .SET   CPL_9   
0D08                CPL_9:    .SET   CPL_8   
0D08                CPL_8:    .SET   CPL_7   
0D08                CPL_7:    .SET   CPL_6   
0D08                CPL_6:    .SET   CPL_5   
0D08                CPL_5:    .SET   CPL_4   
0D08                CPL_4:    .SET   CPL_3   
0D08                CPL_3:    .SET   CPL_2   
0D08                CPL_2:    .SET   CPL_TOP   
0D08                CPL_TOP:   .SET   $   
0D08   8B 08 B6 0E            DW   state,fetch   
0D0C   A5 08 B6 0E            DW   nesting,fetch   
0D10   F5 01                  DW   or   
0D12                          ;*Macro unroll:  cIf
0D12   2F 07 00 00            DW   QBRAN,0   
0D16                          ;*Macro unroll:  CPL_PUSH $
0D16                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D16                CPL_10:   .SET   CPL_9   
0D16                CPL_9:    .SET   CPL_8   
0D16                CPL_8:    .SET   CPL_7   
0D16                CPL_7:    .SET   CPL_6   
0D16                CPL_6:    .SET   CPL_5   
0D16                CPL_5:    .SET   CPL_4   
0D16                CPL_4:    .SET   CPL_3   
0D16                CPL_3:    .SET   CPL_2   
0D16                CPL_2:    .SET   CPL_TOP   
0D16                CPL_TOP:   .SET   $   
0D16   82 11 82 11            DW   lit,lit   ; (val -- val "lit" )
0D1A   6C 0F 6C 0F            DW   comma,comma   ; compile "lit" val
0D1E                          ;*Macro unroll:  cEndIf
0D1E                          ;*Macro unroll:  cBRANCH_FWD
0D1E                CUR_ADR:   .SET   $   
0D14                          .ORG   CPL_TOP - 2   
0D14   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0D1E                          .ORG   CUR_ADR   
0D1E                          ;*Macro unroll:  CPL_POP
0D1E                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D1E                CPL_TOP:   .SET   CPL_2   
0D1E                CPL_2:    .SET   CPL_3   
0D1E                CPL_3:    .SET   CPL_4   
0D1E                CPL_4:    .SET   CPL_5   
0D1E                CPL_5:    .SET   CPL_6   
0D1E                CPL_6:    .SET   CPL_7   
0D1E                CPL_7:    .SET   CPL_8   
0D1E                CPL_8:    .SET   CPL_9   
0D1E                CPL_9:    .SET   CPL_10   
0D1E                CPL_10:   .SET   0   
0D1E                          ;*Macro unroll:  cElse
0D1E   4C 07 00 00            DW   BRAN,0   
0D22                          ;*Macro unroll:  cBRANCH_FWD
0D22                CUR_ADR:   .SET   $   
0D06                          .ORG   CPL_TOP - 2   
0D06   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
0D22                          .ORG   CUR_ADR   
0D22                CPL_TOP:   .SET   $   
0D22   37 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0D24   B5 12                  DW   litstr   ; err != 0, parse error
0D26   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0D35   57 0D                  DW   type   
0D37                          ;*Macro unroll:  cEndIf
0D37                          ;*Macro unroll:  cBRANCH_FWD
0D37                CUR_ADR:   .SET   $   
0D20                          .ORG   CPL_TOP - 2   
0D20   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0D37                          .ORG   CUR_ADR   
0D37                          ;*Macro unroll:  CPL_POP
0D37                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D37                CPL_TOP:   .SET   CPL_2   
0D37                CPL_2:    .SET   CPL_3   
0D37                CPL_3:    .SET   CPL_4   
0D37                CPL_4:    .SET   CPL_5   
0D37                CPL_5:    .SET   CPL_6   
0D37                CPL_6:    .SET   CPL_7   
0D37                CPL_7:    .SET   CPL_8   
0D37                CPL_8:    .SET   CPL_9   
0D37                CPL_9:    .SET   CPL_10   
0D37                CPL_10:   .SET   0   
0D37                          ;*Macro unroll:  EXIT
0D37   83 0E                  DW   exit   
0D39   C3 72 0E               JP   enter   
0D3C                NESTPLUS:      
0D3C   2A 57 32               LD   HL,(VAR_NESTING)   
0D3F   23                     INC   HL   
0D40   22 57 32               LD   (VAR_NESTING),HL   
0D43                          ;*Macro unroll:  NEXT
0D43   C3 72 0E               JP   enter   
0D46                NESTMINUS:      
0D46   2A 57 32               LD   HL,(VAR_NESTING)   
0D49   2B                     DEC   HL   
0D4A   22 57 32               LD   (VAR_NESTING),HL   
0D4D                          ;*Macro unroll:  NEXT
0D4D   C3 72 0E               JP   enter   
0D50                          ;*Macro unroll: mCODE "type",4,0,TYPE             ; ( str len -- )
0D50                HEADER_TYPE:      ; ( str len -- )
0D50   AE 0B                  DW   link   
0D52                LINK:     .SET   HEADER_TYPE   
0D52   04                     DB   0 + 4   
0D53   74 79 70 65            DB   "type"   
0D57                TYPE:        
0D57                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
0D57   DD 2B                  DEC   IX   ; DE = str BC = length
0D59   DD 56 00               LD   D,(IX+0)   
0D5C   DD 2B                  DEC   IX   
0D5E   DD 5E 00               LD   E,(IX+0)   
0D61   CD 61 11               CALL   printStr   
0D64                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0D64   DD 2B                  DEC   IX   ; clear TOS
0D66   DD 46 00               LD   B,(IX+0)   
0D69   DD 2B                  DEC   IX   
0D6B   DD 4E 00               LD   C,(IX+0)   
0D6E                          ;*Macro unroll:  NEXT
0D6E   C3 72 0E               JP   enter   
0D71                          ;*Macro unroll: mCODE "cr",2,0,cr                 ; ( -- )
0D71                HEADER_CR:      ; ( -- )
0D71   50 0D                  DW   link   
0D73                LINK:     .SET   HEADER_cr   
0D73   02                     DB   0 + 2   
0D74   63 72                  DB   "cr"   
0D76                CR:          
0D76   CD 6B 11               CALL   printcr   
0D79                          ;*Macro unroll:  NEXT
0D79   C3 72 0E               JP   enter   
0D7C                          ;*Macro unroll:  mCODE "accept",6,0,ACCEPT              ; ( addr max -- len )
0D7C                HEADER_ACCEPT:      ; ( addr max -- len )
0D7C   71 0D                  DW   link   
0D7E                LINK:     .SET   HEADER_ACCEPT   
0D7E   06                     DB   0 + 6   
0D7F   61 63 63 65 70 74      DB   "accept"   
0D85                ACCEPT:      
0D85                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
0D85   50                     LD   D,B   ; max - up to 255
0D86   59                     LD   E,C   
0D87                          ;*Macro unroll:  ppop0 B,C
0D87   DD 2B                  DEC   IX   
0D89   DD 46 00               LD   B,(IX+0)   
0D8C   DD 2B                  DEC   IX   
0D8E   DD 4E 00               LD   C,(IX+0)   
0D91                          ;*Macro unroll: 	ppop0 H,L                          ; addr
0D91   DD 2B                  DEC   IX   ; addr
0D93   DD 66 00               LD   H,(IX+0)   
0D96   DD 2B                  DEC   IX   
0D98   DD 6E 00               LD   L,(IX+0)   
0D9B   CD 8D 10               CALL   getline   
0D9E                          ;*Macro unroll:  NEXT
0D9E   C3 72 0E               JP   enter   
0DA1                          ;*Macro unroll: mCODE "key",3,0,KEY                ; ( -- c )
0DA1                HEADER_KEY:      ; ( -- c )
0DA1   7C 0D                  DW   link   
0DA3                LINK:     .SET   HEADER_KEY   
0DA3   03                     DB   0 + 3   
0DA4   6B 65 79               DB   "key"   
0DA7                KEY:         
0DA7   CD 1D 11               CALL   getKey   
0DAA   06 00                  LD   b,0   
0DAC   4F                     LD   c,a   
0DAD                          ;*Macro unroll:  NEXT
0DAD   C3 72 0E               JP   enter   
0DB0                          ;*Macro unroll: mCODE "emit",4,0,EMIT              ; print the character on the stack
0DB0                HEADER_EMIT:      ; print the character on the stack
0DB0   A1 0D                  DW   link   
0DB2                LINK:     .SET   HEADER_EMIT   
0DB2   04                     DB   0 + 4   
0DB3   65 6D 69 74            DB   "emit"   
0DB7                EMIT:        
0DB7   79                     LD   A,C   ; (c -- )
0DB8   CD 73 10               CALL   putc   
0DBB                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
0DBB   DD 2B                  DEC   IX   ; clear stack
0DBD   DD 46 00               LD   B,(IX+0)   
0DC0   DD 2B                  DEC   IX   
0DC2   DD 4E 00               LD   C,(IX+0)   
0DC5                          ;*Macro unroll:  NEXT
0DC5   C3 72 0E               JP   enter   
0DC8                          ;*Macro unroll: mCODE "key?",4,0,QKEY              ; ( -- c )
0DC8                HEADER_QKEY:      ; ( -- c )
0DC8   B0 0D                  DW   link   
0DCA                LINK:     .SET   HEADER_QKEY   
0DCA   04                     DB   0 + 4   
0DCB   6B 65 79 3F            DB   "key?"   
0DCF                QKEY:        
0DCF                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
0DCF   DD 71 00               LD   (IX+0),C   ; save TOS
0DD2   DD 23                  INC   IX   
0DD4   DD 70 00               LD   (IX+0),B   
0DD7   DD 23                  INC   IX   
0DD9   CD 87 10               CALL   inputReady   
0DDC   01 01 00               LD   BC,1   ; TOS = true
0DDF                          ;*Macro unroll:  _if z
0DDF   CA E5 0D               JP   z,L_M_1670S33   
0DE2   C3 E2 0D               JP   $   
0DE5                          ;*Macro unroll:  STRUC_PUSH $
0DE5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0DE5                STRUC_12:   .SET   STRUC_11   
0DE5                STRUC_11:   .SET   STRUC_10   
0DE5                STRUC_10:   .SET   STRUC_9   
0DE5                STRUC_9:   .SET   STRUC_8   
0DE5                STRUC_8:   .SET   STRUC_7   
0DE5                STRUC_7:   .SET   STRUC_6   
0DE5                STRUC_6:   .SET   STRUC_5   
0DE5                STRUC_5:   .SET   STRUC_4   
0DE5                STRUC_4:   .SET   STRUC_3   
0DE5                STRUC_3:   .SET   STRUC_2   
0DE5                STRUC_2:   .SET   STRUC_TOP   
0DE5                STRUC_TOP:   .SET   $   
0DE5                L_M_1670S33:      
0DE5   01 00 00               LD   BC,0   ; TOS = false
0DE8                          ;*Macro unroll:  _endif
0DE8                          ;*Macro unroll:  STRUC_FWD
0DE8                CUR_ADR:   .SET   $   
0DE3                          .ORG   STRUC_TOP - 2   
0DE3   E8 0D                  DW   CUR_ADR   
0DE8                          .ORG   CUR_ADR   
0DE8                          ;*Macro unroll:  STRUC_POP
0DE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0DE8                STRUC_TOP:   .SET   STRUC_2   
0DE8                STRUC_2:   .SET   STRUC_3   
0DE8                STRUC_3:   .SET   STRUC_4   
0DE8                STRUC_4:   .SET   STRUC_5   
0DE8                STRUC_5:   .SET   STRUC_6   
0DE8                STRUC_6:   .SET   STRUC_7   
0DE8                STRUC_7:   .SET   STRUC_8   
0DE8                STRUC_8:   .SET   STRUC_9   
0DE8                STRUC_9:   .SET   STRUC_10   
0DE8                STRUC_10:   .SET   STRUC_11   
0DE8                STRUC_11:   .SET   STRUC_12   
0DE8                STRUC_12:   .SET   0   
0DE8                          ;*Macro unroll:  NEXT
0DE8   C3 72 0E               JP   enter   
0DEB                          ;*Macro unroll: mCODE "bl",2,0,bl
0DEB                HEADER_BL:      
0DEB   C8 0D                  DW   link   
0DED                LINK:     .SET   HEADER_bl   
0DED   02                     DB   0 + 2   
0DEE   62 6C                  DB   "bl"   
0DF0                BL:          
0DF0                          ;*Macro unroll:  ENTER
0DF0   CF                     RST   $08   
0DF1   82 11 20 00            DW   lit,$20   ; compile branch on zero
0DF5                          ;*Macro unroll:  EXIT
0DF5   83 0E                  DW   exit   
0DF7   C3 72 0E               JP   enter   
0DFA                          ;*Macro unroll: mCODE "print",5,0,PRINT
0DFA                HEADER_PRINT:      
0DFA   EB 0D                  DW   link   
0DFC                LINK:     .SET   HEADER_PRINT   
0DFC   05                     DB   0 + 5   
0DFD   70 72 69 6E 74         DB   "print"   
0E02                PRINT:       
0E02                          ;*Macro unroll:  ppop D,E
0E02   50                     LD   D,B   
0E03   59                     LD   E,C   
0E04                          ;*Macro unroll:  ppop0 B,C
0E04   DD 2B                  DEC   IX   
0E06   DD 46 00               LD   B,(IX+0)   
0E09   DD 2B                  DEC   IX   
0E0B   DD 4E 00               LD   C,(IX+0)   
0E0E   CD 52 11               CALL   printPStr   
0E11                          ;*Macro unroll:  NEXT
0E11   C3 72 0E               JP   enter   
0E14                             ; ." print string"
0E14                          ;*Macro unroll: mCODE {".",$22},2,msk_immed,dotquote
0E14                HEADER_DOTQUOTE:      
0E14   FA 0D                  DW   link   
0E16                LINK:     .SET   HEADER_dotquote   
0E16   82                     DB   msk_immed + 2   
0E17   2E 22                  DB   ".",$22   
0E19                DOTQUOTE:      
0E19                          ;*Macro unroll:  ENTER
0E19   CF                     RST   $08   
0E1A   EC 12                  DW   qt   
0E1C   8B 08 B6 0E CD 01      DW   state,fetch,zequal   
0E22                          ;*Macro unroll:  cIf
0E22   2F 07 00 00            DW   QBRAN,0   
0E26                          ;*Macro unroll:  CPL_PUSH $
0E26                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E26                CPL_10:   .SET   CPL_9   
0E26                CPL_9:    .SET   CPL_8   
0E26                CPL_8:    .SET   CPL_7   
0E26                CPL_7:    .SET   CPL_6   
0E26                CPL_6:    .SET   CPL_5   
0E26                CPL_5:    .SET   CPL_4   
0E26                CPL_4:    .SET   CPL_3   
0E26                CPL_3:    .SET   CPL_2   
0E26                CPL_2:    .SET   CPL_TOP   
0E26                CPL_TOP:   .SET   $   
0E26   57 0D                  DW   type   
0E28                          ;*Macro unroll:  cElse
0E28   4C 07 00 00            DW   BRAN,0   
0E2C                          ;*Macro unroll:  cBRANCH_FWD
0E2C                CUR_ADR:   .SET   $   
0E24                          .ORG   CPL_TOP - 2   
0E24   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E2C                          .ORG   CUR_ADR   
0E2C                CPL_TOP:   .SET   $   
0E2C   82 11 57 0D 6C 0F      DW   lit,type,comma   
0E32                          ;*Macro unroll:  cEndIf
0E32                          ;*Macro unroll:  cBRANCH_FWD
0E32                CUR_ADR:   .SET   $   
0E2A                          .ORG   CPL_TOP - 2   
0E2A   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E32                          .ORG   CUR_ADR   
0E32                          ;*Macro unroll:  CPL_POP
0E32                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E32                CPL_TOP:   .SET   CPL_2   
0E32                CPL_2:    .SET   CPL_3   
0E32                CPL_3:    .SET   CPL_4   
0E32                CPL_4:    .SET   CPL_5   
0E32                CPL_5:    .SET   CPL_6   
0E32                CPL_6:    .SET   CPL_7   
0E32                CPL_7:    .SET   CPL_8   
0E32                CPL_8:    .SET   CPL_9   
0E32                CPL_9:    .SET   CPL_10   
0E32                CPL_10:   .SET   0   
0E32                          ;*Macro unroll:  EXIT
0E32   83 0E                  DW   exit   
0E34   C3 72 0E               JP   enter   
0E37                INITFORTH:      
0E37   DD 21 A7 2E            LD   IX,data_stack   ; initialise the param stack.
0E3B   FD 21 72 0E            LD   IY,enter   
0E3F   DD 22 59 32            LD   (var_sp0),IX   
0E43   01 00 00               LD   BC,0   ; tos
0E46   21 00 00               LD   HL,0   
0E49   22 53 32               LD   (var_intp_stop),HL   
0E4C   22 4F 32               LD   (is_literal),HL   
0E4F   22 57 32               LD   (var_nesting),HL   
0E52   22 55 32               LD   (var_state),HL   
0E55   21 0A 00               LD   HL,10   
0E58   22 5B 32               LD   (var_base),HL   
0E5B   21 63 32               LD   HL,start_user   
0E5E   22 51 32               LD   (var_here),HL   
0E61   21 20 14               LD   HL,header_latest   
0E64   22 5F 32               LD   (var_latest),HL   
0E67   22 5D 32               LD   (var_latest_str),HL   
0E6A   3E 96                  LD   A,rts_low   
0E6C   D3 80                  OUT   ($80),A   ; initialise acia
0E6E   ED 56                  IM   1   
0E70   FB                     EI      
0E71   C9                     RET      
0E72                ENTER:       
0E72   E1                     POP   HL   
0E73                ENTER1:      
0E73   5E                     LD   E,(HL)   
0E74   23                     INC   HL   
0E75   56                     LD   D,(HL)   
0E76   23                     INC   HL   
0E77   E5                     PUSH   HL   
0E78   EB                     EX   DE,HL   
0E79   E9                     JP   (HL)   
0E7A                FORTH:       ; for calling forth words from assembly
0E7A   21 4D 32               LD   HL,exitAddr   
0E7D   E3                     EX   (SP),HL   
0E7E   22 4D 32               LD   (exitAddr),HL   
0E81   EB                     EX   DE,HL   
0E82   E9                     JP   (HL)   
0E83                EXIT:        
0E83   E1                     POP   HL   
0E84   FD E9                  JP   (IY)   
0E86                EXIT_FORTH:      
0E86   C9                     RET      
0E87                          ;*Macro unroll: mCODE "noop",4,0,noop
0E87                HEADER_NOOP:      
0E87   14 0E                  DW   link   
0E89                LINK:     .SET   HEADER_noop   
0E89   04                     DB   0 + 4   
0E8A   6E 6F 6F 70            DB   "noop"   
0E8E                NOOP:        
0E8E                          ;*Macro unroll:  NEXT
0E8E   C3 72 0E               JP   enter   
0E91                             ; !        x a-addr --   store cell in memory
0E91                          ;*Macro unroll: mCODE "!",1,0,STORE
0E91                HEADER_STORE:      
0E91   87 0E                  DW   link   
0E93                LINK:     .SET   HEADER_STORE   
0E93   01                     DB   0 + 1   
0E94   21                     DB   "!"   
0E95                STORE:       
0E95                          ;*Macro unroll:  ppop H,L
0E95   60                     LD   H,B   
0E96   69                     LD   L,C   
0E97                          ;*Macro unroll:  ppop0 B,C
0E97   DD 2B                  DEC   IX   
0E99   DD 46 00               LD   B,(IX+0)   
0E9C   DD 2B                  DEC   IX   
0E9E   DD 4E 00               LD   C,(IX+0)   
0EA1                          ;*Macro unroll:  writeWord HL, B,C
0EA1                          ;*Macro unroll:  writeByte HL, C
0EA1   71                     LD   (HL),C   
0EA2   23                     INC   HL   
0EA3                          ;*Macro unroll:  writeByte HL, B
0EA3   70                     LD   (HL),B   
0EA4   23                     INC   HL   
0EA5                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0EA5   DD 2B                  DEC   IX   ; POP new TOS
0EA7   DD 46 00               LD   B,(IX+0)   
0EAA   DD 2B                  DEC   IX   
0EAC   DD 4E 00               LD   C,(IX+0)   
0EAF                          ;*Macro unroll:  NEXT
0EAF   C3 72 0E               JP   enter   
0EB2                          ;*Macro unroll: mCODE "@",1,0,FETCH
0EB2                HEADER_FETCH:      
0EB2   91 0E                  DW   link   
0EB4                LINK:     .SET   HEADER_FETCH   
0EB4   01                     DB   0 + 1   
0EB5   40                     DB   "@"   
0EB6                FETCH:       
0EB6                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0EB6   69                     LD   L,C   ; HL = TOS
0EB7   60                     LD   H,B   
0EB8                          ;*Macro unroll:  readWord HL, B,C
0EB8   4E                     LD   C,(HL)   
0EB9   23                     INC   HL   
0EBA   46                     LD   B,(HL)   
0EBB   23                     INC   HL   
0EBC                          ;*Macro unroll:  NEXT
0EBC   C3 72 0E               JP   enter   
0EBF                             ; C!      char c-addr --    store char in memory
0EBF                          ;*Macro unroll: mCODE "c!",2,0,CSTORE
0EBF                HEADER_CSTORE:      
0EBF   B2 0E                  DW   link   
0EC1                LINK:     .SET   HEADER_CSTORE   
0EC1   02                     DB   0 + 2   
0EC2   63 21                  DB   "c!"   
0EC4                CSTORE:      
0EC4                          ;*Macro unroll:  ppop H,L
0EC4   60                     LD   H,B   
0EC5   69                     LD   L,C   
0EC6                          ;*Macro unroll:  ppop0 B,C
0EC6   DD 2B                  DEC   IX   
0EC8   DD 46 00               LD   B,(IX+0)   
0ECB   DD 2B                  DEC   IX   
0ECD   DD 4E 00               LD   C,(IX+0)   
0ED0   71                     LD   (HL),C   
0ED1                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0ED1   DD 2B                  DEC   IX   ; POP new TOS
0ED3   DD 46 00               LD   B,(IX+0)   
0ED6   DD 2B                  DEC   IX   
0ED8   DD 4E 00               LD   C,(IX+0)   
0EDB                          ;*Macro unroll:  NEXT
0EDB   C3 72 0E               JP   enter   
0EDE                             ; C@     c-addr -- char   fetch char from memory
0EDE                          ;*Macro unroll: mCODE "c@",2,0,CFETCH
0EDE                HEADER_CFETCH:      
0EDE   BF 0E                  DW   link   
0EE0                LINK:     .SET   HEADER_CFETCH   
0EE0   02                     DB   0 + 2   
0EE1   63 40                  DB   "c@"   
0EE3                CFETCH:      
0EE3   0A                     LD   A,(BC)   
0EE4   4F                     LD   C,A   
0EE5   06 00                  LD   B,0   
0EE7                          ;*Macro unroll:  NEXT
0EE7   C3 72 0E               JP   enter   
0EEA                             ;z RSP!  a-addr --                  set return stack pointer
0EEA                          ;*Macro unroll: mCODE "rsp!",4,0,RSPSTORE
0EEA                HEADER_RSPSTORE:      
0EEA   DE 0E                  DW   link   
0EEC                LINK:     .SET   HEADER_RSPSTORE   
0EEC   04                     DB   0 + 4   
0EED   72 73 70 21            DB   "rsp!"   
0EF1                RSPSTORE:      
0EF1                          ;*Macro unroll:  SET_RET_SP B,C
0EF1                          ;*Macro unroll:  loadWord H,L, B,C
0EF1   69                     LD   L,C   
0EF2   60                     LD   H,B   
0EF3   F9                     LD   SP,HL   
0EF4                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
0EF4   DD 2B                  DEC   IX   ; POP TOS
0EF6   DD 46 00               LD   B,(IX+0)   
0EF9   DD 2B                  DEC   IX   
0EFB   DD 4E 00               LD   C,(IX+0)   
0EFE                          ;*Macro unroll:  NEXT
0EFE   C3 72 0E               JP   enter   
0F01                          ;*Macro unroll: mCODE "sp@",3,0,SPFETCH
0F01                HEADER_SPFETCH:      
0F01   EA 0E                  DW   link   
0F03                LINK:     .SET   HEADER_SPFETCH   
0F03   03                     DB   0 + 3   
0F04   73 70 40               DB   "sp@"   
0F07                SPFETCH:      
0F07   DD E5                  PUSH   IX   
0F09   E1                     POP   HL   
0F0A                          ;*Macro unroll:  ppush H,L
0F0A                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0F0A   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0F0D   DD 23                  INC   IX   
0F0F   DD 70 00               LD   (IX+0),B   
0F12   DD 23                  INC   IX   
0F14   44                     LD   B,H   
0F15   4D                     LD   C,L   
0F16                          ;*Macro unroll:  NEXT
0F16   C3 72 0E               JP   enter   
0F19                          ;*Macro unroll: mCODE "sp!",3,0,SPSTORE
0F19                HEADER_SPSTORE:      
0F19   01 0F                  DW   link   
0F1B                LINK:     .SET   HEADER_SPSTORE   
0F1B   03                     DB   0 + 3   
0F1C   73 70 21               DB   "sp!"   
0F1F                SPSTORE:      
0F1F                          ;*Macro unroll:  ppop H,L
0F1F   60                     LD   H,B   
0F20   69                     LD   L,C   
0F21                          ;*Macro unroll:  ppop0 B,C
0F21   DD 2B                  DEC   IX   
0F23   DD 46 00               LD   B,(IX+0)   
0F26   DD 2B                  DEC   IX   
0F28   DD 4E 00               LD   C,(IX+0)   
0F2B   E5                     PUSH   HL   
0F2C   DD E1                  POP   IX   
0F2E                          ;*Macro unroll:  NEXT
0F2E   C3 72 0E               JP   enter   
0F31                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0F31                          ;*Macro unroll: mCODE "allot",5,0,allot               ;
0F31                HEADER_ALLOT:      ; 
0F31   19 0F                  DW   link   
0F33                LINK:     .SET   HEADER_allot   
0F33   05                     DB   0 + 5   
0F34   61 6C 6C 6F 74         DB   "allot"   
0F39                ALLOT:       
0F39                          ;*Macro unroll:  ENTER
0F39   CF                     RST   $08   
0F3A   57 08 48 0F            DW   here,addstore   ; adds n to here
0F3E                          ;*Macro unroll:  EXIT
0F3E   83 0E                  DW   exit   
0F40   C3 72 0E               JP   enter   
0F43                          ;*Macro unroll: mCODE "+!",2,0,ADDSTORE               ; (n addr -- )
0F43                HEADER_ADDSTORE:      ; (n addr -- )
0F43   31 0F                  DW   link   
0F45                LINK:     .SET   HEADER_ADDSTORE   
0F45   02                     DB   0 + 2   
0F46   2B 21                  DB   "+!"   
0F48                ADDSTORE:      
0F48                          ;*Macro unroll: 	ppop H, L		            ; HL = address, TOS = amount to add
0F48   60                     LD   H,B   ; HL = address, TOS = amount to add
0F49   69                     LD   L,C   
0F4A                          ;*Macro unroll:  ppop0 B,C
0F4A   DD 2B                  DEC   IX   
0F4C   DD 46 00               LD   B,(IX+0)   
0F4F   DD 2B                  DEC   IX   
0F51   DD 4E 00               LD   C,(IX+0)   
0F54   7E                     LD   A,(HL)   
0F55   81                     ADD   A,C   ; add TOS at (HL),
0F56   77                     LD   (HL),A   
0F57   23                     INC   HL   
0F58   7E                     LD   A,(HL)   
0F59   88                     ADC   A,B   
0F5A   77                     LD   (HL),A   
0F5B                          ;*Macro unroll: 	ppop0 B,C                      ; clear param stack
0F5B   DD 2B                  DEC   IX   ; clear param stack
0F5D   DD 46 00               LD   B,(IX+0)   
0F60   DD 2B                  DEC   IX   
0F62   DD 4E 00               LD   C,(IX+0)   
0F65                          ;*Macro unroll:  NEXT
0F65   C3 72 0E               JP   enter   
0F68                          ;*Macro unroll: mCODE ",",1,0,COMMA
0F68                HEADER_COMMA:      
0F68   43 0F                  DW   link   
0F6A                LINK:     .SET   HEADER_COMMA   
0F6A   01                     DB   0 + 1   
0F6B   2C                     DB   ","   
0F6C                COMMA:       
0F6C   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0F6F                          ;*Macro unroll: 	writeWord HL, B,C
0F6F                          ;*Macro unroll:  writeByte HL, C
0F6F   71                     LD   (HL),C   
0F70   23                     INC   HL   
0F71                          ;*Macro unroll:  writeByte HL, B
0F71   70                     LD   (HL),B   
0F72   23                     INC   HL   
0F73   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0F76                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0F76   DD 2B                  DEC   IX   ; cleanup TOS
0F78   DD 46 00               LD   B,(IX+0)   
0F7B   DD 2B                  DEC   IX   
0F7D   DD 4E 00               LD   C,(IX+0)   
0F80                          ;*Macro unroll:  NEXT
0F80   C3 72 0E               JP   enter   
0F83                          ;*Macro unroll: mCODE "c,",1,0,CCOMMA
0F83                HEADER_CCOMMA:      
0F83   68 0F                  DW   link   
0F85                LINK:     .SET   HEADER_CCOMMA   
0F85   01                     DB   0 + 1   
0F86   63 2C                  DB   "c,"   
0F88                CCOMMA:      
0F88                          ;*Macro unroll:  ppush0 H,L
0F88   DD 75 00               LD   (IX+0),L   
0F8B   DD 23                  INC   IX   
0F8D   DD 74 00               LD   (IX+0),H   
0F90   DD 23                  INC   IX   
0F92   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0F95   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
0F96   23                     INC   HL   
0F97   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0F9A                          ;*Macro unroll:  ppop0 H,L
0F9A   DD 2B                  DEC   IX   
0F9C   DD 66 00               LD   H,(IX+0)   
0F9F   DD 2B                  DEC   IX   
0FA1   DD 6E 00               LD   L,(IX+0)   
0FA4                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0FA4   DD 2B                  DEC   IX   ; cleanup TOS
0FA6   DD 46 00               LD   B,(IX+0)   
0FA9   DD 2B                  DEC   IX   
0FAB   DD 4E 00               LD   C,(IX+0)   
0FAE                          ;*Macro unroll:  NEXT
0FAE   C3 72 0E               JP   enter   
0FB1   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
0FD7   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
0FDA   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
0FDF   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
0FEA   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
0FF5                             ; serial I/O
0FF5                INITSERIAL:      
0FF5   21 00 00               LD   HL,0   
0FF8   22 43 30               LD   (serbufused),HL   
0FFB   21 00 30               LD   HL,serbuf   
0FFE   22 3F 30               LD   (serinptr),HL   
1001   22 41 30               LD   (serrdptr),HL   
1004   21 4D 30               LD   HL,linebuf   
1007   22 45 30               LD   (lineBufStart),HL   
100A   22 49 30               LD   (currkey),HL   
100D   22 4B 30               LD   (linebuftop),HL   
1010   21 80 00               LD   HL,LINE_BUFSIZE   
1013   22 47 30               LD   (lineBufSize),HL   
1016   3E 96                  LD   A,rts_low   
1018   D3 80                  OUT   ($80),A   ; initialise acia
101A   ED 56                  IM   1   
101C   FB                     EI      
101D   C9                     RET      
101E                SERIALIN:      
101E   F5                     PUSH   AF   
101F   E5                     PUSH   HL   
1020   DB 80                  IN   A,($80)   
1022   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
1024                          ;*Macro unroll:  _if nz
1024   C2 2A 10               JP   nz,L_M_1834S31   
1027   C3 27 10               JP   $   
102A                          ;*Macro unroll:  STRUC_PUSH $
102A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
102A                STRUC_12:   .SET   STRUC_11   
102A                STRUC_11:   .SET   STRUC_10   
102A                STRUC_10:   .SET   STRUC_9   
102A                STRUC_9:   .SET   STRUC_8   
102A                STRUC_8:   .SET   STRUC_7   
102A                STRUC_7:   .SET   STRUC_6   
102A                STRUC_6:   .SET   STRUC_5   
102A                STRUC_5:   .SET   STRUC_4   
102A                STRUC_4:   .SET   STRUC_3   
102A                STRUC_3:   .SET   STRUC_2   
102A                STRUC_2:   .SET   STRUC_TOP   
102A                STRUC_TOP:   .SET   $   
102A                L_M_1834S31:      
102A   DB 81                  IN   A,($81)   
102C   F5                     PUSH   AF   
102D   3A 43 30               LD   A,(serBufUsed)   
1030   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
1032                          ;*Macro unroll:  _if z
1032   CA 38 10               JP   z,L_M_1839S36   
1035   C3 35 10               JP   $   
1038                          ;*Macro unroll:  STRUC_PUSH $
1038                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1038                STRUC_12:   .SET   STRUC_11   
1038                STRUC_11:   .SET   STRUC_10   
1038                STRUC_10:   .SET   STRUC_9   
1038                STRUC_9:   .SET   STRUC_8   
1038                STRUC_8:   .SET   STRUC_7   
1038                STRUC_7:   .SET   STRUC_6   
1038                STRUC_6:   .SET   STRUC_5   
1038                STRUC_5:   .SET   STRUC_4   
1038                STRUC_4:   .SET   STRUC_3   
1038                STRUC_3:   .SET   STRUC_2   
1038                STRUC_2:   .SET   STRUC_TOP   
1038                STRUC_TOP:   .SET   $   
1038                L_M_1839S36:      
1038   F1                     POP   AF   
1039                          ;*Macro unroll:  _else
1039   C3 39 10               JP   $   
103C                          ;*Macro unroll:  STRUC_FWD
103C                CUR_ADR:   .SET   $   
1036                          .ORG   STRUC_TOP - 2   
1036   3C 10                  DW   CUR_ADR   
103C                          .ORG   CUR_ADR   
103C                STRUC_TOP:   .SET   $   
103C   2A 3F 30               LD   HL,(serInPtr)   
103F   23                     INC   HL   
1040   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
1041   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
1043                          ;*Macro unroll:  _if z
1043   CA 49 10               JP   z,L_M_1846S43   
1046   C3 46 10               JP   $   
1049                          ;*Macro unroll:  STRUC_PUSH $
1049                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1049                STRUC_12:   .SET   STRUC_11   
1049                STRUC_11:   .SET   STRUC_10   
1049                STRUC_10:   .SET   STRUC_9   
1049                STRUC_9:   .SET   STRUC_8   
1049                STRUC_8:   .SET   STRUC_7   
1049                STRUC_7:   .SET   STRUC_6   
1049                STRUC_6:   .SET   STRUC_5   
1049                STRUC_5:   .SET   STRUC_4   
1049                STRUC_4:   .SET   STRUC_3   
1049                STRUC_3:   .SET   STRUC_2   
1049                STRUC_2:   .SET   STRUC_TOP   
1049                STRUC_TOP:   .SET   $   
1049                L_M_1846S43:      
1049   21 00 30               LD   HL,serBuf   
104C                          ;*Macro unroll:  _endif
104C                          ;*Macro unroll:  STRUC_FWD
104C                CUR_ADR:   .SET   $   
1047                          .ORG   STRUC_TOP - 2   
1047   4C 10                  DW   CUR_ADR   
104C                          .ORG   CUR_ADR   
104C                          ;*Macro unroll:  STRUC_POP
104C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
104C                STRUC_TOP:   .SET   STRUC_2   
104C                STRUC_2:   .SET   STRUC_3   
104C                STRUC_3:   .SET   STRUC_4   
104C                STRUC_4:   .SET   STRUC_5   
104C                STRUC_5:   .SET   STRUC_6   
104C                STRUC_6:   .SET   STRUC_7   
104C                STRUC_7:   .SET   STRUC_8   
104C                STRUC_8:   .SET   STRUC_9   
104C                STRUC_9:   .SET   STRUC_10   
104C                STRUC_10:   .SET   STRUC_11   
104C                STRUC_11:   .SET   STRUC_12   
104C                STRUC_12:   .SET   0   
104C   22 3F 30               LD   (serInPtr),HL   
104F   F1                     POP   AF   
1050   77                     LD   (HL),A   
1051   3A 43 30               LD   A,(serBufUsed)   
1054   3C                     INC   A   
1055   32 43 30               LD   (serBufUsed),A   
1058   FE 30                  CP   SER_FULLSIZE   
105A                          ;*Macro unroll:  _if nc
105A   D2 60 10               JP   nc,L_M_1856S53   
105D   C3 5D 10               JP   $   
1060                          ;*Macro unroll:  STRUC_PUSH $
1060                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1060                STRUC_12:   .SET   STRUC_11   
1060                STRUC_11:   .SET   STRUC_10   
1060                STRUC_10:   .SET   STRUC_9   
1060                STRUC_9:   .SET   STRUC_8   
1060                STRUC_8:   .SET   STRUC_7   
1060                STRUC_7:   .SET   STRUC_6   
1060                STRUC_6:   .SET   STRUC_5   
1060                STRUC_5:   .SET   STRUC_4   
1060                STRUC_4:   .SET   STRUC_3   
1060                STRUC_3:   .SET   STRUC_2   
1060                STRUC_2:   .SET   STRUC_TOP   
1060                STRUC_TOP:   .SET   $   
1060                L_M_1856S53:      
1060   3E D6                  LD   A,RTS_HIGH   
1062   D3 80                  OUT   ($80),A   
1064                          ;*Macro unroll:  _endif
1064                          ;*Macro unroll:  STRUC_FWD
1064                CUR_ADR:   .SET   $   
105E                          .ORG   STRUC_TOP - 2   
105E   64 10                  DW   CUR_ADR   
1064                          .ORG   CUR_ADR   
1064                          ;*Macro unroll:  STRUC_POP
1064                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1064                STRUC_TOP:   .SET   STRUC_2   
1064                STRUC_2:   .SET   STRUC_3   
1064                STRUC_3:   .SET   STRUC_4   
1064                STRUC_4:   .SET   STRUC_5   
1064                STRUC_5:   .SET   STRUC_6   
1064                STRUC_6:   .SET   STRUC_7   
1064                STRUC_7:   .SET   STRUC_8   
1064                STRUC_8:   .SET   STRUC_9   
1064                STRUC_9:   .SET   STRUC_10   
1064                STRUC_10:   .SET   STRUC_11   
1064                STRUC_11:   .SET   STRUC_12   
1064                STRUC_12:   .SET   0   
1064                          ;*Macro unroll:  _endif
1064                          ;*Macro unroll:  STRUC_FWD
1064                CUR_ADR:   .SET   $   
103A                          .ORG   STRUC_TOP - 2   
103A   64 10                  DW   CUR_ADR   
1064                          .ORG   CUR_ADR   
1064                          ;*Macro unroll:  STRUC_POP
1064                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1064                STRUC_TOP:   .SET   STRUC_2   
1064                STRUC_2:   .SET   STRUC_3   
1064                STRUC_3:   .SET   STRUC_4   
1064                STRUC_4:   .SET   STRUC_5   
1064                STRUC_5:   .SET   STRUC_6   
1064                STRUC_6:   .SET   STRUC_7   
1064                STRUC_7:   .SET   STRUC_8   
1064                STRUC_8:   .SET   STRUC_9   
1064                STRUC_9:   .SET   STRUC_10   
1064                STRUC_10:   .SET   STRUC_11   
1064                STRUC_11:   .SET   STRUC_12   
1064                STRUC_12:   .SET   0   
1064                          ;*Macro unroll:  _endif
1064                          ;*Macro unroll:  STRUC_FWD
1064                CUR_ADR:   .SET   $   
1028                          .ORG   STRUC_TOP - 2   
1028   64 10                  DW   CUR_ADR   
1064                          .ORG   CUR_ADR   
1064                          ;*Macro unroll:  STRUC_POP
1064                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1064                STRUC_TOP:   .SET   STRUC_2   
1064                STRUC_2:   .SET   STRUC_3   
1064                STRUC_3:   .SET   STRUC_4   
1064                STRUC_4:   .SET   STRUC_5   
1064                STRUC_5:   .SET   STRUC_6   
1064                STRUC_6:   .SET   STRUC_7   
1064                STRUC_7:   .SET   STRUC_8   
1064                STRUC_8:   .SET   STRUC_9   
1064                STRUC_9:   .SET   STRUC_10   
1064                STRUC_10:   .SET   STRUC_11   
1064                STRUC_11:   .SET   STRUC_12   
1064                STRUC_12:   .SET   0   
1064   E1                     POP   HL   
1065   F1                     POP   AF   
1066   FB                     EI      
1067   C9                     RET      
1068                             ; 
1068                             ; getc - input
1068                             ; returns: A = input char
1068                             ; 
1068                GETC:        
1068                          IF   TESTMODE   
1068   E5                     PUSH   HL   
1069   2A 61 32               LD   HL,(char_pointer)   
106C   7E                     LD   A,(HL)   
106D   23                     INC   HL   
106E   22 61 32               LD   (char_pointer),HL   
1071   E1                     POP   HL   
1072   C9                     RET      
1073                          ELSE      
                              ;*Macro unroll:  _do
                              JR   L_M_1880S81   
                              JP   $   
                              ;*Macro unroll:  DLOOP_PUSH $
                    DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
                    DLOOP_12:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_TOP   
                    DLOOP_TOP:   .SET   $   
                    L_M_1880S81:      
                              LD   A,(serBufUsed)   
                              CP   $00   
                              ;*Macro unroll:  _until nz
                              JP   nz,DLOOP_TOP - 3   
                              ;*Macro unroll:  DLOOP_FWD               ; needed?
                    CUR_ADR:   .SET   $   ; needed?
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  _enddo
                              JP   DLOOP_TOP   
                              ;*Macro unroll:  DLOOP_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  DLOOP_POP
                    DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
                    DLOOP_TOP:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_12   
                    DLOOP_12:   .SET   0   
                              PUSH   HL   
                              LD   HL,(serRdPtr)   
                              INC   HL   
                              LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
                              CP   (serBuf + SER_BUFSIZE) & $FF   
                              ;*Macro unroll:  _if z
                              JP   z,L_M_1890S91   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1890S91:      
                              LD   HL,serBuf   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              DI      
                              LD   (serRdPtr),HL   
                              LD   A,(serBufUsed)   
                              DEC   A   
                              LD   (serBufUsed),A   
                              CP   SER_EMPTYSIZE   
                              ;*Macro unroll:  _if c
                              JP   c,L_M_1899S100   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1899S100:      
                              LD   A,RTS_LOW   
                              OUT   ($80),A   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              LD   A,(HL)   
                              EI      
                              POP   HL   
                              RET      ; Char ready in A
1073                          ENDIF      
1073                             ; 
1073                             ; putc - output a character
1073                             ; params: A = char to output
1073                             ; 
1073                PUTC:        
1073   F5                     PUSH   AF   ; Store character
1074                          ;*Macro unroll:  _do
1074   18 03                  JR   L_M_1914S117   
1076   C3 76 10               JP   $   
1079                          ;*Macro unroll:  DLOOP_PUSH $
1079                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1079                DLOOP_12:   .SET   DLOOP_11   
1079                DLOOP_11:   .SET   DLOOP_10   
1079                DLOOP_10:   .SET   DLOOP_9   
1079                DLOOP_9:   .SET   DLOOP_8   
1079                DLOOP_8:   .SET   DLOOP_7   
1079                DLOOP_7:   .SET   DLOOP_6   
1079                DLOOP_6:   .SET   DLOOP_5   
1079                DLOOP_5:   .SET   DLOOP_4   
1079                DLOOP_4:   .SET   DLOOP_3   
1079                DLOOP_3:   .SET   DLOOP_2   
1079                DLOOP_2:   .SET   DLOOP_TOP   
1079                DLOOP_TOP:   .SET   $   
1079                L_M_1914S117:      
1079   DB 80                  IN   A,($80)   ; Status byte
107B   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
107D                          ;*Macro unroll:  _until nz
107D   C2 76 10               JP   nz,DLOOP_TOP - 3   
1080                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1080                CUR_ADR:   .SET   $   ; needed?
1077                          .ORG   DLOOP_TOP - 2   
1077   80 10                  DW   CUR_ADR   
1080                          .ORG   CUR_ADR   
1080                          ;*Macro unroll:  _enddo
1080   C3 79 10               JP   DLOOP_TOP   
1083                          ;*Macro unroll:  DLOOP_FWD
1083                CUR_ADR:   .SET   $   
1077                          .ORG   DLOOP_TOP - 2   
1077   83 10                  DW   CUR_ADR   
1083                          .ORG   CUR_ADR   
1083                          ;*Macro unroll:  DLOOP_POP
1083                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1083                DLOOP_TOP:   .SET   DLOOP_2   
1083                DLOOP_2:   .SET   DLOOP_3   
1083                DLOOP_3:   .SET   DLOOP_4   
1083                DLOOP_4:   .SET   DLOOP_5   
1083                DLOOP_5:   .SET   DLOOP_6   
1083                DLOOP_6:   .SET   DLOOP_7   
1083                DLOOP_7:   .SET   DLOOP_8   
1083                DLOOP_8:   .SET   DLOOP_9   
1083                DLOOP_9:   .SET   DLOOP_10   
1083                DLOOP_10:   .SET   DLOOP_11   
1083                DLOOP_11:   .SET   DLOOP_12   
1083                DLOOP_12:   .SET   0   
1083   F1                     POP   AF   ; Retrieve character
1084   D3 81                  OUT   ($81),A   ; Output the character
1086   C9                     RET      
1087                INPUTREADY:      
1087   3A 43 30               LD   A,(serBufUsed)   
108A   FE 00                  CP   $0   
108C   C9                     RET      
108D                             ; 
108D                             ; getline - input line of text ***
108D                             ; params: HL = addr, DE = max (currently up to 255)
108D                             ; returns: BC = length - up to 255
108D                             ; 
108D                GETLINE:      
108D   F5                     PUSH   AF   
108E   E5                     PUSH   HL   
108F                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
108F                          ;*Macro unroll:  ppush0 D,E
108F   DD 73 00               LD   (IX+0),E   
1092   DD 23                  INC   IX   
1094   DD 72 00               LD   (IX+0),D   
1097   DD 23                  INC   IX   
1099   11 DA 0F               LD   DE,TXT_PROMPT   
109C   CD 52 11               CALL   printPStr   
109F                          ;*Macro unroll:  ppop0 D,E
109F   DD 2B                  DEC   IX   
10A1   DD 56 00               LD   D,(IX+0)   
10A4   DD 2B                  DEC   IX   
10A6   DD 5E 00               LD   E,(IX+0)   
10A9   E1                     POP   HL   
10AA   E5                     PUSH   HL   
10AB   01 00 00               LD   BC,0   
10AE                          ;*Macro unroll:  _do
10AE   18 03                  JR   L_M_1938S144   
10B0   C3 B0 10               JP   $   
10B3                          ;*Macro unroll:  DLOOP_PUSH $
10B3                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10B3                DLOOP_12:   .SET   DLOOP_11   
10B3                DLOOP_11:   .SET   DLOOP_10   
10B3                DLOOP_10:   .SET   DLOOP_9   
10B3                DLOOP_9:   .SET   DLOOP_8   
10B3                DLOOP_8:   .SET   DLOOP_7   
10B3                DLOOP_7:   .SET   DLOOP_6   
10B3                DLOOP_6:   .SET   DLOOP_5   
10B3                DLOOP_5:   .SET   DLOOP_4   
10B3                DLOOP_4:   .SET   DLOOP_3   
10B3                DLOOP_3:   .SET   DLOOP_2   
10B3                DLOOP_2:   .SET   DLOOP_TOP   
10B3                DLOOP_TOP:   .SET   $   
10B3                L_M_1938S144:      
10B3                          ;*Macro unroll:  _do
10B3   18 03                  JR   L_M_1939S145   
10B5   C3 B5 10               JP   $   
10B8                          ;*Macro unroll:  DLOOP_PUSH $
10B8                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10B8                DLOOP_12:   .SET   DLOOP_11   
10B8                DLOOP_11:   .SET   DLOOP_10   
10B8                DLOOP_10:   .SET   DLOOP_9   
10B8                DLOOP_9:   .SET   DLOOP_8   
10B8                DLOOP_8:   .SET   DLOOP_7   
10B8                DLOOP_7:   .SET   DLOOP_6   
10B8                DLOOP_6:   .SET   DLOOP_5   
10B8                DLOOP_5:   .SET   DLOOP_4   
10B8                DLOOP_4:   .SET   DLOOP_3   
10B8                DLOOP_3:   .SET   DLOOP_2   
10B8                DLOOP_2:   .SET   DLOOP_TOP   
10B8                DLOOP_TOP:   .SET   $   
10B8                L_M_1939S145:      
10B8   CD 68 10               CALL   getc   
10BB   FE 08                  CP   $08   
10BD                          ;*Macro unroll:  _if z
10BD   CA C3 10               JP   z,L_M_1942S148   
10C0   C3 C0 10               JP   $   
10C3                          ;*Macro unroll:  STRUC_PUSH $
10C3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10C3                STRUC_12:   .SET   STRUC_11   
10C3                STRUC_11:   .SET   STRUC_10   
10C3                STRUC_10:   .SET   STRUC_9   
10C3                STRUC_9:   .SET   STRUC_8   
10C3                STRUC_8:   .SET   STRUC_7   
10C3                STRUC_7:   .SET   STRUC_6   
10C3                STRUC_6:   .SET   STRUC_5   
10C3                STRUC_5:   .SET   STRUC_4   
10C3                STRUC_4:   .SET   STRUC_3   
10C3                STRUC_3:   .SET   STRUC_2   
10C3                STRUC_2:   .SET   STRUC_TOP   
10C3                STRUC_TOP:   .SET   $   
10C3                L_M_1942S148:      
10C3                          ;*Macro unroll:  checkZeroWord B,C
10C3   79                     LD   A,C   
10C4   B0                     OR   B   
10C5                          ;*Macro unroll:  _if nz
10C5   C2 CB 10               JP   nz,L_M_1944S150   
10C8   C3 C8 10               JP   $   
10CB                          ;*Macro unroll:  STRUC_PUSH $
10CB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10CB                STRUC_12:   .SET   STRUC_11   
10CB                STRUC_11:   .SET   STRUC_10   
10CB                STRUC_10:   .SET   STRUC_9   
10CB                STRUC_9:   .SET   STRUC_8   
10CB                STRUC_8:   .SET   STRUC_7   
10CB                STRUC_7:   .SET   STRUC_6   
10CB                STRUC_6:   .SET   STRUC_5   
10CB                STRUC_5:   .SET   STRUC_4   
10CB                STRUC_4:   .SET   STRUC_3   
10CB                STRUC_3:   .SET   STRUC_2   
10CB                STRUC_2:   .SET   STRUC_TOP   
10CB                STRUC_TOP:   .SET   $   
10CB                L_M_1944S150:      
10CB   2B                     DEC   HL   
10CC   0B                     DEC   BC   
10CD   3E 08                  LD   a,$08   
10CF   CD 73 10               CALL   putc   
10D2   CD 74 11               CALL   printSpace   
10D5   3E 08                  LD   A,$08   
10D7   CD 73 10               CALL   putc   
10DA                          ;*Macro unroll:  _endif
10DA                          ;*Macro unroll:  STRUC_FWD
10DA                CUR_ADR:   .SET   $   
10C9                          .ORG   STRUC_TOP - 2   
10C9   DA 10                  DW   CUR_ADR   
10DA                          .ORG   CUR_ADR   
10DA                          ;*Macro unroll:  STRUC_POP
10DA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10DA                STRUC_TOP:   .SET   STRUC_2   
10DA                STRUC_2:   .SET   STRUC_3   
10DA                STRUC_3:   .SET   STRUC_4   
10DA                STRUC_4:   .SET   STRUC_5   
10DA                STRUC_5:   .SET   STRUC_6   
10DA                STRUC_6:   .SET   STRUC_7   
10DA                STRUC_7:   .SET   STRUC_8   
10DA                STRUC_8:   .SET   STRUC_9   
10DA                STRUC_9:   .SET   STRUC_10   
10DA                STRUC_10:   .SET   STRUC_11   
10DA                STRUC_11:   .SET   STRUC_12   
10DA                STRUC_12:   .SET   0   
10DA                          ;*Macro unroll:  _else
10DA   C3 DA 10               JP   $   
10DD                          ;*Macro unroll:  STRUC_FWD
10DD                CUR_ADR:   .SET   $   
10C1                          .ORG   STRUC_TOP - 2   
10C1   DD 10                  DW   CUR_ADR   
10DD                          .ORG   CUR_ADR   
10DD                STRUC_TOP:   .SET   $   
10DD   77                     LD   (HL),A   
10DE   23                     INC   HL   
10DF   03                     INC   BC   
10E0   CB 7F                  BIT   7,a   
10E2                          ;*Macro unroll:  _if z
10E2   CA E8 10               JP   z,L_M_1958S164   
10E5   C3 E5 10               JP   $   
10E8                          ;*Macro unroll:  STRUC_PUSH $
10E8                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10E8                STRUC_12:   .SET   STRUC_11   
10E8                STRUC_11:   .SET   STRUC_10   
10E8                STRUC_10:   .SET   STRUC_9   
10E8                STRUC_9:   .SET   STRUC_8   
10E8                STRUC_8:   .SET   STRUC_7   
10E8                STRUC_7:   .SET   STRUC_6   
10E8                STRUC_6:   .SET   STRUC_5   
10E8                STRUC_5:   .SET   STRUC_4   
10E8                STRUC_4:   .SET   STRUC_3   
10E8                STRUC_3:   .SET   STRUC_2   
10E8                STRUC_2:   .SET   STRUC_TOP   
10E8                STRUC_TOP:   .SET   $   
10E8                L_M_1958S164:      
10E8   CD 73 10               CALL   putc   
10EB                          ;*Macro unroll:  _endif
10EB                          ;*Macro unroll:  STRUC_FWD
10EB                CUR_ADR:   .SET   $   
10E6                          .ORG   STRUC_TOP - 2   
10E6   EB 10                  DW   CUR_ADR   
10EB                          .ORG   CUR_ADR   
10EB                          ;*Macro unroll:  STRUC_POP
10EB                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10EB                STRUC_TOP:   .SET   STRUC_2   
10EB                STRUC_2:   .SET   STRUC_3   
10EB                STRUC_3:   .SET   STRUC_4   
10EB                STRUC_4:   .SET   STRUC_5   
10EB                STRUC_5:   .SET   STRUC_6   
10EB                STRUC_6:   .SET   STRUC_7   
10EB                STRUC_7:   .SET   STRUC_8   
10EB                STRUC_8:   .SET   STRUC_9   
10EB                STRUC_9:   .SET   STRUC_10   
10EB                STRUC_10:   .SET   STRUC_11   
10EB                STRUC_11:   .SET   STRUC_12   
10EB                STRUC_12:   .SET   0   
10EB   FE 0D                  CP   "\r"   
10ED   28 0B                  JR   z,getLineCheck   
10EF   FE 0A                  CP   "\n"   
10F1   28 07                  JR   z,getLineCheck   
10F3   7B                     LD   A,E   
10F4   B9                     CP   C   
10F5   38 03                  JR   c,getLineCheck   
10F7                          ;*Macro unroll:  _endif
10F7                          ;*Macro unroll:  STRUC_FWD
10F7                CUR_ADR:   .SET   $   
10DB                          .ORG   STRUC_TOP - 2   
10DB   F7 10                  DW   CUR_ADR   
10F7                          .ORG   CUR_ADR   
10F7                          ;*Macro unroll:  STRUC_POP
10F7                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10F7                STRUC_TOP:   .SET   STRUC_2   
10F7                STRUC_2:   .SET   STRUC_3   
10F7                STRUC_3:   .SET   STRUC_4   
10F7                STRUC_4:   .SET   STRUC_5   
10F7                STRUC_5:   .SET   STRUC_6   
10F7                STRUC_6:   .SET   STRUC_7   
10F7                STRUC_7:   .SET   STRUC_8   
10F7                STRUC_8:   .SET   STRUC_9   
10F7                STRUC_9:   .SET   STRUC_10   
10F7                STRUC_10:   .SET   STRUC_11   
10F7                STRUC_11:   .SET   STRUC_12   
10F7                STRUC_12:   .SET   0   
10F7                          ;*Macro unroll:  _enddo
10F7   C3 B8 10               JP   DLOOP_TOP   
10FA                          ;*Macro unroll:  DLOOP_FWD
10FA                CUR_ADR:   .SET   $   
10B6                          .ORG   DLOOP_TOP - 2   
10B6   FA 10                  DW   CUR_ADR   
10FA                          .ORG   CUR_ADR   
10FA                          ;*Macro unroll:  DLOOP_POP
10FA                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
10FA                DLOOP_TOP:   .SET   DLOOP_2   
10FA                DLOOP_2:   .SET   DLOOP_3   
10FA                DLOOP_3:   .SET   DLOOP_4   
10FA                DLOOP_4:   .SET   DLOOP_5   
10FA                DLOOP_5:   .SET   DLOOP_6   
10FA                DLOOP_6:   .SET   DLOOP_7   
10FA                DLOOP_7:   .SET   DLOOP_8   
10FA                DLOOP_8:   .SET   DLOOP_9   
10FA                DLOOP_9:   .SET   DLOOP_10   
10FA                DLOOP_10:   .SET   DLOOP_11   
10FA                DLOOP_11:   .SET   DLOOP_12   
10FA                DLOOP_12:   .SET   0   
10FA                GETLINECHECK:      
10FA   3E 00                  LD   a,0   
10FC   B9                     CP   c   
10FD                          ;*Macro unroll:  _until nz
10FD   C2 B0 10               JP   nz,DLOOP_TOP - 3   
1100                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1100                CUR_ADR:   .SET   $   ; needed?
10B1                          .ORG   DLOOP_TOP - 2   
10B1   00 11                  DW   CUR_ADR   
1100                          .ORG   CUR_ADR   
1100                          ;*Macro unroll:  _enddo
1100   C3 B3 10               JP   DLOOP_TOP   
1103                          ;*Macro unroll:  DLOOP_FWD
1103                CUR_ADR:   .SET   $   
10B1                          .ORG   DLOOP_TOP - 2   
10B1   03 11                  DW   CUR_ADR   
1103                          .ORG   CUR_ADR   
1103                          ;*Macro unroll:  DLOOP_POP
1103                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1103                DLOOP_TOP:   .SET   DLOOP_2   
1103                DLOOP_2:   .SET   DLOOP_3   
1103                DLOOP_3:   .SET   DLOOP_4   
1103                DLOOP_4:   .SET   DLOOP_5   
1103                DLOOP_5:   .SET   DLOOP_6   
1103                DLOOP_6:   .SET   DLOOP_7   
1103                DLOOP_7:   .SET   DLOOP_8   
1103                DLOOP_8:   .SET   DLOOP_9   
1103                DLOOP_9:   .SET   DLOOP_10   
1103                DLOOP_10:   .SET   DLOOP_11   
1103                DLOOP_11:   .SET   DLOOP_12   
1103                DLOOP_12:   .SET   0   
1103   F1                     POP   AF   
1104   E1                     POP   HL   
1105   CD 6B 11               CALL   printCR   
1108   C9                     RET      
1109                PRINTROUTINE:      
1109                          ;*Macro unroll:  _do
1109   18 03                  JR   L_M_1980S188   
110B   C3 0B 11               JP   $   
110E                          ;*Macro unroll:  DLOOP_PUSH $
110E                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
110E                DLOOP_12:   .SET   DLOOP_11   
110E                DLOOP_11:   .SET   DLOOP_10   
110E                DLOOP_10:   .SET   DLOOP_9   
110E                DLOOP_9:   .SET   DLOOP_8   
110E                DLOOP_8:   .SET   DLOOP_7   
110E                DLOOP_7:   .SET   DLOOP_6   
110E                DLOOP_6:   .SET   DLOOP_5   
110E                DLOOP_5:   .SET   DLOOP_4   
110E                DLOOP_4:   .SET   DLOOP_3   
110E                DLOOP_3:   .SET   DLOOP_2   
110E                DLOOP_2:   .SET   DLOOP_TOP   
110E                DLOOP_TOP:   .SET   $   
110E                L_M_1980S188:      
110E   1A                     LD   A,(DE)   
110F   CD 73 10               CALL   putc   
1112   13                     INC   DE   
1113   0B                     DEC   BC   
1114                          ;*Macro unroll:  checkZeroWord B,C
1114   79                     LD   A,C   
1115   B0                     OR   B   
1116                          ;*Macro unroll:  _until z
1116   CA 0B 11               JP   z,DLOOP_TOP - 3   
1119                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1119                CUR_ADR:   .SET   $   ; needed?
110C                          .ORG   DLOOP_TOP - 2   
110C   19 11                  DW   CUR_ADR   
1119                          .ORG   CUR_ADR   
1119                          ;*Macro unroll:  _enddo
1119   C3 0E 11               JP   DLOOP_TOP   
111C                          ;*Macro unroll:  DLOOP_FWD
111C                CUR_ADR:   .SET   $   
110C                          .ORG   DLOOP_TOP - 2   
110C   1C 11                  DW   CUR_ADR   
111C                          .ORG   CUR_ADR   
111C                          ;*Macro unroll:  DLOOP_POP
111C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
111C                DLOOP_TOP:   .SET   DLOOP_2   
111C                DLOOP_2:   .SET   DLOOP_3   
111C                DLOOP_3:   .SET   DLOOP_4   
111C                DLOOP_4:   .SET   DLOOP_5   
111C                DLOOP_5:   .SET   DLOOP_6   
111C                DLOOP_6:   .SET   DLOOP_7   
111C                DLOOP_7:   .SET   DLOOP_8   
111C                DLOOP_8:   .SET   DLOOP_9   
111C                DLOOP_9:   .SET   DLOOP_10   
111C                DLOOP_10:   .SET   DLOOP_11   
111C                DLOOP_11:   .SET   DLOOP_12   
111C                DLOOP_12:   .SET   0   
111C   C9                     RET      
111D                             ; 
111D                             ; getKey -  inputs a line buffered character
111D                             ; params: none
111D                             ; returns: A = character,
111D                             ; 
111D                GETKEY:      
111D   E5                     PUSH   HL   
111E   D5                     PUSH   DE   
111F   C5                     PUSH   BC   
1120   2A 49 30               LD   HL,(currkey)   
1123   ED 5B 4B 30            LD   DE,(lineBufTop)   
1127   B7                     OR   A   
1128   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
112A                          ;*Macro unroll:  _if nc
112A   D2 30 11               JP   nc,L_M_2002S212   
112D   C3 2D 11               JP   $   
1130                          ;*Macro unroll:  STRUC_PUSH $
1130                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1130                STRUC_12:   .SET   STRUC_11   
1130                STRUC_11:   .SET   STRUC_10   
1130                STRUC_10:   .SET   STRUC_9   
1130                STRUC_9:   .SET   STRUC_8   
1130                STRUC_8:   .SET   STRUC_7   
1130                STRUC_7:   .SET   STRUC_6   
1130                STRUC_6:   .SET   STRUC_5   
1130                STRUC_5:   .SET   STRUC_4   
1130                STRUC_4:   .SET   STRUC_3   
1130                STRUC_3:   .SET   STRUC_2   
1130                STRUC_2:   .SET   STRUC_TOP   
1130                STRUC_TOP:   .SET   $   
1130                L_M_2002S212:      
1130   2A 45 30               LD   HL,(lineBufStart)   ; lineBuf
1133   ED 5B 47 30            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
1137   CD 8D 10               CALL   getline   
113A   21 4D 30               LD   HL,lineBuf   
113D   22 49 30               LD   (currkey),HL   
1140   B7                     OR   A   
1141   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
1143   22 4B 30               LD   (lineBufTop),HL   
1146                          ;*Macro unroll:  _endif
1146                          ;*Macro unroll:  STRUC_FWD
1146                CUR_ADR:   .SET   $   
112E                          .ORG   STRUC_TOP - 2   
112E   46 11                  DW   CUR_ADR   
1146                          .ORG   CUR_ADR   
1146                          ;*Macro unroll:  STRUC_POP
1146                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1146                STRUC_TOP:   .SET   STRUC_2   
1146                STRUC_2:   .SET   STRUC_3   
1146                STRUC_3:   .SET   STRUC_4   
1146                STRUC_4:   .SET   STRUC_5   
1146                STRUC_5:   .SET   STRUC_6   
1146                STRUC_6:   .SET   STRUC_7   
1146                STRUC_7:   .SET   STRUC_8   
1146                STRUC_8:   .SET   STRUC_9   
1146                STRUC_9:   .SET   STRUC_10   
1146                STRUC_10:   .SET   STRUC_11   
1146                STRUC_11:   .SET   STRUC_12   
1146                STRUC_12:   .SET   0   
1146   2A 49 30               LD   HL,(currkey)   
1149   7E                     LD   A,(HL)   ; get next key from input lineBuf
114A   23                     INC   HL   
114B   22 49 30               LD   (currkey),HL   ; increment currkey
114E   C1                     POP   BC   
114F   D1                     POP   DE   
1150   E1                     POP   HL   
1151   C9                     RET      
1152                             ; 
1152                             ; Output pascal string ***
1152                             ; params: DE = addr
1152                             ; 
1152                PRINTPSTR:      
1152   F5                     PUSH   AF   
1153   C5                     PUSH   BC   
1154   D5                     PUSH   DE   
1155   1A                     LD   A,(DE)   
1156   4F                     LD   C,A   
1157   06 00                  LD   B,0   
1159   13                     INC   DE   
115A   CD 09 11               CALL   printRoutine   
115D   D1                     POP   DE   
115E   C1                     POP   BC   
115F   F1                     POP   AF   
1160   C9                     RET      
1161                             ; 
1161                             ; Output string
1161                             ; params: DE = addr, BC = length
1161                             ; 
1161                PRINTSTR:      
1161   F5                     PUSH   AF   
1162   C5                     PUSH   BC   
1163   D5                     PUSH   DE   
1164   CD 09 11               CALL   printRoutine   
1167   D1                     POP   DE   
1168   C1                     POP   BC   
1169   F1                     POP   AF   
116A   C9                     RET      
116B                PRINTCR:      
116B   D5                     PUSH   DE   
116C   11 D7 0F               LD   DE,TXT_NEWLINE   
116F   CD 52 11               CALL   printPStr   
1172   D1                     POP   DE   
1173   C9                     RET      
1174                PRINTSPACE:      
1174   F5                     PUSH   AF   
1175   3E 20                  LD   A," "   
1177   CD 73 10               CALL   putc   
117A   F1                     POP   AF   
117B   C9                     RET      
117C                          ;*Macro unroll: mCODE "lit",3,0,LIT
117C                HEADER_LIT:      
117C   83 0F                  DW   link   
117E                LINK:     .SET   HEADER_LIT   
117E   03                     DB   0 + 3   
117F   6C 69 74               DB   "lit"   
1182                LIT:         
1182                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
1182   DD 71 00               LD   (IX+0),C   ; pushTOS
1185   DD 23                  INC   IX   
1187   DD 70 00               LD   (IX+0),B   
118A   DD 23                  INC   IX   
118C   E1                     POP   HL   ; pop address of next Forth word in HL
118D                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
118D   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
118E   23                     INC   HL   
118F   46                     LD   B,(HL)   
1190   23                     INC   HL   
1191                          ;*Macro unroll:  NEXT1
1191   C3 73 0E               JP   enter1   
1194                          ;*Macro unroll: mCODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
1194                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
1194   7C 11                  DW   link   
1196                LINK:     .SET   HEADER_ROT   
1196   03                     DB   0 + 3   
1197   72 6F 74               DB   "rot"   
119A                ROT:         
119A                             ; x3 in BC
119A                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
119A   DD 2B                  DEC   IX   ; x2 in DE
119C   DD 56 00               LD   D,(IX+0)   
119F   DD 2B                  DEC   IX   
11A1   DD 5E 00               LD   E,(IX+0)   
11A4                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
11A4   DD 2B                  DEC   IX   ; x1 in HL
11A6   DD 66 00               LD   H,(IX+0)   
11A9   DD 2B                  DEC   IX   
11AB   DD 6E 00               LD   L,(IX+0)   
11AE                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
11AE   DD 73 00               LD   (IX+0),E   ; x2 on stack
11B1   DD 23                  INC   IX   
11B3   DD 72 00               LD   (IX+0),D   
11B6   DD 23                  INC   IX   
11B8                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
11B8                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11B8   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11BB   DD 23                  INC   IX   
11BD   DD 70 00               LD   (IX+0),B   
11C0   DD 23                  INC   IX   
11C2   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
11C3   4D                     LD   C,L   
11C4                             ; x1 in BC
11C4                          ;*Macro unroll:  NEXT
11C4   C3 72 0E               JP   enter   
11C7                          ;*Macro unroll: mCODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
11C7                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
11C7   94 11                  DW   link   
11C9                LINK:     .SET   HEADER_NROT   
11C9   04                     DB   0 + 4   
11CA   2D 72 6F 74            DB   "-rot"   
11CE                NROT:        
11CE                             ; x3 in BC
11CE                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
11CE   DD 2B                  DEC   IX   ; x2 in DE
11D0   DD 56 00               LD   D,(IX+0)   
11D3   DD 2B                  DEC   IX   
11D5   DD 5E 00               LD   E,(IX+0)   
11D8                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
11D8   DD 2B                  DEC   IX   ; x1 in HL
11DA   DD 66 00               LD   H,(IX+0)   
11DD   DD 2B                  DEC   IX   
11DF   DD 6E 00               LD   L,(IX+0)   
11E2                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
11E2                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11E2   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11E5   DD 23                  INC   IX   
11E7   DD 70 00               LD   (IX+0),B   
11EA   DD 23                  INC   IX   
11EC   44                     LD   B,H   ; PUSH x1 - x3 x1
11ED   4D                     LD   C,L   
11EE                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
11EE                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11EE   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11F1   DD 23                  INC   IX   
11F3   DD 70 00               LD   (IX+0),B   
11F6   DD 23                  INC   IX   
11F8   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
11F9   4B                     LD   C,E   
11FA                             ; x2 in BC
11FA                          ;*Macro unroll:  NEXT
11FA   C3 72 0E               JP   enter   
11FD                          ;*Macro unroll: mCODE "dup",3,0,DUPP        ; x -- x x
11FD                HEADER_DUPP:      ; x -- x x
11FD   C7 11                  DW   link   
11FF                LINK:     .SET   HEADER_DUPP   
11FF   03                     DB   0 + 3   
1200   64 75 70               DB   "dup"   
1203                DUPP:        
1203                          ;*Macro unroll:  ppush0 B,C
1203   DD 71 00               LD   (IX+0),C   
1206   DD 23                  INC   IX   
1208   DD 70 00               LD   (IX+0),B   
120B   DD 23                  INC   IX   
120D                          ;*Macro unroll:  NEXT
120D   C3 72 0E               JP   enter   
1210                             ; SWAP     x1 x2 -- x2 x1    swap top two items
1210                          ;*Macro unroll: mCODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
1210                HEADER_SWAP:      ; x1 x2 -- x2 x1
1210   FD 11                  DW   link   
1212                LINK:     .SET   HEADER_SWAP   
1212   04                     DB   0 + 4   
1213   73 77 61 70            DB   "swap"   
1217                SWAP:        
1217                          ;*Macro unroll:  ppop0 D,E
1217   DD 2B                  DEC   IX   
1219   DD 56 00               LD   D,(IX+0)   
121C   DD 2B                  DEC   IX   
121E   DD 5E 00               LD   E,(IX+0)   
1221                          ;*Macro unroll:  ppush D,E
1221                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1221   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1224   DD 23                  INC   IX   
1226   DD 70 00               LD   (IX+0),B   
1229   DD 23                  INC   IX   
122B   42                     LD   B,D   
122C   4B                     LD   C,E   
122D                          ;*Macro unroll:  NEXT
122D   C3 72 0E               JP   enter   
1230                          ;*Macro unroll: mCODE "drop",4,0,DROP      ; x --
1230                HEADER_DROP:      ; x --
1230   10 12                  DW   link   
1232                LINK:     .SET   HEADER_DROP   
1232   04                     DB   0 + 4   
1233   64 72 6F 70            DB   "drop"   
1237                DROP:        
1237                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
1237   DD 2B                  DEC   IX   ; drop top of stack
1239   DD 46 00               LD   B,(IX+0)   
123C   DD 2B                  DEC   IX   
123E   DD 4E 00               LD   C,(IX+0)   
1241                          ;*Macro unroll:  NEXT
1241   C3 72 0E               JP   enter   
1244                             ; OVER    x1 x2 -- x1 x2 x1
1244                          ;*Macro unroll: mCODE "over",4,0,OVER
1244                HEADER_OVER:      
1244   30 12                  DW   link   
1246                LINK:     .SET   HEADER_OVER   
1246   04                     DB   0 + 4   
1247   6F 76 65 72            DB   "over"   
124B                OVER:        
124B                          ;*Macro unroll:  ppop0 H,L
124B   DD 2B                  DEC   IX   
124D   DD 66 00               LD   H,(IX+0)   
1250   DD 2B                  DEC   IX   
1252   DD 6E 00               LD   L,(IX+0)   
1255                          ;*Macro unroll:  ppush0 H,L
1255   DD 75 00               LD   (IX+0),L   
1258   DD 23                  INC   IX   
125A   DD 74 00               LD   (IX+0),H   
125D   DD 23                  INC   IX   
125F                          ;*Macro unroll:  ppush H,L
125F                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
125F   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
1262   DD 23                  INC   IX   
1264   DD 70 00               LD   (IX+0),B   
1267   DD 23                  INC   IX   
1269   44                     LD   B,H   
126A   4D                     LD   C,L   
126B                          ;*Macro unroll:  NEXT
126B   C3 72 0E               JP   enter   
126E                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
126E                          ;*Macro unroll: mCODE ">r",2,0,TOR
126E                HEADER_TOR:      
126E   44 12                  DW   link   
1270                LINK:     .SET   HEADER_TOR   
1270   02                     DB   0 + 2   
1271   3E 72                  DB   ">r"   
1273                TOR:         
1273   E1                     POP   HL   
1274   C5                     PUSH   BC   
1275   E5                     PUSH   HL   
1276                          ;*Macro unroll:  ppop0 B,C
1276   DD 2B                  DEC   IX   
1278   DD 46 00               LD   B,(IX+0)   
127B   DD 2B                  DEC   IX   
127D   DD 4E 00               LD   C,(IX+0)   
1280                          ;*Macro unroll:  NEXT
1280   C3 72 0E               JP   enter   
1283                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
1283                          ;*Macro unroll: mCODE "r>",2,0,RFROM
1283                HEADER_RFROM:      
1283   6E 12                  DW   link   
1285                LINK:     .SET   HEADER_RFROM   
1285   02                     DB   0 + 2   
1286   72 3E                  DB   "r>"   
1288                RFROM:       
1288                          ;*Macro unroll:  ppush0 B,C
1288   DD 71 00               LD   (IX+0),C   
128B   DD 23                  INC   IX   
128D   DD 70 00               LD   (IX+0),B   
1290   DD 23                  INC   IX   
1292   E1                     POP   HL   
1293   C1                     POP   BC   
1294   E5                     PUSH   HL   
1295                          ;*Macro unroll:  NEXT
1295   C3 72 0E               JP   enter   
1298                             ;   2DROP       ( w w -- )
1298                             ;               Discard two items on stack.
1298                          ;*Macro unroll: mCODE	'2DROP',5,0,DDROP
1298                HEADER_DDROP:      
1298   83 12                  DW   link   
129A                LINK:     .SET   HEADER_DDROP   
129A   05                     DB   0 + 5   
129B   32 44 52 4F 50         DB   "2DROP"   
12A0                DDROP:       
12A0                          ;*Macro unroll:  ENTER
12A0   CF                     RST   $08   
12A1   37 12 37 12 83 0E      DW   DROP,DROP,EXIT   
12A7                             ;   2DUP        ( w1 w2 -- w1 w2 w1 w2 )
12A7                             ;               Duplicate top two items.
12A7                          ;*Macro unroll: mCODE	'2DUP',4,0,DDUP
12A7                HEADER_DDUP:      
12A7   98 12                  DW   link   
12A9                LINK:     .SET   HEADER_DDUP   
12A9   04                     DB   0 + 4   
12AA   32 44 55 50            DB   "2DUP"   
12AE                DDUP:        
12AE                          ;*Macro unroll:  ENTER
12AE   CF                     RST   $08   
12AF   4B 12 4B 12 83 0E      DW   OVER,OVER,EXIT   
12B5                LITSTR:      ; pushes ptr to string and length on stack
12B5   CF                     RST   $08   ; enter forth
12B6   88 12                  DW   rfrom   
12B8   CF 12 4B 12 4B 12 CE 00 DW   count,over,over,plus   
12C0   73 12                  DW   tor   
12C2                          ;*Macro unroll:  EXIT
12C2   83 0E                  DW   exit   
12C4   C3 72 0E               JP   enter   
12C7                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
12C7                          ;*Macro unroll: mCODE "count",5,0,count
12C7                HEADER_COUNT:      
12C7   A7 12                  DW   link   
12C9                LINK:     .SET   HEADER_count   
12C9   05                     DB   0 + 5   
12CA   63 6F 75 6E 74         DB   "count"   
12CF                COUNT:       
12CF                          ;*Macro unroll:  ENTER
12CF   CF                     RST   $08   
12D0   03 12 82 11 01 00 CE 00 DW   DUPP,lit,1,plus   ; ( ptr -- ptr ptr+1)
12D8   17 12 E3 0E            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
12DC                          ;*Macro unroll:  EXIT
12DC   83 0E                  DW   exit   
12DE   C3 72 0E               JP   enter   
12E1                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
12E1                             ; to define the name s" using asm80
12E1                          ;*Macro unroll: mCODE {"s",$22},2,msk_immed,squote
12E1                HEADER_SQUOTE:      
12E1   C7 12                  DW   link   
12E3                LINK:     .SET   HEADER_squote   
12E3   82                     DB   msk_immed + 2   
12E4   73 22                  DB   "s",$22   
12E6                SQUOTE:      
12E6   18 04                  JR   qt   
12E8                          ;*Macro unroll: mCODE $22,1,msk_immed,qt
12E8                HEADER_QT:      
12E8   E1 12                  DW   link   
12EA                LINK:     .SET   HEADER_qt   
12EA   81                     DB   msk_immed + 1   
12EB   22                     DB   $22   
12EC                QT:          
12EC                          ;*Macro unroll:  ENTER
12EC   CF                     RST   $08   
12ED   8B 08 B6 0E CD 01      DW   state,fetch,zequal   
12F3                          ;*Macro unroll:  cIf
12F3   2F 07 00 00            DW   QBRAN,0   
12F7                          ;*Macro unroll:  CPL_PUSH $
12F7                CPL_COUNT:   .SET   CPL_COUNT + 1   
12F7                CPL_10:   .SET   CPL_9   
12F7                CPL_9:    .SET   CPL_8   
12F7                CPL_8:    .SET   CPL_7   
12F7                CPL_7:    .SET   CPL_6   
12F7                CPL_6:    .SET   CPL_5   
12F7                CPL_5:    .SET   CPL_4   
12F7                CPL_4:    .SET   CPL_3   
12F7                CPL_3:    .SET   CPL_2   
12F7                CPL_2:    .SET   CPL_TOP   
12F7                CPL_TOP:   .SET   $   
12F7   82 11 22 00            DW   lit,$22   ; delim
12FB   82 11 3F 00            DW   lit,63   ; limit 63 + length
12FF   EE 08 B6 0E            DW   latestStr,fetch   
1303   82 11 CD 30 3C 01      DW   lit,wordBuf,equal   
1309                          ;*Macro unroll:  cIf
1309   2F 07 00 00            DW   QBRAN,0   
130D                          ;*Macro unroll:  CPL_PUSH $
130D                CPL_COUNT:   .SET   CPL_COUNT + 1   
130D                CPL_10:   .SET   CPL_9   
130D                CPL_9:    .SET   CPL_8   
130D                CPL_8:    .SET   CPL_7   
130D                CPL_7:    .SET   CPL_6   
130D                CPL_6:    .SET   CPL_5   
130D                CPL_5:    .SET   CPL_4   
130D                CPL_4:    .SET   CPL_3   
130D                CPL_3:    .SET   CPL_2   
130D                CPL_2:    .SET   CPL_TOP   
130D                CPL_TOP:   .SET   $   
130D   82 11 0D 31            DW   lit,wordBuf2   
1311                          ;*Macro unroll:  cElse
1311   4C 07 00 00            DW   BRAN,0   
1315                          ;*Macro unroll:  cBRANCH_FWD
1315                CUR_ADR:   .SET   $   
130B                          .ORG   CPL_TOP - 2   
130B   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
1315                          .ORG   CUR_ADR   
1315                CPL_TOP:   .SET   $   
1315   82 11 CD 30            DW   lit,wordBuf   
1319                          ;*Macro unroll:  cEndIf
1319                          ;*Macro unroll:  cBRANCH_FWD
1319                CUR_ADR:   .SET   $   
1313                          .ORG   CPL_TOP - 2   
1313   06 00                  DW   CUR_ADR - CPL_TOP + 2   
1319                          .ORG   CUR_ADR   
1319                          ;*Macro unroll:  CPL_POP
1319                CPL_COUNT:   .SET   CPL_COUNT - 1   
1319                CPL_TOP:   .SET   CPL_2   
1319                CPL_2:    .SET   CPL_3   
1319                CPL_3:    .SET   CPL_4   
1319                CPL_4:    .SET   CPL_5   
1319                CPL_5:    .SET   CPL_6   
1319                CPL_6:    .SET   CPL_7   
1319                CPL_7:    .SET   CPL_8   
1319                CPL_8:    .SET   CPL_9   
1319                CPL_9:    .SET   CPL_10   
1319                CPL_10:   .SET   0   
1319   EE 08 95 0E            DW   latestStr,store   ; store here in latestStr
131D   EE 08 B6 0E            DW   latestStr,fetch   
1321   B6 0B CF 12            DW   xword,count   
1325                          ;*Macro unroll:  cElse
1325   4C 07 00 00            DW   BRAN,0   
1329                          ;*Macro unroll:  cBRANCH_FWD
1329                CUR_ADR:   .SET   $   
12F5                          .ORG   CPL_TOP - 2   
12F5   34 00                  DW   CUR_ADR - CPL_TOP + 2   
1329                          .ORG   CUR_ADR   
1329                CPL_TOP:   .SET   $   
1329   82 11 B5 12 6C 0F      DW   lit,litstr,comma   
132F   82 11 22 00 FE 0A      DW   lit,$22,word   
1335   E3 0E 38 03            DW   cfetch,ONEP   
1339   39 0F                  DW   allot   
133B                          ;*Macro unroll:  cEndif
133B                          ;*Macro unroll:  cBRANCH_FWD
133B                CUR_ADR:   .SET   $   
1327                          .ORG   CPL_TOP - 2   
1327   14 00                  DW   CUR_ADR - CPL_TOP + 2   
133B                          .ORG   CUR_ADR   
133B                          ;*Macro unroll:  CPL_POP
133B                CPL_COUNT:   .SET   CPL_COUNT - 1   
133B                CPL_TOP:   .SET   CPL_2   
133B                CPL_2:    .SET   CPL_3   
133B                CPL_3:    .SET   CPL_4   
133B                CPL_4:    .SET   CPL_5   
133B                CPL_5:    .SET   CPL_6   
133B                CPL_6:    .SET   CPL_7   
133B                CPL_7:    .SET   CPL_8   
133B                CPL_8:    .SET   CPL_9   
133B                CPL_9:    .SET   CPL_10   
133B                CPL_10:   .SET   0   
133B                          ;*Macro unroll:  EXIT
133B   83 0E                  DW   exit   
133D   C3 72 0E               JP   enter   
1340                             ; 
1340                             ; compareStr - string equal
1340                             ; params: de = string1, HL = string2, BC = length
1340                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
1340                             ; destroys: de, HL, BC
1340                             ; 
1340                COMPARESTR:      
1340                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
1340   79                     LD   A,C   ; test for Count=0
1341   B0                     OR   B   
1342                          ;*Macro unroll:  _if nz          ; length zero = match
1342   C2 48 13               JP   nz,L_M_2171S56   ; length zero = match
1345   C3 45 13               JP   $   
1348                          ;*Macro unroll:  STRUC_PUSH $
1348                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1348                STRUC_12:   .SET   STRUC_11   
1348                STRUC_11:   .SET   STRUC_10   
1348                STRUC_10:   .SET   STRUC_9   
1348                STRUC_9:   .SET   STRUC_8   
1348                STRUC_8:   .SET   STRUC_7   
1348                STRUC_7:   .SET   STRUC_6   
1348                STRUC_6:   .SET   STRUC_5   
1348                STRUC_5:   .SET   STRUC_4   
1348                STRUC_4:   .SET   STRUC_3   
1348                STRUC_3:   .SET   STRUC_2   
1348                STRUC_2:   .SET   STRUC_TOP   
1348                STRUC_TOP:   .SET   $   
1348                L_M_2171S56:      
1348                          ;*Macro unroll:  _do
1348   18 03                  JR   L_M_2172S57   
134A   C3 4A 13               JP   $   
134D                          ;*Macro unroll:  DLOOP_PUSH $
134D                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
134D                DLOOP_12:   .SET   DLOOP_11   
134D                DLOOP_11:   .SET   DLOOP_10   
134D                DLOOP_10:   .SET   DLOOP_9   
134D                DLOOP_9:   .SET   DLOOP_8   
134D                DLOOP_8:   .SET   DLOOP_7   
134D                DLOOP_7:   .SET   DLOOP_6   
134D                DLOOP_6:   .SET   DLOOP_5   
134D                DLOOP_5:   .SET   DLOOP_4   
134D                DLOOP_4:   .SET   DLOOP_3   
134D                DLOOP_3:   .SET   DLOOP_2   
134D                DLOOP_2:   .SET   DLOOP_TOP   
134D                DLOOP_TOP:   .SET   $   
134D                L_M_2172S57:      
134D   1A                     LD   A,(DE)   
134E   13                     INC   DE   
134F   ED A1                  CPI      
1351                          ;*Macro unroll:  _if nz          ; char mismatch: exit
1351   C2 57 13               JP   nz,L_M_2176S61   ; char mismatch: exit
1354   C3 54 13               JP   $   
1357                          ;*Macro unroll:  STRUC_PUSH $
1357                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1357                STRUC_12:   .SET   STRUC_11   
1357                STRUC_11:   .SET   STRUC_10   
1357                STRUC_10:   .SET   STRUC_9   
1357                STRUC_9:   .SET   STRUC_8   
1357                STRUC_8:   .SET   STRUC_7   
1357                STRUC_7:   .SET   STRUC_6   
1357                STRUC_6:   .SET   STRUC_5   
1357                STRUC_5:   .SET   STRUC_4   
1357                STRUC_4:   .SET   STRUC_3   
1357                STRUC_3:   .SET   STRUC_2   
1357                STRUC_2:   .SET   STRUC_TOP   
1357                STRUC_TOP:   .SET   $   
1357                L_M_2176S61:      
1357   2B                     DEC   HL   ; point at mismatch char
1358   BE                     CP   (HL)   ; set carry if char1 < char2
1359   9F                     SBC   A,A   
135A   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
135C   C9                     RET      
135D                          ;*Macro unroll:  _endif
135D                          ;*Macro unroll:  STRUC_FWD
135D                CUR_ADR:   .SET   $   
1355                          .ORG   STRUC_TOP - 2   
1355   5D 13                  DW   CUR_ADR   
135D                          .ORG   CUR_ADR   
135D                          ;*Macro unroll:  STRUC_POP
135D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
135D                STRUC_TOP:   .SET   STRUC_2   
135D                STRUC_2:   .SET   STRUC_3   
135D                STRUC_3:   .SET   STRUC_4   
135D                STRUC_4:   .SET   STRUC_5   
135D                STRUC_5:   .SET   STRUC_6   
135D                STRUC_6:   .SET   STRUC_7   
135D                STRUC_7:   .SET   STRUC_8   
135D                STRUC_8:   .SET   STRUC_9   
135D                STRUC_9:   .SET   STRUC_10   
135D                STRUC_10:   .SET   STRUC_11   
135D                STRUC_11:   .SET   STRUC_12   
135D                STRUC_12:   .SET   0   
135D                          ;*Macro unroll:  _until po
135D   E2 4A 13               JP   po,DLOOP_TOP - 3   
1360                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1360                CUR_ADR:   .SET   $   ; needed?
134B                          .ORG   DLOOP_TOP - 2   
134B   60 13                  DW   CUR_ADR   
1360                          .ORG   CUR_ADR   
1360                          ;*Macro unroll:  _enddo
1360   C3 4D 13               JP   DLOOP_TOP   
1363                          ;*Macro unroll:  DLOOP_FWD
1363                CUR_ADR:   .SET   $   
134B                          .ORG   DLOOP_TOP - 2   
134B   63 13                  DW   CUR_ADR   
1363                          .ORG   CUR_ADR   
1363                          ;*Macro unroll:  DLOOP_POP
1363                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1363                DLOOP_TOP:   .SET   DLOOP_2   
1363                DLOOP_2:   .SET   DLOOP_3   
1363                DLOOP_3:   .SET   DLOOP_4   
1363                DLOOP_4:   .SET   DLOOP_5   
1363                DLOOP_5:   .SET   DLOOP_6   
1363                DLOOP_6:   .SET   DLOOP_7   
1363                DLOOP_7:   .SET   DLOOP_8   
1363                DLOOP_8:   .SET   DLOOP_9   
1363                DLOOP_9:   .SET   DLOOP_10   
1363                DLOOP_10:   .SET   DLOOP_11   
1363                DLOOP_11:   .SET   DLOOP_12   
1363                DLOOP_12:   .SET   0   
1363                          ;*Macro unroll:  _endif
1363                          ;*Macro unroll:  STRUC_FWD
1363                CUR_ADR:   .SET   $   
1346                          .ORG   STRUC_TOP - 2   
1346   63 13                  DW   CUR_ADR   
1363                          .ORG   CUR_ADR   
1363                          ;*Macro unroll:  STRUC_POP
1363                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1363                STRUC_TOP:   .SET   STRUC_2   
1363                STRUC_2:   .SET   STRUC_3   
1363                STRUC_3:   .SET   STRUC_4   
1363                STRUC_4:   .SET   STRUC_5   
1363                STRUC_5:   .SET   STRUC_6   
1363                STRUC_6:   .SET   STRUC_7   
1363                STRUC_7:   .SET   STRUC_8   
1363                STRUC_8:   .SET   STRUC_9   
1363                STRUC_9:   .SET   STRUC_10   
1363                STRUC_10:   .SET   STRUC_11   
1363                STRUC_11:   .SET   STRUC_12   
1363                STRUC_12:   .SET   0   
1363                             ; count exhausted & no mismatch found
1363   3E 00                  LD   A,0   ; a=0 (s1=s2)
1365   C9                     RET      
1366                          ;*Macro unroll: mCODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
1366                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
1366   E8 12                  DW   link   
1368                LINK:     .SET   HEADER_pack   
1368   04                     DB   0 + 4   
1369   70 61 63 6B            DB   "pack"   
136D                PACK:        
136D                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
136D   50                     LD   D,B   ; DE = adr2, BC = len
136E   59                     LD   E,C   
136F                          ;*Macro unroll:  ppop0 B,C
136F   DD 2B                  DEC   IX   
1371   DD 46 00               LD   B,(IX+0)   
1374   DD 2B                  DEC   IX   
1376   DD 4E 00               LD   C,(IX+0)   
1379   D5                     PUSH   DE   
137A                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
137A   DD 2B                  DEC   IX   ; HL = adr1
137C   DD 66 00               LD   H,(IX+0)   
137F   DD 2B                  DEC   IX   
1381   DD 6E 00               LD   L,(IX+0)   
1384   79                     LD   A,C   
1385   12                     LD   (DE),A   ; write length byte to adr2
1386   13                     INC   DE   ; adr2 += 1
1387   ED B0                  LDIR      
1389   C1                     POP   BC   ; TOS = adr2
138A                          ;*Macro unroll:  NEXT
138A   C3 72 0E               JP   enter   
138D                             ; .s print stack (non-destructively)
138D                          ;*Macro unroll: mCODE ".s",2,0,dots                   ; ( -- )
138D                HEADER_DOTS:      ; ( -- )
138D   66 13                  DW   link   
138F                LINK:     .SET   HEADER_dots   
138F   02                     DB   0 + 2   
1390   2E 73                  DB   ".s"   
1392                DOTS:        
1392                          ;*Macro unroll:  ENTER
1392   CF                     RST   $08   
1393   07 0F                  DW   spfetch   ; psp
1395   BB 08 B6 0E            DW   sp0,fetch   ; psp0
1399   1E 01                  DW   SUBB   
139B   82 11 00 00 B0 01      DW   lit,0,greaterThan   
13A1                          ;*Macro unroll:  cif
13A1   2F 07 00 00            DW   QBRAN,0   
13A5                          ;*Macro unroll:  CPL_PUSH $
13A5                CPL_COUNT:   .SET   CPL_COUNT + 1   
13A5                CPL_10:   .SET   CPL_9   
13A5                CPL_9:    .SET   CPL_8   
13A5                CPL_8:    .SET   CPL_7   
13A5                CPL_7:    .SET   CPL_6   
13A5                CPL_6:    .SET   CPL_5   
13A5                CPL_5:    .SET   CPL_4   
13A5                CPL_4:    .SET   CPL_3   
13A5                CPL_3:    .SET   CPL_2   
13A5                CPL_2:    .SET   CPL_TOP   
13A5                CPL_TOP:   .SET   $   
13A5   BB 08 B6 0E 82 11 02 00 CE 00 DW   sp0,fetch,lit,2,plus   
13AF                          ;*Macro unroll:  cdo
13AF   4C 07 06 00            DW   BRAN,6   
13B3   4C 07 00 00            DW   BRAN,0   
13B7                          ;*Macro unroll:  CPL_PUSH $
13B7                CPL_COUNT:   .SET   CPL_COUNT + 1   
13B7                CPL_10:   .SET   CPL_9   
13B7                CPL_9:    .SET   CPL_8   
13B7                CPL_8:    .SET   CPL_7   
13B7                CPL_7:    .SET   CPL_6   
13B7                CPL_6:    .SET   CPL_5   
13B7                CPL_5:    .SET   CPL_4   
13B7                CPL_4:    .SET   CPL_3   
13B7                CPL_3:    .SET   CPL_2   
13B7                CPL_2:    .SET   CPL_TOP   
13B7                CPL_TOP:   .SET   $   
13B7   03 12                  DW   DUPP   
13B9   07 0F 82 11 02 00 1E 01 DW   spfetch,lit,2,SUBB   
13C1   17 12 1E 01 CD 01      DW   swap,SUBB,zequal   
13C7                          ;*Macro unroll:  cuntil
13C7   CD 01 2F 07 E8 FF      DW   ZEQUAL,QBRAN,CPL_TOP - $ - 8   
13CD   03 12 B6 0E 78 09      DW   DUPP,fetch,dot   
13D3   82 11 02 00 CE 00      DW   lit,2,plus   
13D9                          ;*Macro unroll:  cenddo
13D9   4C 07 DC FF            DW   BRAN,CPL_TOP - $ - 2   
13DD                          ;*Macro unroll:  cBRANCH_FWD
13DD                CUR_ADR:   .SET   $   
13B5                          .ORG   CPL_TOP - 2   
13B5   28 00                  DW   CUR_ADR - CPL_TOP + 2   
13DD                          .ORG   CUR_ADR   
13DD                          ;*Macro unroll:  CPL_POP
13DD                CPL_COUNT:   .SET   CPL_COUNT - 1   
13DD                CPL_TOP:   .SET   CPL_2   
13DD                CPL_2:    .SET   CPL_3   
13DD                CPL_3:    .SET   CPL_4   
13DD                CPL_4:    .SET   CPL_5   
13DD                CPL_5:    .SET   CPL_6   
13DD                CPL_6:    .SET   CPL_7   
13DD                CPL_7:    .SET   CPL_8   
13DD                CPL_8:    .SET   CPL_9   
13DD                CPL_9:    .SET   CPL_10   
13DD                CPL_10:   .SET   0   
13DD   37 12                  DW   drop   
13DF                          ;*Macro unroll:  cendif
13DF                          ;*Macro unroll:  cBRANCH_FWD
13DF                CUR_ADR:   .SET   $   
13A3                          .ORG   CPL_TOP - 2   
13A3   3C 00                  DW   CUR_ADR - CPL_TOP + 2   
13DF                          .ORG   CUR_ADR   
13DF                          ;*Macro unroll:  CPL_POP
13DF                CPL_COUNT:   .SET   CPL_COUNT - 1   
13DF                CPL_TOP:   .SET   CPL_2   
13DF                CPL_2:    .SET   CPL_3   
13DF                CPL_3:    .SET   CPL_4   
13DF                CPL_4:    .SET   CPL_5   
13DF                CPL_5:    .SET   CPL_6   
13DF                CPL_6:    .SET   CPL_7   
13DF                CPL_7:    .SET   CPL_8   
13DF                CPL_8:    .SET   CPL_9   
13DF                CPL_9:    .SET   CPL_10   
13DF                CPL_10:   .SET   0   
13DF                          ;*Macro unroll:  EXIT
13DF   83 0E                  DW   exit   
13E1   C3 72 0E               JP   enter   
13E4                          ;*Macro unroll: mCODE "words", 5, 0, WORDS
13E4                HEADER_WORDS:      
13E4   8D 13                  DW   link   
13E6                LINK:     .SET   HEADER_WORDS   
13E6   05                     DB   0 + 5   
13E7   77 6F 72 64 73         DB   "words"   
13EC                WORDS:       
13EC   C5                     PUSH   BC   
13ED   CD F4 13               CALL   listWords   
13F0   C1                     POP   BC   
13F1                          ;*Macro unroll:  NEXT
13F1   C3 72 0E               JP   enter   
13F4                LISTWORDS:      
13F4   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
13F8                          ;*Macro unroll:  _do
13F8   18 03                  JR   L_M_2226S30   
13FA   C3 FA 13               JP   $   
13FD                          ;*Macro unroll:  DLOOP_PUSH $
13FD                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
13FD                DLOOP_12:   .SET   DLOOP_11   
13FD                DLOOP_11:   .SET   DLOOP_10   
13FD                DLOOP_10:   .SET   DLOOP_9   
13FD                DLOOP_9:   .SET   DLOOP_8   
13FD                DLOOP_8:   .SET   DLOOP_7   
13FD                DLOOP_7:   .SET   DLOOP_6   
13FD                DLOOP_6:   .SET   DLOOP_5   
13FD                DLOOP_5:   .SET   DLOOP_4   
13FD                DLOOP_4:   .SET   DLOOP_3   
13FD                DLOOP_3:   .SET   DLOOP_2   
13FD                DLOOP_2:   .SET   DLOOP_TOP   
13FD                DLOOP_TOP:   .SET   $   
13FD                L_M_2226S30:      
13FD                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
13FD   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
13FE   B2                     OR   D   
13FF                          ;*Macro unroll:  _until z
13FF   CA FA 13               JP   z,DLOOP_TOP - 3   
1402                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1402                CUR_ADR:   .SET   $   ; needed?
13FB                          .ORG   DLOOP_TOP - 2   
13FB   02 14                  DW   CUR_ADR   
1402                          .ORG   CUR_ADR   
1402   D5                     PUSH   DE   ; save ptr to header
1403   13                     INC   DE   ; skip over first field
1404   13                     INC   DE   
1405   1A                     LD   A,(DE)   ; a = flags+length field
1406   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
1408   06 00                  LD   B,0   
140A   4F                     LD   C,A   
140B   13                     INC   DE   
140C   CD 61 11               CALL   printStr   
140F   CD 74 11               CALL   printSpace   
1412   CD 73 10               CALL   putc   
1415   E1                     POP   HL   ; HL = link to previous header
1416   5E                     LD   E,(HL)   
1417   23                     INC   HL   
1418   56                     LD   D,(HL)   ; DE = previous word
1419                          ;*Macro unroll:  _enddo
1419   C3 FD 13               JP   DLOOP_TOP   
141C                          ;*Macro unroll:  DLOOP_FWD
141C                CUR_ADR:   .SET   $   
13FB                          .ORG   DLOOP_TOP - 2   
13FB   1C 14                  DW   CUR_ADR   
141C                          .ORG   CUR_ADR   
141C                          ;*Macro unroll:  DLOOP_POP
141C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
141C                DLOOP_TOP:   .SET   DLOOP_2   
141C                DLOOP_2:   .SET   DLOOP_3   
141C                DLOOP_3:   .SET   DLOOP_4   
141C                DLOOP_4:   .SET   DLOOP_5   
141C                DLOOP_5:   .SET   DLOOP_6   
141C                DLOOP_6:   .SET   DLOOP_7   
141C                DLOOP_7:   .SET   DLOOP_8   
141C                DLOOP_8:   .SET   DLOOP_9   
141C                DLOOP_9:   .SET   DLOOP_10   
141C                DLOOP_10:   .SET   DLOOP_11   
141C                DLOOP_11:   .SET   DLOOP_12   
141C                DLOOP_12:   .SET   0   
141C   CD 6B 11               CALL   printCR   
141F   C9                     RET      
1420                             ; "latest" must be the last word defined
1420                          ;*Macro unroll:  mVAR "latest",6,0,latest, var_latest
1420                          ;*Macro unroll: mCODE "latest",6,0,latest
1420                HEADER_LATEST:      
1420   E4 13                  DW   link   
1422                LINK:     .SET   HEADER_latest   
1422   06                     DB   0 + 6   
1423   6C 61 74 65 73 74      DB   "latest"   
1429                LATEST:      
1429                          ;*Macro unroll:  ppush0 B,C
1429   DD 71 00               LD   (IX+0),C   
142C   DD 23                  INC   IX   
142E   DD 70 00               LD   (IX+0),B   
1431   DD 23                  INC   IX   
1433   01 5F 32               LD   BC,var_latest   
1436                          ;*Macro unroll:  NEXT
1436   C3 72 0E               JP   enter   
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
2000                TESTS_START:      
2000                             ; 
2000                             ; test-macros
2000                             ; 
2000                             ; macros to facilitate tests
2000                             ; 
2000                .macro TEST_SET_TEXT,s1
2000                             ; 
2000                 ld HL, (lineBufStart)
2000                 ld (lineBufTop),HL
2000                 ld (currkey),HL
2000                 ld HL, tst_text%%M
2000                 ld (char_pointer), HL
2000                 _skip
2000                tst_text%%M:
2000                 db s1,"\r\n",-1,"\r\n"
2000                 _endskip
2000                .endm
2000                 
2000                             ; prevents using _if macro here
2000                .macro EXPECT,expect,failtxt
2000                             ; 
2000                 call printNum
2000                 loadWord H,L, B,C
2000                 ld L, C
2000                 ppop0 B,C
2000                 CMP16 expect
2000                 jp z, tf_done%%M            ; asm80 macro nesting issue
2000                 ld DE, FAILED
2000                 call printPStr
2000                 ld DE, te_fail%%M
2000                 call printPStr
2000                 halt
2000                 _skip
2000                te_fail%%M:
2000                 .pstr failtxt
2000                 _endskip
2000                tf_done%%M:
2000                .endm
2000                 
2000                             ; 
2000                             ; tests
2000                             ; 
2000                             ; these tests will evaluate when TESTMODE = 1
2000                             ; 
2000                          ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
2000   2A 45 30               LD   HL,(lineBufStart)   
2003   22 4B 30               LD   (lineBufTop),HL   
2006   22 49 30               LD   (currkey),HL   
2009   21 12 20               LD   HL,tst_textM_2296S7   
200C   22 61 32               LD   (char_pointer),HL   
200F                          ;*Macro unroll:  _skip
200F   C3 0F 20               JP   $   
2012                          ;*Macro unroll:  STRUC_PUSH $
2012                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2012                STRUC_12:   .SET   STRUC_11   
2012                STRUC_11:   .SET   STRUC_10   
2012                STRUC_10:   .SET   STRUC_9   
2012                STRUC_9:   .SET   STRUC_8   
2012                STRUC_8:   .SET   STRUC_7   
2012                STRUC_7:   .SET   STRUC_6   
2012                STRUC_6:   .SET   STRUC_5   
2012                STRUC_5:   .SET   STRUC_4   
2012                STRUC_4:   .SET   STRUC_3   
2012                STRUC_3:   .SET   STRUC_2   
2012                STRUC_2:   .SET   STRUC_TOP   
2012                STRUC_TOP:   .SET   $   
2012                TST_TEXTM_2296S7:      
2012   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 2C 20 64 6F 65 73 3E 20 40 20 3B 0D 0A FF 0D 0A DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
2031                          ;*Macro unroll:  _endskip
2031                          ;*Macro unroll:  STRUC_FWD
2031                CUR_ADR:   .SET   $   
2010                          .ORG   STRUC_TOP - 2   
2010   31 20                  DW   CUR_ADR   
2031                          .ORG   CUR_ADR   
2031                          ;*Macro unroll:  STRUC_POP
2031                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2031                STRUC_TOP:   .SET   STRUC_2   
2031                STRUC_2:   .SET   STRUC_3   
2031                STRUC_3:   .SET   STRUC_4   
2031                STRUC_4:   .SET   STRUC_5   
2031                STRUC_5:   .SET   STRUC_6   
2031                STRUC_6:   .SET   STRUC_7   
2031                STRUC_7:   .SET   STRUC_8   
2031                STRUC_8:   .SET   STRUC_9   
2031                STRUC_9:   .SET   STRUC_10   
2031                STRUC_10:   .SET   STRUC_11   
2031                STRUC_11:   .SET   STRUC_12   
2031                STRUC_12:   .SET   0   
2031                          ;*Macro unroll: INTERPRET
2031   CF                     RST   $08   
2032   4E 0B                  DW   interpret   
2034   86 0E                  DW   exit_forth   
2036                          ;*Macro unroll: TEST_SET_TEXT "100 const y"
2036   2A 45 30               LD   HL,(lineBufStart)   
2039   22 4B 30               LD   (lineBufTop),HL   
203C   22 49 30               LD   (currkey),HL   
203F   21 48 20               LD   HL,tst_textM_2298S9   
2042   22 61 32               LD   (char_pointer),HL   
2045                          ;*Macro unroll:  _skip
2045   C3 45 20               JP   $   
2048                          ;*Macro unroll:  STRUC_PUSH $
2048                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2048                STRUC_12:   .SET   STRUC_11   
2048                STRUC_11:   .SET   STRUC_10   
2048                STRUC_10:   .SET   STRUC_9   
2048                STRUC_9:   .SET   STRUC_8   
2048                STRUC_8:   .SET   STRUC_7   
2048                STRUC_7:   .SET   STRUC_6   
2048                STRUC_6:   .SET   STRUC_5   
2048                STRUC_5:   .SET   STRUC_4   
2048                STRUC_4:   .SET   STRUC_3   
2048                STRUC_3:   .SET   STRUC_2   
2048                STRUC_2:   .SET   STRUC_TOP   
2048                STRUC_TOP:   .SET   $   
2048                TST_TEXTM_2298S9:      
2048   31 30 30 20 63 6F 6E 73 74 20 79 0D 0A FF 0D 0A DB   "100 const y","\r\n",-1,"\r\n"   
2058                          ;*Macro unroll:  _endskip
2058                          ;*Macro unroll:  STRUC_FWD
2058                CUR_ADR:   .SET   $   
2046                          .ORG   STRUC_TOP - 2   
2046   58 20                  DW   CUR_ADR   
2058                          .ORG   CUR_ADR   
2058                          ;*Macro unroll:  STRUC_POP
2058                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2058                STRUC_TOP:   .SET   STRUC_2   
2058                STRUC_2:   .SET   STRUC_3   
2058                STRUC_3:   .SET   STRUC_4   
2058                STRUC_4:   .SET   STRUC_5   
2058                STRUC_5:   .SET   STRUC_6   
2058                STRUC_6:   .SET   STRUC_7   
2058                STRUC_7:   .SET   STRUC_8   
2058                STRUC_8:   .SET   STRUC_9   
2058                STRUC_9:   .SET   STRUC_10   
2058                STRUC_10:   .SET   STRUC_11   
2058                STRUC_11:   .SET   STRUC_12   
2058                STRUC_12:   .SET   0   
2058                          ;*Macro unroll: INTERPRET
2058   CF                     RST   $08   
2059   4E 0B                  DW   interpret   
205B   86 0E                  DW   exit_forth   
205D                          ;*Macro unroll: TEST_SET_TEXT "y"
205D   2A 45 30               LD   HL,(lineBufStart)   
2060   22 4B 30               LD   (lineBufTop),HL   
2063   22 49 30               LD   (currkey),HL   
2066   21 6F 20               LD   HL,tst_textM_2300S11   
2069   22 61 32               LD   (char_pointer),HL   
206C                          ;*Macro unroll:  _skip
206C   C3 6C 20               JP   $   
206F                          ;*Macro unroll:  STRUC_PUSH $
206F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
206F                STRUC_12:   .SET   STRUC_11   
206F                STRUC_11:   .SET   STRUC_10   
206F                STRUC_10:   .SET   STRUC_9   
206F                STRUC_9:   .SET   STRUC_8   
206F                STRUC_8:   .SET   STRUC_7   
206F                STRUC_7:   .SET   STRUC_6   
206F                STRUC_6:   .SET   STRUC_5   
206F                STRUC_5:   .SET   STRUC_4   
206F                STRUC_4:   .SET   STRUC_3   
206F                STRUC_3:   .SET   STRUC_2   
206F                STRUC_2:   .SET   STRUC_TOP   
206F                STRUC_TOP:   .SET   $   
206F                TST_TEXTM_2300S11:      
206F   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2075                          ;*Macro unroll:  _endskip
2075                          ;*Macro unroll:  STRUC_FWD
2075                CUR_ADR:   .SET   $   
206D                          .ORG   STRUC_TOP - 2   
206D   75 20                  DW   CUR_ADR   
2075                          .ORG   CUR_ADR   
2075                          ;*Macro unroll:  STRUC_POP
2075                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2075                STRUC_TOP:   .SET   STRUC_2   
2075                STRUC_2:   .SET   STRUC_3   
2075                STRUC_3:   .SET   STRUC_4   
2075                STRUC_4:   .SET   STRUC_5   
2075                STRUC_5:   .SET   STRUC_6   
2075                STRUC_6:   .SET   STRUC_7   
2075                STRUC_7:   .SET   STRUC_8   
2075                STRUC_8:   .SET   STRUC_9   
2075                STRUC_9:   .SET   STRUC_10   
2075                STRUC_10:   .SET   STRUC_11   
2075                STRUC_11:   .SET   STRUC_12   
2075                STRUC_12:   .SET   0   
2075                          ;*Macro unroll: INTERPRET
2075   CF                     RST   $08   
2076   4E 0B                  DW   interpret   
2078   86 0E                  DW   exit_forth   
207A                          ;*Macro unroll: EXPECT 100, "expect 100"
207A   CD 9D 09               CALL   printNum   
207D                          ;*Macro unroll:  loadWord H,L, B,C
207D   69                     LD   L,C   
207E   60                     LD   H,B   
207F   69                     LD   L,C   
2080                          ;*Macro unroll:  ppop0 B,C
2080   DD 2B                  DEC   IX   
2082   DD 46 00               LD   B,(IX+0)   
2085   DD 2B                  DEC   IX   
2087   DD 4E 00               LD   C,(IX+0)   
208A                          ;*Macro unroll:  CMP16 100
208A   11 64 00               LD   DE,100   
208D   B7                     OR   A   
208E   ED 52                  SBC   HL,DE   
2090                          ;*Macro unroll:  checkZeroWord H,L
2090   7D                     LD   A,L   
2091   B4                     OR   H   
2092   CA AD 20               JP   z,tf_doneM_2302S13   
2095   11 EA 0F               LD   DE,FAILED   
2098   CD 52 11               CALL   printPStr   
209B   11 A5 20               LD   DE,te_failM_2302S13   
209E   CD 52 11               CALL   printPStr   
20A1   76                     HALT      
20A2                          ;*Macro unroll:  _skip
20A2   C3 A2 20               JP   $   
20A5                          ;*Macro unroll:  STRUC_PUSH $
20A5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20A5                STRUC_12:   .SET   STRUC_11   
20A5                STRUC_11:   .SET   STRUC_10   
20A5                STRUC_10:   .SET   STRUC_9   
20A5                STRUC_9:   .SET   STRUC_8   
20A5                STRUC_8:   .SET   STRUC_7   
20A5                STRUC_7:   .SET   STRUC_6   
20A5                STRUC_6:   .SET   STRUC_5   
20A5                STRUC_5:   .SET   STRUC_4   
20A5                STRUC_4:   .SET   STRUC_3   
20A5                STRUC_3:   .SET   STRUC_2   
20A5                STRUC_2:   .SET   STRUC_TOP   
20A5                STRUC_TOP:   .SET   $   
20A5                TE_FAILM_2302S13:      
20A5   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
20AD                          ;*Macro unroll:  _endskip
20AD                          ;*Macro unroll:  STRUC_FWD
20AD                CUR_ADR:   .SET   $   
20A3                          .ORG   STRUC_TOP - 2   
20A3   AD 20                  DW   CUR_ADR   
20AD                          .ORG   CUR_ADR   
20AD                          ;*Macro unroll:  STRUC_POP
20AD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20AD                STRUC_TOP:   .SET   STRUC_2   
20AD                STRUC_2:   .SET   STRUC_3   
20AD                STRUC_3:   .SET   STRUC_4   
20AD                STRUC_4:   .SET   STRUC_5   
20AD                STRUC_5:   .SET   STRUC_6   
20AD                STRUC_6:   .SET   STRUC_7   
20AD                STRUC_7:   .SET   STRUC_8   
20AD                STRUC_8:   .SET   STRUC_9   
20AD                STRUC_9:   .SET   STRUC_10   
20AD                STRUC_10:   .SET   STRUC_11   
20AD                STRUC_11:   .SET   STRUC_12   
20AD                STRUC_12:   .SET   0   
20AD                TF_DONEM_2302S13:      
20AD                          ;*Macro unroll: TEST_SET_TEXT "100 constant y"
20AD   2A 45 30               LD   HL,(lineBufStart)   
20B0   22 4B 30               LD   (lineBufTop),HL   
20B3   22 49 30               LD   (currkey),HL   
20B6   21 BF 20               LD   HL,tst_textM_2303S15   
20B9   22 61 32               LD   (char_pointer),HL   
20BC                          ;*Macro unroll:  _skip
20BC   C3 BC 20               JP   $   
20BF                          ;*Macro unroll:  STRUC_PUSH $
20BF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20BF                STRUC_12:   .SET   STRUC_11   
20BF                STRUC_11:   .SET   STRUC_10   
20BF                STRUC_10:   .SET   STRUC_9   
20BF                STRUC_9:   .SET   STRUC_8   
20BF                STRUC_8:   .SET   STRUC_7   
20BF                STRUC_7:   .SET   STRUC_6   
20BF                STRUC_6:   .SET   STRUC_5   
20BF                STRUC_5:   .SET   STRUC_4   
20BF                STRUC_4:   .SET   STRUC_3   
20BF                STRUC_3:   .SET   STRUC_2   
20BF                STRUC_2:   .SET   STRUC_TOP   
20BF                STRUC_TOP:   .SET   $   
20BF                TST_TEXTM_2303S15:      
20BF   31 30 30 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "100 constant y","\r\n",-1,"\r\n"   
20D2                          ;*Macro unroll:  _endskip
20D2                          ;*Macro unroll:  STRUC_FWD
20D2                CUR_ADR:   .SET   $   
20BD                          .ORG   STRUC_TOP - 2   
20BD   D2 20                  DW   CUR_ADR   
20D2                          .ORG   CUR_ADR   
20D2                          ;*Macro unroll:  STRUC_POP
20D2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20D2                STRUC_TOP:   .SET   STRUC_2   
20D2                STRUC_2:   .SET   STRUC_3   
20D2                STRUC_3:   .SET   STRUC_4   
20D2                STRUC_4:   .SET   STRUC_5   
20D2                STRUC_5:   .SET   STRUC_6   
20D2                STRUC_6:   .SET   STRUC_7   
20D2                STRUC_7:   .SET   STRUC_8   
20D2                STRUC_8:   .SET   STRUC_9   
20D2                STRUC_9:   .SET   STRUC_10   
20D2                STRUC_10:   .SET   STRUC_11   
20D2                STRUC_11:   .SET   STRUC_12   
20D2                STRUC_12:   .SET   0   
20D2                          ;*Macro unroll: INTERPRET
20D2   CF                     RST   $08   
20D3   4E 0B                  DW   interpret   
20D5   86 0E                  DW   exit_forth   
20D7                          ;*Macro unroll: TEST_SET_TEXT "y"
20D7   2A 45 30               LD   HL,(lineBufStart)   
20DA   22 4B 30               LD   (lineBufTop),HL   
20DD   22 49 30               LD   (currkey),HL   
20E0   21 E9 20               LD   HL,tst_textM_2305S17   
20E3   22 61 32               LD   (char_pointer),HL   
20E6                          ;*Macro unroll:  _skip
20E6   C3 E6 20               JP   $   
20E9                          ;*Macro unroll:  STRUC_PUSH $
20E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20E9                STRUC_12:   .SET   STRUC_11   
20E9                STRUC_11:   .SET   STRUC_10   
20E9                STRUC_10:   .SET   STRUC_9   
20E9                STRUC_9:   .SET   STRUC_8   
20E9                STRUC_8:   .SET   STRUC_7   
20E9                STRUC_7:   .SET   STRUC_6   
20E9                STRUC_6:   .SET   STRUC_5   
20E9                STRUC_5:   .SET   STRUC_4   
20E9                STRUC_4:   .SET   STRUC_3   
20E9                STRUC_3:   .SET   STRUC_2   
20E9                STRUC_2:   .SET   STRUC_TOP   
20E9                STRUC_TOP:   .SET   $   
20E9                TST_TEXTM_2305S17:      
20E9   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
20EF                          ;*Macro unroll:  _endskip
20EF                          ;*Macro unroll:  STRUC_FWD
20EF                CUR_ADR:   .SET   $   
20E7                          .ORG   STRUC_TOP - 2   
20E7   EF 20                  DW   CUR_ADR   
20EF                          .ORG   CUR_ADR   
20EF                          ;*Macro unroll:  STRUC_POP
20EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20EF                STRUC_TOP:   .SET   STRUC_2   
20EF                STRUC_2:   .SET   STRUC_3   
20EF                STRUC_3:   .SET   STRUC_4   
20EF                STRUC_4:   .SET   STRUC_5   
20EF                STRUC_5:   .SET   STRUC_6   
20EF                STRUC_6:   .SET   STRUC_7   
20EF                STRUC_7:   .SET   STRUC_8   
20EF                STRUC_8:   .SET   STRUC_9   
20EF                STRUC_9:   .SET   STRUC_10   
20EF                STRUC_10:   .SET   STRUC_11   
20EF                STRUC_11:   .SET   STRUC_12   
20EF                STRUC_12:   .SET   0   
20EF                          ;*Macro unroll: INTERPRET
20EF   CF                     RST   $08   
20F0   4E 0B                  DW   interpret   
20F2   86 0E                  DW   exit_forth   
20F4                          ;*Macro unroll: EXPECT 100, "expect 100"
20F4   CD 9D 09               CALL   printNum   
20F7                          ;*Macro unroll:  loadWord H,L, B,C
20F7   69                     LD   L,C   
20F8   60                     LD   H,B   
20F9   69                     LD   L,C   
20FA                          ;*Macro unroll:  ppop0 B,C
20FA   DD 2B                  DEC   IX   
20FC   DD 46 00               LD   B,(IX+0)   
20FF   DD 2B                  DEC   IX   
2101   DD 4E 00               LD   C,(IX+0)   
2104                          ;*Macro unroll:  CMP16 100
2104   11 64 00               LD   DE,100   
2107   B7                     OR   A   
2108   ED 52                  SBC   HL,DE   
210A                          ;*Macro unroll:  checkZeroWord H,L
210A   7D                     LD   A,L   
210B   B4                     OR   H   
210C   CA 27 21               JP   z,tf_doneM_2307S19   
210F   11 EA 0F               LD   DE,FAILED   
2112   CD 52 11               CALL   printPStr   
2115   11 1F 21               LD   DE,te_failM_2307S19   
2118   CD 52 11               CALL   printPStr   
211B   76                     HALT      
211C                          ;*Macro unroll:  _skip
211C   C3 1C 21               JP   $   
211F                          ;*Macro unroll:  STRUC_PUSH $
211F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
211F                STRUC_12:   .SET   STRUC_11   
211F                STRUC_11:   .SET   STRUC_10   
211F                STRUC_10:   .SET   STRUC_9   
211F                STRUC_9:   .SET   STRUC_8   
211F                STRUC_8:   .SET   STRUC_7   
211F                STRUC_7:   .SET   STRUC_6   
211F                STRUC_6:   .SET   STRUC_5   
211F                STRUC_5:   .SET   STRUC_4   
211F                STRUC_4:   .SET   STRUC_3   
211F                STRUC_3:   .SET   STRUC_2   
211F                STRUC_2:   .SET   STRUC_TOP   
211F                STRUC_TOP:   .SET   $   
211F                TE_FAILM_2307S19:      
211F   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
2127                          ;*Macro unroll:  _endskip
2127                          ;*Macro unroll:  STRUC_FWD
2127                CUR_ADR:   .SET   $   
211D                          .ORG   STRUC_TOP - 2   
211D   27 21                  DW   CUR_ADR   
2127                          .ORG   CUR_ADR   
2127                          ;*Macro unroll:  STRUC_POP
2127                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2127                STRUC_TOP:   .SET   STRUC_2   
2127                STRUC_2:   .SET   STRUC_3   
2127                STRUC_3:   .SET   STRUC_4   
2127                STRUC_4:   .SET   STRUC_5   
2127                STRUC_5:   .SET   STRUC_6   
2127                STRUC_6:   .SET   STRUC_7   
2127                STRUC_7:   .SET   STRUC_8   
2127                STRUC_8:   .SET   STRUC_9   
2127                STRUC_9:   .SET   STRUC_10   
2127                STRUC_10:   .SET   STRUC_11   
2127                STRUC_11:   .SET   STRUC_12   
2127                STRUC_12:   .SET   0   
2127                TF_DONEM_2307S19:      
2127                          ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
2127   2A 45 30               LD   HL,(lineBufStart)   
212A   22 4B 30               LD   (lineBufTop),HL   
212D   22 49 30               LD   (currkey),HL   
2130   21 39 21               LD   HL,tst_textM_2308S21   
2133   22 61 32               LD   (char_pointer),HL   
2136                          ;*Macro unroll:  _skip
2136   C3 36 21               JP   $   
2139                          ;*Macro unroll:  STRUC_PUSH $
2139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2139                STRUC_12:   .SET   STRUC_11   
2139                STRUC_11:   .SET   STRUC_10   
2139                STRUC_10:   .SET   STRUC_9   
2139                STRUC_9:   .SET   STRUC_8   
2139                STRUC_8:   .SET   STRUC_7   
2139                STRUC_7:   .SET   STRUC_6   
2139                STRUC_6:   .SET   STRUC_5   
2139                STRUC_5:   .SET   STRUC_4   
2139                STRUC_4:   .SET   STRUC_3   
2139                STRUC_3:   .SET   STRUC_2   
2139                STRUC_2:   .SET   STRUC_TOP   
2139                STRUC_TOP:   .SET   $   
2139                TST_TEXTM_2308S21:      
2139   3A 20 78 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 31 20 2E 20 3B 0D 0A FF 0D 0A DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
2154                          ;*Macro unroll:  _endskip
2154                          ;*Macro unroll:  STRUC_FWD
2154                CUR_ADR:   .SET   $   
2137                          .ORG   STRUC_TOP - 2   
2137   54 21                  DW   CUR_ADR   
2154                          .ORG   CUR_ADR   
2154                          ;*Macro unroll:  STRUC_POP
2154                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2154                STRUC_TOP:   .SET   STRUC_2   
2154                STRUC_2:   .SET   STRUC_3   
2154                STRUC_3:   .SET   STRUC_4   
2154                STRUC_4:   .SET   STRUC_5   
2154                STRUC_5:   .SET   STRUC_6   
2154                STRUC_6:   .SET   STRUC_7   
2154                STRUC_7:   .SET   STRUC_8   
2154                STRUC_8:   .SET   STRUC_9   
2154                STRUC_9:   .SET   STRUC_10   
2154                STRUC_10:   .SET   STRUC_11   
2154                STRUC_11:   .SET   STRUC_12   
2154                STRUC_12:   .SET   0   
2154                          ;*Macro unroll: INTERPRET
2154   CF                     RST   $08   
2155   4E 0B                  DW   interpret   
2157   86 0E                  DW   exit_forth   
2159                          ;*Macro unroll: TEST_SET_TEXT "x y"
2159   2A 45 30               LD   HL,(lineBufStart)   
215C   22 4B 30               LD   (lineBufTop),HL   
215F   22 49 30               LD   (currkey),HL   
2162   21 6B 21               LD   HL,tst_textM_2310S23   
2165   22 61 32               LD   (char_pointer),HL   
2168                          ;*Macro unroll:  _skip
2168   C3 68 21               JP   $   
216B                          ;*Macro unroll:  STRUC_PUSH $
216B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
216B                STRUC_12:   .SET   STRUC_11   
216B                STRUC_11:   .SET   STRUC_10   
216B                STRUC_10:   .SET   STRUC_9   
216B                STRUC_9:   .SET   STRUC_8   
216B                STRUC_8:   .SET   STRUC_7   
216B                STRUC_7:   .SET   STRUC_6   
216B                STRUC_6:   .SET   STRUC_5   
216B                STRUC_5:   .SET   STRUC_4   
216B                STRUC_4:   .SET   STRUC_3   
216B                STRUC_3:   .SET   STRUC_2   
216B                STRUC_2:   .SET   STRUC_TOP   
216B                STRUC_TOP:   .SET   $   
216B                TST_TEXTM_2310S23:      
216B   78 20 79 0D 0A FF 0D 0A DB   "x y","\r\n",-1,"\r\n"   
2173                          ;*Macro unroll:  _endskip
2173                          ;*Macro unroll:  STRUC_FWD
2173                CUR_ADR:   .SET   $   
2169                          .ORG   STRUC_TOP - 2   
2169   73 21                  DW   CUR_ADR   
2173                          .ORG   CUR_ADR   
2173                          ;*Macro unroll:  STRUC_POP
2173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2173                STRUC_TOP:   .SET   STRUC_2   
2173                STRUC_2:   .SET   STRUC_3   
2173                STRUC_3:   .SET   STRUC_4   
2173                STRUC_4:   .SET   STRUC_5   
2173                STRUC_5:   .SET   STRUC_6   
2173                STRUC_6:   .SET   STRUC_7   
2173                STRUC_7:   .SET   STRUC_8   
2173                STRUC_8:   .SET   STRUC_9   
2173                STRUC_9:   .SET   STRUC_10   
2173                STRUC_10:   .SET   STRUC_11   
2173                STRUC_11:   .SET   STRUC_12   
2173                STRUC_12:   .SET   0   
2173                          ;*Macro unroll: INTERPRET
2173   CF                     RST   $08   
2174   4E 0B                  DW   interpret   
2176   86 0E                  DW   exit_forth   
2178                          ;*Macro unroll: TEST_SET_TEXT "y"
2178   2A 45 30               LD   HL,(lineBufStart)   
217B   22 4B 30               LD   (lineBufTop),HL   
217E   22 49 30               LD   (currkey),HL   
2181   21 8A 21               LD   HL,tst_textM_2312S25   
2184   22 61 32               LD   (char_pointer),HL   
2187                          ;*Macro unroll:  _skip
2187   C3 87 21               JP   $   
218A                          ;*Macro unroll:  STRUC_PUSH $
218A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
218A                STRUC_12:   .SET   STRUC_11   
218A                STRUC_11:   .SET   STRUC_10   
218A                STRUC_10:   .SET   STRUC_9   
218A                STRUC_9:   .SET   STRUC_8   
218A                STRUC_8:   .SET   STRUC_7   
218A                STRUC_7:   .SET   STRUC_6   
218A                STRUC_6:   .SET   STRUC_5   
218A                STRUC_5:   .SET   STRUC_4   
218A                STRUC_4:   .SET   STRUC_3   
218A                STRUC_3:   .SET   STRUC_2   
218A                STRUC_2:   .SET   STRUC_TOP   
218A                STRUC_TOP:   .SET   $   
218A                TST_TEXTM_2312S25:      
218A   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2190                          ;*Macro unroll:  _endskip
2190                          ;*Macro unroll:  STRUC_FWD
2190                CUR_ADR:   .SET   $   
2188                          .ORG   STRUC_TOP - 2   
2188   90 21                  DW   CUR_ADR   
2190                          .ORG   CUR_ADR   
2190                          ;*Macro unroll:  STRUC_POP
2190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2190                STRUC_TOP:   .SET   STRUC_2   
2190                STRUC_2:   .SET   STRUC_3   
2190                STRUC_3:   .SET   STRUC_4   
2190                STRUC_4:   .SET   STRUC_5   
2190                STRUC_5:   .SET   STRUC_6   
2190                STRUC_6:   .SET   STRUC_7   
2190                STRUC_7:   .SET   STRUC_8   
2190                STRUC_8:   .SET   STRUC_9   
2190                STRUC_9:   .SET   STRUC_10   
2190                STRUC_10:   .SET   STRUC_11   
2190                STRUC_11:   .SET   STRUC_12   
2190                STRUC_12:   .SET   0   
2190                          ;*Macro unroll: INTERPRET
2190   CF                     RST   $08   
2191   4E 0B                  DW   interpret   
2193   86 0E                  DW   exit_forth   
2195                          ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
2195   2A 45 30               LD   HL,(lineBufStart)   
2198   22 4B 30               LD   (lineBufTop),HL   
219B   22 49 30               LD   (currkey),HL   
219E   21 A7 21               LD   HL,tst_textM_2314S28   
21A1   22 61 32               LD   (char_pointer),HL   
21A4                          ;*Macro unroll:  _skip
21A4   C3 A4 21               JP   $   
21A7                          ;*Macro unroll:  STRUC_PUSH $
21A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21A7                STRUC_12:   .SET   STRUC_11   
21A7                STRUC_11:   .SET   STRUC_10   
21A7                STRUC_10:   .SET   STRUC_9   
21A7                STRUC_9:   .SET   STRUC_8   
21A7                STRUC_8:   .SET   STRUC_7   
21A7                STRUC_7:   .SET   STRUC_6   
21A7                STRUC_6:   .SET   STRUC_5   
21A7                STRUC_5:   .SET   STRUC_4   
21A7                STRUC_4:   .SET   STRUC_3   
21A7                STRUC_3:   .SET   STRUC_2   
21A7                STRUC_2:   .SET   STRUC_TOP   
21A7                STRUC_TOP:   .SET   $   
21A7                TST_TEXTM_2314S28:      
21A7   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 2C 20 3B 0D 0A FF 0D 0A DB   ": const create does> , ;","\r\n",-1,"\r\n"   
21C4                          ;*Macro unroll:  _endskip
21C4                          ;*Macro unroll:  STRUC_FWD
21C4                CUR_ADR:   .SET   $   
21A5                          .ORG   STRUC_TOP - 2   
21A5   C4 21                  DW   CUR_ADR   
21C4                          .ORG   CUR_ADR   
21C4                          ;*Macro unroll:  STRUC_POP
21C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21C4                STRUC_TOP:   .SET   STRUC_2   
21C4                STRUC_2:   .SET   STRUC_3   
21C4                STRUC_3:   .SET   STRUC_4   
21C4                STRUC_4:   .SET   STRUC_5   
21C4                STRUC_5:   .SET   STRUC_6   
21C4                STRUC_6:   .SET   STRUC_7   
21C4                STRUC_7:   .SET   STRUC_8   
21C4                STRUC_8:   .SET   STRUC_9   
21C4                STRUC_9:   .SET   STRUC_10   
21C4                STRUC_10:   .SET   STRUC_11   
21C4                STRUC_11:   .SET   STRUC_12   
21C4                STRUC_12:   .SET   0   
21C4                          ;*Macro unroll: INTERPRET
21C4   CF                     RST   $08   
21C5   4E 0B                  DW   interpret   
21C7   86 0E                  DW   exit_forth   
21C9                          ;*Macro unroll: TEST_SET_TEXT "23 const x"
21C9   2A 45 30               LD   HL,(lineBufStart)   
21CC   22 4B 30               LD   (lineBufTop),HL   
21CF   22 49 30               LD   (currkey),HL   
21D2   21 DB 21               LD   HL,tst_textM_2316S30   
21D5   22 61 32               LD   (char_pointer),HL   
21D8                          ;*Macro unroll:  _skip
21D8   C3 D8 21               JP   $   
21DB                          ;*Macro unroll:  STRUC_PUSH $
21DB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21DB                STRUC_12:   .SET   STRUC_11   
21DB                STRUC_11:   .SET   STRUC_10   
21DB                STRUC_10:   .SET   STRUC_9   
21DB                STRUC_9:   .SET   STRUC_8   
21DB                STRUC_8:   .SET   STRUC_7   
21DB                STRUC_7:   .SET   STRUC_6   
21DB                STRUC_6:   .SET   STRUC_5   
21DB                STRUC_5:   .SET   STRUC_4   
21DB                STRUC_4:   .SET   STRUC_3   
21DB                STRUC_3:   .SET   STRUC_2   
21DB                STRUC_2:   .SET   STRUC_TOP   
21DB                STRUC_TOP:   .SET   $   
21DB                TST_TEXTM_2316S30:      
21DB   32 33 20 63 6F 6E 73 74 20 78 0D 0A FF 0D 0A DB   "23 const x","\r\n",-1,"\r\n"   
21EA                          ;*Macro unroll:  _endskip
21EA                          ;*Macro unroll:  STRUC_FWD
21EA                CUR_ADR:   .SET   $   
21D9                          .ORG   STRUC_TOP - 2   
21D9   EA 21                  DW   CUR_ADR   
21EA                          .ORG   CUR_ADR   
21EA                          ;*Macro unroll:  STRUC_POP
21EA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21EA                STRUC_TOP:   .SET   STRUC_2   
21EA                STRUC_2:   .SET   STRUC_3   
21EA                STRUC_3:   .SET   STRUC_4   
21EA                STRUC_4:   .SET   STRUC_5   
21EA                STRUC_5:   .SET   STRUC_6   
21EA                STRUC_6:   .SET   STRUC_7   
21EA                STRUC_7:   .SET   STRUC_8   
21EA                STRUC_8:   .SET   STRUC_9   
21EA                STRUC_9:   .SET   STRUC_10   
21EA                STRUC_10:   .SET   STRUC_11   
21EA                STRUC_11:   .SET   STRUC_12   
21EA                STRUC_12:   .SET   0   
21EA                          ;*Macro unroll: INTERPRET
21EA   CF                     RST   $08   
21EB   4E 0B                  DW   interpret   
21ED   86 0E                  DW   exit_forth   
21EF                          ;*Macro unroll: TEST_SET_TEXT "x ."
21EF   2A 45 30               LD   HL,(lineBufStart)   
21F2   22 4B 30               LD   (lineBufTop),HL   
21F5   22 49 30               LD   (currkey),HL   
21F8   21 01 22               LD   HL,tst_textM_2318S32   
21FB   22 61 32               LD   (char_pointer),HL   
21FE                          ;*Macro unroll:  _skip
21FE   C3 FE 21               JP   $   
2201                          ;*Macro unroll:  STRUC_PUSH $
2201                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2201                STRUC_12:   .SET   STRUC_11   
2201                STRUC_11:   .SET   STRUC_10   
2201                STRUC_10:   .SET   STRUC_9   
2201                STRUC_9:   .SET   STRUC_8   
2201                STRUC_8:   .SET   STRUC_7   
2201                STRUC_7:   .SET   STRUC_6   
2201                STRUC_6:   .SET   STRUC_5   
2201                STRUC_5:   .SET   STRUC_4   
2201                STRUC_4:   .SET   STRUC_3   
2201                STRUC_3:   .SET   STRUC_2   
2201                STRUC_2:   .SET   STRUC_TOP   
2201                STRUC_TOP:   .SET   $   
2201                TST_TEXTM_2318S32:      
2201   78 20 2E 0D 0A FF 0D 0A DB   "x .","\r\n",-1,"\r\n"   
2209                          ;*Macro unroll:  _endskip
2209                          ;*Macro unroll:  STRUC_FWD
2209                CUR_ADR:   .SET   $   
21FF                          .ORG   STRUC_TOP - 2   
21FF   09 22                  DW   CUR_ADR   
2209                          .ORG   CUR_ADR   
2209                          ;*Macro unroll:  STRUC_POP
2209                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2209                STRUC_TOP:   .SET   STRUC_2   
2209                STRUC_2:   .SET   STRUC_3   
2209                STRUC_3:   .SET   STRUC_4   
2209                STRUC_4:   .SET   STRUC_5   
2209                STRUC_5:   .SET   STRUC_6   
2209                STRUC_6:   .SET   STRUC_7   
2209                STRUC_7:   .SET   STRUC_8   
2209                STRUC_8:   .SET   STRUC_9   
2209                STRUC_9:   .SET   STRUC_10   
2209                STRUC_10:   .SET   STRUC_11   
2209                STRUC_11:   .SET   STRUC_12   
2209                STRUC_12:   .SET   0   
2209                          ;*Macro unroll: INTERPRET
2209   CF                     RST   $08   
220A   4E 0B                  DW   interpret   
220C   86 0E                  DW   exit_forth   
220E                          ;*Macro unroll: TEST_SET_TEXT "23 constant y"
220E   2A 45 30               LD   HL,(lineBufStart)   
2211   22 4B 30               LD   (lineBufTop),HL   
2214   22 49 30               LD   (currkey),HL   
2217   21 20 22               LD   HL,tst_textM_2320S35   
221A   22 61 32               LD   (char_pointer),HL   
221D                          ;*Macro unroll:  _skip
221D   C3 1D 22               JP   $   
2220                          ;*Macro unroll:  STRUC_PUSH $
2220                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2220                STRUC_12:   .SET   STRUC_11   
2220                STRUC_11:   .SET   STRUC_10   
2220                STRUC_10:   .SET   STRUC_9   
2220                STRUC_9:   .SET   STRUC_8   
2220                STRUC_8:   .SET   STRUC_7   
2220                STRUC_7:   .SET   STRUC_6   
2220                STRUC_6:   .SET   STRUC_5   
2220                STRUC_5:   .SET   STRUC_4   
2220                STRUC_4:   .SET   STRUC_3   
2220                STRUC_3:   .SET   STRUC_2   
2220                STRUC_2:   .SET   STRUC_TOP   
2220                STRUC_TOP:   .SET   $   
2220                TST_TEXTM_2320S35:      
2220   32 33 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "23 constant y","\r\n",-1,"\r\n"   
2232                          ;*Macro unroll:  _endskip
2232                          ;*Macro unroll:  STRUC_FWD
2232                CUR_ADR:   .SET   $   
221E                          .ORG   STRUC_TOP - 2   
221E   32 22                  DW   CUR_ADR   
2232                          .ORG   CUR_ADR   
2232                          ;*Macro unroll:  STRUC_POP
2232                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2232                STRUC_TOP:   .SET   STRUC_2   
2232                STRUC_2:   .SET   STRUC_3   
2232                STRUC_3:   .SET   STRUC_4   
2232                STRUC_4:   .SET   STRUC_5   
2232                STRUC_5:   .SET   STRUC_6   
2232                STRUC_6:   .SET   STRUC_7   
2232                STRUC_7:   .SET   STRUC_8   
2232                STRUC_8:   .SET   STRUC_9   
2232                STRUC_9:   .SET   STRUC_10   
2232                STRUC_10:   .SET   STRUC_11   
2232                STRUC_11:   .SET   STRUC_12   
2232                STRUC_12:   .SET   0   
2232                          ;*Macro unroll: INTERPRET
2232   CF                     RST   $08   
2233   4E 0B                  DW   interpret   
2235   86 0E                  DW   exit_forth   
2237                          ;*Macro unroll: TEST_SET_TEXT "y"
2237   2A 45 30               LD   HL,(lineBufStart)   
223A   22 4B 30               LD   (lineBufTop),HL   
223D   22 49 30               LD   (currkey),HL   
2240   21 49 22               LD   HL,tst_textM_2322S37   
2243   22 61 32               LD   (char_pointer),HL   
2246                          ;*Macro unroll:  _skip
2246   C3 46 22               JP   $   
2249                          ;*Macro unroll:  STRUC_PUSH $
2249                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2249                STRUC_12:   .SET   STRUC_11   
2249                STRUC_11:   .SET   STRUC_10   
2249                STRUC_10:   .SET   STRUC_9   
2249                STRUC_9:   .SET   STRUC_8   
2249                STRUC_8:   .SET   STRUC_7   
2249                STRUC_7:   .SET   STRUC_6   
2249                STRUC_6:   .SET   STRUC_5   
2249                STRUC_5:   .SET   STRUC_4   
2249                STRUC_4:   .SET   STRUC_3   
2249                STRUC_3:   .SET   STRUC_2   
2249                STRUC_2:   .SET   STRUC_TOP   
2249                STRUC_TOP:   .SET   $   
2249                TST_TEXTM_2322S37:      
2249   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
224F                          ;*Macro unroll:  _endskip
224F                          ;*Macro unroll:  STRUC_FWD
224F                CUR_ADR:   .SET   $   
2247                          .ORG   STRUC_TOP - 2   
2247   4F 22                  DW   CUR_ADR   
224F                          .ORG   CUR_ADR   
224F                          ;*Macro unroll:  STRUC_POP
224F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
224F                STRUC_TOP:   .SET   STRUC_2   
224F                STRUC_2:   .SET   STRUC_3   
224F                STRUC_3:   .SET   STRUC_4   
224F                STRUC_4:   .SET   STRUC_5   
224F                STRUC_5:   .SET   STRUC_6   
224F                STRUC_6:   .SET   STRUC_7   
224F                STRUC_7:   .SET   STRUC_8   
224F                STRUC_8:   .SET   STRUC_9   
224F                STRUC_9:   .SET   STRUC_10   
224F                STRUC_10:   .SET   STRUC_11   
224F                STRUC_11:   .SET   STRUC_12   
224F                STRUC_12:   .SET   0   
224F                          ;*Macro unroll: INTERPRET
224F   CF                     RST   $08   
2250   4E 0B                  DW   interpret   
2252   86 0E                  DW   exit_forth   
2254                          ;*Macro unroll: EXPECT 23, "expect 23"
2254   CD 9D 09               CALL   printNum   
2257                          ;*Macro unroll:  loadWord H,L, B,C
2257   69                     LD   L,C   
2258   60                     LD   H,B   
2259   69                     LD   L,C   
225A                          ;*Macro unroll:  ppop0 B,C
225A   DD 2B                  DEC   IX   
225C   DD 46 00               LD   B,(IX+0)   
225F   DD 2B                  DEC   IX   
2261   DD 4E 00               LD   C,(IX+0)   
2264                          ;*Macro unroll:  CMP16 23
2264   11 17 00               LD   DE,23   
2267   B7                     OR   A   
2268   ED 52                  SBC   HL,DE   
226A                          ;*Macro unroll:  checkZeroWord H,L
226A   7D                     LD   A,L   
226B   B4                     OR   H   
226C   CA 85 22               JP   z,tf_doneM_2324S39   
226F   11 EA 0F               LD   DE,FAILED   
2272   CD 52 11               CALL   printPStr   
2275   11 7F 22               LD   DE,te_failM_2324S39   
2278   CD 52 11               CALL   printPStr   
227B   76                     HALT      
227C                          ;*Macro unroll:  _skip
227C   C3 7C 22               JP   $   
227F                          ;*Macro unroll:  STRUC_PUSH $
227F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
227F                STRUC_12:   .SET   STRUC_11   
227F                STRUC_11:   .SET   STRUC_10   
227F                STRUC_10:   .SET   STRUC_9   
227F                STRUC_9:   .SET   STRUC_8   
227F                STRUC_8:   .SET   STRUC_7   
227F                STRUC_7:   .SET   STRUC_6   
227F                STRUC_6:   .SET   STRUC_5   
227F                STRUC_5:   .SET   STRUC_4   
227F                STRUC_4:   .SET   STRUC_3   
227F                STRUC_3:   .SET   STRUC_2   
227F                STRUC_2:   .SET   STRUC_TOP   
227F                STRUC_TOP:   .SET   $   
227F                TE_FAILM_2324S39:      
227F   05 32 33 20 32 33      .PSTR   "23 23"   
2285                          ;*Macro unroll:  _endskip
2285                          ;*Macro unroll:  STRUC_FWD
2285                CUR_ADR:   .SET   $   
227D                          .ORG   STRUC_TOP - 2   
227D   85 22                  DW   CUR_ADR   
2285                          .ORG   CUR_ADR   
2285                          ;*Macro unroll:  STRUC_POP
2285                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2285                STRUC_TOP:   .SET   STRUC_2   
2285                STRUC_2:   .SET   STRUC_3   
2285                STRUC_3:   .SET   STRUC_4   
2285                STRUC_4:   .SET   STRUC_5   
2285                STRUC_5:   .SET   STRUC_6   
2285                STRUC_6:   .SET   STRUC_7   
2285                STRUC_7:   .SET   STRUC_8   
2285                STRUC_8:   .SET   STRUC_9   
2285                STRUC_9:   .SET   STRUC_10   
2285                STRUC_10:   .SET   STRUC_11   
2285                STRUC_11:   .SET   STRUC_12   
2285                STRUC_12:   .SET   0   
2285                TF_DONEM_2324S39:      
2285                          ;*Macro unroll: ppushValue 1
2285                          ;*Macro unroll:  ppush0 B,C
2285   DD 71 00               LD   (IX+0),C   
2288   DD 23                  INC   IX   
228A   DD 70 00               LD   (IX+0),B   
228D   DD 23                  INC   IX   
228F   01 01 00               LD   BC,1   
2292                          ;*Macro unroll: TEST_SET_TEXT "dup"
2292   2A 45 30               LD   HL,(lineBufStart)   
2295   22 4B 30               LD   (lineBufTop),HL   
2298   22 49 30               LD   (currkey),HL   
229B   21 A4 22               LD   HL,tst_textM_2326S42   
229E   22 61 32               LD   (char_pointer),HL   
22A1                          ;*Macro unroll:  _skip
22A1   C3 A1 22               JP   $   
22A4                          ;*Macro unroll:  STRUC_PUSH $
22A4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22A4                STRUC_12:   .SET   STRUC_11   
22A4                STRUC_11:   .SET   STRUC_10   
22A4                STRUC_10:   .SET   STRUC_9   
22A4                STRUC_9:   .SET   STRUC_8   
22A4                STRUC_8:   .SET   STRUC_7   
22A4                STRUC_7:   .SET   STRUC_6   
22A4                STRUC_6:   .SET   STRUC_5   
22A4                STRUC_5:   .SET   STRUC_4   
22A4                STRUC_4:   .SET   STRUC_3   
22A4                STRUC_3:   .SET   STRUC_2   
22A4                STRUC_2:   .SET   STRUC_TOP   
22A4                STRUC_TOP:   .SET   $   
22A4                TST_TEXTM_2326S42:      
22A4   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
22AC                          ;*Macro unroll:  _endskip
22AC                          ;*Macro unroll:  STRUC_FWD
22AC                CUR_ADR:   .SET   $   
22A2                          .ORG   STRUC_TOP - 2   
22A2   AC 22                  DW   CUR_ADR   
22AC                          .ORG   CUR_ADR   
22AC                          ;*Macro unroll:  STRUC_POP
22AC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22AC                STRUC_TOP:   .SET   STRUC_2   
22AC                STRUC_2:   .SET   STRUC_3   
22AC                STRUC_3:   .SET   STRUC_4   
22AC                STRUC_4:   .SET   STRUC_5   
22AC                STRUC_5:   .SET   STRUC_6   
22AC                STRUC_6:   .SET   STRUC_7   
22AC                STRUC_7:   .SET   STRUC_8   
22AC                STRUC_8:   .SET   STRUC_9   
22AC                STRUC_9:   .SET   STRUC_10   
22AC                STRUC_10:   .SET   STRUC_11   
22AC                STRUC_11:   .SET   STRUC_12   
22AC                STRUC_12:   .SET   0   
22AC                          ;*Macro unroll: INTERPRET
22AC   CF                     RST   $08   
22AD   4E 0B                  DW   interpret   
22AF   86 0E                  DW   exit_forth   
22B1                          ;*Macro unroll: EXPECT 1, "1 interpret dup"
22B1   CD 9D 09               CALL   printNum   
22B4                          ;*Macro unroll:  loadWord H,L, B,C
22B4   69                     LD   L,C   
22B5   60                     LD   H,B   
22B6   69                     LD   L,C   
22B7                          ;*Macro unroll:  ppop0 B,C
22B7   DD 2B                  DEC   IX   
22B9   DD 46 00               LD   B,(IX+0)   
22BC   DD 2B                  DEC   IX   
22BE   DD 4E 00               LD   C,(IX+0)   
22C1                          ;*Macro unroll:  CMP16 1
22C1   11 01 00               LD   DE,1   
22C4   B7                     OR   A   
22C5   ED 52                  SBC   HL,DE   
22C7                          ;*Macro unroll:  checkZeroWord H,L
22C7   7D                     LD   A,L   
22C8   B4                     OR   H   
22C9   CA EC 22               JP   z,tf_doneM_2328S44   
22CC   11 EA 0F               LD   DE,FAILED   
22CF   CD 52 11               CALL   printPStr   
22D2   11 DC 22               LD   DE,te_failM_2328S44   
22D5   CD 52 11               CALL   printPStr   
22D8   76                     HALT      
22D9                          ;*Macro unroll:  _skip
22D9   C3 D9 22               JP   $   
22DC                          ;*Macro unroll:  STRUC_PUSH $
22DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22DC                STRUC_12:   .SET   STRUC_11   
22DC                STRUC_11:   .SET   STRUC_10   
22DC                STRUC_10:   .SET   STRUC_9   
22DC                STRUC_9:   .SET   STRUC_8   
22DC                STRUC_8:   .SET   STRUC_7   
22DC                STRUC_7:   .SET   STRUC_6   
22DC                STRUC_6:   .SET   STRUC_5   
22DC                STRUC_5:   .SET   STRUC_4   
22DC                STRUC_4:   .SET   STRUC_3   
22DC                STRUC_3:   .SET   STRUC_2   
22DC                STRUC_2:   .SET   STRUC_TOP   
22DC                STRUC_TOP:   .SET   $   
22DC                TE_FAILM_2328S44:      
22DC   0F 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 .PSTR   "1 interpret dup"   
22EC                          ;*Macro unroll:  _endskip
22EC                          ;*Macro unroll:  STRUC_FWD
22EC                CUR_ADR:   .SET   $   
22DA                          .ORG   STRUC_TOP - 2   
22DA   EC 22                  DW   CUR_ADR   
22EC                          .ORG   CUR_ADR   
22EC                          ;*Macro unroll:  STRUC_POP
22EC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22EC                STRUC_TOP:   .SET   STRUC_2   
22EC                STRUC_2:   .SET   STRUC_3   
22EC                STRUC_3:   .SET   STRUC_4   
22EC                STRUC_4:   .SET   STRUC_5   
22EC                STRUC_5:   .SET   STRUC_6   
22EC                STRUC_6:   .SET   STRUC_7   
22EC                STRUC_7:   .SET   STRUC_8   
22EC                STRUC_8:   .SET   STRUC_9   
22EC                STRUC_9:   .SET   STRUC_10   
22EC                STRUC_10:   .SET   STRUC_11   
22EC                STRUC_11:   .SET   STRUC_12   
22EC                STRUC_12:   .SET   0   
22EC                TF_DONEM_2328S44:      
22EC                          ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
22EC   CD 9D 09               CALL   printNum   
22EF                          ;*Macro unroll:  loadWord H,L, B,C
22EF   69                     LD   L,C   
22F0   60                     LD   H,B   
22F1   69                     LD   L,C   
22F2                          ;*Macro unroll:  ppop0 B,C
22F2   DD 2B                  DEC   IX   
22F4   DD 46 00               LD   B,(IX+0)   
22F7   DD 2B                  DEC   IX   
22F9   DD 4E 00               LD   C,(IX+0)   
22FC                          ;*Macro unroll:  CMP16 1
22FC   11 01 00               LD   DE,1   
22FF   B7                     OR   A   
2300   ED 52                  SBC   HL,DE   
2302                          ;*Macro unroll:  checkZeroWord H,L
2302   7D                     LD   A,L   
2303   B4                     OR   H   
2304   CA 29 23               JP   z,tf_doneM_2329S45   
2307   11 EA 0F               LD   DE,FAILED   
230A   CD 52 11               CALL   printPStr   
230D   11 17 23               LD   DE,te_failM_2329S45   
2310   CD 52 11               CALL   printPStr   
2313   76                     HALT      
2314                          ;*Macro unroll:  _skip
2314   C3 14 23               JP   $   
2317                          ;*Macro unroll:  STRUC_PUSH $
2317                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2317                STRUC_12:   .SET   STRUC_11   
2317                STRUC_11:   .SET   STRUC_10   
2317                STRUC_10:   .SET   STRUC_9   
2317                STRUC_9:   .SET   STRUC_8   
2317                STRUC_8:   .SET   STRUC_7   
2317                STRUC_7:   .SET   STRUC_6   
2317                STRUC_6:   .SET   STRUC_5   
2317                STRUC_5:   .SET   STRUC_4   
2317                STRUC_4:   .SET   STRUC_3   
2317                STRUC_3:   .SET   STRUC_2   
2317                STRUC_2:   .SET   STRUC_TOP   
2317                STRUC_TOP:   .SET   $   
2317                TE_FAILM_2329S45:      
2317   11 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 20 32 .PSTR   "1 interpret dup 2"   
2329                          ;*Macro unroll:  _endskip
2329                          ;*Macro unroll:  STRUC_FWD
2329                CUR_ADR:   .SET   $   
2315                          .ORG   STRUC_TOP - 2   
2315   29 23                  DW   CUR_ADR   
2329                          .ORG   CUR_ADR   
2329                          ;*Macro unroll:  STRUC_POP
2329                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2329                STRUC_TOP:   .SET   STRUC_2   
2329                STRUC_2:   .SET   STRUC_3   
2329                STRUC_3:   .SET   STRUC_4   
2329                STRUC_4:   .SET   STRUC_5   
2329                STRUC_5:   .SET   STRUC_6   
2329                STRUC_6:   .SET   STRUC_7   
2329                STRUC_7:   .SET   STRUC_8   
2329                STRUC_8:   .SET   STRUC_9   
2329                STRUC_9:   .SET   STRUC_10   
2329                STRUC_10:   .SET   STRUC_11   
2329                STRUC_11:   .SET   STRUC_12   
2329                STRUC_12:   .SET   0   
2329                TF_DONEM_2329S45:      
2329                          ;*Macro unroll: TEST_SET_TEXT "123"
2329   2A 45 30               LD   HL,(lineBufStart)   
232C   22 4B 30               LD   (lineBufTop),HL   
232F   22 49 30               LD   (currkey),HL   
2332   21 3B 23               LD   HL,tst_textM_2330S47   
2335   22 61 32               LD   (char_pointer),HL   
2338                          ;*Macro unroll:  _skip
2338   C3 38 23               JP   $   
233B                          ;*Macro unroll:  STRUC_PUSH $
233B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
233B                STRUC_12:   .SET   STRUC_11   
233B                STRUC_11:   .SET   STRUC_10   
233B                STRUC_10:   .SET   STRUC_9   
233B                STRUC_9:   .SET   STRUC_8   
233B                STRUC_8:   .SET   STRUC_7   
233B                STRUC_7:   .SET   STRUC_6   
233B                STRUC_6:   .SET   STRUC_5   
233B                STRUC_5:   .SET   STRUC_4   
233B                STRUC_4:   .SET   STRUC_3   
233B                STRUC_3:   .SET   STRUC_2   
233B                STRUC_2:   .SET   STRUC_TOP   
233B                STRUC_TOP:   .SET   $   
233B                TST_TEXTM_2330S47:      
233B   31 32 33 0D 0A FF 0D 0A DB   "123","\r\n",-1,"\r\n"   
2343                          ;*Macro unroll:  _endskip
2343                          ;*Macro unroll:  STRUC_FWD
2343                CUR_ADR:   .SET   $   
2339                          .ORG   STRUC_TOP - 2   
2339   43 23                  DW   CUR_ADR   
2343                          .ORG   CUR_ADR   
2343                          ;*Macro unroll:  STRUC_POP
2343                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2343                STRUC_TOP:   .SET   STRUC_2   
2343                STRUC_2:   .SET   STRUC_3   
2343                STRUC_3:   .SET   STRUC_4   
2343                STRUC_4:   .SET   STRUC_5   
2343                STRUC_5:   .SET   STRUC_6   
2343                STRUC_6:   .SET   STRUC_7   
2343                STRUC_7:   .SET   STRUC_8   
2343                STRUC_8:   .SET   STRUC_9   
2343                STRUC_9:   .SET   STRUC_10   
2343                STRUC_10:   .SET   STRUC_11   
2343                STRUC_11:   .SET   STRUC_12   
2343                STRUC_12:   .SET   0   
2343                          ;*Macro unroll: INTERPRET
2343   CF                     RST   $08   
2344   4E 0B                  DW   interpret   
2346   86 0E                  DW   exit_forth   
2348                          ;*Macro unroll: EXPECT 123, "interpret 123"
2348   CD 9D 09               CALL   printNum   
234B                          ;*Macro unroll:  loadWord H,L, B,C
234B   69                     LD   L,C   
234C   60                     LD   H,B   
234D   69                     LD   L,C   
234E                          ;*Macro unroll:  ppop0 B,C
234E   DD 2B                  DEC   IX   
2350   DD 46 00               LD   B,(IX+0)   
2353   DD 2B                  DEC   IX   
2355   DD 4E 00               LD   C,(IX+0)   
2358                          ;*Macro unroll:  CMP16 123
2358   11 7B 00               LD   DE,123   
235B   B7                     OR   A   
235C   ED 52                  SBC   HL,DE   
235E                          ;*Macro unroll:  checkZeroWord H,L
235E   7D                     LD   A,L   
235F   B4                     OR   H   
2360   CA 81 23               JP   z,tf_doneM_2332S49   
2363   11 EA 0F               LD   DE,FAILED   
2366   CD 52 11               CALL   printPStr   
2369   11 73 23               LD   DE,te_failM_2332S49   
236C   CD 52 11               CALL   printPStr   
236F   76                     HALT      
2370                          ;*Macro unroll:  _skip
2370   C3 70 23               JP   $   
2373                          ;*Macro unroll:  STRUC_PUSH $
2373                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2373                STRUC_12:   .SET   STRUC_11   
2373                STRUC_11:   .SET   STRUC_10   
2373                STRUC_10:   .SET   STRUC_9   
2373                STRUC_9:   .SET   STRUC_8   
2373                STRUC_8:   .SET   STRUC_7   
2373                STRUC_7:   .SET   STRUC_6   
2373                STRUC_6:   .SET   STRUC_5   
2373                STRUC_5:   .SET   STRUC_4   
2373                STRUC_4:   .SET   STRUC_3   
2373                STRUC_3:   .SET   STRUC_2   
2373                STRUC_2:   .SET   STRUC_TOP   
2373                STRUC_TOP:   .SET   $   
2373                TE_FAILM_2332S49:      
2373   0D 69 6E 74 65 72 70 72 65 74 20 31 32 33 .PSTR   "interpret 123"   
2381                          ;*Macro unroll:  _endskip
2381                          ;*Macro unroll:  STRUC_FWD
2381                CUR_ADR:   .SET   $   
2371                          .ORG   STRUC_TOP - 2   
2371   81 23                  DW   CUR_ADR   
2381                          .ORG   CUR_ADR   
2381                          ;*Macro unroll:  STRUC_POP
2381                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2381                STRUC_TOP:   .SET   STRUC_2   
2381                STRUC_2:   .SET   STRUC_3   
2381                STRUC_3:   .SET   STRUC_4   
2381                STRUC_4:   .SET   STRUC_5   
2381                STRUC_5:   .SET   STRUC_6   
2381                STRUC_6:   .SET   STRUC_7   
2381                STRUC_7:   .SET   STRUC_8   
2381                STRUC_8:   .SET   STRUC_9   
2381                STRUC_9:   .SET   STRUC_10   
2381                STRUC_10:   .SET   STRUC_11   
2381                STRUC_11:   .SET   STRUC_12   
2381                STRUC_12:   .SET   0   
2381                TF_DONEM_2332S49:      
2381                          ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
2381   2A 45 30               LD   HL,(lineBufStart)   
2384   22 4B 30               LD   (lineBufTop),HL   
2387   22 49 30               LD   (currkey),HL   
238A   21 93 23               LD   HL,tst_textM_2333S51   
238D   22 61 32               LD   (char_pointer),HL   
2390                          ;*Macro unroll:  _skip
2390   C3 90 23               JP   $   
2393                          ;*Macro unroll:  STRUC_PUSH $
2393                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2393                STRUC_12:   .SET   STRUC_11   
2393                STRUC_11:   .SET   STRUC_10   
2393                STRUC_10:   .SET   STRUC_9   
2393                STRUC_9:   .SET   STRUC_8   
2393                STRUC_8:   .SET   STRUC_7   
2393                STRUC_7:   .SET   STRUC_6   
2393                STRUC_6:   .SET   STRUC_5   
2393                STRUC_5:   .SET   STRUC_4   
2393                STRUC_4:   .SET   STRUC_3   
2393                STRUC_3:   .SET   STRUC_2   
2393                STRUC_2:   .SET   STRUC_TOP   
2393                STRUC_TOP:   .SET   $   
2393                TST_TEXTM_2333S51:      
2393   31 32 33 20 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 0D 0A FF 0D 0A DB   "123 constant x123","\r\n",-1,"\r\n"   
23A9                          ;*Macro unroll:  _endskip
23A9                          ;*Macro unroll:  STRUC_FWD
23A9                CUR_ADR:   .SET   $   
2391                          .ORG   STRUC_TOP - 2   
2391   A9 23                  DW   CUR_ADR   
23A9                          .ORG   CUR_ADR   
23A9                          ;*Macro unroll:  STRUC_POP
23A9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23A9                STRUC_TOP:   .SET   STRUC_2   
23A9                STRUC_2:   .SET   STRUC_3   
23A9                STRUC_3:   .SET   STRUC_4   
23A9                STRUC_4:   .SET   STRUC_5   
23A9                STRUC_5:   .SET   STRUC_6   
23A9                STRUC_6:   .SET   STRUC_7   
23A9                STRUC_7:   .SET   STRUC_8   
23A9                STRUC_8:   .SET   STRUC_9   
23A9                STRUC_9:   .SET   STRUC_10   
23A9                STRUC_10:   .SET   STRUC_11   
23A9                STRUC_11:   .SET   STRUC_12   
23A9                STRUC_12:   .SET   0   
23A9                          ;*Macro unroll: INTERPRET
23A9   CF                     RST   $08   
23AA   4E 0B                  DW   interpret   
23AC   86 0E                  DW   exit_forth   
23AE                          ;*Macro unroll: TEST_SET_TEXT "x123"
23AE   2A 45 30               LD   HL,(lineBufStart)   
23B1   22 4B 30               LD   (lineBufTop),HL   
23B4   22 49 30               LD   (currkey),HL   
23B7   21 C0 23               LD   HL,tst_textM_2335S53   
23BA   22 61 32               LD   (char_pointer),HL   
23BD                          ;*Macro unroll:  _skip
23BD   C3 BD 23               JP   $   
23C0                          ;*Macro unroll:  STRUC_PUSH $
23C0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23C0                STRUC_12:   .SET   STRUC_11   
23C0                STRUC_11:   .SET   STRUC_10   
23C0                STRUC_10:   .SET   STRUC_9   
23C0                STRUC_9:   .SET   STRUC_8   
23C0                STRUC_8:   .SET   STRUC_7   
23C0                STRUC_7:   .SET   STRUC_6   
23C0                STRUC_6:   .SET   STRUC_5   
23C0                STRUC_5:   .SET   STRUC_4   
23C0                STRUC_4:   .SET   STRUC_3   
23C0                STRUC_3:   .SET   STRUC_2   
23C0                STRUC_2:   .SET   STRUC_TOP   
23C0                STRUC_TOP:   .SET   $   
23C0                TST_TEXTM_2335S53:      
23C0   78 31 32 33 0D 0A FF 0D 0A DB   "x123","\r\n",-1,"\r\n"   
23C9                          ;*Macro unroll:  _endskip
23C9                          ;*Macro unroll:  STRUC_FWD
23C9                CUR_ADR:   .SET   $   
23BE                          .ORG   STRUC_TOP - 2   
23BE   C9 23                  DW   CUR_ADR   
23C9                          .ORG   CUR_ADR   
23C9                          ;*Macro unroll:  STRUC_POP
23C9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23C9                STRUC_TOP:   .SET   STRUC_2   
23C9                STRUC_2:   .SET   STRUC_3   
23C9                STRUC_3:   .SET   STRUC_4   
23C9                STRUC_4:   .SET   STRUC_5   
23C9                STRUC_5:   .SET   STRUC_6   
23C9                STRUC_6:   .SET   STRUC_7   
23C9                STRUC_7:   .SET   STRUC_8   
23C9                STRUC_8:   .SET   STRUC_9   
23C9                STRUC_9:   .SET   STRUC_10   
23C9                STRUC_10:   .SET   STRUC_11   
23C9                STRUC_11:   .SET   STRUC_12   
23C9                STRUC_12:   .SET   0   
23C9                          ;*Macro unroll: INTERPRET
23C9   CF                     RST   $08   
23CA   4E 0B                  DW   interpret   
23CC   86 0E                  DW   exit_forth   
23CE                          ;*Macro unroll: EXPECT 123, "constant x123 = 123"
23CE   CD 9D 09               CALL   printNum   
23D1                          ;*Macro unroll:  loadWord H,L, B,C
23D1   69                     LD   L,C   
23D2   60                     LD   H,B   
23D3   69                     LD   L,C   
23D4                          ;*Macro unroll:  ppop0 B,C
23D4   DD 2B                  DEC   IX   
23D6   DD 46 00               LD   B,(IX+0)   
23D9   DD 2B                  DEC   IX   
23DB   DD 4E 00               LD   C,(IX+0)   
23DE                          ;*Macro unroll:  CMP16 123
23DE   11 7B 00               LD   DE,123   
23E1   B7                     OR   A   
23E2   ED 52                  SBC   HL,DE   
23E4                          ;*Macro unroll:  checkZeroWord H,L
23E4   7D                     LD   A,L   
23E5   B4                     OR   H   
23E6   CA 0D 24               JP   z,tf_doneM_2337S55   
23E9   11 EA 0F               LD   DE,FAILED   
23EC   CD 52 11               CALL   printPStr   
23EF   11 F9 23               LD   DE,te_failM_2337S55   
23F2   CD 52 11               CALL   printPStr   
23F5   76                     HALT      
23F6                          ;*Macro unroll:  _skip
23F6   C3 F6 23               JP   $   
23F9                          ;*Macro unroll:  STRUC_PUSH $
23F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23F9                STRUC_12:   .SET   STRUC_11   
23F9                STRUC_11:   .SET   STRUC_10   
23F9                STRUC_10:   .SET   STRUC_9   
23F9                STRUC_9:   .SET   STRUC_8   
23F9                STRUC_8:   .SET   STRUC_7   
23F9                STRUC_7:   .SET   STRUC_6   
23F9                STRUC_6:   .SET   STRUC_5   
23F9                STRUC_5:   .SET   STRUC_4   
23F9                STRUC_4:   .SET   STRUC_3   
23F9                STRUC_3:   .SET   STRUC_2   
23F9                STRUC_2:   .SET   STRUC_TOP   
23F9                STRUC_TOP:   .SET   $   
23F9                TE_FAILM_2337S55:      
23F9   13 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 20 3D 20 31 32 33 .PSTR   "constant x123 = 123"   
240D                          ;*Macro unroll:  _endskip
240D                          ;*Macro unroll:  STRUC_FWD
240D                CUR_ADR:   .SET   $   
23F7                          .ORG   STRUC_TOP - 2   
23F7   0D 24                  DW   CUR_ADR   
240D                          .ORG   CUR_ADR   
240D                          ;*Macro unroll:  STRUC_POP
240D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
240D                STRUC_TOP:   .SET   STRUC_2   
240D                STRUC_2:   .SET   STRUC_3   
240D                STRUC_3:   .SET   STRUC_4   
240D                STRUC_4:   .SET   STRUC_5   
240D                STRUC_5:   .SET   STRUC_6   
240D                STRUC_6:   .SET   STRUC_7   
240D                STRUC_7:   .SET   STRUC_8   
240D                STRUC_8:   .SET   STRUC_9   
240D                STRUC_9:   .SET   STRUC_10   
240D                STRUC_10:   .SET   STRUC_11   
240D                STRUC_11:   .SET   STRUC_12   
240D                STRUC_12:   .SET   0   
240D                TF_DONEM_2337S55:      
240D                          ;*Macro unroll: TEST_SET_TEXT "variable v1"
240D   2A 45 30               LD   HL,(lineBufStart)   
2410   22 4B 30               LD   (lineBufTop),HL   
2413   22 49 30               LD   (currkey),HL   
2416   21 1F 24               LD   HL,tst_textM_2338S57   
2419   22 61 32               LD   (char_pointer),HL   
241C                          ;*Macro unroll:  _skip
241C   C3 1C 24               JP   $   
241F                          ;*Macro unroll:  STRUC_PUSH $
241F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
241F                STRUC_12:   .SET   STRUC_11   
241F                STRUC_11:   .SET   STRUC_10   
241F                STRUC_10:   .SET   STRUC_9   
241F                STRUC_9:   .SET   STRUC_8   
241F                STRUC_8:   .SET   STRUC_7   
241F                STRUC_7:   .SET   STRUC_6   
241F                STRUC_6:   .SET   STRUC_5   
241F                STRUC_5:   .SET   STRUC_4   
241F                STRUC_4:   .SET   STRUC_3   
241F                STRUC_3:   .SET   STRUC_2   
241F                STRUC_2:   .SET   STRUC_TOP   
241F                STRUC_TOP:   .SET   $   
241F                TST_TEXTM_2338S57:      
241F   76 61 72 69 61 62 6C 65 20 76 31 0D 0A FF 0D 0A DB   "variable v1","\r\n",-1,"\r\n"   
242F                          ;*Macro unroll:  _endskip
242F                          ;*Macro unroll:  STRUC_FWD
242F                CUR_ADR:   .SET   $   
241D                          .ORG   STRUC_TOP - 2   
241D   2F 24                  DW   CUR_ADR   
242F                          .ORG   CUR_ADR   
242F                          ;*Macro unroll:  STRUC_POP
242F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
242F                STRUC_TOP:   .SET   STRUC_2   
242F                STRUC_2:   .SET   STRUC_3   
242F                STRUC_3:   .SET   STRUC_4   
242F                STRUC_4:   .SET   STRUC_5   
242F                STRUC_5:   .SET   STRUC_6   
242F                STRUC_6:   .SET   STRUC_7   
242F                STRUC_7:   .SET   STRUC_8   
242F                STRUC_8:   .SET   STRUC_9   
242F                STRUC_9:   .SET   STRUC_10   
242F                STRUC_10:   .SET   STRUC_11   
242F                STRUC_11:   .SET   STRUC_12   
242F                STRUC_12:   .SET   0   
242F                          ;*Macro unroll: INTERPRET
242F   CF                     RST   $08   
2430   4E 0B                  DW   interpret   
2432   86 0E                  DW   exit_forth   
2434                          ;*Macro unroll: ppushValue 123
2434                          ;*Macro unroll:  ppush0 B,C
2434   DD 71 00               LD   (IX+0),C   
2437   DD 23                  INC   IX   
2439   DD 70 00               LD   (IX+0),B   
243C   DD 23                  INC   IX   
243E   01 7B 00               LD   BC,123   
2441                          ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
2441   2A 45 30               LD   HL,(lineBufStart)   
2444   22 4B 30               LD   (lineBufTop),HL   
2447   22 49 30               LD   (currkey),HL   
244A   21 53 24               LD   HL,tst_textM_2341S60   
244D   22 61 32               LD   (char_pointer),HL   
2450                          ;*Macro unroll:  _skip
2450   C3 50 24               JP   $   
2453                          ;*Macro unroll:  STRUC_PUSH $
2453                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2453                STRUC_12:   .SET   STRUC_11   
2453                STRUC_11:   .SET   STRUC_10   
2453                STRUC_10:   .SET   STRUC_9   
2453                STRUC_9:   .SET   STRUC_8   
2453                STRUC_8:   .SET   STRUC_7   
2453                STRUC_7:   .SET   STRUC_6   
2453                STRUC_6:   .SET   STRUC_5   
2453                STRUC_5:   .SET   STRUC_4   
2453                STRUC_4:   .SET   STRUC_3   
2453                STRUC_3:   .SET   STRUC_2   
2453                STRUC_2:   .SET   STRUC_TOP   
2453                STRUC_TOP:   .SET   $   
2453                TST_TEXTM_2341S60:      
2453   31 32 33 20 76 31 20 21 0D 0A FF 0D 0A DB   "123 v1 !","\r\n",-1,"\r\n"   
2460                          ;*Macro unroll:  _endskip
2460                          ;*Macro unroll:  STRUC_FWD
2460                CUR_ADR:   .SET   $   
2451                          .ORG   STRUC_TOP - 2   
2451   60 24                  DW   CUR_ADR   
2460                          .ORG   CUR_ADR   
2460                          ;*Macro unroll:  STRUC_POP
2460                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2460                STRUC_TOP:   .SET   STRUC_2   
2460                STRUC_2:   .SET   STRUC_3   
2460                STRUC_3:   .SET   STRUC_4   
2460                STRUC_4:   .SET   STRUC_5   
2460                STRUC_5:   .SET   STRUC_6   
2460                STRUC_6:   .SET   STRUC_7   
2460                STRUC_7:   .SET   STRUC_8   
2460                STRUC_8:   .SET   STRUC_9   
2460                STRUC_9:   .SET   STRUC_10   
2460                STRUC_10:   .SET   STRUC_11   
2460                STRUC_11:   .SET   STRUC_12   
2460                STRUC_12:   .SET   0   
2460                          ;*Macro unroll: INTERPRET
2460   CF                     RST   $08   
2461   4E 0B                  DW   interpret   
2463   86 0E                  DW   exit_forth   
2465                          ;*Macro unroll: TEST_SET_TEXT "v1 @"
2465   2A 45 30               LD   HL,(lineBufStart)   
2468   22 4B 30               LD   (lineBufTop),HL   
246B   22 49 30               LD   (currkey),HL   
246E   21 77 24               LD   HL,tst_textM_2343S62   
2471   22 61 32               LD   (char_pointer),HL   
2474                          ;*Macro unroll:  _skip
2474   C3 74 24               JP   $   
2477                          ;*Macro unroll:  STRUC_PUSH $
2477                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2477                STRUC_12:   .SET   STRUC_11   
2477                STRUC_11:   .SET   STRUC_10   
2477                STRUC_10:   .SET   STRUC_9   
2477                STRUC_9:   .SET   STRUC_8   
2477                STRUC_8:   .SET   STRUC_7   
2477                STRUC_7:   .SET   STRUC_6   
2477                STRUC_6:   .SET   STRUC_5   
2477                STRUC_5:   .SET   STRUC_4   
2477                STRUC_4:   .SET   STRUC_3   
2477                STRUC_3:   .SET   STRUC_2   
2477                STRUC_2:   .SET   STRUC_TOP   
2477                STRUC_TOP:   .SET   $   
2477                TST_TEXTM_2343S62:      
2477   76 31 20 40 0D 0A FF 0D 0A DB   "v1 @","\r\n",-1,"\r\n"   
2480                          ;*Macro unroll:  _endskip
2480                          ;*Macro unroll:  STRUC_FWD
2480                CUR_ADR:   .SET   $   
2475                          .ORG   STRUC_TOP - 2   
2475   80 24                  DW   CUR_ADR   
2480                          .ORG   CUR_ADR   
2480                          ;*Macro unroll:  STRUC_POP
2480                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2480                STRUC_TOP:   .SET   STRUC_2   
2480                STRUC_2:   .SET   STRUC_3   
2480                STRUC_3:   .SET   STRUC_4   
2480                STRUC_4:   .SET   STRUC_5   
2480                STRUC_5:   .SET   STRUC_6   
2480                STRUC_6:   .SET   STRUC_7   
2480                STRUC_7:   .SET   STRUC_8   
2480                STRUC_8:   .SET   STRUC_9   
2480                STRUC_9:   .SET   STRUC_10   
2480                STRUC_10:   .SET   STRUC_11   
2480                STRUC_11:   .SET   STRUC_12   
2480                STRUC_12:   .SET   0   
2480                          ;*Macro unroll: INTERPRET
2480   CF                     RST   $08   
2481   4E 0B                  DW   interpret   
2483   86 0E                  DW   exit_forth   
2485                          ;*Macro unroll: EXPECT 123, "variable v1 = 123"
2485   CD 9D 09               CALL   printNum   
2488                          ;*Macro unroll:  loadWord H,L, B,C
2488   69                     LD   L,C   
2489   60                     LD   H,B   
248A   69                     LD   L,C   
248B                          ;*Macro unroll:  ppop0 B,C
248B   DD 2B                  DEC   IX   
248D   DD 46 00               LD   B,(IX+0)   
2490   DD 2B                  DEC   IX   
2492   DD 4E 00               LD   C,(IX+0)   
2495                          ;*Macro unroll:  CMP16 123
2495   11 7B 00               LD   DE,123   
2498   B7                     OR   A   
2499   ED 52                  SBC   HL,DE   
249B                          ;*Macro unroll:  checkZeroWord H,L
249B   7D                     LD   A,L   
249C   B4                     OR   H   
249D   CA C2 24               JP   z,tf_doneM_2345S64   
24A0   11 EA 0F               LD   DE,FAILED   
24A3   CD 52 11               CALL   printPStr   
24A6   11 B0 24               LD   DE,te_failM_2345S64   
24A9   CD 52 11               CALL   printPStr   
24AC   76                     HALT      
24AD                          ;*Macro unroll:  _skip
24AD   C3 AD 24               JP   $   
24B0                          ;*Macro unroll:  STRUC_PUSH $
24B0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24B0                STRUC_12:   .SET   STRUC_11   
24B0                STRUC_11:   .SET   STRUC_10   
24B0                STRUC_10:   .SET   STRUC_9   
24B0                STRUC_9:   .SET   STRUC_8   
24B0                STRUC_8:   .SET   STRUC_7   
24B0                STRUC_7:   .SET   STRUC_6   
24B0                STRUC_6:   .SET   STRUC_5   
24B0                STRUC_5:   .SET   STRUC_4   
24B0                STRUC_4:   .SET   STRUC_3   
24B0                STRUC_3:   .SET   STRUC_2   
24B0                STRUC_2:   .SET   STRUC_TOP   
24B0                STRUC_TOP:   .SET   $   
24B0                TE_FAILM_2345S64:      
24B0   11 76 61 72 69 61 62 6C 65 20 76 31 20 3D 20 31 32 33 .PSTR   "variable v1 = 123"   
24C2                          ;*Macro unroll:  _endskip
24C2                          ;*Macro unroll:  STRUC_FWD
24C2                CUR_ADR:   .SET   $   
24AE                          .ORG   STRUC_TOP - 2   
24AE   C2 24                  DW   CUR_ADR   
24C2                          .ORG   CUR_ADR   
24C2                          ;*Macro unroll:  STRUC_POP
24C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24C2                STRUC_TOP:   .SET   STRUC_2   
24C2                STRUC_2:   .SET   STRUC_3   
24C2                STRUC_3:   .SET   STRUC_4   
24C2                STRUC_4:   .SET   STRUC_5   
24C2                STRUC_5:   .SET   STRUC_6   
24C2                STRUC_6:   .SET   STRUC_7   
24C2                STRUC_7:   .SET   STRUC_8   
24C2                STRUC_8:   .SET   STRUC_9   
24C2                STRUC_9:   .SET   STRUC_10   
24C2                STRUC_10:   .SET   STRUC_11   
24C2                STRUC_11:   .SET   STRUC_12   
24C2                STRUC_12:   .SET   0   
24C2                TF_DONEM_2345S64:      
24C2                          ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
24C2   2A 45 30               LD   HL,(lineBufStart)   
24C5   22 4B 30               LD   (lineBufTop),HL   
24C8   22 49 30               LD   (currkey),HL   
24CB   21 D4 24               LD   HL,tst_textM_2346S66   
24CE   22 61 32               LD   (char_pointer),HL   
24D1                          ;*Macro unroll:  _skip
24D1   C3 D1 24               JP   $   
24D4                          ;*Macro unroll:  STRUC_PUSH $
24D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24D4                STRUC_12:   .SET   STRUC_11   
24D4                STRUC_11:   .SET   STRUC_10   
24D4                STRUC_10:   .SET   STRUC_9   
24D4                STRUC_9:   .SET   STRUC_8   
24D4                STRUC_8:   .SET   STRUC_7   
24D4                STRUC_7:   .SET   STRUC_6   
24D4                STRUC_6:   .SET   STRUC_5   
24D4                STRUC_5:   .SET   STRUC_4   
24D4                STRUC_4:   .SET   STRUC_3   
24D4                STRUC_3:   .SET   STRUC_2   
24D4                STRUC_2:   .SET   STRUC_TOP   
24D4                STRUC_TOP:   .SET   $   
24D4                TST_TEXTM_2346S66:      
24D4   3A 20 64 62 6C 20 64 75 70 20 2B 20 3B 0D 0A FF 0D 0A DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
24E6                          ;*Macro unroll:  _endskip
24E6                          ;*Macro unroll:  STRUC_FWD
24E6                CUR_ADR:   .SET   $   
24D2                          .ORG   STRUC_TOP - 2   
24D2   E6 24                  DW   CUR_ADR   
24E6                          .ORG   CUR_ADR   
24E6                          ;*Macro unroll:  STRUC_POP
24E6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24E6                STRUC_TOP:   .SET   STRUC_2   
24E6                STRUC_2:   .SET   STRUC_3   
24E6                STRUC_3:   .SET   STRUC_4   
24E6                STRUC_4:   .SET   STRUC_5   
24E6                STRUC_5:   .SET   STRUC_6   
24E6                STRUC_6:   .SET   STRUC_7   
24E6                STRUC_7:   .SET   STRUC_8   
24E6                STRUC_8:   .SET   STRUC_9   
24E6                STRUC_9:   .SET   STRUC_10   
24E6                STRUC_10:   .SET   STRUC_11   
24E6                STRUC_11:   .SET   STRUC_12   
24E6                STRUC_12:   .SET   0   
24E6                          ;*Macro unroll: INTERPRET
24E6   CF                     RST   $08   
24E7   4E 0B                  DW   interpret   
24E9   86 0E                  DW   exit_forth   
24EB                          ;*Macro unroll: ppushValue 2
24EB                          ;*Macro unroll:  ppush0 B,C
24EB   DD 71 00               LD   (IX+0),C   
24EE   DD 23                  INC   IX   
24F0   DD 70 00               LD   (IX+0),B   
24F3   DD 23                  INC   IX   
24F5   01 02 00               LD   BC,2   
24F8                          ;*Macro unroll: TEST_SET_TEXT "dbl"
24F8   2A 45 30               LD   HL,(lineBufStart)   
24FB   22 4B 30               LD   (lineBufTop),HL   
24FE   22 49 30               LD   (currkey),HL   
2501   21 0A 25               LD   HL,tst_textM_2349S69   
2504   22 61 32               LD   (char_pointer),HL   
2507                          ;*Macro unroll:  _skip
2507   C3 07 25               JP   $   
250A                          ;*Macro unroll:  STRUC_PUSH $
250A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
250A                STRUC_12:   .SET   STRUC_11   
250A                STRUC_11:   .SET   STRUC_10   
250A                STRUC_10:   .SET   STRUC_9   
250A                STRUC_9:   .SET   STRUC_8   
250A                STRUC_8:   .SET   STRUC_7   
250A                STRUC_7:   .SET   STRUC_6   
250A                STRUC_6:   .SET   STRUC_5   
250A                STRUC_5:   .SET   STRUC_4   
250A                STRUC_4:   .SET   STRUC_3   
250A                STRUC_3:   .SET   STRUC_2   
250A                STRUC_2:   .SET   STRUC_TOP   
250A                STRUC_TOP:   .SET   $   
250A                TST_TEXTM_2349S69:      
250A   64 62 6C 0D 0A FF 0D 0A DB   "dbl","\r\n",-1,"\r\n"   
2512                          ;*Macro unroll:  _endskip
2512                          ;*Macro unroll:  STRUC_FWD
2512                CUR_ADR:   .SET   $   
2508                          .ORG   STRUC_TOP - 2   
2508   12 25                  DW   CUR_ADR   
2512                          .ORG   CUR_ADR   
2512                          ;*Macro unroll:  STRUC_POP
2512                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2512                STRUC_TOP:   .SET   STRUC_2   
2512                STRUC_2:   .SET   STRUC_3   
2512                STRUC_3:   .SET   STRUC_4   
2512                STRUC_4:   .SET   STRUC_5   
2512                STRUC_5:   .SET   STRUC_6   
2512                STRUC_6:   .SET   STRUC_7   
2512                STRUC_7:   .SET   STRUC_8   
2512                STRUC_8:   .SET   STRUC_9   
2512                STRUC_9:   .SET   STRUC_10   
2512                STRUC_10:   .SET   STRUC_11   
2512                STRUC_11:   .SET   STRUC_12   
2512                STRUC_12:   .SET   0   
2512                          ;*Macro unroll: INTERPRET
2512   CF                     RST   $08   
2513   4E 0B                  DW   interpret   
2515   86 0E                  DW   exit_forth   
2517                          ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
2517   CD 9D 09               CALL   printNum   
251A                          ;*Macro unroll:  loadWord H,L, B,C
251A   69                     LD   L,C   
251B   60                     LD   H,B   
251C   69                     LD   L,C   
251D                          ;*Macro unroll:  ppop0 B,C
251D   DD 2B                  DEC   IX   
251F   DD 46 00               LD   B,(IX+0)   
2522   DD 2B                  DEC   IX   
2524   DD 4E 00               LD   C,(IX+0)   
2527                          ;*Macro unroll:  CMP16 4
2527   11 04 00               LD   DE,4   
252A   B7                     OR   A   
252B   ED 52                  SBC   HL,DE   
252D                          ;*Macro unroll:  checkZeroWord H,L
252D   7D                     LD   A,L   
252E   B4                     OR   H   
252F   CA 52 25               JP   z,tf_doneM_2351S71   
2532   11 EA 0F               LD   DE,FAILED   
2535   CD 52 11               CALL   printPStr   
2538   11 42 25               LD   DE,te_failM_2351S71   
253B   CD 52 11               CALL   printPStr   
253E   76                     HALT      
253F                          ;*Macro unroll:  _skip
253F   C3 3F 25               JP   $   
2542                          ;*Macro unroll:  STRUC_PUSH $
2542                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2542                STRUC_12:   .SET   STRUC_11   
2542                STRUC_11:   .SET   STRUC_10   
2542                STRUC_10:   .SET   STRUC_9   
2542                STRUC_9:   .SET   STRUC_8   
2542                STRUC_8:   .SET   STRUC_7   
2542                STRUC_7:   .SET   STRUC_6   
2542                STRUC_6:   .SET   STRUC_5   
2542                STRUC_5:   .SET   STRUC_4   
2542                STRUC_4:   .SET   STRUC_3   
2542                STRUC_3:   .SET   STRUC_2   
2542                STRUC_2:   .SET   STRUC_TOP   
2542                STRUC_TOP:   .SET   $   
2542                TE_FAILM_2351S71:      
2542   0F 63 6F 6C 6F 6E 20 64 62 6C 20 32 20 3D 20 34 .PSTR   "colon dbl 2 = 4"   
2552                          ;*Macro unroll:  _endskip
2552                          ;*Macro unroll:  STRUC_FWD
2552                CUR_ADR:   .SET   $   
2540                          .ORG   STRUC_TOP - 2   
2540   52 25                  DW   CUR_ADR   
2552                          .ORG   CUR_ADR   
2552                          ;*Macro unroll:  STRUC_POP
2552                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2552                STRUC_TOP:   .SET   STRUC_2   
2552                STRUC_2:   .SET   STRUC_3   
2552                STRUC_3:   .SET   STRUC_4   
2552                STRUC_4:   .SET   STRUC_5   
2552                STRUC_5:   .SET   STRUC_6   
2552                STRUC_6:   .SET   STRUC_7   
2552                STRUC_7:   .SET   STRUC_8   
2552                STRUC_8:   .SET   STRUC_9   
2552                STRUC_9:   .SET   STRUC_10   
2552                STRUC_10:   .SET   STRUC_11   
2552                STRUC_11:   .SET   STRUC_12   
2552                STRUC_12:   .SET   0   
2552                TF_DONEM_2351S71:      
2552                          ;*Macro unroll: ppushValue 200
2552                          ;*Macro unroll:  ppush0 B,C
2552   DD 71 00               LD   (IX+0),C   
2555   DD 23                  INC   IX   
2557   DD 70 00               LD   (IX+0),B   
255A   DD 23                  INC   IX   
255C   01 C8 00               LD   BC,200   
255F                          ;*Macro unroll: ppushValue 1
255F                          ;*Macro unroll:  ppush0 B,C
255F   DD 71 00               LD   (IX+0),C   
2562   DD 23                  INC   IX   
2564   DD 70 00               LD   (IX+0),B   
2567   DD 23                  INC   IX   
2569   01 01 00               LD   BC,1   
256C                          ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
256C   2A 45 30               LD   HL,(lineBufStart)   
256F   22 4B 30               LD   (lineBufTop),HL   
2572   22 49 30               LD   (currkey),HL   
2575   21 7E 25               LD   HL,tst_textM_2354S75   
2578   22 61 32               LD   (char_pointer),HL   
257B                          ;*Macro unroll:  _skip
257B   C3 7B 25               JP   $   
257E                          ;*Macro unroll:  STRUC_PUSH $
257E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
257E                STRUC_12:   .SET   STRUC_11   
257E                STRUC_11:   .SET   STRUC_10   
257E                STRUC_10:   .SET   STRUC_9   
257E                STRUC_9:   .SET   STRUC_8   
257E                STRUC_8:   .SET   STRUC_7   
257E                STRUC_7:   .SET   STRUC_6   
257E                STRUC_6:   .SET   STRUC_5   
257E                STRUC_5:   .SET   STRUC_4   
257E                STRUC_4:   .SET   STRUC_3   
257E                STRUC_3:   .SET   STRUC_2   
257E                STRUC_2:   .SET   STRUC_TOP   
257E                STRUC_TOP:   .SET   $   
257E                TST_TEXTM_2354S75:      
257E   3A 20 74 65 73 74 69 66 32 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
259B                          ;*Macro unroll:  _endskip
259B                          ;*Macro unroll:  STRUC_FWD
259B                CUR_ADR:   .SET   $   
257C                          .ORG   STRUC_TOP - 2   
257C   9B 25                  DW   CUR_ADR   
259B                          .ORG   CUR_ADR   
259B                          ;*Macro unroll:  STRUC_POP
259B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
259B                STRUC_TOP:   .SET   STRUC_2   
259B                STRUC_2:   .SET   STRUC_3   
259B                STRUC_3:   .SET   STRUC_4   
259B                STRUC_4:   .SET   STRUC_5   
259B                STRUC_5:   .SET   STRUC_6   
259B                STRUC_6:   .SET   STRUC_7   
259B                STRUC_7:   .SET   STRUC_8   
259B                STRUC_8:   .SET   STRUC_9   
259B                STRUC_9:   .SET   STRUC_10   
259B                STRUC_10:   .SET   STRUC_11   
259B                STRUC_11:   .SET   STRUC_12   
259B                STRUC_12:   .SET   0   
259B                          ;*Macro unroll: INTERPRET
259B   CF                     RST   $08   
259C   4E 0B                  DW   interpret   
259E   86 0E                  DW   exit_forth   
25A0                          ;*Macro unroll: TEST_SET_TEXT "testif2"
25A0   2A 45 30               LD   HL,(lineBufStart)   
25A3   22 4B 30               LD   (lineBufTop),HL   
25A6   22 49 30               LD   (currkey),HL   
25A9   21 B2 25               LD   HL,tst_textM_2356S78   
25AC   22 61 32               LD   (char_pointer),HL   
25AF                          ;*Macro unroll:  _skip
25AF   C3 AF 25               JP   $   
25B2                          ;*Macro unroll:  STRUC_PUSH $
25B2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25B2                STRUC_12:   .SET   STRUC_11   
25B2                STRUC_11:   .SET   STRUC_10   
25B2                STRUC_10:   .SET   STRUC_9   
25B2                STRUC_9:   .SET   STRUC_8   
25B2                STRUC_8:   .SET   STRUC_7   
25B2                STRUC_7:   .SET   STRUC_6   
25B2                STRUC_6:   .SET   STRUC_5   
25B2                STRUC_5:   .SET   STRUC_4   
25B2                STRUC_4:   .SET   STRUC_3   
25B2                STRUC_3:   .SET   STRUC_2   
25B2                STRUC_2:   .SET   STRUC_TOP   
25B2                STRUC_TOP:   .SET   $   
25B2                TST_TEXTM_2356S78:      
25B2   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
25BE                          ;*Macro unroll:  _endskip
25BE                          ;*Macro unroll:  STRUC_FWD
25BE                CUR_ADR:   .SET   $   
25B0                          .ORG   STRUC_TOP - 2   
25B0   BE 25                  DW   CUR_ADR   
25BE                          .ORG   CUR_ADR   
25BE                          ;*Macro unroll:  STRUC_POP
25BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
25BE                STRUC_TOP:   .SET   STRUC_2   
25BE                STRUC_2:   .SET   STRUC_3   
25BE                STRUC_3:   .SET   STRUC_4   
25BE                STRUC_4:   .SET   STRUC_5   
25BE                STRUC_5:   .SET   STRUC_6   
25BE                STRUC_6:   .SET   STRUC_7   
25BE                STRUC_7:   .SET   STRUC_8   
25BE                STRUC_8:   .SET   STRUC_9   
25BE                STRUC_9:   .SET   STRUC_10   
25BE                STRUC_10:   .SET   STRUC_11   
25BE                STRUC_11:   .SET   STRUC_12   
25BE                STRUC_12:   .SET   0   
25BE                          ;*Macro unroll: INTERPRET
25BE   CF                     RST   $08   
25BF   4E 0B                  DW   interpret   
25C1   86 0E                  DW   exit_forth   
25C3                          ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
25C3   CD 9D 09               CALL   printNum   
25C6                          ;*Macro unroll:  loadWord H,L, B,C
25C6   69                     LD   L,C   
25C7   60                     LD   H,B   
25C8   69                     LD   L,C   
25C9                          ;*Macro unroll:  ppop0 B,C
25C9   DD 2B                  DEC   IX   
25CB   DD 46 00               LD   B,(IX+0)   
25CE   DD 2B                  DEC   IX   
25D0   DD 4E 00               LD   C,(IX+0)   
25D3                          ;*Macro unroll:  CMP16 100
25D3   11 64 00               LD   DE,100   
25D6   B7                     OR   A   
25D7   ED 52                  SBC   HL,DE   
25D9                          ;*Macro unroll:  checkZeroWord H,L
25D9   7D                     LD   A,L   
25DA   B4                     OR   H   
25DB   CA 05 26               JP   z,tf_doneM_2358S80   
25DE   11 EA 0F               LD   DE,FAILED   
25E1   CD 52 11               CALL   printPStr   
25E4   11 EE 25               LD   DE,te_failM_2358S80   
25E7   CD 52 11               CALL   printPStr   
25EA   76                     HALT      
25EB                          ;*Macro unroll:  _skip
25EB   C3 EB 25               JP   $   
25EE                          ;*Macro unroll:  STRUC_PUSH $
25EE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25EE                STRUC_12:   .SET   STRUC_11   
25EE                STRUC_11:   .SET   STRUC_10   
25EE                STRUC_10:   .SET   STRUC_9   
25EE                STRUC_9:   .SET   STRUC_8   
25EE                STRUC_8:   .SET   STRUC_7   
25EE                STRUC_7:   .SET   STRUC_6   
25EE                STRUC_6:   .SET   STRUC_5   
25EE                STRUC_5:   .SET   STRUC_4   
25EE                STRUC_4:   .SET   STRUC_3   
25EE                STRUC_3:   .SET   STRUC_2   
25EE                STRUC_2:   .SET   STRUC_TOP   
25EE                STRUC_TOP:   .SET   $   
25EE                TE_FAILM_2358S80:      
25EE   16 31 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 31 30 30 .PSTR   "1 if 100 endif --> 100"   
2605                          ;*Macro unroll:  _endskip
2605                          ;*Macro unroll:  STRUC_FWD
2605                CUR_ADR:   .SET   $   
25EC                          .ORG   STRUC_TOP - 2   
25EC   05 26                  DW   CUR_ADR   
2605                          .ORG   CUR_ADR   
2605                          ;*Macro unroll:  STRUC_POP
2605                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2605                STRUC_TOP:   .SET   STRUC_2   
2605                STRUC_2:   .SET   STRUC_3   
2605                STRUC_3:   .SET   STRUC_4   
2605                STRUC_4:   .SET   STRUC_5   
2605                STRUC_5:   .SET   STRUC_6   
2605                STRUC_6:   .SET   STRUC_7   
2605                STRUC_7:   .SET   STRUC_8   
2605                STRUC_8:   .SET   STRUC_9   
2605                STRUC_9:   .SET   STRUC_10   
2605                STRUC_10:   .SET   STRUC_11   
2605                STRUC_11:   .SET   STRUC_12   
2605                STRUC_12:   .SET   0   
2605                TF_DONEM_2358S80:      
2605                          ;*Macro unroll: ppushValue 0
2605                          ;*Macro unroll:  ppush0 B,C
2605   DD 71 00               LD   (IX+0),C   
2608   DD 23                  INC   IX   
260A   DD 70 00               LD   (IX+0),B   
260D   DD 23                  INC   IX   
260F   01 00 00               LD   BC,0   
2612                          ;*Macro unroll: TEST_SET_TEXT "testif2"
2612   2A 45 30               LD   HL,(lineBufStart)   
2615   22 4B 30               LD   (lineBufTop),HL   
2618   22 49 30               LD   (currkey),HL   
261B   21 24 26               LD   HL,tst_textM_2360S83   
261E   22 61 32               LD   (char_pointer),HL   
2621                          ;*Macro unroll:  _skip
2621   C3 21 26               JP   $   
2624                          ;*Macro unroll:  STRUC_PUSH $
2624                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2624                STRUC_12:   .SET   STRUC_11   
2624                STRUC_11:   .SET   STRUC_10   
2624                STRUC_10:   .SET   STRUC_9   
2624                STRUC_9:   .SET   STRUC_8   
2624                STRUC_8:   .SET   STRUC_7   
2624                STRUC_7:   .SET   STRUC_6   
2624                STRUC_6:   .SET   STRUC_5   
2624                STRUC_5:   .SET   STRUC_4   
2624                STRUC_4:   .SET   STRUC_3   
2624                STRUC_3:   .SET   STRUC_2   
2624                STRUC_2:   .SET   STRUC_TOP   
2624                STRUC_TOP:   .SET   $   
2624                TST_TEXTM_2360S83:      
2624   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
2630                          ;*Macro unroll:  _endskip
2630                          ;*Macro unroll:  STRUC_FWD
2630                CUR_ADR:   .SET   $   
2622                          .ORG   STRUC_TOP - 2   
2622   30 26                  DW   CUR_ADR   
2630                          .ORG   CUR_ADR   
2630                          ;*Macro unroll:  STRUC_POP
2630                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2630                STRUC_TOP:   .SET   STRUC_2   
2630                STRUC_2:   .SET   STRUC_3   
2630                STRUC_3:   .SET   STRUC_4   
2630                STRUC_4:   .SET   STRUC_5   
2630                STRUC_5:   .SET   STRUC_6   
2630                STRUC_6:   .SET   STRUC_7   
2630                STRUC_7:   .SET   STRUC_8   
2630                STRUC_8:   .SET   STRUC_9   
2630                STRUC_9:   .SET   STRUC_10   
2630                STRUC_10:   .SET   STRUC_11   
2630                STRUC_11:   .SET   STRUC_12   
2630                STRUC_12:   .SET   0   
2630                          ;*Macro unroll: INTERPRET
2630   CF                     RST   $08   
2631   4E 0B                  DW   interpret   
2633   86 0E                  DW   exit_forth   
2635                          ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
2635   CD 9D 09               CALL   printNum   
2638                          ;*Macro unroll:  loadWord H,L, B,C
2638   69                     LD   L,C   
2639   60                     LD   H,B   
263A   69                     LD   L,C   
263B                          ;*Macro unroll:  ppop0 B,C
263B   DD 2B                  DEC   IX   
263D   DD 46 00               LD   B,(IX+0)   
2640   DD 2B                  DEC   IX   
2642   DD 4E 00               LD   C,(IX+0)   
2645                          ;*Macro unroll:  CMP16 200
2645   11 C8 00               LD   DE,200   
2648   B7                     OR   A   
2649   ED 52                  SBC   HL,DE   
264B                          ;*Macro unroll:  checkZeroWord H,L
264B   7D                     LD   A,L   
264C   B4                     OR   H   
264D   CA 77 26               JP   z,tf_doneM_2362S85   
2650   11 EA 0F               LD   DE,FAILED   
2653   CD 52 11               CALL   printPStr   
2656   11 60 26               LD   DE,te_failM_2362S85   
2659   CD 52 11               CALL   printPStr   
265C   76                     HALT      
265D                          ;*Macro unroll:  _skip
265D   C3 5D 26               JP   $   
2660                          ;*Macro unroll:  STRUC_PUSH $
2660                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2660                STRUC_12:   .SET   STRUC_11   
2660                STRUC_11:   .SET   STRUC_10   
2660                STRUC_10:   .SET   STRUC_9   
2660                STRUC_9:   .SET   STRUC_8   
2660                STRUC_8:   .SET   STRUC_7   
2660                STRUC_7:   .SET   STRUC_6   
2660                STRUC_6:   .SET   STRUC_5   
2660                STRUC_5:   .SET   STRUC_4   
2660                STRUC_4:   .SET   STRUC_3   
2660                STRUC_3:   .SET   STRUC_2   
2660                STRUC_2:   .SET   STRUC_TOP   
2660                STRUC_TOP:   .SET   $   
2660                TE_FAILM_2362S85:      
2660   16 30 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 32 30 30 .PSTR   "0 if 100 endif --> 200"   
2677                          ;*Macro unroll:  _endskip
2677                          ;*Macro unroll:  STRUC_FWD
2677                CUR_ADR:   .SET   $   
265E                          .ORG   STRUC_TOP - 2   
265E   77 26                  DW   CUR_ADR   
2677                          .ORG   CUR_ADR   
2677                          ;*Macro unroll:  STRUC_POP
2677                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2677                STRUC_TOP:   .SET   STRUC_2   
2677                STRUC_2:   .SET   STRUC_3   
2677                STRUC_3:   .SET   STRUC_4   
2677                STRUC_4:   .SET   STRUC_5   
2677                STRUC_5:   .SET   STRUC_6   
2677                STRUC_6:   .SET   STRUC_7   
2677                STRUC_7:   .SET   STRUC_8   
2677                STRUC_8:   .SET   STRUC_9   
2677                STRUC_9:   .SET   STRUC_10   
2677                STRUC_10:   .SET   STRUC_11   
2677                STRUC_11:   .SET   STRUC_12   
2677                STRUC_12:   .SET   0   
2677                TF_DONEM_2362S85:      
2677                          ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
2677   2A 45 30               LD   HL,(lineBufStart)   
267A   22 4B 30               LD   (lineBufTop),HL   
267D   22 49 30               LD   (currkey),HL   
2680   21 89 26               LD   HL,tst_textM_2363S87   
2683   22 61 32               LD   (char_pointer),HL   
2686                          ;*Macro unroll:  _skip
2686   C3 86 26               JP   $   
2689                          ;*Macro unroll:  STRUC_PUSH $
2689                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2689                STRUC_12:   .SET   STRUC_11   
2689                STRUC_11:   .SET   STRUC_10   
2689                STRUC_10:   .SET   STRUC_9   
2689                STRUC_9:   .SET   STRUC_8   
2689                STRUC_8:   .SET   STRUC_7   
2689                STRUC_7:   .SET   STRUC_6   
2689                STRUC_6:   .SET   STRUC_5   
2689                STRUC_5:   .SET   STRUC_4   
2689                STRUC_4:   .SET   STRUC_3   
2689                STRUC_3:   .SET   STRUC_2   
2689                STRUC_2:   .SET   STRUC_TOP   
2689                STRUC_TOP:   .SET   $   
2689                TST_TEXTM_2363S87:      
2689   3A 20 74 65 73 74 69 66 33 20 69 66 20 31 30 30 20 65 6C 73 65 20 32 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
26AF                          ;*Macro unroll:  _endskip
26AF                          ;*Macro unroll:  STRUC_FWD
26AF                CUR_ADR:   .SET   $   
2687                          .ORG   STRUC_TOP - 2   
2687   AF 26                  DW   CUR_ADR   
26AF                          .ORG   CUR_ADR   
26AF                          ;*Macro unroll:  STRUC_POP
26AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26AF                STRUC_TOP:   .SET   STRUC_2   
26AF                STRUC_2:   .SET   STRUC_3   
26AF                STRUC_3:   .SET   STRUC_4   
26AF                STRUC_4:   .SET   STRUC_5   
26AF                STRUC_5:   .SET   STRUC_6   
26AF                STRUC_6:   .SET   STRUC_7   
26AF                STRUC_7:   .SET   STRUC_8   
26AF                STRUC_8:   .SET   STRUC_9   
26AF                STRUC_9:   .SET   STRUC_10   
26AF                STRUC_10:   .SET   STRUC_11   
26AF                STRUC_11:   .SET   STRUC_12   
26AF                STRUC_12:   .SET   0   
26AF                          ;*Macro unroll: INTERPRET
26AF   CF                     RST   $08   
26B0   4E 0B                  DW   interpret   
26B2   86 0E                  DW   exit_forth   
26B4                          ;*Macro unroll: ppushValue 0
26B4                          ;*Macro unroll:  ppush0 B,C
26B4   DD 71 00               LD   (IX+0),C   
26B7   DD 23                  INC   IX   
26B9   DD 70 00               LD   (IX+0),B   
26BC   DD 23                  INC   IX   
26BE   01 00 00               LD   BC,0   
26C1                          ;*Macro unroll: TEST_SET_TEXT "testif3"
26C1   2A 45 30               LD   HL,(lineBufStart)   
26C4   22 4B 30               LD   (lineBufTop),HL   
26C7   22 49 30               LD   (currkey),HL   
26CA   21 D3 26               LD   HL,tst_textM_2366S92   
26CD   22 61 32               LD   (char_pointer),HL   
26D0                          ;*Macro unroll:  _skip
26D0   C3 D0 26               JP   $   
26D3                          ;*Macro unroll:  STRUC_PUSH $
26D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
26D3                STRUC_12:   .SET   STRUC_11   
26D3                STRUC_11:   .SET   STRUC_10   
26D3                STRUC_10:   .SET   STRUC_9   
26D3                STRUC_9:   .SET   STRUC_8   
26D3                STRUC_8:   .SET   STRUC_7   
26D3                STRUC_7:   .SET   STRUC_6   
26D3                STRUC_6:   .SET   STRUC_5   
26D3                STRUC_5:   .SET   STRUC_4   
26D3                STRUC_4:   .SET   STRUC_3   
26D3                STRUC_3:   .SET   STRUC_2   
26D3                STRUC_2:   .SET   STRUC_TOP   
26D3                STRUC_TOP:   .SET   $   
26D3                TST_TEXTM_2366S92:      
26D3   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
26DF                          ;*Macro unroll:  _endskip
26DF                          ;*Macro unroll:  STRUC_FWD
26DF                CUR_ADR:   .SET   $   
26D1                          .ORG   STRUC_TOP - 2   
26D1   DF 26                  DW   CUR_ADR   
26DF                          .ORG   CUR_ADR   
26DF                          ;*Macro unroll:  STRUC_POP
26DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26DF                STRUC_TOP:   .SET   STRUC_2   
26DF                STRUC_2:   .SET   STRUC_3   
26DF                STRUC_3:   .SET   STRUC_4   
26DF                STRUC_4:   .SET   STRUC_5   
26DF                STRUC_5:   .SET   STRUC_6   
26DF                STRUC_6:   .SET   STRUC_7   
26DF                STRUC_7:   .SET   STRUC_8   
26DF                STRUC_8:   .SET   STRUC_9   
26DF                STRUC_9:   .SET   STRUC_10   
26DF                STRUC_10:   .SET   STRUC_11   
26DF                STRUC_11:   .SET   STRUC_12   
26DF                STRUC_12:   .SET   0   
26DF                          ;*Macro unroll: INTERPRET
26DF   CF                     RST   $08   
26E0   4E 0B                  DW   interpret   
26E2   86 0E                  DW   exit_forth   
26E4                          ;*Macro unroll: EXPECT 200, "0 --> 200"
26E4   CD 9D 09               CALL   printNum   
26E7                          ;*Macro unroll:  loadWord H,L, B,C
26E7   69                     LD   L,C   
26E8   60                     LD   H,B   
26E9   69                     LD   L,C   
26EA                          ;*Macro unroll:  ppop0 B,C
26EA   DD 2B                  DEC   IX   
26EC   DD 46 00               LD   B,(IX+0)   
26EF   DD 2B                  DEC   IX   
26F1   DD 4E 00               LD   C,(IX+0)   
26F4                          ;*Macro unroll:  CMP16 200
26F4   11 C8 00               LD   DE,200   
26F7   B7                     OR   A   
26F8   ED 52                  SBC   HL,DE   
26FA                          ;*Macro unroll:  checkZeroWord H,L
26FA   7D                     LD   A,L   
26FB   B4                     OR   H   
26FC   CA 19 27               JP   z,tf_doneM_2368S94   
26FF   11 EA 0F               LD   DE,FAILED   
2702   CD 52 11               CALL   printPStr   
2705   11 0F 27               LD   DE,te_failM_2368S94   
2708   CD 52 11               CALL   printPStr   
270B   76                     HALT      
270C                          ;*Macro unroll:  _skip
270C   C3 0C 27               JP   $   
270F                          ;*Macro unroll:  STRUC_PUSH $
270F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
270F                STRUC_12:   .SET   STRUC_11   
270F                STRUC_11:   .SET   STRUC_10   
270F                STRUC_10:   .SET   STRUC_9   
270F                STRUC_9:   .SET   STRUC_8   
270F                STRUC_8:   .SET   STRUC_7   
270F                STRUC_7:   .SET   STRUC_6   
270F                STRUC_6:   .SET   STRUC_5   
270F                STRUC_5:   .SET   STRUC_4   
270F                STRUC_4:   .SET   STRUC_3   
270F                STRUC_3:   .SET   STRUC_2   
270F                STRUC_2:   .SET   STRUC_TOP   
270F                STRUC_TOP:   .SET   $   
270F                TE_FAILM_2368S94:      
270F   09 30 20 2D 2D 3E 20 32 30 30 .PSTR   "0 --> 200"   
2719                          ;*Macro unroll:  _endskip
2719                          ;*Macro unroll:  STRUC_FWD
2719                CUR_ADR:   .SET   $   
270D                          .ORG   STRUC_TOP - 2   
270D   19 27                  DW   CUR_ADR   
2719                          .ORG   CUR_ADR   
2719                          ;*Macro unroll:  STRUC_POP
2719                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2719                STRUC_TOP:   .SET   STRUC_2   
2719                STRUC_2:   .SET   STRUC_3   
2719                STRUC_3:   .SET   STRUC_4   
2719                STRUC_4:   .SET   STRUC_5   
2719                STRUC_5:   .SET   STRUC_6   
2719                STRUC_6:   .SET   STRUC_7   
2719                STRUC_7:   .SET   STRUC_8   
2719                STRUC_8:   .SET   STRUC_9   
2719                STRUC_9:   .SET   STRUC_10   
2719                STRUC_10:   .SET   STRUC_11   
2719                STRUC_11:   .SET   STRUC_12   
2719                STRUC_12:   .SET   0   
2719                TF_DONEM_2368S94:      
2719                          ;*Macro unroll: ppushValue 1
2719                          ;*Macro unroll:  ppush0 B,C
2719   DD 71 00               LD   (IX+0),C   
271C   DD 23                  INC   IX   
271E   DD 70 00               LD   (IX+0),B   
2721   DD 23                  INC   IX   
2723   01 01 00               LD   BC,1   
2726                          ;*Macro unroll: TEST_SET_TEXT "testif3"
2726   2A 45 30               LD   HL,(lineBufStart)   
2729   22 4B 30               LD   (lineBufTop),HL   
272C   22 49 30               LD   (currkey),HL   
272F   21 38 27               LD   HL,tst_textM_2370S98   
2732   22 61 32               LD   (char_pointer),HL   
2735                          ;*Macro unroll:  _skip
2735   C3 35 27               JP   $   
2738                          ;*Macro unroll:  STRUC_PUSH $
2738                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2738                STRUC_12:   .SET   STRUC_11   
2738                STRUC_11:   .SET   STRUC_10   
2738                STRUC_10:   .SET   STRUC_9   
2738                STRUC_9:   .SET   STRUC_8   
2738                STRUC_8:   .SET   STRUC_7   
2738                STRUC_7:   .SET   STRUC_6   
2738                STRUC_6:   .SET   STRUC_5   
2738                STRUC_5:   .SET   STRUC_4   
2738                STRUC_4:   .SET   STRUC_3   
2738                STRUC_3:   .SET   STRUC_2   
2738                STRUC_2:   .SET   STRUC_TOP   
2738                STRUC_TOP:   .SET   $   
2738                TST_TEXTM_2370S98:      
2738   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
2744                          ;*Macro unroll:  _endskip
2744                          ;*Macro unroll:  STRUC_FWD
2744                CUR_ADR:   .SET   $   
2736                          .ORG   STRUC_TOP - 2   
2736   44 27                  DW   CUR_ADR   
2744                          .ORG   CUR_ADR   
2744                          ;*Macro unroll:  STRUC_POP
2744                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2744                STRUC_TOP:   .SET   STRUC_2   
2744                STRUC_2:   .SET   STRUC_3   
2744                STRUC_3:   .SET   STRUC_4   
2744                STRUC_4:   .SET   STRUC_5   
2744                STRUC_5:   .SET   STRUC_6   
2744                STRUC_6:   .SET   STRUC_7   
2744                STRUC_7:   .SET   STRUC_8   
2744                STRUC_8:   .SET   STRUC_9   
2744                STRUC_9:   .SET   STRUC_10   
2744                STRUC_10:   .SET   STRUC_11   
2744                STRUC_11:   .SET   STRUC_12   
2744                STRUC_12:   .SET   0   
2744                          ;*Macro unroll: INTERPRET
2744   CF                     RST   $08   
2745   4E 0B                  DW   interpret   
2747   86 0E                  DW   exit_forth   
2749                          ;*Macro unroll: EXPECT 100, "1 --> 100"
2749   CD 9D 09               CALL   printNum   
274C                          ;*Macro unroll:  loadWord H,L, B,C
274C   69                     LD   L,C   
274D   60                     LD   H,B   
274E   69                     LD   L,C   
274F                          ;*Macro unroll:  ppop0 B,C
274F   DD 2B                  DEC   IX   
2751   DD 46 00               LD   B,(IX+0)   
2754   DD 2B                  DEC   IX   
2756   DD 4E 00               LD   C,(IX+0)   
2759                          ;*Macro unroll:  CMP16 100
2759   11 64 00               LD   DE,100   
275C   B7                     OR   A   
275D   ED 52                  SBC   HL,DE   
275F                          ;*Macro unroll:  checkZeroWord H,L
275F   7D                     LD   A,L   
2760   B4                     OR   H   
2761   CA 7E 27               JP   z,tf_doneM_2372S100   
2764   11 EA 0F               LD   DE,FAILED   
2767   CD 52 11               CALL   printPStr   
276A   11 74 27               LD   DE,te_failM_2372S100   
276D   CD 52 11               CALL   printPStr   
2770   76                     HALT      
2771                          ;*Macro unroll:  _skip
2771   C3 71 27               JP   $   
2774                          ;*Macro unroll:  STRUC_PUSH $
2774                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2774                STRUC_12:   .SET   STRUC_11   
2774                STRUC_11:   .SET   STRUC_10   
2774                STRUC_10:   .SET   STRUC_9   
2774                STRUC_9:   .SET   STRUC_8   
2774                STRUC_8:   .SET   STRUC_7   
2774                STRUC_7:   .SET   STRUC_6   
2774                STRUC_6:   .SET   STRUC_5   
2774                STRUC_5:   .SET   STRUC_4   
2774                STRUC_4:   .SET   STRUC_3   
2774                STRUC_3:   .SET   STRUC_2   
2774                STRUC_2:   .SET   STRUC_TOP   
2774                STRUC_TOP:   .SET   $   
2774                TE_FAILM_2372S100:      
2774   09 31 20 2D 2D 3E 20 31 30 30 .PSTR   "1 --> 100"   
277E                          ;*Macro unroll:  _endskip
277E                          ;*Macro unroll:  STRUC_FWD
277E                CUR_ADR:   .SET   $   
2772                          .ORG   STRUC_TOP - 2   
2772   7E 27                  DW   CUR_ADR   
277E                          .ORG   CUR_ADR   
277E                          ;*Macro unroll:  STRUC_POP
277E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
277E                STRUC_TOP:   .SET   STRUC_2   
277E                STRUC_2:   .SET   STRUC_3   
277E                STRUC_3:   .SET   STRUC_4   
277E                STRUC_4:   .SET   STRUC_5   
277E                STRUC_5:   .SET   STRUC_6   
277E                STRUC_6:   .SET   STRUC_7   
277E                STRUC_7:   .SET   STRUC_8   
277E                STRUC_8:   .SET   STRUC_9   
277E                STRUC_9:   .SET   STRUC_10   
277E                STRUC_10:   .SET   STRUC_11   
277E                STRUC_11:   .SET   STRUC_12   
277E                STRUC_12:   .SET   0   
277E                TF_DONEM_2372S100:      
277E                          ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
277E   2A 45 30               LD   HL,(lineBufStart)   
2781   22 4B 30               LD   (lineBufTop),HL   
2784   22 49 30               LD   (currkey),HL   
2787   21 90 27               LD   HL,tst_textM_2373S102   
278A   22 61 32               LD   (char_pointer),HL   
278D                          ;*Macro unroll:  _skip
278D   C3 8D 27               JP   $   
2790                          ;*Macro unroll:  STRUC_PUSH $
2790                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2790                STRUC_12:   .SET   STRUC_11   
2790                STRUC_11:   .SET   STRUC_10   
2790                STRUC_10:   .SET   STRUC_9   
2790                STRUC_9:   .SET   STRUC_8   
2790                STRUC_8:   .SET   STRUC_7   
2790                STRUC_7:   .SET   STRUC_6   
2790                STRUC_6:   .SET   STRUC_5   
2790                STRUC_5:   .SET   STRUC_4   
2790                STRUC_4:   .SET   STRUC_3   
2790                STRUC_3:   .SET   STRUC_2   
2790                STRUC_2:   .SET   STRUC_TOP   
2790                STRUC_TOP:   .SET   $   
2790                TST_TEXTM_2373S102:      
2790   3A 20 74 65 73 74 6C 6F 6F 70 20 62 65 67 69 6E 20 64 75 70 20 35 20 3C 20 77 68 69 6C 65 20 64 75 70 20 2E 20 31 2B 20 72 65 70 65 61 74 20 3B 0D 0A FF 0D 0A DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
27C5                          ;*Macro unroll:  _endskip
27C5                          ;*Macro unroll:  STRUC_FWD
27C5                CUR_ADR:   .SET   $   
278E                          .ORG   STRUC_TOP - 2   
278E   C5 27                  DW   CUR_ADR   
27C5                          .ORG   CUR_ADR   
27C5                          ;*Macro unroll:  STRUC_POP
27C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27C5                STRUC_TOP:   .SET   STRUC_2   
27C5                STRUC_2:   .SET   STRUC_3   
27C5                STRUC_3:   .SET   STRUC_4   
27C5                STRUC_4:   .SET   STRUC_5   
27C5                STRUC_5:   .SET   STRUC_6   
27C5                STRUC_6:   .SET   STRUC_7   
27C5                STRUC_7:   .SET   STRUC_8   
27C5                STRUC_8:   .SET   STRUC_9   
27C5                STRUC_9:   .SET   STRUC_10   
27C5                STRUC_10:   .SET   STRUC_11   
27C5                STRUC_11:   .SET   STRUC_12   
27C5                STRUC_12:   .SET   0   
27C5                          ;*Macro unroll: INTERPRET
27C5   CF                     RST   $08   
27C6   4E 0B                  DW   interpret   
27C8   86 0E                  DW   exit_forth   
27CA                          ;*Macro unroll: ppushValue 0
27CA                          ;*Macro unroll:  ppush0 B,C
27CA   DD 71 00               LD   (IX+0),C   
27CD   DD 23                  INC   IX   
27CF   DD 70 00               LD   (IX+0),B   
27D2   DD 23                  INC   IX   
27D4   01 00 00               LD   BC,0   
27D7                          ;*Macro unroll: TEST_SET_TEXT "testloop"
27D7   2A 45 30               LD   HL,(lineBufStart)   
27DA   22 4B 30               LD   (lineBufTop),HL   
27DD   22 49 30               LD   (currkey),HL   
27E0   21 E9 27               LD   HL,tst_textM_2376S105   
27E3   22 61 32               LD   (char_pointer),HL   
27E6                          ;*Macro unroll:  _skip
27E6   C3 E6 27               JP   $   
27E9                          ;*Macro unroll:  STRUC_PUSH $
27E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
27E9                STRUC_12:   .SET   STRUC_11   
27E9                STRUC_11:   .SET   STRUC_10   
27E9                STRUC_10:   .SET   STRUC_9   
27E9                STRUC_9:   .SET   STRUC_8   
27E9                STRUC_8:   .SET   STRUC_7   
27E9                STRUC_7:   .SET   STRUC_6   
27E9                STRUC_6:   .SET   STRUC_5   
27E9                STRUC_5:   .SET   STRUC_4   
27E9                STRUC_4:   .SET   STRUC_3   
27E9                STRUC_3:   .SET   STRUC_2   
27E9                STRUC_2:   .SET   STRUC_TOP   
27E9                STRUC_TOP:   .SET   $   
27E9                TST_TEXTM_2376S105:      
27E9   74 65 73 74 6C 6F 6F 70 0D 0A FF 0D 0A DB   "testloop","\r\n",-1,"\r\n"   
27F6                          ;*Macro unroll:  _endskip
27F6                          ;*Macro unroll:  STRUC_FWD
27F6                CUR_ADR:   .SET   $   
27E7                          .ORG   STRUC_TOP - 2   
27E7   F6 27                  DW   CUR_ADR   
27F6                          .ORG   CUR_ADR   
27F6                          ;*Macro unroll:  STRUC_POP
27F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27F6                STRUC_TOP:   .SET   STRUC_2   
27F6                STRUC_2:   .SET   STRUC_3   
27F6                STRUC_3:   .SET   STRUC_4   
27F6                STRUC_4:   .SET   STRUC_5   
27F6                STRUC_5:   .SET   STRUC_6   
27F6                STRUC_6:   .SET   STRUC_7   
27F6                STRUC_7:   .SET   STRUC_8   
27F6                STRUC_8:   .SET   STRUC_9   
27F6                STRUC_9:   .SET   STRUC_10   
27F6                STRUC_10:   .SET   STRUC_11   
27F6                STRUC_11:   .SET   STRUC_12   
27F6                STRUC_12:   .SET   0   
27F6                          ;*Macro unroll: INTERPRET
27F6   CF                     RST   $08   
27F7   4E 0B                  DW   interpret   
27F9   86 0E                  DW   exit_forth   
27FB                          ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
27FB   CD 9D 09               CALL   printNum   
27FE                          ;*Macro unroll:  loadWord H,L, B,C
27FE   69                     LD   L,C   
27FF   60                     LD   H,B   
2800   69                     LD   L,C   
2801                          ;*Macro unroll:  ppop0 B,C
2801   DD 2B                  DEC   IX   
2803   DD 46 00               LD   B,(IX+0)   
2806   DD 2B                  DEC   IX   
2808   DD 4E 00               LD   C,(IX+0)   
280B                          ;*Macro unroll:  CMP16 5
280B   11 05 00               LD   DE,5   
280E   B7                     OR   A   
280F   ED 52                  SBC   HL,DE   
2811                          ;*Macro unroll:  checkZeroWord H,L
2811   7D                     LD   A,L   
2812   B4                     OR   H   
2813   CA 3B 28               JP   z,tf_doneM_2378S107   
2816   11 EA 0F               LD   DE,FAILED   
2819   CD 52 11               CALL   printPStr   
281C   11 26 28               LD   DE,te_failM_2378S107   
281F   CD 52 11               CALL   printPStr   
2822   76                     HALT      
2823                          ;*Macro unroll:  _skip
2823   C3 23 28               JP   $   
2826                          ;*Macro unroll:  STRUC_PUSH $
2826                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2826                STRUC_12:   .SET   STRUC_11   
2826                STRUC_11:   .SET   STRUC_10   
2826                STRUC_10:   .SET   STRUC_9   
2826                STRUC_9:   .SET   STRUC_8   
2826                STRUC_8:   .SET   STRUC_7   
2826                STRUC_7:   .SET   STRUC_6   
2826                STRUC_6:   .SET   STRUC_5   
2826                STRUC_5:   .SET   STRUC_4   
2826                STRUC_4:   .SET   STRUC_3   
2826                STRUC_3:   .SET   STRUC_2   
2826                STRUC_2:   .SET   STRUC_TOP   
2826                STRUC_TOP:   .SET   $   
2826                TE_FAILM_2378S107:      
2826   14 4C 6F 6F 70 20 75 6E 74 69 6C 20 6C 69 6D 69 74 20 3C 20 35 .PSTR   "Loop until limit < 5"   
283B                          ;*Macro unroll:  _endskip
283B                          ;*Macro unroll:  STRUC_FWD
283B                CUR_ADR:   .SET   $   
2824                          .ORG   STRUC_TOP - 2   
2824   3B 28                  DW   CUR_ADR   
283B                          .ORG   CUR_ADR   
283B                          ;*Macro unroll:  STRUC_POP
283B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
283B                STRUC_TOP:   .SET   STRUC_2   
283B                STRUC_2:   .SET   STRUC_3   
283B                STRUC_3:   .SET   STRUC_4   
283B                STRUC_4:   .SET   STRUC_5   
283B                STRUC_5:   .SET   STRUC_6   
283B                STRUC_6:   .SET   STRUC_7   
283B                STRUC_7:   .SET   STRUC_8   
283B                STRUC_8:   .SET   STRUC_9   
283B                STRUC_9:   .SET   STRUC_10   
283B                STRUC_10:   .SET   STRUC_11   
283B                STRUC_11:   .SET   STRUC_12   
283B                STRUC_12:   .SET   0   
283B                TF_DONEM_2378S107:      
283B                          ;*Macro unroll: TEST_SET_TEXT "100"
283B   2A 45 30               LD   HL,(lineBufStart)   
283E   22 4B 30               LD   (lineBufTop),HL   
2841   22 49 30               LD   (currkey),HL   
2844   21 4D 28               LD   HL,tst_textM_2379S110   
2847   22 61 32               LD   (char_pointer),HL   
284A                          ;*Macro unroll:  _skip
284A   C3 4A 28               JP   $   
284D                          ;*Macro unroll:  STRUC_PUSH $
284D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
284D                STRUC_12:   .SET   STRUC_11   
284D                STRUC_11:   .SET   STRUC_10   
284D                STRUC_10:   .SET   STRUC_9   
284D                STRUC_9:   .SET   STRUC_8   
284D                STRUC_8:   .SET   STRUC_7   
284D                STRUC_7:   .SET   STRUC_6   
284D                STRUC_6:   .SET   STRUC_5   
284D                STRUC_5:   .SET   STRUC_4   
284D                STRUC_4:   .SET   STRUC_3   
284D                STRUC_3:   .SET   STRUC_2   
284D                STRUC_2:   .SET   STRUC_TOP   
284D                STRUC_TOP:   .SET   $   
284D                TST_TEXTM_2379S110:      
284D   31 30 30 0D 0A FF 0D 0A DB   "100","\r\n",-1,"\r\n"   
2855                          ;*Macro unroll:  _endskip
2855                          ;*Macro unroll:  STRUC_FWD
2855                CUR_ADR:   .SET   $   
284B                          .ORG   STRUC_TOP - 2   
284B   55 28                  DW   CUR_ADR   
2855                          .ORG   CUR_ADR   
2855                          ;*Macro unroll:  STRUC_POP
2855                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2855                STRUC_TOP:   .SET   STRUC_2   
2855                STRUC_2:   .SET   STRUC_3   
2855                STRUC_3:   .SET   STRUC_4   
2855                STRUC_4:   .SET   STRUC_5   
2855                STRUC_5:   .SET   STRUC_6   
2855                STRUC_6:   .SET   STRUC_7   
2855                STRUC_7:   .SET   STRUC_8   
2855                STRUC_8:   .SET   STRUC_9   
2855                STRUC_9:   .SET   STRUC_10   
2855                STRUC_10:   .SET   STRUC_11   
2855                STRUC_11:   .SET   STRUC_12   
2855                STRUC_12:   .SET   0   
2855                          ;*Macro unroll: INTERPRET
2855   CF                     RST   $08   
2856   4E 0B                  DW   interpret   
2858   86 0E                  DW   exit_forth   
285A                          ;*Macro unroll: EXPECT 100, "interpret parse 100"
285A   CD 9D 09               CALL   printNum   
285D                          ;*Macro unroll:  loadWord H,L, B,C
285D   69                     LD   L,C   
285E   60                     LD   H,B   
285F   69                     LD   L,C   
2860                          ;*Macro unroll:  ppop0 B,C
2860   DD 2B                  DEC   IX   
2862   DD 46 00               LD   B,(IX+0)   
2865   DD 2B                  DEC   IX   
2867   DD 4E 00               LD   C,(IX+0)   
286A                          ;*Macro unroll:  CMP16 100
286A   11 64 00               LD   DE,100   
286D   B7                     OR   A   
286E   ED 52                  SBC   HL,DE   
2870                          ;*Macro unroll:  checkZeroWord H,L
2870   7D                     LD   A,L   
2871   B4                     OR   H   
2872   CA 99 28               JP   z,tf_doneM_2381S112   
2875   11 EA 0F               LD   DE,FAILED   
2878   CD 52 11               CALL   printPStr   
287B   11 85 28               LD   DE,te_failM_2381S112   
287E   CD 52 11               CALL   printPStr   
2881   76                     HALT      
2882                          ;*Macro unroll:  _skip
2882   C3 82 28               JP   $   
2885                          ;*Macro unroll:  STRUC_PUSH $
2885                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2885                STRUC_12:   .SET   STRUC_11   
2885                STRUC_11:   .SET   STRUC_10   
2885                STRUC_10:   .SET   STRUC_9   
2885                STRUC_9:   .SET   STRUC_8   
2885                STRUC_8:   .SET   STRUC_7   
2885                STRUC_7:   .SET   STRUC_6   
2885                STRUC_6:   .SET   STRUC_5   
2885                STRUC_5:   .SET   STRUC_4   
2885                STRUC_4:   .SET   STRUC_3   
2885                STRUC_3:   .SET   STRUC_2   
2885                STRUC_2:   .SET   STRUC_TOP   
2885                STRUC_TOP:   .SET   $   
2885                TE_FAILM_2381S112:      
2885   13 69 6E 74 65 72 70 72 65 74 20 70 61 72 73 65 20 31 30 30 .PSTR   "interpret parse 100"   
2899                          ;*Macro unroll:  _endskip
2899                          ;*Macro unroll:  STRUC_FWD
2899                CUR_ADR:   .SET   $   
2883                          .ORG   STRUC_TOP - 2   
2883   99 28                  DW   CUR_ADR   
2899                          .ORG   CUR_ADR   
2899                          ;*Macro unroll:  STRUC_POP
2899                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2899                STRUC_TOP:   .SET   STRUC_2   
2899                STRUC_2:   .SET   STRUC_3   
2899                STRUC_3:   .SET   STRUC_4   
2899                STRUC_4:   .SET   STRUC_5   
2899                STRUC_5:   .SET   STRUC_6   
2899                STRUC_6:   .SET   STRUC_7   
2899                STRUC_7:   .SET   STRUC_8   
2899                STRUC_8:   .SET   STRUC_9   
2899                STRUC_9:   .SET   STRUC_10   
2899                STRUC_10:   .SET   STRUC_11   
2899                STRUC_11:   .SET   STRUC_12   
2899                STRUC_12:   .SET   0   
2899                TF_DONEM_2381S112:      
2899                          ;*Macro unroll: TEST_SET_TEXT "3 2 +"
2899   2A 45 30               LD   HL,(lineBufStart)   
289C   22 4B 30               LD   (lineBufTop),HL   
289F   22 49 30               LD   (currkey),HL   
28A2   21 AB 28               LD   HL,tst_textM_2382S114   
28A5   22 61 32               LD   (char_pointer),HL   
28A8                          ;*Macro unroll:  _skip
28A8   C3 A8 28               JP   $   
28AB                          ;*Macro unroll:  STRUC_PUSH $
28AB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28AB                STRUC_12:   .SET   STRUC_11   
28AB                STRUC_11:   .SET   STRUC_10   
28AB                STRUC_10:   .SET   STRUC_9   
28AB                STRUC_9:   .SET   STRUC_8   
28AB                STRUC_8:   .SET   STRUC_7   
28AB                STRUC_7:   .SET   STRUC_6   
28AB                STRUC_6:   .SET   STRUC_5   
28AB                STRUC_5:   .SET   STRUC_4   
28AB                STRUC_4:   .SET   STRUC_3   
28AB                STRUC_3:   .SET   STRUC_2   
28AB                STRUC_2:   .SET   STRUC_TOP   
28AB                STRUC_TOP:   .SET   $   
28AB                TST_TEXTM_2382S114:      
28AB   33 20 32 20 2B 0D 0A FF 0D 0A DB   "3 2 +","\r\n",-1,"\r\n"   
28B5                          ;*Macro unroll:  _endskip
28B5                          ;*Macro unroll:  STRUC_FWD
28B5                CUR_ADR:   .SET   $   
28A9                          .ORG   STRUC_TOP - 2   
28A9   B5 28                  DW   CUR_ADR   
28B5                          .ORG   CUR_ADR   
28B5                          ;*Macro unroll:  STRUC_POP
28B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28B5                STRUC_TOP:   .SET   STRUC_2   
28B5                STRUC_2:   .SET   STRUC_3   
28B5                STRUC_3:   .SET   STRUC_4   
28B5                STRUC_4:   .SET   STRUC_5   
28B5                STRUC_5:   .SET   STRUC_6   
28B5                STRUC_6:   .SET   STRUC_7   
28B5                STRUC_7:   .SET   STRUC_8   
28B5                STRUC_8:   .SET   STRUC_9   
28B5                STRUC_9:   .SET   STRUC_10   
28B5                STRUC_10:   .SET   STRUC_11   
28B5                STRUC_11:   .SET   STRUC_12   
28B5                STRUC_12:   .SET   0   
28B5                          ;*Macro unroll: INTERPRET
28B5   CF                     RST   $08   
28B6   4E 0B                  DW   interpret   
28B8   86 0E                  DW   exit_forth   
28BA                          ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
28BA   CD 9D 09               CALL   printNum   
28BD                          ;*Macro unroll:  loadWord H,L, B,C
28BD   69                     LD   L,C   
28BE   60                     LD   H,B   
28BF   69                     LD   L,C   
28C0                          ;*Macro unroll:  ppop0 B,C
28C0   DD 2B                  DEC   IX   
28C2   DD 46 00               LD   B,(IX+0)   
28C5   DD 2B                  DEC   IX   
28C7   DD 4E 00               LD   C,(IX+0)   
28CA                          ;*Macro unroll:  CMP16 5
28CA   11 05 00               LD   DE,5   
28CD   B7                     OR   A   
28CE   ED 52                  SBC   HL,DE   
28D0                          ;*Macro unroll:  checkZeroWord H,L
28D0   7D                     LD   A,L   
28D1   B4                     OR   H   
28D2   CA EF 28               JP   z,tf_doneM_2384S116   
28D5   11 EA 0F               LD   DE,FAILED   
28D8   CD 52 11               CALL   printPStr   
28DB   11 E5 28               LD   DE,te_failM_2384S116   
28DE   CD 52 11               CALL   printPStr   
28E1   76                     HALT      
28E2                          ;*Macro unroll:  _skip
28E2   C3 E2 28               JP   $   
28E5                          ;*Macro unroll:  STRUC_PUSH $
28E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28E5                STRUC_12:   .SET   STRUC_11   
28E5                STRUC_11:   .SET   STRUC_10   
28E5                STRUC_10:   .SET   STRUC_9   
28E5                STRUC_9:   .SET   STRUC_8   
28E5                STRUC_8:   .SET   STRUC_7   
28E5                STRUC_7:   .SET   STRUC_6   
28E5                STRUC_6:   .SET   STRUC_5   
28E5                STRUC_5:   .SET   STRUC_4   
28E5                STRUC_4:   .SET   STRUC_3   
28E5                STRUC_3:   .SET   STRUC_2   
28E5                STRUC_2:   .SET   STRUC_TOP   
28E5                STRUC_TOP:   .SET   $   
28E5                TE_FAILM_2384S116:      
28E5   09 33 20 2B 20 32 20 3D 20 35 .PSTR   "3 + 2 = 5"   
28EF                          ;*Macro unroll:  _endskip
28EF                          ;*Macro unroll:  STRUC_FWD
28EF                CUR_ADR:   .SET   $   
28E3                          .ORG   STRUC_TOP - 2   
28E3   EF 28                  DW   CUR_ADR   
28EF                          .ORG   CUR_ADR   
28EF                          ;*Macro unroll:  STRUC_POP
28EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28EF                STRUC_TOP:   .SET   STRUC_2   
28EF                STRUC_2:   .SET   STRUC_3   
28EF                STRUC_3:   .SET   STRUC_4   
28EF                STRUC_4:   .SET   STRUC_5   
28EF                STRUC_5:   .SET   STRUC_6   
28EF                STRUC_6:   .SET   STRUC_7   
28EF                STRUC_7:   .SET   STRUC_8   
28EF                STRUC_8:   .SET   STRUC_9   
28EF                STRUC_9:   .SET   STRUC_10   
28EF                STRUC_10:   .SET   STRUC_11   
28EF                STRUC_11:   .SET   STRUC_12   
28EF                STRUC_12:   .SET   0   
28EF                TF_DONEM_2384S116:      
28EF                          ;*Macro unroll: TEST_SET_TEXT ": add + ;"
28EF   2A 45 30               LD   HL,(lineBufStart)   
28F2   22 4B 30               LD   (lineBufTop),HL   
28F5   22 49 30               LD   (currkey),HL   
28F8   21 01 29               LD   HL,tst_textM_2385S118   
28FB   22 61 32               LD   (char_pointer),HL   
28FE                          ;*Macro unroll:  _skip
28FE   C3 FE 28               JP   $   
2901                          ;*Macro unroll:  STRUC_PUSH $
2901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2901                STRUC_12:   .SET   STRUC_11   
2901                STRUC_11:   .SET   STRUC_10   
2901                STRUC_10:   .SET   STRUC_9   
2901                STRUC_9:   .SET   STRUC_8   
2901                STRUC_8:   .SET   STRUC_7   
2901                STRUC_7:   .SET   STRUC_6   
2901                STRUC_6:   .SET   STRUC_5   
2901                STRUC_5:   .SET   STRUC_4   
2901                STRUC_4:   .SET   STRUC_3   
2901                STRUC_3:   .SET   STRUC_2   
2901                STRUC_2:   .SET   STRUC_TOP   
2901                STRUC_TOP:   .SET   $   
2901                TST_TEXTM_2385S118:      
2901   3A 20 61 64 64 20 2B 20 3B 0D 0A FF 0D 0A DB   ": add + ;","\r\n",-1,"\r\n"   
290F                          ;*Macro unroll:  _endskip
290F                          ;*Macro unroll:  STRUC_FWD
290F                CUR_ADR:   .SET   $   
28FF                          .ORG   STRUC_TOP - 2   
28FF   0F 29                  DW   CUR_ADR   
290F                          .ORG   CUR_ADR   
290F                          ;*Macro unroll:  STRUC_POP
290F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
290F                STRUC_TOP:   .SET   STRUC_2   
290F                STRUC_2:   .SET   STRUC_3   
290F                STRUC_3:   .SET   STRUC_4   
290F                STRUC_4:   .SET   STRUC_5   
290F                STRUC_5:   .SET   STRUC_6   
290F                STRUC_6:   .SET   STRUC_7   
290F                STRUC_7:   .SET   STRUC_8   
290F                STRUC_8:   .SET   STRUC_9   
290F                STRUC_9:   .SET   STRUC_10   
290F                STRUC_10:   .SET   STRUC_11   
290F                STRUC_11:   .SET   STRUC_12   
290F                STRUC_12:   .SET   0   
290F                          ;*Macro unroll: INTERPRET
290F   CF                     RST   $08   
2910   4E 0B                  DW   interpret   
2912   86 0E                  DW   exit_forth   
2914                          ;*Macro unroll: ppushValue 2
2914                          ;*Macro unroll:  ppush0 B,C
2914   DD 71 00               LD   (IX+0),C   
2917   DD 23                  INC   IX   
2919   DD 70 00               LD   (IX+0),B   
291C   DD 23                  INC   IX   
291E   01 02 00               LD   BC,2   
2921                          ;*Macro unroll: ppushValue 2
2921                          ;*Macro unroll:  ppush0 B,C
2921   DD 71 00               LD   (IX+0),C   
2924   DD 23                  INC   IX   
2926   DD 70 00               LD   (IX+0),B   
2929   DD 23                  INC   IX   
292B   01 02 00               LD   BC,2   
292E                          ;*Macro unroll: TEST_SET_TEXT "add"
292E   2A 45 30               LD   HL,(lineBufStart)   
2931   22 4B 30               LD   (lineBufTop),HL   
2934   22 49 30               LD   (currkey),HL   
2937   21 40 29               LD   HL,tst_textM_2389S123   
293A   22 61 32               LD   (char_pointer),HL   
293D                          ;*Macro unroll:  _skip
293D   C3 3D 29               JP   $   
2940                          ;*Macro unroll:  STRUC_PUSH $
2940                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2940                STRUC_12:   .SET   STRUC_11   
2940                STRUC_11:   .SET   STRUC_10   
2940                STRUC_10:   .SET   STRUC_9   
2940                STRUC_9:   .SET   STRUC_8   
2940                STRUC_8:   .SET   STRUC_7   
2940                STRUC_7:   .SET   STRUC_6   
2940                STRUC_6:   .SET   STRUC_5   
2940                STRUC_5:   .SET   STRUC_4   
2940                STRUC_4:   .SET   STRUC_3   
2940                STRUC_3:   .SET   STRUC_2   
2940                STRUC_2:   .SET   STRUC_TOP   
2940                STRUC_TOP:   .SET   $   
2940                TST_TEXTM_2389S123:      
2940   61 64 64 0D 0A FF 0D 0A DB   "add","\r\n",-1,"\r\n"   
2948                          ;*Macro unroll:  _endskip
2948                          ;*Macro unroll:  STRUC_FWD
2948                CUR_ADR:   .SET   $   
293E                          .ORG   STRUC_TOP - 2   
293E   48 29                  DW   CUR_ADR   
2948                          .ORG   CUR_ADR   
2948                          ;*Macro unroll:  STRUC_POP
2948                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2948                STRUC_TOP:   .SET   STRUC_2   
2948                STRUC_2:   .SET   STRUC_3   
2948                STRUC_3:   .SET   STRUC_4   
2948                STRUC_4:   .SET   STRUC_5   
2948                STRUC_5:   .SET   STRUC_6   
2948                STRUC_6:   .SET   STRUC_7   
2948                STRUC_7:   .SET   STRUC_8   
2948                STRUC_8:   .SET   STRUC_9   
2948                STRUC_9:   .SET   STRUC_10   
2948                STRUC_10:   .SET   STRUC_11   
2948                STRUC_11:   .SET   STRUC_12   
2948                STRUC_12:   .SET   0   
2948                          ;*Macro unroll: INTERPRET
2948   CF                     RST   $08   
2949   4E 0B                  DW   interpret   
294B   86 0E                  DW   exit_forth   
294D                          ;*Macro unroll: EXPECT 4, "2 2 add = 4"
294D   CD 9D 09               CALL   printNum   
2950                          ;*Macro unroll:  loadWord H,L, B,C
2950   69                     LD   L,C   
2951   60                     LD   H,B   
2952   69                     LD   L,C   
2953                          ;*Macro unroll:  ppop0 B,C
2953   DD 2B                  DEC   IX   
2955   DD 46 00               LD   B,(IX+0)   
2958   DD 2B                  DEC   IX   
295A   DD 4E 00               LD   C,(IX+0)   
295D                          ;*Macro unroll:  CMP16 4
295D   11 04 00               LD   DE,4   
2960   B7                     OR   A   
2961   ED 52                  SBC   HL,DE   
2963                          ;*Macro unroll:  checkZeroWord H,L
2963   7D                     LD   A,L   
2964   B4                     OR   H   
2965   CA 84 29               JP   z,tf_doneM_2391S125   
2968   11 EA 0F               LD   DE,FAILED   
296B   CD 52 11               CALL   printPStr   
296E   11 78 29               LD   DE,te_failM_2391S125   
2971   CD 52 11               CALL   printPStr   
2974   76                     HALT      
2975                          ;*Macro unroll:  _skip
2975   C3 75 29               JP   $   
2978                          ;*Macro unroll:  STRUC_PUSH $
2978                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2978                STRUC_12:   .SET   STRUC_11   
2978                STRUC_11:   .SET   STRUC_10   
2978                STRUC_10:   .SET   STRUC_9   
2978                STRUC_9:   .SET   STRUC_8   
2978                STRUC_8:   .SET   STRUC_7   
2978                STRUC_7:   .SET   STRUC_6   
2978                STRUC_6:   .SET   STRUC_5   
2978                STRUC_5:   .SET   STRUC_4   
2978                STRUC_4:   .SET   STRUC_3   
2978                STRUC_3:   .SET   STRUC_2   
2978                STRUC_2:   .SET   STRUC_TOP   
2978                STRUC_TOP:   .SET   $   
2978                TE_FAILM_2391S125:      
2978   0B 32 20 32 20 61 64 64 20 3D 20 34 .PSTR   "2 2 add = 4"   
2984                          ;*Macro unroll:  _endskip
2984                          ;*Macro unroll:  STRUC_FWD
2984                CUR_ADR:   .SET   $   
2976                          .ORG   STRUC_TOP - 2   
2976   84 29                  DW   CUR_ADR   
2984                          .ORG   CUR_ADR   
2984                          ;*Macro unroll:  STRUC_POP
2984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2984                STRUC_TOP:   .SET   STRUC_2   
2984                STRUC_2:   .SET   STRUC_3   
2984                STRUC_3:   .SET   STRUC_4   
2984                STRUC_4:   .SET   STRUC_5   
2984                STRUC_5:   .SET   STRUC_6   
2984                STRUC_6:   .SET   STRUC_7   
2984                STRUC_7:   .SET   STRUC_8   
2984                STRUC_8:   .SET   STRUC_9   
2984                STRUC_9:   .SET   STRUC_10   
2984                STRUC_10:   .SET   STRUC_11   
2984                STRUC_11:   .SET   STRUC_12   
2984                STRUC_12:   .SET   0   
2984                TF_DONEM_2391S125:      
2984                          ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
2984   2A 45 30               LD   HL,(lineBufStart)   
2987   22 4B 30               LD   (lineBufTop),HL   
298A   22 49 30               LD   (currkey),HL   
298D   21 96 29               LD   HL,tst_textM_2392S127   
2990   22 61 32               LD   (char_pointer),HL   
2993                          ;*Macro unroll:  _skip
2993   C3 93 29               JP   $   
2996                          ;*Macro unroll:  STRUC_PUSH $
2996                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2996                STRUC_12:   .SET   STRUC_11   
2996                STRUC_11:   .SET   STRUC_10   
2996                STRUC_10:   .SET   STRUC_9   
2996                STRUC_9:   .SET   STRUC_8   
2996                STRUC_8:   .SET   STRUC_7   
2996                STRUC_7:   .SET   STRUC_6   
2996                STRUC_6:   .SET   STRUC_5   
2996                STRUC_5:   .SET   STRUC_4   
2996                STRUC_4:   .SET   STRUC_3   
2996                STRUC_3:   .SET   STRUC_2   
2996                STRUC_2:   .SET   STRUC_TOP   
2996                STRUC_TOP:   .SET   $   
2996                TST_TEXTM_2392S127:      
2996   3A 20 64 75 6D 70 20 31 36 20 62 61 73 65 20 21 20 6F 76 65 72 20 2B 20 73 77 61 70 20 62 65 67 69 6E 20 6F 76 65 72 20 6F 76 65 72 20 73 77 61 70 20 3C 20 77 68 69 6C 65 20 64 75 70 20 37 20 61 6E 64 20 30 3D 20 69 66 20 63 72 20 64 75 70 20 2E 20 65 6E 64 69 66 20 64 75 70 20 63 40 20 2E 20 31 2B 20 72 65 70 65 61 74 20 63 72 20 31 30 20 62 61 73 65 20 21 20 3B 0D 0A FF 0D 0A DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
2A15                          ;*Macro unroll:  _endskip
2A15                          ;*Macro unroll:  STRUC_FWD
2A15                CUR_ADR:   .SET   $   
2994                          .ORG   STRUC_TOP - 2   
2994   15 2A                  DW   CUR_ADR   
2A15                          .ORG   CUR_ADR   
2A15                          ;*Macro unroll:  STRUC_POP
2A15                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A15                STRUC_TOP:   .SET   STRUC_2   
2A15                STRUC_2:   .SET   STRUC_3   
2A15                STRUC_3:   .SET   STRUC_4   
2A15                STRUC_4:   .SET   STRUC_5   
2A15                STRUC_5:   .SET   STRUC_6   
2A15                STRUC_6:   .SET   STRUC_7   
2A15                STRUC_7:   .SET   STRUC_8   
2A15                STRUC_8:   .SET   STRUC_9   
2A15                STRUC_9:   .SET   STRUC_10   
2A15                STRUC_10:   .SET   STRUC_11   
2A15                STRUC_11:   .SET   STRUC_12   
2A15                STRUC_12:   .SET   0   
2A15                          ;*Macro unroll: INTERPRET
2A15   CF                     RST   $08   
2A16   4E 0B                  DW   interpret   
2A18   86 0E                  DW   exit_forth   
2A1A                          ;*Macro unroll: TEST_SET_TEXT "dump"
2A1A   2A 45 30               LD   HL,(lineBufStart)   
2A1D   22 4B 30               LD   (lineBufTop),HL   
2A20   22 49 30               LD   (currkey),HL   
2A23   21 2C 2A               LD   HL,tst_textM_2394S130   
2A26   22 61 32               LD   (char_pointer),HL   
2A29                          ;*Macro unroll:  _skip
2A29   C3 29 2A               JP   $   
2A2C                          ;*Macro unroll:  STRUC_PUSH $
2A2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A2C                STRUC_12:   .SET   STRUC_11   
2A2C                STRUC_11:   .SET   STRUC_10   
2A2C                STRUC_10:   .SET   STRUC_9   
2A2C                STRUC_9:   .SET   STRUC_8   
2A2C                STRUC_8:   .SET   STRUC_7   
2A2C                STRUC_7:   .SET   STRUC_6   
2A2C                STRUC_6:   .SET   STRUC_5   
2A2C                STRUC_5:   .SET   STRUC_4   
2A2C                STRUC_4:   .SET   STRUC_3   
2A2C                STRUC_3:   .SET   STRUC_2   
2A2C                STRUC_2:   .SET   STRUC_TOP   
2A2C                STRUC_TOP:   .SET   $   
2A2C                TST_TEXTM_2394S130:      
2A2C   64 75 6D 70 0D 0A FF 0D 0A DB   "dump","\r\n",-1,"\r\n"   
2A35                          ;*Macro unroll:  _endskip
2A35                          ;*Macro unroll:  STRUC_FWD
2A35                CUR_ADR:   .SET   $   
2A2A                          .ORG   STRUC_TOP - 2   
2A2A   35 2A                  DW   CUR_ADR   
2A35                          .ORG   CUR_ADR   
2A35                          ;*Macro unroll:  STRUC_POP
2A35                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A35                STRUC_TOP:   .SET   STRUC_2   
2A35                STRUC_2:   .SET   STRUC_3   
2A35                STRUC_3:   .SET   STRUC_4   
2A35                STRUC_4:   .SET   STRUC_5   
2A35                STRUC_5:   .SET   STRUC_6   
2A35                STRUC_6:   .SET   STRUC_7   
2A35                STRUC_7:   .SET   STRUC_8   
2A35                STRUC_8:   .SET   STRUC_9   
2A35                STRUC_9:   .SET   STRUC_10   
2A35                STRUC_10:   .SET   STRUC_11   
2A35                STRUC_11:   .SET   STRUC_12   
2A35                STRUC_12:   .SET   0   
2A35                          ;*Macro unroll: INTERPRET
2A35   CF                     RST   $08   
2A36   4E 0B                  DW   interpret   
2A38   86 0E                  DW   exit_forth   
2A3A                          ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
2A3A   2A 45 30               LD   HL,(lineBufStart)   
2A3D   22 4B 30               LD   (lineBufTop),HL   
2A40   22 49 30               LD   (currkey),HL   
2A43   21 4C 2A               LD   HL,tst_textM_2396S133   
2A46   22 61 32               LD   (char_pointer),HL   
2A49                          ;*Macro unroll:  _skip
2A49   C3 49 2A               JP   $   
2A4C                          ;*Macro unroll:  STRUC_PUSH $
2A4C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A4C                STRUC_12:   .SET   STRUC_11   
2A4C                STRUC_11:   .SET   STRUC_10   
2A4C                STRUC_10:   .SET   STRUC_9   
2A4C                STRUC_9:   .SET   STRUC_8   
2A4C                STRUC_8:   .SET   STRUC_7   
2A4C                STRUC_7:   .SET   STRUC_6   
2A4C                STRUC_6:   .SET   STRUC_5   
2A4C                STRUC_5:   .SET   STRUC_4   
2A4C                STRUC_4:   .SET   STRUC_3   
2A4C                STRUC_3:   .SET   STRUC_2   
2A4C                STRUC_2:   .SET   STRUC_TOP   
2A4C                STRUC_TOP:   .SET   $   
2A4C                TST_TEXTM_2396S133:      
2A4C   3A 20 73 74 72 20 73 22 20 78 79 7A 22 20 3B 0D 0A FF 0D 0A DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
2A60                          ;*Macro unroll:  _endskip
2A60                          ;*Macro unroll:  STRUC_FWD
2A60                CUR_ADR:   .SET   $   
2A4A                          .ORG   STRUC_TOP - 2   
2A4A   60 2A                  DW   CUR_ADR   
2A60                          .ORG   CUR_ADR   
2A60                          ;*Macro unroll:  STRUC_POP
2A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A60                STRUC_TOP:   .SET   STRUC_2   
2A60                STRUC_2:   .SET   STRUC_3   
2A60                STRUC_3:   .SET   STRUC_4   
2A60                STRUC_4:   .SET   STRUC_5   
2A60                STRUC_5:   .SET   STRUC_6   
2A60                STRUC_6:   .SET   STRUC_7   
2A60                STRUC_7:   .SET   STRUC_8   
2A60                STRUC_8:   .SET   STRUC_9   
2A60                STRUC_9:   .SET   STRUC_10   
2A60                STRUC_10:   .SET   STRUC_11   
2A60                STRUC_11:   .SET   STRUC_12   
2A60                STRUC_12:   .SET   0   
2A60                          ;*Macro unroll: INTERPRET
2A60   CF                     RST   $08   
2A61   4E 0B                  DW   interpret   
2A63   86 0E                  DW   exit_forth   
2A65                          ;*Macro unroll: TEST_SET_TEXT "str type"
2A65   2A 45 30               LD   HL,(lineBufStart)   
2A68   22 4B 30               LD   (lineBufTop),HL   
2A6B   22 49 30               LD   (currkey),HL   
2A6E   21 77 2A               LD   HL,tst_textM_2398S135   
2A71   22 61 32               LD   (char_pointer),HL   
2A74                          ;*Macro unroll:  _skip
2A74   C3 74 2A               JP   $   
2A77                          ;*Macro unroll:  STRUC_PUSH $
2A77                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A77                STRUC_12:   .SET   STRUC_11   
2A77                STRUC_11:   .SET   STRUC_10   
2A77                STRUC_10:   .SET   STRUC_9   
2A77                STRUC_9:   .SET   STRUC_8   
2A77                STRUC_8:   .SET   STRUC_7   
2A77                STRUC_7:   .SET   STRUC_6   
2A77                STRUC_6:   .SET   STRUC_5   
2A77                STRUC_5:   .SET   STRUC_4   
2A77                STRUC_4:   .SET   STRUC_3   
2A77                STRUC_3:   .SET   STRUC_2   
2A77                STRUC_2:   .SET   STRUC_TOP   
2A77                STRUC_TOP:   .SET   $   
2A77                TST_TEXTM_2398S135:      
2A77   73 74 72 20 74 79 70 65 0D 0A FF 0D 0A DB   "str type","\r\n",-1,"\r\n"   
2A84                          ;*Macro unroll:  _endskip
2A84                          ;*Macro unroll:  STRUC_FWD
2A84                CUR_ADR:   .SET   $   
2A75                          .ORG   STRUC_TOP - 2   
2A75   84 2A                  DW   CUR_ADR   
2A84                          .ORG   CUR_ADR   
2A84                          ;*Macro unroll:  STRUC_POP
2A84                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A84                STRUC_TOP:   .SET   STRUC_2   
2A84                STRUC_2:   .SET   STRUC_3   
2A84                STRUC_3:   .SET   STRUC_4   
2A84                STRUC_4:   .SET   STRUC_5   
2A84                STRUC_5:   .SET   STRUC_6   
2A84                STRUC_6:   .SET   STRUC_7   
2A84                STRUC_7:   .SET   STRUC_8   
2A84                STRUC_8:   .SET   STRUC_9   
2A84                STRUC_9:   .SET   STRUC_10   
2A84                STRUC_10:   .SET   STRUC_11   
2A84                STRUC_11:   .SET   STRUC_12   
2A84                STRUC_12:   .SET   0   
2A84                          ;*Macro unroll: INTERPRET
2A84   CF                     RST   $08   
2A85   4E 0B                  DW   interpret   
2A87   86 0E                  DW   exit_forth   
2A89                          ;*Macro unroll: TEST_SET_TEXT "str"
2A89   2A 45 30               LD   HL,(lineBufStart)   
2A8C   22 4B 30               LD   (lineBufTop),HL   
2A8F   22 49 30               LD   (currkey),HL   
2A92   21 9B 2A               LD   HL,tst_textM_2400S137   
2A95   22 61 32               LD   (char_pointer),HL   
2A98                          ;*Macro unroll:  _skip
2A98   C3 98 2A               JP   $   
2A9B                          ;*Macro unroll:  STRUC_PUSH $
2A9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A9B                STRUC_12:   .SET   STRUC_11   
2A9B                STRUC_11:   .SET   STRUC_10   
2A9B                STRUC_10:   .SET   STRUC_9   
2A9B                STRUC_9:   .SET   STRUC_8   
2A9B                STRUC_8:   .SET   STRUC_7   
2A9B                STRUC_7:   .SET   STRUC_6   
2A9B                STRUC_6:   .SET   STRUC_5   
2A9B                STRUC_5:   .SET   STRUC_4   
2A9B                STRUC_4:   .SET   STRUC_3   
2A9B                STRUC_3:   .SET   STRUC_2   
2A9B                STRUC_2:   .SET   STRUC_TOP   
2A9B                STRUC_TOP:   .SET   $   
2A9B                TST_TEXTM_2400S137:      
2A9B   73 74 72 0D 0A FF 0D 0A DB   "str","\r\n",-1,"\r\n"   
2AA3                          ;*Macro unroll:  _endskip
2AA3                          ;*Macro unroll:  STRUC_FWD
2AA3                CUR_ADR:   .SET   $   
2A99                          .ORG   STRUC_TOP - 2   
2A99   A3 2A                  DW   CUR_ADR   
2AA3                          .ORG   CUR_ADR   
2AA3                          ;*Macro unroll:  STRUC_POP
2AA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AA3                STRUC_TOP:   .SET   STRUC_2   
2AA3                STRUC_2:   .SET   STRUC_3   
2AA3                STRUC_3:   .SET   STRUC_4   
2AA3                STRUC_4:   .SET   STRUC_5   
2AA3                STRUC_5:   .SET   STRUC_6   
2AA3                STRUC_6:   .SET   STRUC_7   
2AA3                STRUC_7:   .SET   STRUC_8   
2AA3                STRUC_8:   .SET   STRUC_9   
2AA3                STRUC_9:   .SET   STRUC_10   
2AA3                STRUC_10:   .SET   STRUC_11   
2AA3                STRUC_11:   .SET   STRUC_12   
2AA3                STRUC_12:   .SET   0   
2AA3                          ;*Macro unroll: INTERPRET
2AA3   CF                     RST   $08   
2AA4   4E 0B                  DW   interpret   
2AA6   86 0E                  DW   exit_forth   
2AA8                          ;*Macro unroll: EXPECT 3, "str len = 3"
2AA8   CD 9D 09               CALL   printNum   
2AAB                          ;*Macro unroll:  loadWord H,L, B,C
2AAB   69                     LD   L,C   
2AAC   60                     LD   H,B   
2AAD   69                     LD   L,C   
2AAE                          ;*Macro unroll:  ppop0 B,C
2AAE   DD 2B                  DEC   IX   
2AB0   DD 46 00               LD   B,(IX+0)   
2AB3   DD 2B                  DEC   IX   
2AB5   DD 4E 00               LD   C,(IX+0)   
2AB8                          ;*Macro unroll:  CMP16 3
2AB8   11 03 00               LD   DE,3   
2ABB   B7                     OR   A   
2ABC   ED 52                  SBC   HL,DE   
2ABE                          ;*Macro unroll:  checkZeroWord H,L
2ABE   7D                     LD   A,L   
2ABF   B4                     OR   H   
2AC0   CA DF 2A               JP   z,tf_doneM_2402S139   
2AC3   11 EA 0F               LD   DE,FAILED   
2AC6   CD 52 11               CALL   printPStr   
2AC9   11 D3 2A               LD   DE,te_failM_2402S139   
2ACC   CD 52 11               CALL   printPStr   
2ACF   76                     HALT      
2AD0                          ;*Macro unroll:  _skip
2AD0   C3 D0 2A               JP   $   
2AD3                          ;*Macro unroll:  STRUC_PUSH $
2AD3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AD3                STRUC_12:   .SET   STRUC_11   
2AD3                STRUC_11:   .SET   STRUC_10   
2AD3                STRUC_10:   .SET   STRUC_9   
2AD3                STRUC_9:   .SET   STRUC_8   
2AD3                STRUC_8:   .SET   STRUC_7   
2AD3                STRUC_7:   .SET   STRUC_6   
2AD3                STRUC_6:   .SET   STRUC_5   
2AD3                STRUC_5:   .SET   STRUC_4   
2AD3                STRUC_4:   .SET   STRUC_3   
2AD3                STRUC_3:   .SET   STRUC_2   
2AD3                STRUC_2:   .SET   STRUC_TOP   
2AD3                STRUC_TOP:   .SET   $   
2AD3                TE_FAILM_2402S139:      
2AD3   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2ADF                          ;*Macro unroll:  _endskip
2ADF                          ;*Macro unroll:  STRUC_FWD
2ADF                CUR_ADR:   .SET   $   
2AD1                          .ORG   STRUC_TOP - 2   
2AD1   DF 2A                  DW   CUR_ADR   
2ADF                          .ORG   CUR_ADR   
2ADF                          ;*Macro unroll:  STRUC_POP
2ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2ADF                STRUC_TOP:   .SET   STRUC_2   
2ADF                STRUC_2:   .SET   STRUC_3   
2ADF                STRUC_3:   .SET   STRUC_4   
2ADF                STRUC_4:   .SET   STRUC_5   
2ADF                STRUC_5:   .SET   STRUC_6   
2ADF                STRUC_6:   .SET   STRUC_7   
2ADF                STRUC_7:   .SET   STRUC_8   
2ADF                STRUC_8:   .SET   STRUC_9   
2ADF                STRUC_9:   .SET   STRUC_10   
2ADF                STRUC_10:   .SET   STRUC_11   
2ADF                STRUC_11:   .SET   STRUC_12   
2ADF                STRUC_12:   .SET   0   
2ADF                TF_DONEM_2402S139:      
2ADF                          ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
2ADF   2A 45 30               LD   HL,(lineBufStart)   
2AE2   22 4B 30               LD   (lineBufTop),HL   
2AE5   22 49 30               LD   (currkey),HL   
2AE8   21 F1 2A               LD   HL,tst_textM_2403S141   
2AEB   22 61 32               LD   (char_pointer),HL   
2AEE                          ;*Macro unroll:  _skip
2AEE   C3 EE 2A               JP   $   
2AF1                          ;*Macro unroll:  STRUC_PUSH $
2AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AF1                STRUC_12:   .SET   STRUC_11   
2AF1                STRUC_11:   .SET   STRUC_10   
2AF1                STRUC_10:   .SET   STRUC_9   
2AF1                STRUC_9:   .SET   STRUC_8   
2AF1                STRUC_8:   .SET   STRUC_7   
2AF1                STRUC_7:   .SET   STRUC_6   
2AF1                STRUC_6:   .SET   STRUC_5   
2AF1                STRUC_5:   .SET   STRUC_4   
2AF1                STRUC_4:   .SET   STRUC_3   
2AF1                STRUC_3:   .SET   STRUC_2   
2AF1                STRUC_2:   .SET   STRUC_TOP   
2AF1                STRUC_TOP:   .SET   $   
2AF1                TST_TEXTM_2403S141:      
2AF1   22 20 78 79 7A 22 0D 0A FF 0D 0A DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
2AFC                          ;*Macro unroll:  _endskip
2AFC                          ;*Macro unroll:  STRUC_FWD
2AFC                CUR_ADR:   .SET   $   
2AEF                          .ORG   STRUC_TOP - 2   
2AEF   FC 2A                  DW   CUR_ADR   
2AFC                          .ORG   CUR_ADR   
2AFC                          ;*Macro unroll:  STRUC_POP
2AFC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AFC                STRUC_TOP:   .SET   STRUC_2   
2AFC                STRUC_2:   .SET   STRUC_3   
2AFC                STRUC_3:   .SET   STRUC_4   
2AFC                STRUC_4:   .SET   STRUC_5   
2AFC                STRUC_5:   .SET   STRUC_6   
2AFC                STRUC_6:   .SET   STRUC_7   
2AFC                STRUC_7:   .SET   STRUC_8   
2AFC                STRUC_8:   .SET   STRUC_9   
2AFC                STRUC_9:   .SET   STRUC_10   
2AFC                STRUC_10:   .SET   STRUC_11   
2AFC                STRUC_11:   .SET   STRUC_12   
2AFC                STRUC_12:   .SET   0   
2AFC                          ;*Macro unroll: INTERPRET
2AFC   CF                     RST   $08   
2AFD   4E 0B                  DW   interpret   
2AFF   86 0E                  DW   exit_forth   
2B01                          ;*Macro unroll: TEST_SET_TEXT "dup"
2B01   2A 45 30               LD   HL,(lineBufStart)   
2B04   22 4B 30               LD   (lineBufTop),HL   
2B07   22 49 30               LD   (currkey),HL   
2B0A   21 13 2B               LD   HL,tst_textM_2405S143   
2B0D   22 61 32               LD   (char_pointer),HL   
2B10                          ;*Macro unroll:  _skip
2B10   C3 10 2B               JP   $   
2B13                          ;*Macro unroll:  STRUC_PUSH $
2B13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B13                STRUC_12:   .SET   STRUC_11   
2B13                STRUC_11:   .SET   STRUC_10   
2B13                STRUC_10:   .SET   STRUC_9   
2B13                STRUC_9:   .SET   STRUC_8   
2B13                STRUC_8:   .SET   STRUC_7   
2B13                STRUC_7:   .SET   STRUC_6   
2B13                STRUC_6:   .SET   STRUC_5   
2B13                STRUC_5:   .SET   STRUC_4   
2B13                STRUC_4:   .SET   STRUC_3   
2B13                STRUC_3:   .SET   STRUC_2   
2B13                STRUC_2:   .SET   STRUC_TOP   
2B13                STRUC_TOP:   .SET   $   
2B13                TST_TEXTM_2405S143:      
2B13   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
2B1B                          ;*Macro unroll:  _endskip
2B1B                          ;*Macro unroll:  STRUC_FWD
2B1B                CUR_ADR:   .SET   $   
2B11                          .ORG   STRUC_TOP - 2   
2B11   1B 2B                  DW   CUR_ADR   
2B1B                          .ORG   CUR_ADR   
2B1B                          ;*Macro unroll:  STRUC_POP
2B1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B1B                STRUC_TOP:   .SET   STRUC_2   
2B1B                STRUC_2:   .SET   STRUC_3   
2B1B                STRUC_3:   .SET   STRUC_4   
2B1B                STRUC_4:   .SET   STRUC_5   
2B1B                STRUC_5:   .SET   STRUC_6   
2B1B                STRUC_6:   .SET   STRUC_7   
2B1B                STRUC_7:   .SET   STRUC_8   
2B1B                STRUC_8:   .SET   STRUC_9   
2B1B                STRUC_9:   .SET   STRUC_10   
2B1B                STRUC_10:   .SET   STRUC_11   
2B1B                STRUC_11:   .SET   STRUC_12   
2B1B                STRUC_12:   .SET   0   
2B1B                          ;*Macro unroll: INTERPRET
2B1B   CF                     RST   $08   
2B1C   4E 0B                  DW   interpret   
2B1E   86 0E                  DW   exit_forth   
2B20                          ;*Macro unroll: EXPECT 3, "str len = 3"
2B20   CD 9D 09               CALL   printNum   
2B23                          ;*Macro unroll:  loadWord H,L, B,C
2B23   69                     LD   L,C   
2B24   60                     LD   H,B   
2B25   69                     LD   L,C   
2B26                          ;*Macro unroll:  ppop0 B,C
2B26   DD 2B                  DEC   IX   
2B28   DD 46 00               LD   B,(IX+0)   
2B2B   DD 2B                  DEC   IX   
2B2D   DD 4E 00               LD   C,(IX+0)   
2B30                          ;*Macro unroll:  CMP16 3
2B30   11 03 00               LD   DE,3   
2B33   B7                     OR   A   
2B34   ED 52                  SBC   HL,DE   
2B36                          ;*Macro unroll:  checkZeroWord H,L
2B36   7D                     LD   A,L   
2B37   B4                     OR   H   
2B38   CA 57 2B               JP   z,tf_doneM_2407S145   
2B3B   11 EA 0F               LD   DE,FAILED   
2B3E   CD 52 11               CALL   printPStr   
2B41   11 4B 2B               LD   DE,te_failM_2407S145   
2B44   CD 52 11               CALL   printPStr   
2B47   76                     HALT      
2B48                          ;*Macro unroll:  _skip
2B48   C3 48 2B               JP   $   
2B4B                          ;*Macro unroll:  STRUC_PUSH $
2B4B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B4B                STRUC_12:   .SET   STRUC_11   
2B4B                STRUC_11:   .SET   STRUC_10   
2B4B                STRUC_10:   .SET   STRUC_9   
2B4B                STRUC_9:   .SET   STRUC_8   
2B4B                STRUC_8:   .SET   STRUC_7   
2B4B                STRUC_7:   .SET   STRUC_6   
2B4B                STRUC_6:   .SET   STRUC_5   
2B4B                STRUC_5:   .SET   STRUC_4   
2B4B                STRUC_4:   .SET   STRUC_3   
2B4B                STRUC_3:   .SET   STRUC_2   
2B4B                STRUC_2:   .SET   STRUC_TOP   
2B4B                STRUC_TOP:   .SET   $   
2B4B                TE_FAILM_2407S145:      
2B4B   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2B57                          ;*Macro unroll:  _endskip
2B57                          ;*Macro unroll:  STRUC_FWD
2B57                CUR_ADR:   .SET   $   
2B49                          .ORG   STRUC_TOP - 2   
2B49   57 2B                  DW   CUR_ADR   
2B57                          .ORG   CUR_ADR   
2B57                          ;*Macro unroll:  STRUC_POP
2B57                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B57                STRUC_TOP:   .SET   STRUC_2   
2B57                STRUC_2:   .SET   STRUC_3   
2B57                STRUC_3:   .SET   STRUC_4   
2B57                STRUC_4:   .SET   STRUC_5   
2B57                STRUC_5:   .SET   STRUC_6   
2B57                STRUC_6:   .SET   STRUC_7   
2B57                STRUC_7:   .SET   STRUC_8   
2B57                STRUC_8:   .SET   STRUC_9   
2B57                STRUC_9:   .SET   STRUC_10   
2B57                STRUC_10:   .SET   STRUC_11   
2B57                STRUC_11:   .SET   STRUC_12   
2B57                STRUC_12:   .SET   0   
2B57                TF_DONEM_2407S145:      
2B57                          ;*Macro unroll: TEST_SET_TEXT "type"
2B57   2A 45 30               LD   HL,(lineBufStart)   
2B5A   22 4B 30               LD   (lineBufTop),HL   
2B5D   22 49 30               LD   (currkey),HL   
2B60   21 69 2B               LD   HL,tst_textM_2408S146   
2B63   22 61 32               LD   (char_pointer),HL   
2B66                          ;*Macro unroll:  _skip
2B66   C3 66 2B               JP   $   
2B69                          ;*Macro unroll:  STRUC_PUSH $
2B69                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B69                STRUC_12:   .SET   STRUC_11   
2B69                STRUC_11:   .SET   STRUC_10   
2B69                STRUC_10:   .SET   STRUC_9   
2B69                STRUC_9:   .SET   STRUC_8   
2B69                STRUC_8:   .SET   STRUC_7   
2B69                STRUC_7:   .SET   STRUC_6   
2B69                STRUC_6:   .SET   STRUC_5   
2B69                STRUC_5:   .SET   STRUC_4   
2B69                STRUC_4:   .SET   STRUC_3   
2B69                STRUC_3:   .SET   STRUC_2   
2B69                STRUC_2:   .SET   STRUC_TOP   
2B69                STRUC_TOP:   .SET   $   
2B69                TST_TEXTM_2408S146:      
2B69   74 79 70 65 0D 0A FF 0D 0A DB   "type","\r\n",-1,"\r\n"   
2B72                          ;*Macro unroll:  _endskip
2B72                          ;*Macro unroll:  STRUC_FWD
2B72                CUR_ADR:   .SET   $   
2B67                          .ORG   STRUC_TOP - 2   
2B67   72 2B                  DW   CUR_ADR   
2B72                          .ORG   CUR_ADR   
2B72                          ;*Macro unroll:  STRUC_POP
2B72                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B72                STRUC_TOP:   .SET   STRUC_2   
2B72                STRUC_2:   .SET   STRUC_3   
2B72                STRUC_3:   .SET   STRUC_4   
2B72                STRUC_4:   .SET   STRUC_5   
2B72                STRUC_5:   .SET   STRUC_6   
2B72                STRUC_6:   .SET   STRUC_7   
2B72                STRUC_7:   .SET   STRUC_8   
2B72                STRUC_8:   .SET   STRUC_9   
2B72                STRUC_9:   .SET   STRUC_10   
2B72                STRUC_10:   .SET   STRUC_11   
2B72                STRUC_11:   .SET   STRUC_12   
2B72                STRUC_12:   .SET   0   
2B72                          ;*Macro unroll: INTERPRET
2B72   CF                     RST   $08   
2B73   4E 0B                  DW   interpret   
2B75   86 0E                  DW   exit_forth   
2B77                             ; 
2B77                             ; ld HL, 12
2B77                             ; ld C, 10
2B77                             ; call divideWordByByte
2B77                             ; ld B, 0
2B77                             ; ld C, A
2B77                             ; EXPECT 2, "div 11 / 10 = 1 1"
2B77                             ; TEST_SET_TEXT "hello\r\n"
2B77                             ; call KEY
2B77                             ; EXPECT $68, "key 'h'"
2B77                             ; call KEY
2B77                             ; EXPECT $65, "key 'e'"
2B77                             ; TEST_SET_TEXT "x"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'x'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "a xyz "
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'a xyz'"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'a xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "here"
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; call CREATE
2B77                             ; call LATEST
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "create xyz latest"
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER + 6, "create xyz here"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; call DUP
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; ppushValue -10
2B77                             ; ppushValue 10
2B77                             ; call STAR
2B77                             ; EXPECT -100, "expect -10 * 10 to be -100"
2B77                             ; ppushValue -10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT 200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue 10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT -200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue -101
2B77                             ; ppushValue 20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5, "expect -101 / 20 to be -5"
2B77                             ; EXPECT -1, "expect -101 % 20 to be -1"
2B77                             ; ppushValue -101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT 5,  "expect -101 / -20 to be 5"
2B77                             ; EXPECT -1, "expect -101 % -20 to be -1"
2B77                             ; ppushValue 101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5,  "expect 101 / -20 to be -5"
2B77                             ; EXPECT 1, "expect 101 % -20 to be 1"
2B77                             ; TEST_SET_TEXT ": testif2 if 100 endif ;"
2B77                             ; ppushValue 0
2B77                             ; TEST_SET_TEXT "testloop"
2B77                             ; call INTERPRET
2B77                             ; EXPECT 5, "Loop until limit < 5"
2B77                             ; ppushPText "xyz"
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "xyz length 3"
2B77                             ; call CFETCH
2B77                             ; EXPECT "x" + 0, "xyz --> x"
2B77                             ; ppushValue HEADER_LATEST
2B77                             ; call TCFA
2B77                             ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; ppushValue HEADER_PLUS
2B77                             ; call TCFA
2B77                             ; call EXECUTE
2B77                             ; EXPECT 3, "1 2 plus = 3"
2B77                             ; ppushText "100",3
2B77                             ; call NUMBER
2B77                             ; EXPECT 0, "0 = no parse err"
2B77                             ; EXPECT 100, "parse 100"
2B77                             ; ppushText "latest",6
2B77                             ; call FIND
2B77                             ; EXPECT HEADER_LATEST, "find header of LATEST"
2B77                             ; TEST_SET_TEXT "base"
2B77                             ; rst $08
2B77                             ; dw interpret
2B77                             ; dw exit_forth
2B77                             ; call FETCH
2B77                             ; EXPECT 10, "expect base to be 10"
2B77                             ; ppushText "add",3
2B77                             ; call FIND
2B77                             ; ppushValue 64
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#h 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT $100, "expect hex $100"
2B77                             ; TEST_SET_TEXT "hex"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#d 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT 100, "expect decimal 100"
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                          ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
2B77   2A 45 30               LD   HL,(lineBufStart)   
2B7A   22 4B 30               LD   (lineBufTop),HL   
2B7D   22 49 30               LD   (currkey),HL   
2B80   21 89 2B               LD   HL,tst_textM_2534S18   
2B83   22 61 32               LD   (char_pointer),HL   
2B86                          ;*Macro unroll:  _skip
2B86   C3 86 2B               JP   $   
2B89                          ;*Macro unroll:  STRUC_PUSH $
2B89                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B89                STRUC_12:   .SET   STRUC_11   
2B89                STRUC_11:   .SET   STRUC_10   
2B89                STRUC_10:   .SET   STRUC_9   
2B89                STRUC_9:   .SET   STRUC_8   
2B89                STRUC_8:   .SET   STRUC_7   
2B89                STRUC_7:   .SET   STRUC_6   
2B89                STRUC_6:   .SET   STRUC_5   
2B89                STRUC_5:   .SET   STRUC_4   
2B89                STRUC_4:   .SET   STRUC_3   
2B89                STRUC_3:   .SET   STRUC_2   
2B89                STRUC_2:   .SET   STRUC_TOP   
2B89                STRUC_TOP:   .SET   $   
2B89                TST_TEXTM_2534S18:      
2B89   31 36 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "16 base ! 20","\r\n",-1,"\r\n"   
2B9A                          ;*Macro unroll:  _endskip
2B9A                          ;*Macro unroll:  STRUC_FWD
2B9A                CUR_ADR:   .SET   $   
2B87                          .ORG   STRUC_TOP - 2   
2B87   9A 2B                  DW   CUR_ADR   
2B9A                          .ORG   CUR_ADR   
2B9A                          ;*Macro unroll:  STRUC_POP
2B9A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B9A                STRUC_TOP:   .SET   STRUC_2   
2B9A                STRUC_2:   .SET   STRUC_3   
2B9A                STRUC_3:   .SET   STRUC_4   
2B9A                STRUC_4:   .SET   STRUC_5   
2B9A                STRUC_5:   .SET   STRUC_6   
2B9A                STRUC_6:   .SET   STRUC_7   
2B9A                STRUC_7:   .SET   STRUC_8   
2B9A                STRUC_8:   .SET   STRUC_9   
2B9A                STRUC_9:   .SET   STRUC_10   
2B9A                STRUC_10:   .SET   STRUC_11   
2B9A                STRUC_11:   .SET   STRUC_12   
2B9A                STRUC_12:   .SET   0   
2B9A                          ;*Macro unroll: INTERPRET
2B9A   CF                     RST   $08   
2B9B   4E 0B                  DW   interpret   
2B9D   86 0E                  DW   exit_forth   
2B9F                          ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
2B9F   CD 9D 09               CALL   printNum   
2BA2                          ;*Macro unroll:  loadWord H,L, B,C
2BA2   69                     LD   L,C   
2BA3   60                     LD   H,B   
2BA4   69                     LD   L,C   
2BA5                          ;*Macro unroll:  ppop0 B,C
2BA5   DD 2B                  DEC   IX   
2BA7   DD 46 00               LD   B,(IX+0)   
2BAA   DD 2B                  DEC   IX   
2BAC   DD 4E 00               LD   C,(IX+0)   
2BAF                          ;*Macro unroll:  CMP16 32
2BAF   11 20 00               LD   DE,32   
2BB2   B7                     OR   A   
2BB3   ED 52                  SBC   HL,DE   
2BB5                          ;*Macro unroll:  checkZeroWord H,L
2BB5   7D                     LD   A,L   
2BB6   B4                     OR   H   
2BB7   CA DA 2B               JP   z,tf_doneM_2536S20   
2BBA   11 EA 0F               LD   DE,FAILED   
2BBD   CD 52 11               CALL   printPStr   
2BC0   11 CA 2B               LD   DE,te_failM_2536S20   
2BC3   CD 52 11               CALL   printPStr   
2BC6   76                     HALT      
2BC7                          ;*Macro unroll:  _skip
2BC7   C3 C7 2B               JP   $   
2BCA                          ;*Macro unroll:  STRUC_PUSH $
2BCA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BCA                STRUC_12:   .SET   STRUC_11   
2BCA                STRUC_11:   .SET   STRUC_10   
2BCA                STRUC_10:   .SET   STRUC_9   
2BCA                STRUC_9:   .SET   STRUC_8   
2BCA                STRUC_8:   .SET   STRUC_7   
2BCA                STRUC_7:   .SET   STRUC_6   
2BCA                STRUC_6:   .SET   STRUC_5   
2BCA                STRUC_5:   .SET   STRUC_4   
2BCA                STRUC_4:   .SET   STRUC_3   
2BCA                STRUC_3:   .SET   STRUC_2   
2BCA                STRUC_2:   .SET   STRUC_TOP   
2BCA                STRUC_TOP:   .SET   $   
2BCA                TE_FAILM_2536S20:      
2BCA   0F 33 32 20 24 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "32 $20 to be 32"   
2BDA                          ;*Macro unroll:  _endskip
2BDA                          ;*Macro unroll:  STRUC_FWD
2BDA                CUR_ADR:   .SET   $   
2BC8                          .ORG   STRUC_TOP - 2   
2BC8   DA 2B                  DW   CUR_ADR   
2BDA                          .ORG   CUR_ADR   
2BDA                          ;*Macro unroll:  STRUC_POP
2BDA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BDA                STRUC_TOP:   .SET   STRUC_2   
2BDA                STRUC_2:   .SET   STRUC_3   
2BDA                STRUC_3:   .SET   STRUC_4   
2BDA                STRUC_4:   .SET   STRUC_5   
2BDA                STRUC_5:   .SET   STRUC_6   
2BDA                STRUC_6:   .SET   STRUC_7   
2BDA                STRUC_7:   .SET   STRUC_8   
2BDA                STRUC_8:   .SET   STRUC_9   
2BDA                STRUC_9:   .SET   STRUC_10   
2BDA                STRUC_10:   .SET   STRUC_11   
2BDA                STRUC_11:   .SET   STRUC_12   
2BDA                STRUC_12:   .SET   0   
2BDA                TF_DONEM_2536S20:      
2BDA                          ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
2BDA   2A 45 30               LD   HL,(lineBufStart)   
2BDD   22 4B 30               LD   (lineBufTop),HL   
2BE0   22 49 30               LD   (currkey),HL   
2BE3   21 EC 2B               LD   HL,tst_textM_2537S22   
2BE6   22 61 32               LD   (char_pointer),HL   
2BE9                          ;*Macro unroll:  _skip
2BE9   C3 E9 2B               JP   $   
2BEC                          ;*Macro unroll:  STRUC_PUSH $
2BEC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BEC                STRUC_12:   .SET   STRUC_11   
2BEC                STRUC_11:   .SET   STRUC_10   
2BEC                STRUC_10:   .SET   STRUC_9   
2BEC                STRUC_9:   .SET   STRUC_8   
2BEC                STRUC_8:   .SET   STRUC_7   
2BEC                STRUC_7:   .SET   STRUC_6   
2BEC                STRUC_6:   .SET   STRUC_5   
2BEC                STRUC_5:   .SET   STRUC_4   
2BEC                STRUC_4:   .SET   STRUC_3   
2BEC                STRUC_3:   .SET   STRUC_2   
2BEC                STRUC_2:   .SET   STRUC_TOP   
2BEC                STRUC_TOP:   .SET   $   
2BEC                TST_TEXTM_2537S22:      
2BEC   30 41 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "0A base ! 20","\r\n",-1,"\r\n"   
2BFD                          ;*Macro unroll:  _endskip
2BFD                          ;*Macro unroll:  STRUC_FWD
2BFD                CUR_ADR:   .SET   $   
2BEA                          .ORG   STRUC_TOP - 2   
2BEA   FD 2B                  DW   CUR_ADR   
2BFD                          .ORG   CUR_ADR   
2BFD                          ;*Macro unroll:  STRUC_POP
2BFD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BFD                STRUC_TOP:   .SET   STRUC_2   
2BFD                STRUC_2:   .SET   STRUC_3   
2BFD                STRUC_3:   .SET   STRUC_4   
2BFD                STRUC_4:   .SET   STRUC_5   
2BFD                STRUC_5:   .SET   STRUC_6   
2BFD                STRUC_6:   .SET   STRUC_7   
2BFD                STRUC_7:   .SET   STRUC_8   
2BFD                STRUC_8:   .SET   STRUC_9   
2BFD                STRUC_9:   .SET   STRUC_10   
2BFD                STRUC_10:   .SET   STRUC_11   
2BFD                STRUC_11:   .SET   STRUC_12   
2BFD                STRUC_12:   .SET   0   
2BFD                          ;*Macro unroll: INTERPRET
2BFD   CF                     RST   $08   
2BFE   4E 0B                  DW   interpret   
2C00   86 0E                  DW   exit_forth   
2C02                          ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
2C02   CD 9D 09               CALL   printNum   
2C05                          ;*Macro unroll:  loadWord H,L, B,C
2C05   69                     LD   L,C   
2C06   60                     LD   H,B   
2C07   69                     LD   L,C   
2C08                          ;*Macro unroll:  ppop0 B,C
2C08   DD 2B                  DEC   IX   
2C0A   DD 46 00               LD   B,(IX+0)   
2C0D   DD 2B                  DEC   IX   
2C0F   DD 4E 00               LD   C,(IX+0)   
2C12                          ;*Macro unroll:  CMP16 20
2C12   11 14 00               LD   DE,20   
2C15   B7                     OR   A   
2C16   ED 52                  SBC   HL,DE   
2C18                          ;*Macro unroll:  checkZeroWord H,L
2C18   7D                     LD   A,L   
2C19   B4                     OR   H   
2C1A   CA 44 2C               JP   z,tf_doneM_2539S24   
2C1D   11 EA 0F               LD   DE,FAILED   
2C20   CD 52 11               CALL   printPStr   
2C23   11 2D 2C               LD   DE,te_failM_2539S24   
2C26   CD 52 11               CALL   printPStr   
2C29   76                     HALT      
2C2A                          ;*Macro unroll:  _skip
2C2A   C3 2A 2C               JP   $   
2C2D                          ;*Macro unroll:  STRUC_PUSH $
2C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C2D                STRUC_12:   .SET   STRUC_11   
2C2D                STRUC_11:   .SET   STRUC_10   
2C2D                STRUC_10:   .SET   STRUC_9   
2C2D                STRUC_9:   .SET   STRUC_8   
2C2D                STRUC_8:   .SET   STRUC_7   
2C2D                STRUC_7:   .SET   STRUC_6   
2C2D                STRUC_6:   .SET   STRUC_5   
2C2D                STRUC_5:   .SET   STRUC_4   
2C2D                STRUC_4:   .SET   STRUC_3   
2C2D                STRUC_3:   .SET   STRUC_2   
2C2D                STRUC_2:   .SET   STRUC_TOP   
2C2D                STRUC_TOP:   .SET   $   
2C2D                TE_FAILM_2539S24:      
2C2D   16 32 30 20 64 65 63 69 6D 61 6C 20 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "20 decimal 20 to be 32"   
2C44                          ;*Macro unroll:  _endskip
2C44                          ;*Macro unroll:  STRUC_FWD
2C44                CUR_ADR:   .SET   $   
2C2B                          .ORG   STRUC_TOP - 2   
2C2B   44 2C                  DW   CUR_ADR   
2C44                          .ORG   CUR_ADR   
2C44                          ;*Macro unroll:  STRUC_POP
2C44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C44                STRUC_TOP:   .SET   STRUC_2   
2C44                STRUC_2:   .SET   STRUC_3   
2C44                STRUC_3:   .SET   STRUC_4   
2C44                STRUC_4:   .SET   STRUC_5   
2C44                STRUC_5:   .SET   STRUC_6   
2C44                STRUC_6:   .SET   STRUC_7   
2C44                STRUC_7:   .SET   STRUC_8   
2C44                STRUC_8:   .SET   STRUC_9   
2C44                STRUC_9:   .SET   STRUC_10   
2C44                STRUC_10:   .SET   STRUC_11   
2C44                STRUC_11:   .SET   STRUC_12   
2C44                STRUC_12:   .SET   0   
2C44                TF_DONEM_2539S24:      
2C44                          ;*Macro unroll: TEST_SET_TEXT "100 100 +"
2C44   2A 45 30               LD   HL,(lineBufStart)   
2C47   22 4B 30               LD   (lineBufTop),HL   
2C4A   22 49 30               LD   (currkey),HL   
2C4D   21 56 2C               LD   HL,tst_textM_2540S1   
2C50   22 61 32               LD   (char_pointer),HL   
2C53                          ;*Macro unroll:  _skip
2C53   C3 53 2C               JP   $   
2C56                          ;*Macro unroll:  STRUC_PUSH $
2C56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C56                STRUC_12:   .SET   STRUC_11   
2C56                STRUC_11:   .SET   STRUC_10   
2C56                STRUC_10:   .SET   STRUC_9   
2C56                STRUC_9:   .SET   STRUC_8   
2C56                STRUC_8:   .SET   STRUC_7   
2C56                STRUC_7:   .SET   STRUC_6   
2C56                STRUC_6:   .SET   STRUC_5   
2C56                STRUC_5:   .SET   STRUC_4   
2C56                STRUC_4:   .SET   STRUC_3   
2C56                STRUC_3:   .SET   STRUC_2   
2C56                STRUC_2:   .SET   STRUC_TOP   
2C56                STRUC_TOP:   .SET   $   
2C56                TST_TEXTM_2540S1:      
2C56   31 30 30 20 31 30 30 20 2B 0D 0A FF 0D 0A DB   "100 100 +","\r\n",-1,"\r\n"   
2C64                          ;*Macro unroll:  _endskip
2C64                          ;*Macro unroll:  STRUC_FWD
2C64                CUR_ADR:   .SET   $   
2C54                          .ORG   STRUC_TOP - 2   
2C54   64 2C                  DW   CUR_ADR   
2C64                          .ORG   CUR_ADR   
2C64                          ;*Macro unroll:  STRUC_POP
2C64                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C64                STRUC_TOP:   .SET   STRUC_2   
2C64                STRUC_2:   .SET   STRUC_3   
2C64                STRUC_3:   .SET   STRUC_4   
2C64                STRUC_4:   .SET   STRUC_5   
2C64                STRUC_5:   .SET   STRUC_6   
2C64                STRUC_6:   .SET   STRUC_7   
2C64                STRUC_7:   .SET   STRUC_8   
2C64                STRUC_8:   .SET   STRUC_9   
2C64                STRUC_9:   .SET   STRUC_10   
2C64                STRUC_10:   .SET   STRUC_11   
2C64                STRUC_11:   .SET   STRUC_12   
2C64                STRUC_12:   .SET   0   
2C64                          ;*Macro unroll: INTERPRET
2C64   CF                     RST   $08   
2C65   4E 0B                  DW   interpret   
2C67   86 0E                  DW   exit_forth   
2C69                          ;*Macro unroll: EXPECT 200, "100 100 + = 200"
2C69   CD 9D 09               CALL   printNum   
2C6C                          ;*Macro unroll:  loadWord H,L, B,C
2C6C   69                     LD   L,C   
2C6D   60                     LD   H,B   
2C6E   69                     LD   L,C   
2C6F                          ;*Macro unroll:  ppop0 B,C
2C6F   DD 2B                  DEC   IX   
2C71   DD 46 00               LD   B,(IX+0)   
2C74   DD 2B                  DEC   IX   
2C76   DD 4E 00               LD   C,(IX+0)   
2C79                          ;*Macro unroll:  CMP16 200
2C79   11 C8 00               LD   DE,200   
2C7C   B7                     OR   A   
2C7D   ED 52                  SBC   HL,DE   
2C7F                          ;*Macro unroll:  checkZeroWord H,L
2C7F   7D                     LD   A,L   
2C80   B4                     OR   H   
2C81   CA A4 2C               JP   z,tf_doneM_2542S3   
2C84   11 EA 0F               LD   DE,FAILED   
2C87   CD 52 11               CALL   printPStr   
2C8A   11 94 2C               LD   DE,te_failM_2542S3   
2C8D   CD 52 11               CALL   printPStr   
2C90   76                     HALT      
2C91                          ;*Macro unroll:  _skip
2C91   C3 91 2C               JP   $   
2C94                          ;*Macro unroll:  STRUC_PUSH $
2C94                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C94                STRUC_12:   .SET   STRUC_11   
2C94                STRUC_11:   .SET   STRUC_10   
2C94                STRUC_10:   .SET   STRUC_9   
2C94                STRUC_9:   .SET   STRUC_8   
2C94                STRUC_8:   .SET   STRUC_7   
2C94                STRUC_7:   .SET   STRUC_6   
2C94                STRUC_6:   .SET   STRUC_5   
2C94                STRUC_5:   .SET   STRUC_4   
2C94                STRUC_4:   .SET   STRUC_3   
2C94                STRUC_3:   .SET   STRUC_2   
2C94                STRUC_2:   .SET   STRUC_TOP   
2C94                STRUC_TOP:   .SET   $   
2C94                TE_FAILM_2542S3:      
2C94   0F 31 30 30 20 31 30 30 20 2B 20 3D 20 32 30 30 .PSTR   "100 100 + = 200"   
2CA4                          ;*Macro unroll:  _endskip
2CA4                          ;*Macro unroll:  STRUC_FWD
2CA4                CUR_ADR:   .SET   $   
2C92                          .ORG   STRUC_TOP - 2   
2C92   A4 2C                  DW   CUR_ADR   
2CA4                          .ORG   CUR_ADR   
2CA4                          ;*Macro unroll:  STRUC_POP
2CA4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CA4                STRUC_TOP:   .SET   STRUC_2   
2CA4                STRUC_2:   .SET   STRUC_3   
2CA4                STRUC_3:   .SET   STRUC_4   
2CA4                STRUC_4:   .SET   STRUC_5   
2CA4                STRUC_5:   .SET   STRUC_6   
2CA4                STRUC_6:   .SET   STRUC_7   
2CA4                STRUC_7:   .SET   STRUC_8   
2CA4                STRUC_8:   .SET   STRUC_9   
2CA4                STRUC_9:   .SET   STRUC_10   
2CA4                STRUC_10:   .SET   STRUC_11   
2CA4                STRUC_11:   .SET   STRUC_12   
2CA4                STRUC_12:   .SET   0   
2CA4                TF_DONEM_2542S3:      
2CA4                          ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
2CA4   2A 45 30               LD   HL,(lineBufStart)   
2CA7   22 4B 30               LD   (lineBufTop),HL   
2CAA   22 49 30               LD   (currkey),HL   
2CAD   21 B6 2C               LD   HL,tst_textM_2543S5   
2CB0   22 61 32               LD   (char_pointer),HL   
2CB3                          ;*Macro unroll:  _skip
2CB3   C3 B3 2C               JP   $   
2CB6                          ;*Macro unroll:  STRUC_PUSH $
2CB6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CB6                STRUC_12:   .SET   STRUC_11   
2CB6                STRUC_11:   .SET   STRUC_10   
2CB6                STRUC_10:   .SET   STRUC_9   
2CB6                STRUC_9:   .SET   STRUC_8   
2CB6                STRUC_8:   .SET   STRUC_7   
2CB6                STRUC_7:   .SET   STRUC_6   
2CB6                STRUC_6:   .SET   STRUC_5   
2CB6                STRUC_5:   .SET   STRUC_4   
2CB6                STRUC_4:   .SET   STRUC_3   
2CB6                STRUC_3:   .SET   STRUC_2   
2CB6                STRUC_2:   .SET   STRUC_TOP   
2CB6                STRUC_TOP:   .SET   $   
2CB6                TST_TEXTM_2543S5:      
2CB6   31 30 30 20 31 30 20 2B 20 2E 0D 0A FF 0D 0A DB   "100 10 + .","\r\n",-1,"\r\n"   
2CC5                          ;*Macro unroll:  _endskip
2CC5                          ;*Macro unroll:  STRUC_FWD
2CC5                CUR_ADR:   .SET   $   
2CB4                          .ORG   STRUC_TOP - 2   
2CB4   C5 2C                  DW   CUR_ADR   
2CC5                          .ORG   CUR_ADR   
2CC5                          ;*Macro unroll:  STRUC_POP
2CC5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CC5                STRUC_TOP:   .SET   STRUC_2   
2CC5                STRUC_2:   .SET   STRUC_3   
2CC5                STRUC_3:   .SET   STRUC_4   
2CC5                STRUC_4:   .SET   STRUC_5   
2CC5                STRUC_5:   .SET   STRUC_6   
2CC5                STRUC_6:   .SET   STRUC_7   
2CC5                STRUC_7:   .SET   STRUC_8   
2CC5                STRUC_8:   .SET   STRUC_9   
2CC5                STRUC_9:   .SET   STRUC_10   
2CC5                STRUC_10:   .SET   STRUC_11   
2CC5                STRUC_11:   .SET   STRUC_12   
2CC5                STRUC_12:   .SET   0   
2CC5                          ;*Macro unroll: INTERPRET
2CC5   CF                     RST   $08   
2CC6   4E 0B                  DW   interpret   
2CC8   86 0E                  DW   exit_forth   
2CCA                          ;*Macro unroll: TEST_SET_TEXT "-10 abs"
2CCA   2A 45 30               LD   HL,(lineBufStart)   
2CCD   22 4B 30               LD   (lineBufTop),HL   
2CD0   22 49 30               LD   (currkey),HL   
2CD3   21 DC 2C               LD   HL,tst_textM_2545S8   
2CD6   22 61 32               LD   (char_pointer),HL   
2CD9                          ;*Macro unroll:  _skip
2CD9   C3 D9 2C               JP   $   
2CDC                          ;*Macro unroll:  STRUC_PUSH $
2CDC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CDC                STRUC_12:   .SET   STRUC_11   
2CDC                STRUC_11:   .SET   STRUC_10   
2CDC                STRUC_10:   .SET   STRUC_9   
2CDC                STRUC_9:   .SET   STRUC_8   
2CDC                STRUC_8:   .SET   STRUC_7   
2CDC                STRUC_7:   .SET   STRUC_6   
2CDC                STRUC_6:   .SET   STRUC_5   
2CDC                STRUC_5:   .SET   STRUC_4   
2CDC                STRUC_4:   .SET   STRUC_3   
2CDC                STRUC_3:   .SET   STRUC_2   
2CDC                STRUC_2:   .SET   STRUC_TOP   
2CDC                STRUC_TOP:   .SET   $   
2CDC                TST_TEXTM_2545S8:      
2CDC   2D 31 30 20 61 62 73 0D 0A FF 0D 0A DB   "-10 abs","\r\n",-1,"\r\n"   
2CE8                          ;*Macro unroll:  _endskip
2CE8                          ;*Macro unroll:  STRUC_FWD
2CE8                CUR_ADR:   .SET   $   
2CDA                          .ORG   STRUC_TOP - 2   
2CDA   E8 2C                  DW   CUR_ADR   
2CE8                          .ORG   CUR_ADR   
2CE8                          ;*Macro unroll:  STRUC_POP
2CE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CE8                STRUC_TOP:   .SET   STRUC_2   
2CE8                STRUC_2:   .SET   STRUC_3   
2CE8                STRUC_3:   .SET   STRUC_4   
2CE8                STRUC_4:   .SET   STRUC_5   
2CE8                STRUC_5:   .SET   STRUC_6   
2CE8                STRUC_6:   .SET   STRUC_7   
2CE8                STRUC_7:   .SET   STRUC_8   
2CE8                STRUC_8:   .SET   STRUC_9   
2CE8                STRUC_9:   .SET   STRUC_10   
2CE8                STRUC_10:   .SET   STRUC_11   
2CE8                STRUC_11:   .SET   STRUC_12   
2CE8                STRUC_12:   .SET   0   
2CE8                          ;*Macro unroll: INTERPRET
2CE8   CF                     RST   $08   
2CE9   4E 0B                  DW   interpret   
2CEB   86 0E                  DW   exit_forth   
2CED                          ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
2CED   CD 9D 09               CALL   printNum   
2CF0                          ;*Macro unroll:  loadWord H,L, B,C
2CF0   69                     LD   L,C   
2CF1   60                     LD   H,B   
2CF2   69                     LD   L,C   
2CF3                          ;*Macro unroll:  ppop0 B,C
2CF3   DD 2B                  DEC   IX   
2CF5   DD 46 00               LD   B,(IX+0)   
2CF8   DD 2B                  DEC   IX   
2CFA   DD 4E 00               LD   C,(IX+0)   
2CFD                          ;*Macro unroll:  CMP16 10
2CFD   11 0A 00               LD   DE,10   
2D00   B7                     OR   A   
2D01   ED 52                  SBC   HL,DE   
2D03                          ;*Macro unroll:  checkZeroWord H,L
2D03   7D                     LD   A,L   
2D04   B4                     OR   H   
2D05   CA 2C 2D               JP   z,tf_doneM_2547S10   
2D08   11 EA 0F               LD   DE,FAILED   
2D0B   CD 52 11               CALL   printPStr   
2D0E   11 18 2D               LD   DE,te_failM_2547S10   
2D11   CD 52 11               CALL   printPStr   
2D14   76                     HALT      
2D15                          ;*Macro unroll:  _skip
2D15   C3 15 2D               JP   $   
2D18                          ;*Macro unroll:  STRUC_PUSH $
2D18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D18                STRUC_12:   .SET   STRUC_11   
2D18                STRUC_11:   .SET   STRUC_10   
2D18                STRUC_10:   .SET   STRUC_9   
2D18                STRUC_9:   .SET   STRUC_8   
2D18                STRUC_8:   .SET   STRUC_7   
2D18                STRUC_7:   .SET   STRUC_6   
2D18                STRUC_6:   .SET   STRUC_5   
2D18                STRUC_5:   .SET   STRUC_4   
2D18                STRUC_4:   .SET   STRUC_3   
2D18                STRUC_3:   .SET   STRUC_2   
2D18                STRUC_2:   .SET   STRUC_TOP   
2D18                STRUC_TOP:   .SET   $   
2D18                TE_FAILM_2547S10:      
2D18   13 31 30 20 61 62 73 20 2D 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs -10 to be 10"   
2D2C                          ;*Macro unroll:  _endskip
2D2C                          ;*Macro unroll:  STRUC_FWD
2D2C                CUR_ADR:   .SET   $   
2D16                          .ORG   STRUC_TOP - 2   
2D16   2C 2D                  DW   CUR_ADR   
2D2C                          .ORG   CUR_ADR   
2D2C                          ;*Macro unroll:  STRUC_POP
2D2C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D2C                STRUC_TOP:   .SET   STRUC_2   
2D2C                STRUC_2:   .SET   STRUC_3   
2D2C                STRUC_3:   .SET   STRUC_4   
2D2C                STRUC_4:   .SET   STRUC_5   
2D2C                STRUC_5:   .SET   STRUC_6   
2D2C                STRUC_6:   .SET   STRUC_7   
2D2C                STRUC_7:   .SET   STRUC_8   
2D2C                STRUC_8:   .SET   STRUC_9   
2D2C                STRUC_9:   .SET   STRUC_10   
2D2C                STRUC_10:   .SET   STRUC_11   
2D2C                STRUC_11:   .SET   STRUC_12   
2D2C                STRUC_12:   .SET   0   
2D2C                TF_DONEM_2547S10:      
2D2C                          ;*Macro unroll: TEST_SET_TEXT "10 abs"
2D2C   2A 45 30               LD   HL,(lineBufStart)   
2D2F   22 4B 30               LD   (lineBufTop),HL   
2D32   22 49 30               LD   (currkey),HL   
2D35   21 3E 2D               LD   HL,tst_textM_2548S12   
2D38   22 61 32               LD   (char_pointer),HL   
2D3B                          ;*Macro unroll:  _skip
2D3B   C3 3B 2D               JP   $   
2D3E                          ;*Macro unroll:  STRUC_PUSH $
2D3E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D3E                STRUC_12:   .SET   STRUC_11   
2D3E                STRUC_11:   .SET   STRUC_10   
2D3E                STRUC_10:   .SET   STRUC_9   
2D3E                STRUC_9:   .SET   STRUC_8   
2D3E                STRUC_8:   .SET   STRUC_7   
2D3E                STRUC_7:   .SET   STRUC_6   
2D3E                STRUC_6:   .SET   STRUC_5   
2D3E                STRUC_5:   .SET   STRUC_4   
2D3E                STRUC_4:   .SET   STRUC_3   
2D3E                STRUC_3:   .SET   STRUC_2   
2D3E                STRUC_2:   .SET   STRUC_TOP   
2D3E                STRUC_TOP:   .SET   $   
2D3E                TST_TEXTM_2548S12:      
2D3E   31 30 20 61 62 73 0D 0A FF 0D 0A DB   "10 abs","\r\n",-1,"\r\n"   
2D49                          ;*Macro unroll:  _endskip
2D49                          ;*Macro unroll:  STRUC_FWD
2D49                CUR_ADR:   .SET   $   
2D3C                          .ORG   STRUC_TOP - 2   
2D3C   49 2D                  DW   CUR_ADR   
2D49                          .ORG   CUR_ADR   
2D49                          ;*Macro unroll:  STRUC_POP
2D49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D49                STRUC_TOP:   .SET   STRUC_2   
2D49                STRUC_2:   .SET   STRUC_3   
2D49                STRUC_3:   .SET   STRUC_4   
2D49                STRUC_4:   .SET   STRUC_5   
2D49                STRUC_5:   .SET   STRUC_6   
2D49                STRUC_6:   .SET   STRUC_7   
2D49                STRUC_7:   .SET   STRUC_8   
2D49                STRUC_8:   .SET   STRUC_9   
2D49                STRUC_9:   .SET   STRUC_10   
2D49                STRUC_10:   .SET   STRUC_11   
2D49                STRUC_11:   .SET   STRUC_12   
2D49                STRUC_12:   .SET   0   
2D49                          ;*Macro unroll: INTERPRET
2D49   CF                     RST   $08   
2D4A   4E 0B                  DW   interpret   
2D4C   86 0E                  DW   exit_forth   
2D4E                          ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
2D4E   CD 9D 09               CALL   printNum   
2D51                          ;*Macro unroll:  loadWord H,L, B,C
2D51   69                     LD   L,C   
2D52   60                     LD   H,B   
2D53   69                     LD   L,C   
2D54                          ;*Macro unroll:  ppop0 B,C
2D54   DD 2B                  DEC   IX   
2D56   DD 46 00               LD   B,(IX+0)   
2D59   DD 2B                  DEC   IX   
2D5B   DD 4E 00               LD   C,(IX+0)   
2D5E                          ;*Macro unroll:  CMP16 10
2D5E   11 0A 00               LD   DE,10   
2D61   B7                     OR   A   
2D62   ED 52                  SBC   HL,DE   
2D64                          ;*Macro unroll:  checkZeroWord H,L
2D64   7D                     LD   A,L   
2D65   B4                     OR   H   
2D66   CA 8C 2D               JP   z,tf_doneM_2550S14   
2D69   11 EA 0F               LD   DE,FAILED   
2D6C   CD 52 11               CALL   printPStr   
2D6F   11 79 2D               LD   DE,te_failM_2550S14   
2D72   CD 52 11               CALL   printPStr   
2D75   76                     HALT      
2D76                          ;*Macro unroll:  _skip
2D76   C3 76 2D               JP   $   
2D79                          ;*Macro unroll:  STRUC_PUSH $
2D79                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D79                STRUC_12:   .SET   STRUC_11   
2D79                STRUC_11:   .SET   STRUC_10   
2D79                STRUC_10:   .SET   STRUC_9   
2D79                STRUC_9:   .SET   STRUC_8   
2D79                STRUC_8:   .SET   STRUC_7   
2D79                STRUC_7:   .SET   STRUC_6   
2D79                STRUC_6:   .SET   STRUC_5   
2D79                STRUC_5:   .SET   STRUC_4   
2D79                STRUC_4:   .SET   STRUC_3   
2D79                STRUC_3:   .SET   STRUC_2   
2D79                STRUC_2:   .SET   STRUC_TOP   
2D79                STRUC_TOP:   .SET   $   
2D79                TE_FAILM_2550S14:      
2D79   12 31 30 20 61 62 73 20 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs 10 to be 10"   
2D8C                          ;*Macro unroll:  _endskip
2D8C                          ;*Macro unroll:  STRUC_FWD
2D8C                CUR_ADR:   .SET   $   
2D77                          .ORG   STRUC_TOP - 2   
2D77   8C 2D                  DW   CUR_ADR   
2D8C                          .ORG   CUR_ADR   
2D8C                          ;*Macro unroll:  STRUC_POP
2D8C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D8C                STRUC_TOP:   .SET   STRUC_2   
2D8C                STRUC_2:   .SET   STRUC_3   
2D8C                STRUC_3:   .SET   STRUC_4   
2D8C                STRUC_4:   .SET   STRUC_5   
2D8C                STRUC_5:   .SET   STRUC_6   
2D8C                STRUC_6:   .SET   STRUC_7   
2D8C                STRUC_7:   .SET   STRUC_8   
2D8C                STRUC_8:   .SET   STRUC_9   
2D8C                STRUC_9:   .SET   STRUC_10   
2D8C                STRUC_10:   .SET   STRUC_11   
2D8C                STRUC_11:   .SET   STRUC_12   
2D8C                STRUC_12:   .SET   0   
2D8C                TF_DONEM_2550S14:      
2D8C                             ; TEST_SET_TEXT "100 buffer: xvar"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar pack"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar count dup"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "str len = 3"
2D8C                             ; TEST_SET_TEXT "type"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "x1"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
2D8C                             ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "select"
2D8C                             ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 5, "Loop until limit < 5"
2D8C                             ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "0 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "define: q 0 = 200"
2D8C                             ; TEST_SET_TEXT "1 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 100, "define: q 1 = 100"
2D8C                             ; rst $08
2D8C                             ; dw litstr
2D8C                             ; .pstr "Expected parse error"
2D8C                             ; dw type
2D8C                             ; dw exit_forth
2D8C                             ; ppushValue 999
2D8C                             ; TEST_SET_TEXT "$$123"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 999, "interpret $$123"
2D8C                          ;*Macro unroll:  PRINT_STR DONE
2D8C                          ;*Macro unroll:  ppush0 D,E
2D8C   DD 73 00               LD   (IX+0),E   
2D8F   DD 23                  INC   IX   
2D91   DD 72 00               LD   (IX+0),D   
2D94   DD 23                  INC   IX   
2D96   11 DF 0F               LD   DE,DONE   
2D99   CD 52 11               CALL   printPStr   
2D9C                          ;*Macro unroll:  ppop0 D,E
2D9C   DD 2B                  DEC   IX   
2D9E   DD 56 00               LD   D,(IX+0)   
2DA1   DD 2B                  DEC   IX   
2DA3   DD 5E 00               LD   E,(IX+0)   
2DA6   76                     HALT      
2DA7                          ENDIF      
2DA7                          DS   RET_STACK_SIZE   ; return stack size
2EA7                RET_STACK:      ; return stack, grows down
2EA7                RPP:         ; RP0 grows down (into TIBB)
2EA7                DATA_STACK:      
2EA7                          DS   DATA_STACK_SIZE   ; TODO: change remove double data stack size
2FA7                SPP:         ; SP0 (should) grow down
2FA7                          ALIGN   $100   
3000                SERBUF:   DS   SER_BUFSIZE   
303F   00 00        SERINPTR:   DW   0   
3041   00 00        SERRDPTR:   DW   0   
3043   00 00        SERBUFUSED:   DW   0   
3045   00 00        LINEBUFSTART:   DW   0   
3047   00 00        LINEBUFSIZE:   DW   0   
3049   00 00        CURRKEY:   DW   0   
304B   00 00        LINEBUFTOP:   DW   0   
304D                LINEBUF:   DS   LINE_BUFSIZE   
30CD                WORDBUF:   DS   64   
310D                WORDBUF2:   DS   64   
314D                VAR_PAD:   DS   PAD_SIZE   
324D   00 00        EXITADDR:   DW   0   
324F   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
3251   00 00        VAR_HERE:   DW   0   
3253   00 00        VAR_INTP_STOP:   DW   0   
3255   00 00        VAR_STATE:   DW   0   
3257   00 00        VAR_NESTING:   DW   0   
3259   00 00        VAR_SP0:   DW   0   ;PAR_STACK
325B   00 00        VAR_BASE:   DW   0   
325D   00 00        VAR_LATEST_STR:   DW   0   
325F   00 00        VAR_LATEST:   DW   0   
3261                          IF   TESTMODE   
3261                             ; used for mocking getc
3261   00 00        CHAR_POINTER:   DW   0   
3263                          ENDIF      
3263                START_USER:      ; user allocated data starts here


TESTMODE:           0001 DEFINED AT LINE 3
MEM_SIZE:           10000 DEFINED AT LINE 1 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
ROM_SIZE:           2000 DEFINED AT LINE 2 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 3 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
BM:                 0000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
EM:                 10000 DEFINED AT LINE 6 IN constants.z80
START_ROM:          0000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 14
END_ROM:            2000 DEFINED AT LINE 9 IN constants.z80
START_RAM:          2000 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
                    > USED AT LINE 63
END_RAM:            10000 DEFINED AT LINE 12 IN constants.z80
RET_STACK_SIZE:     0100 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 2 IN variables.z80
DATA_STACK_SIZE:    0100 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 7 IN variables.z80
PAD_SIZE:           0100 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 35 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 11 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 52 IN core-serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 20 IN constants.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 16 IN core-serial.z80
                    > USED AT LINE 19 IN variables.z80
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 26
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
MSK_HIDDEN:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 104 IN core-compiler.z80
                    > USED AT LINE 26
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
MSK_LENGTH:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 26
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
                    > USED AT LINE 48 IN core-compiler.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 8 IN core-extra.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN core-serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 23 IN core-kernel.z80
                    > USED AT LINE 19 IN core-serial.z80
LINK:               1420 DEFINED AT LINE 9
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
STRUC_COUNT:        2D8B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        141B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
CPL_COUNT:          13DE DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 15
RST08:              0008 DEFINED AT LINE 20
RST38:              0038 DEFINED AT LINE 24
RST66:              0066 DEFINED AT LINE 28
START:              0067 DEFINED AT LINE 31
                    > USED AT LINE 17
HEADER_ZLESS:       0073 DEFINED AT LINE 6
                    > USED AT LINE 9
ZLESS:              0078 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
                    > USED AT LINE 215 IN core-alu.z80
                    > USED AT LINE 219 IN core-alu.z80
HEADER_ANDD:        0080 DEFINED AT LINE 6
                    > USED AT LINE 9
ANDD:               0086 DEFINED AT LINE 13
                    > USED AT LINE 5 IN core-extra.z80
                    > USED AT LINE 18 IN core-extra.z80
                    > USED AT LINE 29 IN core-extra.z80
HEADER_ORR:         0099 DEFINED AT LINE 6
                    > USED AT LINE 9
ORR:                009E DEFINED AT LINE 13
HEADER_XORR:        00B1 DEFINED AT LINE 6
                    > USED AT LINE 9
XORR:               00B7 DEFINED AT LINE 13
                    > USED AT LINE 82 IN core-alu.z80
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 214 IN core-alu.z80
HEADER_PLUS:        00CA DEFINED AT LINE 6
                    > USED AT LINE 9
PLUS:               00CE DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 19 IN core-interpreter.z80
HEADER_INVER:       00DE DEFINED AT LINE 6
                    > USED AT LINE 9
INVER:              00E4 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 63 IN core-alu.z80
HEADER_NEGAT:       00ED DEFINED AT LINE 6
                    > USED AT LINE 9
NEGAT:              00F6 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 75 IN core-alu.z80
                    > USED AT LINE 207 IN core-alu.z80
                    > USED AT LINE 227 IN core-alu.z80
                    > USED AT LINE 232 IN core-alu.z80
HEADER_DNEGA:       00FD DEFINED AT LINE 6
                    > USED AT LINE 9
DNEGA:              0107 DEFINED AT LINE 13
HEADER_SUBB:        011A DEFINED AT LINE 6
                    > USED AT LINE 9
SUBB:               011E DEFINED AT LINE 13
                    > USED AT LINE 96 IN core-alu.z80
                    > USED AT LINE 105 IN core-alu.z80
                    > USED AT LINE 6 IN core-utilities.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_ABS:         0125 DEFINED AT LINE 6
                    > USED AT LINE 9
ABS:                012B DEFINED AT LINE 13
                    > USED AT LINE 201 IN core-alu.z80
                    > USED AT LINE 222 IN core-alu.z80
ABS1:               0136 DEFINED AT LINE 76 IN core-alu.z80
HEADER_EQUAL:       0138 DEFINED AT LINE 6
                    > USED AT LINE 9
EQUAL:              013C DEFINED AT LINE 13
EQU1:               0149 DEFINED AT LINE 85 IN core-alu.z80
                    > USED AT LINE 83 IN core-alu.z80
HEADER_ULESS:       014F DEFINED AT LINE 6
                    > USED AT LINE 9
ULESS:              0154 DEFINED AT LINE 13
ULES1:              0167 DEFINED AT LINE 95 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
HEADER_LESS:        016D DEFINED AT LINE 6
                    > USED AT LINE 9
LESS:               0171 DEFINED AT LINE 13
                    > USED AT LINE 147 IN core-alu.z80
                    > USED AT LINE 265 IN core-alu.z80
                    > USED AT LINE 277 IN core-alu.z80
LESS1:              0182 DEFINED AT LINE 104 IN core-alu.z80
HEADER_UPLUS:       0188 DEFINED AT LINE 6
                    > USED AT LINE 9
UPLUS:              018E DEFINED AT LINE 13
UMP2:               01A8 DEFINED AT LINE 137 IN core-alu.z80
UMP1:               01A9 DEFINED AT LINE 139 IN core-alu.z80
                    > USED AT LINE 136 IN core-alu.z80
HEADER_GREATERTHAN: 01AC DEFINED AT LINE 6
                    > USED AT LINE 9
GREATERTHAN:        01B0 DEFINED AT LINE 13
HEADER_ZEQUAL:      01C8 DEFINED AT LINE 6
                    > USED AT LINE 9
ZEQUAL:             01CD DEFINED AT LINE 13
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 161 IN core-compiler.z80
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 187 IN core-interpreter.z80
                    > USED AT LINE 206 IN core-interpreter.z80
                    > USED AT LINE 91
L_M_742S152:        01D5 DEFINED AT LINE 75
                    > USED AT LINE 72
CUR_ADR:            2D8C DEFINED AT LINE 63
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
HEADER_ZNOTEQUAL:   01DC DEFINED AT LINE 6
                    > USED AT LINE 9
ZNOTEQUAL:          01E2 DEFINED AT LINE 13
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 174 IN core-interpreter.z80
L_M_749S160:        01EA DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_OR:          01F0 DEFINED AT LINE 6
                    > USED AT LINE 9
OR:                 01F5 DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-interpreter.z80
                    > USED AT LINE 210 IN core-interpreter.z80
HEADER_USTAR:       0208 DEFINED AT LINE 6
                    > USED AT LINE 9
USTAR:              020D DEFINED AT LINE 13
                    > USED AT LINE 202 IN core-alu.z80
HEADER_USLASHMOD:   0227 DEFINED AT LINE 6
                    > USED AT LINE 9
USLASHMOD:          022F DEFINED AT LINE 13
                    > USED AT LINE 223 IN core-alu.z80
HEADER_CELLS:       024B DEFINED AT LINE 6
                    > USED AT LINE 9
CELLS:              0253 DEFINED AT LINE 13
HEADER_STAR:        0256 DEFINED AT LINE 6
                    > USED AT LINE 9
STAR:               025A DEFINED AT LINE 13
HEADER_SLASHMOD:    027A DEFINED AT LINE 6
                    > USED AT LINE 9
SLASHMOD:           0281 DEFINED AT LINE 13
                    > USED AT LINE 238 IN core-alu.z80
                    > USED AT LINE 244 IN core-alu.z80
HEADER_SLASH:       02B5 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASH:              02B9 DEFINED AT LINE 13
HEADER_MOD:         02C5 DEFINED AT LINE 6
                    > USED AT LINE 9
MOD:                02CB DEFINED AT LINE 13
HEADER_ONEMINUS:    02D5 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEMINUS:           02DA DEFINED AT LINE 13
HEADER_TWOMINUS:    02DE DEFINED AT LINE 6
                    > USED AT LINE 9
TWOMINUS:           02E3 DEFINED AT LINE 13
HEADER_CELLP:       02E8 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLP:              02F0 DEFINED AT LINE 13
HEADER_MIN:         02F3 DEFINED AT LINE 6
                    > USED AT LINE 9
MIN:                02F9 DEFINED AT LINE 13
HEADER_MAX:         0313 DEFINED AT LINE 6
                    > USED AT LINE 9
MAX:                0319 DEFINED AT LINE 13
HEADER_ONEP:        0333 DEFINED AT LINE 6
                    > USED AT LINE 9
ONEP:               0338 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_TWOPLUS:     033C DEFINED AT LINE 6
                    > USED AT LINE 9
TWOPLUS:            0341 DEFINED AT LINE 13
                    > USED AT LINE 259 IN core-alu.z80
HEADER_TWOSTAR:     0346 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSTAR:            034B DEFINED AT LINE 13
                    > USED AT LINE 196 IN core-alu.z80
HEADER_TWOSLASH:    0352 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSLASH:           0357 DEFINED AT LINE 13
NEGATENUM:          035E DEFINED AT LINE 313 IN core-alu.z80
                    > USED AT LINE 47 IN core-format.z80
                    > USED AT LINE 165 IN core-format.z80
DIVIDEWORDBYBYTE:   0366 DEFINED AT LINE 330 IN core-alu.z80
                    > USED AT LINE 53 IN core-format.z80
L_M_898S333:        036E DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_901S336:        0376 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_906S341:        0382 DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   0387 DEFINED AT LINE 356 IN core-alu.z80
                    > USED AT LINE 189 IN core-alu.z80
L_M_924S361:        0393 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_928S365:        039E DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_938S375:        03AD DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_942S379:        03B8 DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   03C1 DEFINED AT LINE 398 IN core-alu.z80
                    > USED AT LINE 180 IN core-alu.z80
                    > USED AT LINE 123 IN core-format.z80
                    > USED AT LINE 153 IN core-format.z80
L_M_963S402:        03CC DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_968S407:        03DA DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_COLON:       03E3 DEFINED AT LINE 6
                    > USED AT LINE 9
COLON:              03E7 DEFINED AT LINE 13
HEADER_SEMICOLON:   040B DEFINED AT LINE 6
                    > USED AT LINE 9
SEMICOLON:          040F DEFINED AT LINE 13
HEADER_COLONNONAME: 0423 DEFINED AT LINE 6
                    > USED AT LINE 9
COLONNONAME:        042D DEFINED AT LINE 13
HEADER_VARIABLE:    043F DEFINED AT LINE 6
                    > USED AT LINE 9
VARIABLE:           044A DEFINED AT LINE 13
HEADER_BUFFERCOLON: 0460 DEFINED AT LINE 6
                    > USED AT LINE 9
BUFFERCOLON:        046A DEFINED AT LINE 13
HEADER_CREATE:      047A DEFINED AT LINE 6
                    > USED AT LINE 9
CREATE:             0483 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-compiler.z80
                    > USED AT LINE 69 IN core-compiler.z80
XCREATE:            04AD DEFINED AT LINE 51 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
HEADER_DOES:        04B5 DEFINED AT LINE 6
                    > USED AT LINE 9
DOES:               04BD DEFINED AT LINE 13
HEADER_CONSTANT:    04E3 DEFINED AT LINE 6
                    > USED AT LINE 9
CONSTANT:           04EE DEFINED AT LINE 13
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
HEADER_TICK:        04FF DEFINED AT LINE 6
                    > USED AT LINE 9
TICK:               0503 DEFINED AT LINE 13
HEADER_IMMEDIATE:   051D DEFINED AT LINE 6
                    > USED AT LINE 9
IMMEDIATE:          0529 DEFINED AT LINE 13
HEADER_FIND:        0535 DEFINED AT LINE 6
                    > USED AT LINE 9
FIND:               053C DEFINED AT LINE 13
HEADER_HIDDEN:      054E DEFINED AT LINE 6
                    > USED AT LINE 9
HIDDEN:             0557 DEFINED AT LINE 13
HEADER_LBRAC:       056C DEFINED AT LINE 6
                    > USED AT LINE 9
LBRAC:              0570 DEFINED AT LINE 13
                    > USED AT LINE 16 IN core-compiler.z80
HEADER_RBRAC:       0579 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRAC:              057D DEFINED AT LINE 13
                    > USED AT LINE 9 IN core-compiler.z80
                    > USED AT LINE 23 IN core-compiler.z80
DODOES:             0586 DEFINED AT LINE 118 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
XDOES:              0596 DEFINED AT LINE 125 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
HEADER_POSTPONE:    05B0 DEFINED AT LINE 6
                    > USED AT LINE 9
POSTPONE:           05BB DEFINED AT LINE 13
POSTPONETOKEN:      05D9 DEFINED AT LINE 145 IN core-compiler.z80
                    > USED AT LINE 141 IN core-compiler.z80
POSTPONEWORD:       05F5 DEFINED AT LINE 156 IN core-compiler.z80
                    > USED AT LINE 150 IN core-compiler.z80
POSTPONELITERAL:    0631 DEFINED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
HEADER_IF:          0662 DEFINED AT LINE 6
                    > USED AT LINE 9
IF:                 0667 DEFINED AT LINE 13
HEADER_ELSE:        067D DEFINED AT LINE 6
                    > USED AT LINE 9
ELSE:               0684 DEFINED AT LINE 13
HEADER_ENDIF:       069E DEFINED AT LINE 6
                    > USED AT LINE 9
ENDIF:              06A6 DEFINED AT LINE 13
XENDIF:             06B0 DEFINED AT LINE 23 IN core-control.z80
                    > USED AT LINE 14 IN core-control.z80
                    > USED AT LINE 19 IN core-control.z80
HEADER_BEGIN:       06C4 DEFINED AT LINE 6
                    > USED AT LINE 9
BEGIN:              06CC DEFINED AT LINE 13
HEADER_WHILE:       06D8 DEFINED AT LINE 6
                    > USED AT LINE 9
WHILE:              06E0 DEFINED AT LINE 13
HEADER_REPEAT:      06F6 DEFINED AT LINE 6
                    > USED AT LINE 9
REPEAT:             06FF DEFINED AT LINE 13
HEADER_QBRAN:       0725 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN:              072F DEFINED AT LINE 13
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 91
HEADER_BRAN:        0743 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN:               074C DEFINED AT LINE 13
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 60 IN core-control.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
HEADER_QBRAN1:      0755 DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN1:             0760 DEFINED AT LINE 13
                    > USED AT LINE 83 IN core-alu.z80
                    > USED AT LINE 93 IN core-alu.z80
HEADER_BRAN1:       0774 DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN1:              077E DEFINED AT LINE 13
                    > USED AT LINE 79 IN core-control.z80
HEADER_VERSION:     0786 DEFINED AT LINE 6
                    > USED AT LINE 9
VERSION:            0790 DEFINED AT LINE 13
HEADER_RZ:          07A0 DEFINED AT LINE 6
                    > USED AT LINE 9
RZ:                 07A5 DEFINED AT LINE 13
HEADER___MSK_IMMED: 07B5 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_HIDDEN: 07D1 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_LENGTH: 07EE DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER_TRUE:        080B DEFINED AT LINE 6
                    > USED AT LINE 9
TRUE:               0812 DEFINED AT LINE 13
HEADER_FALSE:       0822 DEFINED AT LINE 6
                    > USED AT LINE 9
FALSE:              082A DEFINED AT LINE 13
HEADER_PAD:         083A DEFINED AT LINE 6
                    > USED AT LINE 9
PAD:                0840 DEFINED AT LINE 13
HEADER_HERE:        0850 DEFINED AT LINE 6
                    > USED AT LINE 9
HERE:               0857 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 48 IN core-memory.z80
HEADER_INTP_STOP:   0867 DEFINED AT LINE 6
                    > USED AT LINE 9
INTP_STOP:          0873 DEFINED AT LINE 13
HEADER_STATE:       0883 DEFINED AT LINE 6
                    > USED AT LINE 9
STATE:              088B DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
HEADER_NESTING:     089B DEFINED AT LINE 6
                    > USED AT LINE 9
NESTING:            08A5 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
HEADER_SP0:         08B5 DEFINED AT LINE 6
                    > USED AT LINE 9
SP0:                08BB DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
HEADER_BASE:        08CB DEFINED AT LINE 6
                    > USED AT LINE 9
BASE:               08D2 DEFINED AT LINE 13
HEADER_LATESTSTR:   08E2 DEFINED AT LINE 6
                    > USED AT LINE 9
LATESTSTR:          08EE DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 33 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
HEADER_LBRACE:      08FE DEFINED AT LINE 6
                    > USED AT LINE 9
LBRACE:             0902 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-control.z80
                    > USED AT LINE 34 IN core-control.z80
HEADER_RBRACE:      0926 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACE:             092A DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-extra.z80
HEADER_RBRACEEXEC:  094A DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACEEXEC:         0952 DEFINED AT LINE 13
                    > USED AT LINE 20 IN core-control.z80
                    > USED AT LINE 53 IN core-control.z80
HEADER_DOT:         0974 DEFINED AT LINE 6
                    > USED AT LINE 9
DOT:                0978 DEFINED AT LINE 13
PRINTNUM:           099D DEFINED AT LINE 18 IN core-format.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
FORMATNUM:          09B6 DEFINED AT LINE 39 IN core-format.z80
                    > USED AT LINE 9 IN core-format.z80
                    > USED AT LINE 26 IN core-format.z80
L_M_1304S42:        09BE DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1312S51:        09CC DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1321S60:        09E0 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1325S64:        09EB DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           09FB DEFINED AT LINE 87 IN core-format.z80
                    > USED AT LINE 174 IN core-format.z80
L_M_1353S97:        0A0F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1363S107:       0A21 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1369S113:       0A2F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1385S130:       0A4A DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1389S134:       0A56 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0A81 DEFINED AT LINE 160 IN core-format.z80
                    > USED AT LINE 132 IN core-format.z80
L_M_1415S163:       0A8A DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_NUMBER:      0A93 DEFINED AT LINE 6
                    > USED AT LINE 9
NUMBER:             0A9C DEFINED AT LINE 13
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 206 IN core-interpreter.z80
HEADER_DECIMAL:     0AB6 DEFINED AT LINE 6
                    > USED AT LINE 9
DECIMAL:            0AC0 DEFINED AT LINE 13
HEADER_HEX:         0ACE DEFINED AT LINE 6
                    > USED AT LINE 9
HEX:                0AD4 DEFINED AT LINE 13
HEADER_QUIT:        0AE2 DEFINED AT LINE 6
                    > USED AT LINE 9
QUIT:               0AE9 DEFINED AT LINE 13
HEADER_WORD:        0AF7 DEFINED AT LINE 6
                    > USED AT LINE 9
WORD:               0AFE DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_TCFA:        0B0E DEFINED AT LINE 6
                    > USED AT LINE 9
TCFA:               0B15 DEFINED AT LINE 13
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 189 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_EXECUTE:     0B2B DEFINED AT LINE 6
                    > USED AT LINE 9
EXECUTE:            0B35 DEFINED AT LINE 13
                    > USED AT LINE 33 IN core-extra.z80
                    > USED AT LINE 196 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_INTERPRET:   0B42 DEFINED AT LINE 6
                    > USED AT LINE 9
INTERPRET:          0B4E DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-interpreter.z80
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
LOOKUP:             0B79 DEFINED AT LINE 47 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-compiler.z80
L_M_1480S49:        0B82 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1492S65:        0B92 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1501S76:        0BA1 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_XWORD:       0BAE DEFINED AT LINE 6
                    > USED AT LINE 9
XWORD:              0BB6 DEFINED AT LINE 13
                    > USED AT LINE 11 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-strings.z80
XWORDSKIP:          0BBF DEFINED AT LINE 97 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-interpreter.z80
L_M_1525S103:       0BFA DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1527S106:       0C02 DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1529S109:       0C0A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1535S116:       0C19 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1536S117:       0C1E DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1539S120:       0C29 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1546S128:       0C3B DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1549S132:       0C46 DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0C53 DEFINED AT LINE 144 IN core-interpreter.z80
                    > USED AT LINE 94 IN core-interpreter.z80
L_M_1565S151:       0C7F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1569S155:       0C87 DEFINED AT LINE 73
                    > USED AT LINE 70
INTERPTOKEN:        0C9D DEFINED AT LINE 171 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-interpreter.z80
INTERPWORD:         0CB9 DEFINED AT LINE 182 IN core-interpreter.z80
                    > USED AT LINE 176 IN core-interpreter.z80
INTERPLITERAL:      0CFD DEFINED AT LINE 203 IN core-interpreter.z80
                    > USED AT LINE 178 IN core-interpreter.z80
NESTPLUS:           0D3C DEFINED AT LINE 223 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-extra.z80
NESTMINUS:          0D46 DEFINED AT LINE 229 IN core-interpreter.z80
                    > USED AT LINE 15 IN core-extra.z80
HEADER_TYPE:        0D50 DEFINED AT LINE 6
                    > USED AT LINE 9
TYPE:               0D57 DEFINED AT LINE 13
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 219 IN core-interpreter.z80
                    > USED AT LINE 54 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
HEADER_CR:          0D71 DEFINED AT LINE 6
                    > USED AT LINE 9
CR:                 0D76 DEFINED AT LINE 13
HEADER_ACCEPT:      0D7C DEFINED AT LINE 6
                    > USED AT LINE 9
ACCEPT:             0D85 DEFINED AT LINE 13
HEADER_KEY:         0DA1 DEFINED AT LINE 6
                    > USED AT LINE 9
KEY:                0DA7 DEFINED AT LINE 13
HEADER_EMIT:        0DB0 DEFINED AT LINE 6
                    > USED AT LINE 9
EMIT:               0DB7 DEFINED AT LINE 13
HEADER_QKEY:        0DC8 DEFINED AT LINE 6
                    > USED AT LINE 9
QKEY:               0DCF DEFINED AT LINE 13
L_M_1670S33:        0DE5 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_BL:          0DEB DEFINED AT LINE 6
                    > USED AT LINE 9
BL:                 0DF0 DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_PRINT:       0DFA DEFINED AT LINE 6
                    > USED AT LINE 9
PRINT:              0E02 DEFINED AT LINE 13
HEADER_DOTQUOTE:    0E14 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTQUOTE:           0E19 DEFINED AT LINE 13
INITFORTH:          0E37 DEFINED AT LINE 1 IN core-kernel.z80
                    > USED AT LINE 34
ENTER:              0E72 DEFINED AT LINE 29 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 3 IN core-kernel.z80
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
ENTER1:             0E73 DEFINED AT LINE 31 IN core-kernel.z80
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
FORTH:              0E7A DEFINED AT LINE 40 IN core-kernel.z80
EXIT:               0E83 DEFINED AT LINE 47 IN core-kernel.z80
                    > USED AT LINE 77 IN core-alu.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
EXIT_FORTH:         0E86 DEFINED AT LINE 51 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
HEADER_NOOP:        0E87 DEFINED AT LINE 6
                    > USED AT LINE 9
NOOP:               0E8E DEFINED AT LINE 13
HEADER_STORE:       0E91 DEFINED AT LINE 6
                    > USED AT LINE 9
STORE:              0E95 DEFINED AT LINE 13
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 33 IN core-strings.z80
HEADER_FETCH:       0EB2 DEFINED AT LINE 6
                    > USED AT LINE 9
FETCH:              0EB6 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_CSTORE:      0EBF DEFINED AT LINE 6
                    > USED AT LINE 9
CSTORE:             0EC4 DEFINED AT LINE 13
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
HEADER_CFETCH:      0EDE DEFINED AT LINE 6
                    > USED AT LINE 9
CFETCH:             0EE3 DEFINED AT LINE 13
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_RSPSTORE:    0EEA DEFINED AT LINE 6
                    > USED AT LINE 9
RSPSTORE:           0EF1 DEFINED AT LINE 13
HEADER_SPFETCH:     0F01 DEFINED AT LINE 6
                    > USED AT LINE 9
SPFETCH:            0F07 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
HEADER_SPSTORE:     0F19 DEFINED AT LINE 6
                    > USED AT LINE 9
SPSTORE:            0F1F DEFINED AT LINE 13
HEADER_ALLOT:       0F31 DEFINED AT LINE 6
                    > USED AT LINE 9
ALLOT:              0F39 DEFINED AT LINE 13
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 40 IN core-strings.z80
HEADER_ADDSTORE:    0F43 DEFINED AT LINE 6
                    > USED AT LINE 9
ADDSTORE:           0F48 DEFINED AT LINE 13
                    > USED AT LINE 48 IN core-memory.z80
HEADER_COMMA:       0F68 DEFINED AT LINE 6
                    > USED AT LINE 9
COMMA:              0F6C DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 194 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
HEADER_CCOMMA:      0F83 DEFINED AT LINE 6
                    > USED AT LINE 9
CCOMMA:             0F88 DEFINED AT LINE 13
TXT_INTRO:          0FB1 DEFINED AT LINE 1 IN core-messages.z80
TXT_NEWLINE:        0FD7 DEFINED AT LINE 3 IN core-messages.z80
                    > USED AT LINE 267 IN core-serial.z80
TXT_PROMPT:         0FDA DEFINED AT LINE 4 IN core-messages.z80
                    > USED AT LINE 52
DONE:               0FDF DEFINED AT LINE 7 IN core-messages.z80
                    > USED AT LINE 52
FAILED:             0FEA DEFINED AT LINE 8 IN core-messages.z80
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
INITSERIAL:         0FF5 DEFINED AT LINE 3 IN core-serial.z80
                    > USED AT LINE 33
SERIALIN:           101E DEFINED AT LINE 25 IN core-serial.z80
                    > USED AT LINE 25
L_M_1834S31:        102A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1839S36:        1038 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1846S43:        1049 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1856S53:        1060 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               1068 DEFINED AT LINE 69 IN core-serial.z80
                    > USED AT LINE 146 IN core-serial.z80
PUTC:               1073 DEFINED AT LINE 115 IN core-serial.z80
                    > USED AT LINE 25 IN core-io.z80
                    > USED AT LINE 154 IN core-serial.z80
                    > USED AT LINE 157 IN core-serial.z80
                    > USED AT LINE 165 IN core-serial.z80
                    > USED AT LINE 190 IN core-serial.z80
                    > USED AT LINE 275 IN core-serial.z80
                    > USED AT LINE 43 IN core-utilities.z80
L_M_1914S117:       1079 DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         1087 DEFINED AT LINE 126 IN core-serial.z80
                    > USED AT LINE 31 IN core-io.z80
GETLINE:            108D DEFINED AT LINE 137 IN core-serial.z80
                    > USED AT LINE 14 IN core-io.z80
                    > USED AT LINE 215 IN core-serial.z80
L_M_1938S144:       10B3 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1939S145:       10B8 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1942S148:       10C3 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1944S150:       10CB DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1958S164:       10E8 DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       10FA DEFINED AT LINE 177 IN core-serial.z80
                    > USED AT LINE 169 IN core-serial.z80
                    > USED AT LINE 171 IN core-serial.z80
                    > USED AT LINE 174 IN core-serial.z80
PRINTROUTINE:       1109 DEFINED AT LINE 187 IN core-serial.z80
                    > USED AT LINE 244 IN core-serial.z80
                    > USED AT LINE 259 IN core-serial.z80
L_M_1980S188:       110E DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             111D DEFINED AT LINE 204 IN core-serial.z80
                    > USED AT LINE 104 IN core-interpreter.z80
                    > USED AT LINE 118 IN core-interpreter.z80
                    > USED AT LINE 159 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-io.z80
L_M_2002S212:       1130 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          1152 DEFINED AT LINE 236 IN core-serial.z80
                    > USED AT LINE 45 IN core-io.z80
                    > USED AT LINE 53
                    > USED AT LINE 268 IN core-serial.z80
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 53
PRINTSTR:           1161 DEFINED AT LINE 255 IN core-serial.z80
                    > USED AT LINE 10 IN core-format.z80
                    > USED AT LINE 27 IN core-format.z80
                    > USED AT LINE 3 IN core-io.z80
                    > USED AT LINE 41 IN core-utilities.z80
PRINTCR:            116B DEFINED AT LINE 265 IN core-serial.z80
                    > USED AT LINE 8 IN core-io.z80
                    > USED AT LINE 184 IN core-serial.z80
                    > USED AT LINE 49 IN core-utilities.z80
PRINTSPACE:         1174 DEFINED AT LINE 272 IN core-serial.z80
                    > USED AT LINE 11 IN core-format.z80
                    > USED AT LINE 28 IN core-format.z80
                    > USED AT LINE 155 IN core-serial.z80
                    > USED AT LINE 42 IN core-utilities.z80
HEADER_LIT:         117C DEFINED AT LINE 6
                    > USED AT LINE 9
LIT:                1182 DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-alu.z80
                    > USED AT LINE 64 IN core-alu.z80
                    > USED AT LINE 84 IN core-alu.z80
                    > USED AT LINE 86 IN core-alu.z80
                    > USED AT LINE 5 IN core-compiler.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 28 IN core-compiler.z80
                    > USED AT LINE 48 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 64 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 12 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 42 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 8 IN core-extra.z80
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 182 IN core-format.z80
                    > USED AT LINE 187 IN core-format.z80
                    > USED AT LINE 9 IN core-interpreter.z80
                    > USED AT LINE 16 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 40 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 24 IN core-strings.z80
                    > USED AT LINE 25 IN core-strings.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 29 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
                    > USED AT LINE 37 IN core-strings.z80
                    > USED AT LINE 38 IN core-strings.z80
                    > USED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 16 IN core-utilities.z80
HEADER_ROT:         1194 DEFINED AT LINE 6
                    > USED AT LINE 9
ROT:                119A DEFINED AT LINE 13
                    > USED AT LINE 225 IN core-alu.z80
HEADER_NROT:        11C7 DEFINED AT LINE 6
                    > USED AT LINE 9
NROT:               11CE DEFINED AT LINE 13
                    > USED AT LINE 203 IN core-alu.z80
                    > USED AT LINE 216 IN core-alu.z80
                    > USED AT LINE 220 IN core-alu.z80
                    > USED AT LINE 229 IN core-alu.z80
HEADER_DUPP:        11FD DEFINED AT LINE 6
                    > USED AT LINE 9
DUPP:               1203 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 25 IN core-control.z80
                    > USED AT LINE 50 IN core-control.z80
                    > USED AT LINE 31 IN core-extra.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 174 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 11 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_SWAP:        1210 DEFINED AT LINE 6
                    > USED AT LINE 9
SWAP:               1217 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 201 IN core-alu.z80
                    > USED AT LINE 222 IN core-alu.z80
                    > USED AT LINE 224 IN core-alu.z80
                    > USED AT LINE 230 IN core-alu.z80
                    > USED AT LINE 239 IN core-alu.z80
                    > USED AT LINE 269 IN core-alu.z80
                    > USED AT LINE 279 IN core-alu.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 13 IN core-control.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 48 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_DROP:        1230 DEFINED AT LINE 6
                    > USED AT LINE 9
DROP:               1237 DEFINED AT LINE 13
                    > USED AT LINE 94 IN core-alu.z80
                    > USED AT LINE 103 IN core-alu.z80
                    > USED AT LINE 202 IN core-alu.z80
                    > USED AT LINE 239 IN core-alu.z80
                    > USED AT LINE 245 IN core-alu.z80
                    > USED AT LINE 267 IN core-alu.z80
                    > USED AT LINE 269 IN core-alu.z80
                    > USED AT LINE 279 IN core-alu.z80
                    > USED AT LINE 281 IN core-alu.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 173 IN core-compiler.z80
                    > USED AT LINE 179 IN core-compiler.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 205 IN core-interpreter.z80
                    > USED AT LINE 216 IN core-interpreter.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 66 IN core-stacks.z80
                    > USED AT LINE 18 IN core-utilities.z80
HEADER_OVER:        1244 DEFINED AT LINE 6
                    > USED AT LINE 9
OVER:               124B DEFINED AT LINE 13
                    > USED AT LINE 200 IN core-alu.z80
                    > USED AT LINE 200 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 218 IN core-alu.z80
                    > USED AT LINE 264 IN core-alu.z80
                    > USED AT LINE 264 IN core-alu.z80
                    > USED AT LINE 276 IN core-alu.z80
                    > USED AT LINE 276 IN core-alu.z80
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 72 IN core-stacks.z80
                    > USED AT LINE 4 IN core-strings.z80
HEADER_TOR:         126E DEFINED AT LINE 6
                    > USED AT LINE 9
TOR:                1273 DEFINED AT LINE 13
                    > USED AT LINE 63 IN core-alu.z80
                    > USED AT LINE 5 IN core-strings.z80
HEADER_RFROM:       1283 DEFINED AT LINE 6
                    > USED AT LINE 9
RFROM:              1288 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 53 IN core-compiler.z80
                    > USED AT LINE 71 IN core-compiler.z80
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 127 IN core-compiler.z80
                    > USED AT LINE 3 IN core-strings.z80
HEADER_DDROP:       1298 DEFINED AT LINE 6
                    > USED AT LINE 9
DDROP:              12A0 DEFINED AT LINE 13
HEADER_DDUP:        12A7 DEFINED AT LINE 6
                    > USED AT LINE 9
DDUP:               12AE DEFINED AT LINE 13
                    > USED AT LINE 92 IN core-alu.z80
                    > USED AT LINE 102 IN core-alu.z80
LITSTR:             12B5 DEFINED AT LINE 1 IN core-strings.z80
                    > USED AT LINE 180 IN core-compiler.z80
                    > USED AT LINE 217 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-strings.z80
HEADER_COUNT:       12C7 DEFINED AT LINE 6
                    > USED AT LINE 9
COUNT:              12CF DEFINED AT LINE 13
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 17 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
                    > USED AT LINE 35 IN core-strings.z80
HEADER_SQUOTE:      12E1 DEFINED AT LINE 6
                    > USED AT LINE 9
SQUOTE:             12E6 DEFINED AT LINE 13
HEADER_QT:          12E8 DEFINED AT LINE 6
                    > USED AT LINE 9
QT:                 12EC DEFINED AT LINE 13
                    > USED AT LINE 51 IN core-io.z80
                    > USED AT LINE 18 IN core-strings.z80
COMPARESTR:         1340 DEFINED AT LINE 53 IN core-strings.z80
                    > USED AT LINE 71 IN core-interpreter.z80
L_M_2171S56:        1348 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2172S57:        134D DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2176S61:        1357 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        1366 DEFINED AT LINE 6
                    > USED AT LINE 9
PACK:               136D DEFINED AT LINE 13
HEADER_DOTS:        138D DEFINED AT LINE 6
                    > USED AT LINE 9
DOTS:               1392 DEFINED AT LINE 13
HEADER_WORDS:       13E4 DEFINED AT LINE 6
                    > USED AT LINE 9
WORDS:              13EC DEFINED AT LINE 13
LISTWORDS:          13F4 DEFINED AT LINE 28 IN core-utilities.z80
                    > USED AT LINE 24 IN core-utilities.z80
L_M_2226S30:        13FD DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_LATEST:      1420 DEFINED AT LINE 6
                    > USED AT LINE 19 IN core-kernel.z80
                    > USED AT LINE 9
LATEST:             1429 DEFINED AT LINE 13
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
TESTS_START:        2000 DEFINED AT LINE 67
                    > USED AT LINE 37
TST_TEXTM_2296S7:   2012 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2298S9:   2048 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2300S11:  206F DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2302S13:   20A5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2302S13:   20AD DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2303S15:  20BF DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2305S17:  20E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2307S19:   211F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2307S19:   2127 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2308S21:  2139 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2310S23:  216B DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2312S25:  218A DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2314S28:  21A7 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2316S30:  21DB DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2318S32:  2201 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2320S35:  2220 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2322S37:  2249 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2324S39:   227F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2324S39:   2285 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2326S42:  22A4 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2328S44:   22DC DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2328S44:   22EC DEFINED AT LINE 37
                    > USED AT LINE 26
TE_FAILM_2329S45:   2317 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2329S45:   2329 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2330S47:  233B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2332S49:   2373 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2332S49:   2381 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2333S51:  2393 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2335S53:  23C0 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2337S55:   23F9 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2337S55:   240D DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2338S57:  241F DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2341S60:  2453 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2343S62:  2477 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2345S64:   24B0 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2345S64:   24C2 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2346S66:  24D4 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2349S69:  250A DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2351S71:   2542 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2351S71:   2552 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2354S75:  257E DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2356S78:  25B2 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2358S80:   25EE DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2358S80:   2605 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2360S83:  2624 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2362S85:   2660 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2362S85:   2677 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2363S87:  2689 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2366S92:  26D3 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2368S94:   270F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2368S94:   2719 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2370S98:  2738 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2372S100:  2774 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2372S100:  277E DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2373S102: 2790 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2376S105: 27E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2378S107:  2826 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2378S107:  283B DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2379S110: 284D DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2381S112:  2885 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2381S112:  2899 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2382S114: 28AB DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2384S116:  28E5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2384S116:  28EF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2385S118: 2901 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2389S123: 2940 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2391S125:  2978 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2391S125:  2984 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2392S127: 2996 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2394S130: 2A2C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2396S133: 2A4C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2398S135: 2A77 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2400S137: 2A9B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2402S139:  2AD3 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2402S139:  2ADF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2403S141: 2AF1 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2405S143: 2B13 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2407S145:  2B4B DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2407S145:  2B57 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2408S146: 2B69 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2534S18:  2B89 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2536S20:   2BCA DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2536S20:   2BDA DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2537S22:  2BEC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2539S24:   2C2D DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2539S24:   2C44 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2540S1:   2C56 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2542S3:    2C94 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2542S3:    2CA4 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2543S5:   2CB6 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2545S8:   2CDC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2547S10:   2D18 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2547S10:   2D2C DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2548S12:  2D3E DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2550S14:   2D79 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2550S14:   2D8C DEFINED AT LINE 37
                    > USED AT LINE 26
RET_STACK:          2EA7 DEFINED AT LINE 3 IN variables.z80
                    > USED AT LINE 32
                    > USED AT LINE 26
RPP:                2EA7 DEFINED AT LINE 4 IN variables.z80
DATA_STACK:         2EA7 DEFINED AT LINE 6 IN variables.z80
                    > USED AT LINE 2 IN core-kernel.z80
SPP:                2FA7 DEFINED AT LINE 8 IN variables.z80
SERBUF:             3000 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 7 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 44 IN core-serial.z80
SERINPTR:           303F DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 8 IN core-serial.z80
                    > USED AT LINE 39 IN core-serial.z80
                    > USED AT LINE 46 IN core-serial.z80
SERRDPTR:           3041 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 9 IN core-serial.z80
SERBUFUSED:         3043 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 5 IN core-serial.z80
                    > USED AT LINE 34 IN core-serial.z80
                    > USED AT LINE 49 IN core-serial.z80
                    > USED AT LINE 51 IN core-serial.z80
                    > USED AT LINE 127 IN core-serial.z80
LINEBUFSTART:       3045 DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 12 IN core-serial.z80
                    > USED AT LINE 213 IN core-serial.z80
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
LINEBUFSIZE:        3047 DEFINED AT LINE 16 IN variables.z80
                    > USED AT LINE 17 IN core-serial.z80
                    > USED AT LINE 214 IN core-serial.z80
CURRKEY:            3049 DEFINED AT LINE 17 IN variables.z80
                    > USED AT LINE 13 IN core-serial.z80
                    > USED AT LINE 208 IN core-serial.z80
                    > USED AT LINE 217 IN core-serial.z80
                    > USED AT LINE 222 IN core-serial.z80
                    > USED AT LINE 225 IN core-serial.z80
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
LINEBUFTOP:         304B DEFINED AT LINE 18 IN variables.z80
                    > USED AT LINE 14 IN core-serial.z80
                    > USED AT LINE 209 IN core-serial.z80
                    > USED AT LINE 220 IN core-serial.z80
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
LINEBUF:            304D DEFINED AT LINE 19 IN variables.z80
                    > USED AT LINE 11 IN core-serial.z80
                    > USED AT LINE 216 IN core-serial.z80
WORDBUF:            30CD DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 8 IN core-format.z80
                    > USED AT LINE 25 IN core-format.z80
                    > USED AT LINE 71 IN core-format.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
WORDBUF2:           310D DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 29 IN core-strings.z80
VAR_PAD:            314D DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 19
EXITADDR:           324D DEFINED AT LINE 25 IN variables.z80
                    > USED AT LINE 41 IN core-kernel.z80
                    > USED AT LINE 43 IN core-kernel.z80
IS_LITERAL:         324F DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 9 IN core-kernel.z80
VAR_HERE:           3251 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 17 IN core-kernel.z80
                    > USED AT LINE 64 IN core-memory.z80
                    > USED AT LINE 66 IN core-memory.z80
                    > USED AT LINE 72 IN core-memory.z80
                    > USED AT LINE 75 IN core-memory.z80
VAR_INTP_STOP:      3253 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 8 IN core-kernel.z80
VAR_STATE:          3255 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 110 IN core-compiler.z80
                    > USED AT LINE 115 IN core-compiler.z80
                    > USED AT LINE 19
                    > USED AT LINE 11 IN core-kernel.z80
VAR_NESTING:        3257 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 224 IN core-interpreter.z80
                    > USED AT LINE 226 IN core-interpreter.z80
                    > USED AT LINE 230 IN core-interpreter.z80
                    > USED AT LINE 232 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-kernel.z80
VAR_SP0:            3259 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 4 IN core-kernel.z80
VAR_BASE:           325B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 6 IN core-format.z80
                    > USED AT LINE 23 IN core-format.z80
                    > USED AT LINE 122 IN core-format.z80
                    > USED AT LINE 140 IN core-format.z80
                    > USED AT LINE 152 IN core-format.z80
                    > USED AT LINE 14 IN core-kernel.z80
VAR_LATEST_STR:     325D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 21 IN core-kernel.z80
VAR_LATEST:         325F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 82 IN core-compiler.z80
                    > USED AT LINE 48 IN core-interpreter.z80
                    > USED AT LINE 20 IN core-kernel.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 19
CHAR_POINTER:       3261 DEFINED AT LINE 40 IN variables.z80
                    > USED AT LINE 73 IN core-serial.z80
                    > USED AT LINE 76 IN core-serial.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
START_USER:         3263 DEFINED AT LINE 82
                    > USED AT LINE 16 IN core-kernel.z80
