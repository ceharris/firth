0000                          .ENGINE   mycomputer   
0000                TESTMODE:   EQU   1   
0000                MEM_SIZE:   EQU   $10000   ; MEM is 64K
0000                ROM_SIZE:   EQU   $2000   ; ROM is 8K
0000                RAM_SIZE:   EQU   MEM_SIZE - ROM_SIZE   ; RAM is 64K - 8K
0000                BM:       EQU   0   ; bottom of ROM memory
0000                EM:       EQU   BM + MEM_SIZE   
0000                START_ROM:   EQU   BM   ; inclusive
0000                END_ROM:   EQU   BM + ROM_SIZE   ; exclusive
0000                START_RAM:   EQU   BM + ROM_SIZE   ; inclusive
0000                END_RAM:   EQU   START_RAM + RAM_SIZE   ; exclusive
0000                RET_STACK_SIZE:   EQU   $100   ; return stack
0000                DATA_STACK_SIZE:   EQU   $100   ; data stack
0000                PAD_SIZE:   EQU   $100   ; user scratch pad
0000                SER_BUFSIZE:   EQU   3FH   
0000                SER_FULLSIZE:   EQU   30H   
0000                SER_EMPTYSIZE:   EQU   5   
0000                LINE_BUFSIZE:   EQU   128   
0000                IO_DATA:   EQU   $81   
0000                IO_CTRL:   EQU   $80   
0000                MSK_IMMED:   EQU   $80   
0000                MSK_HIDDEN:   EQU   $40   
0000                MSK_LENGTH:   EQU   $3f   ; length mask
0000                CALL_OPCODE:   EQU   $CD   
0000                JP_OPCODE:   EQU   $C3   
0000                LD_HL_OPCODE:   EQU   $21   
0000                POP_HL_OPCODE:   EQU   $E1   
0000                RET_OPCODE:   EQU   $C9   
0000                RST08_OPCODE:   EQU   $CF   ; call enter
0000                RTS_HIGH:   EQU   0D6H   ; 11010110
0000                RTS_LOW:   EQU   096H   ; 10010110
0000                             ; Store the chain of links.
0000                LINK:     .SET   0   
0000                .macro MCODE,name,namelen,flags,label
0000                             ; 
0000                HEADER_label:
0000                 DW link		            ; link
0000                link: .set HEADER_label
0000                 DB flags + namelen	; flags + length byte
0000                 DB name		    ; the name
0000                label:
0000                .endm
0000                 
0000                .macro MVAR,name,namelen,flags,label,var_label
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, var_label
0000                 NEXT
0000                .endm
0000                 
0000                .macro MCONST,name,namelen,flags,label,value
0000                             ; 
0000                mCODE name,namelen,flags,label
0000                 ppush0 B,C
0000                 ld BC, value
0000                 NEXT
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Control-flow Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                STRUC_COUNT:   .SET   0   
0000                STRUC_12:   .SET   0   
0000                STRUC_11:   .SET   0   
0000                STRUC_10:   .SET   0   
0000                STRUC_9:   .SET   0   
0000                STRUC_8:   .SET   0   
0000                STRUC_7:   .SET   0   
0000                STRUC_6:   .SET   0   
0000                STRUC_5:   .SET   0   
0000                STRUC_4:   .SET   0   
0000                STRUC_3:   .SET   0   
0000                STRUC_2:   .SET   0   
0000                STRUC_TOP:   .SET   0   
0000                .macro STRUC_PUSH,arg
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT + 1
0000                 STRUC_12 .set STRUC_11
0000                 STRUC_11 .set STRUC_10
0000                 STRUC_10 .set STRUC_9
0000                 STRUC_9 .set STRUC_8
0000                 STRUC_8 .set STRUC_7
0000                 STRUC_7 .set STRUC_6
0000                 STRUC_6 .set STRUC_5
0000                 STRUC_5 .set STRUC_4
0000                 STRUC_4 .set STRUC_3
0000                 STRUC_3 .set STRUC_2
0000                 STRUC_2 .set STRUC_TOP
0000                 STRUC_TOP .set arg
0000                .endm
0000                 
0000                .macro STRUC_POP,
0000                             ; 
0000                 STRUC_COUNT .set STRUC_COUNT - 1
0000                 STRUC_TOP .set STRUC_2
0000                 STRUC_2 .set STRUC_3
0000                 STRUC_3 .set STRUC_4
0000                 STRUC_4 .set STRUC_5
0000                 STRUC_5 .set STRUC_6
0000                 STRUC_6 .set STRUC_7
0000                 STRUC_7 .set STRUC_8
0000                 STRUC_8 .set STRUC_9
0000                 STRUC_9 .set STRUC_10
0000                 STRUC_10 .set STRUC_11
0000                 STRUC_11 .set STRUC_12
0000                 STRUC_12 .set 0
0000                .endm
0000                 
0000                .macro STRUC_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org STRUC_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                             ; if
0000                .macro _IF,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ELSE,
0000                             ; 
0000                 jp $              ; placeholder jump to _endif
0000                 STRUC_FWD
0000                 STRUC_TOP .set $  ;reuse top of stack
0000                .endm
0000                 
0000                .macro _ENDIF,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; switch
0000                .macro _SWITCH,
0000                             ; 
0000                 jr L_%%M
0000                 jp $            ; placeholder jump to endswitch
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _CASE,flag
0000                             ; 
0000                 jp flag, L_%%M
0000                 jp $            ; placeholder jump to endcase
0000                 STRUC_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _ENDCASE,
0000                             ; 
0000                 jp STRUC_2 - 3  ; jump to placeholder jump to endswitch
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                .macro _ENDSWITCH,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ; skip
0000                .macro _SKIP,
0000                             ; 
0000                 jp $              ; placeholder jump to _else or _endif
0000                 STRUC_PUSH $
0000                .endm
0000                 
0000                .macro _ENDSKIP,
0000                             ; 
0000                 STRUC_FWD
0000                 STRUC_POP
0000                .endm
0000                 
0000                             ;-------------------------------------------------------------------------------
0000                             ; 
0000                             ; Assembler Structured Looping Macros
0000                             ; by John Hardy @ 2019 ALL WRONGS RESERVED
0000                             ; https://github.com/jhlagado/struct-z80
0000                             ; 
0000                             ; Inspired by the work of Garth Wilson and Dave Keenan
0000                             ; http://wilsonminesco.com/StructureMacros/
0000                             ; http://dkeenan.com/AddingStructuredControlFlowToAnyAssembler.htm
0000                             ; 
0000                             ;-------------------------------------------------------------------------------
0000                DLOOP_COUNT:   .SET   0   
0000                DLOOP_12:   .SET   0   
0000                DLOOP_11:   .SET   0   
0000                DLOOP_10:   .SET   0   
0000                DLOOP_9:   .SET   0   
0000                DLOOP_8:   .SET   0   
0000                DLOOP_7:   .SET   0   
0000                DLOOP_6:   .SET   0   
0000                DLOOP_5:   .SET   0   
0000                DLOOP_4:   .SET   0   
0000                DLOOP_3:   .SET   0   
0000                DLOOP_2:   .SET   0   
0000                DLOOP_TOP:   .SET   0   
0000                .macro DLOOP_PUSH,arg
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT + 1
0000                 DLOOP_12 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_TOP
0000                 DLOOP_TOP .set arg
0000                .endm
0000                 
0000                .macro DLOOP_POP,
0000                             ; 
0000                 DLOOP_COUNT .set DLOOP_COUNT - 1
0000                 DLOOP_TOP .set DLOOP_2
0000                 DLOOP_2 .set DLOOP_3
0000                 DLOOP_3 .set DLOOP_4
0000                 DLOOP_4 .set DLOOP_5
0000                 DLOOP_5 .set DLOOP_6
0000                 DLOOP_6 .set DLOOP_7
0000                 DLOOP_7 .set DLOOP_8
0000                 DLOOP_8 .set DLOOP_9
0000                 DLOOP_9 .set DLOOP_10
0000                 DLOOP_10 .set DLOOP_11
0000                 DLOOP_11 .set DLOOP_12
0000                 DLOOP_12 .set 0
0000                .endm
0000                 
0000                .macro DLOOP_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org DLOOP_TOP - 2
0000                 dw CUR_ADR
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro _DO,
0000                             ; 
0000                 jr L_%%M
0000                 jp $                    ; placeholder jump to enddo
0000                 DLOOP_PUSH $
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _WHILE,flag
0000                             ; 
0000                 jr flag, L_%%M
0000                 jp DLOOP_TOP - 3         ; jump to jump to enddo
0000                 DLOOP_FWD                ; needed?
0000                L_%%M:
0000                .endm
0000                 
0000                .macro _UNTIL,flag
0000                             ; 
0000                 jp flag, DLOOP_TOP - 3  ; jump to jump to enddo
0000                 DLOOP_FWD               ; needed?
0000                .endm
0000                 
0000                .macro _BREAK,
0000                             ; 
0000                 jp DLOOP_TOP - 3        ; start of loop
0000                .endm
0000                 
0000                .macro _CONTINUE,
0000                             ; 
0000                 jp DLOOP_TOP            ; start of loop
0000                .endm
0000                 
0000                .macro _ENDDO,
0000                             ; 
0000                 jp DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                .macro _DJNZ,
0000                             ; 
0000                 djnz DLOOP_TOP
0000                 DLOOP_FWD
0000                 DLOOP_POP
0000                .endm
0000                 
0000                             ; 
0000                             ; compiler-macros
0000                             ; Macros for defining Forth control structures in Assembly
0000                             ; these tasks are normally performed by immediately executing words
0000                             ; in compiler mode but here we need to define them early using the assembler.
0000                             ; We use DW to define Forth words and these macros to calculate
0000                             ; branches between them.
0000                             ; 
0000                CPL_COUNT:   .SET   0   
0000                CPL_10:   .SET   0   
0000                CPL_9:    .SET   0   
0000                CPL_8:    .SET   0   
0000                CPL_7:    .SET   0   
0000                CPL_6:    .SET   0   
0000                CPL_5:    .SET   0   
0000                CPL_4:    .SET   0   
0000                CPL_3:    .SET   0   
0000                CPL_2:    .SET   0   
0000                CPL_TOP:   .SET   0   
0000                .macro LINE,label,index
0000                             ; 
0000                 label_index: db index
0000                .endm
0000                 
0000                .macro CPL_PUSH,arg
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT + 1
0000                 CPL_10 .set CPL_9
0000                 CPL_9 .set CPL_8
0000                 CPL_8 .set CPL_7
0000                 CPL_7 .set CPL_6
0000                 CPL_6 .set CPL_5
0000                 CPL_5 .set CPL_4
0000                 CPL_4 .set CPL_3
0000                 CPL_3 .set CPL_2
0000                 CPL_2 .set CPL_TOP
0000                 CPL_TOP .set arg
0000                .endm
0000                 
0000                .macro CPL_POP,
0000                             ; 
0000                 CPL_COUNT .set CPL_COUNT - 1
0000                 CPL_TOP .set CPL_2
0000                 CPL_2 .set CPL_3
0000                 CPL_3 .set CPL_4
0000                 CPL_4 .set CPL_5
0000                 CPL_5 .set CPL_6
0000                 CPL_6 .set CPL_7
0000                 CPL_7 .set CPL_8
0000                 CPL_8 .set CPL_9
0000                 CPL_9 .set CPL_10
0000                 CPL_10 .set 0
0000                .endm
0000                 
0000                .macro CBRANCH_FWD,
0000                             ; 
0000                 CUR_ADR .set $
0000                 org CPL_TOP - 2
0000                 DW CUR_ADR - CPL_TOP + 2
0000                 org CUR_ADR
0000                .endm
0000                 
0000                .macro CIF,
0000                             ; 
0000                 DW QBRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CELSE,
0000                             ; 
0000                 DW BRAN, 0
0000                 cBRANCH_FWD
0000                 CPL_TOP .set $          ;reuse TOS
0000                .endm
0000                 
0000                .macro CENDIF,
0000                             ; 
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro CDO,
0000                             ; 
0000                 DW BRAN, 6
0000                 DW BRAN, 0
0000                 CPL_PUSH $
0000                .endm
0000                 
0000                .macro CWHILE,
0000                             ; 
0000                 DW QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CUNTIL,
0000                             ; 
0000                 DW ZEQUAL, QBRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CBREAK,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 8
0000                .endm
0000                 
0000                .macro CCONTINUE,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                .endm
0000                 
0000                .macro CENDDO,
0000                             ; 
0000                 DW BRAN, CPL_TOP - $ - 2
0000                 cBRANCH_FWD
0000                 CPL_POP
0000                .endm
0000                 
0000                .macro NEXT,
0000                             ; 
0000                 jp enter
0000                .endm
0000                 
0000                .macro NEXT1,
0000                             ; 
0000                 jp enter1
0000                .endm
0000                 
0000                .macro ENTER,
0000                             ; 
0000                 rst $08                             ; enter forth
0000                .endm
0000                 
0000                .macro EXIT,
0000                             ; 
0000                 dw exit
0000                 jp enter
0000                .endm
0000                 
0000                .macro INTERPRET,
0000                             ; 
0000                 rst $08
0000                 dw interpret
0000                 dw exit_forth
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack.
0000                .macro PPUSH0,regHI,regLO
0000                             ; 
0000                 ld (IX+0), regLO     ; POP register pair from ret stk
0000                 inc IX
0000                 ld (IX+0), regHI
0000                 inc IX
0000                .endm
0000                 
0000                .macro PPOP0,regHI,regLO
0000                             ; 
0000                 dec IX              ; PUSH register pair on ret stack
0000                 ld regHI, (IX+0)
0000                 dec IX
0000                 ld regLO, (IX+0)
0000                .endm
0000                 
0000                             ; Macros to deal with the param stack with TOS in BC
0000                .macro PPUSH,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; push TOS reg pair
0000                 ld B, regHI         ; move register pair into TOS reg pair
0000                 ld C, regLO
0000                .endm
0000                 
0000                .macro PPOP,regHI,regLO
0000                             ; 
0000                 ld regHI, B         ; move TOS reg pair into register pair
0000                 ld regLO, C
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro PPUSHVALUE,val
0000                             ; 
0000                 ppush0 B,C
0000                 ld BC, val
0000                .endm
0000                 
0000                .macro PPUSHTEXT,s1,len
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ppushValue len
0000                 _skip
0000                tpt_text%%M:
0000                 db s1
0000                 _endskip
0000                .endm
0000                 
0000                .macro PPUSHPTEXT,s1
0000                             ; 
0000                 ppushValue tpt_text%%M
0000                 ld BC, tpt_text%%M
0000                 _skip
0000                tpt_text%%M:
0000                 .pstr s1
0000                 _endskip
0000                .endm
0000                 
0000                             ; Macros to deal with the return stack.
0000                .macro PUSH_RET,regHI,regLO
0000                             ; 
0000                 push regHIregLO
0000                .endm
0000                 
0000                .macro POP_RET,regHI,regLO
0000                             ; 
0000                 pop regHIregLO
0000                .endm
0000                 
0000                .macro SET_RET_SP,
0000                             ; 
0000                 loadWord H,L, B,C
0000                 LD SP, HL
0000                .endm
0000                 
0000                .macro SAVE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 B,C             ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 regHI, regLO
0000                .endm
0000                 
0000                .macro RESTORE_REGS,regHI,regLO
0000                             ; 
0000                 ppush0 regHI, regLO         ; only use if word doesn't execute other words
0000                 exx
0000                 ppop0 B,C
0000                .endm
0000                 
0000                .macro LOADWORD,destHI,destLO,srcHI,srcLO
0000                             ; 
0000                 ld destLO, srcLO
0000                 ld destHI, srcHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro READWORD,ptr,regHI,regLO
0000                             ; 
0000                 ld regLO, (ptr)
0000                 inc ptr
0000                 ld regHI, (ptr)
0000                 inc ptr
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEWORD,ptr,regHI,regLO
0000                             ; 
0000                 writeByte ptr, regLO
0000                 writeByte ptr, regHI
0000                .endm
0000                 
0000                             ; works with HL, IX+d, IY+d
0000                .macro WRITEBYTE,ptr,reg
0000                             ; 
0000                 ld (ptr), reg
0000                 inc ptr
0000                .endm
0000                 
0000                             ; result: sets Z if zero
0000                             ; destroys: A
0000                .macro CHECKZEROWORD,regHI,regLO
0000                             ; 
0000                 ld A, regLO
0000                 or regHI
0000                .endm
0000                 
0000                .macro PRINT_STR,addr
0000                             ; 
0000                 ppush0 D,E
0000                 ld DE, addr
0000                 call printPStr
0000                 ppop0 D,E
0000                .endm
0000                 
0000                .macro CMP16,val
0000                             ; 
0000                 ld DE, val
0000                 or A
0000                 sbc HL, DE
0000                 checkZeroWord H,L
0000                .endm
0000                 
0000                          .ORG   START_ROM   
0000                RST00:       ; Reset
0000   F3                     DI      ; Disable interrupts
0001   C3 67 00               JP   start   
0008                          .ORG   $0008   
0008                RST08:       ; Check serial status
0008   C3 7B 0E               JP   enter   
0038                          .ORG   $0038   
0038                RST38:       ; rst 38 - INTERRUPT VECTOR [ for IM 1 ]
0038   C3 27 10               JP   serialIn   
0066                          .ORG   $0066   ; rst 66 - NON-MASKABLE INTERRUPT
0066                RST66:       
0066   C9                     RET      ; do nothing
0067                START:       
0067   31 A7 2E               LD   SP,RET_STACK   ; Initialise the return stack.
006A   CD FE 0F               CALL   initSerial   
006D   CD 40 0E               CALL   initForth   
0070                          IF   TESTMODE   
0070   C3 00 20               JP   TESTS_START   
0073                          ELSE      
                              ;*Macro unroll:  PRINT_STR TXT_INTRO
                              ;*Macro unroll:  ppush0 D,E
                              LD   (IX+0),E   
                              INC   IX   
                              LD   (IX+0),D   
                              INC   IX   
                              LD   DE,TXT_INTRO   
                              CALL   printPStr   
                              ;*Macro unroll:  ppop0 D,E
                              DEC   IX   
                              LD   D,(IX+0)   
                              DEC   IX   
                              LD   E,(IX+0)   
                              JP   QUIT   
0073                          ENDIF      
0073                             ;   0<          ( n -- t )
0073                             ;               Return true if n is negative.
0073                          ;*Macro unroll: mCODE '0<',2,0,ZLESS
0073                HEADER_ZLESS:      
0073   00 00                  DW   link   
0075                LINK:     .SET   HEADER_ZLESS   
0075   02                     DB   0 + 2   
0076   30 3C                  DB   "0<"   
0078                ZLESS:       
0078   CB 20                  SLA   B   ; sign bit -> cy flag
007A   9F                     SBC   A,A   ; propagate cy through A
007B   47                     LD   B,A   ; put 0000 or FFFF in TOS
007C   4F                     LD   C,A   
007D                          ;*Macro unroll: 	NEXT
007D   C3 7B 0E               JP   enter   
0080                             ; and    x1 x2 -- x3            logical and
0080                          ;*Macro unroll: mCODE "and",3,0,ANDD	        ; bitwise and
0080                HEADER_ANDD:      ; bitwise and
0080   73 00                  DW   link   
0082                LINK:     .SET   HEADER_ANDD   
0082   03                     DB   0 + 3   
0083   61 6E 64               DB   "and"   
0086                ANDD:        
0086                          ;*Macro unroll:  PPOP0 H,L
0086   DD 2B                  DEC   IX   
0088   DD 66 00               LD   H,(IX+0)   
008B   DD 2B                  DEC   IX   
008D   DD 6E 00               LD   L,(IX+0)   
0090   78                     LD   A,B   
0091   A4                     AND   H   
0092   47                     LD   B,A   
0093   79                     LD   A,C   
0094   A5                     AND   L   
0095   4F                     LD   C,A   
0096                          ;*Macro unroll:  NEXT
0096   C3 7B 0E               JP   enter   
0099                             ; OR    x1 x2 -- x3             logical OR
0099                          ;*Macro unroll: mCODE "or",2,0,ORR	            ; bitwise OR
0099                HEADER_ORR:      ; bitwise OR
0099   80 00                  DW   link   
009B                LINK:     .SET   HEADER_ORR   
009B   02                     DB   0 + 2   
009C   6F 72                  DB   "or"   
009E                ORR:         
009E                          ;*Macro unroll:  ppop0 H,L
009E   DD 2B                  DEC   IX   
00A0   DD 66 00               LD   H,(IX+0)   
00A3   DD 2B                  DEC   IX   
00A5   DD 6E 00               LD   L,(IX+0)   
00A8   78                     LD   A,B   
00A9   B4                     OR   H   
00AA   47                     LD   B,A   
00AB   79                     LD   A,C   
00AC   B5                     OR   L   
00AD   4F                     LD   C,A   
00AE                          ;*Macro unroll:  NEXT
00AE   C3 7B 0E               JP   enter   
00B1                             ; xor    x1 x2 -- x3            logical xor
00B1                          ;*Macro unroll: mCODE "xor",3,0,XORR	        ; bitwise xor
00B1                HEADER_XORR:      ; bitwise xor
00B1   99 00                  DW   link   
00B3                LINK:     .SET   HEADER_XORR   
00B3   03                     DB   0 + 3   
00B4   78 6F 72               DB   "xor"   
00B7                XORR:        
00B7                          ;*Macro unroll:  ppop0 H,L
00B7   DD 2B                  DEC   IX   
00B9   DD 66 00               LD   H,(IX+0)   
00BC   DD 2B                  DEC   IX   
00BE   DD 6E 00               LD   L,(IX+0)   
00C1   78                     LD   A,B   
00C2   AC                     XOR   H   
00C3   47                     LD   B,A   
00C4   79                     LD   A,C   
00C5   AD                     XOR   L   
00C6   4F                     LD   C,A   
00C7                          ;*Macro unroll:  NEXT
00C7   C3 7B 0E               JP   enter   
00CA                             ; +       n1/u1 n2/u2 -- n3/u3     add n1+n2
00CA                          ;*Macro unroll: mCODE "+",1,0,PLUS
00CA                HEADER_PLUS:      
00CA   B1 00                  DW   link   
00CC                LINK:     .SET   HEADER_PLUS   
00CC   01                     DB   0 + 1   
00CD   2B                     DB   "+"   
00CE                PLUS:        
00CE                          ;*Macro unroll:  ppop0 H,L
00CE   DD 2B                  DEC   IX   
00D0   DD 66 00               LD   H,(IX+0)   
00D3   DD 2B                  DEC   IX   
00D5   DD 6E 00               LD   L,(IX+0)   
00D8   09                     ADD   HL,BC   
00D9                          ;*Macro unroll:  loadWord B,C, H,L
00D9   4D                     LD   C,L   
00DA   44                     LD   B,H   
00DB                          ;*Macro unroll:  NEXT
00DB   C3 7B 0E               JP   enter   
00DE                             ; INVERT x1 -- x2               ; bitwise complement
00DE                          ;*Macro unroll: mCODE "not",6,0,INVER
00DE                HEADER_INVER:      
00DE   CA 00                  DW   link   
00E0                LINK:     .SET   HEADER_INVER   
00E0   06                     DB   0 + 6   
00E1   6E 6F 74               DB   "not"   
00E4                INVER:       
00E4                          ;*Macro unroll:  ENTER
00E4   CF                     RST   $08   
00E5   8B 11 FF FF B7 00 8C 0E DW   LIT,-1,XORR,EXIT   
00ED                             ; negate  n1 -- n2                      negate n1
00ED                          ;*Macro unroll: mCODE "negate",6,0,NEGAT
00ED                HEADER_NEGAT:      
00ED   DE 00                  DW   link   
00EF                LINK:     .SET   HEADER_NEGAT   
00EF   06                     DB   0 + 6   
00F0   6E 65 67 61 74 65      DB   "negate"   
00F6                NEGAT:       
00F6                          ;*Macro unroll:  ENTER
00F6   CF                     RST   $08   
00F7   E4 00 41 03 8C 0E      DW   INVER,ONEP,EXIT   
00FD                             ; negate  n1 -- n2                      negate n1
00FD                          ;*Macro unroll: mCODE "dnegate",7,0,DNEGA
00FD                HEADER_DNEGA:      
00FD   ED 00                  DW   link   
00FF                LINK:     .SET   HEADER_DNEGA   
00FF   07                     DB   0 + 7   
0100   64 6E 65 67 61 74 65   DB   "dnegate"   
0107                DNEGA:       
0107                          ;*Macro unroll:  ENTER
0107   CF                     RST   $08   
0108   E4 00 7C 12 E4 00      DW   INVER,TOR,INVER   
010E   8B 11 01 00 3E 01      DW   LIT,1,UPLUS   
0114   91 12 CE 00 8C 0E      DW   RFROM,PLUS,EXIT   
011A                          ;*Macro unroll: mCODE "-",1,0,SUBB
011A                HEADER_SUBB:      
011A   FD 00                  DW   link   
011C                LINK:     .SET   HEADER_SUBB   
011C   01                     DB   0 + 1   
011D   2D                     DB   "-"   
011E                SUBB:        
011E                          ;*Macro unroll:  ENTER
011E   CF                     RST   $08   
011F   F6 00 CE 00 8C 0E      DW   NEGAT,Plus,EXIT   
0125                             ; abs   n -- u                          absolute value
0125                          ;*Macro unroll: mCODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0125                HEADER_ABS:      ; case sensitive for ABS label for some reason
0125   1A 01                  DW   link   
0127                LINK:     .SET   HEADER_ABS   
0127   03                     DB   0 + 3   
0128   61 62 73               DB   "abs"   
012B                ABS:         
012B                          ;*Macro unroll:  ENTER
012B   CF                     RST   $08   
012C   0C 12 78 00 69 07 36 01 DW   DUPP,ZLESS,QBRAN1,ABS1   
0134   F6 00                  DW   NEGAT   
0136                ABS1:        
0136   8C 0E                  DW   EXIT   
0138                             ; mCODE "abs",3,0,ABS                   ; case sensitive for ABS label for some reason
0138                             ;     ENTER
0138                             ;     dw DUPP,ZLESS
0138                             ;     cif
0138                             ;         dw NEGAT                       ; if signs differ then negate answer
0138                             ;     cendif
0138                             ;     EXIT
0138                             ;   UM+         ( w w -- w cy )
0138                             ;               Add two numbers, return the sum and carry flag.
0138                          ;*Macro unroll: mCODE "UM+",6,0,UPLUS
0138                HEADER_UPLUS:      
0138   25 01                  DW   link   
013A                LINK:     .SET   HEADER_UPLUS   
013A   06                     DB   0 + 6   
013B   55 4D 2B               DB   "UM+"   
013E                UPLUS:       
013E                          ;*Macro unroll:  ppop0 H,L
013E   DD 2B                  DEC   IX   
0140   DD 66 00               LD   H,(IX+0)   
0143   DD 2B                  DEC   IX   
0145   DD 6E 00               LD   L,(IX+0)   
0148   09                     ADD   HL,BC   ;11t
0149                          ;*Macro unroll:  ppush0 H,L
0149   DD 75 00               LD   (IX+0),L   
014C   DD 23                  INC   IX   
014E   DD 74 00               LD   (IX+0),H   
0151   DD 23                  INC   IX   
0153   01 00 00               LD   BC,0   ;10t
0156   30 01                  JR   NC,UMP1   ;12/7t
0158                UMP2:        
0158   03                     INC   BC   ; 6t
0159                UMP1:        
0159                          ;*Macro unroll:  NEXT
0159   C3 7B 0E               JP   enter   
015C                             ; =      x1 x2 -- flag         test x1=x2
015C                          ;*Macro unroll: mCODE "=",1,0,equal
015C                HEADER_EQUAL:      
015C   38 01                  DW   link   
015E                LINK:     .SET   HEADER_equal   
015E   01                     DB   0 + 1   
015F   3D                     DB   "="   
0160                EQUAL:       
0160                          ;*Macro unroll:  ppop0 H,L
0160   DD 2B                  DEC   IX   
0162   DD 66 00               LD   H,(IX+0)   
0165   DD 2B                  DEC   IX   
0167   DD 6E 00               LD   L,(IX+0)   
016A   B7                     OR   A   
016B   ED 42                  SBC   HL,BC   ; x1-x2 in HL, SZVC valid
016D                          ;*Macro unroll:  _if nz
016D   C2 73 01               JP   nz,L_M_702S108   
0170   C3 70 01               JP   $   
0173                          ;*Macro unroll:  STRUC_PUSH $
0173                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0173                STRUC_12:   .SET   STRUC_11   
0173                STRUC_11:   .SET   STRUC_10   
0173                STRUC_10:   .SET   STRUC_9   
0173                STRUC_9:   .SET   STRUC_8   
0173                STRUC_8:   .SET   STRUC_7   
0173                STRUC_7:   .SET   STRUC_6   
0173                STRUC_6:   .SET   STRUC_5   
0173                STRUC_5:   .SET   STRUC_4   
0173                STRUC_4:   .SET   STRUC_3   
0173                STRUC_3:   .SET   STRUC_2   
0173                STRUC_2:   .SET   STRUC_TOP   
0173                STRUC_TOP:   .SET   $   
0173                L_M_702S108:      
0173   01 01 00               LD   BC,1   ;   if -ve, result true
0176                          ;*Macro unroll:  _endif
0176                          ;*Macro unroll:  STRUC_FWD
0176                CUR_ADR:   .SET   $   
0171                          .ORG   STRUC_TOP - 2   
0171   76 01                  DW   CUR_ADR   
0176                          .ORG   CUR_ADR   
0176                          ;*Macro unroll:  STRUC_POP
0176                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0176                STRUC_TOP:   .SET   STRUC_2   
0176                STRUC_2:   .SET   STRUC_3   
0176                STRUC_3:   .SET   STRUC_4   
0176                STRUC_4:   .SET   STRUC_5   
0176                STRUC_5:   .SET   STRUC_6   
0176                STRUC_6:   .SET   STRUC_7   
0176                STRUC_7:   .SET   STRUC_8   
0176                STRUC_8:   .SET   STRUC_9   
0176                STRUC_9:   .SET   STRUC_10   
0176                STRUC_10:   .SET   STRUC_11   
0176                STRUC_11:   .SET   STRUC_12   
0176                STRUC_12:   .SET   0   
0176   03                     INC   BC   
0177                          ;*Macro unroll:  NEXT
0177   C3 7B 0E               JP   enter   
017A                             ; <      n1 n2 -- flag          test n1<n2
017A                          ;*Macro unroll: mCODE "<",1,0,LESSTHAN	        ; less than
017A                HEADER_LESSTHAN:      ; less than
017A   5C 01                  DW   link   
017C                LINK:     .SET   HEADER_LESSTHAN   
017C   01                     DB   0 + 1   
017D   3C                     DB   "<"   
017E                LESSTHAN:      
017E                          ;*Macro unroll:  ppop0 H,L
017E   DD 2B                  DEC   IX   
0180   DD 66 00               LD   H,(IX+0)   
0183   DD 2B                  DEC   IX   
0185   DD 6E 00               LD   L,(IX+0)   
0188   B7                     OR   A   
0189   ED 42                  SBC   HL,BC   ; n1-n2 in HL, SZVC valid
018B                          ;*Macro unroll:  _if pe
018B   EA 91 01               JP   pe,L_M_712S119   
018E   C3 8E 01               JP   $   
0191                          ;*Macro unroll:  STRUC_PUSH $
0191                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0191                STRUC_12:   .SET   STRUC_11   
0191                STRUC_11:   .SET   STRUC_10   
0191                STRUC_10:   .SET   STRUC_9   
0191                STRUC_9:   .SET   STRUC_8   
0191                STRUC_8:   .SET   STRUC_7   
0191                STRUC_7:   .SET   STRUC_6   
0191                STRUC_6:   .SET   STRUC_5   
0191                STRUC_5:   .SET   STRUC_4   
0191                STRUC_4:   .SET   STRUC_3   
0191                STRUC_3:   .SET   STRUC_2   
0191                STRUC_2:   .SET   STRUC_TOP   
0191                STRUC_TOP:   .SET   $   
0191                L_M_712S119:      
0191                          ;*Macro unroll:  _if m
0191   FA 97 01               JP   m,L_M_713S120   
0194   C3 94 01               JP   $   
0197                          ;*Macro unroll:  STRUC_PUSH $
0197                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0197                STRUC_12:   .SET   STRUC_11   
0197                STRUC_11:   .SET   STRUC_10   
0197                STRUC_10:   .SET   STRUC_9   
0197                STRUC_9:   .SET   STRUC_8   
0197                STRUC_8:   .SET   STRUC_7   
0197                STRUC_7:   .SET   STRUC_6   
0197                STRUC_6:   .SET   STRUC_5   
0197                STRUC_5:   .SET   STRUC_4   
0197                STRUC_4:   .SET   STRUC_3   
0197                STRUC_3:   .SET   STRUC_2   
0197                STRUC_2:   .SET   STRUC_TOP   
0197                STRUC_TOP:   .SET   $   
0197                L_M_713S120:      
0197   01 00 00               LD   bc,0   
019A                          ;*Macro unroll:  _else
019A   C3 9A 01               JP   $   
019D                          ;*Macro unroll:  STRUC_FWD
019D                CUR_ADR:   .SET   $   
0195                          .ORG   STRUC_TOP - 2   
0195   9D 01                  DW   CUR_ADR   
019D                          .ORG   CUR_ADR   
019D                STRUC_TOP:   .SET   $   
019D   01 01 00               LD   bc,1   ;   if -ve, result true
01A0                          ;*Macro unroll:  _endif
01A0                          ;*Macro unroll:  STRUC_FWD
01A0                CUR_ADR:   .SET   $   
019B                          .ORG   STRUC_TOP - 2   
019B   A0 01                  DW   CUR_ADR   
01A0                          .ORG   CUR_ADR   
01A0                          ;*Macro unroll:  STRUC_POP
01A0                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01A0                STRUC_TOP:   .SET   STRUC_2   
01A0                STRUC_2:   .SET   STRUC_3   
01A0                STRUC_3:   .SET   STRUC_4   
01A0                STRUC_4:   .SET   STRUC_5   
01A0                STRUC_5:   .SET   STRUC_6   
01A0                STRUC_6:   .SET   STRUC_7   
01A0                STRUC_7:   .SET   STRUC_8   
01A0                STRUC_8:   .SET   STRUC_9   
01A0                STRUC_9:   .SET   STRUC_10   
01A0                STRUC_10:   .SET   STRUC_11   
01A0                STRUC_11:   .SET   STRUC_12   
01A0                STRUC_12:   .SET   0   
01A0                          ;*Macro unroll:  _else
01A0   C3 A0 01               JP   $   
01A3                          ;*Macro unroll:  STRUC_FWD
01A3                CUR_ADR:   .SET   $   
018F                          .ORG   STRUC_TOP - 2   
018F   A3 01                  DW   CUR_ADR   
01A3                          .ORG   CUR_ADR   
01A3                STRUC_TOP:   .SET   $   
01A3                          ;*Macro unroll:  _if p
01A3   F2 A9 01               JP   p,L_M_719S126   
01A6   C3 A6 01               JP   $   
01A9                          ;*Macro unroll:  STRUC_PUSH $
01A9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01A9                STRUC_12:   .SET   STRUC_11   
01A9                STRUC_11:   .SET   STRUC_10   
01A9                STRUC_10:   .SET   STRUC_9   
01A9                STRUC_9:   .SET   STRUC_8   
01A9                STRUC_8:   .SET   STRUC_7   
01A9                STRUC_7:   .SET   STRUC_6   
01A9                STRUC_6:   .SET   STRUC_5   
01A9                STRUC_5:   .SET   STRUC_4   
01A9                STRUC_4:   .SET   STRUC_3   
01A9                STRUC_3:   .SET   STRUC_2   
01A9                STRUC_2:   .SET   STRUC_TOP   
01A9                STRUC_TOP:   .SET   $   
01A9                L_M_719S126:      
01A9   01 00 00               LD   bc,0   
01AC                          ;*Macro unroll:  _else
01AC   C3 AC 01               JP   $   
01AF                          ;*Macro unroll:  STRUC_FWD
01AF                CUR_ADR:   .SET   $   
01A7                          .ORG   STRUC_TOP - 2   
01A7   AF 01                  DW   CUR_ADR   
01AF                          .ORG   CUR_ADR   
01AF                STRUC_TOP:   .SET   $   
01AF   01 01 00               LD   bc,1   ;   if -ve, result true
01B2                          ;*Macro unroll:  _endif
01B2                          ;*Macro unroll:  STRUC_FWD
01B2                CUR_ADR:   .SET   $   
01AD                          .ORG   STRUC_TOP - 2   
01AD   B2 01                  DW   CUR_ADR   
01B2                          .ORG   CUR_ADR   
01B2                          ;*Macro unroll:  STRUC_POP
01B2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01B2                STRUC_TOP:   .SET   STRUC_2   
01B2                STRUC_2:   .SET   STRUC_3   
01B2                STRUC_3:   .SET   STRUC_4   
01B2                STRUC_4:   .SET   STRUC_5   
01B2                STRUC_5:   .SET   STRUC_6   
01B2                STRUC_6:   .SET   STRUC_7   
01B2                STRUC_7:   .SET   STRUC_8   
01B2                STRUC_8:   .SET   STRUC_9   
01B2                STRUC_9:   .SET   STRUC_10   
01B2                STRUC_10:   .SET   STRUC_11   
01B2                STRUC_11:   .SET   STRUC_12   
01B2                STRUC_12:   .SET   0   
01B2                          ;*Macro unroll:  _endif
01B2                          ;*Macro unroll:  STRUC_FWD
01B2                CUR_ADR:   .SET   $   
01A1                          .ORG   STRUC_TOP - 2   
01A1   B2 01                  DW   CUR_ADR   
01B2                          .ORG   CUR_ADR   
01B2                          ;*Macro unroll:  STRUC_POP
01B2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01B2                STRUC_TOP:   .SET   STRUC_2   
01B2                STRUC_2:   .SET   STRUC_3   
01B2                STRUC_3:   .SET   STRUC_4   
01B2                STRUC_4:   .SET   STRUC_5   
01B2                STRUC_5:   .SET   STRUC_6   
01B2                STRUC_6:   .SET   STRUC_7   
01B2                STRUC_7:   .SET   STRUC_8   
01B2                STRUC_8:   .SET   STRUC_9   
01B2                STRUC_9:   .SET   STRUC_10   
01B2                STRUC_10:   .SET   STRUC_11   
01B2                STRUC_11:   .SET   STRUC_12   
01B2                STRUC_12:   .SET   0   
01B2                          ;*Macro unroll:  NEXT
01B2   C3 7B 0E               JP   enter   
01B5                             ; >      n1 n2 -- flag          test n1 > n2
01B5                          ;*Macro unroll: mCODE ">",1,0,GREATERTHAN	        ; less than
01B5                HEADER_GREATERTHAN:      ; less than
01B5   7A 01                  DW   link   
01B7                LINK:     .SET   HEADER_GREATERTHAN   
01B7   01                     DB   0 + 1   
01B8   3E                     DB   ">"   
01B9                GREATERTHAN:      
01B9                          ;*Macro unroll:  ppop0 H,L                  ; swap operands
01B9   DD 2B                  DEC   IX   ; swap operands
01BB   DD 66 00               LD   H,(IX+0)   
01BE   DD 2B                  DEC   IX   
01C0   DD 6E 00               LD   L,(IX+0)   
01C3                          ;*Macro unroll:  ppush H,L
01C3                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
01C3   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
01C6   DD 23                  INC   IX   
01C8   DD 70 00               LD   (IX+0),B   
01CB   DD 23                  INC   IX   
01CD   44                     LD   B,H   
01CE   4D                     LD   C,L   
01CF   18 AD                  JR   LESSTHAN   
01D1                             ; 0= zero-equal
01D1                          ;*Macro unroll: mCODE "0=",2,0,zEqual
01D1                HEADER_ZEQUAL:      
01D1   B5 01                  DW   link   
01D3                LINK:     .SET   HEADER_zEqual   
01D3   02                     DB   0 + 2   
01D4   30 3D                  DB   "0="   
01D6                ZEQUAL:      
01D6                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
01D6   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
01D7   B0                     OR   B   
01D8                          ;*Macro unroll:  _if nz
01D8   C2 DE 01               JP   nz,L_M_734S143   
01DB   C3 DB 01               JP   $   
01DE                          ;*Macro unroll:  STRUC_PUSH $
01DE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01DE                STRUC_12:   .SET   STRUC_11   
01DE                STRUC_11:   .SET   STRUC_10   
01DE                STRUC_10:   .SET   STRUC_9   
01DE                STRUC_9:   .SET   STRUC_8   
01DE                STRUC_8:   .SET   STRUC_7   
01DE                STRUC_7:   .SET   STRUC_6   
01DE                STRUC_6:   .SET   STRUC_5   
01DE                STRUC_5:   .SET   STRUC_4   
01DE                STRUC_4:   .SET   STRUC_3   
01DE                STRUC_3:   .SET   STRUC_2   
01DE                STRUC_2:   .SET   STRUC_TOP   
01DE                STRUC_TOP:   .SET   $   
01DE                L_M_734S143:      
01DE   01 FF FF               LD   BC,-1   
01E1                          ;*Macro unroll:  _endif
01E1                          ;*Macro unroll:  STRUC_FWD
01E1                CUR_ADR:   .SET   $   
01DC                          .ORG   STRUC_TOP - 2   
01DC   E1 01                  DW   CUR_ADR   
01E1                          .ORG   CUR_ADR   
01E1                          ;*Macro unroll:  STRUC_POP
01E1                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01E1                STRUC_TOP:   .SET   STRUC_2   
01E1                STRUC_2:   .SET   STRUC_3   
01E1                STRUC_3:   .SET   STRUC_4   
01E1                STRUC_4:   .SET   STRUC_5   
01E1                STRUC_5:   .SET   STRUC_6   
01E1                STRUC_6:   .SET   STRUC_7   
01E1                STRUC_7:   .SET   STRUC_8   
01E1                STRUC_8:   .SET   STRUC_9   
01E1                STRUC_9:   .SET   STRUC_10   
01E1                STRUC_10:   .SET   STRUC_11   
01E1                STRUC_11:   .SET   STRUC_12   
01E1                STRUC_12:   .SET   0   
01E1   03                     INC   BC   
01E2                          ;*Macro unroll:  NEXT
01E2   C3 7B 0E               JP   enter   
01E5                          ;*Macro unroll: mCODE "0<>",3,0,zNotEqual
01E5                HEADER_ZNOTEQUAL:      
01E5   D1 01                  DW   link   
01E7                LINK:     .SET   HEADER_zNotEqual   
01E7   03                     DB   0 + 3   
01E8   30 3C 3E               DB   "0<>"   
01EB                ZNOTEQUAL:      
01EB                          ;*Macro unroll:  checkZeroWord B,C            ; returns 0 if not equal, 1 if equal
01EB   79                     LD   A,C   ; returns 0 if not equal, 1 if equal
01EC   B0                     OR   B   
01ED                          ;*Macro unroll:  _if nz
01ED   C2 F3 01               JP   nz,L_M_741S151   
01F0   C3 F0 01               JP   $   
01F3                          ;*Macro unroll:  STRUC_PUSH $
01F3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
01F3                STRUC_12:   .SET   STRUC_11   
01F3                STRUC_11:   .SET   STRUC_10   
01F3                STRUC_10:   .SET   STRUC_9   
01F3                STRUC_9:   .SET   STRUC_8   
01F3                STRUC_8:   .SET   STRUC_7   
01F3                STRUC_7:   .SET   STRUC_6   
01F3                STRUC_6:   .SET   STRUC_5   
01F3                STRUC_5:   .SET   STRUC_4   
01F3                STRUC_4:   .SET   STRUC_3   
01F3                STRUC_3:   .SET   STRUC_2   
01F3                STRUC_2:   .SET   STRUC_TOP   
01F3                STRUC_TOP:   .SET   $   
01F3                L_M_741S151:      
01F3   01 01 00               LD   BC,1   
01F6                          ;*Macro unroll:  _endif
01F6                          ;*Macro unroll:  STRUC_FWD
01F6                CUR_ADR:   .SET   $   
01F1                          .ORG   STRUC_TOP - 2   
01F1   F6 01                  DW   CUR_ADR   
01F6                          .ORG   CUR_ADR   
01F6                          ;*Macro unroll:  STRUC_POP
01F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
01F6                STRUC_TOP:   .SET   STRUC_2   
01F6                STRUC_2:   .SET   STRUC_3   
01F6                STRUC_3:   .SET   STRUC_4   
01F6                STRUC_4:   .SET   STRUC_5   
01F6                STRUC_5:   .SET   STRUC_6   
01F6                STRUC_6:   .SET   STRUC_7   
01F6                STRUC_7:   .SET   STRUC_8   
01F6                STRUC_8:   .SET   STRUC_9   
01F6                STRUC_9:   .SET   STRUC_10   
01F6                STRUC_10:   .SET   STRUC_11   
01F6                STRUC_11:   .SET   STRUC_12   
01F6                STRUC_12:   .SET   0   
01F6                          ;*Macro unroll:  NEXT
01F6   C3 7B 0E               JP   enter   
01F9                             ; OR    x1 x2 -- x3             logical OR
01F9                          ;*Macro unroll: mCODE "or",2,0,OR	            ; bitwise OR
01F9                HEADER_OR:      ; bitwise OR
01F9   E5 01                  DW   link   
01FB                LINK:     .SET   HEADER_OR   
01FB   02                     DB   0 + 2   
01FC   6F 72                  DB   "or"   
01FE                OR:          
01FE                          ;*Macro unroll:  ppop0 H,L
01FE   DD 2B                  DEC   IX   
0200   DD 66 00               LD   H,(IX+0)   
0203   DD 2B                  DEC   IX   
0205   DD 6E 00               LD   L,(IX+0)   
0208   78                     LD   A,B   
0209   B4                     OR   H   
020A   47                     LD   B,A   
020B   79                     LD   A,C   
020C   B5                     OR   L   
020D   4F                     LD   C,A   
020E                          ;*Macro unroll:  NEXT
020E   C3 7B 0E               JP   enter   
0211                             ; U*   u1 u2 -- ud   unsigned mutliply
0211                          ;*Macro unroll: mCODE "u*",2,0,USTAR              ; u1 u2 -- ud
0211                HEADER_USTAR:      ; u1 u2 -- ud
0211   F9 01                  DW   link   
0213                LINK:     .SET   HEADER_USTAR   
0213   02                     DB   0 + 2   
0214   75 2A                  DB   "u*"   
0216                USTAR:       
0216                             ; u2 in BC
0216                          ;*Macro unroll:  ppop0 D,E                       ; u1 in DE
0216   DD 2B                  DEC   IX   ; u1 in DE
0218   DD 56 00               LD   D,(IX+0)   
021B   DD 2B                  DEC   IX   
021D   DD 5E 00               LD   E,(IX+0)   
0220   CD CA 03               CALL   unsignedMultiply   
0223                          ;*Macro unroll:  ppush0 D,E                      ; udlo result
0223   DD 73 00               LD   (IX+0),E   ; udlo result
0226   DD 23                  INC   IX   
0228   DD 72 00               LD   (IX+0),D   
022B   DD 23                  INC   IX   
022D                             ; udhi result
022D                          ;*Macro unroll:  NEXT
022D   C3 7B 0E               JP   enter   
0230                             ; U/MOD   u1 u2 -- u1 u2    unsigned 16 / 16 -> r q
0230                          ;*Macro unroll: mCODE "u/mod",5,0,USLASHMOD
0230                HEADER_USLASHMOD:      
0230   11 02                  DW   link   
0232                LINK:     .SET   HEADER_USLASHMOD   
0232   05                     DB   0 + 5   
0233   75 2F 6D 6F 64         DB   "u/mod"   
0238                USLASHMOD:      
0238                          ;*Macro unroll:  ppop D,E                ; DE = divisor
0238   50                     LD   D,B   ; DE = divisor
0239   59                     LD   E,C   
023A                          ;*Macro unroll:  ppop0 B,C
023A   DD 2B                  DEC   IX   
023C   DD 46 00               LD   B,(IX+0)   
023F   DD 2B                  DEC   IX   
0241   DD 4E 00               LD   C,(IX+0)   
0244                             ; BC = dividend
0244   CD 90 03               CALL   divideWordByWord   
0247                          ;*Macro unroll:  ppush0 H,L           ; PUSH remainder,
0247   DD 75 00               LD   (IX+0),L   ; PUSH remainder,
024A   DD 23                  INC   IX   
024C   DD 74 00               LD   (IX+0),H   
024F   DD 23                  INC   IX   
0251                          ;*Macro unroll:  NEXT
0251   C3 7B 0E               JP   enter   
0254                             ; CELLS   ( n1 -- n2 ) n2 is the size in address units of n1 cells.
0254                          ;*Macro unroll: mCODE "cells",5,0,CELLS
0254                HEADER_CELLS:      
0254   30 02                  DW   link   
0256                LINK:     .SET   HEADER_CELLS   
0256   05                     DB   0 + 5   
0257   63 65 6C 6C 73         DB   "cells"   
025C                CELLS:       
025C   C3 54 03               JP   twostar   
025F                          ;*Macro unroll: mCODE "*",1,0,star                    ; u1 u2 -- ud
025F                HEADER_STAR:      ; u1 u2 -- ud
025F   54 02                  DW   link   
0261                LINK:     .SET   HEADER_star   
0261   01                     DB   0 + 1   
0262   2A                     DB   "*"   
0263                STAR:        
0263                          ;*Macro unroll:  ENTER
0263   CF                     RST   $08   
0264   54 12 54 12            DW   over,over   ; dupe both args
0268   2B 01 20 12 2B 01      DW   ABS,swap,ABS   ; remove sign from both args
026E   16 02 40 12            DW   ustar,drop   ; unsigned multiply, drop hi-word
0272   D7 11                  DW   nrot   ; move to bottom
0274   B7 00                  DW   XORR   ; zero if signs are the same
0276   78 00                  DW   ZLESS   ; if high bit set
0278                          ;*Macro unroll:  cif
0278   38 07 00 00            DW   QBRAN,0   
027C                          ;*Macro unroll:  CPL_PUSH $
027C                CPL_COUNT:   .SET   CPL_COUNT + 1   
027C                CPL_10:   .SET   CPL_9   
027C                CPL_9:    .SET   CPL_8   
027C                CPL_8:    .SET   CPL_7   
027C                CPL_7:    .SET   CPL_6   
027C                CPL_6:    .SET   CPL_5   
027C                CPL_5:    .SET   CPL_4   
027C                CPL_4:    .SET   CPL_3   
027C                CPL_3:    .SET   CPL_2   
027C                CPL_2:    .SET   CPL_TOP   
027C                CPL_TOP:   .SET   $   
027C   F6 00                  DW   NEGAT   ; if signs differ then negate answer
027E                          ;*Macro unroll:  cendif
027E                          ;*Macro unroll:  cBRANCH_FWD
027E                CUR_ADR:   .SET   $   
027A                          .ORG   CPL_TOP - 2   
027A   04 00                  DW   CUR_ADR - CPL_TOP + 2   
027E                          .ORG   CUR_ADR   
027E                          ;*Macro unroll:  CPL_POP
027E                CPL_COUNT:   .SET   CPL_COUNT - 1   
027E                CPL_TOP:   .SET   CPL_2   
027E                CPL_2:    .SET   CPL_3   
027E                CPL_3:    .SET   CPL_4   
027E                CPL_4:    .SET   CPL_5   
027E                CPL_5:    .SET   CPL_6   
027E                CPL_6:    .SET   CPL_7   
027E                CPL_7:    .SET   CPL_8   
027E                CPL_8:    .SET   CPL_9   
027E                CPL_9:    .SET   CPL_10   
027E                CPL_10:   .SET   0   
027E                          ;*Macro unroll:  EXIT
027E   8C 0E                  DW   exit   
0280   C3 7B 0E               JP   enter   
0283                          ;*Macro unroll: mCODE "/mod",4,0,slashmod             ; dvend dvisr -- rem quot
0283                HEADER_SLASHMOD:      ; dvend dvisr -- rem quot
0283   5F 02                  DW   link   
0285                LINK:     .SET   HEADER_slashmod   
0285   04                     DB   0 + 4   
0286   2F 6D 6F 64            DB   "/mod"   
028A                SLASHMOD:      
028A                          ;*Macro unroll:  ENTER
028A   CF                     RST   $08   
028B   54 12 54 12            DW   over,over   ;       u1 u2 -- u1 u2 u1 u2  dupe both args
028F   B7 00                  DW   XORR   ; u1 u2 u1 u2 -- u1 u2 b1     xor hi bits
0291   78 00                  DW   ZLESS   ; true if high bit still set
0293   D7 11                  DW   nrot   ;    u1 u2 b1 -- b1 u1 u2     move to bottom
0295   54 12                  DW   over   ;    b1 u1 u2 -- b1 u1 u2 u1  dupe dividend
0297   78 00                  DW   ZLESS   ; b1 u1 u2 u1 -- b1 u1 u2 b2  zero if signs are the same
0299   D7 11                  DW   nrot   ; b1 u1 u2 b2 -- b1 b2 u1 u2  move to bottom
029B   2B 01 20 12 2B 01 20 12 DW   ABS,swap,ABS,swap   ; remove sign from both args
02A3   38 02                  DW   uslashmod   ; b1 b2 u1 u2 -- b1 b2 r q    unsigned divide (remainder, quotient)
02A5   20 12                  DW   swap   ; b1 b2 u1 u2 -- b1 b2 q r
02A7   A3 11                  DW   rot   ; b1 b2 q r -- b1 q r b2      bring to top
02A9                          ;*Macro unroll:  cif
02A9   38 07 00 00            DW   QBRAN,0   
02AD                          ;*Macro unroll:  CPL_PUSH $
02AD                CPL_COUNT:   .SET   CPL_COUNT + 1   
02AD                CPL_10:   .SET   CPL_9   
02AD                CPL_9:    .SET   CPL_8   
02AD                CPL_8:    .SET   CPL_7   
02AD                CPL_7:    .SET   CPL_6   
02AD                CPL_6:    .SET   CPL_5   
02AD                CPL_5:    .SET   CPL_4   
02AD                CPL_4:    .SET   CPL_3   
02AD                CPL_3:    .SET   CPL_2   
02AD                CPL_2:    .SET   CPL_TOP   
02AD                CPL_TOP:   .SET   $   
02AD   F6 00                  DW   NEGAT   ;   b1 q r b2 -- b1 q -r      if -ve then negate answer
02AF                          ;*Macro unroll:  cendif
02AF                          ;*Macro unroll:  cBRANCH_FWD
02AF                CUR_ADR:   .SET   $   
02AB                          .ORG   CPL_TOP - 2   
02AB   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02AF                          .ORG   CUR_ADR   
02AF                          ;*Macro unroll:  CPL_POP
02AF                CPL_COUNT:   .SET   CPL_COUNT - 1   
02AF                CPL_TOP:   .SET   CPL_2   
02AF                CPL_2:    .SET   CPL_3   
02AF                CPL_3:    .SET   CPL_4   
02AF                CPL_4:    .SET   CPL_5   
02AF                CPL_5:    .SET   CPL_6   
02AF                CPL_6:    .SET   CPL_7   
02AF                CPL_7:    .SET   CPL_8   
02AF                CPL_8:    .SET   CPL_9   
02AF                CPL_9:    .SET   CPL_10   
02AF                CPL_10:   .SET   0   
02AF   D7 11                  DW   nrot   ;     b1 q -r -- -r b1 q     bring to top
02B1   20 12                  DW   swap   ;     -r b1 q -- -r q b1      bring to top
02B3                          ;*Macro unroll:  cif
02B3   38 07 00 00            DW   QBRAN,0   
02B7                          ;*Macro unroll:  CPL_PUSH $
02B7                CPL_COUNT:   .SET   CPL_COUNT + 1   
02B7                CPL_10:   .SET   CPL_9   
02B7                CPL_9:    .SET   CPL_8   
02B7                CPL_8:    .SET   CPL_7   
02B7                CPL_7:    .SET   CPL_6   
02B7                CPL_6:    .SET   CPL_5   
02B7                CPL_5:    .SET   CPL_4   
02B7                CPL_4:    .SET   CPL_3   
02B7                CPL_3:    .SET   CPL_2   
02B7                CPL_2:    .SET   CPL_TOP   
02B7                CPL_TOP:   .SET   $   
02B7   F6 00                  DW   NEGAT   ;     -r q b1 -- -r -q       if signs differ then negate answer
02B9                          ;*Macro unroll:  cendif
02B9                          ;*Macro unroll:  cBRANCH_FWD
02B9                CUR_ADR:   .SET   $   
02B5                          .ORG   CPL_TOP - 2   
02B5   04 00                  DW   CUR_ADR - CPL_TOP + 2   
02B9                          .ORG   CUR_ADR   
02B9                          ;*Macro unroll:  CPL_POP
02B9                CPL_COUNT:   .SET   CPL_COUNT - 1   
02B9                CPL_TOP:   .SET   CPL_2   
02B9                CPL_2:    .SET   CPL_3   
02B9                CPL_3:    .SET   CPL_4   
02B9                CPL_4:    .SET   CPL_5   
02B9                CPL_5:    .SET   CPL_6   
02B9                CPL_6:    .SET   CPL_7   
02B9                CPL_7:    .SET   CPL_8   
02B9                CPL_8:    .SET   CPL_9   
02B9                CPL_9:    .SET   CPL_10   
02B9                CPL_10:   .SET   0   
02B9                          ;*Macro unroll:  EXIT
02B9   8C 0E                  DW   exit   
02BB   C3 7B 0E               JP   enter   
02BE                          ;*Macro unroll: mCODE "/",1,0,slash                   ; dvend dvisr -- quot
02BE                HEADER_SLASH:      ; dvend dvisr -- quot
02BE   83 02                  DW   link   
02C0                LINK:     .SET   HEADER_slash   
02C0   01                     DB   0 + 1   
02C1   2F                     DB   "/"   
02C2                SLASH:       
02C2                          ;*Macro unroll:  ENTER
02C2   CF                     RST   $08   
02C3   8A 02                  DW   slashmod   
02C5   20 12 40 12            DW   swap,drop   ; drop remainder
02C9                          ;*Macro unroll:  EXIT
02C9   8C 0E                  DW   exit   
02CB   C3 7B 0E               JP   enter   
02CE                          ;*Macro unroll: mCODE "mod",3,0,mod                   ; dvend dvisr -- remainder
02CE                HEADER_MOD:      ; dvend dvisr -- remainder
02CE   BE 02                  DW   link   
02D0                LINK:     .SET   HEADER_mod   
02D0   03                     DB   0 + 3   
02D1   6D 6F 64               DB   "mod"   
02D4                MOD:         
02D4                          ;*Macro unroll:  ENTER
02D4   CF                     RST   $08   
02D5   8A 02                  DW   slashmod   
02D7   40 12                  DW   drop   ; drop quotient
02D9                          ;*Macro unroll:  EXIT
02D9   8C 0E                  DW   exit   
02DB   C3 7B 0E               JP   enter   
02DE                          ;*Macro unroll:  mCODE "1-",2,0,oneMinus
02DE                HEADER_ONEMINUS:      
02DE   CE 02                  DW   link   
02E0                LINK:     .SET   HEADER_oneMinus   
02E0   02                     DB   0 + 2   
02E1   31 2D                  DB   "1-"   
02E3                ONEMINUS:      
02E3   0B                     DEC   BC   
02E4                          ;*Macro unroll:  NEXT
02E4   C3 7B 0E               JP   enter   
02E7                          ;*Macro unroll: mCODE "2-",2,0,twoMinus
02E7                HEADER_TWOMINUS:      
02E7   DE 02                  DW   link   
02E9                LINK:     .SET   HEADER_twoMinus   
02E9   02                     DB   0 + 2   
02EA   32 2D                  DB   "2-"   
02EC                TWOMINUS:      
02EC   0B                     DEC   BC   
02ED   0B                     DEC   BC   
02EE                          ;*Macro unroll:  NEXT
02EE   C3 7B 0E               JP   enter   
02F1                             ; CELL+    c-addr1 -- c-addr2   add cell size to addr
02F1                          ;*Macro unroll: mCODE "cell+",5,0,CELLP
02F1                HEADER_CELLP:      
02F1   E7 02                  DW   link   
02F3                LINK:     .SET   HEADER_CELLP   
02F3   05                     DB   0 + 5   
02F4   63 65 6C 6C 2B         DB   "cell+"   
02F9                CELLP:       
02F9   C3 4A 03               JP   twoplus   
02FC                             ; min   n1 n2 -- u                      minimum
02FC                          ;*Macro unroll: mCODE "min",3,0,min
02FC                HEADER_MIN:      
02FC   F1 02                  DW   link   
02FE                LINK:     .SET   HEADER_min   
02FE   03                     DB   0 + 3   
02FF   6D 69 6E               DB   "min"   
0302                MIN:         
0302   CF                     RST   $08   
0303   54 12 54 12            DW   over,over   
0307   7E 01                  DW   lessThan   
0309                          ;*Macro unroll:  cif
0309   38 07 00 00            DW   QBRAN,0   
030D                          ;*Macro unroll:  CPL_PUSH $
030D                CPL_COUNT:   .SET   CPL_COUNT + 1   
030D                CPL_10:   .SET   CPL_9   
030D                CPL_9:    .SET   CPL_8   
030D                CPL_8:    .SET   CPL_7   
030D                CPL_7:    .SET   CPL_6   
030D                CPL_6:    .SET   CPL_5   
030D                CPL_5:    .SET   CPL_4   
030D                CPL_4:    .SET   CPL_3   
030D                CPL_3:    .SET   CPL_2   
030D                CPL_2:    .SET   CPL_TOP   
030D                CPL_TOP:   .SET   $   
030D   40 12                  DW   drop   
030F                          ;*Macro unroll:  cElse
030F   55 07 00 00            DW   BRAN,0   
0313                          ;*Macro unroll:  cBRANCH_FWD
0313                CUR_ADR:   .SET   $   
030B                          .ORG   CPL_TOP - 2   
030B   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0313                          .ORG   CUR_ADR   
0313                CPL_TOP:   .SET   $   
0313   20 12 40 12            DW   swap,drop   
0317                          ;*Macro unroll:  cendif
0317                          ;*Macro unroll:  cBRANCH_FWD
0317                CUR_ADR:   .SET   $   
0311                          .ORG   CPL_TOP - 2   
0311   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0317                          .ORG   CUR_ADR   
0317                          ;*Macro unroll:  CPL_POP
0317                CPL_COUNT:   .SET   CPL_COUNT - 1   
0317                CPL_TOP:   .SET   CPL_2   
0317                CPL_2:    .SET   CPL_3   
0317                CPL_3:    .SET   CPL_4   
0317                CPL_4:    .SET   CPL_5   
0317                CPL_5:    .SET   CPL_6   
0317                CPL_6:    .SET   CPL_7   
0317                CPL_7:    .SET   CPL_8   
0317                CPL_8:    .SET   CPL_9   
0317                CPL_9:    .SET   CPL_10   
0317                CPL_10:   .SET   0   
0317                          ;*Macro unroll:  EXIT
0317   8C 0E                  DW   exit   
0319   C3 7B 0E               JP   enter   
031C                             ; max   n1 n2 -- u                      maximum
031C                          ;*Macro unroll: mCODE "max",3,0,max
031C                HEADER_MAX:      
031C   FC 02                  DW   link   
031E                LINK:     .SET   HEADER_max   
031E   03                     DB   0 + 3   
031F   6D 61 78               DB   "max"   
0322                MAX:         
0322   CF                     RST   $08   
0323   54 12 54 12            DW   over,over   
0327   7E 01                  DW   lessThan   
0329                          ;*Macro unroll:  cif
0329   38 07 00 00            DW   QBRAN,0   
032D                          ;*Macro unroll:  CPL_PUSH $
032D                CPL_COUNT:   .SET   CPL_COUNT + 1   
032D                CPL_10:   .SET   CPL_9   
032D                CPL_9:    .SET   CPL_8   
032D                CPL_8:    .SET   CPL_7   
032D                CPL_7:    .SET   CPL_6   
032D                CPL_6:    .SET   CPL_5   
032D                CPL_5:    .SET   CPL_4   
032D                CPL_4:    .SET   CPL_3   
032D                CPL_3:    .SET   CPL_2   
032D                CPL_2:    .SET   CPL_TOP   
032D                CPL_TOP:   .SET   $   
032D   20 12 40 12            DW   swap,drop   
0331                          ;*Macro unroll:  cElse
0331   55 07 00 00            DW   BRAN,0   
0335                          ;*Macro unroll:  cBRANCH_FWD
0335                CUR_ADR:   .SET   $   
032B                          .ORG   CPL_TOP - 2   
032B   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0335                          .ORG   CUR_ADR   
0335                CPL_TOP:   .SET   $   
0335   40 12                  DW   drop   
0337                          ;*Macro unroll:  cendif
0337                          ;*Macro unroll:  cBRANCH_FWD
0337                CUR_ADR:   .SET   $   
0333                          .ORG   CPL_TOP - 2   
0333   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0337                          .ORG   CUR_ADR   
0337                          ;*Macro unroll:  CPL_POP
0337                CPL_COUNT:   .SET   CPL_COUNT - 1   
0337                CPL_TOP:   .SET   CPL_2   
0337                CPL_2:    .SET   CPL_3   
0337                CPL_3:    .SET   CPL_4   
0337                CPL_4:    .SET   CPL_5   
0337                CPL_5:    .SET   CPL_6   
0337                CPL_6:    .SET   CPL_7   
0337                CPL_7:    .SET   CPL_8   
0337                CPL_8:    .SET   CPL_9   
0337                CPL_9:    .SET   CPL_10   
0337                CPL_10:   .SET   0   
0337                          ;*Macro unroll:  EXIT
0337   8C 0E                  DW   exit   
0339   C3 7B 0E               JP   enter   
033C                             ; 1+      n1/u1 -- n2/u2            add 1 to TOS
033C                          ;*Macro unroll: mCODE "1+",2,0,ONEP
033C                HEADER_ONEP:      
033C   1C 03                  DW   link   
033E                LINK:     .SET   HEADER_ONEP   
033E   02                     DB   0 + 2   
033F   31 2B                  DB   "1+"   
0341                ONEP:        
0341   03                     INC   BC   
0342                          ;*Macro unroll:  NEXT
0342   C3 7B 0E               JP   enter   
0345                             ; 2+      n1/u1 -- n2/u2            add 2 to TOS
0345                          ;*Macro unroll: mCODE "2+",2,0,twoPlus
0345                HEADER_TWOPLUS:      
0345   3C 03                  DW   link   
0347                LINK:     .SET   HEADER_twoPlus   
0347   02                     DB   0 + 2   
0348   32 2B                  DB   "2+"   
034A                TWOPLUS:      
034A   03                     INC   BC   
034B   03                     INC   BC   
034C                          ;*Macro unroll:  NEXT
034C   C3 7B 0E               JP   enter   
034F                             ; 2*      n1/u1 -- n2/u2            arithmetic left shift
034F                          ;*Macro unroll: mCODE "2*",2,0,TWOSTAR
034F                HEADER_TWOSTAR:      
034F   45 03                  DW   link   
0351                LINK:     .SET   HEADER_TWOSTAR   
0351   02                     DB   0 + 2   
0352   32 2A                  DB   "2*"   
0354                TWOSTAR:      
0354   CB 21                  SLA   C   
0356   CB 10                  RL   B   
0358                          ;*Macro unroll:  NEXT
0358   C3 7B 0E               JP   enter   
035B                             ; 2/      x1 -- x2                  arithmetic right shift
035B                          ;*Macro unroll: mCODE "2/",2,0,TWOSLASH
035B                HEADER_TWOSLASH:      
035B   4F 03                  DW   link   
035D                LINK:     .SET   HEADER_TWOSLASH   
035D   02                     DB   0 + 2   
035E   32 2F                  DB   "2/"   
0360                TWOSLASH:      
0360   CB 28                  SRA   B   
0362   CB 19                  RR   C   
0364                          ;*Macro unroll:  NEXT
0364   C3 7B 0E               JP   enter   
0367                             ; 
0367                             ; negate ***
0367                             ; params: HL = number
0367                             ; 
0367                NEGATENUM:      
0367                             ; Negate HL (using two's complement)
0367   AF                     XOR   A   
0368   95                     SUB   L   
0369   6F                     LD   L,A   
036A   3E 00                  LD   A,0   ; Note that xor A or SUB A would disturb CF
036C   9C                     SBC   A,H   
036D   67                     LD   H,A   
036E   C9                     RET      
036F                             ; 
036F                             ; divide word by byte ***
036F                             ; params: HL = dividend, C = divisor
036F                             ; returns: HL = result, A = remainder
036F                             ; destroys: ?
036F                             ; 
036F                DIVIDEWORDBYBYTE:      
036F   06 10                  LD   B,16   
0371   AF                     XOR   A   
0372                          ;*Macro unroll:  _do
0372   18 03                  JR   L_M_890S324   
0374   C3 74 03               JP   $   
0377                          ;*Macro unroll:  DLOOP_PUSH $
0377                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0377                DLOOP_12:   .SET   DLOOP_11   
0377                DLOOP_11:   .SET   DLOOP_10   
0377                DLOOP_10:   .SET   DLOOP_9   
0377                DLOOP_9:   .SET   DLOOP_8   
0377                DLOOP_8:   .SET   DLOOP_7   
0377                DLOOP_7:   .SET   DLOOP_6   
0377                DLOOP_6:   .SET   DLOOP_5   
0377                DLOOP_5:   .SET   DLOOP_4   
0377                DLOOP_4:   .SET   DLOOP_3   
0377                DLOOP_3:   .SET   DLOOP_2   
0377                DLOOP_2:   .SET   DLOOP_TOP   
0377                DLOOP_TOP:   .SET   $   
0377                L_M_890S324:      
0377   29                     ADD   HL,HL   
0378   17                     RLA      
0379                          ;*Macro unroll:  _if c
0379   DA 7F 03               JP   c,L_M_893S327   
037C   C3 7C 03               JP   $   
037F                          ;*Macro unroll:  STRUC_PUSH $
037F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
037F                STRUC_12:   .SET   STRUC_11   
037F                STRUC_11:   .SET   STRUC_10   
037F                STRUC_10:   .SET   STRUC_9   
037F                STRUC_9:   .SET   STRUC_8   
037F                STRUC_8:   .SET   STRUC_7   
037F                STRUC_7:   .SET   STRUC_6   
037F                STRUC_6:   .SET   STRUC_5   
037F                STRUC_5:   .SET   STRUC_4   
037F                STRUC_4:   .SET   STRUC_3   
037F                STRUC_3:   .SET   STRUC_2   
037F                STRUC_2:   .SET   STRUC_TOP   
037F                STRUC_TOP:   .SET   $   
037F                L_M_893S327:      
037F   91                     SUB   C   
0380   2C                     INC   L   
0381                          ;*Macro unroll:  _else
0381   C3 81 03               JP   $   
0384                          ;*Macro unroll:  STRUC_FWD
0384                CUR_ADR:   .SET   $   
037D                          .ORG   STRUC_TOP - 2   
037D   84 03                  DW   CUR_ADR   
0384                          .ORG   CUR_ADR   
0384                STRUC_TOP:   .SET   $   
0384   B9                     CP   C   
0385                          ;*Macro unroll:  _if nc
0385   D2 8B 03               JP   nc,L_M_898S332   
0388   C3 88 03               JP   $   
038B                          ;*Macro unroll:  STRUC_PUSH $
038B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
038B                STRUC_12:   .SET   STRUC_11   
038B                STRUC_11:   .SET   STRUC_10   
038B                STRUC_10:   .SET   STRUC_9   
038B                STRUC_9:   .SET   STRUC_8   
038B                STRUC_8:   .SET   STRUC_7   
038B                STRUC_7:   .SET   STRUC_6   
038B                STRUC_6:   .SET   STRUC_5   
038B                STRUC_5:   .SET   STRUC_4   
038B                STRUC_4:   .SET   STRUC_3   
038B                STRUC_3:   .SET   STRUC_2   
038B                STRUC_2:   .SET   STRUC_TOP   
038B                STRUC_TOP:   .SET   $   
038B                L_M_898S332:      
038B   91                     SUB   C   
038C   2C                     INC   L   
038D                          ;*Macro unroll:  _endif
038D                          ;*Macro unroll:  STRUC_FWD
038D                CUR_ADR:   .SET   $   
0389                          .ORG   STRUC_TOP - 2   
0389   8D 03                  DW   CUR_ADR   
038D                          .ORG   CUR_ADR   
038D                          ;*Macro unroll:  STRUC_POP
038D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
038D                STRUC_TOP:   .SET   STRUC_2   
038D                STRUC_2:   .SET   STRUC_3   
038D                STRUC_3:   .SET   STRUC_4   
038D                STRUC_4:   .SET   STRUC_5   
038D                STRUC_5:   .SET   STRUC_6   
038D                STRUC_6:   .SET   STRUC_7   
038D                STRUC_7:   .SET   STRUC_8   
038D                STRUC_8:   .SET   STRUC_9   
038D                STRUC_9:   .SET   STRUC_10   
038D                STRUC_10:   .SET   STRUC_11   
038D                STRUC_11:   .SET   STRUC_12   
038D                STRUC_12:   .SET   0   
038D                          ;*Macro unroll:  _endif
038D                          ;*Macro unroll:  STRUC_FWD
038D                CUR_ADR:   .SET   $   
0382                          .ORG   STRUC_TOP - 2   
0382   8D 03                  DW   CUR_ADR   
038D                          .ORG   CUR_ADR   
038D                          ;*Macro unroll:  STRUC_POP
038D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
038D                STRUC_TOP:   .SET   STRUC_2   
038D                STRUC_2:   .SET   STRUC_3   
038D                STRUC_3:   .SET   STRUC_4   
038D                STRUC_4:   .SET   STRUC_5   
038D                STRUC_5:   .SET   STRUC_6   
038D                STRUC_6:   .SET   STRUC_7   
038D                STRUC_7:   .SET   STRUC_8   
038D                STRUC_8:   .SET   STRUC_9   
038D                STRUC_9:   .SET   STRUC_10   
038D                STRUC_10:   .SET   STRUC_11   
038D                STRUC_11:   .SET   STRUC_12   
038D                STRUC_12:   .SET   0   
038D                          ;*Macro unroll:  _djnz
038D   10 E8                  DJNZ   DLOOP_TOP   
038F                          ;*Macro unroll:  DLOOP_FWD
038F                CUR_ADR:   .SET   $   
0375                          .ORG   DLOOP_TOP - 2   
0375   8F 03                  DW   CUR_ADR   
038F                          .ORG   CUR_ADR   
038F                          ;*Macro unroll:  DLOOP_POP
038F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
038F                DLOOP_TOP:   .SET   DLOOP_2   
038F                DLOOP_2:   .SET   DLOOP_3   
038F                DLOOP_3:   .SET   DLOOP_4   
038F                DLOOP_4:   .SET   DLOOP_5   
038F                DLOOP_5:   .SET   DLOOP_6   
038F                DLOOP_6:   .SET   DLOOP_7   
038F                DLOOP_7:   .SET   DLOOP_8   
038F                DLOOP_8:   .SET   DLOOP_9   
038F                DLOOP_9:   .SET   DLOOP_10   
038F                DLOOP_10:   .SET   DLOOP_11   
038F                DLOOP_11:   .SET   DLOOP_12   
038F                DLOOP_12:   .SET   0   
038F   C9                     RET      
0390                             ; 
0390                             ; Divide word by word ***
0390                             ; params: BC = dividend, DE = divisor
0390                             ; returns: BC = result, HL = remainder
0390                             ; destroys: ?
0390                             ; 
0390                DIVIDEWORDBYWORD:      
0390   D5                     PUSH   DE   
0391   21 00 00               LD   HL,0   
0394   78                     LD   A,B   
0395   06 08                  LD   B,8   
0397                          ;*Macro unroll:  _do
0397   18 03                  JR   L_M_916S352   
0399   C3 99 03               JP   $   
039C                          ;*Macro unroll:  DLOOP_PUSH $
039C                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
039C                DLOOP_12:   .SET   DLOOP_11   
039C                DLOOP_11:   .SET   DLOOP_10   
039C                DLOOP_10:   .SET   DLOOP_9   
039C                DLOOP_9:   .SET   DLOOP_8   
039C                DLOOP_8:   .SET   DLOOP_7   
039C                DLOOP_7:   .SET   DLOOP_6   
039C                DLOOP_6:   .SET   DLOOP_5   
039C                DLOOP_5:   .SET   DLOOP_4   
039C                DLOOP_4:   .SET   DLOOP_3   
039C                DLOOP_3:   .SET   DLOOP_2   
039C                DLOOP_2:   .SET   DLOOP_TOP   
039C                DLOOP_TOP:   .SET   $   
039C                L_M_916S352:      
039C   17                     RLA      
039D   ED 6A                  ADC   HL,HL   
039F   ED 52                  SBC   HL,DE   
03A1                          ;*Macro unroll:  _if c
03A1   DA A7 03               JP   c,L_M_920S356   
03A4   C3 A4 03               JP   $   
03A7                          ;*Macro unroll:  STRUC_PUSH $
03A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03A7                STRUC_12:   .SET   STRUC_11   
03A7                STRUC_11:   .SET   STRUC_10   
03A7                STRUC_10:   .SET   STRUC_9   
03A7                STRUC_9:   .SET   STRUC_8   
03A7                STRUC_8:   .SET   STRUC_7   
03A7                STRUC_7:   .SET   STRUC_6   
03A7                STRUC_6:   .SET   STRUC_5   
03A7                STRUC_5:   .SET   STRUC_4   
03A7                STRUC_4:   .SET   STRUC_3   
03A7                STRUC_3:   .SET   STRUC_2   
03A7                STRUC_2:   .SET   STRUC_TOP   
03A7                STRUC_TOP:   .SET   $   
03A7                L_M_920S356:      
03A7   19                     ADD   HL,DE   
03A8                          ;*Macro unroll:  _endif
03A8                          ;*Macro unroll:  STRUC_FWD
03A8                CUR_ADR:   .SET   $   
03A5                          .ORG   STRUC_TOP - 2   
03A5   A8 03                  DW   CUR_ADR   
03A8                          .ORG   CUR_ADR   
03A8                          ;*Macro unroll:  STRUC_POP
03A8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03A8                STRUC_TOP:   .SET   STRUC_2   
03A8                STRUC_2:   .SET   STRUC_3   
03A8                STRUC_3:   .SET   STRUC_4   
03A8                STRUC_4:   .SET   STRUC_5   
03A8                STRUC_5:   .SET   STRUC_6   
03A8                STRUC_6:   .SET   STRUC_7   
03A8                STRUC_7:   .SET   STRUC_8   
03A8                STRUC_8:   .SET   STRUC_9   
03A8                STRUC_9:   .SET   STRUC_10   
03A8                STRUC_10:   .SET   STRUC_11   
03A8                STRUC_11:   .SET   STRUC_12   
03A8                STRUC_12:   .SET   0   
03A8                          ;*Macro unroll:  _djnz
03A8   10 F2                  DJNZ   DLOOP_TOP   
03AA                          ;*Macro unroll:  DLOOP_FWD
03AA                CUR_ADR:   .SET   $   
039A                          .ORG   DLOOP_TOP - 2   
039A   AA 03                  DW   CUR_ADR   
03AA                          .ORG   CUR_ADR   
03AA                          ;*Macro unroll:  DLOOP_POP
03AA                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03AA                DLOOP_TOP:   .SET   DLOOP_2   
03AA                DLOOP_2:   .SET   DLOOP_3   
03AA                DLOOP_3:   .SET   DLOOP_4   
03AA                DLOOP_4:   .SET   DLOOP_5   
03AA                DLOOP_5:   .SET   DLOOP_6   
03AA                DLOOP_6:   .SET   DLOOP_7   
03AA                DLOOP_7:   .SET   DLOOP_8   
03AA                DLOOP_8:   .SET   DLOOP_9   
03AA                DLOOP_9:   .SET   DLOOP_10   
03AA                DLOOP_10:   .SET   DLOOP_11   
03AA                DLOOP_11:   .SET   DLOOP_12   
03AA                DLOOP_12:   .SET   0   
03AA   17                     RLA      
03AB   2F                     CPL      
03AC   47                     LD   B,A   
03AD   79                     LD   A,C   
03AE   48                     LD   C,B   
03AF   06 08                  LD   B,8   
03B1                          ;*Macro unroll:  _do
03B1   18 03                  JR   L_M_930S366   
03B3   C3 B3 03               JP   $   
03B6                          ;*Macro unroll:  DLOOP_PUSH $
03B6                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03B6                DLOOP_12:   .SET   DLOOP_11   
03B6                DLOOP_11:   .SET   DLOOP_10   
03B6                DLOOP_10:   .SET   DLOOP_9   
03B6                DLOOP_9:   .SET   DLOOP_8   
03B6                DLOOP_8:   .SET   DLOOP_7   
03B6                DLOOP_7:   .SET   DLOOP_6   
03B6                DLOOP_6:   .SET   DLOOP_5   
03B6                DLOOP_5:   .SET   DLOOP_4   
03B6                DLOOP_4:   .SET   DLOOP_3   
03B6                DLOOP_3:   .SET   DLOOP_2   
03B6                DLOOP_2:   .SET   DLOOP_TOP   
03B6                DLOOP_TOP:   .SET   $   
03B6                L_M_930S366:      
03B6   17                     RLA      
03B7   ED 6A                  ADC   HL,HL   
03B9   ED 52                  SBC   HL,DE   
03BB                          ;*Macro unroll:  _if c
03BB   DA C1 03               JP   c,L_M_934S370   
03BE   C3 BE 03               JP   $   
03C1                          ;*Macro unroll:  STRUC_PUSH $
03C1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03C1                STRUC_12:   .SET   STRUC_11   
03C1                STRUC_11:   .SET   STRUC_10   
03C1                STRUC_10:   .SET   STRUC_9   
03C1                STRUC_9:   .SET   STRUC_8   
03C1                STRUC_8:   .SET   STRUC_7   
03C1                STRUC_7:   .SET   STRUC_6   
03C1                STRUC_6:   .SET   STRUC_5   
03C1                STRUC_5:   .SET   STRUC_4   
03C1                STRUC_4:   .SET   STRUC_3   
03C1                STRUC_3:   .SET   STRUC_2   
03C1                STRUC_2:   .SET   STRUC_TOP   
03C1                STRUC_TOP:   .SET   $   
03C1                L_M_934S370:      
03C1   19                     ADD   HL,DE   
03C2                          ;*Macro unroll:  _endif
03C2                          ;*Macro unroll:  STRUC_FWD
03C2                CUR_ADR:   .SET   $   
03BF                          .ORG   STRUC_TOP - 2   
03BF   C2 03                  DW   CUR_ADR   
03C2                          .ORG   CUR_ADR   
03C2                          ;*Macro unroll:  STRUC_POP
03C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03C2                STRUC_TOP:   .SET   STRUC_2   
03C2                STRUC_2:   .SET   STRUC_3   
03C2                STRUC_3:   .SET   STRUC_4   
03C2                STRUC_4:   .SET   STRUC_5   
03C2                STRUC_5:   .SET   STRUC_6   
03C2                STRUC_6:   .SET   STRUC_7   
03C2                STRUC_7:   .SET   STRUC_8   
03C2                STRUC_8:   .SET   STRUC_9   
03C2                STRUC_9:   .SET   STRUC_10   
03C2                STRUC_10:   .SET   STRUC_11   
03C2                STRUC_11:   .SET   STRUC_12   
03C2                STRUC_12:   .SET   0   
03C2                          ;*Macro unroll:  _djnz
03C2   10 F2                  DJNZ   DLOOP_TOP   
03C4                          ;*Macro unroll:  DLOOP_FWD
03C4                CUR_ADR:   .SET   $   
03B4                          .ORG   DLOOP_TOP - 2   
03B4   C4 03                  DW   CUR_ADR   
03C4                          .ORG   CUR_ADR   
03C4                          ;*Macro unroll:  DLOOP_POP
03C4                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03C4                DLOOP_TOP:   .SET   DLOOP_2   
03C4                DLOOP_2:   .SET   DLOOP_3   
03C4                DLOOP_3:   .SET   DLOOP_4   
03C4                DLOOP_4:   .SET   DLOOP_5   
03C4                DLOOP_5:   .SET   DLOOP_6   
03C4                DLOOP_6:   .SET   DLOOP_7   
03C4                DLOOP_7:   .SET   DLOOP_8   
03C4                DLOOP_8:   .SET   DLOOP_9   
03C4                DLOOP_9:   .SET   DLOOP_10   
03C4                DLOOP_10:   .SET   DLOOP_11   
03C4                DLOOP_11:   .SET   DLOOP_12   
03C4                DLOOP_12:   .SET   0   
03C4   17                     RLA      
03C5   2F                     CPL      
03C6   41                     LD   B,C   
03C7   4F                     LD   C,A   
03C8   D1                     POP   DE   
03C9   C9                     RET      
03CA                             ; 
03CA                             ; unsignedMultiply -  unsigned multiply ***
03CA                             ; 
03CA                             ; params:  u1 in BC, u2 in DE
03CA                             ; returns: result in HLDE
03CA                             ; destroys: AF
03CA                             ; 
03CA                UNSIGNEDMULTIPLY:      
03CA   21 00 00               LD   HL,0   
03CD   3E 11                  LD   A,17   ; loop counter
03CF   B7                     OR   A   ; clear carry
03D0                          ;*Macro unroll:  _do
03D0   18 03                  JR   L_M_955S393   
03D2   C3 D2 03               JP   $   
03D5                          ;*Macro unroll:  DLOOP_PUSH $
03D5                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
03D5                DLOOP_12:   .SET   DLOOP_11   
03D5                DLOOP_11:   .SET   DLOOP_10   
03D5                DLOOP_10:   .SET   DLOOP_9   
03D5                DLOOP_9:   .SET   DLOOP_8   
03D5                DLOOP_8:   .SET   DLOOP_7   
03D5                DLOOP_7:   .SET   DLOOP_6   
03D5                DLOOP_6:   .SET   DLOOP_5   
03D5                DLOOP_5:   .SET   DLOOP_4   
03D5                DLOOP_4:   .SET   DLOOP_3   
03D5                DLOOP_3:   .SET   DLOOP_2   
03D5                DLOOP_2:   .SET   DLOOP_TOP   
03D5                DLOOP_TOP:   .SET   $   
03D5                L_M_955S393:      
03D5   CB 1C                  RR   H   
03D7   CB 1D                  RR   L   
03D9   CB 1A                  RR   D   
03DB   CB 1B                  RR   E   
03DD                          ;*Macro unroll:  _if c
03DD   DA E3 03               JP   c,L_M_960S398   
03E0   C3 E0 03               JP   $   
03E3                          ;*Macro unroll:  STRUC_PUSH $
03E3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
03E3                STRUC_12:   .SET   STRUC_11   
03E3                STRUC_11:   .SET   STRUC_10   
03E3                STRUC_10:   .SET   STRUC_9   
03E3                STRUC_9:   .SET   STRUC_8   
03E3                STRUC_8:   .SET   STRUC_7   
03E3                STRUC_7:   .SET   STRUC_6   
03E3                STRUC_6:   .SET   STRUC_5   
03E3                STRUC_5:   .SET   STRUC_4   
03E3                STRUC_4:   .SET   STRUC_3   
03E3                STRUC_3:   .SET   STRUC_2   
03E3                STRUC_2:   .SET   STRUC_TOP   
03E3                STRUC_TOP:   .SET   $   
03E3                L_M_960S398:      
03E3   09                     ADD   HL,BC   
03E4                          ;*Macro unroll:  _endif
03E4                          ;*Macro unroll:  STRUC_FWD
03E4                CUR_ADR:   .SET   $   
03E1                          .ORG   STRUC_TOP - 2   
03E1   E4 03                  DW   CUR_ADR   
03E4                          .ORG   CUR_ADR   
03E4                          ;*Macro unroll:  STRUC_POP
03E4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
03E4                STRUC_TOP:   .SET   STRUC_2   
03E4                STRUC_2:   .SET   STRUC_3   
03E4                STRUC_3:   .SET   STRUC_4   
03E4                STRUC_4:   .SET   STRUC_5   
03E4                STRUC_5:   .SET   STRUC_6   
03E4                STRUC_6:   .SET   STRUC_7   
03E4                STRUC_7:   .SET   STRUC_8   
03E4                STRUC_8:   .SET   STRUC_9   
03E4                STRUC_9:   .SET   STRUC_10   
03E4                STRUC_10:   .SET   STRUC_11   
03E4                STRUC_11:   .SET   STRUC_12   
03E4                STRUC_12:   .SET   0   
03E4   3D                     DEC   A   
03E5                          ;*Macro unroll:  _until z
03E5   CA D2 03               JP   z,DLOOP_TOP - 3   
03E8                          ;*Macro unroll:  DLOOP_FWD               ; needed?
03E8                CUR_ADR:   .SET   $   ; needed?
03D3                          .ORG   DLOOP_TOP - 2   
03D3   E8 03                  DW   CUR_ADR   
03E8                          .ORG   CUR_ADR   
03E8                          ;*Macro unroll:  _enddo
03E8   C3 D5 03               JP   DLOOP_TOP   
03EB                          ;*Macro unroll:  DLOOP_FWD
03EB                CUR_ADR:   .SET   $   
03D3                          .ORG   DLOOP_TOP - 2   
03D3   EB 03                  DW   CUR_ADR   
03EB                          .ORG   CUR_ADR   
03EB                          ;*Macro unroll:  DLOOP_POP
03EB                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
03EB                DLOOP_TOP:   .SET   DLOOP_2   
03EB                DLOOP_2:   .SET   DLOOP_3   
03EB                DLOOP_3:   .SET   DLOOP_4   
03EB                DLOOP_4:   .SET   DLOOP_5   
03EB                DLOOP_5:   .SET   DLOOP_6   
03EB                DLOOP_6:   .SET   DLOOP_7   
03EB                DLOOP_7:   .SET   DLOOP_8   
03EB                DLOOP_8:   .SET   DLOOP_9   
03EB                DLOOP_9:   .SET   DLOOP_10   
03EB                DLOOP_10:   .SET   DLOOP_11   
03EB                DLOOP_11:   .SET   DLOOP_12   
03EB                DLOOP_12:   .SET   0   
03EB   C9                     RET      
03EC                          ;*Macro unroll: mCODE ":",1,0,colon
03EC                HEADER_COLON:      
03EC   5B 03                  DW   link   
03EE                LINK:     .SET   HEADER_colon   
03EE   01                     DB   0 + 1   
03EF   3A                     DB   ":"   
03F0                COLON:       
03F0                          ;*Macro unroll:  ENTER
03F0   CF                     RST   $08   
03F1   8C 04                  DW   create   ; create the dictionary entry / header
03F3   60 08 BF 0E            DW   here,fetch   ; back up 3 bytes to start of data area
03F7   8B 11 03 00 1E 01      DW   lit,3,SUBB   
03FD   60 08 9E 0E            DW   here,store   
0401   8B 11 CF 00 91 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0407   15 14 BF 0E 60 05      DW   latest,fetch,hidden   ; make the word hidden (see below for definition).
040D   86 05                  DW   rbrac   ; go into compile mode.
040F                          ;*Macro unroll:  EXIT                                ; return from the function.
040F   8C 0E                  DW   exit   ; return from the function.
0411   C3 7B 0E               JP   enter   
0414                          ;*Macro unroll: mCODE ";",1,msk_immed,semicolon
0414                HEADER_SEMICOLON:      
0414   EC 03                  DW   link   
0416                LINK:     .SET   HEADER_semicolon   
0416   81                     DB   msk_immed + 1   
0417   3B                     DB   ";"   
0418                SEMICOLON:      
0418                          ;*Macro unroll:  ENTER
0418   CF                     RST   $08   
0419   8B 11 8C 0E 75 0F      DW   lit,exit,comma   ; append exit (so the word will return).
041F   15 14 BF 0E 60 05      DW   latest,fetch,hidden   ; toggle hidden flag -- unhide the word (see below for definition).
0425   79 05                  DW   lbrac   ; go back to immediate mode.
0427                          ;*Macro unroll:  EXIT                                ; return from the function.
0427   8C 0E                  DW   exit   ; return from the function.
0429   C3 7B 0E               JP   enter   
042C                          ;*Macro unroll: mCODE ":noname",7,0,colonNoName
042C                HEADER_COLONNONAME:      
042C   14 04                  DW   link   
042E                LINK:     .SET   HEADER_colonNoName   
042E   07                     DB   0 + 7   
042F   3A 6E 6F 6E 61 6D 65   DB   ":noname"   
0436                COLONNONAME:      
0436                          ;*Macro unroll:  ENTER
0436   CF                     RST   $08   
0437   60 08 BF 0E            DW   here,fetch   ; TOS = here
043B   8B 11 CF 00 91 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0441   86 05                  DW   rbrac   ; go into compile mode.
0443                          ;*Macro unroll:  EXIT                                ; return from the function.
0443   8C 0E                  DW   exit   ; return from the function.
0445   C3 7B 0E               JP   enter   
0448                          ;*Macro unroll: mCODE "variable",8,0,variable         ; ( n -- ) get name from input
0448                HEADER_VARIABLE:      ; ( n -- ) get name from input
0448   2C 04                  DW   link   
044A                LINK:     .SET   HEADER_variable   
044A   08                     DB   0 + 8   
044B   76 61 72 69 61 62 6C 65 DB   "variable"   
0453                VARIABLE:      
0453                          ;*Macro unroll:  ENTER
0453   CF                     RST   $08   
0454   8B 11 01 00 5C 02      DW   lit,1,cells   
045A   60 08 BF 0E 20 12      DW   here,fetch,swap   ; n -- here n
0460   42 0F                  DW   allot   ; allocate n bytes, push addr
0462   F7 04                  DW   constant   
0464                          ;*Macro unroll:  EXIT
0464   8C 0E                  DW   exit   
0466   C3 7B 0E               JP   enter   
0469                          ;*Macro unroll: mCODE "buffer:",7,0,bufferColon       ; ( n -- ) get name from input
0469                HEADER_BUFFERCOLON:      ; ( n -- ) get name from input
0469   48 04                  DW   link   
046B                LINK:     .SET   HEADER_bufferColon   
046B   07                     DB   0 + 7   
046C   62 75 66 66 65 72 3A   DB   "buffer:"   
0473                BUFFERCOLON:      
0473                          ;*Macro unroll:  ENTER
0473   CF                     RST   $08   
0474   60 08 BF 0E 20 12      DW   here,fetch,swap   ; n -- here n
047A   42 0F                  DW   allot   ; allocate n bytes, push addr
047C   F7 04                  DW   constant   
047E                          ;*Macro unroll:  EXIT
047E   8C 0E                  DW   exit   
0480   C3 7B 0E               JP   enter   
0483                          ;*Macro unroll: mCODE "create",6,0,create             ; --
0483                HEADER_CREATE:      ; --
0483   69 04                  DW   link   
0485                LINK:     .SET   HEADER_create   
0485   06                     DB   0 + 6   
0486   63 72 65 61 74 65      DB   "create"   
048C                CREATE:      
048C                          ;*Macro unroll:  ENTER
048C   CF                     RST   $08   
048D   60 08 BF 0E            DW   here,fetch   ; get old "here"
0491   15 14 BF 0E 75 0F      DW   latest,fetch,comma   ; write link to previous word to "here"
0497   15 14 9E 0E            DW   latest,store   ; update latest to old "here"
049B   F9 0D 07 0B            DW   bl,word   ; read word token
049F   EC 0E 41 03 42 0F      DW   cfetch,ONEP,allot   ; 
04A5   8B 11 C3 00 91 0F      DW   lit,jp_opcode,cComma   ; compile default behavious
04AB   8B 11 B6 04 75 0F      DW   lit,xcreate,comma   ; i.e. push addr of data area
04B1                          ;*Macro unroll:  EXIT                                ; exit from forth
04B1   8C 0E                  DW   exit   ; exit from forth
04B3   C3 7B 0E               JP   enter   
04B6                XCREATE:      
04B6                          ;*Macro unroll:  ENTER
04B6   CF                     RST   $08   
04B7   91 12                  DW   rfrom   ; push onto stack
04B9                          ;*Macro unroll:  EXIT
04B9   8C 0E                  DW   exit   
04BB   C3 7B 0E               JP   enter   
04BE                          ;*Macro unroll: mCODE "does>", 5, msk_immed, does         ; --
04BE                HEADER_DOES:      ; --
04BE   83 04                  DW   link   
04C0                LINK:     .SET   HEADER_does   
04C0   85                     DB   msk_immed + 5   
04C1   64 6F 65 73 3E         DB   "does>"   
04C6                DOES:        
04C6                          ;*Macro unroll:  ENTER
04C6   CF                     RST   $08   
04C7   8B 11 9F 05 75 0F      DW   lit,xdoes,comma   
04CD   8B 11 8F 05            DW   lit,dodoes   
04D1   60 08 BF 0E            DW   here,fetch   
04D5   8B 11 CD 00            DW   lit,call_opcode   
04D9   54 12 CD 0E            DW   over,cstore   
04DD   41 03 9E 0E            DW   ONEP,store   
04E1   8B 11 03 00 42 0F      DW   lit,3,allot   
04E7                          ;*Macro unroll:  EXIT
04E7   8C 0E                  DW   exit   
04E9   C3 7B 0E               JP   enter   
04EC                          ;*Macro unroll: mCODE "constant",8,0,constant         ; --
04EC                HEADER_CONSTANT:      ; --
04EC   BE 04                  DW   link   
04EE                LINK:     .SET   HEADER_constant   
04EE   08                     DB   0 + 8   
04EF   63 6F 6E 73 74 61 6E 74 DB   "constant"   
04F7                CONSTANT:      
04F7                          ;*Macro unroll:  ENTER
04F7   CF                     RST   $08   
04F8   8C 04 75 0F 9F 05      DW   create,comma,xdoes   
04FE   CF                     RST   $08   
04FF   91 12                  DW   rfrom   ; push onto stack
0501   BF 0E                  DW   fetch   
0503                          ;*Macro unroll:  EXIT
0503   8C 0E                  DW   exit   
0505   C3 7B 0E               JP   enter   
0508                          ;*Macro unroll: mCODE "'",1,0,tick                    ; quotes next word
0508                HEADER_TICK:      ; quotes next word
0508   EC 04                  DW   link   
050A                LINK:     .SET   HEADER_tick   
050A   01                     DB   0 + 1   
050B   27                     DB   "'"   
050C                TICK:        
050C                          ;*Macro unroll:  ENTER
050C   CF                     RST   $08   
050D   F9 0D 07 0B 45 05 D6 01 DW   bl,word,find,zEqual   
0515   91 12 BB 12 54 12 54 12 CE 00 7C 12 DW   rFrom,count,over,over,plus,toR   
0521                          ;*Macro unroll:  EXIT
0521   8C 0E                  DW   exit   
0523   C3 7B 0E               JP   enter   
0526                          ;*Macro unroll: mCODE "immediate",9,MSK_IMMED,IMMEDIATE
0526                HEADER_IMMEDIATE:      
0526   08 05                  DW   link   
0528                LINK:     .SET   HEADER_IMMEDIATE   
0528   89                     DB   MSK_IMMED + 9   
0529   69 6D 6D 65 64 69 61 74 65 DB   "immediate"   
0532                IMMEDIATE:      
0532   2A 5F 32               LD   HL,(VAR_LATEST)   ; get head of latest word
0535   23                     INC   HL   ; point to flags byte
0536   23                     INC   HL   
0537   3E 80                  LD   a,MSK_IMMED   
0539   AE                     XOR   (HL)   ; toggle the IMMED bit.
053A   77                     LD   (HL),a   
053B                          ;*Macro unroll:  NEXT
053B   C3 7B 0E               JP   enter   
053E                          ;*Macro unroll: mCODE "find",4,0,FIND
053E                HEADER_FIND:      
053E   26 05                  DW   link   
0540                LINK:     .SET   HEADER_FIND   
0540   04                     DB   0 + 4   
0541   66 69 6E 64            DB   "find"   
0545                FIND:        
0545                          ;*Macro unroll:  ppop0 H,L
0545   DD 2B                  DEC   IX   
0547   DD 66 00               LD   H,(IX+0)   
054A   DD 2B                  DEC   IX   
054C   DD 6E 00               LD   L,(IX+0)   
054F   CD 82 0B               CALL   lookup   ; params: HL = string address, BC = string length
0552                             ; returns: DE = found header ptr or 0
0552                          ;*Macro unroll:  loadWord B,C, D,E               ; move to TOS
0552   4B                     LD   C,E   ; move to TOS
0553   42                     LD   B,D   
0554                          ;*Macro unroll:  NEXT
0554   C3 7B 0E               JP   enter   
0557                          ;*Macro unroll: mCODE "hidden",6,0,HIDDEN
0557                HEADER_HIDDEN:      
0557   3E 05                  DW   link   
0559                LINK:     .SET   HEADER_HIDDEN   
0559   06                     DB   0 + 6   
055A   68 69 64 64 65 6E      DB   "hidden"   
0560                HIDDEN:      
0560                          ;*Macro unroll:  ppop H,L		            ; HL = Dictionary entry.
0560   60                     LD   H,B   ; HL = Dictionary entry.
0561   69                     LD   L,C   
0562                          ;*Macro unroll:  ppop0 B,C
0562   DD 2B                  DEC   IX   
0564   DD 46 00               LD   B,(IX+0)   
0567   DD 2B                  DEC   IX   
0569   DD 4E 00               LD   C,(IX+0)   
056C   23                     INC   HL   
056D   23                     INC   HL   ; Point to name/flags byte.
056E   7E                     LD   A,(HL)   
056F   EE 40                  XOR   MSK_HIDDEN   ; Toggle the HIDDEN bit.
0571   77                     LD   (HL),A   
0572                          ;*Macro unroll:  NEXT
0572   C3 7B 0E               JP   enter   
0575                          ;*Macro unroll: mCODE "[",1,MSK_IMMED,LBRAC
0575                HEADER_LBRAC:      
0575   57 05                  DW   link   
0577                LINK:     .SET   HEADER_LBRAC   
0577   81                     DB   MSK_IMMED + 1   
0578   5B                     DB   "["   
0579                LBRAC:       
0579   21 00 00               LD   HL,0   
057C   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 0.
057F                          ;*Macro unroll:  NEXT
057F   C3 7B 0E               JP   enter   
0582                          ;*Macro unroll: mCODE "]",1,0,RBRAC
0582                HEADER_RBRAC:      
0582   75 05                  DW   link   
0584                LINK:     .SET   HEADER_RBRAC   
0584   01                     DB   0 + 1   
0585   5D                     DB   "]"   
0586                RBRAC:       
0586   21 01 00               LD   HL,1   
0589   22 55 32               LD   (VAR_STATE),HL   ; Set STATE to 1.
058C                          ;*Macro unroll:  NEXT
058C   C3 7B 0E               JP   enter   
058F                DODOES:      ; -- a-addr
058F                          ;*Macro unroll:  ppush0 B,C
058F   DD 71 00               LD   (IX+0),C   
0592   DD 23                  INC   IX   
0594   DD 70 00               LD   (IX+0),B   
0597   DD 23                  INC   IX   
0599   E1                     POP   HL   ; parameter field address
059A   C1                     POP   BC   
059B   E5                     PUSH   HL   
059C                          ;*Macro unroll:  NEXT
059C   C3 7B 0E               JP   enter   
059F                XDOES:       ; --
059F                          ;*Macro unroll:  ENTER
059F   CF                     RST   $08   
05A0   91 12                  DW   rfrom   
05A2   15 14 BF 0E 1E 0B      DW   latest,fetch,tcfa   
05A8   8B 11 CD 00            DW   lit,call_opcode   
05AC   54 12 CD 0E            DW   over,cstore   
05B0   41 03 9E 0E            DW   ONEP,store   
05B4                          ;*Macro unroll:  EXIT
05B4   8C 0E                  DW   exit   
05B6   C3 7B 0E               JP   enter   
05B9                          ;*Macro unroll: mCODE "postpone",8,msk_immed,postpone ; --
05B9                HEADER_POSTPONE:      ; --
05B9   82 05                  DW   link   
05BB                LINK:     .SET   HEADER_postpone   
05BB   88                     DB   msk_immed + 8   
05BC   70 6F 73 74 70 6F 6E 65 DB   "postpone"   
05C4                POSTPONE:      
05C4   CF                     RST   $08   
05C5   F9 0D 07 0B BB 12      DW   bl,word,count   ; pstr -- ptr len
05CB   0C 12 D6 01            DW   DUPP,zEqual   
05CF                          ;*Macro unroll:  cIf
05CF   38 07 00 00            DW   QBRAN,0   
05D3                          ;*Macro unroll:  CPL_PUSH $
05D3                CPL_COUNT:   .SET   CPL_COUNT + 1   
05D3                CPL_10:   .SET   CPL_9   
05D3                CPL_9:    .SET   CPL_8   
05D3                CPL_8:    .SET   CPL_7   
05D3                CPL_7:    .SET   CPL_6   
05D3                CPL_6:    .SET   CPL_5   
05D3                CPL_5:    .SET   CPL_4   
05D3                CPL_4:    .SET   CPL_3   
05D3                CPL_3:    .SET   CPL_2   
05D3                CPL_2:    .SET   CPL_TOP   
05D3                CPL_TOP:   .SET   $   
05D3   40 12 40 12            DW   drop,drop   ; ptr len --
05D7                          ;*Macro unroll:  cElse
05D7   55 07 00 00            DW   BRAN,0   
05DB                          ;*Macro unroll:  cBRANCH_FWD
05DB                CUR_ADR:   .SET   $   
05D1                          .ORG   CPL_TOP - 2   
05D1   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
05DB                          .ORG   CUR_ADR   
05DB                CPL_TOP:   .SET   $   
05DB   E2 05                  DW   postponeToken   ; interpret the next word
05DD                          ;*Macro unroll:  cEndif
05DD                          ;*Macro unroll:  cBRANCH_FWD
05DD                CUR_ADR:   .SET   $   
05D9                          .ORG   CPL_TOP - 2   
05D9   04 00                  DW   CUR_ADR - CPL_TOP + 2   
05DD                          .ORG   CUR_ADR   
05DD                          ;*Macro unroll:  CPL_POP
05DD                CPL_COUNT:   .SET   CPL_COUNT - 1   
05DD                CPL_TOP:   .SET   CPL_2   
05DD                CPL_2:    .SET   CPL_3   
05DD                CPL_3:    .SET   CPL_4   
05DD                CPL_4:    .SET   CPL_5   
05DD                CPL_5:    .SET   CPL_6   
05DD                CPL_6:    .SET   CPL_7   
05DD                CPL_7:    .SET   CPL_8   
05DD                CPL_8:    .SET   CPL_9   
05DD                CPL_9:    .SET   CPL_10   
05DD                CPL_10:   .SET   0   
05DD                          ;*Macro unroll:  EXIT
05DD   8C 0E                  DW   exit   
05DF   C3 7B 0E               JP   enter   
05E2                POSTPONETOKEN:      ; --
05E2   CF                     RST   $08   
05E3   54 12 54 12 45 05      DW   over,over,find   ; ptr len -- ptr len addr
05E9   0C 12 EB 01            DW   DUPP,zNotEqual   
05ED                          ;*Macro unroll:  cIf
05ED   38 07 00 00            DW   QBRAN,0   
05F1                          ;*Macro unroll:  CPL_PUSH $
05F1                CPL_COUNT:   .SET   CPL_COUNT + 1   
05F1                CPL_10:   .SET   CPL_9   
05F1                CPL_9:    .SET   CPL_8   
05F1                CPL_8:    .SET   CPL_7   
05F1                CPL_7:    .SET   CPL_6   
05F1                CPL_6:    .SET   CPL_5   
05F1                CPL_5:    .SET   CPL_4   
05F1                CPL_4:    .SET   CPL_3   
05F1                CPL_3:    .SET   CPL_2   
05F1                CPL_2:    .SET   CPL_TOP   
05F1                CPL_TOP:   .SET   $   
05F1   FE 05                  DW   postponeWord   
05F3                          ;*Macro unroll:  cElse
05F3   55 07 00 00            DW   BRAN,0   
05F7                          ;*Macro unroll:  cBRANCH_FWD
05F7                CUR_ADR:   .SET   $   
05EF                          .ORG   CPL_TOP - 2   
05EF   08 00                  DW   CUR_ADR - CPL_TOP + 2   
05F7                          .ORG   CUR_ADR   
05F7                CPL_TOP:   .SET   $   
05F7   3A 06                  DW   postponeLiteral   
05F9                          ;*Macro unroll:  cEndif
05F9                          ;*Macro unroll:  cBRANCH_FWD
05F9                CUR_ADR:   .SET   $   
05F5                          .ORG   CPL_TOP - 2   
05F5   04 00                  DW   CUR_ADR - CPL_TOP + 2   
05F9                          .ORG   CUR_ADR   
05F9                          ;*Macro unroll:  CPL_POP
05F9                CPL_COUNT:   .SET   CPL_COUNT - 1   
05F9                CPL_TOP:   .SET   CPL_2   
05F9                CPL_2:    .SET   CPL_3   
05F9                CPL_3:    .SET   CPL_4   
05F9                CPL_4:    .SET   CPL_5   
05F9                CPL_5:    .SET   CPL_6   
05F9                CPL_6:    .SET   CPL_7   
05F9                CPL_7:    .SET   CPL_8   
05F9                CPL_8:    .SET   CPL_9   
05F9                CPL_9:    .SET   CPL_10   
05F9                CPL_10:   .SET   0   
05F9                          ;*Macro unroll:  EXIT
05F9   8C 0E                  DW   exit   
05FB   C3 7B 0E               JP   enter   
05FE                POSTPONEWORD:      ; ( headptr -- )
05FE   CF                     RST   $08   ; enter forth
05FF   20 12 40 12 20 12 40 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0607   0C 12 8B 11 02 00 CE 00 EC 0E DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0611   8B 11 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0617   D6 01                  DW   zEqual   
0619                          ;*Macro unroll:  cIf
0619   38 07 00 00            DW   QBRAN,0   
061D                          ;*Macro unroll:  CPL_PUSH $
061D                CPL_COUNT:   .SET   CPL_COUNT + 1   
061D                CPL_10:   .SET   CPL_9   
061D                CPL_9:    .SET   CPL_8   
061D                CPL_8:    .SET   CPL_7   
061D                CPL_7:    .SET   CPL_6   
061D                CPL_6:    .SET   CPL_5   
061D                CPL_5:    .SET   CPL_4   
061D                CPL_4:    .SET   CPL_3   
061D                CPL_3:    .SET   CPL_2   
061D                CPL_2:    .SET   CPL_TOP   
061D                CPL_TOP:   .SET   $   
061D   8B 11 8B 11 75 0F      DW   lit,lit,comma   
0623   1E 0B 75 0F            DW   tcfa,comma   
0627   8B 11 75 0F 75 0F      DW   lit,comma,comma   
062D                          ;*Macro unroll:  cElse
062D   55 07 00 00            DW   BRAN,0   
0631                          ;*Macro unroll:  cBRANCH_FWD
0631                CUR_ADR:   .SET   $   
061B                          .ORG   CPL_TOP - 2   
061B   16 00                  DW   CUR_ADR - CPL_TOP + 2   
0631                          .ORG   CUR_ADR   
0631                CPL_TOP:   .SET   $   
0631   1E 0B 75 0F            DW   tcfa,comma   
0635                          ;*Macro unroll:  cEndIf
0635                          ;*Macro unroll:  cBRANCH_FWD
0635                CUR_ADR:   .SET   $   
062F                          .ORG   CPL_TOP - 2   
062F   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0635                          .ORG   CUR_ADR   
0635                          ;*Macro unroll:  CPL_POP
0635                CPL_COUNT:   .SET   CPL_COUNT - 1   
0635                CPL_TOP:   .SET   CPL_2   
0635                CPL_2:    .SET   CPL_3   
0635                CPL_3:    .SET   CPL_4   
0635                CPL_4:    .SET   CPL_5   
0635                CPL_5:    .SET   CPL_6   
0635                CPL_6:    .SET   CPL_7   
0635                CPL_7:    .SET   CPL_8   
0635                CPL_8:    .SET   CPL_9   
0635                CPL_9:    .SET   CPL_10   
0635                CPL_10:   .SET   0   
0635                          ;*Macro unroll:  EXIT
0635   8C 0E                  DW   exit   
0637   C3 7B 0E               JP   enter   
063A                POSTPONELITERAL:      ; ( ptr len -- )
063A   CF                     RST   $08   ; enter forth
063B   40 12                  DW   drop   ; ptr len addr - ptr len
063D   A5 0A D6 01            DW   number,zEqual   ; parse to number
0641                          ;*Macro unroll:  cif
0641   38 07 00 00            DW   QBRAN,0   
0645                          ;*Macro unroll:  CPL_PUSH $
0645                CPL_COUNT:   .SET   CPL_COUNT + 1   
0645                CPL_10:   .SET   CPL_9   
0645                CPL_9:    .SET   CPL_8   
0645                CPL_8:    .SET   CPL_7   
0645                CPL_7:    .SET   CPL_6   
0645                CPL_6:    .SET   CPL_5   
0645                CPL_5:    .SET   CPL_4   
0645                CPL_4:    .SET   CPL_3   
0645                CPL_3:    .SET   CPL_2   
0645                CPL_2:    .SET   CPL_TOP   
0645                CPL_TOP:   .SET   $   
0645   8B 11 8B 11            DW   lit,lit   ; (val -- val "lit" )
0649   75 0F 75 0F            DW   comma,comma   ; compile "lit" val
064D                          ;*Macro unroll:  cElse
064D   55 07 00 00            DW   BRAN,0   
0651                          ;*Macro unroll:  cBRANCH_FWD
0651                CUR_ADR:   .SET   $   
0643                          .ORG   CPL_TOP - 2   
0643   0E 00                  DW   CUR_ADR - CPL_TOP + 2   
0651                          .ORG   CUR_ADR   
0651                CPL_TOP:   .SET   $   
0651   40 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0653   A1 12                  DW   litstr   ; err != 0, parse error
0655   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0664   60 0D                  DW   type   
0666                          ;*Macro unroll:  cEndIf
0666                          ;*Macro unroll:  cBRANCH_FWD
0666                CUR_ADR:   .SET   $   
064F                          .ORG   CPL_TOP - 2   
064F   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0666                          .ORG   CUR_ADR   
0666                          ;*Macro unroll:  CPL_POP
0666                CPL_COUNT:   .SET   CPL_COUNT - 1   
0666                CPL_TOP:   .SET   CPL_2   
0666                CPL_2:    .SET   CPL_3   
0666                CPL_3:    .SET   CPL_4   
0666                CPL_4:    .SET   CPL_5   
0666                CPL_5:    .SET   CPL_6   
0666                CPL_6:    .SET   CPL_7   
0666                CPL_7:    .SET   CPL_8   
0666                CPL_8:    .SET   CPL_9   
0666                CPL_9:    .SET   CPL_10   
0666                CPL_10:   .SET   0   
0666                          ;*Macro unroll:  EXIT
0666   8C 0E                  DW   exit   
0668   C3 7B 0E               JP   enter   
066B                          ;*Macro unroll: mCODE "if",2,msk_immed,if
066B                HEADER_IF:      
066B   B9 05                  DW   link   
066D                LINK:     .SET   HEADER_if   
066D   82                     DB   msk_immed + 2   
066E   69 66                  DB   "if"   
0670                IF:          
0670                          ;*Macro unroll:  ENTER
0670   CF                     RST   $08   
0671   0B 09                  DW   lbrace   
0673   8B 11 38 07 75 0F      DW   lit,QBRAN,comma   ; compile ?branch
0679   60 08 BF 0E 0C 12 75 0F DW   here,fetch,DUPP,comma   ; compile here and also push on stack
0681                          ;*Macro unroll:  EXIT
0681   8C 0E                  DW   exit   
0683   C3 7B 0E               JP   enter   
0686                          ;*Macro unroll: mCODE "else",4,msk_immed,else
0686                HEADER_ELSE:      
0686   6B 06                  DW   link   
0688                LINK:     .SET   HEADER_else   
0688   84                     DB   msk_immed + 4   
0689   65 6C 73 65            DB   "else"   
068D                ELSE:        
068D                          ;*Macro unroll:  ENTER
068D   CF                     RST   $08   
068E   8B 11 55 07 75 0F      DW   lit,BRAN,comma   ; definite branch to just over the false-part
0694   60 08 BF 0E            DW   here,fetch   ; save here on stack
0698   8B 11 00 00 75 0F      DW   lit,0,comma   ; compile a dummy offset
069E   20 12                  DW   swap   ; now back-fill the original (if) offset
06A0   B9 06                  DW   xendif   ; must call xendif not endif
06A2                          ;*Macro unroll:  EXIT
06A2   8C 0E                  DW   exit   
06A4   C3 7B 0E               JP   enter   
06A7                          ;*Macro unroll: mCODE "endif",5,msk_immed,endif
06A7                HEADER_ENDIF:      
06A7   86 06                  DW   link   
06A9                LINK:     .SET   HEADER_endif   
06A9   85                     DB   msk_immed + 5   
06AA   65 6E 64 69 66         DB   "endif"   
06AF                ENDIF:       
06AF                          ;*Macro unroll:  ENTER
06AF   CF                     RST   $08   
06B0   B9 06                  DW   xendif   ; must call xendif not endif
06B2   5B 09                  DW   rbraceExec   
06B4                          ;*Macro unroll:  EXIT
06B4   8C 0E                  DW   exit   
06B6   C3 7B 0E               JP   enter   
06B9                XENDIF:      ; must call xendif not endif
06B9                          ;*Macro unroll:  ENTER
06B9   CF                     RST   $08   
06BA   0C 12                  DW   DUPP   
06BC   60 08 BF 0E 20 12 1E 01 DW   here,fetch,swap,SUBB   ; calculate the offset from the address saved on the stack
06C4   20 12 9E 0E            DW   swap,store   ; store the offset in the back-filled location
06C8                          ;*Macro unroll:  EXIT
06C8   8C 0E                  DW   exit   
06CA   C3 7B 0E               JP   enter   
06CD                             ; begin condition while ... repeat
06CD                          ;*Macro unroll: mCODE "begin",5,msk_immed,begin
06CD                HEADER_BEGIN:      
06CD   A7 06                  DW   link   
06CF                LINK:     .SET   HEADER_begin   
06CF   85                     DB   msk_immed + 5   
06D0   62 65 67 69 6E         DB   "begin"   
06D5                BEGIN:       
06D5                          ;*Macro unroll:  ENTER
06D5   CF                     RST   $08   
06D6   0B 09                  DW   lbrace   
06D8   60 08 BF 0E            DW   here,fetch   ; save here on stack (here1)
06DC                          ;*Macro unroll:  EXIT
06DC   8C 0E                  DW   exit   
06DE   C3 7B 0E               JP   enter   
06E1                          ;*Macro unroll: mCODE "while",5,msk_immed,while
06E1                HEADER_WHILE:      
06E1   CD 06                  DW   link   
06E3                LINK:     .SET   HEADER_while   
06E3   85                     DB   msk_immed + 5   
06E4   77 68 69 6C 65         DB   "while"   
06E9                WHILE:       
06E9                          ;*Macro unroll:  ENTER
06E9   CF                     RST   $08   
06EA   8B 11 38 07 75 0F      DW   lit,QBRAN,comma   ; compile branch on zero
06F0   60 08 BF 0E            DW   here,fetch   ; save here in stack (here2)
06F4   8B 11 00 00 75 0F      DW   lit,0,comma   ; compile dummy offset
06FA                          ;*Macro unroll:  EXIT
06FA   8C 0E                  DW   exit   
06FC   C3 7B 0E               JP   enter   
06FF                          ;*Macro unroll: mCODE "repeat",6,msk_immed,repeat
06FF                HEADER_REPEAT:      
06FF   E1 06                  DW   link   
0701                LINK:     .SET   HEADER_repeat   
0701   86                     DB   msk_immed + 6   
0702   72 65 70 65 61 74      DB   "repeat"   
0708                REPEAT:      
0708                          ;*Macro unroll:  ENTER
0708   CF                     RST   $08   
0709   8B 11 55 07 75 0F      DW   lit,BRAN,comma   ; compile branch
070F   20 12                  DW   swap   ; tos = here1
0711   60 08 BF 0E 1E 01 75 0F DW   here,fetch,SUBB,comma   ; compile offset (here1 - here3)
0719   0C 12                  DW   DUPP   
071B   60 08 BF 0E 20 12 1E 01 DW   here,fetch,swap,SUBB   ; compile offset (here2 - here3)
0723   20 12 9E 0E            DW   swap,store   ; save offset in here2
0727   5B 09                  DW   rbraceExec   
0729                          ;*Macro unroll:  EXIT
0729   8C 0E                  DW   exit   
072B   C3 7B 0E               JP   enter   
072E                             ; ?branch   x --              branch if TOS zero
072E                          ;*Macro unroll: mCODE "?branch",7,0,QBRAN
072E                HEADER_QBRAN:      
072E   FF 06                  DW   link   
0730                LINK:     .SET   HEADER_QBRAN   
0730   07                     DB   0 + 7   
0731   3F 62 72 61 6E 63 68   DB   "?branch"   
0738                QBRAN:       
0738                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
0738   79                     LD   A,C   ; test old TOS
0739   B0                     OR   B   
073A                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
073A   DD 2B                  DEC   IX   ; POP new TOS
073C   DD 46 00               LD   B,(IX+0)   
073F   DD 2B                  DEC   IX   
0741   DD 4E 00               LD   C,(IX+0)   
0744   28 0F                  JR   z,BRAN   ; if old TOS=0, branch
0746   E1                     POP   HL   
0747   23                     INC   HL   ; else skip inline value
0748   23                     INC   HL   
0749                          ;*Macro unroll:  NEXT1
0749   C3 7C 0E               JP   enter1   
074C                          ;*Macro unroll: mCODE "branch",6,0,BRAN         ; relative branching
074C                HEADER_BRAN:      ; relative branching
074C   2E 07                  DW   link   
074E                LINK:     .SET   HEADER_BRAN   
074E   06                     DB   0 + 6   
074F   62 72 61 6E 63 68      DB   "branch"   
0755                BRAN:        
0755   E1                     POP   HL   ; add the offset to the instruction pointer
0756   5E                     LD   E,(HL)   
0757   23                     INC   HL   
0758   56                     LD   D,(HL)   
0759   2B                     DEC   HL   
075A   19                     ADD   HL,DE   
075B                          ;*Macro unroll:  NEXT1
075B   C3 7C 0E               JP   enter1   
075E                             ; ?branch   x --              branch if TOS zero
075E                          ;*Macro unroll: mCODE "?branch1",7,0,QBRAN1
075E                HEADER_QBRAN1:      
075E   4C 07                  DW   link   
0760                LINK:     .SET   HEADER_QBRAN1   
0760   07                     DB   0 + 7   
0761   3F 62 72 61 6E 63 68 31 DB   "?branch1"   
0769                QBRAN1:      
0769                          ;*Macro unroll:  checkZeroWord B,C               ; test old TOS
0769   79                     LD   A,C   ; test old TOS
076A   B0                     OR   B   
076B                          ;*Macro unroll:  ppop0 B,C                       ; POP new TOS
076B   DD 2B                  DEC   IX   ; POP new TOS
076D   DD 46 00               LD   B,(IX+0)   
0770   DD 2B                  DEC   IX   
0772   DD 4E 00               LD   C,(IX+0)   
0775   28 10                  JR   z,BRAN1   ; if old TOS=0, branch
0777   E1                     POP   HL   
0778   23                     INC   HL   ; else skip inline value
0779   23                     INC   HL   
077A                          ;*Macro unroll:  NEXT1
077A   C3 7C 0E               JP   enter1   
077D                          ;*Macro unroll: mCODE "branch1",6,0,BRAN1         ; relative branching
077D                HEADER_BRAN1:      ; relative branching
077D   5E 07                  DW   link   
077F                LINK:     .SET   HEADER_BRAN1   
077F   06                     DB   0 + 6   
0780   62 72 61 6E 63 68 31   DB   "branch1"   
0787                BRAN1:       
0787   E1                     POP   HL   ; add the offset to the instruction pointer
0788   5E                     LD   E,(HL)   
0789   23                     INC   HL   
078A   56                     LD   D,(HL)   
078B                             ; LD H,D
078B                             ; LD L,E
078B   EB                     EX   DE,HL   
078C                          ;*Macro unroll:  NEXT1
078C   C3 7C 0E               JP   enter1   
078F                          ;*Macro unroll: mCONST "version",7,0,version,1
078F                          ;*Macro unroll: mCODE "version",7,0,version
078F                HEADER_VERSION:      
078F   7D 07                  DW   link   
0791                LINK:     .SET   HEADER_version   
0791   07                     DB   0 + 7   
0792   76 65 72 73 69 6F 6E   DB   "version"   
0799                VERSION:      
0799                          ;*Macro unroll:  ppush0 B,C
0799   DD 71 00               LD   (IX+0),C   
079C   DD 23                  INC   IX   
079E   DD 70 00               LD   (IX+0),B   
07A1   DD 23                  INC   IX   
07A3   01 01 00               LD   BC,1   
07A6                          ;*Macro unroll:  NEXT
07A6   C3 7B 0E               JP   enter   
07A9                          ;*Macro unroll: mCONST "r0",2,0,rz, ret_stack
07A9                          ;*Macro unroll: mCODE "r0",2,0,rz
07A9                HEADER_RZ:      
07A9   8F 07                  DW   link   
07AB                LINK:     .SET   HEADER_rz   
07AB   02                     DB   0 + 2   
07AC   72 30                  DB   "r0"   
07AE                RZ:          
07AE                          ;*Macro unroll:  ppush0 B,C
07AE   DD 71 00               LD   (IX+0),C   
07B1   DD 23                  INC   IX   
07B3   DD 70 00               LD   (IX+0),B   
07B6   DD 23                  INC   IX   
07B8   01 A7 2E               LD   BC,ret_stack   
07BB                          ;*Macro unroll:  NEXT
07BB   C3 7B 0E               JP   enter   
07BE                          ;*Macro unroll: mCONST "msk_immed",9,0,__msk_immed,msk_immed
07BE                          ;*Macro unroll: mCODE "msk_immed",9,0,__msk_immed
07BE                HEADER___MSK_IMMED:      
07BE   A9 07                  DW   link   
07C0                LINK:     .SET   HEADER___msk_immed   
07C0   09                     DB   0 + 9   
07C1   6D 73 6B 5F 69 6D 6D 65 64 DB   "msk_immed"   
07CA                __MSK_IMMED:      
07CA                          ;*Macro unroll:  ppush0 B,C
07CA   DD 71 00               LD   (IX+0),C   
07CD   DD 23                  INC   IX   
07CF   DD 70 00               LD   (IX+0),B   
07D2   DD 23                  INC   IX   
07D4   01 80 00               LD   BC,msk_immed   
07D7                          ;*Macro unroll:  NEXT
07D7   C3 7B 0E               JP   enter   
07DA                          ;*Macro unroll: mCONST "msk_hidden",10,0,__msk_hidden,msk_hidden
07DA                          ;*Macro unroll: mCODE "msk_hidden",10,0,__msk_hidden
07DA                HEADER___MSK_HIDDEN:      
07DA   BE 07                  DW   link   
07DC                LINK:     .SET   HEADER___msk_hidden   
07DC   0A                     DB   0 + 10   
07DD   6D 73 6B 5F 68 69 64 64 65 6E DB   "msk_hidden"   
07E7                __MSK_HIDDEN:      
07E7                          ;*Macro unroll:  ppush0 B,C
07E7   DD 71 00               LD   (IX+0),C   
07EA   DD 23                  INC   IX   
07EC   DD 70 00               LD   (IX+0),B   
07EF   DD 23                  INC   IX   
07F1   01 40 00               LD   BC,msk_hidden   
07F4                          ;*Macro unroll:  NEXT
07F4   C3 7B 0E               JP   enter   
07F7                          ;*Macro unroll: mCONST "msk_length",10,0,__msk_length,msk_length
07F7                          ;*Macro unroll: mCODE "msk_length",10,0,__msk_length
07F7                HEADER___MSK_LENGTH:      
07F7   DA 07                  DW   link   
07F9                LINK:     .SET   HEADER___msk_length   
07F9   0A                     DB   0 + 10   
07FA   6D 73 6B 5F 6C 65 6E 67 74 68 DB   "msk_length"   
0804                __MSK_LENGTH:      
0804                          ;*Macro unroll:  ppush0 B,C
0804   DD 71 00               LD   (IX+0),C   
0807   DD 23                  INC   IX   
0809   DD 70 00               LD   (IX+0),B   
080C   DD 23                  INC   IX   
080E   01 3F 00               LD   BC,msk_length   
0811                          ;*Macro unroll:  NEXT
0811   C3 7B 0E               JP   enter   
0814                          ;*Macro unroll: mCONST "TRUE",4,0,TRUE,-1
0814                          ;*Macro unroll: mCODE "TRUE",4,0,TRUE
0814                HEADER_TRUE:      
0814   F7 07                  DW   link   
0816                LINK:     .SET   HEADER_TRUE   
0816   04                     DB   0 + 4   
0817   54 52 55 45            DB   "TRUE"   
081B                TRUE:        
081B                          ;*Macro unroll:  ppush0 B,C
081B   DD 71 00               LD   (IX+0),C   
081E   DD 23                  INC   IX   
0820   DD 70 00               LD   (IX+0),B   
0823   DD 23                  INC   IX   
0825   01 FF FF               LD   BC,-1   
0828                          ;*Macro unroll:  NEXT
0828   C3 7B 0E               JP   enter   
082B                          ;*Macro unroll: mCONST "FALSE",5,0,FALSE,0
082B                          ;*Macro unroll: mCODE "FALSE",5,0,FALSE
082B                HEADER_FALSE:      
082B   14 08                  DW   link   
082D                LINK:     .SET   HEADER_FALSE   
082D   05                     DB   0 + 5   
082E   46 41 4C 53 45         DB   "FALSE"   
0833                FALSE:       
0833                          ;*Macro unroll:  ppush0 B,C
0833   DD 71 00               LD   (IX+0),C   
0836   DD 23                  INC   IX   
0838   DD 70 00               LD   (IX+0),B   
083B   DD 23                  INC   IX   
083D   01 00 00               LD   BC,0   
0840                          ;*Macro unroll:  NEXT
0840   C3 7B 0E               JP   enter   
0843                          ;*Macro unroll: mVAR "pad", 3, 0, pad, var_pad
0843                          ;*Macro unroll: mCODE "pad",3,0,pad
0843                HEADER_PAD:      
0843   2B 08                  DW   link   
0845                LINK:     .SET   HEADER_pad   
0845   03                     DB   0 + 3   
0846   70 61 64               DB   "pad"   
0849                PAD:         
0849                          ;*Macro unroll:  ppush0 B,C
0849   DD 71 00               LD   (IX+0),C   
084C   DD 23                  INC   IX   
084E   DD 70 00               LD   (IX+0),B   
0851   DD 23                  INC   IX   
0853   01 4D 31               LD   BC,var_pad   
0856                          ;*Macro unroll:  NEXT
0856   C3 7B 0E               JP   enter   
0859                          ;*Macro unroll: mVAR "here", 4, 0, here, var_here
0859                          ;*Macro unroll: mCODE "here",4,0,here
0859                HEADER_HERE:      
0859   43 08                  DW   link   
085B                LINK:     .SET   HEADER_here   
085B   04                     DB   0 + 4   
085C   68 65 72 65            DB   "here"   
0860                HERE:        
0860                          ;*Macro unroll:  ppush0 B,C
0860   DD 71 00               LD   (IX+0),C   
0863   DD 23                  INC   IX   
0865   DD 70 00               LD   (IX+0),B   
0868   DD 23                  INC   IX   
086A   01 51 32               LD   BC,var_here   
086D                          ;*Macro unroll:  NEXT
086D   C3 7B 0E               JP   enter   
0870                          ;*Macro unroll: mVAR "intp_stop", 9, 0, intp_stop, var_intp_stop
0870                          ;*Macro unroll: mCODE "intp_stop",9,0,intp_stop
0870                HEADER_INTP_STOP:      
0870   59 08                  DW   link   
0872                LINK:     .SET   HEADER_intp_stop   
0872   09                     DB   0 + 9   
0873   69 6E 74 70 5F 73 74 6F 70 DB   "intp_stop"   
087C                INTP_STOP:      
087C                          ;*Macro unroll:  ppush0 B,C
087C   DD 71 00               LD   (IX+0),C   
087F   DD 23                  INC   IX   
0881   DD 70 00               LD   (IX+0),B   
0884   DD 23                  INC   IX   
0886   01 53 32               LD   BC,var_intp_stop   
0889                          ;*Macro unroll:  NEXT
0889   C3 7B 0E               JP   enter   
088C                          ;*Macro unroll: mVAR "state",5,0,state, var_state
088C                          ;*Macro unroll: mCODE "state",5,0,state
088C                HEADER_STATE:      
088C   70 08                  DW   link   
088E                LINK:     .SET   HEADER_state   
088E   05                     DB   0 + 5   
088F   73 74 61 74 65         DB   "state"   
0894                STATE:       
0894                          ;*Macro unroll:  ppush0 B,C
0894   DD 71 00               LD   (IX+0),C   
0897   DD 23                  INC   IX   
0899   DD 70 00               LD   (IX+0),B   
089C   DD 23                  INC   IX   
089E   01 55 32               LD   BC,var_state   
08A1                          ;*Macro unroll:  NEXT
08A1   C3 7B 0E               JP   enter   
08A4                          ;*Macro unroll: mVAR "nesting",7,0,nesting, var_nesting
08A4                          ;*Macro unroll: mCODE "nesting",7,0,nesting
08A4                HEADER_NESTING:      
08A4   8C 08                  DW   link   
08A6                LINK:     .SET   HEADER_nesting   
08A6   07                     DB   0 + 7   
08A7   6E 65 73 74 69 6E 67   DB   "nesting"   
08AE                NESTING:      
08AE                          ;*Macro unroll:  ppush0 B,C
08AE   DD 71 00               LD   (IX+0),C   
08B1   DD 23                  INC   IX   
08B3   DD 70 00               LD   (IX+0),B   
08B6   DD 23                  INC   IX   
08B8   01 57 32               LD   BC,var_nesting   
08BB                          ;*Macro unroll:  NEXT
08BB   C3 7B 0E               JP   enter   
08BE                          ;*Macro unroll: mVAR "sp0",3,0,sp0, var_sp0
08BE                          ;*Macro unroll: mCODE "sp0",3,0,sp0
08BE                HEADER_SP0:      
08BE   A4 08                  DW   link   
08C0                LINK:     .SET   HEADER_sp0   
08C0   03                     DB   0 + 3   
08C1   73 70 30               DB   "sp0"   
08C4                SP0:         
08C4                          ;*Macro unroll:  ppush0 B,C
08C4   DD 71 00               LD   (IX+0),C   
08C7   DD 23                  INC   IX   
08C9   DD 70 00               LD   (IX+0),B   
08CC   DD 23                  INC   IX   
08CE   01 59 32               LD   BC,var_sp0   
08D1                          ;*Macro unroll:  NEXT
08D1   C3 7B 0E               JP   enter   
08D4                          ;*Macro unroll: mVAR "base",4,0,base, var_base
08D4                          ;*Macro unroll: mCODE "base",4,0,base
08D4                HEADER_BASE:      
08D4   BE 08                  DW   link   
08D6                LINK:     .SET   HEADER_base   
08D6   04                     DB   0 + 4   
08D7   62 61 73 65            DB   "base"   
08DB                BASE:        
08DB                          ;*Macro unroll:  ppush0 B,C
08DB   DD 71 00               LD   (IX+0),C   
08DE   DD 23                  INC   IX   
08E0   DD 70 00               LD   (IX+0),B   
08E3   DD 23                  INC   IX   
08E5   01 5B 32               LD   BC,var_base   
08E8                          ;*Macro unroll:  NEXT
08E8   C3 7B 0E               JP   enter   
08EB                          ;*Macro unroll: mVAR "latestStr",6,0,latestStr, var_latest_str
08EB                          ;*Macro unroll: mCODE "latestStr",6,0,latestStr
08EB                HEADER_LATESTSTR:      
08EB   D4 08                  DW   link   
08ED                LINK:     .SET   HEADER_latestStr   
08ED   06                     DB   0 + 6   
08EE   6C 61 74 65 73 74 53 74 72 DB   "latestStr"   
08F7                LATESTSTR:      
08F7                          ;*Macro unroll:  ppush0 B,C
08F7   DD 71 00               LD   (IX+0),C   
08FA   DD 23                  INC   IX   
08FC   DD 70 00               LD   (IX+0),B   
08FF   DD 23                  INC   IX   
0901   01 5D 32               LD   BC,var_latest_str   
0904                          ;*Macro unroll:  NEXT
0904   C3 7B 0E               JP   enter   
0907                          ;*Macro unroll: mCODE "{",1,msk_immed,lbrace
0907                HEADER_LBRACE:      
0907   EB 08                  DW   link   
0909                LINK:     .SET   HEADER_lbrace   
0909   81                     DB   msk_immed + 1   
090A   7B                     DB   "{"   
090B                LBRACE:      
090B                          ;*Macro unroll:  ENTER
090B   CF                     RST   $08   
090C   94 08 BF 0E D6 01      DW   state,fetch,ZEQUAL   
0912   AE 08 BF 0E D6 01      DW   nesting,fetch,ZEQUAL   
0918   86 00                  DW   ANDD   
091A                          ;*Macro unroll:  cIf
091A   38 07 00 00            DW   QBRAN,0   
091E                          ;*Macro unroll:  CPL_PUSH $
091E                CPL_COUNT:   .SET   CPL_COUNT + 1   
091E                CPL_10:   .SET   CPL_9   
091E                CPL_9:    .SET   CPL_8   
091E                CPL_8:    .SET   CPL_7   
091E                CPL_7:    .SET   CPL_6   
091E                CPL_6:    .SET   CPL_5   
091E                CPL_5:    .SET   CPL_4   
091E                CPL_4:    .SET   CPL_3   
091E                CPL_3:    .SET   CPL_2   
091E                CPL_2:    .SET   CPL_TOP   
091E                CPL_TOP:   .SET   $   
091E   60 08 BF 0E            DW   here,fetch   ; TOS = here
0922   8B 11 CF 00 91 0F      DW   lit,rst08_opcode,ccomma   ; write z80 jp opcode to word
0928                          ;*Macro unroll:  cEndIf
0928                          ;*Macro unroll:  cBRANCH_FWD
0928                CUR_ADR:   .SET   $   
091C                          .ORG   CPL_TOP - 2   
091C   0C 00                  DW   CUR_ADR - CPL_TOP + 2   
0928                          .ORG   CUR_ADR   
0928                          ;*Macro unroll:  CPL_POP
0928                CPL_COUNT:   .SET   CPL_COUNT - 1   
0928                CPL_TOP:   .SET   CPL_2   
0928                CPL_2:    .SET   CPL_3   
0928                CPL_3:    .SET   CPL_4   
0928                CPL_4:    .SET   CPL_5   
0928                CPL_5:    .SET   CPL_6   
0928                CPL_6:    .SET   CPL_7   
0928                CPL_7:    .SET   CPL_8   
0928                CPL_8:    .SET   CPL_9   
0928                CPL_9:    .SET   CPL_10   
0928                CPL_10:   .SET   0   
0928   45 0D                  DW   nestPlus   ; increase nesting
092A                          ;*Macro unroll:  EXIT                             ; return from the function.
092A   8C 0E                  DW   exit   ; return from the function.
092C   C3 7B 0E               JP   enter   
092F                          ;*Macro unroll: mCODE "}",1,msk_immed,rbrace
092F                HEADER_RBRACE:      
092F   07 09                  DW   link   
0931                LINK:     .SET   HEADER_rbrace   
0931   81                     DB   msk_immed + 1   
0932   7D                     DB   "}"   
0933                RBRACE:      
0933                          ;*Macro unroll:  ENTER
0933   CF                     RST   $08   
0934   4F 0D                  DW   nestMinus   ; reduce nesting
0936   94 08 BF 0E D6 01      DW   state,fetch,ZEQUAL   
093C   AE 08 BF 0E D6 01      DW   nesting,fetch,ZEQUAL   
0942   86 00                  DW   ANDD   
0944                          ;*Macro unroll:  cIf
0944   38 07 00 00            DW   QBRAN,0   
0948                          ;*Macro unroll:  CPL_PUSH $
0948                CPL_COUNT:   .SET   CPL_COUNT + 1   
0948                CPL_10:   .SET   CPL_9   
0948                CPL_9:    .SET   CPL_8   
0948                CPL_8:    .SET   CPL_7   
0948                CPL_7:    .SET   CPL_6   
0948                CPL_6:    .SET   CPL_5   
0948                CPL_5:    .SET   CPL_4   
0948                CPL_4:    .SET   CPL_3   
0948                CPL_3:    .SET   CPL_2   
0948                CPL_2:    .SET   CPL_TOP   
0948                CPL_TOP:   .SET   $   
0948   8B 11 8C 0E 75 0F      DW   lit,exit,comma   ; append exit (so the word will return).
094E                          ;*Macro unroll:  cEndIf
094E                          ;*Macro unroll:  cBRANCH_FWD
094E                CUR_ADR:   .SET   $   
0946                          .ORG   CPL_TOP - 2   
0946   08 00                  DW   CUR_ADR - CPL_TOP + 2   
094E                          .ORG   CUR_ADR   
094E                          ;*Macro unroll:  CPL_POP
094E                CPL_COUNT:   .SET   CPL_COUNT - 1   
094E                CPL_TOP:   .SET   CPL_2   
094E                CPL_2:    .SET   CPL_3   
094E                CPL_3:    .SET   CPL_4   
094E                CPL_4:    .SET   CPL_5   
094E                CPL_5:    .SET   CPL_6   
094E                CPL_6:    .SET   CPL_7   
094E                CPL_7:    .SET   CPL_8   
094E                CPL_8:    .SET   CPL_9   
094E                CPL_9:    .SET   CPL_10   
094E                CPL_10:   .SET   0   
094E                          ;*Macro unroll:  EXIT                             ; return from the function.
094E   8C 0E                  DW   exit   ; return from the function.
0950   C3 7B 0E               JP   enter   
0953                          ;*Macro unroll: mCODE "}exec",5,msk_immed,rbraceExec
0953                HEADER_RBRACEEXEC:      
0953   2F 09                  DW   link   
0955                LINK:     .SET   HEADER_rbraceExec   
0955   85                     DB   msk_immed + 5   
0956   7D 65 78 65 63         DB   "}exec"   
095B                RBRACEEXEC:      
095B                          ;*Macro unroll:  ENTER
095B   CF                     RST   $08   
095C   33 09                  DW   rbrace   
095E   94 08 BF 0E D6 01      DW   state,fetch,ZEQUAL   
0964   AE 08 BF 0E D6 01      DW   nesting,fetch,ZEQUAL   
096A   86 00                  DW   ANDD   
096C                          ;*Macro unroll:  cIf
096C   38 07 00 00            DW   QBRAN,0   
0970                          ;*Macro unroll:  CPL_PUSH $
0970                CPL_COUNT:   .SET   CPL_COUNT + 1   
0970                CPL_10:   .SET   CPL_9   
0970                CPL_9:    .SET   CPL_8   
0970                CPL_8:    .SET   CPL_7   
0970                CPL_7:    .SET   CPL_6   
0970                CPL_6:    .SET   CPL_5   
0970                CPL_5:    .SET   CPL_4   
0970                CPL_4:    .SET   CPL_3   
0970                CPL_3:    .SET   CPL_2   
0970                CPL_2:    .SET   CPL_TOP   
0970                CPL_TOP:   .SET   $   
0970   0C 12                  DW   DUPP   
0972   60 08 9E 0E            DW   here,store   
0976   3E 0B                  DW   execute   
0978                          ;*Macro unroll:  cEndIf
0978                          ;*Macro unroll:  cBRANCH_FWD
0978                CUR_ADR:   .SET   $   
096E                          .ORG   CPL_TOP - 2   
096E   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0978                          .ORG   CUR_ADR   
0978                          ;*Macro unroll:  CPL_POP
0978                CPL_COUNT:   .SET   CPL_COUNT - 1   
0978                CPL_TOP:   .SET   CPL_2   
0978                CPL_2:    .SET   CPL_3   
0978                CPL_3:    .SET   CPL_4   
0978                CPL_4:    .SET   CPL_5   
0978                CPL_5:    .SET   CPL_6   
0978                CPL_6:    .SET   CPL_7   
0978                CPL_7:    .SET   CPL_8   
0978                CPL_8:    .SET   CPL_9   
0978                CPL_9:    .SET   CPL_10   
0978                CPL_10:   .SET   0   
0978                          ;*Macro unroll:  EXIT                             ; return from the function.
0978   8C 0E                  DW   exit   ; return from the function.
097A   C3 7B 0E               JP   enter   
097D                          ;*Macro unroll: mCODE ".",1,0,DOT                 ; print top of stack in BASE
097D                HEADER_DOT:      ; print top of stack in BASE
097D   53 09                  DW   link   
097F                LINK:     .SET   HEADER_DOT   
097F   01                     DB   0 + 1   
0980   2E                     DB   "."   
0981                DOT:         
0981   E5                     PUSH   HL   
0982   D5                     PUSH   DE   
0983   C5                     PUSH   BC   
0984                          ;*Macro unroll:  loadWord H,L, B,C
0984   69                     LD   L,C   
0985   60                     LD   H,B   
0986   3A 5B 32               LD   A,(VAR_BASE)   
0989   4F                     LD   C,A   
098A   11 CD 30               LD   DE,wordBuf   
098D   CD BF 09               CALL   formatNum   
0990   CD 6A 11               CALL   printStr   
0993   CD 7D 11               CALL   printSpace   
0996   C1                     POP   BC   
0997   D1                     POP   DE   
0998   E1                     POP   HL   
0999                          ;*Macro unroll:  ppop0 B,C
0999   DD 2B                  DEC   IX   
099B   DD 46 00               LD   B,(IX+0)   
099E   DD 2B                  DEC   IX   
09A0   DD 4E 00               LD   C,(IX+0)   
09A3                          ;*Macro unroll:  NEXT
09A3   C3 7B 0E               JP   enter   
09A6                PRINTNUM:      
09A6   E5                     PUSH   HL   
09A7   D5                     PUSH   DE   
09A8   C5                     PUSH   BC   
09A9                          ;*Macro unroll:  loadWord H,L, B,C
09A9   69                     LD   L,C   
09AA   60                     LD   H,B   
09AB   3A 5B 32               LD   A,(VAR_BASE)   
09AE   4F                     LD   C,A   
09AF   11 CD 30               LD   DE,wordBuf   
09B2   CD BF 09               CALL   formatNum   
09B5   CD 6A 11               CALL   printStr   
09B8   CD 7D 11               CALL   printSpace   
09BB   C1                     POP   BC   
09BC   D1                     POP   DE   
09BD   E1                     POP   HL   
09BE   C9                     RET      
09BF                             ; 
09BF                             ; HL = data, DE = ptr to lineBuf, C = base ***
09BF                             ; DE = ptr to string, BC = length
09BF                             ; 
09BF                FORMATNUM:      
09BF                             ; Detect sign of HL.
09BF   CB 7C                  BIT   7,H   
09C1                          ;*Macro unroll:  _if nz
09C1   C2 C7 09               JP   nz,L_M_1298S42   
09C4   C3 C4 09               JP   $   
09C7                          ;*Macro unroll:  STRUC_PUSH $
09C7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09C7                STRUC_12:   .SET   STRUC_11   
09C7                STRUC_11:   .SET   STRUC_10   
09C7                STRUC_10:   .SET   STRUC_9   
09C7                STRUC_9:   .SET   STRUC_8   
09C7                STRUC_8:   .SET   STRUC_7   
09C7                STRUC_7:   .SET   STRUC_6   
09C7                STRUC_6:   .SET   STRUC_5   
09C7                STRUC_5:   .SET   STRUC_4   
09C7                STRUC_4:   .SET   STRUC_3   
09C7                STRUC_3:   .SET   STRUC_2   
09C7                STRUC_2:   .SET   STRUC_TOP   
09C7                STRUC_TOP:   .SET   $   
09C7                L_M_1298S42:      
09C7                             ; HL is negative. Output "-" to string and negate HL.
09C7   3E 2D                  LD   A,"-"   
09C9   12                     LD   (DE),A   
09CA   13                     INC   DE   
09CB   CD 67 03               CALL   negateNum   
09CE                          ;*Macro unroll:  _endif
09CE                          ;*Macro unroll:  STRUC_FWD
09CE                CUR_ADR:   .SET   $   
09C5                          .ORG   STRUC_TOP - 2   
09C5   CE 09                  DW   CUR_ADR   
09CE                          .ORG   CUR_ADR   
09CE                          ;*Macro unroll:  STRUC_POP
09CE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09CE                STRUC_TOP:   .SET   STRUC_2   
09CE                STRUC_2:   .SET   STRUC_3   
09CE                STRUC_3:   .SET   STRUC_4   
09CE                STRUC_4:   .SET   STRUC_5   
09CE                STRUC_5:   .SET   STRUC_6   
09CE                STRUC_6:   .SET   STRUC_7   
09CE                STRUC_7:   .SET   STRUC_8   
09CE                STRUC_8:   .SET   STRUC_9   
09CE                STRUC_9:   .SET   STRUC_10   
09CE                STRUC_10:   .SET   STRUC_11   
09CE                STRUC_11:   .SET   STRUC_12   
09CE                STRUC_12:   .SET   0   
09CE   06 00                  LD   B,0   ; B will count character length of number
09D0                          ;*Macro unroll:  _do
09D0   18 03                  JR   L_M_1306S51   
09D2   C3 D2 09               JP   $   
09D5                          ;*Macro unroll:  DLOOP_PUSH $
09D5                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09D5                DLOOP_12:   .SET   DLOOP_11   
09D5                DLOOP_11:   .SET   DLOOP_10   
09D5                DLOOP_10:   .SET   DLOOP_9   
09D5                DLOOP_9:   .SET   DLOOP_8   
09D5                DLOOP_8:   .SET   DLOOP_7   
09D5                DLOOP_7:   .SET   DLOOP_6   
09D5                DLOOP_6:   .SET   DLOOP_5   
09D5                DLOOP_5:   .SET   DLOOP_4   
09D5                DLOOP_4:   .SET   DLOOP_3   
09D5                DLOOP_3:   .SET   DLOOP_2   
09D5                DLOOP_2:   .SET   DLOOP_TOP   
09D5                DLOOP_TOP:   .SET   $   
09D5                L_M_1306S51:      
09D5   C5                     PUSH   BC   
09D6   CD 6F 03               CALL   divideWordByByte   ; HL = HL / A, A = remainder
09D9   C1                     POP   BC   
09DA   F5                     PUSH   AF   
09DB   04                     INC   B   
09DC                          ;*Macro unroll:  checkZeroWord H,L
09DC   7D                     LD   A,L   
09DD   B4                     OR   H   
09DE                          ;*Macro unroll:  _until z
09DE   CA D2 09               JP   z,DLOOP_TOP - 3   
09E1                          ;*Macro unroll:  DLOOP_FWD               ; needed?
09E1                CUR_ADR:   .SET   $   ; needed?
09D3                          .ORG   DLOOP_TOP - 2   
09D3   E1 09                  DW   CUR_ADR   
09E1                          .ORG   CUR_ADR   
09E1                          ;*Macro unroll:  _enddo
09E1   C3 D5 09               JP   DLOOP_TOP   
09E4                          ;*Macro unroll:  DLOOP_FWD
09E4                CUR_ADR:   .SET   $   
09D3                          .ORG   DLOOP_TOP - 2   
09D3   E4 09                  DW   CUR_ADR   
09E4                          .ORG   CUR_ADR   
09E4                          ;*Macro unroll:  DLOOP_POP
09E4                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09E4                DLOOP_TOP:   .SET   DLOOP_2   
09E4                DLOOP_2:   .SET   DLOOP_3   
09E4                DLOOP_3:   .SET   DLOOP_4   
09E4                DLOOP_4:   .SET   DLOOP_5   
09E4                DLOOP_5:   .SET   DLOOP_6   
09E4                DLOOP_6:   .SET   DLOOP_7   
09E4                DLOOP_7:   .SET   DLOOP_8   
09E4                DLOOP_8:   .SET   DLOOP_9   
09E4                DLOOP_9:   .SET   DLOOP_10   
09E4                DLOOP_10:   .SET   DLOOP_11   
09E4                DLOOP_11:   .SET   DLOOP_12   
09E4                DLOOP_12:   .SET   0   
09E4                          ;*Macro unroll:  _do
09E4   18 03                  JR   L_M_1315S60   
09E6   C3 E6 09               JP   $   
09E9                          ;*Macro unroll:  DLOOP_PUSH $
09E9                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
09E9                DLOOP_12:   .SET   DLOOP_11   
09E9                DLOOP_11:   .SET   DLOOP_10   
09E9                DLOOP_10:   .SET   DLOOP_9   
09E9                DLOOP_9:   .SET   DLOOP_8   
09E9                DLOOP_8:   .SET   DLOOP_7   
09E9                DLOOP_7:   .SET   DLOOP_6   
09E9                DLOOP_6:   .SET   DLOOP_5   
09E9                DLOOP_5:   .SET   DLOOP_4   
09E9                DLOOP_4:   .SET   DLOOP_3   
09E9                DLOOP_3:   .SET   DLOOP_2   
09E9                DLOOP_2:   .SET   DLOOP_TOP   
09E9                DLOOP_TOP:   .SET   $   
09E9                L_M_1315S60:      
09E9   F1                     POP   AF   
09EA   C6 30                  ADD   A,$30   ; convert digit to ASCII
09EC   FE 3A                  CP   $3A   
09EE                          ;*Macro unroll:  _if nc
09EE   D2 F4 09               JP   nc,L_M_1319S64   
09F1   C3 F1 09               JP   $   
09F4                          ;*Macro unroll:  STRUC_PUSH $
09F4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
09F4                STRUC_12:   .SET   STRUC_11   
09F4                STRUC_11:   .SET   STRUC_10   
09F4                STRUC_10:   .SET   STRUC_9   
09F4                STRUC_9:   .SET   STRUC_8   
09F4                STRUC_8:   .SET   STRUC_7   
09F4                STRUC_7:   .SET   STRUC_6   
09F4                STRUC_6:   .SET   STRUC_5   
09F4                STRUC_5:   .SET   STRUC_4   
09F4                STRUC_4:   .SET   STRUC_3   
09F4                STRUC_3:   .SET   STRUC_2   
09F4                STRUC_2:   .SET   STRUC_TOP   
09F4                STRUC_TOP:   .SET   $   
09F4                L_M_1319S64:      
09F4   C6 07                  ADD   A,7   
09F6                          ;*Macro unroll:  _endif
09F6                          ;*Macro unroll:  STRUC_FWD
09F6                CUR_ADR:   .SET   $   
09F2                          .ORG   STRUC_TOP - 2   
09F2   F6 09                  DW   CUR_ADR   
09F6                          .ORG   CUR_ADR   
09F6                          ;*Macro unroll:  STRUC_POP
09F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
09F6                STRUC_TOP:   .SET   STRUC_2   
09F6                STRUC_2:   .SET   STRUC_3   
09F6                STRUC_3:   .SET   STRUC_4   
09F6                STRUC_4:   .SET   STRUC_5   
09F6                STRUC_5:   .SET   STRUC_6   
09F6                STRUC_6:   .SET   STRUC_7   
09F6                STRUC_7:   .SET   STRUC_8   
09F6                STRUC_8:   .SET   STRUC_9   
09F6                STRUC_9:   .SET   STRUC_10   
09F6                STRUC_10:   .SET   STRUC_11   
09F6                STRUC_11:   .SET   STRUC_12   
09F6                STRUC_12:   .SET   0   
09F6   12                     LD   (DE),A   
09F7   13                     INC   DE   
09F8                          ;*Macro unroll:  _djnz
09F8   10 EF                  DJNZ   DLOOP_TOP   
09FA                          ;*Macro unroll:  DLOOP_FWD
09FA                CUR_ADR:   .SET   $   
09E7                          .ORG   DLOOP_TOP - 2   
09E7   FA 09                  DW   CUR_ADR   
09FA                          .ORG   CUR_ADR   
09FA                          ;*Macro unroll:  DLOOP_POP
09FA                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
09FA                DLOOP_TOP:   .SET   DLOOP_2   
09FA                DLOOP_2:   .SET   DLOOP_3   
09FA                DLOOP_3:   .SET   DLOOP_4   
09FA                DLOOP_4:   .SET   DLOOP_5   
09FA                DLOOP_5:   .SET   DLOOP_6   
09FA                DLOOP_6:   .SET   DLOOP_7   
09FA                DLOOP_7:   .SET   DLOOP_8   
09FA                DLOOP_8:   .SET   DLOOP_9   
09FA                DLOOP_9:   .SET   DLOOP_10   
09FA                DLOOP_10:   .SET   DLOOP_11   
09FA                DLOOP_11:   .SET   DLOOP_12   
09FA                DLOOP_12:   .SET   0   
09FA   21 CD 30               LD   HL,wordBuf   ;calc length
09FD   EB                     EX   DE,HL   
09FE   B7                     OR   A   
09FF   ED 52                  SBC   HL,DE   
0A01                          ;*Macro unroll:  loadWord B,C, H,L
0A01   4D                     LD   C,L   
0A02   44                     LD   B,H   
0A03   C9                     RET      
0A04                             ; 
0A04                             ; toNumber -  converts string to number in the ***
0A04                             ; base strored in VAR_BASE
0A04                             ; 
0A04                             ; params: HL = string address, BC = string length
0A04                             ; returns: DE = parsed number, BC = 0: success, not 0, uparsed chars
0A04                             ; destroys: AF
0A04                             ; 
0A04                TONUMBER:      
0A04   FD E5                  PUSH   IY   ; save regs
0A06   E5                     PUSH   HL   
0A07   E5                     PUSH   HL   ; IY = HL
0A08   FD E1                  POP   IY   
0A0A   11 00 00               LD   DE,0   ; 16 bit accum
0A0D   21 00 00               LD   HL,0   ; 8 bit char
0A10                          ;*Macro unroll:  checkZeroWord B,C        ; if BC == 0 exit de = 0, BC = 0 (no error)
0A10   79                     LD   A,C   ; if BC == 0 exit de = 0, BC = 0 (no error)
0A11   B0                     OR   B   
0A12                          ;*Macro unroll:  _if z              ; trying to parse a zero-length string is an error, But will return 0.
0A12   CA 18 0A               JP   z,L_M_1347S97   ; trying to parse a zero-length string is an error, But will return 0.
0A15   C3 15 0A               JP   $   
0A18                          ;*Macro unroll:  STRUC_PUSH $
0A18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A18                STRUC_12:   .SET   STRUC_11   
0A18                STRUC_11:   .SET   STRUC_10   
0A18                STRUC_10:   .SET   STRUC_9   
0A18                STRUC_9:   .SET   STRUC_8   
0A18                STRUC_8:   .SET   STRUC_7   
0A18                STRUC_7:   .SET   STRUC_6   
0A18                STRUC_6:   .SET   STRUC_5   
0A18                STRUC_5:   .SET   STRUC_4   
0A18                STRUC_4:   .SET   STRUC_3   
0A18                STRUC_3:   .SET   STRUC_2   
0A18                STRUC_2:   .SET   STRUC_TOP   
0A18                STRUC_TOP:   .SET   $   
0A18                L_M_1347S97:      
0A18   E1                     POP   HL   
0A19   FD E1                  POP   IY   
0A1B   C9                     RET      ; de = number, BC = err
0A1C                          ;*Macro unroll:  _endif
0A1C                          ;*Macro unroll:  STRUC_FWD
0A1C                CUR_ADR:   .SET   $   
0A16                          .ORG   STRUC_TOP - 2   
0A16   1C 0A                  DW   CUR_ADR   
0A1C                          .ORG   CUR_ADR   
0A1C                          ;*Macro unroll:  STRUC_POP
0A1C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A1C                STRUC_TOP:   .SET   STRUC_2   
0A1C                STRUC_2:   .SET   STRUC_3   
0A1C                STRUC_3:   .SET   STRUC_4   
0A1C                STRUC_4:   .SET   STRUC_5   
0A1C                STRUC_5:   .SET   STRUC_6   
0A1C                STRUC_6:   .SET   STRUC_7   
0A1C                STRUC_7:   .SET   STRUC_8   
0A1C                STRUC_8:   .SET   STRUC_9   
0A1C                STRUC_9:   .SET   STRUC_10   
0A1C                STRUC_10:   .SET   STRUC_11   
0A1C                STRUC_11:   .SET   STRUC_12   
0A1C                STRUC_12:   .SET   0   
0A1C                             ; Check if first character is "-".
0A1C   FD 7E 00               LD   A,(IY)   ; l = first character in string
0A1F   FD 23                  INC   IY   
0A21   D5                     PUSH   DE   ; push 0 on stack
0A22   FE 2D                  CP   "-"   ; negative number?
0A24                          ;*Macro unroll:  _if z
0A24   CA 2A 0A               JP   z,L_M_1357S107   
0A27   C3 27 0A               JP   $   
0A2A                          ;*Macro unroll:  STRUC_PUSH $
0A2A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A2A                STRUC_12:   .SET   STRUC_11   
0A2A                STRUC_11:   .SET   STRUC_10   
0A2A                STRUC_10:   .SET   STRUC_9   
0A2A                STRUC_9:   .SET   STRUC_8   
0A2A                STRUC_8:   .SET   STRUC_7   
0A2A                STRUC_7:   .SET   STRUC_6   
0A2A                STRUC_6:   .SET   STRUC_5   
0A2A                STRUC_5:   .SET   STRUC_4   
0A2A                STRUC_4:   .SET   STRUC_3   
0A2A                STRUC_3:   .SET   STRUC_2   
0A2A                STRUC_2:   .SET   STRUC_TOP   
0A2A                STRUC_TOP:   .SET   $   
0A2A                L_M_1357S107:      
0A2A   D1                     POP   DE   
0A2B   21 01 00               LD   HL,1   
0A2E   E5                     PUSH   HL   ; push <> 0 on stack, indicating negative
0A2F   0B                     DEC   BC   
0A30                          ;*Macro unroll:  checkZeroWord B,C
0A30   79                     LD   A,C   
0A31   B0                     OR   B   
0A32                          ;*Macro unroll:  _if z
0A32   CA 38 0A               JP   z,L_M_1363S113   
0A35   C3 35 0A               JP   $   
0A38                          ;*Macro unroll:  STRUC_PUSH $
0A38                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A38                STRUC_12:   .SET   STRUC_11   
0A38                STRUC_11:   .SET   STRUC_10   
0A38                STRUC_10:   .SET   STRUC_9   
0A38                STRUC_9:   .SET   STRUC_8   
0A38                STRUC_8:   .SET   STRUC_7   
0A38                STRUC_7:   .SET   STRUC_6   
0A38                STRUC_6:   .SET   STRUC_5   
0A38                STRUC_5:   .SET   STRUC_4   
0A38                STRUC_4:   .SET   STRUC_3   
0A38                STRUC_3:   .SET   STRUC_2   
0A38                STRUC_2:   .SET   STRUC_TOP   
0A38                STRUC_TOP:   .SET   $   
0A38                L_M_1363S113:      
0A38   E1                     POP   HL   ; error: string is only "-".
0A39   01 01 00               LD   BC,1   
0A3C   E1                     POP   HL   
0A3D   FD E1                  POP   IY   
0A3F   C9                     RET      ; de = number, BC = err
0A40                          ;*Macro unroll:  _endif
0A40                          ;*Macro unroll:  STRUC_FWD
0A40                CUR_ADR:   .SET   $   
0A36                          .ORG   STRUC_TOP - 2   
0A36   40 0A                  DW   CUR_ADR   
0A40                          .ORG   CUR_ADR   
0A40                          ;*Macro unroll:  STRUC_POP
0A40                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A40                STRUC_TOP:   .SET   STRUC_2   
0A40                STRUC_2:   .SET   STRUC_3   
0A40                STRUC_3:   .SET   STRUC_4   
0A40                STRUC_4:   .SET   STRUC_5   
0A40                STRUC_5:   .SET   STRUC_6   
0A40                STRUC_6:   .SET   STRUC_7   
0A40                STRUC_7:   .SET   STRUC_8   
0A40                STRUC_8:   .SET   STRUC_9   
0A40                STRUC_9:   .SET   STRUC_10   
0A40                STRUC_10:   .SET   STRUC_11   
0A40                STRUC_11:   .SET   STRUC_12   
0A40                STRUC_12:   .SET   0   
0A40                             ; Loop reading digits.
0A40   C5                     PUSH   BC   
0A41   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0A45   CD CA 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0A48   C1                     POP   BC   
0A49   FD 7E 00               LD   A,(IY)   ; a = next character in string
0A4C   FD 23                  INC   IY   
0A4E                          ;*Macro unroll:  _endif
0A4E                          ;*Macro unroll:  STRUC_FWD
0A4E                CUR_ADR:   .SET   $   
0A28                          .ORG   STRUC_TOP - 2   
0A28   4E 0A                  DW   CUR_ADR   
0A4E                          .ORG   CUR_ADR   
0A4E                          ;*Macro unroll:  STRUC_POP
0A4E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A4E                STRUC_TOP:   .SET   STRUC_2   
0A4E                STRUC_2:   .SET   STRUC_3   
0A4E                STRUC_3:   .SET   STRUC_4   
0A4E                STRUC_4:   .SET   STRUC_5   
0A4E                STRUC_5:   .SET   STRUC_6   
0A4E                STRUC_6:   .SET   STRUC_7   
0A4E                STRUC_7:   .SET   STRUC_8   
0A4E                STRUC_8:   .SET   STRUC_9   
0A4E                STRUC_9:   .SET   STRUC_10   
0A4E                STRUC_10:   .SET   STRUC_11   
0A4E                STRUC_11:   .SET   STRUC_12   
0A4E                STRUC_12:   .SET   0   
0A4E                             ; Convert 0-9, A-z to a number 0-35.
0A4E                          ;*Macro unroll:  _do
0A4E   18 03                  JR   L_M_1379S130   
0A50   C3 50 0A               JP   $   
0A53                          ;*Macro unroll:  DLOOP_PUSH $
0A53                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0A53                DLOOP_12:   .SET   DLOOP_11   
0A53                DLOOP_11:   .SET   DLOOP_10   
0A53                DLOOP_10:   .SET   DLOOP_9   
0A53                DLOOP_9:   .SET   DLOOP_8   
0A53                DLOOP_8:   .SET   DLOOP_7   
0A53                DLOOP_7:   .SET   DLOOP_6   
0A53                DLOOP_6:   .SET   DLOOP_5   
0A53                DLOOP_5:   .SET   DLOOP_4   
0A53                DLOOP_4:   .SET   DLOOP_3   
0A53                DLOOP_3:   .SET   DLOOP_2   
0A53                DLOOP_2:   .SET   DLOOP_TOP   
0A53                DLOOP_TOP:   .SET   $   
0A53                L_M_1379S130:      
0A53   D6 30                  SUB   "0"   ; < "0"?
0A55   38 33                  JR   c,toNumberExit   ; invalid char, end of number
0A57   FE 0A                  CP   10   ; <= "9"?
0A59                          ;*Macro unroll:  _if nc
0A59   D2 5F 0A               JP   nc,L_M_1383S134   
0A5C   C3 5C 0A               JP   $   
0A5F                          ;*Macro unroll:  STRUC_PUSH $
0A5F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A5F                STRUC_12:   .SET   STRUC_11   
0A5F                STRUC_11:   .SET   STRUC_10   
0A5F                STRUC_10:   .SET   STRUC_9   
0A5F                STRUC_9:   .SET   STRUC_8   
0A5F                STRUC_8:   .SET   STRUC_7   
0A5F                STRUC_7:   .SET   STRUC_6   
0A5F                STRUC_6:   .SET   STRUC_5   
0A5F                STRUC_5:   .SET   STRUC_4   
0A5F                STRUC_4:   .SET   STRUC_3   
0A5F                STRUC_3:   .SET   STRUC_2   
0A5F                STRUC_2:   .SET   STRUC_TOP   
0A5F                STRUC_TOP:   .SET   $   
0A5F                L_M_1383S134:      
0A5F   D6 11                  SUB   17   ; < "A"? (17 is "A"-"0")
0A61                          ;*Macro unroll:  _until c            ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0A61   DA 50 0A               JP   c,DLOOP_TOP - 3   ; BUG: nested until !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
0A64                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A64                CUR_ADR:   .SET   $   ; needed?
0A51                          .ORG   DLOOP_TOP - 2   
0A51   64 0A                  DW   CUR_ADR   
0A64                          .ORG   CUR_ADR   
0A64   C6 0A                  ADD   a,10   
0A66                          ;*Macro unroll:  _endif
0A66                          ;*Macro unroll:  STRUC_FWD
0A66                CUR_ADR:   .SET   $   
0A5D                          .ORG   STRUC_TOP - 2   
0A5D   66 0A                  DW   CUR_ADR   
0A66                          .ORG   CUR_ADR   
0A66                          ;*Macro unroll:  STRUC_POP
0A66                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A66                STRUC_TOP:   .SET   STRUC_2   
0A66                STRUC_2:   .SET   STRUC_3   
0A66                STRUC_3:   .SET   STRUC_4   
0A66                STRUC_4:   .SET   STRUC_5   
0A66                STRUC_5:   .SET   STRUC_6   
0A66                STRUC_6:   .SET   STRUC_7   
0A66                STRUC_7:   .SET   STRUC_8   
0A66                STRUC_8:   .SET   STRUC_9   
0A66                STRUC_9:   .SET   STRUC_10   
0A66                STRUC_10:   .SET   STRUC_11   
0A66                STRUC_11:   .SET   STRUC_12   
0A66                STRUC_12:   .SET   0   
0A66   2A 5B 32               LD   HL,(VAR_BASE)   ; get BASE (in %dl)
0A69   BD                     CP   L   ; >= BASE? then invalid char, end of number
0A6A                          ;*Macro unroll:  _until nc
0A6A   D2 50 0A               JP   nc,DLOOP_TOP - 3   
0A6D                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A6D                CUR_ADR:   .SET   $   ; needed?
0A51                          .ORG   DLOOP_TOP - 2   
0A51   6D 0A                  DW   CUR_ADR   
0A6D                          .ORG   CUR_ADR   
0A6D   83                     ADD   A,E   
0A6E   5F                     LD   E,A   
0A6F   3E 00                  LD   A,0   
0A71   8A                     ADC   a,d   
0A72   57                     LD   D,A   
0A73   0B                     DEC   BC   ; dec char count
0A74                          ;*Macro unroll:  checkZeroWord B,C
0A74   79                     LD   A,C   
0A75   B0                     OR   B   
0A76                          ;*Macro unroll:  _until z
0A76   CA 50 0A               JP   z,DLOOP_TOP - 3   
0A79                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0A79                CUR_ADR:   .SET   $   ; needed?
0A51                          .ORG   DLOOP_TOP - 2   
0A51   79 0A                  DW   CUR_ADR   
0A79                          .ORG   CUR_ADR   
0A79   C5                     PUSH   BC   
0A7A   ED 4B 5B 32            LD   BC,(VAR_BASE)   ; get BASE (in %dl)
0A7E   CD CA 03               CALL   unsignedMultiply   ; de *= BASE, HL is destroyed
0A81   C1                     POP   BC   
0A82   FD 7E 00               LD   A,(IY)   ; a = next character in string
0A85   FD 23                  INC   IY   
0A87                          ;*Macro unroll:  _enddo
0A87   C3 53 0A               JP   DLOOP_TOP   
0A8A                          ;*Macro unroll:  DLOOP_FWD
0A8A                CUR_ADR:   .SET   $   
0A51                          .ORG   DLOOP_TOP - 2   
0A51   8A 0A                  DW   CUR_ADR   
0A8A                          .ORG   CUR_ADR   
0A8A                          ;*Macro unroll:  DLOOP_POP
0A8A                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0A8A                DLOOP_TOP:   .SET   DLOOP_2   
0A8A                DLOOP_2:   .SET   DLOOP_3   
0A8A                DLOOP_3:   .SET   DLOOP_4   
0A8A                DLOOP_4:   .SET   DLOOP_5   
0A8A                DLOOP_5:   .SET   DLOOP_6   
0A8A                DLOOP_6:   .SET   DLOOP_7   
0A8A                DLOOP_7:   .SET   DLOOP_8   
0A8A                DLOOP_8:   .SET   DLOOP_9   
0A8A                DLOOP_9:   .SET   DLOOP_10   
0A8A                DLOOP_10:   .SET   DLOOP_11   
0A8A                DLOOP_11:   .SET   DLOOP_12   
0A8A                DLOOP_12:   .SET   0   
0A8A                TONUMBEREXIT:      
0A8A   E1                     POP   HL   
0A8B                          ;*Macro unroll:  checkZeroWord H,L
0A8B   7D                     LD   A,L   
0A8C   B4                     OR   H   
0A8D                          ;*Macro unroll:  _if nz              ; if not -ve then skip
0A8D   C2 93 0A               JP   nz,L_M_1409S163   ; if not -ve then skip
0A90   C3 90 0A               JP   $   
0A93                          ;*Macro unroll:  STRUC_PUSH $
0A93                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0A93                STRUC_12:   .SET   STRUC_11   
0A93                STRUC_11:   .SET   STRUC_10   
0A93                STRUC_10:   .SET   STRUC_9   
0A93                STRUC_9:   .SET   STRUC_8   
0A93                STRUC_8:   .SET   STRUC_7   
0A93                STRUC_7:   .SET   STRUC_6   
0A93                STRUC_6:   .SET   STRUC_5   
0A93                STRUC_5:   .SET   STRUC_4   
0A93                STRUC_4:   .SET   STRUC_3   
0A93                STRUC_3:   .SET   STRUC_2   
0A93                STRUC_2:   .SET   STRUC_TOP   
0A93                STRUC_TOP:   .SET   $   
0A93                L_M_1409S163:      
0A93   EB                     EX   DE,HL   ; negate de
0A94   CD 67 03               CALL   negateNum   
0A97   EB                     EX   DE,HL   
0A98                          ;*Macro unroll:  _endif
0A98                          ;*Macro unroll:  STRUC_FWD
0A98                CUR_ADR:   .SET   $   
0A91                          .ORG   STRUC_TOP - 2   
0A91   98 0A                  DW   CUR_ADR   
0A98                          .ORG   CUR_ADR   
0A98                          ;*Macro unroll:  STRUC_POP
0A98                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0A98                STRUC_TOP:   .SET   STRUC_2   
0A98                STRUC_2:   .SET   STRUC_3   
0A98                STRUC_3:   .SET   STRUC_4   
0A98                STRUC_4:   .SET   STRUC_5   
0A98                STRUC_5:   .SET   STRUC_6   
0A98                STRUC_6:   .SET   STRUC_7   
0A98                STRUC_7:   .SET   STRUC_8   
0A98                STRUC_8:   .SET   STRUC_9   
0A98                STRUC_9:   .SET   STRUC_10   
0A98                STRUC_10:   .SET   STRUC_11   
0A98                STRUC_11:   .SET   STRUC_12   
0A98                STRUC_12:   .SET   0   
0A98   E1                     POP   HL   
0A99   FD E1                  POP   IY   
0A9B   C9                     RET      ; de = number, BC = err
0A9C                          ;*Macro unroll: mCODE "number",6,0,NUMBER         ; ( ptr len -- num err )
0A9C                HEADER_NUMBER:      ; ( ptr len -- num err )
0A9C   7D 09                  DW   link   
0A9E                LINK:     .SET   HEADER_NUMBER   
0A9E   06                     DB   0 + 6   
0A9F   6E 75 6D 62 65 72      DB   "number"   
0AA5                NUMBER:      
0AA5                          ;*Macro unroll:  ppop0 H,L
0AA5   DD 2B                  DEC   IX   
0AA7   DD 66 00               LD   H,(IX+0)   
0AAA   DD 2B                  DEC   IX   
0AAC   DD 6E 00               LD   L,(IX+0)   
0AAF   CD 04 0A               CALL   toNumber   ; params: HL = string address, BC = string length
0AB2                             ; Returns the parsed number in DE,
0AB2                             ; BC = 0, success
0AB2                          ;*Macro unroll:  ppush0 D,E
0AB2   DD 73 00               LD   (IX+0),E   
0AB5   DD 23                  INC   IX   
0AB7   DD 72 00               LD   (IX+0),D   
0ABA   DD 23                  INC   IX   
0ABC                          ;*Macro unroll:  NEXT
0ABC   C3 7B 0E               JP   enter   
0ABF                          ;*Macro unroll: mCODE "decimal",7,0,decimal           ; pushes ptr to string and length on stack
0ABF                HEADER_DECIMAL:      ; pushes ptr to string and length on stack
0ABF   9C 0A                  DW   link   
0AC1                LINK:     .SET   HEADER_decimal   
0AC1   07                     DB   0 + 7   
0AC2   64 65 63 69 6D 61 6C   DB   "decimal"   
0AC9                DECIMAL:      
0AC9                          ;*Macro unroll:  ENTER
0AC9   CF                     RST   $08   
0ACA   8B 11 0A 00 DB 08 9E 0E DW   lit,10,base,store   
0AD2                          ;*Macro unroll:  EXIT
0AD2   8C 0E                  DW   exit   
0AD4   C3 7B 0E               JP   enter   
0AD7                          ;*Macro unroll: mCODE "hex",3,0,hex                   ; pushes ptr to string and length on stack
0AD7                HEADER_HEX:      ; pushes ptr to string and length on stack
0AD7   BF 0A                  DW   link   
0AD9                LINK:     .SET   HEADER_hex   
0AD9   03                     DB   0 + 3   
0ADA   68 65 78               DB   "hex"   
0ADD                HEX:         
0ADD                          ;*Macro unroll:  ENTER
0ADD   CF                     RST   $08   
0ADE   8B 11 10 00 DB 08 9E 0E DW   lit,16,base,store   
0AE6                          ;*Macro unroll:  EXIT
0AE6   8C 0E                  DW   exit   
0AE8   C3 7B 0E               JP   enter   
0AEB                          ;*Macro unroll: mCODE "quit",4,0,quit
0AEB                HEADER_QUIT:      
0AEB   D7 0A                  DW   link   
0AED                LINK:     .SET   HEADER_quit   
0AED   04                     DB   0 + 4   
0AEE   71 75 69 74            DB   "quit"   
0AF2                QUIT:        
0AF2                          ;*Macro unroll:  ENTER
0AF2   CF                     RST   $08   
0AF3   C4 08 BF 0E 28 0F      DW   sp0,fetch,spStore   
0AF9   57 0B                  DW   interpret   
0AFB                          ;*Macro unroll:  EXIT
0AFB   8C 0E                  DW   exit   
0AFD   C3 7B 0E               JP   enter   
0B00                          ;*Macro unroll: mCODE "word",5,0,WORD                 ; delim -- c-addr
0B00                HEADER_WORD:      ; delim -- c-addr
0B00   EB 0A                  DW   link   
0B02                LINK:     .SET   HEADER_WORD   
0B02   05                     DB   0 + 5   
0B03   77 6F 72 64            DB   "word"   
0B07                WORD:        
0B07                          ;*Macro unroll:  ENTER
0B07   CF                     RST   $08   
0B08   8B 11 40 00            DW   lit,64   ; limit
0B0C   60 08 BF 0E            DW   here,fetch   
0B10   BF 0B                  DW   xword   ; writes to HERE!
0B12                          ;*Macro unroll:  EXIT
0B12   8C 0E                  DW   exit   
0B14   C3 7B 0E               JP   enter   
0B17                          ;*Macro unroll: mCODE ">cfa",4,0,tcfa
0B17                HEADER_TCFA:      
0B17   00 0B                  DW   link   
0B19                LINK:     .SET   HEADER_tcfa   
0B19   04                     DB   0 + 4   
0B1A   3E 63 66 61            DB   ">cfa"   
0B1E                TCFA:        
0B1E                          ;*Macro unroll:  ENTER
0B1E   CF                     RST   $08   
0B1F   8B 11 02 00 CE 00      DW   lit,2,plus   
0B25   BB 12                  DW   count   
0B27   8B 11 3F 00 86 00      DW   lit,msk_length,ANDD   
0B2D   CE 00                  DW   plus   
0B2F                          ;*Macro unroll:  EXIT
0B2F   8C 0E                  DW   exit   
0B31   C3 7B 0E               JP   enter   
0B34                          ;*Macro unroll: mCODE "execute",7,0,EXECUTE
0B34                HEADER_EXECUTE:      
0B34   17 0B                  DW   link   
0B36                LINK:     .SET   HEADER_EXECUTE   
0B36   07                     DB   0 + 7   
0B37   65 78 65 63 75 74 65   DB   "execute"   
0B3E                EXECUTE:      
0B3E                          ;*Macro unroll:  ppop H,L                        ; POP TOS into HL
0B3E   60                     LD   H,B   ; POP TOS into HL
0B3F   69                     LD   L,C   
0B40                          ;*Macro unroll:  ppop0 B,C
0B40   DD 2B                  DEC   IX   
0B42   DD 46 00               LD   B,(IX+0)   
0B45   DD 2B                  DEC   IX   
0B47   DD 4E 00               LD   C,(IX+0)   
0B4A   E9                     JP   (hl)   ; go do Forth word
0B4B                          ;*Macro unroll: mCODE "interpret",6,0,interpret
0B4B                HEADER_INTERPRET:      
0B4B   34 0B                  DW   link   
0B4D                LINK:     .SET   HEADER_interpret   
0B4D   06                     DB   0 + 6   
0B4E   69 6E 74 65 72 70 72 65 74 DB   "interpret"   
0B57                INTERPRET:      
0B57   CF                     RST   $08   
0B58                          ;*Macro unroll:  cDo
0B58   55 07 06 00            DW   BRAN,6   
0B5C   55 07 00 00            DW   BRAN,0   
0B60                          ;*Macro unroll:  CPL_PUSH $
0B60                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B60                CPL_10:   .SET   CPL_9   
0B60                CPL_9:    .SET   CPL_8   
0B60                CPL_8:    .SET   CPL_7   
0B60                CPL_7:    .SET   CPL_6   
0B60                CPL_6:    .SET   CPL_5   
0B60                CPL_5:    .SET   CPL_4   
0B60                CPL_4:    .SET   CPL_3   
0B60                CPL_3:    .SET   CPL_2   
0B60                CPL_2:    .SET   CPL_TOP   
0B60                CPL_TOP:   .SET   $   
0B60   F9 0D 07 0B BB 12      DW   bl,word,count   ; pstr -- ptr len
0B66   0C 12 D6 01            DW   DUPP,zEqual   
0B6A                          ;*Macro unroll:  cIf
0B6A   38 07 00 00            DW   QBRAN,0   
0B6E                          ;*Macro unroll:  CPL_PUSH $
0B6E                CPL_COUNT:   .SET   CPL_COUNT + 1   
0B6E                CPL_10:   .SET   CPL_9   
0B6E                CPL_9:    .SET   CPL_8   
0B6E                CPL_8:    .SET   CPL_7   
0B6E                CPL_7:    .SET   CPL_6   
0B6E                CPL_6:    .SET   CPL_5   
0B6E                CPL_5:    .SET   CPL_4   
0B6E                CPL_4:    .SET   CPL_3   
0B6E                CPL_3:    .SET   CPL_2   
0B6E                CPL_2:    .SET   CPL_TOP   
0B6E                CPL_TOP:   .SET   $   
0B6E   40 12 40 12            DW   drop,drop   ; ptr len --
0B72                          ;*Macro unroll:  EXIT
0B72   8C 0E                  DW   exit   
0B74   C3 7B 0E               JP   enter   
0B77                          ;*Macro unroll:  cEndif
0B77                          ;*Macro unroll:  cBRANCH_FWD
0B77                CUR_ADR:   .SET   $   
0B6C                          .ORG   CPL_TOP - 2   
0B6C   0B 00                  DW   CUR_ADR - CPL_TOP + 2   
0B77                          .ORG   CUR_ADR   
0B77                          ;*Macro unroll:  CPL_POP
0B77                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B77                CPL_TOP:   .SET   CPL_2   
0B77                CPL_2:    .SET   CPL_3   
0B77                CPL_3:    .SET   CPL_4   
0B77                CPL_4:    .SET   CPL_5   
0B77                CPL_5:    .SET   CPL_6   
0B77                CPL_6:    .SET   CPL_7   
0B77                CPL_7:    .SET   CPL_8   
0B77                CPL_8:    .SET   CPL_9   
0B77                CPL_9:    .SET   CPL_10   
0B77                CPL_10:   .SET   0   
0B77   A6 0C                  DW   interpToken   ; interpret the next word
0B79                          ;*Macro unroll:  cEndDo
0B79   55 07 E5 FF            DW   BRAN,CPL_TOP - $ - 2   
0B7D                          ;*Macro unroll:  cBRANCH_FWD
0B7D                CUR_ADR:   .SET   $   
0B5E                          .ORG   CPL_TOP - 2   
0B5E   1F 00                  DW   CUR_ADR - CPL_TOP + 2   
0B7D                          .ORG   CUR_ADR   
0B7D                          ;*Macro unroll:  CPL_POP
0B7D                CPL_COUNT:   .SET   CPL_COUNT - 1   
0B7D                CPL_TOP:   .SET   CPL_2   
0B7D                CPL_2:    .SET   CPL_3   
0B7D                CPL_3:    .SET   CPL_4   
0B7D                CPL_4:    .SET   CPL_5   
0B7D                CPL_5:    .SET   CPL_6   
0B7D                CPL_6:    .SET   CPL_7   
0B7D                CPL_7:    .SET   CPL_8   
0B7D                CPL_8:    .SET   CPL_9   
0B7D                CPL_9:    .SET   CPL_10   
0B7D                CPL_10:   .SET   0   
0B7D                          ;*Macro unroll:  EXIT
0B7D   8C 0E                  DW   exit   
0B7F   C3 7B 0E               JP   enter   
0B82                             ; 
0B82                             ; lookup - lookup header in dictionary ***
0B82                             ; 
0B82                             ; params: HL = string address, BC = string length
0B82                             ; returns: DE = found header ptr or 0
0B82                             ; destroys: AF
0B82                             ; 
0B82                LOOKUP:      
0B82   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
0B86                          ;*Macro unroll:  _do
0B86   18 03                  JR   L_M_1474S49   
0B88   C3 88 0B               JP   $   
0B8B                          ;*Macro unroll:  DLOOP_PUSH $
0B8B                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0B8B                DLOOP_12:   .SET   DLOOP_11   
0B8B                DLOOP_11:   .SET   DLOOP_10   
0B8B                DLOOP_10:   .SET   DLOOP_9   
0B8B                DLOOP_9:   .SET   DLOOP_8   
0B8B                DLOOP_8:   .SET   DLOOP_7   
0B8B                DLOOP_7:   .SET   DLOOP_6   
0B8B                DLOOP_6:   .SET   DLOOP_5   
0B8B                DLOOP_5:   .SET   DLOOP_4   
0B8B                DLOOP_4:   .SET   DLOOP_3   
0B8B                DLOOP_3:   .SET   DLOOP_2   
0B8B                DLOOP_2:   .SET   DLOOP_TOP   
0B8B                DLOOP_TOP:   .SET   $   
0B8B                L_M_1474S49:      
0B8B                          ;*Macro unroll:  checkZeroWord D,E            ; NULL pointer?  (end of the linked list)
0B8B   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
0B8C   B2                     OR   D   
0B8D   C8                     RET   z   
0B8E                             ; Compare the length expected and the length of the word.
0B8E                             ; Note that if the MSK_HIDDEN flag is set on the word, then by a bit of trickery
0B8E                             ; this won't pick the word (the length will appear to be wrong).
0B8E   D5                     PUSH   DE   ; save ptr to header
0B8F   13                     INC   DE   ; skip over first field
0B90   13                     INC   DE   
0B91   1A                     LD   A,(DE)   ; a = flags+length field
0B92   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
0B94   B9                     CP   C   ; Length is the same?
0B95                          ;*Macro unroll:  _if z
0B95   CA 9B 0B               JP   z,L_M_1486S65   
0B98   C3 98 0B               JP   $   
0B9B                          ;*Macro unroll:  STRUC_PUSH $
0B9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0B9B                STRUC_12:   .SET   STRUC_11   
0B9B                STRUC_11:   .SET   STRUC_10   
0B9B                STRUC_10:   .SET   STRUC_9   
0B9B                STRUC_9:   .SET   STRUC_8   
0B9B                STRUC_8:   .SET   STRUC_7   
0B9B                STRUC_7:   .SET   STRUC_6   
0B9B                STRUC_6:   .SET   STRUC_5   
0B9B                STRUC_5:   .SET   STRUC_4   
0B9B                STRUC_4:   .SET   STRUC_3   
0B9B                STRUC_3:   .SET   STRUC_2   
0B9B                STRUC_2:   .SET   STRUC_TOP   
0B9B                STRUC_TOP:   .SET   $   
0B9B                L_M_1486S65:      
0B9B                             ; Compare the strings in detail.
0B9B   13                     INC   DE   ; DE = Dictionary string we are checking against.
0B9C   E5                     PUSH   HL   ; save HL, BC
0B9D   C5                     PUSH   BC   
0B9E   CD 2C 13               CALL   compareStr   ; Compare the strings. BC = len
0BA1   C1                     POP   BC   
0BA2   E1                     POP   HL   
0BA3   B7                     OR   A   ; if A == 0 then matched
0BA4                          ;*Macro unroll:  _if z
0BA4   CA AA 0B               JP   z,L_M_1495S76   
0BA7   C3 A7 0B               JP   $   
0BAA                          ;*Macro unroll:  STRUC_PUSH $
0BAA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0BAA                STRUC_12:   .SET   STRUC_11   
0BAA                STRUC_11:   .SET   STRUC_10   
0BAA                STRUC_10:   .SET   STRUC_9   
0BAA                STRUC_9:   .SET   STRUC_8   
0BAA                STRUC_8:   .SET   STRUC_7   
0BAA                STRUC_7:   .SET   STRUC_6   
0BAA                STRUC_6:   .SET   STRUC_5   
0BAA                STRUC_5:   .SET   STRUC_4   
0BAA                STRUC_4:   .SET   STRUC_3   
0BAA                STRUC_3:   .SET   STRUC_2   
0BAA                STRUC_2:   .SET   STRUC_TOP   
0BAA                STRUC_TOP:   .SET   $   
0BAA                L_M_1495S76:      
0BAA   D1                     POP   DE   ; matched, restore DE and return
0BAB   C9                     RET      
0BAC                          ;*Macro unroll:  _endif
0BAC                          ;*Macro unroll:  STRUC_FWD
0BAC                CUR_ADR:   .SET   $   
0BA8                          .ORG   STRUC_TOP - 2   
0BA8   AC 0B                  DW   CUR_ADR   
0BAC                          .ORG   CUR_ADR   
0BAC                          ;*Macro unroll:  STRUC_POP
0BAC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0BAC                STRUC_TOP:   .SET   STRUC_2   
0BAC                STRUC_2:   .SET   STRUC_3   
0BAC                STRUC_3:   .SET   STRUC_4   
0BAC                STRUC_4:   .SET   STRUC_5   
0BAC                STRUC_5:   .SET   STRUC_6   
0BAC                STRUC_6:   .SET   STRUC_7   
0BAC                STRUC_7:   .SET   STRUC_8   
0BAC                STRUC_8:   .SET   STRUC_9   
0BAC                STRUC_9:   .SET   STRUC_10   
0BAC                STRUC_10:   .SET   STRUC_11   
0BAC                STRUC_11:   .SET   STRUC_12   
0BAC                STRUC_12:   .SET   0   
0BAC                          ;*Macro unroll:  _endif
0BAC                          ;*Macro unroll:  STRUC_FWD
0BAC                CUR_ADR:   .SET   $   
0B99                          .ORG   STRUC_TOP - 2   
0B99   AC 0B                  DW   CUR_ADR   
0BAC                          .ORG   CUR_ADR   
0BAC                          ;*Macro unroll:  STRUC_POP
0BAC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0BAC                STRUC_TOP:   .SET   STRUC_2   
0BAC                STRUC_2:   .SET   STRUC_3   
0BAC                STRUC_3:   .SET   STRUC_4   
0BAC                STRUC_4:   .SET   STRUC_5   
0BAC                STRUC_5:   .SET   STRUC_6   
0BAC                STRUC_6:   .SET   STRUC_7   
0BAC                STRUC_7:   .SET   STRUC_8   
0BAC                STRUC_8:   .SET   STRUC_9   
0BAC                STRUC_9:   .SET   STRUC_10   
0BAC                STRUC_10:   .SET   STRUC_11   
0BAC                STRUC_11:   .SET   STRUC_12   
0BAC                STRUC_12:   .SET   0   
0BAC   D1                     POP   DE   ; restore DE
0BAD   1A                     LD   A,(DE)   
0BAE   08                     EX   AF,AF'   
0BAF   13                     INC   DE   
0BB0   1A                     LD   A,(DE)   
0BB1   57                     LD   D,A   
0BB2   08                     EX   AF,AF'   
0BB3   5F                     LD   E,A   
0BB4                          ;*Macro unroll:  _enddo
0BB4   C3 8B 0B               JP   DLOOP_TOP   
0BB7                          ;*Macro unroll:  DLOOP_FWD
0BB7                CUR_ADR:   .SET   $   
0B89                          .ORG   DLOOP_TOP - 2   
0B89   B7 0B                  DW   CUR_ADR   
0BB7                          .ORG   CUR_ADR   
0BB7                          ;*Macro unroll:  DLOOP_POP
0BB7                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0BB7                DLOOP_TOP:   .SET   DLOOP_2   
0BB7                DLOOP_2:   .SET   DLOOP_3   
0BB7                DLOOP_3:   .SET   DLOOP_4   
0BB7                DLOOP_4:   .SET   DLOOP_5   
0BB7                DLOOP_5:   .SET   DLOOP_6   
0BB7                DLOOP_6:   .SET   DLOOP_7   
0BB7                DLOOP_7:   .SET   DLOOP_8   
0BB7                DLOOP_8:   .SET   DLOOP_9   
0BB7                DLOOP_9:   .SET   DLOOP_10   
0BB7                DLOOP_10:   .SET   DLOOP_11   
0BB7                DLOOP_11:   .SET   DLOOP_12   
0BB7                DLOOP_12:   .SET   0   
0BB7                          ;*Macro unroll: mCODE "xword",6,0,xword               ; delim limit addr -- c-addr
0BB7                HEADER_XWORD:      ; delim limit addr -- c-addr
0BB7   4B 0B                  DW   link   
0BB9                LINK:     .SET   HEADER_xword   
0BB9   06                     DB   0 + 6   
0BBA   78 77 6F 72 64         DB   "xword"   
0BBF                XWORD:       
0BBF   CD C8 0B               CALL   xwordSkip   
0BC2   CD 5C 0C               CALL   xwordRead   
0BC5                          ;*Macro unroll:  NEXT
0BC5   C3 7B 0E               JP   enter   
0BC8                XWORDSKIP:      ; delim addr -- delim addr char
0BC8                          ;*Macro unroll:  ppop H,L
0BC8   60                     LD   H,B   
0BC9   69                     LD   L,C   
0BCA                          ;*Macro unroll:  ppop0 B,C
0BCA   DD 2B                  DEC   IX   
0BCC   DD 46 00               LD   B,(IX+0)   
0BCF   DD 2B                  DEC   IX   
0BD1   DD 4E 00               LD   C,(IX+0)   
0BD4                          ;*Macro unroll:  ppop D,E
0BD4   50                     LD   D,B   
0BD5   59                     LD   E,C   
0BD6                          ;*Macro unroll:  ppop0 B,C
0BD6   DD 2B                  DEC   IX   
0BD8   DD 46 00               LD   B,(IX+0)   
0BDB   DD 2B                  DEC   IX   
0BDD   DD 4E 00               LD   C,(IX+0)   
0BE0                          ;*Macro unroll:  ppush0 B,C
0BE0   DD 71 00               LD   (IX+0),C   
0BE3   DD 23                  INC   IX   
0BE5   DD 70 00               LD   (IX+0),B   
0BE8   DD 23                  INC   IX   
0BEA                          ;*Macro unroll:  ppush0 D,E
0BEA   DD 73 00               LD   (IX+0),E   
0BED   DD 23                  INC   IX   
0BEF   DD 72 00               LD   (IX+0),D   
0BF2   DD 23                  INC   IX   
0BF4                          ;*Macro unroll:  ppush0 H,L
0BF4   DD 75 00               LD   (IX+0),L   
0BF7   DD 23                  INC   IX   
0BF9   DD 74 00               LD   (IX+0),H   
0BFC   DD 23                  INC   IX   
0BFE                          ;*Macro unroll:  _do
0BFE   18 03                  JR   L_M_1519S103   
0C00   C3 00 0C               JP   $   
0C03                          ;*Macro unroll:  DLOOP_PUSH $
0C03                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C03                DLOOP_12:   .SET   DLOOP_11   
0C03                DLOOP_11:   .SET   DLOOP_10   
0C03                DLOOP_10:   .SET   DLOOP_9   
0C03                DLOOP_9:   .SET   DLOOP_8   
0C03                DLOOP_8:   .SET   DLOOP_7   
0C03                DLOOP_7:   .SET   DLOOP_6   
0C03                DLOOP_6:   .SET   DLOOP_5   
0C03                DLOOP_5:   .SET   DLOOP_4   
0C03                DLOOP_4:   .SET   DLOOP_3   
0C03                DLOOP_3:   .SET   DLOOP_2   
0C03                DLOOP_2:   .SET   DLOOP_TOP   
0C03                DLOOP_TOP:   .SET   $   
0C03                L_M_1519S103:      
0C03   CD 26 11               CALL   getKey   ; get next key, returned in A
0C06                          ;*Macro unroll:  _switch
0C06   18 03                  JR   L_M_1521S106   
0C08   C3 08 0C               JP   $   
0C0B                          ;*Macro unroll:  STRUC_PUSH $
0C0B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C0B                STRUC_12:   .SET   STRUC_11   
0C0B                STRUC_11:   .SET   STRUC_10   
0C0B                STRUC_10:   .SET   STRUC_9   
0C0B                STRUC_9:   .SET   STRUC_8   
0C0B                STRUC_8:   .SET   STRUC_7   
0C0B                STRUC_7:   .SET   STRUC_6   
0C0B                STRUC_6:   .SET   STRUC_5   
0C0B                STRUC_5:   .SET   STRUC_4   
0C0B                STRUC_4:   .SET   STRUC_3   
0C0B                STRUC_3:   .SET   STRUC_2   
0C0B                STRUC_2:   .SET   STRUC_TOP   
0C0B                STRUC_TOP:   .SET   $   
0C0B                L_M_1521S106:      
0C0B   CB 7F                  BIT   7,A   ; check end of input
0C0D                          ;*Macro unroll:  _if nz
0C0D   C2 13 0C               JP   nz,L_M_1523S109   
0C10   C3 10 0C               JP   $   
0C13                          ;*Macro unroll:  STRUC_PUSH $
0C13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C13                STRUC_12:   .SET   STRUC_11   
0C13                STRUC_11:   .SET   STRUC_10   
0C13                STRUC_10:   .SET   STRUC_9   
0C13                STRUC_9:   .SET   STRUC_8   
0C13                STRUC_8:   .SET   STRUC_7   
0C13                STRUC_7:   .SET   STRUC_6   
0C13                STRUC_6:   .SET   STRUC_5   
0C13                STRUC_5:   .SET   STRUC_4   
0C13                STRUC_4:   .SET   STRUC_3   
0C13                STRUC_3:   .SET   STRUC_2   
0C13                STRUC_2:   .SET   STRUC_TOP   
0C13                STRUC_TOP:   .SET   $   
0C13                L_M_1523S109:      
0C13   36 00                  LD   (HL),0   
0C15   3E 00                  LD   A,0   
0C17                          ;*Macro unroll:  _break
0C17   C3 00 0C               JP   DLOOP_TOP - 3   
0C1A                          ;*Macro unroll:  _endif
0C1A                          ;*Macro unroll:  STRUC_FWD
0C1A                CUR_ADR:   .SET   $   
0C11                          .ORG   STRUC_TOP - 2   
0C11   1A 0C                  DW   CUR_ADR   
0C1A                          .ORG   CUR_ADR   
0C1A                          ;*Macro unroll:  STRUC_POP
0C1A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C1A                STRUC_TOP:   .SET   STRUC_2   
0C1A                STRUC_2:   .SET   STRUC_3   
0C1A                STRUC_3:   .SET   STRUC_4   
0C1A                STRUC_4:   .SET   STRUC_5   
0C1A                STRUC_5:   .SET   STRUC_6   
0C1A                STRUC_6:   .SET   STRUC_7   
0C1A                STRUC_7:   .SET   STRUC_8   
0C1A                STRUC_8:   .SET   STRUC_9   
0C1A                STRUC_9:   .SET   STRUC_10   
0C1A                STRUC_10:   .SET   STRUC_11   
0C1A                STRUC_11:   .SET   STRUC_12   
0C1A                STRUC_12:   .SET   0   
0C1A   FE 5C                  CP   $5C   ; \ start of a comment?
0C1C                          ;*Macro unroll:  _case z                     ; if yes skip to end of line
0C1C   CA 22 0C               JP   z,L_M_1529S116   ; if yes skip to end of line
0C1F   C3 1F 0C               JP   $   
0C22                          ;*Macro unroll:  STRUC_PUSH $
0C22                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C22                STRUC_12:   .SET   STRUC_11   
0C22                STRUC_11:   .SET   STRUC_10   
0C22                STRUC_10:   .SET   STRUC_9   
0C22                STRUC_9:   .SET   STRUC_8   
0C22                STRUC_8:   .SET   STRUC_7   
0C22                STRUC_7:   .SET   STRUC_6   
0C22                STRUC_6:   .SET   STRUC_5   
0C22                STRUC_5:   .SET   STRUC_4   
0C22                STRUC_4:   .SET   STRUC_3   
0C22                STRUC_3:   .SET   STRUC_2   
0C22                STRUC_2:   .SET   STRUC_TOP   
0C22                STRUC_TOP:   .SET   $   
0C22                L_M_1529S116:      
0C22                          ;*Macro unroll:  _do
0C22   18 03                  JR   L_M_1530S117   
0C24   C3 24 0C               JP   $   
0C27                          ;*Macro unroll:  DLOOP_PUSH $
0C27                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C27                DLOOP_12:   .SET   DLOOP_11   
0C27                DLOOP_11:   .SET   DLOOP_10   
0C27                DLOOP_10:   .SET   DLOOP_9   
0C27                DLOOP_9:   .SET   DLOOP_8   
0C27                DLOOP_8:   .SET   DLOOP_7   
0C27                DLOOP_7:   .SET   DLOOP_6   
0C27                DLOOP_6:   .SET   DLOOP_5   
0C27                DLOOP_5:   .SET   DLOOP_4   
0C27                DLOOP_4:   .SET   DLOOP_3   
0C27                DLOOP_3:   .SET   DLOOP_2   
0C27                DLOOP_2:   .SET   DLOOP_TOP   
0C27                DLOOP_TOP:   .SET   $   
0C27                L_M_1530S117:      
0C27   CD 26 11               CALL   getKey   
0C2A   FE 0D                  CP   "\r"   ; end of line yet?
0C2C                          ;*Macro unroll:  _if nz
0C2C   C2 32 0C               JP   nz,L_M_1533S120   
0C2F   C3 2F 0C               JP   $   
0C32                          ;*Macro unroll:  STRUC_PUSH $
0C32                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C32                STRUC_12:   .SET   STRUC_11   
0C32                STRUC_11:   .SET   STRUC_10   
0C32                STRUC_10:   .SET   STRUC_9   
0C32                STRUC_9:   .SET   STRUC_8   
0C32                STRUC_8:   .SET   STRUC_7   
0C32                STRUC_7:   .SET   STRUC_6   
0C32                STRUC_6:   .SET   STRUC_5   
0C32                STRUC_5:   .SET   STRUC_4   
0C32                STRUC_4:   .SET   STRUC_3   
0C32                STRUC_3:   .SET   STRUC_2   
0C32                STRUC_2:   .SET   STRUC_TOP   
0C32                STRUC_TOP:   .SET   $   
0C32                L_M_1533S120:      
0C32   FE 0A                  CP   "\n"   ; end of line yet?
0C34                          ;*Macro unroll:  _endif
0C34                          ;*Macro unroll:  STRUC_FWD
0C34                CUR_ADR:   .SET   $   
0C30                          .ORG   STRUC_TOP - 2   
0C30   34 0C                  DW   CUR_ADR   
0C34                          .ORG   CUR_ADR   
0C34                          ;*Macro unroll:  STRUC_POP
0C34                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C34                STRUC_TOP:   .SET   STRUC_2   
0C34                STRUC_2:   .SET   STRUC_3   
0C34                STRUC_3:   .SET   STRUC_4   
0C34                STRUC_4:   .SET   STRUC_5   
0C34                STRUC_5:   .SET   STRUC_6   
0C34                STRUC_6:   .SET   STRUC_7   
0C34                STRUC_7:   .SET   STRUC_8   
0C34                STRUC_8:   .SET   STRUC_9   
0C34                STRUC_9:   .SET   STRUC_10   
0C34                STRUC_10:   .SET   STRUC_11   
0C34                STRUC_11:   .SET   STRUC_12   
0C34                STRUC_12:   .SET   0   
0C34                          ;*Macro unroll:  _until z
0C34   CA 24 0C               JP   z,DLOOP_TOP - 3   
0C37                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C37                CUR_ADR:   .SET   $   ; needed?
0C25                          .ORG   DLOOP_TOP - 2   
0C25   37 0C                  DW   CUR_ADR   
0C37                          .ORG   CUR_ADR   
0C37                          ;*Macro unroll:  _enddo
0C37   C3 27 0C               JP   DLOOP_TOP   
0C3A                          ;*Macro unroll:  DLOOP_FWD
0C3A                CUR_ADR:   .SET   $   
0C25                          .ORG   DLOOP_TOP - 2   
0C25   3A 0C                  DW   CUR_ADR   
0C3A                          .ORG   CUR_ADR   
0C3A                          ;*Macro unroll:  DLOOP_POP
0C3A                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C3A                DLOOP_TOP:   .SET   DLOOP_2   
0C3A                DLOOP_2:   .SET   DLOOP_3   
0C3A                DLOOP_3:   .SET   DLOOP_4   
0C3A                DLOOP_4:   .SET   DLOOP_5   
0C3A                DLOOP_5:   .SET   DLOOP_6   
0C3A                DLOOP_6:   .SET   DLOOP_7   
0C3A                DLOOP_7:   .SET   DLOOP_8   
0C3A                DLOOP_8:   .SET   DLOOP_9   
0C3A                DLOOP_9:   .SET   DLOOP_10   
0C3A                DLOOP_10:   .SET   DLOOP_11   
0C3A                DLOOP_11:   .SET   DLOOP_12   
0C3A                DLOOP_12:   .SET   0   
0C3A                          ;*Macro unroll:  _endcase
0C3A   C3 08 0C               JP   STRUC_2 - 3   
0C3D                          ;*Macro unroll:  STRUC_FWD
0C3D                CUR_ADR:   .SET   $   
0C20                          .ORG   STRUC_TOP - 2   
0C20   3D 0C                  DW   CUR_ADR   
0C3D                          .ORG   CUR_ADR   
0C3D                          ;*Macro unroll:  STRUC_POP
0C3D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C3D                STRUC_TOP:   .SET   STRUC_2   
0C3D                STRUC_2:   .SET   STRUC_3   
0C3D                STRUC_3:   .SET   STRUC_4   
0C3D                STRUC_4:   .SET   STRUC_5   
0C3D                STRUC_5:   .SET   STRUC_6   
0C3D                STRUC_6:   .SET   STRUC_7   
0C3D                STRUC_7:   .SET   STRUC_8   
0C3D                STRUC_8:   .SET   STRUC_9   
0C3D                STRUC_9:   .SET   STRUC_10   
0C3D                STRUC_10:   .SET   STRUC_11   
0C3D                STRUC_11:   .SET   STRUC_12   
0C3D                STRUC_12:   .SET   0   
0C3D   B9                     CP   C   ; = space?
0C3E                          ;*Macro unroll:  _case z
0C3E   CA 44 0C               JP   z,L_M_1540S128   
0C41   C3 41 0C               JP   $   
0C44                          ;*Macro unroll:  STRUC_PUSH $
0C44                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C44                STRUC_12:   .SET   STRUC_11   
0C44                STRUC_11:   .SET   STRUC_10   
0C44                STRUC_10:   .SET   STRUC_9   
0C44                STRUC_9:   .SET   STRUC_8   
0C44                STRUC_8:   .SET   STRUC_7   
0C44                STRUC_7:   .SET   STRUC_6   
0C44                STRUC_6:   .SET   STRUC_5   
0C44                STRUC_5:   .SET   STRUC_4   
0C44                STRUC_4:   .SET   STRUC_3   
0C44                STRUC_3:   .SET   STRUC_2   
0C44                STRUC_2:   .SET   STRUC_TOP   
0C44                STRUC_TOP:   .SET   $   
0C44                L_M_1540S128:      
0C44                          ;*Macro unroll:  _endcase
0C44   C3 08 0C               JP   STRUC_2 - 3   
0C47                          ;*Macro unroll:  STRUC_FWD
0C47                CUR_ADR:   .SET   $   
0C42                          .ORG   STRUC_TOP - 2   
0C42   47 0C                  DW   CUR_ADR   
0C47                          .ORG   CUR_ADR   
0C47                          ;*Macro unroll:  STRUC_POP
0C47                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C47                STRUC_TOP:   .SET   STRUC_2   
0C47                STRUC_2:   .SET   STRUC_3   
0C47                STRUC_3:   .SET   STRUC_4   
0C47                STRUC_4:   .SET   STRUC_5   
0C47                STRUC_5:   .SET   STRUC_6   
0C47                STRUC_6:   .SET   STRUC_7   
0C47                STRUC_7:   .SET   STRUC_8   
0C47                STRUC_8:   .SET   STRUC_9   
0C47                STRUC_9:   .SET   STRUC_10   
0C47                STRUC_10:   .SET   STRUC_11   
0C47                STRUC_11:   .SET   STRUC_12   
0C47                STRUC_12:   .SET   0   
0C47   FE 20                  CP   " "   ; < space?
0C49                          ;*Macro unroll:  _case c
0C49   DA 4F 0C               JP   c,L_M_1543S132   
0C4C   C3 4C 0C               JP   $   
0C4F                          ;*Macro unroll:  STRUC_PUSH $
0C4F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C4F                STRUC_12:   .SET   STRUC_11   
0C4F                STRUC_11:   .SET   STRUC_10   
0C4F                STRUC_10:   .SET   STRUC_9   
0C4F                STRUC_9:   .SET   STRUC_8   
0C4F                STRUC_8:   .SET   STRUC_7   
0C4F                STRUC_7:   .SET   STRUC_6   
0C4F                STRUC_6:   .SET   STRUC_5   
0C4F                STRUC_5:   .SET   STRUC_4   
0C4F                STRUC_4:   .SET   STRUC_3   
0C4F                STRUC_3:   .SET   STRUC_2   
0C4F                STRUC_2:   .SET   STRUC_TOP   
0C4F                STRUC_TOP:   .SET   $   
0C4F                L_M_1543S132:      
0C4F                          ;*Macro unroll:  _endcase
0C4F   C3 08 0C               JP   STRUC_2 - 3   
0C52                          ;*Macro unroll:  STRUC_FWD
0C52                CUR_ADR:   .SET   $   
0C4D                          .ORG   STRUC_TOP - 2   
0C4D   52 0C                  DW   CUR_ADR   
0C52                          .ORG   CUR_ADR   
0C52                          ;*Macro unroll:  STRUC_POP
0C52                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C52                STRUC_TOP:   .SET   STRUC_2   
0C52                STRUC_2:   .SET   STRUC_3   
0C52                STRUC_3:   .SET   STRUC_4   
0C52                STRUC_4:   .SET   STRUC_5   
0C52                STRUC_5:   .SET   STRUC_6   
0C52                STRUC_6:   .SET   STRUC_7   
0C52                STRUC_7:   .SET   STRUC_8   
0C52                STRUC_8:   .SET   STRUC_9   
0C52                STRUC_9:   .SET   STRUC_10   
0C52                STRUC_10:   .SET   STRUC_11   
0C52                STRUC_11:   .SET   STRUC_12   
0C52                STRUC_12:   .SET   0   
0C52                             ; default case
0C52                          ;*Macro unroll:  _break
0C52   C3 00 0C               JP   DLOOP_TOP - 3   
0C55                          ;*Macro unroll:  _endswitch
0C55                          ;*Macro unroll:  STRUC_FWD
0C55                CUR_ADR:   .SET   $   
0C09                          .ORG   STRUC_TOP - 2   
0C09   55 0C                  DW   CUR_ADR   
0C55                          .ORG   CUR_ADR   
0C55                          ;*Macro unroll:  STRUC_POP
0C55                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0C55                STRUC_TOP:   .SET   STRUC_2   
0C55                STRUC_2:   .SET   STRUC_3   
0C55                STRUC_3:   .SET   STRUC_4   
0C55                STRUC_4:   .SET   STRUC_5   
0C55                STRUC_5:   .SET   STRUC_6   
0C55                STRUC_6:   .SET   STRUC_7   
0C55                STRUC_7:   .SET   STRUC_8   
0C55                STRUC_8:   .SET   STRUC_9   
0C55                STRUC_9:   .SET   STRUC_10   
0C55                STRUC_10:   .SET   STRUC_11   
0C55                STRUC_11:   .SET   STRUC_12   
0C55                STRUC_12:   .SET   0   
0C55                          ;*Macro unroll:  _enddo
0C55   C3 03 0C               JP   DLOOP_TOP   
0C58                          ;*Macro unroll:  DLOOP_FWD
0C58                CUR_ADR:   .SET   $   
0C01                          .ORG   DLOOP_TOP - 2   
0C01   58 0C                  DW   CUR_ADR   
0C58                          .ORG   CUR_ADR   
0C58                          ;*Macro unroll:  DLOOP_POP
0C58                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0C58                DLOOP_TOP:   .SET   DLOOP_2   
0C58                DLOOP_2:   .SET   DLOOP_3   
0C58                DLOOP_3:   .SET   DLOOP_4   
0C58                DLOOP_4:   .SET   DLOOP_5   
0C58                DLOOP_5:   .SET   DLOOP_6   
0C58                DLOOP_6:   .SET   DLOOP_7   
0C58                DLOOP_7:   .SET   DLOOP_8   
0C58                DLOOP_8:   .SET   DLOOP_9   
0C58                DLOOP_9:   .SET   DLOOP_10   
0C58                DLOOP_10:   .SET   DLOOP_11   
0C58                DLOOP_11:   .SET   DLOOP_12   
0C58                DLOOP_12:   .SET   0   
0C58   06 00                  LD   B,0   
0C5A   4F                     LD   C,A   
0C5B   C9                     RET      
0C5C                XWORDREAD:      ; delim addr char -- c-addr
0C5C   79                     LD   A,C   
0C5D                          ;*Macro unroll:  ppop0 B,C
0C5D   DD 2B                  DEC   IX   
0C5F   DD 46 00               LD   B,(IX+0)   
0C62   DD 2B                  DEC   IX   
0C64   DD 4E 00               LD   C,(IX+0)   
0C67                          ;*Macro unroll:  ppop H,L
0C67   60                     LD   H,B   
0C68   69                     LD   L,C   
0C69                          ;*Macro unroll:  ppop0 B,C
0C69   DD 2B                  DEC   IX   
0C6B   DD 46 00               LD   B,(IX+0)   
0C6E   DD 2B                  DEC   IX   
0C70   DD 4E 00               LD   C,(IX+0)   
0C73                          ;*Macro unroll:  ppop D,E
0C73   50                     LD   D,B   
0C74   59                     LD   E,C   
0C75                          ;*Macro unroll:  ppop0 B,C
0C75   DD 2B                  DEC   IX   
0C77   DD 46 00               LD   B,(IX+0)   
0C7A   DD 2B                  DEC   IX   
0C7C   DD 4E 00               LD   C,(IX+0)   
0C7F   16 00                  LD   D,0   
0C81   B7                     OR   A   
0C82                          ;*Macro unroll:  _if nz
0C82   C2 88 0C               JP   nz,L_M_1559S151   
0C85   C3 85 0C               JP   $   
0C88                          ;*Macro unroll:  STRUC_PUSH $
0C88                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0C88                STRUC_12:   .SET   STRUC_11   
0C88                STRUC_11:   .SET   STRUC_10   
0C88                STRUC_10:   .SET   STRUC_9   
0C88                STRUC_9:   .SET   STRUC_8   
0C88                STRUC_8:   .SET   STRUC_7   
0C88                STRUC_7:   .SET   STRUC_6   
0C88                STRUC_6:   .SET   STRUC_5   
0C88                STRUC_5:   .SET   STRUC_4   
0C88                STRUC_4:   .SET   STRUC_3   
0C88                STRUC_3:   .SET   STRUC_2   
0C88                STRUC_2:   .SET   STRUC_TOP   
0C88                STRUC_TOP:   .SET   $   
0C88                L_M_1559S151:      
0C88   E5                     PUSH   HL   ; save a copy of HL
0C89   23                     INC   HL   ; move to leave space for length byte
0C8A   43                     LD   B,E   
0C8B                          ;*Macro unroll:  _do
0C8B   18 03                  JR   L_M_1563S155   
0C8D   C3 8D 0C               JP   $   
0C90                          ;*Macro unroll:  DLOOP_PUSH $
0C90                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
0C90                DLOOP_12:   .SET   DLOOP_11   
0C90                DLOOP_11:   .SET   DLOOP_10   
0C90                DLOOP_10:   .SET   DLOOP_9   
0C90                DLOOP_9:   .SET   DLOOP_8   
0C90                DLOOP_8:   .SET   DLOOP_7   
0C90                DLOOP_7:   .SET   DLOOP_6   
0C90                DLOOP_6:   .SET   DLOOP_5   
0C90                DLOOP_5:   .SET   DLOOP_4   
0C90                DLOOP_4:   .SET   DLOOP_3   
0C90                DLOOP_3:   .SET   DLOOP_2   
0C90                DLOOP_2:   .SET   DLOOP_TOP   
0C90                DLOOP_TOP:   .SET   $   
0C90                L_M_1563S155:      
0C90   77                     LD   (HL),A   ; add character to return lineBuf
0C91   23                     INC   HL   
0C92   14                     INC   D   
0C93   CD 26 11               CALL   getKey   ; get next key
0C96   B9                     CP   C   ; = delim?
0C97                          ;*Macro unroll:  _until z
0C97   CA 8D 0C               JP   z,DLOOP_TOP - 3   
0C9A                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C9A                CUR_ADR:   .SET   $   ; needed?
0C8E                          .ORG   DLOOP_TOP - 2   
0C8E   9A 0C                  DW   CUR_ADR   
0C9A                          .ORG   CUR_ADR   
0C9A   FE 20                  CP   " "   ; < space? i.e. control chars
0C9C                          ;*Macro unroll:  _until c
0C9C   DA 8D 0C               JP   c,DLOOP_TOP - 3   
0C9F                          ;*Macro unroll:  DLOOP_FWD               ; needed?
0C9F                CUR_ADR:   .SET   $   ; needed?
0C8E                          .ORG   DLOOP_TOP - 2   
0C8E   9F 0C                  DW   CUR_ADR   
0C9F                          .ORG   CUR_ADR   
0C9F                          ;*Macro unroll:  _djnz
0C9F   10 EF                  DJNZ   DLOOP_TOP   
0CA1                          ;*Macro unroll:  DLOOP_FWD
0CA1                CUR_ADR:   .SET   $   
0C8E                          .ORG   DLOOP_TOP - 2   
0C8E   A1 0C                  DW   CUR_ADR   
0CA1                          .ORG   CUR_ADR   
0CA1                          ;*Macro unroll:  DLOOP_POP
0CA1                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
0CA1                DLOOP_TOP:   .SET   DLOOP_2   
0CA1                DLOOP_2:   .SET   DLOOP_3   
0CA1                DLOOP_3:   .SET   DLOOP_4   
0CA1                DLOOP_4:   .SET   DLOOP_5   
0CA1                DLOOP_5:   .SET   DLOOP_6   
0CA1                DLOOP_6:   .SET   DLOOP_7   
0CA1                DLOOP_7:   .SET   DLOOP_8   
0CA1                DLOOP_8:   .SET   DLOOP_9   
0CA1                DLOOP_9:   .SET   DLOOP_10   
0CA1                DLOOP_10:   .SET   DLOOP_11   
0CA1                DLOOP_11:   .SET   DLOOP_12   
0CA1                DLOOP_12:   .SET   0   
0CA1   E1                     POP   HL   ; restore HL
0CA2                          ;*Macro unroll:  _endif
0CA2                          ;*Macro unroll:  STRUC_FWD
0CA2                CUR_ADR:   .SET   $   
0C86                          .ORG   STRUC_TOP - 2   
0C86   A2 0C                  DW   CUR_ADR   
0CA2                          .ORG   CUR_ADR   
0CA2                          ;*Macro unroll:  STRUC_POP
0CA2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0CA2                STRUC_TOP:   .SET   STRUC_2   
0CA2                STRUC_2:   .SET   STRUC_3   
0CA2                STRUC_3:   .SET   STRUC_4   
0CA2                STRUC_4:   .SET   STRUC_5   
0CA2                STRUC_5:   .SET   STRUC_6   
0CA2                STRUC_6:   .SET   STRUC_7   
0CA2                STRUC_7:   .SET   STRUC_8   
0CA2                STRUC_8:   .SET   STRUC_9   
0CA2                STRUC_9:   .SET   STRUC_10   
0CA2                STRUC_10:   .SET   STRUC_11   
0CA2                STRUC_11:   .SET   STRUC_12   
0CA2                STRUC_12:   .SET   0   
0CA2   72                     LD   (HL),D   ; write length
0CA3                          ;*Macro unroll:  loadWord B,C, H,L                   ; TOS = str ptr
0CA3   4D                     LD   C,L   ; TOS = str ptr
0CA4   44                     LD   B,H   
0CA5   C9                     RET      
0CA6                INTERPTOKEN:      ; ptr len --
0CA6   CF                     RST   $08   
0CA7   54 12 54 12 45 05      DW   over,over,find   ; ptr len -- ptr len addr
0CAD   0C 12 EB 01            DW   DUPP,zNotEqual   
0CB1                          ;*Macro unroll:  cIf
0CB1   38 07 00 00            DW   QBRAN,0   
0CB5                          ;*Macro unroll:  CPL_PUSH $
0CB5                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CB5                CPL_10:   .SET   CPL_9   
0CB5                CPL_9:    .SET   CPL_8   
0CB5                CPL_8:    .SET   CPL_7   
0CB5                CPL_7:    .SET   CPL_6   
0CB5                CPL_6:    .SET   CPL_5   
0CB5                CPL_5:    .SET   CPL_4   
0CB5                CPL_4:    .SET   CPL_3   
0CB5                CPL_3:    .SET   CPL_2   
0CB5                CPL_2:    .SET   CPL_TOP   
0CB5                CPL_TOP:   .SET   $   
0CB5   C2 0C                  DW   interpWord   
0CB7                          ;*Macro unroll:  cElse
0CB7   55 07 00 00            DW   BRAN,0   
0CBB                          ;*Macro unroll:  cBRANCH_FWD
0CBB                CUR_ADR:   .SET   $   
0CB3                          .ORG   CPL_TOP - 2   
0CB3   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0CBB                          .ORG   CUR_ADR   
0CBB                CPL_TOP:   .SET   $   
0CBB   06 0D                  DW   interpLiteral   
0CBD                          ;*Macro unroll:  cEndif
0CBD                          ;*Macro unroll:  cBRANCH_FWD
0CBD                CUR_ADR:   .SET   $   
0CB9                          .ORG   CPL_TOP - 2   
0CB9   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0CBD                          .ORG   CUR_ADR   
0CBD                          ;*Macro unroll:  CPL_POP
0CBD                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CBD                CPL_TOP:   .SET   CPL_2   
0CBD                CPL_2:    .SET   CPL_3   
0CBD                CPL_3:    .SET   CPL_4   
0CBD                CPL_4:    .SET   CPL_5   
0CBD                CPL_5:    .SET   CPL_6   
0CBD                CPL_6:    .SET   CPL_7   
0CBD                CPL_7:    .SET   CPL_8   
0CBD                CPL_8:    .SET   CPL_9   
0CBD                CPL_9:    .SET   CPL_10   
0CBD                CPL_10:   .SET   0   
0CBD                          ;*Macro unroll:  EXIT
0CBD   8C 0E                  DW   exit   
0CBF   C3 7B 0E               JP   enter   
0CC2                INTERPWORD:      ; ptr len addr --
0CC2   CF                     RST   $08   ; enter forth
0CC3   20 12 40 12 20 12 40 12 DW   swap,drop,swap,drop   ; ptr len addr -- addr
0CCB   0C 12 8B 11 02 00 CE 00 EC 0E DW   DUPP,lit,2,plus,cfetch   ; ( headptr -- headptr flags ) add 2 to headptr
0CD5   8B 11 80 00 86 00      DW   lit,msk_immed,ANDD   ; ( headptr flags -- headptr immedflag )
0CDB   D6 01                  DW   zEqual   
0CDD                          ;*Macro unroll:  cif
0CDD   38 07 00 00            DW   QBRAN,0   
0CE1                          ;*Macro unroll:  CPL_PUSH $
0CE1                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CE1                CPL_10:   .SET   CPL_9   
0CE1                CPL_9:    .SET   CPL_8   
0CE1                CPL_8:    .SET   CPL_7   
0CE1                CPL_7:    .SET   CPL_6   
0CE1                CPL_6:    .SET   CPL_5   
0CE1                CPL_5:    .SET   CPL_4   
0CE1                CPL_4:    .SET   CPL_3   
0CE1                CPL_3:    .SET   CPL_2   
0CE1                CPL_2:    .SET   CPL_TOP   
0CE1                CPL_TOP:   .SET   $   
0CE1   1E 0B                  DW   tcfa   ; ( headptr -- xt )
0CE3   94 08 BF 0E            DW   state,fetch   
0CE7   AE 08 BF 0E            DW   nesting,fetch   
0CEB   FE 01                  DW   or   
0CED                          ;*Macro unroll:  cif
0CED   38 07 00 00            DW   QBRAN,0   
0CF1                          ;*Macro unroll:  CPL_PUSH $
0CF1                CPL_COUNT:   .SET   CPL_COUNT + 1   
0CF1                CPL_10:   .SET   CPL_9   
0CF1                CPL_9:    .SET   CPL_8   
0CF1                CPL_8:    .SET   CPL_7   
0CF1                CPL_7:    .SET   CPL_6   
0CF1                CPL_6:    .SET   CPL_5   
0CF1                CPL_5:    .SET   CPL_4   
0CF1                CPL_4:    .SET   CPL_3   
0CF1                CPL_3:    .SET   CPL_2   
0CF1                CPL_2:    .SET   CPL_TOP   
0CF1                CPL_TOP:   .SET   $   
0CF1   75 0F                  DW   comma   ; compile xt
0CF3                          ;*Macro unroll:  cElse
0CF3   55 07 00 00            DW   BRAN,0   
0CF7                          ;*Macro unroll:  cBRANCH_FWD
0CF7                CUR_ADR:   .SET   $   
0CEF                          .ORG   CPL_TOP - 2   
0CEF   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0CF7                          .ORG   CUR_ADR   
0CF7                CPL_TOP:   .SET   $   
0CF7   3E 0B                  DW   execute   ; execute xt
0CF9                          ;*Macro unroll:  cendif
0CF9                          ;*Macro unroll:  cBRANCH_FWD
0CF9                CUR_ADR:   .SET   $   
0CF5                          .ORG   CPL_TOP - 2   
0CF5   04 00                  DW   CUR_ADR - CPL_TOP + 2   
0CF9                          .ORG   CUR_ADR   
0CF9                          ;*Macro unroll:  CPL_POP
0CF9                CPL_COUNT:   .SET   CPL_COUNT - 1   
0CF9                CPL_TOP:   .SET   CPL_2   
0CF9                CPL_2:    .SET   CPL_3   
0CF9                CPL_3:    .SET   CPL_4   
0CF9                CPL_4:    .SET   CPL_5   
0CF9                CPL_5:    .SET   CPL_6   
0CF9                CPL_6:    .SET   CPL_7   
0CF9                CPL_7:    .SET   CPL_8   
0CF9                CPL_8:    .SET   CPL_9   
0CF9                CPL_9:    .SET   CPL_10   
0CF9                CPL_10:   .SET   0   
0CF9                          ;*Macro unroll:  cElse
0CF9   55 07 00 00            DW   BRAN,0   
0CFD                          ;*Macro unroll:  cBRANCH_FWD
0CFD                CUR_ADR:   .SET   $   
0CDF                          .ORG   CPL_TOP - 2   
0CDF   1E 00                  DW   CUR_ADR - CPL_TOP + 2   
0CFD                          .ORG   CUR_ADR   
0CFD                CPL_TOP:   .SET   $   
0CFD   1E 0B 3E 0B            DW   tcfa,execute   ; execute xt
0D01                          ;*Macro unroll:  cendif
0D01                          ;*Macro unroll:  cBRANCH_FWD
0D01                CUR_ADR:   .SET   $   
0CFB                          .ORG   CPL_TOP - 2   
0CFB   06 00                  DW   CUR_ADR - CPL_TOP + 2   
0D01                          .ORG   CUR_ADR   
0D01                          ;*Macro unroll:  CPL_POP
0D01                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D01                CPL_TOP:   .SET   CPL_2   
0D01                CPL_2:    .SET   CPL_3   
0D01                CPL_3:    .SET   CPL_4   
0D01                CPL_4:    .SET   CPL_5   
0D01                CPL_5:    .SET   CPL_6   
0D01                CPL_6:    .SET   CPL_7   
0D01                CPL_7:    .SET   CPL_8   
0D01                CPL_8:    .SET   CPL_9   
0D01                CPL_9:    .SET   CPL_10   
0D01                CPL_10:   .SET   0   
0D01                          ;*Macro unroll:  EXIT
0D01   8C 0E                  DW   exit   
0D03   C3 7B 0E               JP   enter   
0D06                INTERPLITERAL:      ; ptr len addr --
0D06   CF                     RST   $08   ; enter forth
0D07   40 12                  DW   drop   ; ptr len addr - ptr len
0D09   A5 0A D6 01            DW   number,zEqual   ; parse to number
0D0D                          ;*Macro unroll:  cif
0D0D   38 07 00 00            DW   QBRAN,0   
0D11                          ;*Macro unroll:  CPL_PUSH $
0D11                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D11                CPL_10:   .SET   CPL_9   
0D11                CPL_9:    .SET   CPL_8   
0D11                CPL_8:    .SET   CPL_7   
0D11                CPL_7:    .SET   CPL_6   
0D11                CPL_6:    .SET   CPL_5   
0D11                CPL_5:    .SET   CPL_4   
0D11                CPL_4:    .SET   CPL_3   
0D11                CPL_3:    .SET   CPL_2   
0D11                CPL_2:    .SET   CPL_TOP   
0D11                CPL_TOP:   .SET   $   
0D11   94 08 BF 0E            DW   state,fetch   
0D15   AE 08 BF 0E            DW   nesting,fetch   
0D19   FE 01                  DW   or   
0D1B                          ;*Macro unroll:  cIf
0D1B   38 07 00 00            DW   QBRAN,0   
0D1F                          ;*Macro unroll:  CPL_PUSH $
0D1F                CPL_COUNT:   .SET   CPL_COUNT + 1   
0D1F                CPL_10:   .SET   CPL_9   
0D1F                CPL_9:    .SET   CPL_8   
0D1F                CPL_8:    .SET   CPL_7   
0D1F                CPL_7:    .SET   CPL_6   
0D1F                CPL_6:    .SET   CPL_5   
0D1F                CPL_5:    .SET   CPL_4   
0D1F                CPL_4:    .SET   CPL_3   
0D1F                CPL_3:    .SET   CPL_2   
0D1F                CPL_2:    .SET   CPL_TOP   
0D1F                CPL_TOP:   .SET   $   
0D1F   8B 11 8B 11            DW   lit,lit   ; (val -- val "lit" )
0D23   75 0F 75 0F            DW   comma,comma   ; compile "lit" val
0D27                          ;*Macro unroll:  cEndIf
0D27                          ;*Macro unroll:  cBRANCH_FWD
0D27                CUR_ADR:   .SET   $   
0D1D                          .ORG   CPL_TOP - 2   
0D1D   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
0D27                          .ORG   CUR_ADR   
0D27                          ;*Macro unroll:  CPL_POP
0D27                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D27                CPL_TOP:   .SET   CPL_2   
0D27                CPL_2:    .SET   CPL_3   
0D27                CPL_3:    .SET   CPL_4   
0D27                CPL_4:    .SET   CPL_5   
0D27                CPL_5:    .SET   CPL_6   
0D27                CPL_6:    .SET   CPL_7   
0D27                CPL_7:    .SET   CPL_8   
0D27                CPL_8:    .SET   CPL_9   
0D27                CPL_9:    .SET   CPL_10   
0D27                CPL_10:   .SET   0   
0D27                          ;*Macro unroll:  cElse
0D27   55 07 00 00            DW   BRAN,0   
0D2B                          ;*Macro unroll:  cBRANCH_FWD
0D2B                CUR_ADR:   .SET   $   
0D0F                          .ORG   CPL_TOP - 2   
0D0F   1C 00                  DW   CUR_ADR - CPL_TOP + 2   
0D2B                          .ORG   CUR_ADR   
0D2B                CPL_TOP:   .SET   $   
0D2B   40 12                  DW   drop   ; ( ptr len zero -- ptr len ), not found
0D2D   A1 12                  DW   litstr   ; err != 0, parse error
0D2F   0E 45 72 72 6F 72 3A 20 70 61 72 73 69 6E 67 .PSTR   "Error: parsing"   
0D3E   60 0D                  DW   type   
0D40                          ;*Macro unroll:  cEndIf
0D40                          ;*Macro unroll:  cBRANCH_FWD
0D40                CUR_ADR:   .SET   $   
0D29                          .ORG   CPL_TOP - 2   
0D29   17 00                  DW   CUR_ADR - CPL_TOP + 2   
0D40                          .ORG   CUR_ADR   
0D40                          ;*Macro unroll:  CPL_POP
0D40                CPL_COUNT:   .SET   CPL_COUNT - 1   
0D40                CPL_TOP:   .SET   CPL_2   
0D40                CPL_2:    .SET   CPL_3   
0D40                CPL_3:    .SET   CPL_4   
0D40                CPL_4:    .SET   CPL_5   
0D40                CPL_5:    .SET   CPL_6   
0D40                CPL_6:    .SET   CPL_7   
0D40                CPL_7:    .SET   CPL_8   
0D40                CPL_8:    .SET   CPL_9   
0D40                CPL_9:    .SET   CPL_10   
0D40                CPL_10:   .SET   0   
0D40                          ;*Macro unroll:  EXIT
0D40   8C 0E                  DW   exit   
0D42   C3 7B 0E               JP   enter   
0D45                NESTPLUS:      
0D45   2A 57 32               LD   HL,(VAR_NESTING)   
0D48   23                     INC   HL   
0D49   22 57 32               LD   (VAR_NESTING),HL   
0D4C                          ;*Macro unroll:  NEXT
0D4C   C3 7B 0E               JP   enter   
0D4F                NESTMINUS:      
0D4F   2A 57 32               LD   HL,(VAR_NESTING)   
0D52   2B                     DEC   HL   
0D53   22 57 32               LD   (VAR_NESTING),HL   
0D56                          ;*Macro unroll:  NEXT
0D56   C3 7B 0E               JP   enter   
0D59                          ;*Macro unroll: mCODE "type",4,0,TYPE             ; ( str len -- )
0D59                HEADER_TYPE:      ; ( str len -- )
0D59   B7 0B                  DW   link   
0D5B                LINK:     .SET   HEADER_TYPE   
0D5B   04                     DB   0 + 4   
0D5C   74 79 70 65            DB   "type"   
0D60                TYPE:        
0D60                          ;*Macro unroll:  ppop0 D,E                       ; DE = str BC = length
0D60   DD 2B                  DEC   IX   ; DE = str BC = length
0D62   DD 56 00               LD   D,(IX+0)   
0D65   DD 2B                  DEC   IX   
0D67   DD 5E 00               LD   E,(IX+0)   
0D6A   CD 6A 11               CALL   printStr   
0D6D                          ;*Macro unroll:  ppop0 B,C                       ; clear TOS
0D6D   DD 2B                  DEC   IX   ; clear TOS
0D6F   DD 46 00               LD   B,(IX+0)   
0D72   DD 2B                  DEC   IX   
0D74   DD 4E 00               LD   C,(IX+0)   
0D77                          ;*Macro unroll:  NEXT
0D77   C3 7B 0E               JP   enter   
0D7A                          ;*Macro unroll: mCODE "cr",2,0,cr                 ; ( -- )
0D7A                HEADER_CR:      ; ( -- )
0D7A   59 0D                  DW   link   
0D7C                LINK:     .SET   HEADER_cr   
0D7C   02                     DB   0 + 2   
0D7D   63 72                  DB   "cr"   
0D7F                CR:          
0D7F   CD 74 11               CALL   printcr   
0D82                          ;*Macro unroll:  NEXT
0D82   C3 7B 0E               JP   enter   
0D85                          ;*Macro unroll:  mCODE "accept",6,0,ACCEPT              ; ( addr max -- len )
0D85                HEADER_ACCEPT:      ; ( addr max -- len )
0D85   7A 0D                  DW   link   
0D87                LINK:     .SET   HEADER_ACCEPT   
0D87   06                     DB   0 + 6   
0D88   61 63 63 65 70 74      DB   "accept"   
0D8E                ACCEPT:      
0D8E                          ;*Macro unroll:  ppop D,E                    ; max - up to 255
0D8E   50                     LD   D,B   ; max - up to 255
0D8F   59                     LD   E,C   
0D90                          ;*Macro unroll:  ppop0 B,C
0D90   DD 2B                  DEC   IX   
0D92   DD 46 00               LD   B,(IX+0)   
0D95   DD 2B                  DEC   IX   
0D97   DD 4E 00               LD   C,(IX+0)   
0D9A                          ;*Macro unroll: 	ppop0 H,L                          ; addr
0D9A   DD 2B                  DEC   IX   ; addr
0D9C   DD 66 00               LD   H,(IX+0)   
0D9F   DD 2B                  DEC   IX   
0DA1   DD 6E 00               LD   L,(IX+0)   
0DA4   CD 96 10               CALL   getline   
0DA7                          ;*Macro unroll:  NEXT
0DA7   C3 7B 0E               JP   enter   
0DAA                          ;*Macro unroll: mCODE "key",3,0,KEY                ; ( -- c )
0DAA                HEADER_KEY:      ; ( -- c )
0DAA   85 0D                  DW   link   
0DAC                LINK:     .SET   HEADER_KEY   
0DAC   03                     DB   0 + 3   
0DAD   6B 65 79               DB   "key"   
0DB0                KEY:         
0DB0   CD 26 11               CALL   getKey   
0DB3   06 00                  LD   b,0   
0DB5   4F                     LD   c,a   
0DB6                          ;*Macro unroll:  NEXT
0DB6   C3 7B 0E               JP   enter   
0DB9                          ;*Macro unroll: mCODE "emit",4,0,EMIT              ; print the character on the stack
0DB9                HEADER_EMIT:      ; print the character on the stack
0DB9   AA 0D                  DW   link   
0DBB                LINK:     .SET   HEADER_EMIT   
0DBB   04                     DB   0 + 4   
0DBC   65 6D 69 74            DB   "emit"   
0DC0                EMIT:        
0DC0   79                     LD   A,C   ; (c -- )
0DC1   CD 7C 10               CALL   putc   
0DC4                          ;*Macro unroll:  ppop0 B,C                      ; clear stack
0DC4   DD 2B                  DEC   IX   ; clear stack
0DC6   DD 46 00               LD   B,(IX+0)   
0DC9   DD 2B                  DEC   IX   
0DCB   DD 4E 00               LD   C,(IX+0)   
0DCE                          ;*Macro unroll:  NEXT
0DCE   C3 7B 0E               JP   enter   
0DD1                          ;*Macro unroll: mCODE "key?",4,0,QKEY              ; ( -- c )
0DD1                HEADER_QKEY:      ; ( -- c )
0DD1   B9 0D                  DW   link   
0DD3                LINK:     .SET   HEADER_QKEY   
0DD3   04                     DB   0 + 4   
0DD4   6B 65 79 3F            DB   "key?"   
0DD8                QKEY:        
0DD8                          ;*Macro unroll: 	ppush0 B,C		                ; save TOS
0DD8   DD 71 00               LD   (IX+0),C   ; save TOS
0DDB   DD 23                  INC   IX   
0DDD   DD 70 00               LD   (IX+0),B   
0DE0   DD 23                  INC   IX   
0DE2   CD 90 10               CALL   inputReady   
0DE5   01 01 00               LD   BC,1   ; TOS = true
0DE8                          ;*Macro unroll:  _if z
0DE8   CA EE 0D               JP   z,L_M_1664S33   
0DEB   C3 EB 0D               JP   $   
0DEE                          ;*Macro unroll:  STRUC_PUSH $
0DEE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
0DEE                STRUC_12:   .SET   STRUC_11   
0DEE                STRUC_11:   .SET   STRUC_10   
0DEE                STRUC_10:   .SET   STRUC_9   
0DEE                STRUC_9:   .SET   STRUC_8   
0DEE                STRUC_8:   .SET   STRUC_7   
0DEE                STRUC_7:   .SET   STRUC_6   
0DEE                STRUC_6:   .SET   STRUC_5   
0DEE                STRUC_5:   .SET   STRUC_4   
0DEE                STRUC_4:   .SET   STRUC_3   
0DEE                STRUC_3:   .SET   STRUC_2   
0DEE                STRUC_2:   .SET   STRUC_TOP   
0DEE                STRUC_TOP:   .SET   $   
0DEE                L_M_1664S33:      
0DEE   01 00 00               LD   BC,0   ; TOS = false
0DF1                          ;*Macro unroll:  _endif
0DF1                          ;*Macro unroll:  STRUC_FWD
0DF1                CUR_ADR:   .SET   $   
0DEC                          .ORG   STRUC_TOP - 2   
0DEC   F1 0D                  DW   CUR_ADR   
0DF1                          .ORG   CUR_ADR   
0DF1                          ;*Macro unroll:  STRUC_POP
0DF1                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
0DF1                STRUC_TOP:   .SET   STRUC_2   
0DF1                STRUC_2:   .SET   STRUC_3   
0DF1                STRUC_3:   .SET   STRUC_4   
0DF1                STRUC_4:   .SET   STRUC_5   
0DF1                STRUC_5:   .SET   STRUC_6   
0DF1                STRUC_6:   .SET   STRUC_7   
0DF1                STRUC_7:   .SET   STRUC_8   
0DF1                STRUC_8:   .SET   STRUC_9   
0DF1                STRUC_9:   .SET   STRUC_10   
0DF1                STRUC_10:   .SET   STRUC_11   
0DF1                STRUC_11:   .SET   STRUC_12   
0DF1                STRUC_12:   .SET   0   
0DF1                          ;*Macro unroll:  NEXT
0DF1   C3 7B 0E               JP   enter   
0DF4                          ;*Macro unroll: mCODE "bl",2,0,bl
0DF4                HEADER_BL:      
0DF4   D1 0D                  DW   link   
0DF6                LINK:     .SET   HEADER_bl   
0DF6   02                     DB   0 + 2   
0DF7   62 6C                  DB   "bl"   
0DF9                BL:          
0DF9                          ;*Macro unroll:  ENTER
0DF9   CF                     RST   $08   
0DFA   8B 11 20 00            DW   lit,$20   ; compile branch on zero
0DFE                          ;*Macro unroll:  EXIT
0DFE   8C 0E                  DW   exit   
0E00   C3 7B 0E               JP   enter   
0E03                          ;*Macro unroll: mCODE "print",5,0,PRINT
0E03                HEADER_PRINT:      
0E03   F4 0D                  DW   link   
0E05                LINK:     .SET   HEADER_PRINT   
0E05   05                     DB   0 + 5   
0E06   70 72 69 6E 74         DB   "print"   
0E0B                PRINT:       
0E0B                          ;*Macro unroll:  ppop D,E
0E0B   50                     LD   D,B   
0E0C   59                     LD   E,C   
0E0D                          ;*Macro unroll:  ppop0 B,C
0E0D   DD 2B                  DEC   IX   
0E0F   DD 46 00               LD   B,(IX+0)   
0E12   DD 2B                  DEC   IX   
0E14   DD 4E 00               LD   C,(IX+0)   
0E17   CD 5B 11               CALL   printPStr   
0E1A                          ;*Macro unroll:  NEXT
0E1A   C3 7B 0E               JP   enter   
0E1D                             ; ." print string"
0E1D                          ;*Macro unroll: mCODE {".",$22},2,msk_immed,dotquote
0E1D                HEADER_DOTQUOTE:      
0E1D   03 0E                  DW   link   
0E1F                LINK:     .SET   HEADER_dotquote   
0E1F   82                     DB   msk_immed + 2   
0E20   2E 22                  DB   ".",$22   
0E22                DOTQUOTE:      
0E22                          ;*Macro unroll:  ENTER
0E22   CF                     RST   $08   
0E23   D8 12                  DW   qt   
0E25   94 08 BF 0E D6 01      DW   state,fetch,zequal   
0E2B                          ;*Macro unroll:  cIf
0E2B   38 07 00 00            DW   QBRAN,0   
0E2F                          ;*Macro unroll:  CPL_PUSH $
0E2F                CPL_COUNT:   .SET   CPL_COUNT + 1   
0E2F                CPL_10:   .SET   CPL_9   
0E2F                CPL_9:    .SET   CPL_8   
0E2F                CPL_8:    .SET   CPL_7   
0E2F                CPL_7:    .SET   CPL_6   
0E2F                CPL_6:    .SET   CPL_5   
0E2F                CPL_5:    .SET   CPL_4   
0E2F                CPL_4:    .SET   CPL_3   
0E2F                CPL_3:    .SET   CPL_2   
0E2F                CPL_2:    .SET   CPL_TOP   
0E2F                CPL_TOP:   .SET   $   
0E2F   60 0D                  DW   type   
0E31                          ;*Macro unroll:  cElse
0E31   55 07 00 00            DW   BRAN,0   
0E35                          ;*Macro unroll:  cBRANCH_FWD
0E35                CUR_ADR:   .SET   $   
0E2D                          .ORG   CPL_TOP - 2   
0E2D   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E35                          .ORG   CUR_ADR   
0E35                CPL_TOP:   .SET   $   
0E35   8B 11 60 0D 75 0F      DW   lit,type,comma   
0E3B                          ;*Macro unroll:  cEndIf
0E3B                          ;*Macro unroll:  cBRANCH_FWD
0E3B                CUR_ADR:   .SET   $   
0E33                          .ORG   CPL_TOP - 2   
0E33   08 00                  DW   CUR_ADR - CPL_TOP + 2   
0E3B                          .ORG   CUR_ADR   
0E3B                          ;*Macro unroll:  CPL_POP
0E3B                CPL_COUNT:   .SET   CPL_COUNT - 1   
0E3B                CPL_TOP:   .SET   CPL_2   
0E3B                CPL_2:    .SET   CPL_3   
0E3B                CPL_3:    .SET   CPL_4   
0E3B                CPL_4:    .SET   CPL_5   
0E3B                CPL_5:    .SET   CPL_6   
0E3B                CPL_6:    .SET   CPL_7   
0E3B                CPL_7:    .SET   CPL_8   
0E3B                CPL_8:    .SET   CPL_9   
0E3B                CPL_9:    .SET   CPL_10   
0E3B                CPL_10:   .SET   0   
0E3B                          ;*Macro unroll:  EXIT
0E3B   8C 0E                  DW   exit   
0E3D   C3 7B 0E               JP   enter   
0E40                INITFORTH:      
0E40   DD 21 A7 2E            LD   IX,data_stack   ; initialise the param stack.
0E44   FD 21 7B 0E            LD   IY,enter   
0E48   DD 22 59 32            LD   (var_sp0),IX   
0E4C   01 00 00               LD   BC,0   ; tos
0E4F   21 00 00               LD   HL,0   
0E52   22 53 32               LD   (var_intp_stop),HL   
0E55   22 4F 32               LD   (is_literal),HL   
0E58   22 57 32               LD   (var_nesting),HL   
0E5B   22 55 32               LD   (var_state),HL   
0E5E   21 0A 00               LD   HL,10   
0E61   22 5B 32               LD   (var_base),HL   
0E64   21 63 32               LD   HL,start_user   
0E67   22 51 32               LD   (var_here),HL   
0E6A   21 0C 14               LD   HL,header_latest   
0E6D   22 5F 32               LD   (var_latest),HL   
0E70   22 5D 32               LD   (var_latest_str),HL   
0E73   3E 96                  LD   A,rts_low   
0E75   D3 80                  OUT   ($80),A   ; initialise acia
0E77   ED 56                  IM   1   
0E79   FB                     EI      
0E7A   C9                     RET      
0E7B                ENTER:       
0E7B   E1                     POP   HL   
0E7C                ENTER1:      
0E7C   5E                     LD   E,(HL)   
0E7D   23                     INC   HL   
0E7E   56                     LD   D,(HL)   
0E7F   23                     INC   HL   
0E80   E5                     PUSH   HL   
0E81   EB                     EX   DE,HL   
0E82   E9                     JP   (HL)   
0E83                FORTH:       ; for calling forth words from assembly
0E83   21 4D 32               LD   HL,exitAddr   
0E86   E3                     EX   (SP),HL   
0E87   22 4D 32               LD   (exitAddr),HL   
0E8A   EB                     EX   DE,HL   
0E8B   E9                     JP   (HL)   
0E8C                EXIT:        
0E8C   E1                     POP   HL   
0E8D   FD E9                  JP   (IY)   
0E8F                EXIT_FORTH:      
0E8F   C9                     RET      
0E90                          ;*Macro unroll: mCODE "noop",4,0,noop
0E90                HEADER_NOOP:      
0E90   1D 0E                  DW   link   
0E92                LINK:     .SET   HEADER_noop   
0E92   04                     DB   0 + 4   
0E93   6E 6F 6F 70            DB   "noop"   
0E97                NOOP:        
0E97                          ;*Macro unroll:  NEXT
0E97   C3 7B 0E               JP   enter   
0E9A                             ; !        x a-addr --   store cell in memory
0E9A                          ;*Macro unroll: mCODE "!",1,0,STORE
0E9A                HEADER_STORE:      
0E9A   90 0E                  DW   link   
0E9C                LINK:     .SET   HEADER_STORE   
0E9C   01                     DB   0 + 1   
0E9D   21                     DB   "!"   
0E9E                STORE:       
0E9E                          ;*Macro unroll:  ppop H,L
0E9E   60                     LD   H,B   
0E9F   69                     LD   L,C   
0EA0                          ;*Macro unroll:  ppop0 B,C
0EA0   DD 2B                  DEC   IX   
0EA2   DD 46 00               LD   B,(IX+0)   
0EA5   DD 2B                  DEC   IX   
0EA7   DD 4E 00               LD   C,(IX+0)   
0EAA                          ;*Macro unroll:  writeWord HL, B,C
0EAA                          ;*Macro unroll:  writeByte HL, C
0EAA   71                     LD   (HL),C   
0EAB   23                     INC   HL   
0EAC                          ;*Macro unroll:  writeByte HL, B
0EAC   70                     LD   (HL),B   
0EAD   23                     INC   HL   
0EAE                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0EAE   DD 2B                  DEC   IX   ; POP new TOS
0EB0   DD 46 00               LD   B,(IX+0)   
0EB3   DD 2B                  DEC   IX   
0EB5   DD 4E 00               LD   C,(IX+0)   
0EB8                          ;*Macro unroll:  NEXT
0EB8   C3 7B 0E               JP   enter   
0EBB                          ;*Macro unroll: mCODE "@",1,0,FETCH
0EBB                HEADER_FETCH:      
0EBB   9A 0E                  DW   link   
0EBD                LINK:     .SET   HEADER_FETCH   
0EBD   01                     DB   0 + 1   
0EBE   40                     DB   "@"   
0EBF                FETCH:       
0EBF                          ;*Macro unroll:  loadWord H,L, B,C ; HL = TOS
0EBF   69                     LD   L,C   ; HL = TOS
0EC0   60                     LD   H,B   
0EC1                          ;*Macro unroll:  readWord HL, B,C
0EC1   4E                     LD   C,(HL)   
0EC2   23                     INC   HL   
0EC3   46                     LD   B,(HL)   
0EC4   23                     INC   HL   
0EC5                          ;*Macro unroll:  NEXT
0EC5   C3 7B 0E               JP   enter   
0EC8                             ; C!      char c-addr --    store char in memory
0EC8                          ;*Macro unroll: mCODE "c!",2,0,CSTORE
0EC8                HEADER_CSTORE:      
0EC8   BB 0E                  DW   link   
0ECA                LINK:     .SET   HEADER_CSTORE   
0ECA   02                     DB   0 + 2   
0ECB   63 21                  DB   "c!"   
0ECD                CSTORE:      
0ECD                          ;*Macro unroll:  ppop H,L
0ECD   60                     LD   H,B   
0ECE   69                     LD   L,C   
0ECF                          ;*Macro unroll:  ppop0 B,C
0ECF   DD 2B                  DEC   IX   
0ED1   DD 46 00               LD   B,(IX+0)   
0ED4   DD 2B                  DEC   IX   
0ED6   DD 4E 00               LD   C,(IX+0)   
0ED9   71                     LD   (HL),C   
0EDA                          ;*Macro unroll:  ppop0 B,C          ; POP new TOS
0EDA   DD 2B                  DEC   IX   ; POP new TOS
0EDC   DD 46 00               LD   B,(IX+0)   
0EDF   DD 2B                  DEC   IX   
0EE1   DD 4E 00               LD   C,(IX+0)   
0EE4                          ;*Macro unroll:  NEXT
0EE4   C3 7B 0E               JP   enter   
0EE7                             ; C@     c-addr -- char   fetch char from memory
0EE7                          ;*Macro unroll: mCODE "c@",2,0,CFETCH
0EE7                HEADER_CFETCH:      
0EE7   C8 0E                  DW   link   
0EE9                LINK:     .SET   HEADER_CFETCH   
0EE9   02                     DB   0 + 2   
0EEA   63 40                  DB   "c@"   
0EEC                CFETCH:      
0EEC   0A                     LD   A,(BC)   
0EED   4F                     LD   C,A   
0EEE   06 00                  LD   B,0   
0EF0                          ;*Macro unroll:  NEXT
0EF0   C3 7B 0E               JP   enter   
0EF3                             ;z RSP!  a-addr --                  set return stack pointer
0EF3                          ;*Macro unroll: mCODE "rsp!",4,0,RSPSTORE
0EF3                HEADER_RSPSTORE:      
0EF3   E7 0E                  DW   link   
0EF5                LINK:     .SET   HEADER_RSPSTORE   
0EF5   04                     DB   0 + 4   
0EF6   72 73 70 21            DB   "rsp!"   
0EFA                RSPSTORE:      
0EFA                          ;*Macro unroll:  SET_RET_SP B,C
0EFA                          ;*Macro unroll:  loadWord H,L, B,C
0EFA   69                     LD   L,C   
0EFB   60                     LD   H,B   
0EFC   F9                     LD   SP,HL   
0EFD                          ;*Macro unroll: 	ppop0 B,C                      ; POP TOS
0EFD   DD 2B                  DEC   IX   ; POP TOS
0EFF   DD 46 00               LD   B,(IX+0)   
0F02   DD 2B                  DEC   IX   
0F04   DD 4E 00               LD   C,(IX+0)   
0F07                          ;*Macro unroll:  NEXT
0F07   C3 7B 0E               JP   enter   
0F0A                          ;*Macro unroll: mCODE "sp@",3,0,SPFETCH
0F0A                HEADER_SPFETCH:      
0F0A   F3 0E                  DW   link   
0F0C                LINK:     .SET   HEADER_SPFETCH   
0F0C   03                     DB   0 + 3   
0F0D   73 70 40               DB   "sp@"   
0F10                SPFETCH:      
0F10   DD E5                  PUSH   IX   
0F12   E1                     POP   HL   
0F13                          ;*Macro unroll:  ppush H,L
0F13                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
0F13   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
0F16   DD 23                  INC   IX   
0F18   DD 70 00               LD   (IX+0),B   
0F1B   DD 23                  INC   IX   
0F1D   44                     LD   B,H   
0F1E   4D                     LD   C,L   
0F1F                          ;*Macro unroll:  NEXT
0F1F   C3 7B 0E               JP   enter   
0F22                          ;*Macro unroll: mCODE "sp!",3,0,SPSTORE
0F22                HEADER_SPSTORE:      
0F22   0A 0F                  DW   link   
0F24                LINK:     .SET   HEADER_SPSTORE   
0F24   03                     DB   0 + 3   
0F25   73 70 21               DB   "sp!"   
0F28                SPSTORE:      
0F28                          ;*Macro unroll:  ppop H,L
0F28   60                     LD   H,B   
0F29   69                     LD   L,C   
0F2A                          ;*Macro unroll:  ppop0 B,C
0F2A   DD 2B                  DEC   IX   
0F2C   DD 46 00               LD   B,(IX+0)   
0F2F   DD 2B                  DEC   IX   
0F31   DD 4E 00               LD   C,(IX+0)   
0F34   E5                     PUSH   HL   
0F35   DD E1                  POP   IX   
0F37                          ;*Macro unroll:  NEXT
0F37   C3 7B 0E               JP   enter   
0F3A                             ; allocate n bytes of memory                                   ( n -- ) allocate n bytes of memory
0F3A                          ;*Macro unroll: mCODE "allot",5,0,allot               ;
0F3A                HEADER_ALLOT:      ; 
0F3A   22 0F                  DW   link   
0F3C                LINK:     .SET   HEADER_allot   
0F3C   05                     DB   0 + 5   
0F3D   61 6C 6C 6F 74         DB   "allot"   
0F42                ALLOT:       
0F42                          ;*Macro unroll:  ENTER
0F42   CF                     RST   $08   
0F43   60 08 51 0F            DW   here,addstore   ; adds n to here
0F47                          ;*Macro unroll:  EXIT
0F47   8C 0E                  DW   exit   
0F49   C3 7B 0E               JP   enter   
0F4C                          ;*Macro unroll: mCODE "+!",2,0,ADDSTORE               ; (n addr -- )
0F4C                HEADER_ADDSTORE:      ; (n addr -- )
0F4C   3A 0F                  DW   link   
0F4E                LINK:     .SET   HEADER_ADDSTORE   
0F4E   02                     DB   0 + 2   
0F4F   2B 21                  DB   "+!"   
0F51                ADDSTORE:      
0F51                          ;*Macro unroll: 	ppop H, L		            ; HL = address, TOS = amount to add
0F51   60                     LD   H,B   ; HL = address, TOS = amount to add
0F52   69                     LD   L,C   
0F53                          ;*Macro unroll:  ppop0 B,C
0F53   DD 2B                  DEC   IX   
0F55   DD 46 00               LD   B,(IX+0)   
0F58   DD 2B                  DEC   IX   
0F5A   DD 4E 00               LD   C,(IX+0)   
0F5D   7E                     LD   A,(HL)   
0F5E   81                     ADD   A,C   ; add TOS at (HL),
0F5F   77                     LD   (HL),A   
0F60   23                     INC   HL   
0F61   7E                     LD   A,(HL)   
0F62   88                     ADC   A,B   
0F63   77                     LD   (HL),A   
0F64                          ;*Macro unroll: 	ppop0 B,C                      ; clear param stack
0F64   DD 2B                  DEC   IX   ; clear param stack
0F66   DD 46 00               LD   B,(IX+0)   
0F69   DD 2B                  DEC   IX   
0F6B   DD 4E 00               LD   C,(IX+0)   
0F6E                          ;*Macro unroll:  NEXT
0F6E   C3 7B 0E               JP   enter   
0F71                          ;*Macro unroll: mCODE ",",1,0,COMMA
0F71                HEADER_COMMA:      
0F71   4C 0F                  DW   link   
0F73                LINK:     .SET   HEADER_COMMA   
0F73   01                     DB   0 + 1   
0F74   2C                     DB   ","   
0F75                COMMA:       
0F75   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0F78                          ;*Macro unroll: 	writeWord HL, B,C
0F78                          ;*Macro unroll:  writeByte HL, C
0F78   71                     LD   (HL),C   
0F79   23                     INC   HL   
0F7A                          ;*Macro unroll:  writeByte HL, B
0F7A   70                     LD   (HL),B   
0F7B   23                     INC   HL   
0F7C   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0F7F                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0F7F   DD 2B                  DEC   IX   ; cleanup TOS
0F81   DD 46 00               LD   B,(IX+0)   
0F84   DD 2B                  DEC   IX   
0F86   DD 4E 00               LD   C,(IX+0)   
0F89                          ;*Macro unroll:  NEXT
0F89   C3 7B 0E               JP   enter   
0F8C                          ;*Macro unroll: mCODE "c,",1,0,CCOMMA
0F8C                HEADER_CCOMMA:      
0F8C   71 0F                  DW   link   
0F8E                LINK:     .SET   HEADER_CCOMMA   
0F8E   01                     DB   0 + 1   
0F8F   63 2C                  DB   "c,"   
0F91                CCOMMA:      
0F91                          ;*Macro unroll:  ppush0 H,L
0F91   DD 75 00               LD   (IX+0),L   
0F94   DD 23                  INC   IX   
0F96   DD 74 00               LD   (IX+0),H   
0F99   DD 23                  INC   IX   
0F9B   2A 51 32               LD   HL,(VAR_HERE)   ; HERE
0F9E   71                     LD   (HL),C   ; Store DE at memory pointed to by VAR_HERE
0F9F   23                     INC   HL   
0FA0   22 51 32               LD   (VAR_HERE),HL   ; Update HERE (incremented)
0FA3                          ;*Macro unroll:  ppop0 H,L
0FA3   DD 2B                  DEC   IX   
0FA5   DD 66 00               LD   H,(IX+0)   
0FA8   DD 2B                  DEC   IX   
0FAA   DD 6E 00               LD   L,(IX+0)   
0FAD                          ;*Macro unroll: 	ppop0 B,C		        ; cleanup TOS
0FAD   DD 2B                  DEC   IX   ; cleanup TOS
0FAF   DD 46 00               LD   B,(IX+0)   
0FB2   DD 2B                  DEC   IX   
0FB4   DD 4E 00               LD   C,(IX+0)   
0FB7                          ;*Macro unroll:  NEXT
0FB7   C3 7B 0E               JP   enter   
0FBA   25 46 69 72 74 68 20 2D 20 61 20 5A 38 30 20 46 6F 72 74 68 20 62 79 20 4A 6F 68 6E 20 48 61 72 64 79 0D 0A 0D 0A TXT_INTRO:   .PSTR   "Firth - a Z80 Forth by John Hardy\r\n\r\n"   
0FE0   02 0D 0A     TXT_NEWLINE:   .PSTR   "\r\n"   
0FE3   04 0D 0A 3E 20 TXT_PROMPT:   .PSTR   "\r\n> "   
0FE8   0A 0D 0A 44 6F 6E 65 21 20 0D 0A DONE:   .PSTR   "\r\nDone! \r\n"   
0FF3   0A 46 61 69 6C 65 64 3A 20 0D 0A FAILED:   .PSTR   "Failed: \r\n"   
0FFE                             ; serial I/O
0FFE                INITSERIAL:      
0FFE   21 00 00               LD   HL,0   
1001   22 43 30               LD   (serbufused),HL   
1004   21 00 30               LD   HL,serbuf   
1007   22 3F 30               LD   (serinptr),HL   
100A   22 41 30               LD   (serrdptr),HL   
100D   21 4D 30               LD   HL,linebuf   
1010   22 45 30               LD   (lineBufStart),HL   
1013   22 49 30               LD   (currkey),HL   
1016   22 4B 30               LD   (linebuftop),HL   
1019   21 80 00               LD   HL,LINE_BUFSIZE   
101C   22 47 30               LD   (lineBufSize),HL   
101F   3E 96                  LD   A,rts_low   
1021   D3 80                  OUT   ($80),A   ; initialise acia
1023   ED 56                  IM   1   
1025   FB                     EI      
1026   C9                     RET      
1027                SERIALIN:      
1027   F5                     PUSH   AF   
1028   E5                     PUSH   HL   
1029   DB 80                  IN   A,($80)   
102B   E6 01                  AND   $01   ; Check if interupt due to read lineBuf full
102D                          ;*Macro unroll:  _if nz
102D   C2 33 10               JP   nz,L_M_1828S31   
1030   C3 30 10               JP   $   
1033                          ;*Macro unroll:  STRUC_PUSH $
1033                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1033                STRUC_12:   .SET   STRUC_11   
1033                STRUC_11:   .SET   STRUC_10   
1033                STRUC_10:   .SET   STRUC_9   
1033                STRUC_9:   .SET   STRUC_8   
1033                STRUC_8:   .SET   STRUC_7   
1033                STRUC_7:   .SET   STRUC_6   
1033                STRUC_6:   .SET   STRUC_5   
1033                STRUC_5:   .SET   STRUC_4   
1033                STRUC_4:   .SET   STRUC_3   
1033                STRUC_3:   .SET   STRUC_2   
1033                STRUC_2:   .SET   STRUC_TOP   
1033                STRUC_TOP:   .SET   $   
1033                L_M_1828S31:      
1033   DB 81                  IN   A,($81)   
1035   F5                     PUSH   AF   
1036   3A 43 30               LD   A,(serBufUsed)   
1039   FE 3F                  CP   SER_BUFSIZE   ; If full then ignore
103B                          ;*Macro unroll:  _if z
103B   CA 41 10               JP   z,L_M_1833S36   
103E   C3 3E 10               JP   $   
1041                          ;*Macro unroll:  STRUC_PUSH $
1041                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1041                STRUC_12:   .SET   STRUC_11   
1041                STRUC_11:   .SET   STRUC_10   
1041                STRUC_10:   .SET   STRUC_9   
1041                STRUC_9:   .SET   STRUC_8   
1041                STRUC_8:   .SET   STRUC_7   
1041                STRUC_7:   .SET   STRUC_6   
1041                STRUC_6:   .SET   STRUC_5   
1041                STRUC_5:   .SET   STRUC_4   
1041                STRUC_4:   .SET   STRUC_3   
1041                STRUC_3:   .SET   STRUC_2   
1041                STRUC_2:   .SET   STRUC_TOP   
1041                STRUC_TOP:   .SET   $   
1041                L_M_1833S36:      
1041   F1                     POP   AF   
1042                          ;*Macro unroll:  _else
1042   C3 42 10               JP   $   
1045                          ;*Macro unroll:  STRUC_FWD
1045                CUR_ADR:   .SET   $   
103F                          .ORG   STRUC_TOP - 2   
103F   45 10                  DW   CUR_ADR   
1045                          .ORG   CUR_ADR   
1045                STRUC_TOP:   .SET   $   
1045   2A 3F 30               LD   HL,(serInPtr)   
1048   23                     INC   HL   
1049   7D                     LD   A,L   ; Only need to check low byte becasuse lineBuf<256 bytes
104A   FE 3F                  CP   (serBuf + SER_BUFSIZE) & $FF   
104C                          ;*Macro unroll:  _if z
104C   CA 52 10               JP   z,L_M_1840S43   
104F   C3 4F 10               JP   $   
1052                          ;*Macro unroll:  STRUC_PUSH $
1052                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1052                STRUC_12:   .SET   STRUC_11   
1052                STRUC_11:   .SET   STRUC_10   
1052                STRUC_10:   .SET   STRUC_9   
1052                STRUC_9:   .SET   STRUC_8   
1052                STRUC_8:   .SET   STRUC_7   
1052                STRUC_7:   .SET   STRUC_6   
1052                STRUC_6:   .SET   STRUC_5   
1052                STRUC_5:   .SET   STRUC_4   
1052                STRUC_4:   .SET   STRUC_3   
1052                STRUC_3:   .SET   STRUC_2   
1052                STRUC_2:   .SET   STRUC_TOP   
1052                STRUC_TOP:   .SET   $   
1052                L_M_1840S43:      
1052   21 00 30               LD   HL,serBuf   
1055                          ;*Macro unroll:  _endif
1055                          ;*Macro unroll:  STRUC_FWD
1055                CUR_ADR:   .SET   $   
1050                          .ORG   STRUC_TOP - 2   
1050   55 10                  DW   CUR_ADR   
1055                          .ORG   CUR_ADR   
1055                          ;*Macro unroll:  STRUC_POP
1055                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1055                STRUC_TOP:   .SET   STRUC_2   
1055                STRUC_2:   .SET   STRUC_3   
1055                STRUC_3:   .SET   STRUC_4   
1055                STRUC_4:   .SET   STRUC_5   
1055                STRUC_5:   .SET   STRUC_6   
1055                STRUC_6:   .SET   STRUC_7   
1055                STRUC_7:   .SET   STRUC_8   
1055                STRUC_8:   .SET   STRUC_9   
1055                STRUC_9:   .SET   STRUC_10   
1055                STRUC_10:   .SET   STRUC_11   
1055                STRUC_11:   .SET   STRUC_12   
1055                STRUC_12:   .SET   0   
1055   22 3F 30               LD   (serInPtr),HL   
1058   F1                     POP   AF   
1059   77                     LD   (HL),A   
105A   3A 43 30               LD   A,(serBufUsed)   
105D   3C                     INC   A   
105E   32 43 30               LD   (serBufUsed),A   
1061   FE 30                  CP   SER_FULLSIZE   
1063                          ;*Macro unroll:  _if nc
1063   D2 69 10               JP   nc,L_M_1850S53   
1066   C3 66 10               JP   $   
1069                          ;*Macro unroll:  STRUC_PUSH $
1069                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1069                STRUC_12:   .SET   STRUC_11   
1069                STRUC_11:   .SET   STRUC_10   
1069                STRUC_10:   .SET   STRUC_9   
1069                STRUC_9:   .SET   STRUC_8   
1069                STRUC_8:   .SET   STRUC_7   
1069                STRUC_7:   .SET   STRUC_6   
1069                STRUC_6:   .SET   STRUC_5   
1069                STRUC_5:   .SET   STRUC_4   
1069                STRUC_4:   .SET   STRUC_3   
1069                STRUC_3:   .SET   STRUC_2   
1069                STRUC_2:   .SET   STRUC_TOP   
1069                STRUC_TOP:   .SET   $   
1069                L_M_1850S53:      
1069   3E D6                  LD   A,RTS_HIGH   
106B   D3 80                  OUT   ($80),A   
106D                          ;*Macro unroll:  _endif
106D                          ;*Macro unroll:  STRUC_FWD
106D                CUR_ADR:   .SET   $   
1067                          .ORG   STRUC_TOP - 2   
1067   6D 10                  DW   CUR_ADR   
106D                          .ORG   CUR_ADR   
106D                          ;*Macro unroll:  STRUC_POP
106D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
106D                STRUC_TOP:   .SET   STRUC_2   
106D                STRUC_2:   .SET   STRUC_3   
106D                STRUC_3:   .SET   STRUC_4   
106D                STRUC_4:   .SET   STRUC_5   
106D                STRUC_5:   .SET   STRUC_6   
106D                STRUC_6:   .SET   STRUC_7   
106D                STRUC_7:   .SET   STRUC_8   
106D                STRUC_8:   .SET   STRUC_9   
106D                STRUC_9:   .SET   STRUC_10   
106D                STRUC_10:   .SET   STRUC_11   
106D                STRUC_11:   .SET   STRUC_12   
106D                STRUC_12:   .SET   0   
106D                          ;*Macro unroll:  _endif
106D                          ;*Macro unroll:  STRUC_FWD
106D                CUR_ADR:   .SET   $   
1043                          .ORG   STRUC_TOP - 2   
1043   6D 10                  DW   CUR_ADR   
106D                          .ORG   CUR_ADR   
106D                          ;*Macro unroll:  STRUC_POP
106D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
106D                STRUC_TOP:   .SET   STRUC_2   
106D                STRUC_2:   .SET   STRUC_3   
106D                STRUC_3:   .SET   STRUC_4   
106D                STRUC_4:   .SET   STRUC_5   
106D                STRUC_5:   .SET   STRUC_6   
106D                STRUC_6:   .SET   STRUC_7   
106D                STRUC_7:   .SET   STRUC_8   
106D                STRUC_8:   .SET   STRUC_9   
106D                STRUC_9:   .SET   STRUC_10   
106D                STRUC_10:   .SET   STRUC_11   
106D                STRUC_11:   .SET   STRUC_12   
106D                STRUC_12:   .SET   0   
106D                          ;*Macro unroll:  _endif
106D                          ;*Macro unroll:  STRUC_FWD
106D                CUR_ADR:   .SET   $   
1031                          .ORG   STRUC_TOP - 2   
1031   6D 10                  DW   CUR_ADR   
106D                          .ORG   CUR_ADR   
106D                          ;*Macro unroll:  STRUC_POP
106D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
106D                STRUC_TOP:   .SET   STRUC_2   
106D                STRUC_2:   .SET   STRUC_3   
106D                STRUC_3:   .SET   STRUC_4   
106D                STRUC_4:   .SET   STRUC_5   
106D                STRUC_5:   .SET   STRUC_6   
106D                STRUC_6:   .SET   STRUC_7   
106D                STRUC_7:   .SET   STRUC_8   
106D                STRUC_8:   .SET   STRUC_9   
106D                STRUC_9:   .SET   STRUC_10   
106D                STRUC_10:   .SET   STRUC_11   
106D                STRUC_11:   .SET   STRUC_12   
106D                STRUC_12:   .SET   0   
106D   E1                     POP   HL   
106E   F1                     POP   AF   
106F   FB                     EI      
1070   C9                     RET      
1071                             ; 
1071                             ; getc - input
1071                             ; returns: A = input char
1071                             ; 
1071                GETC:        
1071                          IF   TESTMODE   
1071   E5                     PUSH   HL   
1072   2A 61 32               LD   HL,(char_pointer)   
1075   7E                     LD   A,(HL)   
1076   23                     INC   HL   
1077   22 61 32               LD   (char_pointer),HL   
107A   E1                     POP   HL   
107B   C9                     RET      
107C                          ELSE      
                              ;*Macro unroll:  _do
                              JR   L_M_1874S81   
                              JP   $   
                              ;*Macro unroll:  DLOOP_PUSH $
                    DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
                    DLOOP_12:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_TOP   
                    DLOOP_TOP:   .SET   $   
                    L_M_1874S81:      
                              LD   A,(serBufUsed)   
                              CP   $00   
                              ;*Macro unroll:  _until nz
                              JP   nz,DLOOP_TOP - 3   
                              ;*Macro unroll:  DLOOP_FWD               ; needed?
                    CUR_ADR:   .SET   $   ; needed?
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  _enddo
                              JP   DLOOP_TOP   
                              ;*Macro unroll:  DLOOP_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   DLOOP_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  DLOOP_POP
                    DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
                    DLOOP_TOP:   .SET   DLOOP_2   
                    DLOOP_2:   .SET   DLOOP_3   
                    DLOOP_3:   .SET   DLOOP_4   
                    DLOOP_4:   .SET   DLOOP_5   
                    DLOOP_5:   .SET   DLOOP_6   
                    DLOOP_6:   .SET   DLOOP_7   
                    DLOOP_7:   .SET   DLOOP_8   
                    DLOOP_8:   .SET   DLOOP_9   
                    DLOOP_9:   .SET   DLOOP_10   
                    DLOOP_10:   .SET   DLOOP_11   
                    DLOOP_11:   .SET   DLOOP_12   
                    DLOOP_12:   .SET   0   
                              PUSH   HL   
                              LD   HL,(serRdPtr)   
                              INC   HL   
                              LD   A,L   ; Only need to check low byte because lineBuf<256 bytes
                              CP   (serBuf + SER_BUFSIZE) & $FF   
                              ;*Macro unroll:  _if z
                              JP   z,L_M_1884S91   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1884S91:      
                              LD   HL,serBuf   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              DI      
                              LD   (serRdPtr),HL   
                              LD   A,(serBufUsed)   
                              DEC   A   
                              LD   (serBufUsed),A   
                              CP   SER_EMPTYSIZE   
                              ;*Macro unroll:  _if c
                              JP   c,L_M_1893S100   
                              JP   $   
                              ;*Macro unroll:  STRUC_PUSH $
                    STRUC_COUNT:   .SET   STRUC_COUNT + 1   
                    STRUC_12:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_TOP   
                    STRUC_TOP:   .SET   $   
                    L_M_1893S100:      
                              LD   A,RTS_LOW   
                              OUT   ($80),A   
                              ;*Macro unroll:  _endif
                              ;*Macro unroll:  STRUC_FWD
                    CUR_ADR:   .SET   $   
                              .ORG   STRUC_TOP - 2   
                              DW   CUR_ADR   
                              .ORG   CUR_ADR   
                              ;*Macro unroll:  STRUC_POP
                    STRUC_COUNT:   .SET   STRUC_COUNT - 1   
                    STRUC_TOP:   .SET   STRUC_2   
                    STRUC_2:   .SET   STRUC_3   
                    STRUC_3:   .SET   STRUC_4   
                    STRUC_4:   .SET   STRUC_5   
                    STRUC_5:   .SET   STRUC_6   
                    STRUC_6:   .SET   STRUC_7   
                    STRUC_7:   .SET   STRUC_8   
                    STRUC_8:   .SET   STRUC_9   
                    STRUC_9:   .SET   STRUC_10   
                    STRUC_10:   .SET   STRUC_11   
                    STRUC_11:   .SET   STRUC_12   
                    STRUC_12:   .SET   0   
                              LD   A,(HL)   
                              EI      
                              POP   HL   
                              RET      ; Char ready in A
107C                          ENDIF      
107C                             ; 
107C                             ; putc - output a character
107C                             ; params: A = char to output
107C                             ; 
107C                PUTC:        
107C   F5                     PUSH   AF   ; Store character
107D                          ;*Macro unroll:  _do
107D   18 03                  JR   L_M_1908S117   
107F   C3 7F 10               JP   $   
1082                          ;*Macro unroll:  DLOOP_PUSH $
1082                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1082                DLOOP_12:   .SET   DLOOP_11   
1082                DLOOP_11:   .SET   DLOOP_10   
1082                DLOOP_10:   .SET   DLOOP_9   
1082                DLOOP_9:   .SET   DLOOP_8   
1082                DLOOP_8:   .SET   DLOOP_7   
1082                DLOOP_7:   .SET   DLOOP_6   
1082                DLOOP_6:   .SET   DLOOP_5   
1082                DLOOP_5:   .SET   DLOOP_4   
1082                DLOOP_4:   .SET   DLOOP_3   
1082                DLOOP_3:   .SET   DLOOP_2   
1082                DLOOP_2:   .SET   DLOOP_TOP   
1082                DLOOP_TOP:   .SET   $   
1082                L_M_1908S117:      
1082   DB 80                  IN   A,($80)   ; Status byte
1084   CB 4F                  BIT   1,A   ; Set Zero flag if still transmitting character
1086                          ;*Macro unroll:  _until nz
1086   C2 7F 10               JP   nz,DLOOP_TOP - 3   
1089                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1089                CUR_ADR:   .SET   $   ; needed?
1080                          .ORG   DLOOP_TOP - 2   
1080   89 10                  DW   CUR_ADR   
1089                          .ORG   CUR_ADR   
1089                          ;*Macro unroll:  _enddo
1089   C3 82 10               JP   DLOOP_TOP   
108C                          ;*Macro unroll:  DLOOP_FWD
108C                CUR_ADR:   .SET   $   
1080                          .ORG   DLOOP_TOP - 2   
1080   8C 10                  DW   CUR_ADR   
108C                          .ORG   CUR_ADR   
108C                          ;*Macro unroll:  DLOOP_POP
108C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
108C                DLOOP_TOP:   .SET   DLOOP_2   
108C                DLOOP_2:   .SET   DLOOP_3   
108C                DLOOP_3:   .SET   DLOOP_4   
108C                DLOOP_4:   .SET   DLOOP_5   
108C                DLOOP_5:   .SET   DLOOP_6   
108C                DLOOP_6:   .SET   DLOOP_7   
108C                DLOOP_7:   .SET   DLOOP_8   
108C                DLOOP_8:   .SET   DLOOP_9   
108C                DLOOP_9:   .SET   DLOOP_10   
108C                DLOOP_10:   .SET   DLOOP_11   
108C                DLOOP_11:   .SET   DLOOP_12   
108C                DLOOP_12:   .SET   0   
108C   F1                     POP   AF   ; Retrieve character
108D   D3 81                  OUT   ($81),A   ; Output the character
108F   C9                     RET      
1090                INPUTREADY:      
1090   3A 43 30               LD   A,(serBufUsed)   
1093   FE 00                  CP   $0   
1095   C9                     RET      
1096                             ; 
1096                             ; getline - input line of text ***
1096                             ; params: HL = addr, DE = max (currently up to 255)
1096                             ; returns: BC = length - up to 255
1096                             ; 
1096                GETLINE:      
1096   F5                     PUSH   AF   
1097   E5                     PUSH   HL   
1098                          ;*Macro unroll:  PRINT_STR TXT_PROMPT
1098                          ;*Macro unroll:  ppush0 D,E
1098   DD 73 00               LD   (IX+0),E   
109B   DD 23                  INC   IX   
109D   DD 72 00               LD   (IX+0),D   
10A0   DD 23                  INC   IX   
10A2   11 E3 0F               LD   DE,TXT_PROMPT   
10A5   CD 5B 11               CALL   printPStr   
10A8                          ;*Macro unroll:  ppop0 D,E
10A8   DD 2B                  DEC   IX   
10AA   DD 56 00               LD   D,(IX+0)   
10AD   DD 2B                  DEC   IX   
10AF   DD 5E 00               LD   E,(IX+0)   
10B2   E1                     POP   HL   
10B3   E5                     PUSH   HL   
10B4   01 00 00               LD   BC,0   
10B7                          ;*Macro unroll:  _do
10B7   18 03                  JR   L_M_1932S144   
10B9   C3 B9 10               JP   $   
10BC                          ;*Macro unroll:  DLOOP_PUSH $
10BC                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10BC                DLOOP_12:   .SET   DLOOP_11   
10BC                DLOOP_11:   .SET   DLOOP_10   
10BC                DLOOP_10:   .SET   DLOOP_9   
10BC                DLOOP_9:   .SET   DLOOP_8   
10BC                DLOOP_8:   .SET   DLOOP_7   
10BC                DLOOP_7:   .SET   DLOOP_6   
10BC                DLOOP_6:   .SET   DLOOP_5   
10BC                DLOOP_5:   .SET   DLOOP_4   
10BC                DLOOP_4:   .SET   DLOOP_3   
10BC                DLOOP_3:   .SET   DLOOP_2   
10BC                DLOOP_2:   .SET   DLOOP_TOP   
10BC                DLOOP_TOP:   .SET   $   
10BC                L_M_1932S144:      
10BC                          ;*Macro unroll:  _do
10BC   18 03                  JR   L_M_1933S145   
10BE   C3 BE 10               JP   $   
10C1                          ;*Macro unroll:  DLOOP_PUSH $
10C1                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
10C1                DLOOP_12:   .SET   DLOOP_11   
10C1                DLOOP_11:   .SET   DLOOP_10   
10C1                DLOOP_10:   .SET   DLOOP_9   
10C1                DLOOP_9:   .SET   DLOOP_8   
10C1                DLOOP_8:   .SET   DLOOP_7   
10C1                DLOOP_7:   .SET   DLOOP_6   
10C1                DLOOP_6:   .SET   DLOOP_5   
10C1                DLOOP_5:   .SET   DLOOP_4   
10C1                DLOOP_4:   .SET   DLOOP_3   
10C1                DLOOP_3:   .SET   DLOOP_2   
10C1                DLOOP_2:   .SET   DLOOP_TOP   
10C1                DLOOP_TOP:   .SET   $   
10C1                L_M_1933S145:      
10C1   CD 71 10               CALL   getc   
10C4   FE 08                  CP   $08   
10C6                          ;*Macro unroll:  _if z
10C6   CA CC 10               JP   z,L_M_1936S148   
10C9   C3 C9 10               JP   $   
10CC                          ;*Macro unroll:  STRUC_PUSH $
10CC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10CC                STRUC_12:   .SET   STRUC_11   
10CC                STRUC_11:   .SET   STRUC_10   
10CC                STRUC_10:   .SET   STRUC_9   
10CC                STRUC_9:   .SET   STRUC_8   
10CC                STRUC_8:   .SET   STRUC_7   
10CC                STRUC_7:   .SET   STRUC_6   
10CC                STRUC_6:   .SET   STRUC_5   
10CC                STRUC_5:   .SET   STRUC_4   
10CC                STRUC_4:   .SET   STRUC_3   
10CC                STRUC_3:   .SET   STRUC_2   
10CC                STRUC_2:   .SET   STRUC_TOP   
10CC                STRUC_TOP:   .SET   $   
10CC                L_M_1936S148:      
10CC                          ;*Macro unroll:  checkZeroWord B,C
10CC   79                     LD   A,C   
10CD   B0                     OR   B   
10CE                          ;*Macro unroll:  _if nz
10CE   C2 D4 10               JP   nz,L_M_1938S150   
10D1   C3 D1 10               JP   $   
10D4                          ;*Macro unroll:  STRUC_PUSH $
10D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10D4                STRUC_12:   .SET   STRUC_11   
10D4                STRUC_11:   .SET   STRUC_10   
10D4                STRUC_10:   .SET   STRUC_9   
10D4                STRUC_9:   .SET   STRUC_8   
10D4                STRUC_8:   .SET   STRUC_7   
10D4                STRUC_7:   .SET   STRUC_6   
10D4                STRUC_6:   .SET   STRUC_5   
10D4                STRUC_5:   .SET   STRUC_4   
10D4                STRUC_4:   .SET   STRUC_3   
10D4                STRUC_3:   .SET   STRUC_2   
10D4                STRUC_2:   .SET   STRUC_TOP   
10D4                STRUC_TOP:   .SET   $   
10D4                L_M_1938S150:      
10D4   2B                     DEC   HL   
10D5   0B                     DEC   BC   
10D6   3E 08                  LD   a,$08   
10D8   CD 7C 10               CALL   putc   
10DB   CD 7D 11               CALL   printSpace   
10DE   3E 08                  LD   A,$08   
10E0   CD 7C 10               CALL   putc   
10E3                          ;*Macro unroll:  _endif
10E3                          ;*Macro unroll:  STRUC_FWD
10E3                CUR_ADR:   .SET   $   
10D2                          .ORG   STRUC_TOP - 2   
10D2   E3 10                  DW   CUR_ADR   
10E3                          .ORG   CUR_ADR   
10E3                          ;*Macro unroll:  STRUC_POP
10E3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10E3                STRUC_TOP:   .SET   STRUC_2   
10E3                STRUC_2:   .SET   STRUC_3   
10E3                STRUC_3:   .SET   STRUC_4   
10E3                STRUC_4:   .SET   STRUC_5   
10E3                STRUC_5:   .SET   STRUC_6   
10E3                STRUC_6:   .SET   STRUC_7   
10E3                STRUC_7:   .SET   STRUC_8   
10E3                STRUC_8:   .SET   STRUC_9   
10E3                STRUC_9:   .SET   STRUC_10   
10E3                STRUC_10:   .SET   STRUC_11   
10E3                STRUC_11:   .SET   STRUC_12   
10E3                STRUC_12:   .SET   0   
10E3                          ;*Macro unroll:  _else
10E3   C3 E3 10               JP   $   
10E6                          ;*Macro unroll:  STRUC_FWD
10E6                CUR_ADR:   .SET   $   
10CA                          .ORG   STRUC_TOP - 2   
10CA   E6 10                  DW   CUR_ADR   
10E6                          .ORG   CUR_ADR   
10E6                STRUC_TOP:   .SET   $   
10E6   77                     LD   (HL),A   
10E7   23                     INC   HL   
10E8   03                     INC   BC   
10E9   CB 7F                  BIT   7,a   
10EB                          ;*Macro unroll:  _if z
10EB   CA F1 10               JP   z,L_M_1952S164   
10EE   C3 EE 10               JP   $   
10F1                          ;*Macro unroll:  STRUC_PUSH $
10F1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
10F1                STRUC_12:   .SET   STRUC_11   
10F1                STRUC_11:   .SET   STRUC_10   
10F1                STRUC_10:   .SET   STRUC_9   
10F1                STRUC_9:   .SET   STRUC_8   
10F1                STRUC_8:   .SET   STRUC_7   
10F1                STRUC_7:   .SET   STRUC_6   
10F1                STRUC_6:   .SET   STRUC_5   
10F1                STRUC_5:   .SET   STRUC_4   
10F1                STRUC_4:   .SET   STRUC_3   
10F1                STRUC_3:   .SET   STRUC_2   
10F1                STRUC_2:   .SET   STRUC_TOP   
10F1                STRUC_TOP:   .SET   $   
10F1                L_M_1952S164:      
10F1   CD 7C 10               CALL   putc   
10F4                          ;*Macro unroll:  _endif
10F4                          ;*Macro unroll:  STRUC_FWD
10F4                CUR_ADR:   .SET   $   
10EF                          .ORG   STRUC_TOP - 2   
10EF   F4 10                  DW   CUR_ADR   
10F4                          .ORG   CUR_ADR   
10F4                          ;*Macro unroll:  STRUC_POP
10F4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
10F4                STRUC_TOP:   .SET   STRUC_2   
10F4                STRUC_2:   .SET   STRUC_3   
10F4                STRUC_3:   .SET   STRUC_4   
10F4                STRUC_4:   .SET   STRUC_5   
10F4                STRUC_5:   .SET   STRUC_6   
10F4                STRUC_6:   .SET   STRUC_7   
10F4                STRUC_7:   .SET   STRUC_8   
10F4                STRUC_8:   .SET   STRUC_9   
10F4                STRUC_9:   .SET   STRUC_10   
10F4                STRUC_10:   .SET   STRUC_11   
10F4                STRUC_11:   .SET   STRUC_12   
10F4                STRUC_12:   .SET   0   
10F4   FE 0D                  CP   "\r"   
10F6   28 0B                  JR   z,getLineCheck   
10F8   FE 0A                  CP   "\n"   
10FA   28 07                  JR   z,getLineCheck   
10FC   7B                     LD   A,E   
10FD   B9                     CP   C   
10FE   38 03                  JR   c,getLineCheck   
1100                          ;*Macro unroll:  _endif
1100                          ;*Macro unroll:  STRUC_FWD
1100                CUR_ADR:   .SET   $   
10E4                          .ORG   STRUC_TOP - 2   
10E4   00 11                  DW   CUR_ADR   
1100                          .ORG   CUR_ADR   
1100                          ;*Macro unroll:  STRUC_POP
1100                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1100                STRUC_TOP:   .SET   STRUC_2   
1100                STRUC_2:   .SET   STRUC_3   
1100                STRUC_3:   .SET   STRUC_4   
1100                STRUC_4:   .SET   STRUC_5   
1100                STRUC_5:   .SET   STRUC_6   
1100                STRUC_6:   .SET   STRUC_7   
1100                STRUC_7:   .SET   STRUC_8   
1100                STRUC_8:   .SET   STRUC_9   
1100                STRUC_9:   .SET   STRUC_10   
1100                STRUC_10:   .SET   STRUC_11   
1100                STRUC_11:   .SET   STRUC_12   
1100                STRUC_12:   .SET   0   
1100                          ;*Macro unroll:  _enddo
1100   C3 C1 10               JP   DLOOP_TOP   
1103                          ;*Macro unroll:  DLOOP_FWD
1103                CUR_ADR:   .SET   $   
10BF                          .ORG   DLOOP_TOP - 2   
10BF   03 11                  DW   CUR_ADR   
1103                          .ORG   CUR_ADR   
1103                          ;*Macro unroll:  DLOOP_POP
1103                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1103                DLOOP_TOP:   .SET   DLOOP_2   
1103                DLOOP_2:   .SET   DLOOP_3   
1103                DLOOP_3:   .SET   DLOOP_4   
1103                DLOOP_4:   .SET   DLOOP_5   
1103                DLOOP_5:   .SET   DLOOP_6   
1103                DLOOP_6:   .SET   DLOOP_7   
1103                DLOOP_7:   .SET   DLOOP_8   
1103                DLOOP_8:   .SET   DLOOP_9   
1103                DLOOP_9:   .SET   DLOOP_10   
1103                DLOOP_10:   .SET   DLOOP_11   
1103                DLOOP_11:   .SET   DLOOP_12   
1103                DLOOP_12:   .SET   0   
1103                GETLINECHECK:      
1103   3E 00                  LD   a,0   
1105   B9                     CP   c   
1106                          ;*Macro unroll:  _until nz
1106   C2 B9 10               JP   nz,DLOOP_TOP - 3   
1109                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1109                CUR_ADR:   .SET   $   ; needed?
10BA                          .ORG   DLOOP_TOP - 2   
10BA   09 11                  DW   CUR_ADR   
1109                          .ORG   CUR_ADR   
1109                          ;*Macro unroll:  _enddo
1109   C3 BC 10               JP   DLOOP_TOP   
110C                          ;*Macro unroll:  DLOOP_FWD
110C                CUR_ADR:   .SET   $   
10BA                          .ORG   DLOOP_TOP - 2   
10BA   0C 11                  DW   CUR_ADR   
110C                          .ORG   CUR_ADR   
110C                          ;*Macro unroll:  DLOOP_POP
110C                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
110C                DLOOP_TOP:   .SET   DLOOP_2   
110C                DLOOP_2:   .SET   DLOOP_3   
110C                DLOOP_3:   .SET   DLOOP_4   
110C                DLOOP_4:   .SET   DLOOP_5   
110C                DLOOP_5:   .SET   DLOOP_6   
110C                DLOOP_6:   .SET   DLOOP_7   
110C                DLOOP_7:   .SET   DLOOP_8   
110C                DLOOP_8:   .SET   DLOOP_9   
110C                DLOOP_9:   .SET   DLOOP_10   
110C                DLOOP_10:   .SET   DLOOP_11   
110C                DLOOP_11:   .SET   DLOOP_12   
110C                DLOOP_12:   .SET   0   
110C   F1                     POP   AF   
110D   E1                     POP   HL   
110E   CD 74 11               CALL   printCR   
1111   C9                     RET      
1112                PRINTROUTINE:      
1112                          ;*Macro unroll:  _do
1112   18 03                  JR   L_M_1974S188   
1114   C3 14 11               JP   $   
1117                          ;*Macro unroll:  DLOOP_PUSH $
1117                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1117                DLOOP_12:   .SET   DLOOP_11   
1117                DLOOP_11:   .SET   DLOOP_10   
1117                DLOOP_10:   .SET   DLOOP_9   
1117                DLOOP_9:   .SET   DLOOP_8   
1117                DLOOP_8:   .SET   DLOOP_7   
1117                DLOOP_7:   .SET   DLOOP_6   
1117                DLOOP_6:   .SET   DLOOP_5   
1117                DLOOP_5:   .SET   DLOOP_4   
1117                DLOOP_4:   .SET   DLOOP_3   
1117                DLOOP_3:   .SET   DLOOP_2   
1117                DLOOP_2:   .SET   DLOOP_TOP   
1117                DLOOP_TOP:   .SET   $   
1117                L_M_1974S188:      
1117   1A                     LD   A,(DE)   
1118   CD 7C 10               CALL   putc   
111B   13                     INC   DE   
111C   0B                     DEC   BC   
111D                          ;*Macro unroll:  checkZeroWord B,C
111D   79                     LD   A,C   
111E   B0                     OR   B   
111F                          ;*Macro unroll:  _until z
111F   CA 14 11               JP   z,DLOOP_TOP - 3   
1122                          ;*Macro unroll:  DLOOP_FWD               ; needed?
1122                CUR_ADR:   .SET   $   ; needed?
1115                          .ORG   DLOOP_TOP - 2   
1115   22 11                  DW   CUR_ADR   
1122                          .ORG   CUR_ADR   
1122                          ;*Macro unroll:  _enddo
1122   C3 17 11               JP   DLOOP_TOP   
1125                          ;*Macro unroll:  DLOOP_FWD
1125                CUR_ADR:   .SET   $   
1115                          .ORG   DLOOP_TOP - 2   
1115   25 11                  DW   CUR_ADR   
1125                          .ORG   CUR_ADR   
1125                          ;*Macro unroll:  DLOOP_POP
1125                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1125                DLOOP_TOP:   .SET   DLOOP_2   
1125                DLOOP_2:   .SET   DLOOP_3   
1125                DLOOP_3:   .SET   DLOOP_4   
1125                DLOOP_4:   .SET   DLOOP_5   
1125                DLOOP_5:   .SET   DLOOP_6   
1125                DLOOP_6:   .SET   DLOOP_7   
1125                DLOOP_7:   .SET   DLOOP_8   
1125                DLOOP_8:   .SET   DLOOP_9   
1125                DLOOP_9:   .SET   DLOOP_10   
1125                DLOOP_10:   .SET   DLOOP_11   
1125                DLOOP_11:   .SET   DLOOP_12   
1125                DLOOP_12:   .SET   0   
1125   C9                     RET      
1126                             ; 
1126                             ; getKey -  inputs a line buffered character
1126                             ; params: none
1126                             ; returns: A = character,
1126                             ; 
1126                GETKEY:      
1126   E5                     PUSH   HL   
1127   D5                     PUSH   DE   
1128   C5                     PUSH   BC   
1129   2A 49 30               LD   HL,(currkey)   
112C   ED 5B 4B 30            LD   DE,(lineBufTop)   
1130   B7                     OR   A   
1131   ED 52                  SBC   HL,DE   ; exhausted the input lineBuf?
1133                          ;*Macro unroll:  _if nc
1133   D2 39 11               JP   nc,L_M_1996S212   
1136   C3 36 11               JP   $   
1139                          ;*Macro unroll:  STRUC_PUSH $
1139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1139                STRUC_12:   .SET   STRUC_11   
1139                STRUC_11:   .SET   STRUC_10   
1139                STRUC_10:   .SET   STRUC_9   
1139                STRUC_9:   .SET   STRUC_8   
1139                STRUC_8:   .SET   STRUC_7   
1139                STRUC_7:   .SET   STRUC_6   
1139                STRUC_6:   .SET   STRUC_5   
1139                STRUC_5:   .SET   STRUC_4   
1139                STRUC_4:   .SET   STRUC_3   
1139                STRUC_3:   .SET   STRUC_2   
1139                STRUC_2:   .SET   STRUC_TOP   
1139                STRUC_TOP:   .SET   $   
1139                L_M_1996S212:      
1139   2A 45 30               LD   HL,(lineBufStart)   ; lineBuf
113C   ED 5B 47 30            LD   DE,(lineBufSize)   ; LINE_BUFSIZE
1140   CD 96 10               CALL   getline   
1143   21 4D 30               LD   HL,lineBuf   
1146   22 49 30               LD   (currkey),HL   
1149   B7                     OR   A   
114A   ED 4A                  ADC   HL,BC   ; lineBuf+DE = lineBufTop
114C   22 4B 30               LD   (lineBufTop),HL   
114F                          ;*Macro unroll:  _endif
114F                          ;*Macro unroll:  STRUC_FWD
114F                CUR_ADR:   .SET   $   
1137                          .ORG   STRUC_TOP - 2   
1137   4F 11                  DW   CUR_ADR   
114F                          .ORG   CUR_ADR   
114F                          ;*Macro unroll:  STRUC_POP
114F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
114F                STRUC_TOP:   .SET   STRUC_2   
114F                STRUC_2:   .SET   STRUC_3   
114F                STRUC_3:   .SET   STRUC_4   
114F                STRUC_4:   .SET   STRUC_5   
114F                STRUC_5:   .SET   STRUC_6   
114F                STRUC_6:   .SET   STRUC_7   
114F                STRUC_7:   .SET   STRUC_8   
114F                STRUC_8:   .SET   STRUC_9   
114F                STRUC_9:   .SET   STRUC_10   
114F                STRUC_10:   .SET   STRUC_11   
114F                STRUC_11:   .SET   STRUC_12   
114F                STRUC_12:   .SET   0   
114F   2A 49 30               LD   HL,(currkey)   
1152   7E                     LD   A,(HL)   ; get next key from input lineBuf
1153   23                     INC   HL   
1154   22 49 30               LD   (currkey),HL   ; increment currkey
1157   C1                     POP   BC   
1158   D1                     POP   DE   
1159   E1                     POP   HL   
115A   C9                     RET      
115B                             ; 
115B                             ; Output pascal string ***
115B                             ; params: DE = addr
115B                             ; 
115B                PRINTPSTR:      
115B   F5                     PUSH   AF   
115C   C5                     PUSH   BC   
115D   D5                     PUSH   DE   
115E   1A                     LD   A,(DE)   
115F   4F                     LD   C,A   
1160   06 00                  LD   B,0   
1162   13                     INC   DE   
1163   CD 12 11               CALL   printRoutine   
1166   D1                     POP   DE   
1167   C1                     POP   BC   
1168   F1                     POP   AF   
1169   C9                     RET      
116A                             ; 
116A                             ; Output string
116A                             ; params: DE = addr, BC = length
116A                             ; 
116A                PRINTSTR:      
116A   F5                     PUSH   AF   
116B   C5                     PUSH   BC   
116C   D5                     PUSH   DE   
116D   CD 12 11               CALL   printRoutine   
1170   D1                     POP   DE   
1171   C1                     POP   BC   
1172   F1                     POP   AF   
1173   C9                     RET      
1174                PRINTCR:      
1174   D5                     PUSH   DE   
1175   11 E0 0F               LD   DE,TXT_NEWLINE   
1178   CD 5B 11               CALL   printPStr   
117B   D1                     POP   DE   
117C   C9                     RET      
117D                PRINTSPACE:      
117D   F5                     PUSH   AF   
117E   3E 20                  LD   A," "   
1180   CD 7C 10               CALL   putc   
1183   F1                     POP   AF   
1184   C9                     RET      
1185                          ;*Macro unroll: mCODE "lit",3,0,LIT
1185                HEADER_LIT:      
1185   8C 0F                  DW   link   
1187                LINK:     .SET   HEADER_LIT   
1187   03                     DB   0 + 3   
1188   6C 69 74               DB   "lit"   
118B                LIT:         
118B                          ;*Macro unroll: 	ppush0 B,C                      ; pushTOS
118B   DD 71 00               LD   (IX+0),C   ; pushTOS
118E   DD 23                  INC   IX   
1190   DD 70 00               LD   (IX+0),B   
1193   DD 23                  INC   IX   
1195   E1                     POP   HL   ; pop address of next Forth word in HL
1196                          ;*Macro unroll: 	readWord HL, B,C                ; read next word and push on TOS, inc HL by 2
1196   4E                     LD   C,(HL)   ; read next word and push on TOS, inc HL by 2
1197   23                     INC   HL   
1198   46                     LD   B,(HL)   
1199   23                     INC   HL   
119A                          ;*Macro unroll:  NEXT1
119A   C3 7C 0E               JP   enter1   
119D                          ;*Macro unroll: mCODE "rot",3,0,ROT       ; x1 x2 x3 -- x2 x3 x1
119D                HEADER_ROT:      ; x1 x2 x3 -- x2 x3 x1
119D   85 11                  DW   link   
119F                LINK:     .SET   HEADER_ROT   
119F   03                     DB   0 + 3   
11A0   72 6F 74               DB   "rot"   
11A3                ROT:         
11A3                             ; x3 in BC
11A3                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
11A3   DD 2B                  DEC   IX   ; x2 in DE
11A5   DD 56 00               LD   D,(IX+0)   
11A8   DD 2B                  DEC   IX   
11AA   DD 5E 00               LD   E,(IX+0)   
11AD                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
11AD   DD 2B                  DEC   IX   ; x1 in HL
11AF   DD 66 00               LD   H,(IX+0)   
11B2   DD 2B                  DEC   IX   
11B4   DD 6E 00               LD   L,(IX+0)   
11B7                          ;*Macro unroll:  ppush0 D,E              ; x2 on stack
11B7   DD 73 00               LD   (IX+0),E   ; x2 on stack
11BA   DD 23                  INC   IX   
11BC   DD 72 00               LD   (IX+0),D   
11BF   DD 23                  INC   IX   
11C1                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x2 x3 x1
11C1                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11C1   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11C4   DD 23                  INC   IX   
11C6   DD 70 00               LD   (IX+0),B   
11C9   DD 23                  INC   IX   
11CB   44                     LD   B,H   ; PUSH x1 - x2 x3 x1
11CC   4D                     LD   C,L   
11CD                             ; x1 in BC
11CD                          ;*Macro unroll:  NEXT
11CD   C3 7B 0E               JP   enter   
11D0                          ;*Macro unroll: mCODE "-rot",4,0,NROT     ; x1 x2 x3 -- x3 x1 x2
11D0                HEADER_NROT:      ; x1 x2 x3 -- x3 x1 x2
11D0   9D 11                  DW   link   
11D2                LINK:     .SET   HEADER_NROT   
11D2   04                     DB   0 + 4   
11D3   2D 72 6F 74            DB   "-rot"   
11D7                NROT:        
11D7                             ; x3 in BC
11D7                          ;*Macro unroll:  ppop0 D,E               ; x2 in DE
11D7   DD 2B                  DEC   IX   ; x2 in DE
11D9   DD 56 00               LD   D,(IX+0)   
11DC   DD 2B                  DEC   IX   
11DE   DD 5E 00               LD   E,(IX+0)   
11E1                          ;*Macro unroll:  ppop0 H,L               ; x1 in HL
11E1   DD 2B                  DEC   IX   ; x1 in HL
11E3   DD 66 00               LD   H,(IX+0)   
11E6   DD 2B                  DEC   IX   
11E8   DD 6E 00               LD   L,(IX+0)   
11EB                          ;*Macro unroll:  ppush H,L               ; PUSH x1 - x3 x1
11EB                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11EB   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11EE   DD 23                  INC   IX   
11F0   DD 70 00               LD   (IX+0),B   
11F3   DD 23                  INC   IX   
11F5   44                     LD   B,H   ; PUSH x1 - x3 x1
11F6   4D                     LD   C,L   
11F7                          ;*Macro unroll:  ppush D,E               ; PUSH x2 - x3 x1 x2
11F7                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
11F7   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
11FA   DD 23                  INC   IX   
11FC   DD 70 00               LD   (IX+0),B   
11FF   DD 23                  INC   IX   
1201   42                     LD   B,D   ; PUSH x2 - x3 x1 x2
1202   4B                     LD   C,E   
1203                             ; x2 in BC
1203                          ;*Macro unroll:  NEXT
1203   C3 7B 0E               JP   enter   
1206                          ;*Macro unroll: mCODE "dup",3,0,DUPP        ; x -- x x
1206                HEADER_DUPP:      ; x -- x x
1206   D0 11                  DW   link   
1208                LINK:     .SET   HEADER_DUPP   
1208   03                     DB   0 + 3   
1209   64 75 70               DB   "dup"   
120C                DUPP:        
120C                          ;*Macro unroll:  ppush0 B,C
120C   DD 71 00               LD   (IX+0),C   
120F   DD 23                  INC   IX   
1211   DD 70 00               LD   (IX+0),B   
1214   DD 23                  INC   IX   
1216                          ;*Macro unroll:  NEXT
1216   C3 7B 0E               JP   enter   
1219                             ; SWAP     x1 x2 -- x2 x1    swap top two items
1219                          ;*Macro unroll: mCODE "swap",4,0,SWAP      ; x1 x2 -- x2 x1
1219                HEADER_SWAP:      ; x1 x2 -- x2 x1
1219   06 12                  DW   link   
121B                LINK:     .SET   HEADER_SWAP   
121B   04                     DB   0 + 4   
121C   73 77 61 70            DB   "swap"   
1220                SWAP:        
1220                          ;*Macro unroll:  ppop0 D,E
1220   DD 2B                  DEC   IX   
1222   DD 56 00               LD   D,(IX+0)   
1225   DD 2B                  DEC   IX   
1227   DD 5E 00               LD   E,(IX+0)   
122A                          ;*Macro unroll:  ppush D,E
122A                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
122A   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
122D   DD 23                  INC   IX   
122F   DD 70 00               LD   (IX+0),B   
1232   DD 23                  INC   IX   
1234   42                     LD   B,D   
1235   4B                     LD   C,E   
1236                          ;*Macro unroll:  NEXT
1236   C3 7B 0E               JP   enter   
1239                          ;*Macro unroll: mCODE "drop",4,0,DROP      ; x --
1239                HEADER_DROP:      ; x --
1239   19 12                  DW   link   
123B                LINK:     .SET   HEADER_DROP   
123B   04                     DB   0 + 4   
123C   64 72 6F 70            DB   "drop"   
1240                DROP:        
1240                          ;*Macro unroll:  ppop0 B,C		    ; drop top of stack
1240   DD 2B                  DEC   IX   ; drop top of stack
1242   DD 46 00               LD   B,(IX+0)   
1245   DD 2B                  DEC   IX   
1247   DD 4E 00               LD   C,(IX+0)   
124A                          ;*Macro unroll:  NEXT
124A   C3 7B 0E               JP   enter   
124D                             ; OVER    x1 x2 -- x1 x2 x1
124D                          ;*Macro unroll: mCODE "over",4,0,OVER
124D                HEADER_OVER:      
124D   39 12                  DW   link   
124F                LINK:     .SET   HEADER_OVER   
124F   04                     DB   0 + 4   
1250   6F 76 65 72            DB   "over"   
1254                OVER:        
1254                          ;*Macro unroll:  ppop0 H,L
1254   DD 2B                  DEC   IX   
1256   DD 66 00               LD   H,(IX+0)   
1259   DD 2B                  DEC   IX   
125B   DD 6E 00               LD   L,(IX+0)   
125E                          ;*Macro unroll:  ppush0 H,L
125E   DD 75 00               LD   (IX+0),L   
1261   DD 23                  INC   IX   
1263   DD 74 00               LD   (IX+0),H   
1266   DD 23                  INC   IX   
1268                          ;*Macro unroll:  ppush H,L
1268                          ;*Macro unroll:  ppush0 B,C             ; push TOS reg pair
1268   DD 71 00               LD   (IX+0),C   ; push TOS reg pair
126B   DD 23                  INC   IX   
126D   DD 70 00               LD   (IX+0),B   
1270   DD 23                  INC   IX   
1272   44                     LD   B,H   
1273   4D                     LD   C,L   
1274                          ;*Macro unroll:  NEXT
1274   C3 7B 0E               JP   enter   
1277                             ; >R    ( x -- ) ( R: -- x )  Move  x from TOS to the return stack.
1277                          ;*Macro unroll: mCODE ">r",2,0,TOR
1277                HEADER_TOR:      
1277   4D 12                  DW   link   
1279                LINK:     .SET   HEADER_TOR   
1279   02                     DB   0 + 2   
127A   3E 72                  DB   ">r"   
127C                TOR:         
127C   E1                     POP   HL   
127D   C5                     PUSH   BC   
127E   E5                     PUSH   HL   
127F                          ;*Macro unroll:  ppop0 B,C
127F   DD 2B                  DEC   IX   
1281   DD 46 00               LD   B,(IX+0)   
1284   DD 2B                  DEC   IX   
1286   DD 4E 00               LD   C,(IX+0)   
1289                          ;*Macro unroll:  NEXT
1289   C3 7B 0E               JP   enter   
128C                             ; R>    ( -- x ) ( R: x -- )  Move x from the return stack to TOS
128C                          ;*Macro unroll: mCODE "r>",2,0,RFROM
128C                HEADER_RFROM:      
128C   77 12                  DW   link   
128E                LINK:     .SET   HEADER_RFROM   
128E   02                     DB   0 + 2   
128F   72 3E                  DB   "r>"   
1291                RFROM:       
1291                          ;*Macro unroll:  ppush0 B,C
1291   DD 71 00               LD   (IX+0),C   
1294   DD 23                  INC   IX   
1296   DD 70 00               LD   (IX+0),B   
1299   DD 23                  INC   IX   
129B   E1                     POP   HL   
129C   C1                     POP   BC   
129D   E5                     PUSH   HL   
129E                          ;*Macro unroll:  NEXT
129E   C3 7B 0E               JP   enter   
12A1                LITSTR:      ; pushes ptr to string and length on stack
12A1   CF                     RST   $08   ; enter forth
12A2   91 12                  DW   rfrom   
12A4   BB 12 54 12 54 12 CE 00 DW   count,over,over,plus   
12AC   7C 12                  DW   tor   
12AE                          ;*Macro unroll:  EXIT
12AE   8C 0E                  DW   exit   
12B0   C3 7B 0E               JP   enter   
12B3                             ; count extract string length from pascal string  ( ptr -- ptr+1 len )
12B3                          ;*Macro unroll: mCODE "count",5,0,count
12B3                HEADER_COUNT:      
12B3   8C 12                  DW   link   
12B5                LINK:     .SET   HEADER_count   
12B5   05                     DB   0 + 5   
12B6   63 6F 75 6E 74         DB   "count"   
12BB                COUNT:       
12BB                          ;*Macro unroll:  ENTER
12BB   CF                     RST   $08   
12BC   0C 12 8B 11 01 00 CE 00 DW   DUPP,lit,1,plus   ; ( ptr -- ptr ptr+1)
12C4   20 12 EC 0E            DW   swap,cfetch   ; ( ptr ptr+1 -- ptr+1 len)
12C8                          ;*Macro unroll:  EXIT
12C8   8C 0E                  DW   exit   
12CA   C3 7B 0E               JP   enter   
12CD                             ; using 00bbMDBzc0luTWkhLCQyMg== because it's surprisingly difficult
12CD                             ; to define the name s" using asm80
12CD                          ;*Macro unroll: mCODE {"s",$22},2,msk_immed,squote
12CD                HEADER_SQUOTE:      
12CD   B3 12                  DW   link   
12CF                LINK:     .SET   HEADER_squote   
12CF   82                     DB   msk_immed + 2   
12D0   73 22                  DB   "s",$22   
12D2                SQUOTE:      
12D2   18 04                  JR   qt   
12D4                          ;*Macro unroll: mCODE $22,1,msk_immed,qt
12D4                HEADER_QT:      
12D4   CD 12                  DW   link   
12D6                LINK:     .SET   HEADER_qt   
12D6   81                     DB   msk_immed + 1   
12D7   22                     DB   $22   
12D8                QT:          
12D8                          ;*Macro unroll:  ENTER
12D8   CF                     RST   $08   
12D9   94 08 BF 0E D6 01      DW   state,fetch,zequal   
12DF                          ;*Macro unroll:  cIf
12DF   38 07 00 00            DW   QBRAN,0   
12E3                          ;*Macro unroll:  CPL_PUSH $
12E3                CPL_COUNT:   .SET   CPL_COUNT + 1   
12E3                CPL_10:   .SET   CPL_9   
12E3                CPL_9:    .SET   CPL_8   
12E3                CPL_8:    .SET   CPL_7   
12E3                CPL_7:    .SET   CPL_6   
12E3                CPL_6:    .SET   CPL_5   
12E3                CPL_5:    .SET   CPL_4   
12E3                CPL_4:    .SET   CPL_3   
12E3                CPL_3:    .SET   CPL_2   
12E3                CPL_2:    .SET   CPL_TOP   
12E3                CPL_TOP:   .SET   $   
12E3   8B 11 22 00            DW   lit,$22   ; delim
12E7   8B 11 3F 00            DW   lit,63   ; limit 63 + length
12EB   F7 08 BF 0E            DW   latestStr,fetch   
12EF   8B 11 CD 30 60 01      DW   lit,wordBuf,equal   
12F5                          ;*Macro unroll:  cIf
12F5   38 07 00 00            DW   QBRAN,0   
12F9                          ;*Macro unroll:  CPL_PUSH $
12F9                CPL_COUNT:   .SET   CPL_COUNT + 1   
12F9                CPL_10:   .SET   CPL_9   
12F9                CPL_9:    .SET   CPL_8   
12F9                CPL_8:    .SET   CPL_7   
12F9                CPL_7:    .SET   CPL_6   
12F9                CPL_6:    .SET   CPL_5   
12F9                CPL_5:    .SET   CPL_4   
12F9                CPL_4:    .SET   CPL_3   
12F9                CPL_3:    .SET   CPL_2   
12F9                CPL_2:    .SET   CPL_TOP   
12F9                CPL_TOP:   .SET   $   
12F9   8B 11 0D 31            DW   lit,wordBuf2   
12FD                          ;*Macro unroll:  cElse
12FD   55 07 00 00            DW   BRAN,0   
1301                          ;*Macro unroll:  cBRANCH_FWD
1301                CUR_ADR:   .SET   $   
12F7                          .ORG   CPL_TOP - 2   
12F7   0A 00                  DW   CUR_ADR - CPL_TOP + 2   
1301                          .ORG   CUR_ADR   
1301                CPL_TOP:   .SET   $   
1301   8B 11 CD 30            DW   lit,wordBuf   
1305                          ;*Macro unroll:  cEndIf
1305                          ;*Macro unroll:  cBRANCH_FWD
1305                CUR_ADR:   .SET   $   
12FF                          .ORG   CPL_TOP - 2   
12FF   06 00                  DW   CUR_ADR - CPL_TOP + 2   
1305                          .ORG   CUR_ADR   
1305                          ;*Macro unroll:  CPL_POP
1305                CPL_COUNT:   .SET   CPL_COUNT - 1   
1305                CPL_TOP:   .SET   CPL_2   
1305                CPL_2:    .SET   CPL_3   
1305                CPL_3:    .SET   CPL_4   
1305                CPL_4:    .SET   CPL_5   
1305                CPL_5:    .SET   CPL_6   
1305                CPL_6:    .SET   CPL_7   
1305                CPL_7:    .SET   CPL_8   
1305                CPL_8:    .SET   CPL_9   
1305                CPL_9:    .SET   CPL_10   
1305                CPL_10:   .SET   0   
1305   F7 08 9E 0E            DW   latestStr,store   ; store here in latestStr
1309   F7 08 BF 0E            DW   latestStr,fetch   
130D   BF 0B BB 12            DW   xword,count   
1311                          ;*Macro unroll:  cElse
1311   55 07 00 00            DW   BRAN,0   
1315                          ;*Macro unroll:  cBRANCH_FWD
1315                CUR_ADR:   .SET   $   
12E1                          .ORG   CPL_TOP - 2   
12E1   34 00                  DW   CUR_ADR - CPL_TOP + 2   
1315                          .ORG   CUR_ADR   
1315                CPL_TOP:   .SET   $   
1315   8B 11 A1 12 75 0F      DW   lit,litstr,comma   
131B   8B 11 22 00 07 0B      DW   lit,$22,word   
1321   EC 0E 41 03            DW   cfetch,ONEP   
1325   42 0F                  DW   allot   
1327                          ;*Macro unroll:  cEndif
1327                          ;*Macro unroll:  cBRANCH_FWD
1327                CUR_ADR:   .SET   $   
1313                          .ORG   CPL_TOP - 2   
1313   14 00                  DW   CUR_ADR - CPL_TOP + 2   
1327                          .ORG   CUR_ADR   
1327                          ;*Macro unroll:  CPL_POP
1327                CPL_COUNT:   .SET   CPL_COUNT - 1   
1327                CPL_TOP:   .SET   CPL_2   
1327                CPL_2:    .SET   CPL_3   
1327                CPL_3:    .SET   CPL_4   
1327                CPL_4:    .SET   CPL_5   
1327                CPL_5:    .SET   CPL_6   
1327                CPL_6:    .SET   CPL_7   
1327                CPL_7:    .SET   CPL_8   
1327                CPL_8:    .SET   CPL_9   
1327                CPL_9:    .SET   CPL_10   
1327                CPL_10:   .SET   0   
1327                          ;*Macro unroll:  EXIT
1327   8C 0E                  DW   exit   
1329   C3 7B 0E               JP   enter   
132C                             ; 
132C                             ; compareStr - string equal
132C                             ; params: de = string1, HL = string2, BC = length
132C                             ; returns: a = -1, 0, 1, HL = mismatch char if a != 0
132C                             ; destroys: de, HL, BC
132C                             ; 
132C                COMPARESTR:      
132C                          ;*Macro unroll:  checkZeroWord B,C    ; test for Count=0
132C   79                     LD   A,C   ; test for Count=0
132D   B0                     OR   B   
132E                          ;*Macro unroll:  _if nz          ; length zero = match
132E   C2 34 13               JP   nz,L_M_2155S56   ; length zero = match
1331   C3 31 13               JP   $   
1334                          ;*Macro unroll:  STRUC_PUSH $
1334                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1334                STRUC_12:   .SET   STRUC_11   
1334                STRUC_11:   .SET   STRUC_10   
1334                STRUC_10:   .SET   STRUC_9   
1334                STRUC_9:   .SET   STRUC_8   
1334                STRUC_8:   .SET   STRUC_7   
1334                STRUC_7:   .SET   STRUC_6   
1334                STRUC_6:   .SET   STRUC_5   
1334                STRUC_5:   .SET   STRUC_4   
1334                STRUC_4:   .SET   STRUC_3   
1334                STRUC_3:   .SET   STRUC_2   
1334                STRUC_2:   .SET   STRUC_TOP   
1334                STRUC_TOP:   .SET   $   
1334                L_M_2155S56:      
1334                          ;*Macro unroll:  _do
1334   18 03                  JR   L_M_2156S57   
1336   C3 36 13               JP   $   
1339                          ;*Macro unroll:  DLOOP_PUSH $
1339                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
1339                DLOOP_12:   .SET   DLOOP_11   
1339                DLOOP_11:   .SET   DLOOP_10   
1339                DLOOP_10:   .SET   DLOOP_9   
1339                DLOOP_9:   .SET   DLOOP_8   
1339                DLOOP_8:   .SET   DLOOP_7   
1339                DLOOP_7:   .SET   DLOOP_6   
1339                DLOOP_6:   .SET   DLOOP_5   
1339                DLOOP_5:   .SET   DLOOP_4   
1339                DLOOP_4:   .SET   DLOOP_3   
1339                DLOOP_3:   .SET   DLOOP_2   
1339                DLOOP_2:   .SET   DLOOP_TOP   
1339                DLOOP_TOP:   .SET   $   
1339                L_M_2156S57:      
1339   1A                     LD   A,(DE)   
133A   13                     INC   DE   
133B   ED A1                  CPI      
133D                          ;*Macro unroll:  _if nz          ; char mismatch: exit
133D   C2 43 13               JP   nz,L_M_2160S61   ; char mismatch: exit
1340   C3 40 13               JP   $   
1343                          ;*Macro unroll:  STRUC_PUSH $
1343                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
1343                STRUC_12:   .SET   STRUC_11   
1343                STRUC_11:   .SET   STRUC_10   
1343                STRUC_10:   .SET   STRUC_9   
1343                STRUC_9:   .SET   STRUC_8   
1343                STRUC_8:   .SET   STRUC_7   
1343                STRUC_7:   .SET   STRUC_6   
1343                STRUC_6:   .SET   STRUC_5   
1343                STRUC_5:   .SET   STRUC_4   
1343                STRUC_4:   .SET   STRUC_3   
1343                STRUC_3:   .SET   STRUC_2   
1343                STRUC_2:   .SET   STRUC_TOP   
1343                STRUC_TOP:   .SET   $   
1343                L_M_2160S61:      
1343   2B                     DEC   HL   ; point at mismatch char
1344   BE                     CP   (HL)   ; set carry if char1 < char2
1345   9F                     SBC   A,A   
1346   F6 01                  OR   1   ; a = ff if carry, 1 if no carry
1348   C9                     RET      
1349                          ;*Macro unroll:  _endif
1349                          ;*Macro unroll:  STRUC_FWD
1349                CUR_ADR:   .SET   $   
1341                          .ORG   STRUC_TOP - 2   
1341   49 13                  DW   CUR_ADR   
1349                          .ORG   CUR_ADR   
1349                          ;*Macro unroll:  STRUC_POP
1349                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
1349                STRUC_TOP:   .SET   STRUC_2   
1349                STRUC_2:   .SET   STRUC_3   
1349                STRUC_3:   .SET   STRUC_4   
1349                STRUC_4:   .SET   STRUC_5   
1349                STRUC_5:   .SET   STRUC_6   
1349                STRUC_6:   .SET   STRUC_7   
1349                STRUC_7:   .SET   STRUC_8   
1349                STRUC_8:   .SET   STRUC_9   
1349                STRUC_9:   .SET   STRUC_10   
1349                STRUC_10:   .SET   STRUC_11   
1349                STRUC_11:   .SET   STRUC_12   
1349                STRUC_12:   .SET   0   
1349                          ;*Macro unroll:  _until po
1349   E2 36 13               JP   po,DLOOP_TOP - 3   
134C                          ;*Macro unroll:  DLOOP_FWD               ; needed?
134C                CUR_ADR:   .SET   $   ; needed?
1337                          .ORG   DLOOP_TOP - 2   
1337   4C 13                  DW   CUR_ADR   
134C                          .ORG   CUR_ADR   
134C                          ;*Macro unroll:  _enddo
134C   C3 39 13               JP   DLOOP_TOP   
134F                          ;*Macro unroll:  DLOOP_FWD
134F                CUR_ADR:   .SET   $   
1337                          .ORG   DLOOP_TOP - 2   
1337   4F 13                  DW   CUR_ADR   
134F                          .ORG   CUR_ADR   
134F                          ;*Macro unroll:  DLOOP_POP
134F                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
134F                DLOOP_TOP:   .SET   DLOOP_2   
134F                DLOOP_2:   .SET   DLOOP_3   
134F                DLOOP_3:   .SET   DLOOP_4   
134F                DLOOP_4:   .SET   DLOOP_5   
134F                DLOOP_5:   .SET   DLOOP_6   
134F                DLOOP_6:   .SET   DLOOP_7   
134F                DLOOP_7:   .SET   DLOOP_8   
134F                DLOOP_8:   .SET   DLOOP_9   
134F                DLOOP_9:   .SET   DLOOP_10   
134F                DLOOP_10:   .SET   DLOOP_11   
134F                DLOOP_11:   .SET   DLOOP_12   
134F                DLOOP_12:   .SET   0   
134F                          ;*Macro unroll:  _endif
134F                          ;*Macro unroll:  STRUC_FWD
134F                CUR_ADR:   .SET   $   
1332                          .ORG   STRUC_TOP - 2   
1332   4F 13                  DW   CUR_ADR   
134F                          .ORG   CUR_ADR   
134F                          ;*Macro unroll:  STRUC_POP
134F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
134F                STRUC_TOP:   .SET   STRUC_2   
134F                STRUC_2:   .SET   STRUC_3   
134F                STRUC_3:   .SET   STRUC_4   
134F                STRUC_4:   .SET   STRUC_5   
134F                STRUC_5:   .SET   STRUC_6   
134F                STRUC_6:   .SET   STRUC_7   
134F                STRUC_7:   .SET   STRUC_8   
134F                STRUC_8:   .SET   STRUC_9   
134F                STRUC_9:   .SET   STRUC_10   
134F                STRUC_10:   .SET   STRUC_11   
134F                STRUC_11:   .SET   STRUC_12   
134F                STRUC_12:   .SET   0   
134F                             ; count exhausted & no mismatch found
134F   3E 00                  LD   A,0   ; a=0 (s1=s2)
1351   C9                     RET      
1352                          ;*Macro unroll: mCODE "pack",4,0,pack             ; ( adr1 len adr2 -- adr2 )
1352                HEADER_PACK:      ; ( adr1 len adr2 -- adr2 )
1352   D4 12                  DW   link   
1354                LINK:     .SET   HEADER_pack   
1354   04                     DB   0 + 4   
1355   70 61 63 6B            DB   "pack"   
1359                PACK:        
1359                          ;*Macro unroll:  ppop D,E                        ; DE = adr2, BC = len
1359   50                     LD   D,B   ; DE = adr2, BC = len
135A   59                     LD   E,C   
135B                          ;*Macro unroll:  ppop0 B,C
135B   DD 2B                  DEC   IX   
135D   DD 46 00               LD   B,(IX+0)   
1360   DD 2B                  DEC   IX   
1362   DD 4E 00               LD   C,(IX+0)   
1365   D5                     PUSH   DE   
1366                          ;*Macro unroll:  ppop0 H,L                       ; HL = adr1
1366   DD 2B                  DEC   IX   ; HL = adr1
1368   DD 66 00               LD   H,(IX+0)   
136B   DD 2B                  DEC   IX   
136D   DD 6E 00               LD   L,(IX+0)   
1370   79                     LD   A,C   
1371   12                     LD   (DE),A   ; write length byte to adr2
1372   13                     INC   DE   ; adr2 += 1
1373   ED B0                  LDIR      
1375   C1                     POP   BC   ; TOS = adr2
1376                          ;*Macro unroll:  NEXT
1376   C3 7B 0E               JP   enter   
1379                             ; .s print stack (non-destructively)
1379                          ;*Macro unroll: mCODE ".s",2,0,dots                   ; ( -- )
1379                HEADER_DOTS:      ; ( -- )
1379   52 13                  DW   link   
137B                LINK:     .SET   HEADER_dots   
137B   02                     DB   0 + 2   
137C   2E 73                  DB   ".s"   
137E                DOTS:        
137E                          ;*Macro unroll:  ENTER
137E   CF                     RST   $08   
137F   10 0F                  DW   spfetch   ; psp
1381   C4 08 BF 0E            DW   sp0,fetch   ; psp0
1385   1E 01                  DW   SUBB   
1387   8B 11 00 00 B9 01      DW   lit,0,greaterThan   
138D                          ;*Macro unroll:  cif
138D   38 07 00 00            DW   QBRAN,0   
1391                          ;*Macro unroll:  CPL_PUSH $
1391                CPL_COUNT:   .SET   CPL_COUNT + 1   
1391                CPL_10:   .SET   CPL_9   
1391                CPL_9:    .SET   CPL_8   
1391                CPL_8:    .SET   CPL_7   
1391                CPL_7:    .SET   CPL_6   
1391                CPL_6:    .SET   CPL_5   
1391                CPL_5:    .SET   CPL_4   
1391                CPL_4:    .SET   CPL_3   
1391                CPL_3:    .SET   CPL_2   
1391                CPL_2:    .SET   CPL_TOP   
1391                CPL_TOP:   .SET   $   
1391   C4 08 BF 0E 8B 11 02 00 CE 00 DW   sp0,fetch,lit,2,plus   
139B                          ;*Macro unroll:  cdo
139B   55 07 06 00            DW   BRAN,6   
139F   55 07 00 00            DW   BRAN,0   
13A3                          ;*Macro unroll:  CPL_PUSH $
13A3                CPL_COUNT:   .SET   CPL_COUNT + 1   
13A3                CPL_10:   .SET   CPL_9   
13A3                CPL_9:    .SET   CPL_8   
13A3                CPL_8:    .SET   CPL_7   
13A3                CPL_7:    .SET   CPL_6   
13A3                CPL_6:    .SET   CPL_5   
13A3                CPL_5:    .SET   CPL_4   
13A3                CPL_4:    .SET   CPL_3   
13A3                CPL_3:    .SET   CPL_2   
13A3                CPL_2:    .SET   CPL_TOP   
13A3                CPL_TOP:   .SET   $   
13A3   0C 12                  DW   DUPP   
13A5   10 0F 8B 11 02 00 1E 01 DW   spfetch,lit,2,SUBB   
13AD   20 12 1E 01 D6 01      DW   swap,SUBB,zequal   
13B3                          ;*Macro unroll:  cuntil
13B3   D6 01 38 07 E8 FF      DW   ZEQUAL,QBRAN,CPL_TOP - $ - 8   
13B9   0C 12 BF 0E 81 09      DW   DUPP,fetch,dot   
13BF   8B 11 02 00 CE 00      DW   lit,2,plus   
13C5                          ;*Macro unroll:  cenddo
13C5   55 07 DC FF            DW   BRAN,CPL_TOP - $ - 2   
13C9                          ;*Macro unroll:  cBRANCH_FWD
13C9                CUR_ADR:   .SET   $   
13A1                          .ORG   CPL_TOP - 2   
13A1   28 00                  DW   CUR_ADR - CPL_TOP + 2   
13C9                          .ORG   CUR_ADR   
13C9                          ;*Macro unroll:  CPL_POP
13C9                CPL_COUNT:   .SET   CPL_COUNT - 1   
13C9                CPL_TOP:   .SET   CPL_2   
13C9                CPL_2:    .SET   CPL_3   
13C9                CPL_3:    .SET   CPL_4   
13C9                CPL_4:    .SET   CPL_5   
13C9                CPL_5:    .SET   CPL_6   
13C9                CPL_6:    .SET   CPL_7   
13C9                CPL_7:    .SET   CPL_8   
13C9                CPL_8:    .SET   CPL_9   
13C9                CPL_9:    .SET   CPL_10   
13C9                CPL_10:   .SET   0   
13C9   40 12                  DW   drop   
13CB                          ;*Macro unroll:  cendif
13CB                          ;*Macro unroll:  cBRANCH_FWD
13CB                CUR_ADR:   .SET   $   
138F                          .ORG   CPL_TOP - 2   
138F   3C 00                  DW   CUR_ADR - CPL_TOP + 2   
13CB                          .ORG   CUR_ADR   
13CB                          ;*Macro unroll:  CPL_POP
13CB                CPL_COUNT:   .SET   CPL_COUNT - 1   
13CB                CPL_TOP:   .SET   CPL_2   
13CB                CPL_2:    .SET   CPL_3   
13CB                CPL_3:    .SET   CPL_4   
13CB                CPL_4:    .SET   CPL_5   
13CB                CPL_5:    .SET   CPL_6   
13CB                CPL_6:    .SET   CPL_7   
13CB                CPL_7:    .SET   CPL_8   
13CB                CPL_8:    .SET   CPL_9   
13CB                CPL_9:    .SET   CPL_10   
13CB                CPL_10:   .SET   0   
13CB                          ;*Macro unroll:  EXIT
13CB   8C 0E                  DW   exit   
13CD   C3 7B 0E               JP   enter   
13D0                          ;*Macro unroll: mCODE "words", 5, 0, WORDS
13D0                HEADER_WORDS:      
13D0   79 13                  DW   link   
13D2                LINK:     .SET   HEADER_WORDS   
13D2   05                     DB   0 + 5   
13D3   77 6F 72 64 73         DB   "words"   
13D8                WORDS:       
13D8   C5                     PUSH   BC   
13D9   CD E0 13               CALL   listWords   
13DC   C1                     POP   BC   
13DD                          ;*Macro unroll:  NEXT
13DD   C3 7B 0E               JP   enter   
13E0                LISTWORDS:      
13E0   ED 5B 5F 32            LD   DE,(VAR_LATEST)   ; search dictionary backwards from LATEST
13E4                          ;*Macro unroll:  _do
13E4   18 03                  JR   L_M_2210S30   
13E6   C3 E6 13               JP   $   
13E9                          ;*Macro unroll:  DLOOP_PUSH $
13E9                DLOOP_COUNT:   .SET   DLOOP_COUNT + 1   
13E9                DLOOP_12:   .SET   DLOOP_11   
13E9                DLOOP_11:   .SET   DLOOP_10   
13E9                DLOOP_10:   .SET   DLOOP_9   
13E9                DLOOP_9:   .SET   DLOOP_8   
13E9                DLOOP_8:   .SET   DLOOP_7   
13E9                DLOOP_7:   .SET   DLOOP_6   
13E9                DLOOP_6:   .SET   DLOOP_5   
13E9                DLOOP_5:   .SET   DLOOP_4   
13E9                DLOOP_4:   .SET   DLOOP_3   
13E9                DLOOP_3:   .SET   DLOOP_2   
13E9                DLOOP_2:   .SET   DLOOP_TOP   
13E9                DLOOP_TOP:   .SET   $   
13E9                L_M_2210S30:      
13E9                          ;*Macro unroll:  checkZeroWord D,E                ; NULL pointer?  (end of the linked list)
13E9   7B                     LD   A,E   ; NULL pointer?  (end of the linked list)
13EA   B2                     OR   D   
13EB                          ;*Macro unroll:  _until z
13EB   CA E6 13               JP   z,DLOOP_TOP - 3   
13EE                          ;*Macro unroll:  DLOOP_FWD               ; needed?
13EE                CUR_ADR:   .SET   $   ; needed?
13E7                          .ORG   DLOOP_TOP - 2   
13E7   EE 13                  DW   CUR_ADR   
13EE                          .ORG   CUR_ADR   
13EE   D5                     PUSH   DE   ; save ptr to header
13EF   13                     INC   DE   ; skip over first field
13F0   13                     INC   DE   
13F1   1A                     LD   A,(DE)   ; a = flags+length field
13F2   E6 7F                  AND   MSK_HIDDEN | MSK_LENGTH   ; %al = name length
13F4   06 00                  LD   B,0   
13F6   4F                     LD   C,A   
13F7   13                     INC   DE   
13F8   CD 6A 11               CALL   printStr   
13FB   CD 7D 11               CALL   printSpace   
13FE   CD 7C 10               CALL   putc   
1401   E1                     POP   HL   ; HL = link to previous header
1402   5E                     LD   E,(HL)   
1403   23                     INC   HL   
1404   56                     LD   D,(HL)   ; DE = previous word
1405                          ;*Macro unroll:  _enddo
1405   C3 E9 13               JP   DLOOP_TOP   
1408                          ;*Macro unroll:  DLOOP_FWD
1408                CUR_ADR:   .SET   $   
13E7                          .ORG   DLOOP_TOP - 2   
13E7   08 14                  DW   CUR_ADR   
1408                          .ORG   CUR_ADR   
1408                          ;*Macro unroll:  DLOOP_POP
1408                DLOOP_COUNT:   .SET   DLOOP_COUNT - 1   
1408                DLOOP_TOP:   .SET   DLOOP_2   
1408                DLOOP_2:   .SET   DLOOP_3   
1408                DLOOP_3:   .SET   DLOOP_4   
1408                DLOOP_4:   .SET   DLOOP_5   
1408                DLOOP_5:   .SET   DLOOP_6   
1408                DLOOP_6:   .SET   DLOOP_7   
1408                DLOOP_7:   .SET   DLOOP_8   
1408                DLOOP_8:   .SET   DLOOP_9   
1408                DLOOP_9:   .SET   DLOOP_10   
1408                DLOOP_10:   .SET   DLOOP_11   
1408                DLOOP_11:   .SET   DLOOP_12   
1408                DLOOP_12:   .SET   0   
1408   CD 74 11               CALL   printCR   
140B   C9                     RET      
140C                             ; "latest" must be the last word defined
140C                          ;*Macro unroll:  mVAR "latest",6,0,latest, var_latest
140C                          ;*Macro unroll: mCODE "latest",6,0,latest
140C                HEADER_LATEST:      
140C   D0 13                  DW   link   
140E                LINK:     .SET   HEADER_latest   
140E   06                     DB   0 + 6   
140F   6C 61 74 65 73 74      DB   "latest"   
1415                LATEST:      
1415                          ;*Macro unroll:  ppush0 B,C
1415   DD 71 00               LD   (IX+0),C   
1418   DD 23                  INC   IX   
141A   DD 70 00               LD   (IX+0),B   
141D   DD 23                  INC   IX   
141F   01 5F 32               LD   BC,var_latest   
1422                          ;*Macro unroll:  NEXT
1422   C3 7B 0E               JP   enter   
2000                          .ORG   START_RAM   
2000                          IF   TESTMODE   
2000                TESTS_START:      
2000                             ; 
2000                             ; test-macros
2000                             ; 
2000                             ; macros to facilitate tests
2000                             ; 
2000                .macro TEST_SET_TEXT,s1
2000                             ; 
2000                 ld HL, (lineBufStart)
2000                 ld (lineBufTop),HL
2000                 ld (currkey),HL
2000                 ld HL, tst_text%%M
2000                 ld (char_pointer), HL
2000                 _skip
2000                tst_text%%M:
2000                 db s1,"\r\n",-1,"\r\n"
2000                 _endskip
2000                .endm
2000                 
2000                             ; prevents using _if macro here
2000                .macro EXPECT,expect,failtxt
2000                             ; 
2000                 call printNum
2000                 loadWord H,L, B,C
2000                 ld L, C
2000                 ppop0 B,C
2000                 CMP16 expect
2000                 jp z, tf_done%%M            ; asm80 macro nesting issue
2000                 ld DE, FAILED
2000                 call printPStr
2000                 ld DE, te_fail%%M
2000                 call printPStr
2000                 halt
2000                 _skip
2000                te_fail%%M:
2000                 .pstr failtxt
2000                 _endskip
2000                tf_done%%M:
2000                .endm
2000                 
2000                             ; 
2000                             ; tests
2000                             ; 
2000                             ; these tests will evaluate when TESTMODE = 1
2000                             ; 
2000                          ;*Macro unroll: TEST_SET_TEXT ": const create , does> @ ;"
2000   2A 45 30               LD   HL,(lineBufStart)   
2003   22 4B 30               LD   (lineBufTop),HL   
2006   22 49 30               LD   (currkey),HL   
2009   21 12 20               LD   HL,tst_textM_2280S7   
200C   22 61 32               LD   (char_pointer),HL   
200F                          ;*Macro unroll:  _skip
200F   C3 0F 20               JP   $   
2012                          ;*Macro unroll:  STRUC_PUSH $
2012                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2012                STRUC_12:   .SET   STRUC_11   
2012                STRUC_11:   .SET   STRUC_10   
2012                STRUC_10:   .SET   STRUC_9   
2012                STRUC_9:   .SET   STRUC_8   
2012                STRUC_8:   .SET   STRUC_7   
2012                STRUC_7:   .SET   STRUC_6   
2012                STRUC_6:   .SET   STRUC_5   
2012                STRUC_5:   .SET   STRUC_4   
2012                STRUC_4:   .SET   STRUC_3   
2012                STRUC_3:   .SET   STRUC_2   
2012                STRUC_2:   .SET   STRUC_TOP   
2012                STRUC_TOP:   .SET   $   
2012                TST_TEXTM_2280S7:      
2012   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 2C 20 64 6F 65 73 3E 20 40 20 3B 0D 0A FF 0D 0A DB   ": const create , does> @ ;","\r\n",-1,"\r\n"   
2031                          ;*Macro unroll:  _endskip
2031                          ;*Macro unroll:  STRUC_FWD
2031                CUR_ADR:   .SET   $   
2010                          .ORG   STRUC_TOP - 2   
2010   31 20                  DW   CUR_ADR   
2031                          .ORG   CUR_ADR   
2031                          ;*Macro unroll:  STRUC_POP
2031                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2031                STRUC_TOP:   .SET   STRUC_2   
2031                STRUC_2:   .SET   STRUC_3   
2031                STRUC_3:   .SET   STRUC_4   
2031                STRUC_4:   .SET   STRUC_5   
2031                STRUC_5:   .SET   STRUC_6   
2031                STRUC_6:   .SET   STRUC_7   
2031                STRUC_7:   .SET   STRUC_8   
2031                STRUC_8:   .SET   STRUC_9   
2031                STRUC_9:   .SET   STRUC_10   
2031                STRUC_10:   .SET   STRUC_11   
2031                STRUC_11:   .SET   STRUC_12   
2031                STRUC_12:   .SET   0   
2031                          ;*Macro unroll: INTERPRET
2031   CF                     RST   $08   
2032   57 0B                  DW   interpret   
2034   8F 0E                  DW   exit_forth   
2036                          ;*Macro unroll: TEST_SET_TEXT "100 const y"
2036   2A 45 30               LD   HL,(lineBufStart)   
2039   22 4B 30               LD   (lineBufTop),HL   
203C   22 49 30               LD   (currkey),HL   
203F   21 48 20               LD   HL,tst_textM_2282S9   
2042   22 61 32               LD   (char_pointer),HL   
2045                          ;*Macro unroll:  _skip
2045   C3 45 20               JP   $   
2048                          ;*Macro unroll:  STRUC_PUSH $
2048                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2048                STRUC_12:   .SET   STRUC_11   
2048                STRUC_11:   .SET   STRUC_10   
2048                STRUC_10:   .SET   STRUC_9   
2048                STRUC_9:   .SET   STRUC_8   
2048                STRUC_8:   .SET   STRUC_7   
2048                STRUC_7:   .SET   STRUC_6   
2048                STRUC_6:   .SET   STRUC_5   
2048                STRUC_5:   .SET   STRUC_4   
2048                STRUC_4:   .SET   STRUC_3   
2048                STRUC_3:   .SET   STRUC_2   
2048                STRUC_2:   .SET   STRUC_TOP   
2048                STRUC_TOP:   .SET   $   
2048                TST_TEXTM_2282S9:      
2048   31 30 30 20 63 6F 6E 73 74 20 79 0D 0A FF 0D 0A DB   "100 const y","\r\n",-1,"\r\n"   
2058                          ;*Macro unroll:  _endskip
2058                          ;*Macro unroll:  STRUC_FWD
2058                CUR_ADR:   .SET   $   
2046                          .ORG   STRUC_TOP - 2   
2046   58 20                  DW   CUR_ADR   
2058                          .ORG   CUR_ADR   
2058                          ;*Macro unroll:  STRUC_POP
2058                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2058                STRUC_TOP:   .SET   STRUC_2   
2058                STRUC_2:   .SET   STRUC_3   
2058                STRUC_3:   .SET   STRUC_4   
2058                STRUC_4:   .SET   STRUC_5   
2058                STRUC_5:   .SET   STRUC_6   
2058                STRUC_6:   .SET   STRUC_7   
2058                STRUC_7:   .SET   STRUC_8   
2058                STRUC_8:   .SET   STRUC_9   
2058                STRUC_9:   .SET   STRUC_10   
2058                STRUC_10:   .SET   STRUC_11   
2058                STRUC_11:   .SET   STRUC_12   
2058                STRUC_12:   .SET   0   
2058                          ;*Macro unroll: INTERPRET
2058   CF                     RST   $08   
2059   57 0B                  DW   interpret   
205B   8F 0E                  DW   exit_forth   
205D                          ;*Macro unroll: TEST_SET_TEXT "y"
205D   2A 45 30               LD   HL,(lineBufStart)   
2060   22 4B 30               LD   (lineBufTop),HL   
2063   22 49 30               LD   (currkey),HL   
2066   21 6F 20               LD   HL,tst_textM_2284S11   
2069   22 61 32               LD   (char_pointer),HL   
206C                          ;*Macro unroll:  _skip
206C   C3 6C 20               JP   $   
206F                          ;*Macro unroll:  STRUC_PUSH $
206F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
206F                STRUC_12:   .SET   STRUC_11   
206F                STRUC_11:   .SET   STRUC_10   
206F                STRUC_10:   .SET   STRUC_9   
206F                STRUC_9:   .SET   STRUC_8   
206F                STRUC_8:   .SET   STRUC_7   
206F                STRUC_7:   .SET   STRUC_6   
206F                STRUC_6:   .SET   STRUC_5   
206F                STRUC_5:   .SET   STRUC_4   
206F                STRUC_4:   .SET   STRUC_3   
206F                STRUC_3:   .SET   STRUC_2   
206F                STRUC_2:   .SET   STRUC_TOP   
206F                STRUC_TOP:   .SET   $   
206F                TST_TEXTM_2284S11:      
206F   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2075                          ;*Macro unroll:  _endskip
2075                          ;*Macro unroll:  STRUC_FWD
2075                CUR_ADR:   .SET   $   
206D                          .ORG   STRUC_TOP - 2   
206D   75 20                  DW   CUR_ADR   
2075                          .ORG   CUR_ADR   
2075                          ;*Macro unroll:  STRUC_POP
2075                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2075                STRUC_TOP:   .SET   STRUC_2   
2075                STRUC_2:   .SET   STRUC_3   
2075                STRUC_3:   .SET   STRUC_4   
2075                STRUC_4:   .SET   STRUC_5   
2075                STRUC_5:   .SET   STRUC_6   
2075                STRUC_6:   .SET   STRUC_7   
2075                STRUC_7:   .SET   STRUC_8   
2075                STRUC_8:   .SET   STRUC_9   
2075                STRUC_9:   .SET   STRUC_10   
2075                STRUC_10:   .SET   STRUC_11   
2075                STRUC_11:   .SET   STRUC_12   
2075                STRUC_12:   .SET   0   
2075                          ;*Macro unroll: INTERPRET
2075   CF                     RST   $08   
2076   57 0B                  DW   interpret   
2078   8F 0E                  DW   exit_forth   
207A                          ;*Macro unroll: EXPECT 100, "expect 100"
207A   CD A6 09               CALL   printNum   
207D                          ;*Macro unroll:  loadWord H,L, B,C
207D   69                     LD   L,C   
207E   60                     LD   H,B   
207F   69                     LD   L,C   
2080                          ;*Macro unroll:  ppop0 B,C
2080   DD 2B                  DEC   IX   
2082   DD 46 00               LD   B,(IX+0)   
2085   DD 2B                  DEC   IX   
2087   DD 4E 00               LD   C,(IX+0)   
208A                          ;*Macro unroll:  CMP16 100
208A   11 64 00               LD   DE,100   
208D   B7                     OR   A   
208E   ED 52                  SBC   HL,DE   
2090                          ;*Macro unroll:  checkZeroWord H,L
2090   7D                     LD   A,L   
2091   B4                     OR   H   
2092   CA AD 20               JP   z,tf_doneM_2286S13   
2095   11 F3 0F               LD   DE,FAILED   
2098   CD 5B 11               CALL   printPStr   
209B   11 A5 20               LD   DE,te_failM_2286S13   
209E   CD 5B 11               CALL   printPStr   
20A1   76                     HALT      
20A2                          ;*Macro unroll:  _skip
20A2   C3 A2 20               JP   $   
20A5                          ;*Macro unroll:  STRUC_PUSH $
20A5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20A5                STRUC_12:   .SET   STRUC_11   
20A5                STRUC_11:   .SET   STRUC_10   
20A5                STRUC_10:   .SET   STRUC_9   
20A5                STRUC_9:   .SET   STRUC_8   
20A5                STRUC_8:   .SET   STRUC_7   
20A5                STRUC_7:   .SET   STRUC_6   
20A5                STRUC_6:   .SET   STRUC_5   
20A5                STRUC_5:   .SET   STRUC_4   
20A5                STRUC_4:   .SET   STRUC_3   
20A5                STRUC_3:   .SET   STRUC_2   
20A5                STRUC_2:   .SET   STRUC_TOP   
20A5                STRUC_TOP:   .SET   $   
20A5                TE_FAILM_2286S13:      
20A5   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
20AD                          ;*Macro unroll:  _endskip
20AD                          ;*Macro unroll:  STRUC_FWD
20AD                CUR_ADR:   .SET   $   
20A3                          .ORG   STRUC_TOP - 2   
20A3   AD 20                  DW   CUR_ADR   
20AD                          .ORG   CUR_ADR   
20AD                          ;*Macro unroll:  STRUC_POP
20AD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20AD                STRUC_TOP:   .SET   STRUC_2   
20AD                STRUC_2:   .SET   STRUC_3   
20AD                STRUC_3:   .SET   STRUC_4   
20AD                STRUC_4:   .SET   STRUC_5   
20AD                STRUC_5:   .SET   STRUC_6   
20AD                STRUC_6:   .SET   STRUC_7   
20AD                STRUC_7:   .SET   STRUC_8   
20AD                STRUC_8:   .SET   STRUC_9   
20AD                STRUC_9:   .SET   STRUC_10   
20AD                STRUC_10:   .SET   STRUC_11   
20AD                STRUC_11:   .SET   STRUC_12   
20AD                STRUC_12:   .SET   0   
20AD                TF_DONEM_2286S13:      
20AD                          ;*Macro unroll: TEST_SET_TEXT "100 constant y"
20AD   2A 45 30               LD   HL,(lineBufStart)   
20B0   22 4B 30               LD   (lineBufTop),HL   
20B3   22 49 30               LD   (currkey),HL   
20B6   21 BF 20               LD   HL,tst_textM_2287S15   
20B9   22 61 32               LD   (char_pointer),HL   
20BC                          ;*Macro unroll:  _skip
20BC   C3 BC 20               JP   $   
20BF                          ;*Macro unroll:  STRUC_PUSH $
20BF                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20BF                STRUC_12:   .SET   STRUC_11   
20BF                STRUC_11:   .SET   STRUC_10   
20BF                STRUC_10:   .SET   STRUC_9   
20BF                STRUC_9:   .SET   STRUC_8   
20BF                STRUC_8:   .SET   STRUC_7   
20BF                STRUC_7:   .SET   STRUC_6   
20BF                STRUC_6:   .SET   STRUC_5   
20BF                STRUC_5:   .SET   STRUC_4   
20BF                STRUC_4:   .SET   STRUC_3   
20BF                STRUC_3:   .SET   STRUC_2   
20BF                STRUC_2:   .SET   STRUC_TOP   
20BF                STRUC_TOP:   .SET   $   
20BF                TST_TEXTM_2287S15:      
20BF   31 30 30 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "100 constant y","\r\n",-1,"\r\n"   
20D2                          ;*Macro unroll:  _endskip
20D2                          ;*Macro unroll:  STRUC_FWD
20D2                CUR_ADR:   .SET   $   
20BD                          .ORG   STRUC_TOP - 2   
20BD   D2 20                  DW   CUR_ADR   
20D2                          .ORG   CUR_ADR   
20D2                          ;*Macro unroll:  STRUC_POP
20D2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20D2                STRUC_TOP:   .SET   STRUC_2   
20D2                STRUC_2:   .SET   STRUC_3   
20D2                STRUC_3:   .SET   STRUC_4   
20D2                STRUC_4:   .SET   STRUC_5   
20D2                STRUC_5:   .SET   STRUC_6   
20D2                STRUC_6:   .SET   STRUC_7   
20D2                STRUC_7:   .SET   STRUC_8   
20D2                STRUC_8:   .SET   STRUC_9   
20D2                STRUC_9:   .SET   STRUC_10   
20D2                STRUC_10:   .SET   STRUC_11   
20D2                STRUC_11:   .SET   STRUC_12   
20D2                STRUC_12:   .SET   0   
20D2                          ;*Macro unroll: INTERPRET
20D2   CF                     RST   $08   
20D3   57 0B                  DW   interpret   
20D5   8F 0E                  DW   exit_forth   
20D7                          ;*Macro unroll: TEST_SET_TEXT "y"
20D7   2A 45 30               LD   HL,(lineBufStart)   
20DA   22 4B 30               LD   (lineBufTop),HL   
20DD   22 49 30               LD   (currkey),HL   
20E0   21 E9 20               LD   HL,tst_textM_2289S17   
20E3   22 61 32               LD   (char_pointer),HL   
20E6                          ;*Macro unroll:  _skip
20E6   C3 E6 20               JP   $   
20E9                          ;*Macro unroll:  STRUC_PUSH $
20E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
20E9                STRUC_12:   .SET   STRUC_11   
20E9                STRUC_11:   .SET   STRUC_10   
20E9                STRUC_10:   .SET   STRUC_9   
20E9                STRUC_9:   .SET   STRUC_8   
20E9                STRUC_8:   .SET   STRUC_7   
20E9                STRUC_7:   .SET   STRUC_6   
20E9                STRUC_6:   .SET   STRUC_5   
20E9                STRUC_5:   .SET   STRUC_4   
20E9                STRUC_4:   .SET   STRUC_3   
20E9                STRUC_3:   .SET   STRUC_2   
20E9                STRUC_2:   .SET   STRUC_TOP   
20E9                STRUC_TOP:   .SET   $   
20E9                TST_TEXTM_2289S17:      
20E9   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
20EF                          ;*Macro unroll:  _endskip
20EF                          ;*Macro unroll:  STRUC_FWD
20EF                CUR_ADR:   .SET   $   
20E7                          .ORG   STRUC_TOP - 2   
20E7   EF 20                  DW   CUR_ADR   
20EF                          .ORG   CUR_ADR   
20EF                          ;*Macro unroll:  STRUC_POP
20EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
20EF                STRUC_TOP:   .SET   STRUC_2   
20EF                STRUC_2:   .SET   STRUC_3   
20EF                STRUC_3:   .SET   STRUC_4   
20EF                STRUC_4:   .SET   STRUC_5   
20EF                STRUC_5:   .SET   STRUC_6   
20EF                STRUC_6:   .SET   STRUC_7   
20EF                STRUC_7:   .SET   STRUC_8   
20EF                STRUC_8:   .SET   STRUC_9   
20EF                STRUC_9:   .SET   STRUC_10   
20EF                STRUC_10:   .SET   STRUC_11   
20EF                STRUC_11:   .SET   STRUC_12   
20EF                STRUC_12:   .SET   0   
20EF                          ;*Macro unroll: INTERPRET
20EF   CF                     RST   $08   
20F0   57 0B                  DW   interpret   
20F2   8F 0E                  DW   exit_forth   
20F4                          ;*Macro unroll: EXPECT 100, "expect 100"
20F4   CD A6 09               CALL   printNum   
20F7                          ;*Macro unroll:  loadWord H,L, B,C
20F7   69                     LD   L,C   
20F8   60                     LD   H,B   
20F9   69                     LD   L,C   
20FA                          ;*Macro unroll:  ppop0 B,C
20FA   DD 2B                  DEC   IX   
20FC   DD 46 00               LD   B,(IX+0)   
20FF   DD 2B                  DEC   IX   
2101   DD 4E 00               LD   C,(IX+0)   
2104                          ;*Macro unroll:  CMP16 100
2104   11 64 00               LD   DE,100   
2107   B7                     OR   A   
2108   ED 52                  SBC   HL,DE   
210A                          ;*Macro unroll:  checkZeroWord H,L
210A   7D                     LD   A,L   
210B   B4                     OR   H   
210C   CA 27 21               JP   z,tf_doneM_2291S19   
210F   11 F3 0F               LD   DE,FAILED   
2112   CD 5B 11               CALL   printPStr   
2115   11 1F 21               LD   DE,te_failM_2291S19   
2118   CD 5B 11               CALL   printPStr   
211B   76                     HALT      
211C                          ;*Macro unroll:  _skip
211C   C3 1C 21               JP   $   
211F                          ;*Macro unroll:  STRUC_PUSH $
211F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
211F                STRUC_12:   .SET   STRUC_11   
211F                STRUC_11:   .SET   STRUC_10   
211F                STRUC_10:   .SET   STRUC_9   
211F                STRUC_9:   .SET   STRUC_8   
211F                STRUC_8:   .SET   STRUC_7   
211F                STRUC_7:   .SET   STRUC_6   
211F                STRUC_6:   .SET   STRUC_5   
211F                STRUC_5:   .SET   STRUC_4   
211F                STRUC_4:   .SET   STRUC_3   
211F                STRUC_3:   .SET   STRUC_2   
211F                STRUC_2:   .SET   STRUC_TOP   
211F                STRUC_TOP:   .SET   $   
211F                TE_FAILM_2291S19:      
211F   07 31 30 30 20 31 30 30 .PSTR   "100 100"   
2127                          ;*Macro unroll:  _endskip
2127                          ;*Macro unroll:  STRUC_FWD
2127                CUR_ADR:   .SET   $   
211D                          .ORG   STRUC_TOP - 2   
211D   27 21                  DW   CUR_ADR   
2127                          .ORG   CUR_ADR   
2127                          ;*Macro unroll:  STRUC_POP
2127                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2127                STRUC_TOP:   .SET   STRUC_2   
2127                STRUC_2:   .SET   STRUC_3   
2127                STRUC_3:   .SET   STRUC_4   
2127                STRUC_4:   .SET   STRUC_5   
2127                STRUC_5:   .SET   STRUC_6   
2127                STRUC_6:   .SET   STRUC_7   
2127                STRUC_7:   .SET   STRUC_8   
2127                STRUC_8:   .SET   STRUC_9   
2127                STRUC_9:   .SET   STRUC_10   
2127                STRUC_10:   .SET   STRUC_11   
2127                STRUC_11:   .SET   STRUC_12   
2127                STRUC_12:   .SET   0   
2127                TF_DONEM_2291S19:      
2127                          ;*Macro unroll: TEST_SET_TEXT ": x create does> 1 . ;"
2127   2A 45 30               LD   HL,(lineBufStart)   
212A   22 4B 30               LD   (lineBufTop),HL   
212D   22 49 30               LD   (currkey),HL   
2130   21 39 21               LD   HL,tst_textM_2292S21   
2133   22 61 32               LD   (char_pointer),HL   
2136                          ;*Macro unroll:  _skip
2136   C3 36 21               JP   $   
2139                          ;*Macro unroll:  STRUC_PUSH $
2139                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2139                STRUC_12:   .SET   STRUC_11   
2139                STRUC_11:   .SET   STRUC_10   
2139                STRUC_10:   .SET   STRUC_9   
2139                STRUC_9:   .SET   STRUC_8   
2139                STRUC_8:   .SET   STRUC_7   
2139                STRUC_7:   .SET   STRUC_6   
2139                STRUC_6:   .SET   STRUC_5   
2139                STRUC_5:   .SET   STRUC_4   
2139                STRUC_4:   .SET   STRUC_3   
2139                STRUC_3:   .SET   STRUC_2   
2139                STRUC_2:   .SET   STRUC_TOP   
2139                STRUC_TOP:   .SET   $   
2139                TST_TEXTM_2292S21:      
2139   3A 20 78 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 31 20 2E 20 3B 0D 0A FF 0D 0A DB   ": x create does> 1 . ;","\r\n",-1,"\r\n"   
2154                          ;*Macro unroll:  _endskip
2154                          ;*Macro unroll:  STRUC_FWD
2154                CUR_ADR:   .SET   $   
2137                          .ORG   STRUC_TOP - 2   
2137   54 21                  DW   CUR_ADR   
2154                          .ORG   CUR_ADR   
2154                          ;*Macro unroll:  STRUC_POP
2154                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2154                STRUC_TOP:   .SET   STRUC_2   
2154                STRUC_2:   .SET   STRUC_3   
2154                STRUC_3:   .SET   STRUC_4   
2154                STRUC_4:   .SET   STRUC_5   
2154                STRUC_5:   .SET   STRUC_6   
2154                STRUC_6:   .SET   STRUC_7   
2154                STRUC_7:   .SET   STRUC_8   
2154                STRUC_8:   .SET   STRUC_9   
2154                STRUC_9:   .SET   STRUC_10   
2154                STRUC_10:   .SET   STRUC_11   
2154                STRUC_11:   .SET   STRUC_12   
2154                STRUC_12:   .SET   0   
2154                          ;*Macro unroll: INTERPRET
2154   CF                     RST   $08   
2155   57 0B                  DW   interpret   
2157   8F 0E                  DW   exit_forth   
2159                          ;*Macro unroll: TEST_SET_TEXT "x y"
2159   2A 45 30               LD   HL,(lineBufStart)   
215C   22 4B 30               LD   (lineBufTop),HL   
215F   22 49 30               LD   (currkey),HL   
2162   21 6B 21               LD   HL,tst_textM_2294S23   
2165   22 61 32               LD   (char_pointer),HL   
2168                          ;*Macro unroll:  _skip
2168   C3 68 21               JP   $   
216B                          ;*Macro unroll:  STRUC_PUSH $
216B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
216B                STRUC_12:   .SET   STRUC_11   
216B                STRUC_11:   .SET   STRUC_10   
216B                STRUC_10:   .SET   STRUC_9   
216B                STRUC_9:   .SET   STRUC_8   
216B                STRUC_8:   .SET   STRUC_7   
216B                STRUC_7:   .SET   STRUC_6   
216B                STRUC_6:   .SET   STRUC_5   
216B                STRUC_5:   .SET   STRUC_4   
216B                STRUC_4:   .SET   STRUC_3   
216B                STRUC_3:   .SET   STRUC_2   
216B                STRUC_2:   .SET   STRUC_TOP   
216B                STRUC_TOP:   .SET   $   
216B                TST_TEXTM_2294S23:      
216B   78 20 79 0D 0A FF 0D 0A DB   "x y","\r\n",-1,"\r\n"   
2173                          ;*Macro unroll:  _endskip
2173                          ;*Macro unroll:  STRUC_FWD
2173                CUR_ADR:   .SET   $   
2169                          .ORG   STRUC_TOP - 2   
2169   73 21                  DW   CUR_ADR   
2173                          .ORG   CUR_ADR   
2173                          ;*Macro unroll:  STRUC_POP
2173                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2173                STRUC_TOP:   .SET   STRUC_2   
2173                STRUC_2:   .SET   STRUC_3   
2173                STRUC_3:   .SET   STRUC_4   
2173                STRUC_4:   .SET   STRUC_5   
2173                STRUC_5:   .SET   STRUC_6   
2173                STRUC_6:   .SET   STRUC_7   
2173                STRUC_7:   .SET   STRUC_8   
2173                STRUC_8:   .SET   STRUC_9   
2173                STRUC_9:   .SET   STRUC_10   
2173                STRUC_10:   .SET   STRUC_11   
2173                STRUC_11:   .SET   STRUC_12   
2173                STRUC_12:   .SET   0   
2173                          ;*Macro unroll: INTERPRET
2173   CF                     RST   $08   
2174   57 0B                  DW   interpret   
2176   8F 0E                  DW   exit_forth   
2178                          ;*Macro unroll: TEST_SET_TEXT "y"
2178   2A 45 30               LD   HL,(lineBufStart)   
217B   22 4B 30               LD   (lineBufTop),HL   
217E   22 49 30               LD   (currkey),HL   
2181   21 8A 21               LD   HL,tst_textM_2296S25   
2184   22 61 32               LD   (char_pointer),HL   
2187                          ;*Macro unroll:  _skip
2187   C3 87 21               JP   $   
218A                          ;*Macro unroll:  STRUC_PUSH $
218A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
218A                STRUC_12:   .SET   STRUC_11   
218A                STRUC_11:   .SET   STRUC_10   
218A                STRUC_10:   .SET   STRUC_9   
218A                STRUC_9:   .SET   STRUC_8   
218A                STRUC_8:   .SET   STRUC_7   
218A                STRUC_7:   .SET   STRUC_6   
218A                STRUC_6:   .SET   STRUC_5   
218A                STRUC_5:   .SET   STRUC_4   
218A                STRUC_4:   .SET   STRUC_3   
218A                STRUC_3:   .SET   STRUC_2   
218A                STRUC_2:   .SET   STRUC_TOP   
218A                STRUC_TOP:   .SET   $   
218A                TST_TEXTM_2296S25:      
218A   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
2190                          ;*Macro unroll:  _endskip
2190                          ;*Macro unroll:  STRUC_FWD
2190                CUR_ADR:   .SET   $   
2188                          .ORG   STRUC_TOP - 2   
2188   90 21                  DW   CUR_ADR   
2190                          .ORG   CUR_ADR   
2190                          ;*Macro unroll:  STRUC_POP
2190                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2190                STRUC_TOP:   .SET   STRUC_2   
2190                STRUC_2:   .SET   STRUC_3   
2190                STRUC_3:   .SET   STRUC_4   
2190                STRUC_4:   .SET   STRUC_5   
2190                STRUC_5:   .SET   STRUC_6   
2190                STRUC_6:   .SET   STRUC_7   
2190                STRUC_7:   .SET   STRUC_8   
2190                STRUC_8:   .SET   STRUC_9   
2190                STRUC_9:   .SET   STRUC_10   
2190                STRUC_10:   .SET   STRUC_11   
2190                STRUC_11:   .SET   STRUC_12   
2190                STRUC_12:   .SET   0   
2190                          ;*Macro unroll: INTERPRET
2190   CF                     RST   $08   
2191   57 0B                  DW   interpret   
2193   8F 0E                  DW   exit_forth   
2195                          ;*Macro unroll: TEST_SET_TEXT ": const create does> , ;"
2195   2A 45 30               LD   HL,(lineBufStart)   
2198   22 4B 30               LD   (lineBufTop),HL   
219B   22 49 30               LD   (currkey),HL   
219E   21 A7 21               LD   HL,tst_textM_2298S28   
21A1   22 61 32               LD   (char_pointer),HL   
21A4                          ;*Macro unroll:  _skip
21A4   C3 A4 21               JP   $   
21A7                          ;*Macro unroll:  STRUC_PUSH $
21A7                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21A7                STRUC_12:   .SET   STRUC_11   
21A7                STRUC_11:   .SET   STRUC_10   
21A7                STRUC_10:   .SET   STRUC_9   
21A7                STRUC_9:   .SET   STRUC_8   
21A7                STRUC_8:   .SET   STRUC_7   
21A7                STRUC_7:   .SET   STRUC_6   
21A7                STRUC_6:   .SET   STRUC_5   
21A7                STRUC_5:   .SET   STRUC_4   
21A7                STRUC_4:   .SET   STRUC_3   
21A7                STRUC_3:   .SET   STRUC_2   
21A7                STRUC_2:   .SET   STRUC_TOP   
21A7                STRUC_TOP:   .SET   $   
21A7                TST_TEXTM_2298S28:      
21A7   3A 20 63 6F 6E 73 74 20 63 72 65 61 74 65 20 64 6F 65 73 3E 20 2C 20 3B 0D 0A FF 0D 0A DB   ": const create does> , ;","\r\n",-1,"\r\n"   
21C4                          ;*Macro unroll:  _endskip
21C4                          ;*Macro unroll:  STRUC_FWD
21C4                CUR_ADR:   .SET   $   
21A5                          .ORG   STRUC_TOP - 2   
21A5   C4 21                  DW   CUR_ADR   
21C4                          .ORG   CUR_ADR   
21C4                          ;*Macro unroll:  STRUC_POP
21C4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21C4                STRUC_TOP:   .SET   STRUC_2   
21C4                STRUC_2:   .SET   STRUC_3   
21C4                STRUC_3:   .SET   STRUC_4   
21C4                STRUC_4:   .SET   STRUC_5   
21C4                STRUC_5:   .SET   STRUC_6   
21C4                STRUC_6:   .SET   STRUC_7   
21C4                STRUC_7:   .SET   STRUC_8   
21C4                STRUC_8:   .SET   STRUC_9   
21C4                STRUC_9:   .SET   STRUC_10   
21C4                STRUC_10:   .SET   STRUC_11   
21C4                STRUC_11:   .SET   STRUC_12   
21C4                STRUC_12:   .SET   0   
21C4                          ;*Macro unroll: INTERPRET
21C4   CF                     RST   $08   
21C5   57 0B                  DW   interpret   
21C7   8F 0E                  DW   exit_forth   
21C9                          ;*Macro unroll: TEST_SET_TEXT "23 const x"
21C9   2A 45 30               LD   HL,(lineBufStart)   
21CC   22 4B 30               LD   (lineBufTop),HL   
21CF   22 49 30               LD   (currkey),HL   
21D2   21 DB 21               LD   HL,tst_textM_2300S30   
21D5   22 61 32               LD   (char_pointer),HL   
21D8                          ;*Macro unroll:  _skip
21D8   C3 D8 21               JP   $   
21DB                          ;*Macro unroll:  STRUC_PUSH $
21DB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
21DB                STRUC_12:   .SET   STRUC_11   
21DB                STRUC_11:   .SET   STRUC_10   
21DB                STRUC_10:   .SET   STRUC_9   
21DB                STRUC_9:   .SET   STRUC_8   
21DB                STRUC_8:   .SET   STRUC_7   
21DB                STRUC_7:   .SET   STRUC_6   
21DB                STRUC_6:   .SET   STRUC_5   
21DB                STRUC_5:   .SET   STRUC_4   
21DB                STRUC_4:   .SET   STRUC_3   
21DB                STRUC_3:   .SET   STRUC_2   
21DB                STRUC_2:   .SET   STRUC_TOP   
21DB                STRUC_TOP:   .SET   $   
21DB                TST_TEXTM_2300S30:      
21DB   32 33 20 63 6F 6E 73 74 20 78 0D 0A FF 0D 0A DB   "23 const x","\r\n",-1,"\r\n"   
21EA                          ;*Macro unroll:  _endskip
21EA                          ;*Macro unroll:  STRUC_FWD
21EA                CUR_ADR:   .SET   $   
21D9                          .ORG   STRUC_TOP - 2   
21D9   EA 21                  DW   CUR_ADR   
21EA                          .ORG   CUR_ADR   
21EA                          ;*Macro unroll:  STRUC_POP
21EA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
21EA                STRUC_TOP:   .SET   STRUC_2   
21EA                STRUC_2:   .SET   STRUC_3   
21EA                STRUC_3:   .SET   STRUC_4   
21EA                STRUC_4:   .SET   STRUC_5   
21EA                STRUC_5:   .SET   STRUC_6   
21EA                STRUC_6:   .SET   STRUC_7   
21EA                STRUC_7:   .SET   STRUC_8   
21EA                STRUC_8:   .SET   STRUC_9   
21EA                STRUC_9:   .SET   STRUC_10   
21EA                STRUC_10:   .SET   STRUC_11   
21EA                STRUC_11:   .SET   STRUC_12   
21EA                STRUC_12:   .SET   0   
21EA                          ;*Macro unroll: INTERPRET
21EA   CF                     RST   $08   
21EB   57 0B                  DW   interpret   
21ED   8F 0E                  DW   exit_forth   
21EF                          ;*Macro unroll: TEST_SET_TEXT "x ."
21EF   2A 45 30               LD   HL,(lineBufStart)   
21F2   22 4B 30               LD   (lineBufTop),HL   
21F5   22 49 30               LD   (currkey),HL   
21F8   21 01 22               LD   HL,tst_textM_2302S32   
21FB   22 61 32               LD   (char_pointer),HL   
21FE                          ;*Macro unroll:  _skip
21FE   C3 FE 21               JP   $   
2201                          ;*Macro unroll:  STRUC_PUSH $
2201                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2201                STRUC_12:   .SET   STRUC_11   
2201                STRUC_11:   .SET   STRUC_10   
2201                STRUC_10:   .SET   STRUC_9   
2201                STRUC_9:   .SET   STRUC_8   
2201                STRUC_8:   .SET   STRUC_7   
2201                STRUC_7:   .SET   STRUC_6   
2201                STRUC_6:   .SET   STRUC_5   
2201                STRUC_5:   .SET   STRUC_4   
2201                STRUC_4:   .SET   STRUC_3   
2201                STRUC_3:   .SET   STRUC_2   
2201                STRUC_2:   .SET   STRUC_TOP   
2201                STRUC_TOP:   .SET   $   
2201                TST_TEXTM_2302S32:      
2201   78 20 2E 0D 0A FF 0D 0A DB   "x .","\r\n",-1,"\r\n"   
2209                          ;*Macro unroll:  _endskip
2209                          ;*Macro unroll:  STRUC_FWD
2209                CUR_ADR:   .SET   $   
21FF                          .ORG   STRUC_TOP - 2   
21FF   09 22                  DW   CUR_ADR   
2209                          .ORG   CUR_ADR   
2209                          ;*Macro unroll:  STRUC_POP
2209                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2209                STRUC_TOP:   .SET   STRUC_2   
2209                STRUC_2:   .SET   STRUC_3   
2209                STRUC_3:   .SET   STRUC_4   
2209                STRUC_4:   .SET   STRUC_5   
2209                STRUC_5:   .SET   STRUC_6   
2209                STRUC_6:   .SET   STRUC_7   
2209                STRUC_7:   .SET   STRUC_8   
2209                STRUC_8:   .SET   STRUC_9   
2209                STRUC_9:   .SET   STRUC_10   
2209                STRUC_10:   .SET   STRUC_11   
2209                STRUC_11:   .SET   STRUC_12   
2209                STRUC_12:   .SET   0   
2209                          ;*Macro unroll: INTERPRET
2209   CF                     RST   $08   
220A   57 0B                  DW   interpret   
220C   8F 0E                  DW   exit_forth   
220E                          ;*Macro unroll: TEST_SET_TEXT "23 constant y"
220E   2A 45 30               LD   HL,(lineBufStart)   
2211   22 4B 30               LD   (lineBufTop),HL   
2214   22 49 30               LD   (currkey),HL   
2217   21 20 22               LD   HL,tst_textM_2304S35   
221A   22 61 32               LD   (char_pointer),HL   
221D                          ;*Macro unroll:  _skip
221D   C3 1D 22               JP   $   
2220                          ;*Macro unroll:  STRUC_PUSH $
2220                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2220                STRUC_12:   .SET   STRUC_11   
2220                STRUC_11:   .SET   STRUC_10   
2220                STRUC_10:   .SET   STRUC_9   
2220                STRUC_9:   .SET   STRUC_8   
2220                STRUC_8:   .SET   STRUC_7   
2220                STRUC_7:   .SET   STRUC_6   
2220                STRUC_6:   .SET   STRUC_5   
2220                STRUC_5:   .SET   STRUC_4   
2220                STRUC_4:   .SET   STRUC_3   
2220                STRUC_3:   .SET   STRUC_2   
2220                STRUC_2:   .SET   STRUC_TOP   
2220                STRUC_TOP:   .SET   $   
2220                TST_TEXTM_2304S35:      
2220   32 33 20 63 6F 6E 73 74 61 6E 74 20 79 0D 0A FF 0D 0A DB   "23 constant y","\r\n",-1,"\r\n"   
2232                          ;*Macro unroll:  _endskip
2232                          ;*Macro unroll:  STRUC_FWD
2232                CUR_ADR:   .SET   $   
221E                          .ORG   STRUC_TOP - 2   
221E   32 22                  DW   CUR_ADR   
2232                          .ORG   CUR_ADR   
2232                          ;*Macro unroll:  STRUC_POP
2232                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2232                STRUC_TOP:   .SET   STRUC_2   
2232                STRUC_2:   .SET   STRUC_3   
2232                STRUC_3:   .SET   STRUC_4   
2232                STRUC_4:   .SET   STRUC_5   
2232                STRUC_5:   .SET   STRUC_6   
2232                STRUC_6:   .SET   STRUC_7   
2232                STRUC_7:   .SET   STRUC_8   
2232                STRUC_8:   .SET   STRUC_9   
2232                STRUC_9:   .SET   STRUC_10   
2232                STRUC_10:   .SET   STRUC_11   
2232                STRUC_11:   .SET   STRUC_12   
2232                STRUC_12:   .SET   0   
2232                          ;*Macro unroll: INTERPRET
2232   CF                     RST   $08   
2233   57 0B                  DW   interpret   
2235   8F 0E                  DW   exit_forth   
2237                          ;*Macro unroll: TEST_SET_TEXT "y"
2237   2A 45 30               LD   HL,(lineBufStart)   
223A   22 4B 30               LD   (lineBufTop),HL   
223D   22 49 30               LD   (currkey),HL   
2240   21 49 22               LD   HL,tst_textM_2306S37   
2243   22 61 32               LD   (char_pointer),HL   
2246                          ;*Macro unroll:  _skip
2246   C3 46 22               JP   $   
2249                          ;*Macro unroll:  STRUC_PUSH $
2249                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2249                STRUC_12:   .SET   STRUC_11   
2249                STRUC_11:   .SET   STRUC_10   
2249                STRUC_10:   .SET   STRUC_9   
2249                STRUC_9:   .SET   STRUC_8   
2249                STRUC_8:   .SET   STRUC_7   
2249                STRUC_7:   .SET   STRUC_6   
2249                STRUC_6:   .SET   STRUC_5   
2249                STRUC_5:   .SET   STRUC_4   
2249                STRUC_4:   .SET   STRUC_3   
2249                STRUC_3:   .SET   STRUC_2   
2249                STRUC_2:   .SET   STRUC_TOP   
2249                STRUC_TOP:   .SET   $   
2249                TST_TEXTM_2306S37:      
2249   79 0D 0A FF 0D 0A      DB   "y","\r\n",-1,"\r\n"   
224F                          ;*Macro unroll:  _endskip
224F                          ;*Macro unroll:  STRUC_FWD
224F                CUR_ADR:   .SET   $   
2247                          .ORG   STRUC_TOP - 2   
2247   4F 22                  DW   CUR_ADR   
224F                          .ORG   CUR_ADR   
224F                          ;*Macro unroll:  STRUC_POP
224F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
224F                STRUC_TOP:   .SET   STRUC_2   
224F                STRUC_2:   .SET   STRUC_3   
224F                STRUC_3:   .SET   STRUC_4   
224F                STRUC_4:   .SET   STRUC_5   
224F                STRUC_5:   .SET   STRUC_6   
224F                STRUC_6:   .SET   STRUC_7   
224F                STRUC_7:   .SET   STRUC_8   
224F                STRUC_8:   .SET   STRUC_9   
224F                STRUC_9:   .SET   STRUC_10   
224F                STRUC_10:   .SET   STRUC_11   
224F                STRUC_11:   .SET   STRUC_12   
224F                STRUC_12:   .SET   0   
224F                          ;*Macro unroll: INTERPRET
224F   CF                     RST   $08   
2250   57 0B                  DW   interpret   
2252   8F 0E                  DW   exit_forth   
2254                          ;*Macro unroll: EXPECT 23, "expect 23"
2254   CD A6 09               CALL   printNum   
2257                          ;*Macro unroll:  loadWord H,L, B,C
2257   69                     LD   L,C   
2258   60                     LD   H,B   
2259   69                     LD   L,C   
225A                          ;*Macro unroll:  ppop0 B,C
225A   DD 2B                  DEC   IX   
225C   DD 46 00               LD   B,(IX+0)   
225F   DD 2B                  DEC   IX   
2261   DD 4E 00               LD   C,(IX+0)   
2264                          ;*Macro unroll:  CMP16 23
2264   11 17 00               LD   DE,23   
2267   B7                     OR   A   
2268   ED 52                  SBC   HL,DE   
226A                          ;*Macro unroll:  checkZeroWord H,L
226A   7D                     LD   A,L   
226B   B4                     OR   H   
226C   CA 85 22               JP   z,tf_doneM_2308S39   
226F   11 F3 0F               LD   DE,FAILED   
2272   CD 5B 11               CALL   printPStr   
2275   11 7F 22               LD   DE,te_failM_2308S39   
2278   CD 5B 11               CALL   printPStr   
227B   76                     HALT      
227C                          ;*Macro unroll:  _skip
227C   C3 7C 22               JP   $   
227F                          ;*Macro unroll:  STRUC_PUSH $
227F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
227F                STRUC_12:   .SET   STRUC_11   
227F                STRUC_11:   .SET   STRUC_10   
227F                STRUC_10:   .SET   STRUC_9   
227F                STRUC_9:   .SET   STRUC_8   
227F                STRUC_8:   .SET   STRUC_7   
227F                STRUC_7:   .SET   STRUC_6   
227F                STRUC_6:   .SET   STRUC_5   
227F                STRUC_5:   .SET   STRUC_4   
227F                STRUC_4:   .SET   STRUC_3   
227F                STRUC_3:   .SET   STRUC_2   
227F                STRUC_2:   .SET   STRUC_TOP   
227F                STRUC_TOP:   .SET   $   
227F                TE_FAILM_2308S39:      
227F   05 32 33 20 32 33      .PSTR   "23 23"   
2285                          ;*Macro unroll:  _endskip
2285                          ;*Macro unroll:  STRUC_FWD
2285                CUR_ADR:   .SET   $   
227D                          .ORG   STRUC_TOP - 2   
227D   85 22                  DW   CUR_ADR   
2285                          .ORG   CUR_ADR   
2285                          ;*Macro unroll:  STRUC_POP
2285                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2285                STRUC_TOP:   .SET   STRUC_2   
2285                STRUC_2:   .SET   STRUC_3   
2285                STRUC_3:   .SET   STRUC_4   
2285                STRUC_4:   .SET   STRUC_5   
2285                STRUC_5:   .SET   STRUC_6   
2285                STRUC_6:   .SET   STRUC_7   
2285                STRUC_7:   .SET   STRUC_8   
2285                STRUC_8:   .SET   STRUC_9   
2285                STRUC_9:   .SET   STRUC_10   
2285                STRUC_10:   .SET   STRUC_11   
2285                STRUC_11:   .SET   STRUC_12   
2285                STRUC_12:   .SET   0   
2285                TF_DONEM_2308S39:      
2285                          ;*Macro unroll: ppushValue 1
2285                          ;*Macro unroll:  ppush0 B,C
2285   DD 71 00               LD   (IX+0),C   
2288   DD 23                  INC   IX   
228A   DD 70 00               LD   (IX+0),B   
228D   DD 23                  INC   IX   
228F   01 01 00               LD   BC,1   
2292                          ;*Macro unroll: TEST_SET_TEXT "dup"
2292   2A 45 30               LD   HL,(lineBufStart)   
2295   22 4B 30               LD   (lineBufTop),HL   
2298   22 49 30               LD   (currkey),HL   
229B   21 A4 22               LD   HL,tst_textM_2310S42   
229E   22 61 32               LD   (char_pointer),HL   
22A1                          ;*Macro unroll:  _skip
22A1   C3 A1 22               JP   $   
22A4                          ;*Macro unroll:  STRUC_PUSH $
22A4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22A4                STRUC_12:   .SET   STRUC_11   
22A4                STRUC_11:   .SET   STRUC_10   
22A4                STRUC_10:   .SET   STRUC_9   
22A4                STRUC_9:   .SET   STRUC_8   
22A4                STRUC_8:   .SET   STRUC_7   
22A4                STRUC_7:   .SET   STRUC_6   
22A4                STRUC_6:   .SET   STRUC_5   
22A4                STRUC_5:   .SET   STRUC_4   
22A4                STRUC_4:   .SET   STRUC_3   
22A4                STRUC_3:   .SET   STRUC_2   
22A4                STRUC_2:   .SET   STRUC_TOP   
22A4                STRUC_TOP:   .SET   $   
22A4                TST_TEXTM_2310S42:      
22A4   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
22AC                          ;*Macro unroll:  _endskip
22AC                          ;*Macro unroll:  STRUC_FWD
22AC                CUR_ADR:   .SET   $   
22A2                          .ORG   STRUC_TOP - 2   
22A2   AC 22                  DW   CUR_ADR   
22AC                          .ORG   CUR_ADR   
22AC                          ;*Macro unroll:  STRUC_POP
22AC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22AC                STRUC_TOP:   .SET   STRUC_2   
22AC                STRUC_2:   .SET   STRUC_3   
22AC                STRUC_3:   .SET   STRUC_4   
22AC                STRUC_4:   .SET   STRUC_5   
22AC                STRUC_5:   .SET   STRUC_6   
22AC                STRUC_6:   .SET   STRUC_7   
22AC                STRUC_7:   .SET   STRUC_8   
22AC                STRUC_8:   .SET   STRUC_9   
22AC                STRUC_9:   .SET   STRUC_10   
22AC                STRUC_10:   .SET   STRUC_11   
22AC                STRUC_11:   .SET   STRUC_12   
22AC                STRUC_12:   .SET   0   
22AC                          ;*Macro unroll: INTERPRET
22AC   CF                     RST   $08   
22AD   57 0B                  DW   interpret   
22AF   8F 0E                  DW   exit_forth   
22B1                          ;*Macro unroll: EXPECT 1, "1 interpret dup"
22B1   CD A6 09               CALL   printNum   
22B4                          ;*Macro unroll:  loadWord H,L, B,C
22B4   69                     LD   L,C   
22B5   60                     LD   H,B   
22B6   69                     LD   L,C   
22B7                          ;*Macro unroll:  ppop0 B,C
22B7   DD 2B                  DEC   IX   
22B9   DD 46 00               LD   B,(IX+0)   
22BC   DD 2B                  DEC   IX   
22BE   DD 4E 00               LD   C,(IX+0)   
22C1                          ;*Macro unroll:  CMP16 1
22C1   11 01 00               LD   DE,1   
22C4   B7                     OR   A   
22C5   ED 52                  SBC   HL,DE   
22C7                          ;*Macro unroll:  checkZeroWord H,L
22C7   7D                     LD   A,L   
22C8   B4                     OR   H   
22C9   CA EC 22               JP   z,tf_doneM_2312S44   
22CC   11 F3 0F               LD   DE,FAILED   
22CF   CD 5B 11               CALL   printPStr   
22D2   11 DC 22               LD   DE,te_failM_2312S44   
22D5   CD 5B 11               CALL   printPStr   
22D8   76                     HALT      
22D9                          ;*Macro unroll:  _skip
22D9   C3 D9 22               JP   $   
22DC                          ;*Macro unroll:  STRUC_PUSH $
22DC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
22DC                STRUC_12:   .SET   STRUC_11   
22DC                STRUC_11:   .SET   STRUC_10   
22DC                STRUC_10:   .SET   STRUC_9   
22DC                STRUC_9:   .SET   STRUC_8   
22DC                STRUC_8:   .SET   STRUC_7   
22DC                STRUC_7:   .SET   STRUC_6   
22DC                STRUC_6:   .SET   STRUC_5   
22DC                STRUC_5:   .SET   STRUC_4   
22DC                STRUC_4:   .SET   STRUC_3   
22DC                STRUC_3:   .SET   STRUC_2   
22DC                STRUC_2:   .SET   STRUC_TOP   
22DC                STRUC_TOP:   .SET   $   
22DC                TE_FAILM_2312S44:      
22DC   0F 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 .PSTR   "1 interpret dup"   
22EC                          ;*Macro unroll:  _endskip
22EC                          ;*Macro unroll:  STRUC_FWD
22EC                CUR_ADR:   .SET   $   
22DA                          .ORG   STRUC_TOP - 2   
22DA   EC 22                  DW   CUR_ADR   
22EC                          .ORG   CUR_ADR   
22EC                          ;*Macro unroll:  STRUC_POP
22EC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
22EC                STRUC_TOP:   .SET   STRUC_2   
22EC                STRUC_2:   .SET   STRUC_3   
22EC                STRUC_3:   .SET   STRUC_4   
22EC                STRUC_4:   .SET   STRUC_5   
22EC                STRUC_5:   .SET   STRUC_6   
22EC                STRUC_6:   .SET   STRUC_7   
22EC                STRUC_7:   .SET   STRUC_8   
22EC                STRUC_8:   .SET   STRUC_9   
22EC                STRUC_9:   .SET   STRUC_10   
22EC                STRUC_10:   .SET   STRUC_11   
22EC                STRUC_11:   .SET   STRUC_12   
22EC                STRUC_12:   .SET   0   
22EC                TF_DONEM_2312S44:      
22EC                          ;*Macro unroll: EXPECT 1, "1 interpret dup 2"
22EC   CD A6 09               CALL   printNum   
22EF                          ;*Macro unroll:  loadWord H,L, B,C
22EF   69                     LD   L,C   
22F0   60                     LD   H,B   
22F1   69                     LD   L,C   
22F2                          ;*Macro unroll:  ppop0 B,C
22F2   DD 2B                  DEC   IX   
22F4   DD 46 00               LD   B,(IX+0)   
22F7   DD 2B                  DEC   IX   
22F9   DD 4E 00               LD   C,(IX+0)   
22FC                          ;*Macro unroll:  CMP16 1
22FC   11 01 00               LD   DE,1   
22FF   B7                     OR   A   
2300   ED 52                  SBC   HL,DE   
2302                          ;*Macro unroll:  checkZeroWord H,L
2302   7D                     LD   A,L   
2303   B4                     OR   H   
2304   CA 29 23               JP   z,tf_doneM_2313S45   
2307   11 F3 0F               LD   DE,FAILED   
230A   CD 5B 11               CALL   printPStr   
230D   11 17 23               LD   DE,te_failM_2313S45   
2310   CD 5B 11               CALL   printPStr   
2313   76                     HALT      
2314                          ;*Macro unroll:  _skip
2314   C3 14 23               JP   $   
2317                          ;*Macro unroll:  STRUC_PUSH $
2317                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2317                STRUC_12:   .SET   STRUC_11   
2317                STRUC_11:   .SET   STRUC_10   
2317                STRUC_10:   .SET   STRUC_9   
2317                STRUC_9:   .SET   STRUC_8   
2317                STRUC_8:   .SET   STRUC_7   
2317                STRUC_7:   .SET   STRUC_6   
2317                STRUC_6:   .SET   STRUC_5   
2317                STRUC_5:   .SET   STRUC_4   
2317                STRUC_4:   .SET   STRUC_3   
2317                STRUC_3:   .SET   STRUC_2   
2317                STRUC_2:   .SET   STRUC_TOP   
2317                STRUC_TOP:   .SET   $   
2317                TE_FAILM_2313S45:      
2317   11 31 20 69 6E 74 65 72 70 72 65 74 20 64 75 70 20 32 .PSTR   "1 interpret dup 2"   
2329                          ;*Macro unroll:  _endskip
2329                          ;*Macro unroll:  STRUC_FWD
2329                CUR_ADR:   .SET   $   
2315                          .ORG   STRUC_TOP - 2   
2315   29 23                  DW   CUR_ADR   
2329                          .ORG   CUR_ADR   
2329                          ;*Macro unroll:  STRUC_POP
2329                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2329                STRUC_TOP:   .SET   STRUC_2   
2329                STRUC_2:   .SET   STRUC_3   
2329                STRUC_3:   .SET   STRUC_4   
2329                STRUC_4:   .SET   STRUC_5   
2329                STRUC_5:   .SET   STRUC_6   
2329                STRUC_6:   .SET   STRUC_7   
2329                STRUC_7:   .SET   STRUC_8   
2329                STRUC_8:   .SET   STRUC_9   
2329                STRUC_9:   .SET   STRUC_10   
2329                STRUC_10:   .SET   STRUC_11   
2329                STRUC_11:   .SET   STRUC_12   
2329                STRUC_12:   .SET   0   
2329                TF_DONEM_2313S45:      
2329                          ;*Macro unroll: TEST_SET_TEXT "123"
2329   2A 45 30               LD   HL,(lineBufStart)   
232C   22 4B 30               LD   (lineBufTop),HL   
232F   22 49 30               LD   (currkey),HL   
2332   21 3B 23               LD   HL,tst_textM_2314S47   
2335   22 61 32               LD   (char_pointer),HL   
2338                          ;*Macro unroll:  _skip
2338   C3 38 23               JP   $   
233B                          ;*Macro unroll:  STRUC_PUSH $
233B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
233B                STRUC_12:   .SET   STRUC_11   
233B                STRUC_11:   .SET   STRUC_10   
233B                STRUC_10:   .SET   STRUC_9   
233B                STRUC_9:   .SET   STRUC_8   
233B                STRUC_8:   .SET   STRUC_7   
233B                STRUC_7:   .SET   STRUC_6   
233B                STRUC_6:   .SET   STRUC_5   
233B                STRUC_5:   .SET   STRUC_4   
233B                STRUC_4:   .SET   STRUC_3   
233B                STRUC_3:   .SET   STRUC_2   
233B                STRUC_2:   .SET   STRUC_TOP   
233B                STRUC_TOP:   .SET   $   
233B                TST_TEXTM_2314S47:      
233B   31 32 33 0D 0A FF 0D 0A DB   "123","\r\n",-1,"\r\n"   
2343                          ;*Macro unroll:  _endskip
2343                          ;*Macro unroll:  STRUC_FWD
2343                CUR_ADR:   .SET   $   
2339                          .ORG   STRUC_TOP - 2   
2339   43 23                  DW   CUR_ADR   
2343                          .ORG   CUR_ADR   
2343                          ;*Macro unroll:  STRUC_POP
2343                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2343                STRUC_TOP:   .SET   STRUC_2   
2343                STRUC_2:   .SET   STRUC_3   
2343                STRUC_3:   .SET   STRUC_4   
2343                STRUC_4:   .SET   STRUC_5   
2343                STRUC_5:   .SET   STRUC_6   
2343                STRUC_6:   .SET   STRUC_7   
2343                STRUC_7:   .SET   STRUC_8   
2343                STRUC_8:   .SET   STRUC_9   
2343                STRUC_9:   .SET   STRUC_10   
2343                STRUC_10:   .SET   STRUC_11   
2343                STRUC_11:   .SET   STRUC_12   
2343                STRUC_12:   .SET   0   
2343                          ;*Macro unroll: INTERPRET
2343   CF                     RST   $08   
2344   57 0B                  DW   interpret   
2346   8F 0E                  DW   exit_forth   
2348                          ;*Macro unroll: EXPECT 123, "interpret 123"
2348   CD A6 09               CALL   printNum   
234B                          ;*Macro unroll:  loadWord H,L, B,C
234B   69                     LD   L,C   
234C   60                     LD   H,B   
234D   69                     LD   L,C   
234E                          ;*Macro unroll:  ppop0 B,C
234E   DD 2B                  DEC   IX   
2350   DD 46 00               LD   B,(IX+0)   
2353   DD 2B                  DEC   IX   
2355   DD 4E 00               LD   C,(IX+0)   
2358                          ;*Macro unroll:  CMP16 123
2358   11 7B 00               LD   DE,123   
235B   B7                     OR   A   
235C   ED 52                  SBC   HL,DE   
235E                          ;*Macro unroll:  checkZeroWord H,L
235E   7D                     LD   A,L   
235F   B4                     OR   H   
2360   CA 81 23               JP   z,tf_doneM_2316S49   
2363   11 F3 0F               LD   DE,FAILED   
2366   CD 5B 11               CALL   printPStr   
2369   11 73 23               LD   DE,te_failM_2316S49   
236C   CD 5B 11               CALL   printPStr   
236F   76                     HALT      
2370                          ;*Macro unroll:  _skip
2370   C3 70 23               JP   $   
2373                          ;*Macro unroll:  STRUC_PUSH $
2373                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2373                STRUC_12:   .SET   STRUC_11   
2373                STRUC_11:   .SET   STRUC_10   
2373                STRUC_10:   .SET   STRUC_9   
2373                STRUC_9:   .SET   STRUC_8   
2373                STRUC_8:   .SET   STRUC_7   
2373                STRUC_7:   .SET   STRUC_6   
2373                STRUC_6:   .SET   STRUC_5   
2373                STRUC_5:   .SET   STRUC_4   
2373                STRUC_4:   .SET   STRUC_3   
2373                STRUC_3:   .SET   STRUC_2   
2373                STRUC_2:   .SET   STRUC_TOP   
2373                STRUC_TOP:   .SET   $   
2373                TE_FAILM_2316S49:      
2373   0D 69 6E 74 65 72 70 72 65 74 20 31 32 33 .PSTR   "interpret 123"   
2381                          ;*Macro unroll:  _endskip
2381                          ;*Macro unroll:  STRUC_FWD
2381                CUR_ADR:   .SET   $   
2371                          .ORG   STRUC_TOP - 2   
2371   81 23                  DW   CUR_ADR   
2381                          .ORG   CUR_ADR   
2381                          ;*Macro unroll:  STRUC_POP
2381                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2381                STRUC_TOP:   .SET   STRUC_2   
2381                STRUC_2:   .SET   STRUC_3   
2381                STRUC_3:   .SET   STRUC_4   
2381                STRUC_4:   .SET   STRUC_5   
2381                STRUC_5:   .SET   STRUC_6   
2381                STRUC_6:   .SET   STRUC_7   
2381                STRUC_7:   .SET   STRUC_8   
2381                STRUC_8:   .SET   STRUC_9   
2381                STRUC_9:   .SET   STRUC_10   
2381                STRUC_10:   .SET   STRUC_11   
2381                STRUC_11:   .SET   STRUC_12   
2381                STRUC_12:   .SET   0   
2381                TF_DONEM_2316S49:      
2381                          ;*Macro unroll: TEST_SET_TEXT "123 constant x123"
2381   2A 45 30               LD   HL,(lineBufStart)   
2384   22 4B 30               LD   (lineBufTop),HL   
2387   22 49 30               LD   (currkey),HL   
238A   21 93 23               LD   HL,tst_textM_2317S51   
238D   22 61 32               LD   (char_pointer),HL   
2390                          ;*Macro unroll:  _skip
2390   C3 90 23               JP   $   
2393                          ;*Macro unroll:  STRUC_PUSH $
2393                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2393                STRUC_12:   .SET   STRUC_11   
2393                STRUC_11:   .SET   STRUC_10   
2393                STRUC_10:   .SET   STRUC_9   
2393                STRUC_9:   .SET   STRUC_8   
2393                STRUC_8:   .SET   STRUC_7   
2393                STRUC_7:   .SET   STRUC_6   
2393                STRUC_6:   .SET   STRUC_5   
2393                STRUC_5:   .SET   STRUC_4   
2393                STRUC_4:   .SET   STRUC_3   
2393                STRUC_3:   .SET   STRUC_2   
2393                STRUC_2:   .SET   STRUC_TOP   
2393                STRUC_TOP:   .SET   $   
2393                TST_TEXTM_2317S51:      
2393   31 32 33 20 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 0D 0A FF 0D 0A DB   "123 constant x123","\r\n",-1,"\r\n"   
23A9                          ;*Macro unroll:  _endskip
23A9                          ;*Macro unroll:  STRUC_FWD
23A9                CUR_ADR:   .SET   $   
2391                          .ORG   STRUC_TOP - 2   
2391   A9 23                  DW   CUR_ADR   
23A9                          .ORG   CUR_ADR   
23A9                          ;*Macro unroll:  STRUC_POP
23A9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23A9                STRUC_TOP:   .SET   STRUC_2   
23A9                STRUC_2:   .SET   STRUC_3   
23A9                STRUC_3:   .SET   STRUC_4   
23A9                STRUC_4:   .SET   STRUC_5   
23A9                STRUC_5:   .SET   STRUC_6   
23A9                STRUC_6:   .SET   STRUC_7   
23A9                STRUC_7:   .SET   STRUC_8   
23A9                STRUC_8:   .SET   STRUC_9   
23A9                STRUC_9:   .SET   STRUC_10   
23A9                STRUC_10:   .SET   STRUC_11   
23A9                STRUC_11:   .SET   STRUC_12   
23A9                STRUC_12:   .SET   0   
23A9                          ;*Macro unroll: INTERPRET
23A9   CF                     RST   $08   
23AA   57 0B                  DW   interpret   
23AC   8F 0E                  DW   exit_forth   
23AE                          ;*Macro unroll: TEST_SET_TEXT "x123"
23AE   2A 45 30               LD   HL,(lineBufStart)   
23B1   22 4B 30               LD   (lineBufTop),HL   
23B4   22 49 30               LD   (currkey),HL   
23B7   21 C0 23               LD   HL,tst_textM_2319S53   
23BA   22 61 32               LD   (char_pointer),HL   
23BD                          ;*Macro unroll:  _skip
23BD   C3 BD 23               JP   $   
23C0                          ;*Macro unroll:  STRUC_PUSH $
23C0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23C0                STRUC_12:   .SET   STRUC_11   
23C0                STRUC_11:   .SET   STRUC_10   
23C0                STRUC_10:   .SET   STRUC_9   
23C0                STRUC_9:   .SET   STRUC_8   
23C0                STRUC_8:   .SET   STRUC_7   
23C0                STRUC_7:   .SET   STRUC_6   
23C0                STRUC_6:   .SET   STRUC_5   
23C0                STRUC_5:   .SET   STRUC_4   
23C0                STRUC_4:   .SET   STRUC_3   
23C0                STRUC_3:   .SET   STRUC_2   
23C0                STRUC_2:   .SET   STRUC_TOP   
23C0                STRUC_TOP:   .SET   $   
23C0                TST_TEXTM_2319S53:      
23C0   78 31 32 33 0D 0A FF 0D 0A DB   "x123","\r\n",-1,"\r\n"   
23C9                          ;*Macro unroll:  _endskip
23C9                          ;*Macro unroll:  STRUC_FWD
23C9                CUR_ADR:   .SET   $   
23BE                          .ORG   STRUC_TOP - 2   
23BE   C9 23                  DW   CUR_ADR   
23C9                          .ORG   CUR_ADR   
23C9                          ;*Macro unroll:  STRUC_POP
23C9                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
23C9                STRUC_TOP:   .SET   STRUC_2   
23C9                STRUC_2:   .SET   STRUC_3   
23C9                STRUC_3:   .SET   STRUC_4   
23C9                STRUC_4:   .SET   STRUC_5   
23C9                STRUC_5:   .SET   STRUC_6   
23C9                STRUC_6:   .SET   STRUC_7   
23C9                STRUC_7:   .SET   STRUC_8   
23C9                STRUC_8:   .SET   STRUC_9   
23C9                STRUC_9:   .SET   STRUC_10   
23C9                STRUC_10:   .SET   STRUC_11   
23C9                STRUC_11:   .SET   STRUC_12   
23C9                STRUC_12:   .SET   0   
23C9                          ;*Macro unroll: INTERPRET
23C9   CF                     RST   $08   
23CA   57 0B                  DW   interpret   
23CC   8F 0E                  DW   exit_forth   
23CE                          ;*Macro unroll: EXPECT 123, "constant x123 = 123"
23CE   CD A6 09               CALL   printNum   
23D1                          ;*Macro unroll:  loadWord H,L, B,C
23D1   69                     LD   L,C   
23D2   60                     LD   H,B   
23D3   69                     LD   L,C   
23D4                          ;*Macro unroll:  ppop0 B,C
23D4   DD 2B                  DEC   IX   
23D6   DD 46 00               LD   B,(IX+0)   
23D9   DD 2B                  DEC   IX   
23DB   DD 4E 00               LD   C,(IX+0)   
23DE                          ;*Macro unroll:  CMP16 123
23DE   11 7B 00               LD   DE,123   
23E1   B7                     OR   A   
23E2   ED 52                  SBC   HL,DE   
23E4                          ;*Macro unroll:  checkZeroWord H,L
23E4   7D                     LD   A,L   
23E5   B4                     OR   H   
23E6   CA 0D 24               JP   z,tf_doneM_2321S55   
23E9   11 F3 0F               LD   DE,FAILED   
23EC   CD 5B 11               CALL   printPStr   
23EF   11 F9 23               LD   DE,te_failM_2321S55   
23F2   CD 5B 11               CALL   printPStr   
23F5   76                     HALT      
23F6                          ;*Macro unroll:  _skip
23F6   C3 F6 23               JP   $   
23F9                          ;*Macro unroll:  STRUC_PUSH $
23F9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
23F9                STRUC_12:   .SET   STRUC_11   
23F9                STRUC_11:   .SET   STRUC_10   
23F9                STRUC_10:   .SET   STRUC_9   
23F9                STRUC_9:   .SET   STRUC_8   
23F9                STRUC_8:   .SET   STRUC_7   
23F9                STRUC_7:   .SET   STRUC_6   
23F9                STRUC_6:   .SET   STRUC_5   
23F9                STRUC_5:   .SET   STRUC_4   
23F9                STRUC_4:   .SET   STRUC_3   
23F9                STRUC_3:   .SET   STRUC_2   
23F9                STRUC_2:   .SET   STRUC_TOP   
23F9                STRUC_TOP:   .SET   $   
23F9                TE_FAILM_2321S55:      
23F9   13 63 6F 6E 73 74 61 6E 74 20 78 31 32 33 20 3D 20 31 32 33 .PSTR   "constant x123 = 123"   
240D                          ;*Macro unroll:  _endskip
240D                          ;*Macro unroll:  STRUC_FWD
240D                CUR_ADR:   .SET   $   
23F7                          .ORG   STRUC_TOP - 2   
23F7   0D 24                  DW   CUR_ADR   
240D                          .ORG   CUR_ADR   
240D                          ;*Macro unroll:  STRUC_POP
240D                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
240D                STRUC_TOP:   .SET   STRUC_2   
240D                STRUC_2:   .SET   STRUC_3   
240D                STRUC_3:   .SET   STRUC_4   
240D                STRUC_4:   .SET   STRUC_5   
240D                STRUC_5:   .SET   STRUC_6   
240D                STRUC_6:   .SET   STRUC_7   
240D                STRUC_7:   .SET   STRUC_8   
240D                STRUC_8:   .SET   STRUC_9   
240D                STRUC_9:   .SET   STRUC_10   
240D                STRUC_10:   .SET   STRUC_11   
240D                STRUC_11:   .SET   STRUC_12   
240D                STRUC_12:   .SET   0   
240D                TF_DONEM_2321S55:      
240D                          ;*Macro unroll: TEST_SET_TEXT "variable v1"
240D   2A 45 30               LD   HL,(lineBufStart)   
2410   22 4B 30               LD   (lineBufTop),HL   
2413   22 49 30               LD   (currkey),HL   
2416   21 1F 24               LD   HL,tst_textM_2322S57   
2419   22 61 32               LD   (char_pointer),HL   
241C                          ;*Macro unroll:  _skip
241C   C3 1C 24               JP   $   
241F                          ;*Macro unroll:  STRUC_PUSH $
241F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
241F                STRUC_12:   .SET   STRUC_11   
241F                STRUC_11:   .SET   STRUC_10   
241F                STRUC_10:   .SET   STRUC_9   
241F                STRUC_9:   .SET   STRUC_8   
241F                STRUC_8:   .SET   STRUC_7   
241F                STRUC_7:   .SET   STRUC_6   
241F                STRUC_6:   .SET   STRUC_5   
241F                STRUC_5:   .SET   STRUC_4   
241F                STRUC_4:   .SET   STRUC_3   
241F                STRUC_3:   .SET   STRUC_2   
241F                STRUC_2:   .SET   STRUC_TOP   
241F                STRUC_TOP:   .SET   $   
241F                TST_TEXTM_2322S57:      
241F   76 61 72 69 61 62 6C 65 20 76 31 0D 0A FF 0D 0A DB   "variable v1","\r\n",-1,"\r\n"   
242F                          ;*Macro unroll:  _endskip
242F                          ;*Macro unroll:  STRUC_FWD
242F                CUR_ADR:   .SET   $   
241D                          .ORG   STRUC_TOP - 2   
241D   2F 24                  DW   CUR_ADR   
242F                          .ORG   CUR_ADR   
242F                          ;*Macro unroll:  STRUC_POP
242F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
242F                STRUC_TOP:   .SET   STRUC_2   
242F                STRUC_2:   .SET   STRUC_3   
242F                STRUC_3:   .SET   STRUC_4   
242F                STRUC_4:   .SET   STRUC_5   
242F                STRUC_5:   .SET   STRUC_6   
242F                STRUC_6:   .SET   STRUC_7   
242F                STRUC_7:   .SET   STRUC_8   
242F                STRUC_8:   .SET   STRUC_9   
242F                STRUC_9:   .SET   STRUC_10   
242F                STRUC_10:   .SET   STRUC_11   
242F                STRUC_11:   .SET   STRUC_12   
242F                STRUC_12:   .SET   0   
242F                          ;*Macro unroll: INTERPRET
242F   CF                     RST   $08   
2430   57 0B                  DW   interpret   
2432   8F 0E                  DW   exit_forth   
2434                          ;*Macro unroll: ppushValue 123
2434                          ;*Macro unroll:  ppush0 B,C
2434   DD 71 00               LD   (IX+0),C   
2437   DD 23                  INC   IX   
2439   DD 70 00               LD   (IX+0),B   
243C   DD 23                  INC   IX   
243E   01 7B 00               LD   BC,123   
2441                          ;*Macro unroll: TEST_SET_TEXT "123 v1 !"
2441   2A 45 30               LD   HL,(lineBufStart)   
2444   22 4B 30               LD   (lineBufTop),HL   
2447   22 49 30               LD   (currkey),HL   
244A   21 53 24               LD   HL,tst_textM_2325S60   
244D   22 61 32               LD   (char_pointer),HL   
2450                          ;*Macro unroll:  _skip
2450   C3 50 24               JP   $   
2453                          ;*Macro unroll:  STRUC_PUSH $
2453                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2453                STRUC_12:   .SET   STRUC_11   
2453                STRUC_11:   .SET   STRUC_10   
2453                STRUC_10:   .SET   STRUC_9   
2453                STRUC_9:   .SET   STRUC_8   
2453                STRUC_8:   .SET   STRUC_7   
2453                STRUC_7:   .SET   STRUC_6   
2453                STRUC_6:   .SET   STRUC_5   
2453                STRUC_5:   .SET   STRUC_4   
2453                STRUC_4:   .SET   STRUC_3   
2453                STRUC_3:   .SET   STRUC_2   
2453                STRUC_2:   .SET   STRUC_TOP   
2453                STRUC_TOP:   .SET   $   
2453                TST_TEXTM_2325S60:      
2453   31 32 33 20 76 31 20 21 0D 0A FF 0D 0A DB   "123 v1 !","\r\n",-1,"\r\n"   
2460                          ;*Macro unroll:  _endskip
2460                          ;*Macro unroll:  STRUC_FWD
2460                CUR_ADR:   .SET   $   
2451                          .ORG   STRUC_TOP - 2   
2451   60 24                  DW   CUR_ADR   
2460                          .ORG   CUR_ADR   
2460                          ;*Macro unroll:  STRUC_POP
2460                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2460                STRUC_TOP:   .SET   STRUC_2   
2460                STRUC_2:   .SET   STRUC_3   
2460                STRUC_3:   .SET   STRUC_4   
2460                STRUC_4:   .SET   STRUC_5   
2460                STRUC_5:   .SET   STRUC_6   
2460                STRUC_6:   .SET   STRUC_7   
2460                STRUC_7:   .SET   STRUC_8   
2460                STRUC_8:   .SET   STRUC_9   
2460                STRUC_9:   .SET   STRUC_10   
2460                STRUC_10:   .SET   STRUC_11   
2460                STRUC_11:   .SET   STRUC_12   
2460                STRUC_12:   .SET   0   
2460                          ;*Macro unroll: INTERPRET
2460   CF                     RST   $08   
2461   57 0B                  DW   interpret   
2463   8F 0E                  DW   exit_forth   
2465                          ;*Macro unroll: TEST_SET_TEXT "v1 @"
2465   2A 45 30               LD   HL,(lineBufStart)   
2468   22 4B 30               LD   (lineBufTop),HL   
246B   22 49 30               LD   (currkey),HL   
246E   21 77 24               LD   HL,tst_textM_2327S62   
2471   22 61 32               LD   (char_pointer),HL   
2474                          ;*Macro unroll:  _skip
2474   C3 74 24               JP   $   
2477                          ;*Macro unroll:  STRUC_PUSH $
2477                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2477                STRUC_12:   .SET   STRUC_11   
2477                STRUC_11:   .SET   STRUC_10   
2477                STRUC_10:   .SET   STRUC_9   
2477                STRUC_9:   .SET   STRUC_8   
2477                STRUC_8:   .SET   STRUC_7   
2477                STRUC_7:   .SET   STRUC_6   
2477                STRUC_6:   .SET   STRUC_5   
2477                STRUC_5:   .SET   STRUC_4   
2477                STRUC_4:   .SET   STRUC_3   
2477                STRUC_3:   .SET   STRUC_2   
2477                STRUC_2:   .SET   STRUC_TOP   
2477                STRUC_TOP:   .SET   $   
2477                TST_TEXTM_2327S62:      
2477   76 31 20 40 0D 0A FF 0D 0A DB   "v1 @","\r\n",-1,"\r\n"   
2480                          ;*Macro unroll:  _endskip
2480                          ;*Macro unroll:  STRUC_FWD
2480                CUR_ADR:   .SET   $   
2475                          .ORG   STRUC_TOP - 2   
2475   80 24                  DW   CUR_ADR   
2480                          .ORG   CUR_ADR   
2480                          ;*Macro unroll:  STRUC_POP
2480                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2480                STRUC_TOP:   .SET   STRUC_2   
2480                STRUC_2:   .SET   STRUC_3   
2480                STRUC_3:   .SET   STRUC_4   
2480                STRUC_4:   .SET   STRUC_5   
2480                STRUC_5:   .SET   STRUC_6   
2480                STRUC_6:   .SET   STRUC_7   
2480                STRUC_7:   .SET   STRUC_8   
2480                STRUC_8:   .SET   STRUC_9   
2480                STRUC_9:   .SET   STRUC_10   
2480                STRUC_10:   .SET   STRUC_11   
2480                STRUC_11:   .SET   STRUC_12   
2480                STRUC_12:   .SET   0   
2480                          ;*Macro unroll: INTERPRET
2480   CF                     RST   $08   
2481   57 0B                  DW   interpret   
2483   8F 0E                  DW   exit_forth   
2485                          ;*Macro unroll: EXPECT 123, "variable v1 = 123"
2485   CD A6 09               CALL   printNum   
2488                          ;*Macro unroll:  loadWord H,L, B,C
2488   69                     LD   L,C   
2489   60                     LD   H,B   
248A   69                     LD   L,C   
248B                          ;*Macro unroll:  ppop0 B,C
248B   DD 2B                  DEC   IX   
248D   DD 46 00               LD   B,(IX+0)   
2490   DD 2B                  DEC   IX   
2492   DD 4E 00               LD   C,(IX+0)   
2495                          ;*Macro unroll:  CMP16 123
2495   11 7B 00               LD   DE,123   
2498   B7                     OR   A   
2499   ED 52                  SBC   HL,DE   
249B                          ;*Macro unroll:  checkZeroWord H,L
249B   7D                     LD   A,L   
249C   B4                     OR   H   
249D   CA C2 24               JP   z,tf_doneM_2329S64   
24A0   11 F3 0F               LD   DE,FAILED   
24A3   CD 5B 11               CALL   printPStr   
24A6   11 B0 24               LD   DE,te_failM_2329S64   
24A9   CD 5B 11               CALL   printPStr   
24AC   76                     HALT      
24AD                          ;*Macro unroll:  _skip
24AD   C3 AD 24               JP   $   
24B0                          ;*Macro unroll:  STRUC_PUSH $
24B0                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24B0                STRUC_12:   .SET   STRUC_11   
24B0                STRUC_11:   .SET   STRUC_10   
24B0                STRUC_10:   .SET   STRUC_9   
24B0                STRUC_9:   .SET   STRUC_8   
24B0                STRUC_8:   .SET   STRUC_7   
24B0                STRUC_7:   .SET   STRUC_6   
24B0                STRUC_6:   .SET   STRUC_5   
24B0                STRUC_5:   .SET   STRUC_4   
24B0                STRUC_4:   .SET   STRUC_3   
24B0                STRUC_3:   .SET   STRUC_2   
24B0                STRUC_2:   .SET   STRUC_TOP   
24B0                STRUC_TOP:   .SET   $   
24B0                TE_FAILM_2329S64:      
24B0   11 76 61 72 69 61 62 6C 65 20 76 31 20 3D 20 31 32 33 .PSTR   "variable v1 = 123"   
24C2                          ;*Macro unroll:  _endskip
24C2                          ;*Macro unroll:  STRUC_FWD
24C2                CUR_ADR:   .SET   $   
24AE                          .ORG   STRUC_TOP - 2   
24AE   C2 24                  DW   CUR_ADR   
24C2                          .ORG   CUR_ADR   
24C2                          ;*Macro unroll:  STRUC_POP
24C2                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24C2                STRUC_TOP:   .SET   STRUC_2   
24C2                STRUC_2:   .SET   STRUC_3   
24C2                STRUC_3:   .SET   STRUC_4   
24C2                STRUC_4:   .SET   STRUC_5   
24C2                STRUC_5:   .SET   STRUC_6   
24C2                STRUC_6:   .SET   STRUC_7   
24C2                STRUC_7:   .SET   STRUC_8   
24C2                STRUC_8:   .SET   STRUC_9   
24C2                STRUC_9:   .SET   STRUC_10   
24C2                STRUC_10:   .SET   STRUC_11   
24C2                STRUC_11:   .SET   STRUC_12   
24C2                STRUC_12:   .SET   0   
24C2                TF_DONEM_2329S64:      
24C2                          ;*Macro unroll: TEST_SET_TEXT ": dbl dup + ;"
24C2   2A 45 30               LD   HL,(lineBufStart)   
24C5   22 4B 30               LD   (lineBufTop),HL   
24C8   22 49 30               LD   (currkey),HL   
24CB   21 D4 24               LD   HL,tst_textM_2330S66   
24CE   22 61 32               LD   (char_pointer),HL   
24D1                          ;*Macro unroll:  _skip
24D1   C3 D1 24               JP   $   
24D4                          ;*Macro unroll:  STRUC_PUSH $
24D4                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
24D4                STRUC_12:   .SET   STRUC_11   
24D4                STRUC_11:   .SET   STRUC_10   
24D4                STRUC_10:   .SET   STRUC_9   
24D4                STRUC_9:   .SET   STRUC_8   
24D4                STRUC_8:   .SET   STRUC_7   
24D4                STRUC_7:   .SET   STRUC_6   
24D4                STRUC_6:   .SET   STRUC_5   
24D4                STRUC_5:   .SET   STRUC_4   
24D4                STRUC_4:   .SET   STRUC_3   
24D4                STRUC_3:   .SET   STRUC_2   
24D4                STRUC_2:   .SET   STRUC_TOP   
24D4                STRUC_TOP:   .SET   $   
24D4                TST_TEXTM_2330S66:      
24D4   3A 20 64 62 6C 20 64 75 70 20 2B 20 3B 0D 0A FF 0D 0A DB   ": dbl dup + ;","\r\n",-1,"\r\n"   
24E6                          ;*Macro unroll:  _endskip
24E6                          ;*Macro unroll:  STRUC_FWD
24E6                CUR_ADR:   .SET   $   
24D2                          .ORG   STRUC_TOP - 2   
24D2   E6 24                  DW   CUR_ADR   
24E6                          .ORG   CUR_ADR   
24E6                          ;*Macro unroll:  STRUC_POP
24E6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
24E6                STRUC_TOP:   .SET   STRUC_2   
24E6                STRUC_2:   .SET   STRUC_3   
24E6                STRUC_3:   .SET   STRUC_4   
24E6                STRUC_4:   .SET   STRUC_5   
24E6                STRUC_5:   .SET   STRUC_6   
24E6                STRUC_6:   .SET   STRUC_7   
24E6                STRUC_7:   .SET   STRUC_8   
24E6                STRUC_8:   .SET   STRUC_9   
24E6                STRUC_9:   .SET   STRUC_10   
24E6                STRUC_10:   .SET   STRUC_11   
24E6                STRUC_11:   .SET   STRUC_12   
24E6                STRUC_12:   .SET   0   
24E6                          ;*Macro unroll: INTERPRET
24E6   CF                     RST   $08   
24E7   57 0B                  DW   interpret   
24E9   8F 0E                  DW   exit_forth   
24EB                          ;*Macro unroll: ppushValue 2
24EB                          ;*Macro unroll:  ppush0 B,C
24EB   DD 71 00               LD   (IX+0),C   
24EE   DD 23                  INC   IX   
24F0   DD 70 00               LD   (IX+0),B   
24F3   DD 23                  INC   IX   
24F5   01 02 00               LD   BC,2   
24F8                          ;*Macro unroll: TEST_SET_TEXT "dbl"
24F8   2A 45 30               LD   HL,(lineBufStart)   
24FB   22 4B 30               LD   (lineBufTop),HL   
24FE   22 49 30               LD   (currkey),HL   
2501   21 0A 25               LD   HL,tst_textM_2333S69   
2504   22 61 32               LD   (char_pointer),HL   
2507                          ;*Macro unroll:  _skip
2507   C3 07 25               JP   $   
250A                          ;*Macro unroll:  STRUC_PUSH $
250A                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
250A                STRUC_12:   .SET   STRUC_11   
250A                STRUC_11:   .SET   STRUC_10   
250A                STRUC_10:   .SET   STRUC_9   
250A                STRUC_9:   .SET   STRUC_8   
250A                STRUC_8:   .SET   STRUC_7   
250A                STRUC_7:   .SET   STRUC_6   
250A                STRUC_6:   .SET   STRUC_5   
250A                STRUC_5:   .SET   STRUC_4   
250A                STRUC_4:   .SET   STRUC_3   
250A                STRUC_3:   .SET   STRUC_2   
250A                STRUC_2:   .SET   STRUC_TOP   
250A                STRUC_TOP:   .SET   $   
250A                TST_TEXTM_2333S69:      
250A   64 62 6C 0D 0A FF 0D 0A DB   "dbl","\r\n",-1,"\r\n"   
2512                          ;*Macro unroll:  _endskip
2512                          ;*Macro unroll:  STRUC_FWD
2512                CUR_ADR:   .SET   $   
2508                          .ORG   STRUC_TOP - 2   
2508   12 25                  DW   CUR_ADR   
2512                          .ORG   CUR_ADR   
2512                          ;*Macro unroll:  STRUC_POP
2512                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2512                STRUC_TOP:   .SET   STRUC_2   
2512                STRUC_2:   .SET   STRUC_3   
2512                STRUC_3:   .SET   STRUC_4   
2512                STRUC_4:   .SET   STRUC_5   
2512                STRUC_5:   .SET   STRUC_6   
2512                STRUC_6:   .SET   STRUC_7   
2512                STRUC_7:   .SET   STRUC_8   
2512                STRUC_8:   .SET   STRUC_9   
2512                STRUC_9:   .SET   STRUC_10   
2512                STRUC_10:   .SET   STRUC_11   
2512                STRUC_11:   .SET   STRUC_12   
2512                STRUC_12:   .SET   0   
2512                          ;*Macro unroll: INTERPRET
2512   CF                     RST   $08   
2513   57 0B                  DW   interpret   
2515   8F 0E                  DW   exit_forth   
2517                          ;*Macro unroll: EXPECT 4, "colon dbl 2 = 4"
2517   CD A6 09               CALL   printNum   
251A                          ;*Macro unroll:  loadWord H,L, B,C
251A   69                     LD   L,C   
251B   60                     LD   H,B   
251C   69                     LD   L,C   
251D                          ;*Macro unroll:  ppop0 B,C
251D   DD 2B                  DEC   IX   
251F   DD 46 00               LD   B,(IX+0)   
2522   DD 2B                  DEC   IX   
2524   DD 4E 00               LD   C,(IX+0)   
2527                          ;*Macro unroll:  CMP16 4
2527   11 04 00               LD   DE,4   
252A   B7                     OR   A   
252B   ED 52                  SBC   HL,DE   
252D                          ;*Macro unroll:  checkZeroWord H,L
252D   7D                     LD   A,L   
252E   B4                     OR   H   
252F   CA 52 25               JP   z,tf_doneM_2335S71   
2532   11 F3 0F               LD   DE,FAILED   
2535   CD 5B 11               CALL   printPStr   
2538   11 42 25               LD   DE,te_failM_2335S71   
253B   CD 5B 11               CALL   printPStr   
253E   76                     HALT      
253F                          ;*Macro unroll:  _skip
253F   C3 3F 25               JP   $   
2542                          ;*Macro unroll:  STRUC_PUSH $
2542                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2542                STRUC_12:   .SET   STRUC_11   
2542                STRUC_11:   .SET   STRUC_10   
2542                STRUC_10:   .SET   STRUC_9   
2542                STRUC_9:   .SET   STRUC_8   
2542                STRUC_8:   .SET   STRUC_7   
2542                STRUC_7:   .SET   STRUC_6   
2542                STRUC_6:   .SET   STRUC_5   
2542                STRUC_5:   .SET   STRUC_4   
2542                STRUC_4:   .SET   STRUC_3   
2542                STRUC_3:   .SET   STRUC_2   
2542                STRUC_2:   .SET   STRUC_TOP   
2542                STRUC_TOP:   .SET   $   
2542                TE_FAILM_2335S71:      
2542   0F 63 6F 6C 6F 6E 20 64 62 6C 20 32 20 3D 20 34 .PSTR   "colon dbl 2 = 4"   
2552                          ;*Macro unroll:  _endskip
2552                          ;*Macro unroll:  STRUC_FWD
2552                CUR_ADR:   .SET   $   
2540                          .ORG   STRUC_TOP - 2   
2540   52 25                  DW   CUR_ADR   
2552                          .ORG   CUR_ADR   
2552                          ;*Macro unroll:  STRUC_POP
2552                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2552                STRUC_TOP:   .SET   STRUC_2   
2552                STRUC_2:   .SET   STRUC_3   
2552                STRUC_3:   .SET   STRUC_4   
2552                STRUC_4:   .SET   STRUC_5   
2552                STRUC_5:   .SET   STRUC_6   
2552                STRUC_6:   .SET   STRUC_7   
2552                STRUC_7:   .SET   STRUC_8   
2552                STRUC_8:   .SET   STRUC_9   
2552                STRUC_9:   .SET   STRUC_10   
2552                STRUC_10:   .SET   STRUC_11   
2552                STRUC_11:   .SET   STRUC_12   
2552                STRUC_12:   .SET   0   
2552                TF_DONEM_2335S71:      
2552                          ;*Macro unroll: ppushValue 200
2552                          ;*Macro unroll:  ppush0 B,C
2552   DD 71 00               LD   (IX+0),C   
2555   DD 23                  INC   IX   
2557   DD 70 00               LD   (IX+0),B   
255A   DD 23                  INC   IX   
255C   01 C8 00               LD   BC,200   
255F                          ;*Macro unroll: ppushValue 1
255F                          ;*Macro unroll:  ppush0 B,C
255F   DD 71 00               LD   (IX+0),C   
2562   DD 23                  INC   IX   
2564   DD 70 00               LD   (IX+0),B   
2567   DD 23                  INC   IX   
2569   01 01 00               LD   BC,1   
256C                          ;*Macro unroll: TEST_SET_TEXT ": testif2 if 100 endif ;"
256C   2A 45 30               LD   HL,(lineBufStart)   
256F   22 4B 30               LD   (lineBufTop),HL   
2572   22 49 30               LD   (currkey),HL   
2575   21 7E 25               LD   HL,tst_textM_2338S75   
2578   22 61 32               LD   (char_pointer),HL   
257B                          ;*Macro unroll:  _skip
257B   C3 7B 25               JP   $   
257E                          ;*Macro unroll:  STRUC_PUSH $
257E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
257E                STRUC_12:   .SET   STRUC_11   
257E                STRUC_11:   .SET   STRUC_10   
257E                STRUC_10:   .SET   STRUC_9   
257E                STRUC_9:   .SET   STRUC_8   
257E                STRUC_8:   .SET   STRUC_7   
257E                STRUC_7:   .SET   STRUC_6   
257E                STRUC_6:   .SET   STRUC_5   
257E                STRUC_5:   .SET   STRUC_4   
257E                STRUC_4:   .SET   STRUC_3   
257E                STRUC_3:   .SET   STRUC_2   
257E                STRUC_2:   .SET   STRUC_TOP   
257E                STRUC_TOP:   .SET   $   
257E                TST_TEXTM_2338S75:      
257E   3A 20 74 65 73 74 69 66 32 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif2 if 100 endif ;","\r\n",-1,"\r\n"   
259B                          ;*Macro unroll:  _endskip
259B                          ;*Macro unroll:  STRUC_FWD
259B                CUR_ADR:   .SET   $   
257C                          .ORG   STRUC_TOP - 2   
257C   9B 25                  DW   CUR_ADR   
259B                          .ORG   CUR_ADR   
259B                          ;*Macro unroll:  STRUC_POP
259B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
259B                STRUC_TOP:   .SET   STRUC_2   
259B                STRUC_2:   .SET   STRUC_3   
259B                STRUC_3:   .SET   STRUC_4   
259B                STRUC_4:   .SET   STRUC_5   
259B                STRUC_5:   .SET   STRUC_6   
259B                STRUC_6:   .SET   STRUC_7   
259B                STRUC_7:   .SET   STRUC_8   
259B                STRUC_8:   .SET   STRUC_9   
259B                STRUC_9:   .SET   STRUC_10   
259B                STRUC_10:   .SET   STRUC_11   
259B                STRUC_11:   .SET   STRUC_12   
259B                STRUC_12:   .SET   0   
259B                          ;*Macro unroll: INTERPRET
259B   CF                     RST   $08   
259C   57 0B                  DW   interpret   
259E   8F 0E                  DW   exit_forth   
25A0                          ;*Macro unroll: TEST_SET_TEXT "testif2"
25A0   2A 45 30               LD   HL,(lineBufStart)   
25A3   22 4B 30               LD   (lineBufTop),HL   
25A6   22 49 30               LD   (currkey),HL   
25A9   21 B2 25               LD   HL,tst_textM_2340S78   
25AC   22 61 32               LD   (char_pointer),HL   
25AF                          ;*Macro unroll:  _skip
25AF   C3 AF 25               JP   $   
25B2                          ;*Macro unroll:  STRUC_PUSH $
25B2                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25B2                STRUC_12:   .SET   STRUC_11   
25B2                STRUC_11:   .SET   STRUC_10   
25B2                STRUC_10:   .SET   STRUC_9   
25B2                STRUC_9:   .SET   STRUC_8   
25B2                STRUC_8:   .SET   STRUC_7   
25B2                STRUC_7:   .SET   STRUC_6   
25B2                STRUC_6:   .SET   STRUC_5   
25B2                STRUC_5:   .SET   STRUC_4   
25B2                STRUC_4:   .SET   STRUC_3   
25B2                STRUC_3:   .SET   STRUC_2   
25B2                STRUC_2:   .SET   STRUC_TOP   
25B2                STRUC_TOP:   .SET   $   
25B2                TST_TEXTM_2340S78:      
25B2   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
25BE                          ;*Macro unroll:  _endskip
25BE                          ;*Macro unroll:  STRUC_FWD
25BE                CUR_ADR:   .SET   $   
25B0                          .ORG   STRUC_TOP - 2   
25B0   BE 25                  DW   CUR_ADR   
25BE                          .ORG   CUR_ADR   
25BE                          ;*Macro unroll:  STRUC_POP
25BE                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
25BE                STRUC_TOP:   .SET   STRUC_2   
25BE                STRUC_2:   .SET   STRUC_3   
25BE                STRUC_3:   .SET   STRUC_4   
25BE                STRUC_4:   .SET   STRUC_5   
25BE                STRUC_5:   .SET   STRUC_6   
25BE                STRUC_6:   .SET   STRUC_7   
25BE                STRUC_7:   .SET   STRUC_8   
25BE                STRUC_8:   .SET   STRUC_9   
25BE                STRUC_9:   .SET   STRUC_10   
25BE                STRUC_10:   .SET   STRUC_11   
25BE                STRUC_11:   .SET   STRUC_12   
25BE                STRUC_12:   .SET   0   
25BE                          ;*Macro unroll: INTERPRET
25BE   CF                     RST   $08   
25BF   57 0B                  DW   interpret   
25C1   8F 0E                  DW   exit_forth   
25C3                          ;*Macro unroll: EXPECT 100, "1 if 100 endif --> 100"
25C3   CD A6 09               CALL   printNum   
25C6                          ;*Macro unroll:  loadWord H,L, B,C
25C6   69                     LD   L,C   
25C7   60                     LD   H,B   
25C8   69                     LD   L,C   
25C9                          ;*Macro unroll:  ppop0 B,C
25C9   DD 2B                  DEC   IX   
25CB   DD 46 00               LD   B,(IX+0)   
25CE   DD 2B                  DEC   IX   
25D0   DD 4E 00               LD   C,(IX+0)   
25D3                          ;*Macro unroll:  CMP16 100
25D3   11 64 00               LD   DE,100   
25D6   B7                     OR   A   
25D7   ED 52                  SBC   HL,DE   
25D9                          ;*Macro unroll:  checkZeroWord H,L
25D9   7D                     LD   A,L   
25DA   B4                     OR   H   
25DB   CA 05 26               JP   z,tf_doneM_2342S80   
25DE   11 F3 0F               LD   DE,FAILED   
25E1   CD 5B 11               CALL   printPStr   
25E4   11 EE 25               LD   DE,te_failM_2342S80   
25E7   CD 5B 11               CALL   printPStr   
25EA   76                     HALT      
25EB                          ;*Macro unroll:  _skip
25EB   C3 EB 25               JP   $   
25EE                          ;*Macro unroll:  STRUC_PUSH $
25EE                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
25EE                STRUC_12:   .SET   STRUC_11   
25EE                STRUC_11:   .SET   STRUC_10   
25EE                STRUC_10:   .SET   STRUC_9   
25EE                STRUC_9:   .SET   STRUC_8   
25EE                STRUC_8:   .SET   STRUC_7   
25EE                STRUC_7:   .SET   STRUC_6   
25EE                STRUC_6:   .SET   STRUC_5   
25EE                STRUC_5:   .SET   STRUC_4   
25EE                STRUC_4:   .SET   STRUC_3   
25EE                STRUC_3:   .SET   STRUC_2   
25EE                STRUC_2:   .SET   STRUC_TOP   
25EE                STRUC_TOP:   .SET   $   
25EE                TE_FAILM_2342S80:      
25EE   16 31 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 31 30 30 .PSTR   "1 if 100 endif --> 100"   
2605                          ;*Macro unroll:  _endskip
2605                          ;*Macro unroll:  STRUC_FWD
2605                CUR_ADR:   .SET   $   
25EC                          .ORG   STRUC_TOP - 2   
25EC   05 26                  DW   CUR_ADR   
2605                          .ORG   CUR_ADR   
2605                          ;*Macro unroll:  STRUC_POP
2605                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2605                STRUC_TOP:   .SET   STRUC_2   
2605                STRUC_2:   .SET   STRUC_3   
2605                STRUC_3:   .SET   STRUC_4   
2605                STRUC_4:   .SET   STRUC_5   
2605                STRUC_5:   .SET   STRUC_6   
2605                STRUC_6:   .SET   STRUC_7   
2605                STRUC_7:   .SET   STRUC_8   
2605                STRUC_8:   .SET   STRUC_9   
2605                STRUC_9:   .SET   STRUC_10   
2605                STRUC_10:   .SET   STRUC_11   
2605                STRUC_11:   .SET   STRUC_12   
2605                STRUC_12:   .SET   0   
2605                TF_DONEM_2342S80:      
2605                          ;*Macro unroll: ppushValue 0
2605                          ;*Macro unroll:  ppush0 B,C
2605   DD 71 00               LD   (IX+0),C   
2608   DD 23                  INC   IX   
260A   DD 70 00               LD   (IX+0),B   
260D   DD 23                  INC   IX   
260F   01 00 00               LD   BC,0   
2612                          ;*Macro unroll: TEST_SET_TEXT "testif2"
2612   2A 45 30               LD   HL,(lineBufStart)   
2615   22 4B 30               LD   (lineBufTop),HL   
2618   22 49 30               LD   (currkey),HL   
261B   21 24 26               LD   HL,tst_textM_2344S83   
261E   22 61 32               LD   (char_pointer),HL   
2621                          ;*Macro unroll:  _skip
2621   C3 21 26               JP   $   
2624                          ;*Macro unroll:  STRUC_PUSH $
2624                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2624                STRUC_12:   .SET   STRUC_11   
2624                STRUC_11:   .SET   STRUC_10   
2624                STRUC_10:   .SET   STRUC_9   
2624                STRUC_9:   .SET   STRUC_8   
2624                STRUC_8:   .SET   STRUC_7   
2624                STRUC_7:   .SET   STRUC_6   
2624                STRUC_6:   .SET   STRUC_5   
2624                STRUC_5:   .SET   STRUC_4   
2624                STRUC_4:   .SET   STRUC_3   
2624                STRUC_3:   .SET   STRUC_2   
2624                STRUC_2:   .SET   STRUC_TOP   
2624                STRUC_TOP:   .SET   $   
2624                TST_TEXTM_2344S83:      
2624   74 65 73 74 69 66 32 0D 0A FF 0D 0A DB   "testif2","\r\n",-1,"\r\n"   
2630                          ;*Macro unroll:  _endskip
2630                          ;*Macro unroll:  STRUC_FWD
2630                CUR_ADR:   .SET   $   
2622                          .ORG   STRUC_TOP - 2   
2622   30 26                  DW   CUR_ADR   
2630                          .ORG   CUR_ADR   
2630                          ;*Macro unroll:  STRUC_POP
2630                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2630                STRUC_TOP:   .SET   STRUC_2   
2630                STRUC_2:   .SET   STRUC_3   
2630                STRUC_3:   .SET   STRUC_4   
2630                STRUC_4:   .SET   STRUC_5   
2630                STRUC_5:   .SET   STRUC_6   
2630                STRUC_6:   .SET   STRUC_7   
2630                STRUC_7:   .SET   STRUC_8   
2630                STRUC_8:   .SET   STRUC_9   
2630                STRUC_9:   .SET   STRUC_10   
2630                STRUC_10:   .SET   STRUC_11   
2630                STRUC_11:   .SET   STRUC_12   
2630                STRUC_12:   .SET   0   
2630                          ;*Macro unroll: INTERPRET
2630   CF                     RST   $08   
2631   57 0B                  DW   interpret   
2633   8F 0E                  DW   exit_forth   
2635                          ;*Macro unroll: EXPECT 200, "0 if 100 endif --> 200"
2635   CD A6 09               CALL   printNum   
2638                          ;*Macro unroll:  loadWord H,L, B,C
2638   69                     LD   L,C   
2639   60                     LD   H,B   
263A   69                     LD   L,C   
263B                          ;*Macro unroll:  ppop0 B,C
263B   DD 2B                  DEC   IX   
263D   DD 46 00               LD   B,(IX+0)   
2640   DD 2B                  DEC   IX   
2642   DD 4E 00               LD   C,(IX+0)   
2645                          ;*Macro unroll:  CMP16 200
2645   11 C8 00               LD   DE,200   
2648   B7                     OR   A   
2649   ED 52                  SBC   HL,DE   
264B                          ;*Macro unroll:  checkZeroWord H,L
264B   7D                     LD   A,L   
264C   B4                     OR   H   
264D   CA 77 26               JP   z,tf_doneM_2346S85   
2650   11 F3 0F               LD   DE,FAILED   
2653   CD 5B 11               CALL   printPStr   
2656   11 60 26               LD   DE,te_failM_2346S85   
2659   CD 5B 11               CALL   printPStr   
265C   76                     HALT      
265D                          ;*Macro unroll:  _skip
265D   C3 5D 26               JP   $   
2660                          ;*Macro unroll:  STRUC_PUSH $
2660                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2660                STRUC_12:   .SET   STRUC_11   
2660                STRUC_11:   .SET   STRUC_10   
2660                STRUC_10:   .SET   STRUC_9   
2660                STRUC_9:   .SET   STRUC_8   
2660                STRUC_8:   .SET   STRUC_7   
2660                STRUC_7:   .SET   STRUC_6   
2660                STRUC_6:   .SET   STRUC_5   
2660                STRUC_5:   .SET   STRUC_4   
2660                STRUC_4:   .SET   STRUC_3   
2660                STRUC_3:   .SET   STRUC_2   
2660                STRUC_2:   .SET   STRUC_TOP   
2660                STRUC_TOP:   .SET   $   
2660                TE_FAILM_2346S85:      
2660   16 30 20 69 66 20 31 30 30 20 65 6E 64 69 66 20 2D 2D 3E 20 32 30 30 .PSTR   "0 if 100 endif --> 200"   
2677                          ;*Macro unroll:  _endskip
2677                          ;*Macro unroll:  STRUC_FWD
2677                CUR_ADR:   .SET   $   
265E                          .ORG   STRUC_TOP - 2   
265E   77 26                  DW   CUR_ADR   
2677                          .ORG   CUR_ADR   
2677                          ;*Macro unroll:  STRUC_POP
2677                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2677                STRUC_TOP:   .SET   STRUC_2   
2677                STRUC_2:   .SET   STRUC_3   
2677                STRUC_3:   .SET   STRUC_4   
2677                STRUC_4:   .SET   STRUC_5   
2677                STRUC_5:   .SET   STRUC_6   
2677                STRUC_6:   .SET   STRUC_7   
2677                STRUC_7:   .SET   STRUC_8   
2677                STRUC_8:   .SET   STRUC_9   
2677                STRUC_9:   .SET   STRUC_10   
2677                STRUC_10:   .SET   STRUC_11   
2677                STRUC_11:   .SET   STRUC_12   
2677                STRUC_12:   .SET   0   
2677                TF_DONEM_2346S85:      
2677                          ;*Macro unroll: TEST_SET_TEXT ": testif3 if 100 else 200 endif ;"
2677   2A 45 30               LD   HL,(lineBufStart)   
267A   22 4B 30               LD   (lineBufTop),HL   
267D   22 49 30               LD   (currkey),HL   
2680   21 89 26               LD   HL,tst_textM_2347S87   
2683   22 61 32               LD   (char_pointer),HL   
2686                          ;*Macro unroll:  _skip
2686   C3 86 26               JP   $   
2689                          ;*Macro unroll:  STRUC_PUSH $
2689                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2689                STRUC_12:   .SET   STRUC_11   
2689                STRUC_11:   .SET   STRUC_10   
2689                STRUC_10:   .SET   STRUC_9   
2689                STRUC_9:   .SET   STRUC_8   
2689                STRUC_8:   .SET   STRUC_7   
2689                STRUC_7:   .SET   STRUC_6   
2689                STRUC_6:   .SET   STRUC_5   
2689                STRUC_5:   .SET   STRUC_4   
2689                STRUC_4:   .SET   STRUC_3   
2689                STRUC_3:   .SET   STRUC_2   
2689                STRUC_2:   .SET   STRUC_TOP   
2689                STRUC_TOP:   .SET   $   
2689                TST_TEXTM_2347S87:      
2689   3A 20 74 65 73 74 69 66 33 20 69 66 20 31 30 30 20 65 6C 73 65 20 32 30 30 20 65 6E 64 69 66 20 3B 0D 0A FF 0D 0A DB   ": testif3 if 100 else 200 endif ;","\r\n",-1,"\r\n"   
26AF                          ;*Macro unroll:  _endskip
26AF                          ;*Macro unroll:  STRUC_FWD
26AF                CUR_ADR:   .SET   $   
2687                          .ORG   STRUC_TOP - 2   
2687   AF 26                  DW   CUR_ADR   
26AF                          .ORG   CUR_ADR   
26AF                          ;*Macro unroll:  STRUC_POP
26AF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26AF                STRUC_TOP:   .SET   STRUC_2   
26AF                STRUC_2:   .SET   STRUC_3   
26AF                STRUC_3:   .SET   STRUC_4   
26AF                STRUC_4:   .SET   STRUC_5   
26AF                STRUC_5:   .SET   STRUC_6   
26AF                STRUC_6:   .SET   STRUC_7   
26AF                STRUC_7:   .SET   STRUC_8   
26AF                STRUC_8:   .SET   STRUC_9   
26AF                STRUC_9:   .SET   STRUC_10   
26AF                STRUC_10:   .SET   STRUC_11   
26AF                STRUC_11:   .SET   STRUC_12   
26AF                STRUC_12:   .SET   0   
26AF                          ;*Macro unroll: INTERPRET
26AF   CF                     RST   $08   
26B0   57 0B                  DW   interpret   
26B2   8F 0E                  DW   exit_forth   
26B4                          ;*Macro unroll: ppushValue 0
26B4                          ;*Macro unroll:  ppush0 B,C
26B4   DD 71 00               LD   (IX+0),C   
26B7   DD 23                  INC   IX   
26B9   DD 70 00               LD   (IX+0),B   
26BC   DD 23                  INC   IX   
26BE   01 00 00               LD   BC,0   
26C1                          ;*Macro unroll: TEST_SET_TEXT "testif3"
26C1   2A 45 30               LD   HL,(lineBufStart)   
26C4   22 4B 30               LD   (lineBufTop),HL   
26C7   22 49 30               LD   (currkey),HL   
26CA   21 D3 26               LD   HL,tst_textM_2350S92   
26CD   22 61 32               LD   (char_pointer),HL   
26D0                          ;*Macro unroll:  _skip
26D0   C3 D0 26               JP   $   
26D3                          ;*Macro unroll:  STRUC_PUSH $
26D3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
26D3                STRUC_12:   .SET   STRUC_11   
26D3                STRUC_11:   .SET   STRUC_10   
26D3                STRUC_10:   .SET   STRUC_9   
26D3                STRUC_9:   .SET   STRUC_8   
26D3                STRUC_8:   .SET   STRUC_7   
26D3                STRUC_7:   .SET   STRUC_6   
26D3                STRUC_6:   .SET   STRUC_5   
26D3                STRUC_5:   .SET   STRUC_4   
26D3                STRUC_4:   .SET   STRUC_3   
26D3                STRUC_3:   .SET   STRUC_2   
26D3                STRUC_2:   .SET   STRUC_TOP   
26D3                STRUC_TOP:   .SET   $   
26D3                TST_TEXTM_2350S92:      
26D3   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
26DF                          ;*Macro unroll:  _endskip
26DF                          ;*Macro unroll:  STRUC_FWD
26DF                CUR_ADR:   .SET   $   
26D1                          .ORG   STRUC_TOP - 2   
26D1   DF 26                  DW   CUR_ADR   
26DF                          .ORG   CUR_ADR   
26DF                          ;*Macro unroll:  STRUC_POP
26DF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
26DF                STRUC_TOP:   .SET   STRUC_2   
26DF                STRUC_2:   .SET   STRUC_3   
26DF                STRUC_3:   .SET   STRUC_4   
26DF                STRUC_4:   .SET   STRUC_5   
26DF                STRUC_5:   .SET   STRUC_6   
26DF                STRUC_6:   .SET   STRUC_7   
26DF                STRUC_7:   .SET   STRUC_8   
26DF                STRUC_8:   .SET   STRUC_9   
26DF                STRUC_9:   .SET   STRUC_10   
26DF                STRUC_10:   .SET   STRUC_11   
26DF                STRUC_11:   .SET   STRUC_12   
26DF                STRUC_12:   .SET   0   
26DF                          ;*Macro unroll: INTERPRET
26DF   CF                     RST   $08   
26E0   57 0B                  DW   interpret   
26E2   8F 0E                  DW   exit_forth   
26E4                          ;*Macro unroll: EXPECT 200, "0 --> 200"
26E4   CD A6 09               CALL   printNum   
26E7                          ;*Macro unroll:  loadWord H,L, B,C
26E7   69                     LD   L,C   
26E8   60                     LD   H,B   
26E9   69                     LD   L,C   
26EA                          ;*Macro unroll:  ppop0 B,C
26EA   DD 2B                  DEC   IX   
26EC   DD 46 00               LD   B,(IX+0)   
26EF   DD 2B                  DEC   IX   
26F1   DD 4E 00               LD   C,(IX+0)   
26F4                          ;*Macro unroll:  CMP16 200
26F4   11 C8 00               LD   DE,200   
26F7   B7                     OR   A   
26F8   ED 52                  SBC   HL,DE   
26FA                          ;*Macro unroll:  checkZeroWord H,L
26FA   7D                     LD   A,L   
26FB   B4                     OR   H   
26FC   CA 19 27               JP   z,tf_doneM_2352S94   
26FF   11 F3 0F               LD   DE,FAILED   
2702   CD 5B 11               CALL   printPStr   
2705   11 0F 27               LD   DE,te_failM_2352S94   
2708   CD 5B 11               CALL   printPStr   
270B   76                     HALT      
270C                          ;*Macro unroll:  _skip
270C   C3 0C 27               JP   $   
270F                          ;*Macro unroll:  STRUC_PUSH $
270F                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
270F                STRUC_12:   .SET   STRUC_11   
270F                STRUC_11:   .SET   STRUC_10   
270F                STRUC_10:   .SET   STRUC_9   
270F                STRUC_9:   .SET   STRUC_8   
270F                STRUC_8:   .SET   STRUC_7   
270F                STRUC_7:   .SET   STRUC_6   
270F                STRUC_6:   .SET   STRUC_5   
270F                STRUC_5:   .SET   STRUC_4   
270F                STRUC_4:   .SET   STRUC_3   
270F                STRUC_3:   .SET   STRUC_2   
270F                STRUC_2:   .SET   STRUC_TOP   
270F                STRUC_TOP:   .SET   $   
270F                TE_FAILM_2352S94:      
270F   09 30 20 2D 2D 3E 20 32 30 30 .PSTR   "0 --> 200"   
2719                          ;*Macro unroll:  _endskip
2719                          ;*Macro unroll:  STRUC_FWD
2719                CUR_ADR:   .SET   $   
270D                          .ORG   STRUC_TOP - 2   
270D   19 27                  DW   CUR_ADR   
2719                          .ORG   CUR_ADR   
2719                          ;*Macro unroll:  STRUC_POP
2719                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2719                STRUC_TOP:   .SET   STRUC_2   
2719                STRUC_2:   .SET   STRUC_3   
2719                STRUC_3:   .SET   STRUC_4   
2719                STRUC_4:   .SET   STRUC_5   
2719                STRUC_5:   .SET   STRUC_6   
2719                STRUC_6:   .SET   STRUC_7   
2719                STRUC_7:   .SET   STRUC_8   
2719                STRUC_8:   .SET   STRUC_9   
2719                STRUC_9:   .SET   STRUC_10   
2719                STRUC_10:   .SET   STRUC_11   
2719                STRUC_11:   .SET   STRUC_12   
2719                STRUC_12:   .SET   0   
2719                TF_DONEM_2352S94:      
2719                          ;*Macro unroll: ppushValue 1
2719                          ;*Macro unroll:  ppush0 B,C
2719   DD 71 00               LD   (IX+0),C   
271C   DD 23                  INC   IX   
271E   DD 70 00               LD   (IX+0),B   
2721   DD 23                  INC   IX   
2723   01 01 00               LD   BC,1   
2726                          ;*Macro unroll: TEST_SET_TEXT "testif3"
2726   2A 45 30               LD   HL,(lineBufStart)   
2729   22 4B 30               LD   (lineBufTop),HL   
272C   22 49 30               LD   (currkey),HL   
272F   21 38 27               LD   HL,tst_textM_2354S98   
2732   22 61 32               LD   (char_pointer),HL   
2735                          ;*Macro unroll:  _skip
2735   C3 35 27               JP   $   
2738                          ;*Macro unroll:  STRUC_PUSH $
2738                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2738                STRUC_12:   .SET   STRUC_11   
2738                STRUC_11:   .SET   STRUC_10   
2738                STRUC_10:   .SET   STRUC_9   
2738                STRUC_9:   .SET   STRUC_8   
2738                STRUC_8:   .SET   STRUC_7   
2738                STRUC_7:   .SET   STRUC_6   
2738                STRUC_6:   .SET   STRUC_5   
2738                STRUC_5:   .SET   STRUC_4   
2738                STRUC_4:   .SET   STRUC_3   
2738                STRUC_3:   .SET   STRUC_2   
2738                STRUC_2:   .SET   STRUC_TOP   
2738                STRUC_TOP:   .SET   $   
2738                TST_TEXTM_2354S98:      
2738   74 65 73 74 69 66 33 0D 0A FF 0D 0A DB   "testif3","\r\n",-1,"\r\n"   
2744                          ;*Macro unroll:  _endskip
2744                          ;*Macro unroll:  STRUC_FWD
2744                CUR_ADR:   .SET   $   
2736                          .ORG   STRUC_TOP - 2   
2736   44 27                  DW   CUR_ADR   
2744                          .ORG   CUR_ADR   
2744                          ;*Macro unroll:  STRUC_POP
2744                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2744                STRUC_TOP:   .SET   STRUC_2   
2744                STRUC_2:   .SET   STRUC_3   
2744                STRUC_3:   .SET   STRUC_4   
2744                STRUC_4:   .SET   STRUC_5   
2744                STRUC_5:   .SET   STRUC_6   
2744                STRUC_6:   .SET   STRUC_7   
2744                STRUC_7:   .SET   STRUC_8   
2744                STRUC_8:   .SET   STRUC_9   
2744                STRUC_9:   .SET   STRUC_10   
2744                STRUC_10:   .SET   STRUC_11   
2744                STRUC_11:   .SET   STRUC_12   
2744                STRUC_12:   .SET   0   
2744                          ;*Macro unroll: INTERPRET
2744   CF                     RST   $08   
2745   57 0B                  DW   interpret   
2747   8F 0E                  DW   exit_forth   
2749                          ;*Macro unroll: EXPECT 100, "1 --> 100"
2749   CD A6 09               CALL   printNum   
274C                          ;*Macro unroll:  loadWord H,L, B,C
274C   69                     LD   L,C   
274D   60                     LD   H,B   
274E   69                     LD   L,C   
274F                          ;*Macro unroll:  ppop0 B,C
274F   DD 2B                  DEC   IX   
2751   DD 46 00               LD   B,(IX+0)   
2754   DD 2B                  DEC   IX   
2756   DD 4E 00               LD   C,(IX+0)   
2759                          ;*Macro unroll:  CMP16 100
2759   11 64 00               LD   DE,100   
275C   B7                     OR   A   
275D   ED 52                  SBC   HL,DE   
275F                          ;*Macro unroll:  checkZeroWord H,L
275F   7D                     LD   A,L   
2760   B4                     OR   H   
2761   CA 7E 27               JP   z,tf_doneM_2356S100   
2764   11 F3 0F               LD   DE,FAILED   
2767   CD 5B 11               CALL   printPStr   
276A   11 74 27               LD   DE,te_failM_2356S100   
276D   CD 5B 11               CALL   printPStr   
2770   76                     HALT      
2771                          ;*Macro unroll:  _skip
2771   C3 71 27               JP   $   
2774                          ;*Macro unroll:  STRUC_PUSH $
2774                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2774                STRUC_12:   .SET   STRUC_11   
2774                STRUC_11:   .SET   STRUC_10   
2774                STRUC_10:   .SET   STRUC_9   
2774                STRUC_9:   .SET   STRUC_8   
2774                STRUC_8:   .SET   STRUC_7   
2774                STRUC_7:   .SET   STRUC_6   
2774                STRUC_6:   .SET   STRUC_5   
2774                STRUC_5:   .SET   STRUC_4   
2774                STRUC_4:   .SET   STRUC_3   
2774                STRUC_3:   .SET   STRUC_2   
2774                STRUC_2:   .SET   STRUC_TOP   
2774                STRUC_TOP:   .SET   $   
2774                TE_FAILM_2356S100:      
2774   09 31 20 2D 2D 3E 20 31 30 30 .PSTR   "1 --> 100"   
277E                          ;*Macro unroll:  _endskip
277E                          ;*Macro unroll:  STRUC_FWD
277E                CUR_ADR:   .SET   $   
2772                          .ORG   STRUC_TOP - 2   
2772   7E 27                  DW   CUR_ADR   
277E                          .ORG   CUR_ADR   
277E                          ;*Macro unroll:  STRUC_POP
277E                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
277E                STRUC_TOP:   .SET   STRUC_2   
277E                STRUC_2:   .SET   STRUC_3   
277E                STRUC_3:   .SET   STRUC_4   
277E                STRUC_4:   .SET   STRUC_5   
277E                STRUC_5:   .SET   STRUC_6   
277E                STRUC_6:   .SET   STRUC_7   
277E                STRUC_7:   .SET   STRUC_8   
277E                STRUC_8:   .SET   STRUC_9   
277E                STRUC_9:   .SET   STRUC_10   
277E                STRUC_10:   .SET   STRUC_11   
277E                STRUC_11:   .SET   STRUC_12   
277E                STRUC_12:   .SET   0   
277E                TF_DONEM_2356S100:      
277E                          ;*Macro unroll: TEST_SET_TEXT ": testloop begin dup 5 < while dup . 1+ repeat ;"
277E   2A 45 30               LD   HL,(lineBufStart)   
2781   22 4B 30               LD   (lineBufTop),HL   
2784   22 49 30               LD   (currkey),HL   
2787   21 90 27               LD   HL,tst_textM_2357S102   
278A   22 61 32               LD   (char_pointer),HL   
278D                          ;*Macro unroll:  _skip
278D   C3 8D 27               JP   $   
2790                          ;*Macro unroll:  STRUC_PUSH $
2790                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2790                STRUC_12:   .SET   STRUC_11   
2790                STRUC_11:   .SET   STRUC_10   
2790                STRUC_10:   .SET   STRUC_9   
2790                STRUC_9:   .SET   STRUC_8   
2790                STRUC_8:   .SET   STRUC_7   
2790                STRUC_7:   .SET   STRUC_6   
2790                STRUC_6:   .SET   STRUC_5   
2790                STRUC_5:   .SET   STRUC_4   
2790                STRUC_4:   .SET   STRUC_3   
2790                STRUC_3:   .SET   STRUC_2   
2790                STRUC_2:   .SET   STRUC_TOP   
2790                STRUC_TOP:   .SET   $   
2790                TST_TEXTM_2357S102:      
2790   3A 20 74 65 73 74 6C 6F 6F 70 20 62 65 67 69 6E 20 64 75 70 20 35 20 3C 20 77 68 69 6C 65 20 64 75 70 20 2E 20 31 2B 20 72 65 70 65 61 74 20 3B 0D 0A FF 0D 0A DB   ": testloop begin dup 5 < while dup . 1+ repeat ;","\r\n",-1,"\r\n"   
27C5                          ;*Macro unroll:  _endskip
27C5                          ;*Macro unroll:  STRUC_FWD
27C5                CUR_ADR:   .SET   $   
278E                          .ORG   STRUC_TOP - 2   
278E   C5 27                  DW   CUR_ADR   
27C5                          .ORG   CUR_ADR   
27C5                          ;*Macro unroll:  STRUC_POP
27C5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27C5                STRUC_TOP:   .SET   STRUC_2   
27C5                STRUC_2:   .SET   STRUC_3   
27C5                STRUC_3:   .SET   STRUC_4   
27C5                STRUC_4:   .SET   STRUC_5   
27C5                STRUC_5:   .SET   STRUC_6   
27C5                STRUC_6:   .SET   STRUC_7   
27C5                STRUC_7:   .SET   STRUC_8   
27C5                STRUC_8:   .SET   STRUC_9   
27C5                STRUC_9:   .SET   STRUC_10   
27C5                STRUC_10:   .SET   STRUC_11   
27C5                STRUC_11:   .SET   STRUC_12   
27C5                STRUC_12:   .SET   0   
27C5                          ;*Macro unroll: INTERPRET
27C5   CF                     RST   $08   
27C6   57 0B                  DW   interpret   
27C8   8F 0E                  DW   exit_forth   
27CA                          ;*Macro unroll: ppushValue 0
27CA                          ;*Macro unroll:  ppush0 B,C
27CA   DD 71 00               LD   (IX+0),C   
27CD   DD 23                  INC   IX   
27CF   DD 70 00               LD   (IX+0),B   
27D2   DD 23                  INC   IX   
27D4   01 00 00               LD   BC,0   
27D7                          ;*Macro unroll: TEST_SET_TEXT "testloop"
27D7   2A 45 30               LD   HL,(lineBufStart)   
27DA   22 4B 30               LD   (lineBufTop),HL   
27DD   22 49 30               LD   (currkey),HL   
27E0   21 E9 27               LD   HL,tst_textM_2360S105   
27E3   22 61 32               LD   (char_pointer),HL   
27E6                          ;*Macro unroll:  _skip
27E6   C3 E6 27               JP   $   
27E9                          ;*Macro unroll:  STRUC_PUSH $
27E9                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
27E9                STRUC_12:   .SET   STRUC_11   
27E9                STRUC_11:   .SET   STRUC_10   
27E9                STRUC_10:   .SET   STRUC_9   
27E9                STRUC_9:   .SET   STRUC_8   
27E9                STRUC_8:   .SET   STRUC_7   
27E9                STRUC_7:   .SET   STRUC_6   
27E9                STRUC_6:   .SET   STRUC_5   
27E9                STRUC_5:   .SET   STRUC_4   
27E9                STRUC_4:   .SET   STRUC_3   
27E9                STRUC_3:   .SET   STRUC_2   
27E9                STRUC_2:   .SET   STRUC_TOP   
27E9                STRUC_TOP:   .SET   $   
27E9                TST_TEXTM_2360S105:      
27E9   74 65 73 74 6C 6F 6F 70 0D 0A FF 0D 0A DB   "testloop","\r\n",-1,"\r\n"   
27F6                          ;*Macro unroll:  _endskip
27F6                          ;*Macro unroll:  STRUC_FWD
27F6                CUR_ADR:   .SET   $   
27E7                          .ORG   STRUC_TOP - 2   
27E7   F6 27                  DW   CUR_ADR   
27F6                          .ORG   CUR_ADR   
27F6                          ;*Macro unroll:  STRUC_POP
27F6                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
27F6                STRUC_TOP:   .SET   STRUC_2   
27F6                STRUC_2:   .SET   STRUC_3   
27F6                STRUC_3:   .SET   STRUC_4   
27F6                STRUC_4:   .SET   STRUC_5   
27F6                STRUC_5:   .SET   STRUC_6   
27F6                STRUC_6:   .SET   STRUC_7   
27F6                STRUC_7:   .SET   STRUC_8   
27F6                STRUC_8:   .SET   STRUC_9   
27F6                STRUC_9:   .SET   STRUC_10   
27F6                STRUC_10:   .SET   STRUC_11   
27F6                STRUC_11:   .SET   STRUC_12   
27F6                STRUC_12:   .SET   0   
27F6                          ;*Macro unroll: INTERPRET
27F6   CF                     RST   $08   
27F7   57 0B                  DW   interpret   
27F9   8F 0E                  DW   exit_forth   
27FB                          ;*Macro unroll: EXPECT 5, "Loop until limit < 5"
27FB   CD A6 09               CALL   printNum   
27FE                          ;*Macro unroll:  loadWord H,L, B,C
27FE   69                     LD   L,C   
27FF   60                     LD   H,B   
2800   69                     LD   L,C   
2801                          ;*Macro unroll:  ppop0 B,C
2801   DD 2B                  DEC   IX   
2803   DD 46 00               LD   B,(IX+0)   
2806   DD 2B                  DEC   IX   
2808   DD 4E 00               LD   C,(IX+0)   
280B                          ;*Macro unroll:  CMP16 5
280B   11 05 00               LD   DE,5   
280E   B7                     OR   A   
280F   ED 52                  SBC   HL,DE   
2811                          ;*Macro unroll:  checkZeroWord H,L
2811   7D                     LD   A,L   
2812   B4                     OR   H   
2813   CA 3B 28               JP   z,tf_doneM_2362S107   
2816   11 F3 0F               LD   DE,FAILED   
2819   CD 5B 11               CALL   printPStr   
281C   11 26 28               LD   DE,te_failM_2362S107   
281F   CD 5B 11               CALL   printPStr   
2822   76                     HALT      
2823                          ;*Macro unroll:  _skip
2823   C3 23 28               JP   $   
2826                          ;*Macro unroll:  STRUC_PUSH $
2826                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2826                STRUC_12:   .SET   STRUC_11   
2826                STRUC_11:   .SET   STRUC_10   
2826                STRUC_10:   .SET   STRUC_9   
2826                STRUC_9:   .SET   STRUC_8   
2826                STRUC_8:   .SET   STRUC_7   
2826                STRUC_7:   .SET   STRUC_6   
2826                STRUC_6:   .SET   STRUC_5   
2826                STRUC_5:   .SET   STRUC_4   
2826                STRUC_4:   .SET   STRUC_3   
2826                STRUC_3:   .SET   STRUC_2   
2826                STRUC_2:   .SET   STRUC_TOP   
2826                STRUC_TOP:   .SET   $   
2826                TE_FAILM_2362S107:      
2826   14 4C 6F 6F 70 20 75 6E 74 69 6C 20 6C 69 6D 69 74 20 3C 20 35 .PSTR   "Loop until limit < 5"   
283B                          ;*Macro unroll:  _endskip
283B                          ;*Macro unroll:  STRUC_FWD
283B                CUR_ADR:   .SET   $   
2824                          .ORG   STRUC_TOP - 2   
2824   3B 28                  DW   CUR_ADR   
283B                          .ORG   CUR_ADR   
283B                          ;*Macro unroll:  STRUC_POP
283B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
283B                STRUC_TOP:   .SET   STRUC_2   
283B                STRUC_2:   .SET   STRUC_3   
283B                STRUC_3:   .SET   STRUC_4   
283B                STRUC_4:   .SET   STRUC_5   
283B                STRUC_5:   .SET   STRUC_6   
283B                STRUC_6:   .SET   STRUC_7   
283B                STRUC_7:   .SET   STRUC_8   
283B                STRUC_8:   .SET   STRUC_9   
283B                STRUC_9:   .SET   STRUC_10   
283B                STRUC_10:   .SET   STRUC_11   
283B                STRUC_11:   .SET   STRUC_12   
283B                STRUC_12:   .SET   0   
283B                TF_DONEM_2362S107:      
283B                          ;*Macro unroll: TEST_SET_TEXT "100"
283B   2A 45 30               LD   HL,(lineBufStart)   
283E   22 4B 30               LD   (lineBufTop),HL   
2841   22 49 30               LD   (currkey),HL   
2844   21 4D 28               LD   HL,tst_textM_2363S110   
2847   22 61 32               LD   (char_pointer),HL   
284A                          ;*Macro unroll:  _skip
284A   C3 4A 28               JP   $   
284D                          ;*Macro unroll:  STRUC_PUSH $
284D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
284D                STRUC_12:   .SET   STRUC_11   
284D                STRUC_11:   .SET   STRUC_10   
284D                STRUC_10:   .SET   STRUC_9   
284D                STRUC_9:   .SET   STRUC_8   
284D                STRUC_8:   .SET   STRUC_7   
284D                STRUC_7:   .SET   STRUC_6   
284D                STRUC_6:   .SET   STRUC_5   
284D                STRUC_5:   .SET   STRUC_4   
284D                STRUC_4:   .SET   STRUC_3   
284D                STRUC_3:   .SET   STRUC_2   
284D                STRUC_2:   .SET   STRUC_TOP   
284D                STRUC_TOP:   .SET   $   
284D                TST_TEXTM_2363S110:      
284D   31 30 30 0D 0A FF 0D 0A DB   "100","\r\n",-1,"\r\n"   
2855                          ;*Macro unroll:  _endskip
2855                          ;*Macro unroll:  STRUC_FWD
2855                CUR_ADR:   .SET   $   
284B                          .ORG   STRUC_TOP - 2   
284B   55 28                  DW   CUR_ADR   
2855                          .ORG   CUR_ADR   
2855                          ;*Macro unroll:  STRUC_POP
2855                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2855                STRUC_TOP:   .SET   STRUC_2   
2855                STRUC_2:   .SET   STRUC_3   
2855                STRUC_3:   .SET   STRUC_4   
2855                STRUC_4:   .SET   STRUC_5   
2855                STRUC_5:   .SET   STRUC_6   
2855                STRUC_6:   .SET   STRUC_7   
2855                STRUC_7:   .SET   STRUC_8   
2855                STRUC_8:   .SET   STRUC_9   
2855                STRUC_9:   .SET   STRUC_10   
2855                STRUC_10:   .SET   STRUC_11   
2855                STRUC_11:   .SET   STRUC_12   
2855                STRUC_12:   .SET   0   
2855                          ;*Macro unroll: INTERPRET
2855   CF                     RST   $08   
2856   57 0B                  DW   interpret   
2858   8F 0E                  DW   exit_forth   
285A                          ;*Macro unroll: EXPECT 100, "interpret parse 100"
285A   CD A6 09               CALL   printNum   
285D                          ;*Macro unroll:  loadWord H,L, B,C
285D   69                     LD   L,C   
285E   60                     LD   H,B   
285F   69                     LD   L,C   
2860                          ;*Macro unroll:  ppop0 B,C
2860   DD 2B                  DEC   IX   
2862   DD 46 00               LD   B,(IX+0)   
2865   DD 2B                  DEC   IX   
2867   DD 4E 00               LD   C,(IX+0)   
286A                          ;*Macro unroll:  CMP16 100
286A   11 64 00               LD   DE,100   
286D   B7                     OR   A   
286E   ED 52                  SBC   HL,DE   
2870                          ;*Macro unroll:  checkZeroWord H,L
2870   7D                     LD   A,L   
2871   B4                     OR   H   
2872   CA 99 28               JP   z,tf_doneM_2365S112   
2875   11 F3 0F               LD   DE,FAILED   
2878   CD 5B 11               CALL   printPStr   
287B   11 85 28               LD   DE,te_failM_2365S112   
287E   CD 5B 11               CALL   printPStr   
2881   76                     HALT      
2882                          ;*Macro unroll:  _skip
2882   C3 82 28               JP   $   
2885                          ;*Macro unroll:  STRUC_PUSH $
2885                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2885                STRUC_12:   .SET   STRUC_11   
2885                STRUC_11:   .SET   STRUC_10   
2885                STRUC_10:   .SET   STRUC_9   
2885                STRUC_9:   .SET   STRUC_8   
2885                STRUC_8:   .SET   STRUC_7   
2885                STRUC_7:   .SET   STRUC_6   
2885                STRUC_6:   .SET   STRUC_5   
2885                STRUC_5:   .SET   STRUC_4   
2885                STRUC_4:   .SET   STRUC_3   
2885                STRUC_3:   .SET   STRUC_2   
2885                STRUC_2:   .SET   STRUC_TOP   
2885                STRUC_TOP:   .SET   $   
2885                TE_FAILM_2365S112:      
2885   13 69 6E 74 65 72 70 72 65 74 20 70 61 72 73 65 20 31 30 30 .PSTR   "interpret parse 100"   
2899                          ;*Macro unroll:  _endskip
2899                          ;*Macro unroll:  STRUC_FWD
2899                CUR_ADR:   .SET   $   
2883                          .ORG   STRUC_TOP - 2   
2883   99 28                  DW   CUR_ADR   
2899                          .ORG   CUR_ADR   
2899                          ;*Macro unroll:  STRUC_POP
2899                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2899                STRUC_TOP:   .SET   STRUC_2   
2899                STRUC_2:   .SET   STRUC_3   
2899                STRUC_3:   .SET   STRUC_4   
2899                STRUC_4:   .SET   STRUC_5   
2899                STRUC_5:   .SET   STRUC_6   
2899                STRUC_6:   .SET   STRUC_7   
2899                STRUC_7:   .SET   STRUC_8   
2899                STRUC_8:   .SET   STRUC_9   
2899                STRUC_9:   .SET   STRUC_10   
2899                STRUC_10:   .SET   STRUC_11   
2899                STRUC_11:   .SET   STRUC_12   
2899                STRUC_12:   .SET   0   
2899                TF_DONEM_2365S112:      
2899                          ;*Macro unroll: TEST_SET_TEXT "3 2 +"
2899   2A 45 30               LD   HL,(lineBufStart)   
289C   22 4B 30               LD   (lineBufTop),HL   
289F   22 49 30               LD   (currkey),HL   
28A2   21 AB 28               LD   HL,tst_textM_2366S114   
28A5   22 61 32               LD   (char_pointer),HL   
28A8                          ;*Macro unroll:  _skip
28A8   C3 A8 28               JP   $   
28AB                          ;*Macro unroll:  STRUC_PUSH $
28AB                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28AB                STRUC_12:   .SET   STRUC_11   
28AB                STRUC_11:   .SET   STRUC_10   
28AB                STRUC_10:   .SET   STRUC_9   
28AB                STRUC_9:   .SET   STRUC_8   
28AB                STRUC_8:   .SET   STRUC_7   
28AB                STRUC_7:   .SET   STRUC_6   
28AB                STRUC_6:   .SET   STRUC_5   
28AB                STRUC_5:   .SET   STRUC_4   
28AB                STRUC_4:   .SET   STRUC_3   
28AB                STRUC_3:   .SET   STRUC_2   
28AB                STRUC_2:   .SET   STRUC_TOP   
28AB                STRUC_TOP:   .SET   $   
28AB                TST_TEXTM_2366S114:      
28AB   33 20 32 20 2B 0D 0A FF 0D 0A DB   "3 2 +","\r\n",-1,"\r\n"   
28B5                          ;*Macro unroll:  _endskip
28B5                          ;*Macro unroll:  STRUC_FWD
28B5                CUR_ADR:   .SET   $   
28A9                          .ORG   STRUC_TOP - 2   
28A9   B5 28                  DW   CUR_ADR   
28B5                          .ORG   CUR_ADR   
28B5                          ;*Macro unroll:  STRUC_POP
28B5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28B5                STRUC_TOP:   .SET   STRUC_2   
28B5                STRUC_2:   .SET   STRUC_3   
28B5                STRUC_3:   .SET   STRUC_4   
28B5                STRUC_4:   .SET   STRUC_5   
28B5                STRUC_5:   .SET   STRUC_6   
28B5                STRUC_6:   .SET   STRUC_7   
28B5                STRUC_7:   .SET   STRUC_8   
28B5                STRUC_8:   .SET   STRUC_9   
28B5                STRUC_9:   .SET   STRUC_10   
28B5                STRUC_10:   .SET   STRUC_11   
28B5                STRUC_11:   .SET   STRUC_12   
28B5                STRUC_12:   .SET   0   
28B5                          ;*Macro unroll: INTERPRET
28B5   CF                     RST   $08   
28B6   57 0B                  DW   interpret   
28B8   8F 0E                  DW   exit_forth   
28BA                          ;*Macro unroll: EXPECT 5, "3 + 2 = 5"
28BA   CD A6 09               CALL   printNum   
28BD                          ;*Macro unroll:  loadWord H,L, B,C
28BD   69                     LD   L,C   
28BE   60                     LD   H,B   
28BF   69                     LD   L,C   
28C0                          ;*Macro unroll:  ppop0 B,C
28C0   DD 2B                  DEC   IX   
28C2   DD 46 00               LD   B,(IX+0)   
28C5   DD 2B                  DEC   IX   
28C7   DD 4E 00               LD   C,(IX+0)   
28CA                          ;*Macro unroll:  CMP16 5
28CA   11 05 00               LD   DE,5   
28CD   B7                     OR   A   
28CE   ED 52                  SBC   HL,DE   
28D0                          ;*Macro unroll:  checkZeroWord H,L
28D0   7D                     LD   A,L   
28D1   B4                     OR   H   
28D2   CA EF 28               JP   z,tf_doneM_2368S116   
28D5   11 F3 0F               LD   DE,FAILED   
28D8   CD 5B 11               CALL   printPStr   
28DB   11 E5 28               LD   DE,te_failM_2368S116   
28DE   CD 5B 11               CALL   printPStr   
28E1   76                     HALT      
28E2                          ;*Macro unroll:  _skip
28E2   C3 E2 28               JP   $   
28E5                          ;*Macro unroll:  STRUC_PUSH $
28E5                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
28E5                STRUC_12:   .SET   STRUC_11   
28E5                STRUC_11:   .SET   STRUC_10   
28E5                STRUC_10:   .SET   STRUC_9   
28E5                STRUC_9:   .SET   STRUC_8   
28E5                STRUC_8:   .SET   STRUC_7   
28E5                STRUC_7:   .SET   STRUC_6   
28E5                STRUC_6:   .SET   STRUC_5   
28E5                STRUC_5:   .SET   STRUC_4   
28E5                STRUC_4:   .SET   STRUC_3   
28E5                STRUC_3:   .SET   STRUC_2   
28E5                STRUC_2:   .SET   STRUC_TOP   
28E5                STRUC_TOP:   .SET   $   
28E5                TE_FAILM_2368S116:      
28E5   09 33 20 2B 20 32 20 3D 20 35 .PSTR   "3 + 2 = 5"   
28EF                          ;*Macro unroll:  _endskip
28EF                          ;*Macro unroll:  STRUC_FWD
28EF                CUR_ADR:   .SET   $   
28E3                          .ORG   STRUC_TOP - 2   
28E3   EF 28                  DW   CUR_ADR   
28EF                          .ORG   CUR_ADR   
28EF                          ;*Macro unroll:  STRUC_POP
28EF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
28EF                STRUC_TOP:   .SET   STRUC_2   
28EF                STRUC_2:   .SET   STRUC_3   
28EF                STRUC_3:   .SET   STRUC_4   
28EF                STRUC_4:   .SET   STRUC_5   
28EF                STRUC_5:   .SET   STRUC_6   
28EF                STRUC_6:   .SET   STRUC_7   
28EF                STRUC_7:   .SET   STRUC_8   
28EF                STRUC_8:   .SET   STRUC_9   
28EF                STRUC_9:   .SET   STRUC_10   
28EF                STRUC_10:   .SET   STRUC_11   
28EF                STRUC_11:   .SET   STRUC_12   
28EF                STRUC_12:   .SET   0   
28EF                TF_DONEM_2368S116:      
28EF                          ;*Macro unroll: TEST_SET_TEXT ": add + ;"
28EF   2A 45 30               LD   HL,(lineBufStart)   
28F2   22 4B 30               LD   (lineBufTop),HL   
28F5   22 49 30               LD   (currkey),HL   
28F8   21 01 29               LD   HL,tst_textM_2369S118   
28FB   22 61 32               LD   (char_pointer),HL   
28FE                          ;*Macro unroll:  _skip
28FE   C3 FE 28               JP   $   
2901                          ;*Macro unroll:  STRUC_PUSH $
2901                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2901                STRUC_12:   .SET   STRUC_11   
2901                STRUC_11:   .SET   STRUC_10   
2901                STRUC_10:   .SET   STRUC_9   
2901                STRUC_9:   .SET   STRUC_8   
2901                STRUC_8:   .SET   STRUC_7   
2901                STRUC_7:   .SET   STRUC_6   
2901                STRUC_6:   .SET   STRUC_5   
2901                STRUC_5:   .SET   STRUC_4   
2901                STRUC_4:   .SET   STRUC_3   
2901                STRUC_3:   .SET   STRUC_2   
2901                STRUC_2:   .SET   STRUC_TOP   
2901                STRUC_TOP:   .SET   $   
2901                TST_TEXTM_2369S118:      
2901   3A 20 61 64 64 20 2B 20 3B 0D 0A FF 0D 0A DB   ": add + ;","\r\n",-1,"\r\n"   
290F                          ;*Macro unroll:  _endskip
290F                          ;*Macro unroll:  STRUC_FWD
290F                CUR_ADR:   .SET   $   
28FF                          .ORG   STRUC_TOP - 2   
28FF   0F 29                  DW   CUR_ADR   
290F                          .ORG   CUR_ADR   
290F                          ;*Macro unroll:  STRUC_POP
290F                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
290F                STRUC_TOP:   .SET   STRUC_2   
290F                STRUC_2:   .SET   STRUC_3   
290F                STRUC_3:   .SET   STRUC_4   
290F                STRUC_4:   .SET   STRUC_5   
290F                STRUC_5:   .SET   STRUC_6   
290F                STRUC_6:   .SET   STRUC_7   
290F                STRUC_7:   .SET   STRUC_8   
290F                STRUC_8:   .SET   STRUC_9   
290F                STRUC_9:   .SET   STRUC_10   
290F                STRUC_10:   .SET   STRUC_11   
290F                STRUC_11:   .SET   STRUC_12   
290F                STRUC_12:   .SET   0   
290F                          ;*Macro unroll: INTERPRET
290F   CF                     RST   $08   
2910   57 0B                  DW   interpret   
2912   8F 0E                  DW   exit_forth   
2914                          ;*Macro unroll: ppushValue 2
2914                          ;*Macro unroll:  ppush0 B,C
2914   DD 71 00               LD   (IX+0),C   
2917   DD 23                  INC   IX   
2919   DD 70 00               LD   (IX+0),B   
291C   DD 23                  INC   IX   
291E   01 02 00               LD   BC,2   
2921                          ;*Macro unroll: ppushValue 2
2921                          ;*Macro unroll:  ppush0 B,C
2921   DD 71 00               LD   (IX+0),C   
2924   DD 23                  INC   IX   
2926   DD 70 00               LD   (IX+0),B   
2929   DD 23                  INC   IX   
292B   01 02 00               LD   BC,2   
292E                          ;*Macro unroll: TEST_SET_TEXT "add"
292E   2A 45 30               LD   HL,(lineBufStart)   
2931   22 4B 30               LD   (lineBufTop),HL   
2934   22 49 30               LD   (currkey),HL   
2937   21 40 29               LD   HL,tst_textM_2373S123   
293A   22 61 32               LD   (char_pointer),HL   
293D                          ;*Macro unroll:  _skip
293D   C3 3D 29               JP   $   
2940                          ;*Macro unroll:  STRUC_PUSH $
2940                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2940                STRUC_12:   .SET   STRUC_11   
2940                STRUC_11:   .SET   STRUC_10   
2940                STRUC_10:   .SET   STRUC_9   
2940                STRUC_9:   .SET   STRUC_8   
2940                STRUC_8:   .SET   STRUC_7   
2940                STRUC_7:   .SET   STRUC_6   
2940                STRUC_6:   .SET   STRUC_5   
2940                STRUC_5:   .SET   STRUC_4   
2940                STRUC_4:   .SET   STRUC_3   
2940                STRUC_3:   .SET   STRUC_2   
2940                STRUC_2:   .SET   STRUC_TOP   
2940                STRUC_TOP:   .SET   $   
2940                TST_TEXTM_2373S123:      
2940   61 64 64 0D 0A FF 0D 0A DB   "add","\r\n",-1,"\r\n"   
2948                          ;*Macro unroll:  _endskip
2948                          ;*Macro unroll:  STRUC_FWD
2948                CUR_ADR:   .SET   $   
293E                          .ORG   STRUC_TOP - 2   
293E   48 29                  DW   CUR_ADR   
2948                          .ORG   CUR_ADR   
2948                          ;*Macro unroll:  STRUC_POP
2948                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2948                STRUC_TOP:   .SET   STRUC_2   
2948                STRUC_2:   .SET   STRUC_3   
2948                STRUC_3:   .SET   STRUC_4   
2948                STRUC_4:   .SET   STRUC_5   
2948                STRUC_5:   .SET   STRUC_6   
2948                STRUC_6:   .SET   STRUC_7   
2948                STRUC_7:   .SET   STRUC_8   
2948                STRUC_8:   .SET   STRUC_9   
2948                STRUC_9:   .SET   STRUC_10   
2948                STRUC_10:   .SET   STRUC_11   
2948                STRUC_11:   .SET   STRUC_12   
2948                STRUC_12:   .SET   0   
2948                          ;*Macro unroll: INTERPRET
2948   CF                     RST   $08   
2949   57 0B                  DW   interpret   
294B   8F 0E                  DW   exit_forth   
294D                          ;*Macro unroll: EXPECT 4, "2 2 add = 4"
294D   CD A6 09               CALL   printNum   
2950                          ;*Macro unroll:  loadWord H,L, B,C
2950   69                     LD   L,C   
2951   60                     LD   H,B   
2952   69                     LD   L,C   
2953                          ;*Macro unroll:  ppop0 B,C
2953   DD 2B                  DEC   IX   
2955   DD 46 00               LD   B,(IX+0)   
2958   DD 2B                  DEC   IX   
295A   DD 4E 00               LD   C,(IX+0)   
295D                          ;*Macro unroll:  CMP16 4
295D   11 04 00               LD   DE,4   
2960   B7                     OR   A   
2961   ED 52                  SBC   HL,DE   
2963                          ;*Macro unroll:  checkZeroWord H,L
2963   7D                     LD   A,L   
2964   B4                     OR   H   
2965   CA 84 29               JP   z,tf_doneM_2375S125   
2968   11 F3 0F               LD   DE,FAILED   
296B   CD 5B 11               CALL   printPStr   
296E   11 78 29               LD   DE,te_failM_2375S125   
2971   CD 5B 11               CALL   printPStr   
2974   76                     HALT      
2975                          ;*Macro unroll:  _skip
2975   C3 75 29               JP   $   
2978                          ;*Macro unroll:  STRUC_PUSH $
2978                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2978                STRUC_12:   .SET   STRUC_11   
2978                STRUC_11:   .SET   STRUC_10   
2978                STRUC_10:   .SET   STRUC_9   
2978                STRUC_9:   .SET   STRUC_8   
2978                STRUC_8:   .SET   STRUC_7   
2978                STRUC_7:   .SET   STRUC_6   
2978                STRUC_6:   .SET   STRUC_5   
2978                STRUC_5:   .SET   STRUC_4   
2978                STRUC_4:   .SET   STRUC_3   
2978                STRUC_3:   .SET   STRUC_2   
2978                STRUC_2:   .SET   STRUC_TOP   
2978                STRUC_TOP:   .SET   $   
2978                TE_FAILM_2375S125:      
2978   0B 32 20 32 20 61 64 64 20 3D 20 34 .PSTR   "2 2 add = 4"   
2984                          ;*Macro unroll:  _endskip
2984                          ;*Macro unroll:  STRUC_FWD
2984                CUR_ADR:   .SET   $   
2976                          .ORG   STRUC_TOP - 2   
2976   84 29                  DW   CUR_ADR   
2984                          .ORG   CUR_ADR   
2984                          ;*Macro unroll:  STRUC_POP
2984                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2984                STRUC_TOP:   .SET   STRUC_2   
2984                STRUC_2:   .SET   STRUC_3   
2984                STRUC_3:   .SET   STRUC_4   
2984                STRUC_4:   .SET   STRUC_5   
2984                STRUC_5:   .SET   STRUC_6   
2984                STRUC_6:   .SET   STRUC_7   
2984                STRUC_7:   .SET   STRUC_8   
2984                STRUC_8:   .SET   STRUC_9   
2984                STRUC_9:   .SET   STRUC_10   
2984                STRUC_10:   .SET   STRUC_11   
2984                STRUC_11:   .SET   STRUC_12   
2984                STRUC_12:   .SET   0   
2984                TF_DONEM_2375S125:      
2984                          ;*Macro unroll: TEST_SET_TEXT ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;"
2984   2A 45 30               LD   HL,(lineBufStart)   
2987   22 4B 30               LD   (lineBufTop),HL   
298A   22 49 30               LD   (currkey),HL   
298D   21 96 29               LD   HL,tst_textM_2376S127   
2990   22 61 32               LD   (char_pointer),HL   
2993                          ;*Macro unroll:  _skip
2993   C3 93 29               JP   $   
2996                          ;*Macro unroll:  STRUC_PUSH $
2996                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2996                STRUC_12:   .SET   STRUC_11   
2996                STRUC_11:   .SET   STRUC_10   
2996                STRUC_10:   .SET   STRUC_9   
2996                STRUC_9:   .SET   STRUC_8   
2996                STRUC_8:   .SET   STRUC_7   
2996                STRUC_7:   .SET   STRUC_6   
2996                STRUC_6:   .SET   STRUC_5   
2996                STRUC_5:   .SET   STRUC_4   
2996                STRUC_4:   .SET   STRUC_3   
2996                STRUC_3:   .SET   STRUC_2   
2996                STRUC_2:   .SET   STRUC_TOP   
2996                STRUC_TOP:   .SET   $   
2996                TST_TEXTM_2376S127:      
2996   3A 20 64 75 6D 70 20 31 36 20 62 61 73 65 20 21 20 6F 76 65 72 20 2B 20 73 77 61 70 20 62 65 67 69 6E 20 6F 76 65 72 20 6F 76 65 72 20 73 77 61 70 20 3C 20 77 68 69 6C 65 20 64 75 70 20 37 20 61 6E 64 20 30 3D 20 69 66 20 63 72 20 64 75 70 20 2E 20 65 6E 64 69 66 20 64 75 70 20 63 40 20 2E 20 31 2B 20 72 65 70 65 61 74 20 63 72 20 31 30 20 62 61 73 65 20 21 20 3B 0D 0A FF 0D 0A DB   ": dump 16 base ! over + swap begin over over swap < while dup 7 and 0= if cr dup . endif dup c@ . 1+ repeat cr 10 base ! ;","\r\n",-1,"\r\n"   
2A15                          ;*Macro unroll:  _endskip
2A15                          ;*Macro unroll:  STRUC_FWD
2A15                CUR_ADR:   .SET   $   
2994                          .ORG   STRUC_TOP - 2   
2994   15 2A                  DW   CUR_ADR   
2A15                          .ORG   CUR_ADR   
2A15                          ;*Macro unroll:  STRUC_POP
2A15                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A15                STRUC_TOP:   .SET   STRUC_2   
2A15                STRUC_2:   .SET   STRUC_3   
2A15                STRUC_3:   .SET   STRUC_4   
2A15                STRUC_4:   .SET   STRUC_5   
2A15                STRUC_5:   .SET   STRUC_6   
2A15                STRUC_6:   .SET   STRUC_7   
2A15                STRUC_7:   .SET   STRUC_8   
2A15                STRUC_8:   .SET   STRUC_9   
2A15                STRUC_9:   .SET   STRUC_10   
2A15                STRUC_10:   .SET   STRUC_11   
2A15                STRUC_11:   .SET   STRUC_12   
2A15                STRUC_12:   .SET   0   
2A15                          ;*Macro unroll: INTERPRET
2A15   CF                     RST   $08   
2A16   57 0B                  DW   interpret   
2A18   8F 0E                  DW   exit_forth   
2A1A                          ;*Macro unroll: TEST_SET_TEXT "dump"
2A1A   2A 45 30               LD   HL,(lineBufStart)   
2A1D   22 4B 30               LD   (lineBufTop),HL   
2A20   22 49 30               LD   (currkey),HL   
2A23   21 2C 2A               LD   HL,tst_textM_2378S130   
2A26   22 61 32               LD   (char_pointer),HL   
2A29                          ;*Macro unroll:  _skip
2A29   C3 29 2A               JP   $   
2A2C                          ;*Macro unroll:  STRUC_PUSH $
2A2C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A2C                STRUC_12:   .SET   STRUC_11   
2A2C                STRUC_11:   .SET   STRUC_10   
2A2C                STRUC_10:   .SET   STRUC_9   
2A2C                STRUC_9:   .SET   STRUC_8   
2A2C                STRUC_8:   .SET   STRUC_7   
2A2C                STRUC_7:   .SET   STRUC_6   
2A2C                STRUC_6:   .SET   STRUC_5   
2A2C                STRUC_5:   .SET   STRUC_4   
2A2C                STRUC_4:   .SET   STRUC_3   
2A2C                STRUC_3:   .SET   STRUC_2   
2A2C                STRUC_2:   .SET   STRUC_TOP   
2A2C                STRUC_TOP:   .SET   $   
2A2C                TST_TEXTM_2378S130:      
2A2C   64 75 6D 70 0D 0A FF 0D 0A DB   "dump","\r\n",-1,"\r\n"   
2A35                          ;*Macro unroll:  _endskip
2A35                          ;*Macro unroll:  STRUC_FWD
2A35                CUR_ADR:   .SET   $   
2A2A                          .ORG   STRUC_TOP - 2   
2A2A   35 2A                  DW   CUR_ADR   
2A35                          .ORG   CUR_ADR   
2A35                          ;*Macro unroll:  STRUC_POP
2A35                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A35                STRUC_TOP:   .SET   STRUC_2   
2A35                STRUC_2:   .SET   STRUC_3   
2A35                STRUC_3:   .SET   STRUC_4   
2A35                STRUC_4:   .SET   STRUC_5   
2A35                STRUC_5:   .SET   STRUC_6   
2A35                STRUC_6:   .SET   STRUC_7   
2A35                STRUC_7:   .SET   STRUC_8   
2A35                STRUC_8:   .SET   STRUC_9   
2A35                STRUC_9:   .SET   STRUC_10   
2A35                STRUC_10:   .SET   STRUC_11   
2A35                STRUC_11:   .SET   STRUC_12   
2A35                STRUC_12:   .SET   0   
2A35                          ;*Macro unroll: INTERPRET
2A35   CF                     RST   $08   
2A36   57 0B                  DW   interpret   
2A38   8F 0E                  DW   exit_forth   
2A3A                          ;*Macro unroll: TEST_SET_TEXT {": str s",$22," xyz",$22," ;"}
2A3A   2A 45 30               LD   HL,(lineBufStart)   
2A3D   22 4B 30               LD   (lineBufTop),HL   
2A40   22 49 30               LD   (currkey),HL   
2A43   21 4C 2A               LD   HL,tst_textM_2380S133   
2A46   22 61 32               LD   (char_pointer),HL   
2A49                          ;*Macro unroll:  _skip
2A49   C3 49 2A               JP   $   
2A4C                          ;*Macro unroll:  STRUC_PUSH $
2A4C                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A4C                STRUC_12:   .SET   STRUC_11   
2A4C                STRUC_11:   .SET   STRUC_10   
2A4C                STRUC_10:   .SET   STRUC_9   
2A4C                STRUC_9:   .SET   STRUC_8   
2A4C                STRUC_8:   .SET   STRUC_7   
2A4C                STRUC_7:   .SET   STRUC_6   
2A4C                STRUC_6:   .SET   STRUC_5   
2A4C                STRUC_5:   .SET   STRUC_4   
2A4C                STRUC_4:   .SET   STRUC_3   
2A4C                STRUC_3:   .SET   STRUC_2   
2A4C                STRUC_2:   .SET   STRUC_TOP   
2A4C                STRUC_TOP:   .SET   $   
2A4C                TST_TEXTM_2380S133:      
2A4C   3A 20 73 74 72 20 73 22 20 78 79 7A 22 20 3B 0D 0A FF 0D 0A DB   ": str s",$22," xyz",$22," ;","\r\n",-1,"\r\n"   
2A60                          ;*Macro unroll:  _endskip
2A60                          ;*Macro unroll:  STRUC_FWD
2A60                CUR_ADR:   .SET   $   
2A4A                          .ORG   STRUC_TOP - 2   
2A4A   60 2A                  DW   CUR_ADR   
2A60                          .ORG   CUR_ADR   
2A60                          ;*Macro unroll:  STRUC_POP
2A60                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A60                STRUC_TOP:   .SET   STRUC_2   
2A60                STRUC_2:   .SET   STRUC_3   
2A60                STRUC_3:   .SET   STRUC_4   
2A60                STRUC_4:   .SET   STRUC_5   
2A60                STRUC_5:   .SET   STRUC_6   
2A60                STRUC_6:   .SET   STRUC_7   
2A60                STRUC_7:   .SET   STRUC_8   
2A60                STRUC_8:   .SET   STRUC_9   
2A60                STRUC_9:   .SET   STRUC_10   
2A60                STRUC_10:   .SET   STRUC_11   
2A60                STRUC_11:   .SET   STRUC_12   
2A60                STRUC_12:   .SET   0   
2A60                          ;*Macro unroll: INTERPRET
2A60   CF                     RST   $08   
2A61   57 0B                  DW   interpret   
2A63   8F 0E                  DW   exit_forth   
2A65                          ;*Macro unroll: TEST_SET_TEXT "str type"
2A65   2A 45 30               LD   HL,(lineBufStart)   
2A68   22 4B 30               LD   (lineBufTop),HL   
2A6B   22 49 30               LD   (currkey),HL   
2A6E   21 77 2A               LD   HL,tst_textM_2382S135   
2A71   22 61 32               LD   (char_pointer),HL   
2A74                          ;*Macro unroll:  _skip
2A74   C3 74 2A               JP   $   
2A77                          ;*Macro unroll:  STRUC_PUSH $
2A77                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A77                STRUC_12:   .SET   STRUC_11   
2A77                STRUC_11:   .SET   STRUC_10   
2A77                STRUC_10:   .SET   STRUC_9   
2A77                STRUC_9:   .SET   STRUC_8   
2A77                STRUC_8:   .SET   STRUC_7   
2A77                STRUC_7:   .SET   STRUC_6   
2A77                STRUC_6:   .SET   STRUC_5   
2A77                STRUC_5:   .SET   STRUC_4   
2A77                STRUC_4:   .SET   STRUC_3   
2A77                STRUC_3:   .SET   STRUC_2   
2A77                STRUC_2:   .SET   STRUC_TOP   
2A77                STRUC_TOP:   .SET   $   
2A77                TST_TEXTM_2382S135:      
2A77   73 74 72 20 74 79 70 65 0D 0A FF 0D 0A DB   "str type","\r\n",-1,"\r\n"   
2A84                          ;*Macro unroll:  _endskip
2A84                          ;*Macro unroll:  STRUC_FWD
2A84                CUR_ADR:   .SET   $   
2A75                          .ORG   STRUC_TOP - 2   
2A75   84 2A                  DW   CUR_ADR   
2A84                          .ORG   CUR_ADR   
2A84                          ;*Macro unroll:  STRUC_POP
2A84                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2A84                STRUC_TOP:   .SET   STRUC_2   
2A84                STRUC_2:   .SET   STRUC_3   
2A84                STRUC_3:   .SET   STRUC_4   
2A84                STRUC_4:   .SET   STRUC_5   
2A84                STRUC_5:   .SET   STRUC_6   
2A84                STRUC_6:   .SET   STRUC_7   
2A84                STRUC_7:   .SET   STRUC_8   
2A84                STRUC_8:   .SET   STRUC_9   
2A84                STRUC_9:   .SET   STRUC_10   
2A84                STRUC_10:   .SET   STRUC_11   
2A84                STRUC_11:   .SET   STRUC_12   
2A84                STRUC_12:   .SET   0   
2A84                          ;*Macro unroll: INTERPRET
2A84   CF                     RST   $08   
2A85   57 0B                  DW   interpret   
2A87   8F 0E                  DW   exit_forth   
2A89                          ;*Macro unroll: TEST_SET_TEXT "str"
2A89   2A 45 30               LD   HL,(lineBufStart)   
2A8C   22 4B 30               LD   (lineBufTop),HL   
2A8F   22 49 30               LD   (currkey),HL   
2A92   21 9B 2A               LD   HL,tst_textM_2384S137   
2A95   22 61 32               LD   (char_pointer),HL   
2A98                          ;*Macro unroll:  _skip
2A98   C3 98 2A               JP   $   
2A9B                          ;*Macro unroll:  STRUC_PUSH $
2A9B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2A9B                STRUC_12:   .SET   STRUC_11   
2A9B                STRUC_11:   .SET   STRUC_10   
2A9B                STRUC_10:   .SET   STRUC_9   
2A9B                STRUC_9:   .SET   STRUC_8   
2A9B                STRUC_8:   .SET   STRUC_7   
2A9B                STRUC_7:   .SET   STRUC_6   
2A9B                STRUC_6:   .SET   STRUC_5   
2A9B                STRUC_5:   .SET   STRUC_4   
2A9B                STRUC_4:   .SET   STRUC_3   
2A9B                STRUC_3:   .SET   STRUC_2   
2A9B                STRUC_2:   .SET   STRUC_TOP   
2A9B                STRUC_TOP:   .SET   $   
2A9B                TST_TEXTM_2384S137:      
2A9B   73 74 72 0D 0A FF 0D 0A DB   "str","\r\n",-1,"\r\n"   
2AA3                          ;*Macro unroll:  _endskip
2AA3                          ;*Macro unroll:  STRUC_FWD
2AA3                CUR_ADR:   .SET   $   
2A99                          .ORG   STRUC_TOP - 2   
2A99   A3 2A                  DW   CUR_ADR   
2AA3                          .ORG   CUR_ADR   
2AA3                          ;*Macro unroll:  STRUC_POP
2AA3                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AA3                STRUC_TOP:   .SET   STRUC_2   
2AA3                STRUC_2:   .SET   STRUC_3   
2AA3                STRUC_3:   .SET   STRUC_4   
2AA3                STRUC_4:   .SET   STRUC_5   
2AA3                STRUC_5:   .SET   STRUC_6   
2AA3                STRUC_6:   .SET   STRUC_7   
2AA3                STRUC_7:   .SET   STRUC_8   
2AA3                STRUC_8:   .SET   STRUC_9   
2AA3                STRUC_9:   .SET   STRUC_10   
2AA3                STRUC_10:   .SET   STRUC_11   
2AA3                STRUC_11:   .SET   STRUC_12   
2AA3                STRUC_12:   .SET   0   
2AA3                          ;*Macro unroll: INTERPRET
2AA3   CF                     RST   $08   
2AA4   57 0B                  DW   interpret   
2AA6   8F 0E                  DW   exit_forth   
2AA8                          ;*Macro unroll: EXPECT 3, "str len = 3"
2AA8   CD A6 09               CALL   printNum   
2AAB                          ;*Macro unroll:  loadWord H,L, B,C
2AAB   69                     LD   L,C   
2AAC   60                     LD   H,B   
2AAD   69                     LD   L,C   
2AAE                          ;*Macro unroll:  ppop0 B,C
2AAE   DD 2B                  DEC   IX   
2AB0   DD 46 00               LD   B,(IX+0)   
2AB3   DD 2B                  DEC   IX   
2AB5   DD 4E 00               LD   C,(IX+0)   
2AB8                          ;*Macro unroll:  CMP16 3
2AB8   11 03 00               LD   DE,3   
2ABB   B7                     OR   A   
2ABC   ED 52                  SBC   HL,DE   
2ABE                          ;*Macro unroll:  checkZeroWord H,L
2ABE   7D                     LD   A,L   
2ABF   B4                     OR   H   
2AC0   CA DF 2A               JP   z,tf_doneM_2386S139   
2AC3   11 F3 0F               LD   DE,FAILED   
2AC6   CD 5B 11               CALL   printPStr   
2AC9   11 D3 2A               LD   DE,te_failM_2386S139   
2ACC   CD 5B 11               CALL   printPStr   
2ACF   76                     HALT      
2AD0                          ;*Macro unroll:  _skip
2AD0   C3 D0 2A               JP   $   
2AD3                          ;*Macro unroll:  STRUC_PUSH $
2AD3                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AD3                STRUC_12:   .SET   STRUC_11   
2AD3                STRUC_11:   .SET   STRUC_10   
2AD3                STRUC_10:   .SET   STRUC_9   
2AD3                STRUC_9:   .SET   STRUC_8   
2AD3                STRUC_8:   .SET   STRUC_7   
2AD3                STRUC_7:   .SET   STRUC_6   
2AD3                STRUC_6:   .SET   STRUC_5   
2AD3                STRUC_5:   .SET   STRUC_4   
2AD3                STRUC_4:   .SET   STRUC_3   
2AD3                STRUC_3:   .SET   STRUC_2   
2AD3                STRUC_2:   .SET   STRUC_TOP   
2AD3                STRUC_TOP:   .SET   $   
2AD3                TE_FAILM_2386S139:      
2AD3   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2ADF                          ;*Macro unroll:  _endskip
2ADF                          ;*Macro unroll:  STRUC_FWD
2ADF                CUR_ADR:   .SET   $   
2AD1                          .ORG   STRUC_TOP - 2   
2AD1   DF 2A                  DW   CUR_ADR   
2ADF                          .ORG   CUR_ADR   
2ADF                          ;*Macro unroll:  STRUC_POP
2ADF                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2ADF                STRUC_TOP:   .SET   STRUC_2   
2ADF                STRUC_2:   .SET   STRUC_3   
2ADF                STRUC_3:   .SET   STRUC_4   
2ADF                STRUC_4:   .SET   STRUC_5   
2ADF                STRUC_5:   .SET   STRUC_6   
2ADF                STRUC_6:   .SET   STRUC_7   
2ADF                STRUC_7:   .SET   STRUC_8   
2ADF                STRUC_8:   .SET   STRUC_9   
2ADF                STRUC_9:   .SET   STRUC_10   
2ADF                STRUC_10:   .SET   STRUC_11   
2ADF                STRUC_11:   .SET   STRUC_12   
2ADF                STRUC_12:   .SET   0   
2ADF                TF_DONEM_2386S139:      
2ADF                          ;*Macro unroll: TEST_SET_TEXT {$22," xyz",$22}
2ADF   2A 45 30               LD   HL,(lineBufStart)   
2AE2   22 4B 30               LD   (lineBufTop),HL   
2AE5   22 49 30               LD   (currkey),HL   
2AE8   21 F1 2A               LD   HL,tst_textM_2387S141   
2AEB   22 61 32               LD   (char_pointer),HL   
2AEE                          ;*Macro unroll:  _skip
2AEE   C3 EE 2A               JP   $   
2AF1                          ;*Macro unroll:  STRUC_PUSH $
2AF1                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2AF1                STRUC_12:   .SET   STRUC_11   
2AF1                STRUC_11:   .SET   STRUC_10   
2AF1                STRUC_10:   .SET   STRUC_9   
2AF1                STRUC_9:   .SET   STRUC_8   
2AF1                STRUC_8:   .SET   STRUC_7   
2AF1                STRUC_7:   .SET   STRUC_6   
2AF1                STRUC_6:   .SET   STRUC_5   
2AF1                STRUC_5:   .SET   STRUC_4   
2AF1                STRUC_4:   .SET   STRUC_3   
2AF1                STRUC_3:   .SET   STRUC_2   
2AF1                STRUC_2:   .SET   STRUC_TOP   
2AF1                STRUC_TOP:   .SET   $   
2AF1                TST_TEXTM_2387S141:      
2AF1   22 20 78 79 7A 22 0D 0A FF 0D 0A DB   $22," xyz",$22,"\r\n",-1,"\r\n"   
2AFC                          ;*Macro unroll:  _endskip
2AFC                          ;*Macro unroll:  STRUC_FWD
2AFC                CUR_ADR:   .SET   $   
2AEF                          .ORG   STRUC_TOP - 2   
2AEF   FC 2A                  DW   CUR_ADR   
2AFC                          .ORG   CUR_ADR   
2AFC                          ;*Macro unroll:  STRUC_POP
2AFC                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2AFC                STRUC_TOP:   .SET   STRUC_2   
2AFC                STRUC_2:   .SET   STRUC_3   
2AFC                STRUC_3:   .SET   STRUC_4   
2AFC                STRUC_4:   .SET   STRUC_5   
2AFC                STRUC_5:   .SET   STRUC_6   
2AFC                STRUC_6:   .SET   STRUC_7   
2AFC                STRUC_7:   .SET   STRUC_8   
2AFC                STRUC_8:   .SET   STRUC_9   
2AFC                STRUC_9:   .SET   STRUC_10   
2AFC                STRUC_10:   .SET   STRUC_11   
2AFC                STRUC_11:   .SET   STRUC_12   
2AFC                STRUC_12:   .SET   0   
2AFC                          ;*Macro unroll: INTERPRET
2AFC   CF                     RST   $08   
2AFD   57 0B                  DW   interpret   
2AFF   8F 0E                  DW   exit_forth   
2B01                          ;*Macro unroll: TEST_SET_TEXT "dup"
2B01   2A 45 30               LD   HL,(lineBufStart)   
2B04   22 4B 30               LD   (lineBufTop),HL   
2B07   22 49 30               LD   (currkey),HL   
2B0A   21 13 2B               LD   HL,tst_textM_2389S143   
2B0D   22 61 32               LD   (char_pointer),HL   
2B10                          ;*Macro unroll:  _skip
2B10   C3 10 2B               JP   $   
2B13                          ;*Macro unroll:  STRUC_PUSH $
2B13                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B13                STRUC_12:   .SET   STRUC_11   
2B13                STRUC_11:   .SET   STRUC_10   
2B13                STRUC_10:   .SET   STRUC_9   
2B13                STRUC_9:   .SET   STRUC_8   
2B13                STRUC_8:   .SET   STRUC_7   
2B13                STRUC_7:   .SET   STRUC_6   
2B13                STRUC_6:   .SET   STRUC_5   
2B13                STRUC_5:   .SET   STRUC_4   
2B13                STRUC_4:   .SET   STRUC_3   
2B13                STRUC_3:   .SET   STRUC_2   
2B13                STRUC_2:   .SET   STRUC_TOP   
2B13                STRUC_TOP:   .SET   $   
2B13                TST_TEXTM_2389S143:      
2B13   64 75 70 0D 0A FF 0D 0A DB   "dup","\r\n",-1,"\r\n"   
2B1B                          ;*Macro unroll:  _endskip
2B1B                          ;*Macro unroll:  STRUC_FWD
2B1B                CUR_ADR:   .SET   $   
2B11                          .ORG   STRUC_TOP - 2   
2B11   1B 2B                  DW   CUR_ADR   
2B1B                          .ORG   CUR_ADR   
2B1B                          ;*Macro unroll:  STRUC_POP
2B1B                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B1B                STRUC_TOP:   .SET   STRUC_2   
2B1B                STRUC_2:   .SET   STRUC_3   
2B1B                STRUC_3:   .SET   STRUC_4   
2B1B                STRUC_4:   .SET   STRUC_5   
2B1B                STRUC_5:   .SET   STRUC_6   
2B1B                STRUC_6:   .SET   STRUC_7   
2B1B                STRUC_7:   .SET   STRUC_8   
2B1B                STRUC_8:   .SET   STRUC_9   
2B1B                STRUC_9:   .SET   STRUC_10   
2B1B                STRUC_10:   .SET   STRUC_11   
2B1B                STRUC_11:   .SET   STRUC_12   
2B1B                STRUC_12:   .SET   0   
2B1B                          ;*Macro unroll: INTERPRET
2B1B   CF                     RST   $08   
2B1C   57 0B                  DW   interpret   
2B1E   8F 0E                  DW   exit_forth   
2B20                          ;*Macro unroll: EXPECT 3, "str len = 3"
2B20   CD A6 09               CALL   printNum   
2B23                          ;*Macro unroll:  loadWord H,L, B,C
2B23   69                     LD   L,C   
2B24   60                     LD   H,B   
2B25   69                     LD   L,C   
2B26                          ;*Macro unroll:  ppop0 B,C
2B26   DD 2B                  DEC   IX   
2B28   DD 46 00               LD   B,(IX+0)   
2B2B   DD 2B                  DEC   IX   
2B2D   DD 4E 00               LD   C,(IX+0)   
2B30                          ;*Macro unroll:  CMP16 3
2B30   11 03 00               LD   DE,3   
2B33   B7                     OR   A   
2B34   ED 52                  SBC   HL,DE   
2B36                          ;*Macro unroll:  checkZeroWord H,L
2B36   7D                     LD   A,L   
2B37   B4                     OR   H   
2B38   CA 57 2B               JP   z,tf_doneM_2391S145   
2B3B   11 F3 0F               LD   DE,FAILED   
2B3E   CD 5B 11               CALL   printPStr   
2B41   11 4B 2B               LD   DE,te_failM_2391S145   
2B44   CD 5B 11               CALL   printPStr   
2B47   76                     HALT      
2B48                          ;*Macro unroll:  _skip
2B48   C3 48 2B               JP   $   
2B4B                          ;*Macro unroll:  STRUC_PUSH $
2B4B                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B4B                STRUC_12:   .SET   STRUC_11   
2B4B                STRUC_11:   .SET   STRUC_10   
2B4B                STRUC_10:   .SET   STRUC_9   
2B4B                STRUC_9:   .SET   STRUC_8   
2B4B                STRUC_8:   .SET   STRUC_7   
2B4B                STRUC_7:   .SET   STRUC_6   
2B4B                STRUC_6:   .SET   STRUC_5   
2B4B                STRUC_5:   .SET   STRUC_4   
2B4B                STRUC_4:   .SET   STRUC_3   
2B4B                STRUC_3:   .SET   STRUC_2   
2B4B                STRUC_2:   .SET   STRUC_TOP   
2B4B                STRUC_TOP:   .SET   $   
2B4B                TE_FAILM_2391S145:      
2B4B   0B 73 74 72 20 6C 65 6E 20 3D 20 33 .PSTR   "str len = 3"   
2B57                          ;*Macro unroll:  _endskip
2B57                          ;*Macro unroll:  STRUC_FWD
2B57                CUR_ADR:   .SET   $   
2B49                          .ORG   STRUC_TOP - 2   
2B49   57 2B                  DW   CUR_ADR   
2B57                          .ORG   CUR_ADR   
2B57                          ;*Macro unroll:  STRUC_POP
2B57                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B57                STRUC_TOP:   .SET   STRUC_2   
2B57                STRUC_2:   .SET   STRUC_3   
2B57                STRUC_3:   .SET   STRUC_4   
2B57                STRUC_4:   .SET   STRUC_5   
2B57                STRUC_5:   .SET   STRUC_6   
2B57                STRUC_6:   .SET   STRUC_7   
2B57                STRUC_7:   .SET   STRUC_8   
2B57                STRUC_8:   .SET   STRUC_9   
2B57                STRUC_9:   .SET   STRUC_10   
2B57                STRUC_10:   .SET   STRUC_11   
2B57                STRUC_11:   .SET   STRUC_12   
2B57                STRUC_12:   .SET   0   
2B57                TF_DONEM_2391S145:      
2B57                          ;*Macro unroll: TEST_SET_TEXT "type"
2B57   2A 45 30               LD   HL,(lineBufStart)   
2B5A   22 4B 30               LD   (lineBufTop),HL   
2B5D   22 49 30               LD   (currkey),HL   
2B60   21 69 2B               LD   HL,tst_textM_2392S146   
2B63   22 61 32               LD   (char_pointer),HL   
2B66                          ;*Macro unroll:  _skip
2B66   C3 66 2B               JP   $   
2B69                          ;*Macro unroll:  STRUC_PUSH $
2B69                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B69                STRUC_12:   .SET   STRUC_11   
2B69                STRUC_11:   .SET   STRUC_10   
2B69                STRUC_10:   .SET   STRUC_9   
2B69                STRUC_9:   .SET   STRUC_8   
2B69                STRUC_8:   .SET   STRUC_7   
2B69                STRUC_7:   .SET   STRUC_6   
2B69                STRUC_6:   .SET   STRUC_5   
2B69                STRUC_5:   .SET   STRUC_4   
2B69                STRUC_4:   .SET   STRUC_3   
2B69                STRUC_3:   .SET   STRUC_2   
2B69                STRUC_2:   .SET   STRUC_TOP   
2B69                STRUC_TOP:   .SET   $   
2B69                TST_TEXTM_2392S146:      
2B69   74 79 70 65 0D 0A FF 0D 0A DB   "type","\r\n",-1,"\r\n"   
2B72                          ;*Macro unroll:  _endskip
2B72                          ;*Macro unroll:  STRUC_FWD
2B72                CUR_ADR:   .SET   $   
2B67                          .ORG   STRUC_TOP - 2   
2B67   72 2B                  DW   CUR_ADR   
2B72                          .ORG   CUR_ADR   
2B72                          ;*Macro unroll:  STRUC_POP
2B72                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B72                STRUC_TOP:   .SET   STRUC_2   
2B72                STRUC_2:   .SET   STRUC_3   
2B72                STRUC_3:   .SET   STRUC_4   
2B72                STRUC_4:   .SET   STRUC_5   
2B72                STRUC_5:   .SET   STRUC_6   
2B72                STRUC_6:   .SET   STRUC_7   
2B72                STRUC_7:   .SET   STRUC_8   
2B72                STRUC_8:   .SET   STRUC_9   
2B72                STRUC_9:   .SET   STRUC_10   
2B72                STRUC_10:   .SET   STRUC_11   
2B72                STRUC_11:   .SET   STRUC_12   
2B72                STRUC_12:   .SET   0   
2B72                          ;*Macro unroll: INTERPRET
2B72   CF                     RST   $08   
2B73   57 0B                  DW   interpret   
2B75   8F 0E                  DW   exit_forth   
2B77                             ; 
2B77                             ; ld HL, 12
2B77                             ; ld C, 10
2B77                             ; call divideWordByByte
2B77                             ; ld B, 0
2B77                             ; ld C, A
2B77                             ; EXPECT 2, "div 11 / 10 = 1 1"
2B77                             ; TEST_SET_TEXT "hello\r\n"
2B77                             ; call KEY
2B77                             ; EXPECT $68, "key 'h'"
2B77                             ; call KEY
2B77                             ; EXPECT $65, "key 'e'"
2B77                             ; TEST_SET_TEXT "x"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'x'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; TEST_SET_TEXT "a xyz "
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 1, "word 'a xyz'"
2B77                             ; ppushValue $20
2B77                             ; call WORD
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "word 'a xyz'"
2B77                             ; ppop H,L   ; drop
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "here"
2B77                             ; TEST_SET_TEXT "xyz"
2B77                             ; call CREATE
2B77                             ; call LATEST
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER, "create xyz latest"
2B77                             ; call HERE
2B77                             ; call FETCH
2B77                             ; EXPECT START_USER + 6, "create xyz here"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; call DUP
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; EXPECT 2, "dup 2"
2B77                             ; ppushValue -10
2B77                             ; ppushValue 10
2B77                             ; call STAR
2B77                             ; EXPECT -100, "expect -10 * 10 to be -100"
2B77                             ; ppushValue -10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT 200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue 10
2B77                             ; ppushValue -20
2B77                             ; call STAR
2B77                             ; EXPECT -200, "expect -10 * -20 to be 200"
2B77                             ; ppushValue -101
2B77                             ; ppushValue 20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5, "expect -101 / 20 to be -5"
2B77                             ; EXPECT -1, "expect -101 % 20 to be -1"
2B77                             ; ppushValue -101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT 5,  "expect -101 / -20 to be 5"
2B77                             ; EXPECT -1, "expect -101 % -20 to be -1"
2B77                             ; ppushValue 101
2B77                             ; ppushValue -20
2B77                             ; call SLASHMOD
2B77                             ; EXPECT -5,  "expect 101 / -20 to be -5"
2B77                             ; EXPECT 1, "expect 101 % -20 to be 1"
2B77                             ; TEST_SET_TEXT ": testif2 if 100 endif ;"
2B77                             ; ppushValue 0
2B77                             ; TEST_SET_TEXT "testloop"
2B77                             ; call INTERPRET
2B77                             ; EXPECT 5, "Loop until limit < 5"
2B77                             ; ppushPText "xyz"
2B77                             ; call COUNT
2B77                             ; EXPECT 3, "xyz length 3"
2B77                             ; call CFETCH
2B77                             ; EXPECT "x" + 0, "xyz --> x"
2B77                             ; ppushValue HEADER_LATEST
2B77                             ; call TCFA
2B77                             ; EXPECT HEADER_LATEST + 3 + 6, "cfa 3 bytes plus length of name"
2B77                             ; ppushValue 1
2B77                             ; ppushValue 2
2B77                             ; ppushValue HEADER_PLUS
2B77                             ; call TCFA
2B77                             ; call EXECUTE
2B77                             ; EXPECT 3, "1 2 plus = 3"
2B77                             ; ppushText "100",3
2B77                             ; call NUMBER
2B77                             ; EXPECT 0, "0 = no parse err"
2B77                             ; EXPECT 100, "parse 100"
2B77                             ; ppushText "latest",6
2B77                             ; call FIND
2B77                             ; EXPECT HEADER_LATEST, "find header of LATEST"
2B77                             ; TEST_SET_TEXT "base"
2B77                             ; rst $08
2B77                             ; dw interpret
2B77                             ; dw exit_forth
2B77                             ; call FETCH
2B77                             ; EXPECT 10, "expect base to be 10"
2B77                             ; ppushText "add",3
2B77                             ; call FIND
2B77                             ; ppushValue 64
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#h 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT $100, "expect hex $100"
2B77                             ; TEST_SET_TEXT "hex"
2B77                             ; INTERPRET
2B77                             ; TEST_SET_TEXT "#d 100"
2B77                             ; INTERPRET
2B77                             ; EXPECT 100, "expect decimal 100"
2B77                             ; TEST_SET_TEXT "decimal"
2B77                             ; INTERPRET
2B77                          ;*Macro unroll: TEST_SET_TEXT "16 base ! 20"
2B77   2A 45 30               LD   HL,(lineBufStart)   
2B7A   22 4B 30               LD   (lineBufTop),HL   
2B7D   22 49 30               LD   (currkey),HL   
2B80   21 89 2B               LD   HL,tst_textM_2518S18   
2B83   22 61 32               LD   (char_pointer),HL   
2B86                          ;*Macro unroll:  _skip
2B86   C3 86 2B               JP   $   
2B89                          ;*Macro unroll:  STRUC_PUSH $
2B89                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2B89                STRUC_12:   .SET   STRUC_11   
2B89                STRUC_11:   .SET   STRUC_10   
2B89                STRUC_10:   .SET   STRUC_9   
2B89                STRUC_9:   .SET   STRUC_8   
2B89                STRUC_8:   .SET   STRUC_7   
2B89                STRUC_7:   .SET   STRUC_6   
2B89                STRUC_6:   .SET   STRUC_5   
2B89                STRUC_5:   .SET   STRUC_4   
2B89                STRUC_4:   .SET   STRUC_3   
2B89                STRUC_3:   .SET   STRUC_2   
2B89                STRUC_2:   .SET   STRUC_TOP   
2B89                STRUC_TOP:   .SET   $   
2B89                TST_TEXTM_2518S18:      
2B89   31 36 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "16 base ! 20","\r\n",-1,"\r\n"   
2B9A                          ;*Macro unroll:  _endskip
2B9A                          ;*Macro unroll:  STRUC_FWD
2B9A                CUR_ADR:   .SET   $   
2B87                          .ORG   STRUC_TOP - 2   
2B87   9A 2B                  DW   CUR_ADR   
2B9A                          .ORG   CUR_ADR   
2B9A                          ;*Macro unroll:  STRUC_POP
2B9A                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2B9A                STRUC_TOP:   .SET   STRUC_2   
2B9A                STRUC_2:   .SET   STRUC_3   
2B9A                STRUC_3:   .SET   STRUC_4   
2B9A                STRUC_4:   .SET   STRUC_5   
2B9A                STRUC_5:   .SET   STRUC_6   
2B9A                STRUC_6:   .SET   STRUC_7   
2B9A                STRUC_7:   .SET   STRUC_8   
2B9A                STRUC_8:   .SET   STRUC_9   
2B9A                STRUC_9:   .SET   STRUC_10   
2B9A                STRUC_10:   .SET   STRUC_11   
2B9A                STRUC_11:   .SET   STRUC_12   
2B9A                STRUC_12:   .SET   0   
2B9A                          ;*Macro unroll: INTERPRET
2B9A   CF                     RST   $08   
2B9B   57 0B                  DW   interpret   
2B9D   8F 0E                  DW   exit_forth   
2B9F                          ;*Macro unroll: EXPECT 32, "expect $20 to be 32"
2B9F   CD A6 09               CALL   printNum   
2BA2                          ;*Macro unroll:  loadWord H,L, B,C
2BA2   69                     LD   L,C   
2BA3   60                     LD   H,B   
2BA4   69                     LD   L,C   
2BA5                          ;*Macro unroll:  ppop0 B,C
2BA5   DD 2B                  DEC   IX   
2BA7   DD 46 00               LD   B,(IX+0)   
2BAA   DD 2B                  DEC   IX   
2BAC   DD 4E 00               LD   C,(IX+0)   
2BAF                          ;*Macro unroll:  CMP16 32
2BAF   11 20 00               LD   DE,32   
2BB2   B7                     OR   A   
2BB3   ED 52                  SBC   HL,DE   
2BB5                          ;*Macro unroll:  checkZeroWord H,L
2BB5   7D                     LD   A,L   
2BB6   B4                     OR   H   
2BB7   CA DA 2B               JP   z,tf_doneM_2520S20   
2BBA   11 F3 0F               LD   DE,FAILED   
2BBD   CD 5B 11               CALL   printPStr   
2BC0   11 CA 2B               LD   DE,te_failM_2520S20   
2BC3   CD 5B 11               CALL   printPStr   
2BC6   76                     HALT      
2BC7                          ;*Macro unroll:  _skip
2BC7   C3 C7 2B               JP   $   
2BCA                          ;*Macro unroll:  STRUC_PUSH $
2BCA                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BCA                STRUC_12:   .SET   STRUC_11   
2BCA                STRUC_11:   .SET   STRUC_10   
2BCA                STRUC_10:   .SET   STRUC_9   
2BCA                STRUC_9:   .SET   STRUC_8   
2BCA                STRUC_8:   .SET   STRUC_7   
2BCA                STRUC_7:   .SET   STRUC_6   
2BCA                STRUC_6:   .SET   STRUC_5   
2BCA                STRUC_5:   .SET   STRUC_4   
2BCA                STRUC_4:   .SET   STRUC_3   
2BCA                STRUC_3:   .SET   STRUC_2   
2BCA                STRUC_2:   .SET   STRUC_TOP   
2BCA                STRUC_TOP:   .SET   $   
2BCA                TE_FAILM_2520S20:      
2BCA   0F 33 32 20 24 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "32 $20 to be 32"   
2BDA                          ;*Macro unroll:  _endskip
2BDA                          ;*Macro unroll:  STRUC_FWD
2BDA                CUR_ADR:   .SET   $   
2BC8                          .ORG   STRUC_TOP - 2   
2BC8   DA 2B                  DW   CUR_ADR   
2BDA                          .ORG   CUR_ADR   
2BDA                          ;*Macro unroll:  STRUC_POP
2BDA                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BDA                STRUC_TOP:   .SET   STRUC_2   
2BDA                STRUC_2:   .SET   STRUC_3   
2BDA                STRUC_3:   .SET   STRUC_4   
2BDA                STRUC_4:   .SET   STRUC_5   
2BDA                STRUC_5:   .SET   STRUC_6   
2BDA                STRUC_6:   .SET   STRUC_7   
2BDA                STRUC_7:   .SET   STRUC_8   
2BDA                STRUC_8:   .SET   STRUC_9   
2BDA                STRUC_9:   .SET   STRUC_10   
2BDA                STRUC_10:   .SET   STRUC_11   
2BDA                STRUC_11:   .SET   STRUC_12   
2BDA                STRUC_12:   .SET   0   
2BDA                TF_DONEM_2520S20:      
2BDA                          ;*Macro unroll: TEST_SET_TEXT "0A base ! 20"
2BDA   2A 45 30               LD   HL,(lineBufStart)   
2BDD   22 4B 30               LD   (lineBufTop),HL   
2BE0   22 49 30               LD   (currkey),HL   
2BE3   21 EC 2B               LD   HL,tst_textM_2521S22   
2BE6   22 61 32               LD   (char_pointer),HL   
2BE9                          ;*Macro unroll:  _skip
2BE9   C3 E9 2B               JP   $   
2BEC                          ;*Macro unroll:  STRUC_PUSH $
2BEC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2BEC                STRUC_12:   .SET   STRUC_11   
2BEC                STRUC_11:   .SET   STRUC_10   
2BEC                STRUC_10:   .SET   STRUC_9   
2BEC                STRUC_9:   .SET   STRUC_8   
2BEC                STRUC_8:   .SET   STRUC_7   
2BEC                STRUC_7:   .SET   STRUC_6   
2BEC                STRUC_6:   .SET   STRUC_5   
2BEC                STRUC_5:   .SET   STRUC_4   
2BEC                STRUC_4:   .SET   STRUC_3   
2BEC                STRUC_3:   .SET   STRUC_2   
2BEC                STRUC_2:   .SET   STRUC_TOP   
2BEC                STRUC_TOP:   .SET   $   
2BEC                TST_TEXTM_2521S22:      
2BEC   30 41 20 62 61 73 65 20 21 20 32 30 0D 0A FF 0D 0A DB   "0A base ! 20","\r\n",-1,"\r\n"   
2BFD                          ;*Macro unroll:  _endskip
2BFD                          ;*Macro unroll:  STRUC_FWD
2BFD                CUR_ADR:   .SET   $   
2BEA                          .ORG   STRUC_TOP - 2   
2BEA   FD 2B                  DW   CUR_ADR   
2BFD                          .ORG   CUR_ADR   
2BFD                          ;*Macro unroll:  STRUC_POP
2BFD                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2BFD                STRUC_TOP:   .SET   STRUC_2   
2BFD                STRUC_2:   .SET   STRUC_3   
2BFD                STRUC_3:   .SET   STRUC_4   
2BFD                STRUC_4:   .SET   STRUC_5   
2BFD                STRUC_5:   .SET   STRUC_6   
2BFD                STRUC_6:   .SET   STRUC_7   
2BFD                STRUC_7:   .SET   STRUC_8   
2BFD                STRUC_8:   .SET   STRUC_9   
2BFD                STRUC_9:   .SET   STRUC_10   
2BFD                STRUC_10:   .SET   STRUC_11   
2BFD                STRUC_11:   .SET   STRUC_12   
2BFD                STRUC_12:   .SET   0   
2BFD                          ;*Macro unroll: INTERPRET
2BFD   CF                     RST   $08   
2BFE   57 0B                  DW   interpret   
2C00   8F 0E                  DW   exit_forth   
2C02                          ;*Macro unroll: EXPECT 20, "expect decimal 20 to be 32"
2C02   CD A6 09               CALL   printNum   
2C05                          ;*Macro unroll:  loadWord H,L, B,C
2C05   69                     LD   L,C   
2C06   60                     LD   H,B   
2C07   69                     LD   L,C   
2C08                          ;*Macro unroll:  ppop0 B,C
2C08   DD 2B                  DEC   IX   
2C0A   DD 46 00               LD   B,(IX+0)   
2C0D   DD 2B                  DEC   IX   
2C0F   DD 4E 00               LD   C,(IX+0)   
2C12                          ;*Macro unroll:  CMP16 20
2C12   11 14 00               LD   DE,20   
2C15   B7                     OR   A   
2C16   ED 52                  SBC   HL,DE   
2C18                          ;*Macro unroll:  checkZeroWord H,L
2C18   7D                     LD   A,L   
2C19   B4                     OR   H   
2C1A   CA 44 2C               JP   z,tf_doneM_2523S24   
2C1D   11 F3 0F               LD   DE,FAILED   
2C20   CD 5B 11               CALL   printPStr   
2C23   11 2D 2C               LD   DE,te_failM_2523S24   
2C26   CD 5B 11               CALL   printPStr   
2C29   76                     HALT      
2C2A                          ;*Macro unroll:  _skip
2C2A   C3 2A 2C               JP   $   
2C2D                          ;*Macro unroll:  STRUC_PUSH $
2C2D                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C2D                STRUC_12:   .SET   STRUC_11   
2C2D                STRUC_11:   .SET   STRUC_10   
2C2D                STRUC_10:   .SET   STRUC_9   
2C2D                STRUC_9:   .SET   STRUC_8   
2C2D                STRUC_8:   .SET   STRUC_7   
2C2D                STRUC_7:   .SET   STRUC_6   
2C2D                STRUC_6:   .SET   STRUC_5   
2C2D                STRUC_5:   .SET   STRUC_4   
2C2D                STRUC_4:   .SET   STRUC_3   
2C2D                STRUC_3:   .SET   STRUC_2   
2C2D                STRUC_2:   .SET   STRUC_TOP   
2C2D                STRUC_TOP:   .SET   $   
2C2D                TE_FAILM_2523S24:      
2C2D   16 32 30 20 64 65 63 69 6D 61 6C 20 32 30 20 74 6F 20 62 65 20 33 32 .PSTR   "20 decimal 20 to be 32"   
2C44                          ;*Macro unroll:  _endskip
2C44                          ;*Macro unroll:  STRUC_FWD
2C44                CUR_ADR:   .SET   $   
2C2B                          .ORG   STRUC_TOP - 2   
2C2B   44 2C                  DW   CUR_ADR   
2C44                          .ORG   CUR_ADR   
2C44                          ;*Macro unroll:  STRUC_POP
2C44                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C44                STRUC_TOP:   .SET   STRUC_2   
2C44                STRUC_2:   .SET   STRUC_3   
2C44                STRUC_3:   .SET   STRUC_4   
2C44                STRUC_4:   .SET   STRUC_5   
2C44                STRUC_5:   .SET   STRUC_6   
2C44                STRUC_6:   .SET   STRUC_7   
2C44                STRUC_7:   .SET   STRUC_8   
2C44                STRUC_8:   .SET   STRUC_9   
2C44                STRUC_9:   .SET   STRUC_10   
2C44                STRUC_10:   .SET   STRUC_11   
2C44                STRUC_11:   .SET   STRUC_12   
2C44                STRUC_12:   .SET   0   
2C44                TF_DONEM_2523S24:      
2C44                          ;*Macro unroll: TEST_SET_TEXT "100 100 +"
2C44   2A 45 30               LD   HL,(lineBufStart)   
2C47   22 4B 30               LD   (lineBufTop),HL   
2C4A   22 49 30               LD   (currkey),HL   
2C4D   21 56 2C               LD   HL,tst_textM_2524S1   
2C50   22 61 32               LD   (char_pointer),HL   
2C53                          ;*Macro unroll:  _skip
2C53   C3 53 2C               JP   $   
2C56                          ;*Macro unroll:  STRUC_PUSH $
2C56                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C56                STRUC_12:   .SET   STRUC_11   
2C56                STRUC_11:   .SET   STRUC_10   
2C56                STRUC_10:   .SET   STRUC_9   
2C56                STRUC_9:   .SET   STRUC_8   
2C56                STRUC_8:   .SET   STRUC_7   
2C56                STRUC_7:   .SET   STRUC_6   
2C56                STRUC_6:   .SET   STRUC_5   
2C56                STRUC_5:   .SET   STRUC_4   
2C56                STRUC_4:   .SET   STRUC_3   
2C56                STRUC_3:   .SET   STRUC_2   
2C56                STRUC_2:   .SET   STRUC_TOP   
2C56                STRUC_TOP:   .SET   $   
2C56                TST_TEXTM_2524S1:      
2C56   31 30 30 20 31 30 30 20 2B 0D 0A FF 0D 0A DB   "100 100 +","\r\n",-1,"\r\n"   
2C64                          ;*Macro unroll:  _endskip
2C64                          ;*Macro unroll:  STRUC_FWD
2C64                CUR_ADR:   .SET   $   
2C54                          .ORG   STRUC_TOP - 2   
2C54   64 2C                  DW   CUR_ADR   
2C64                          .ORG   CUR_ADR   
2C64                          ;*Macro unroll:  STRUC_POP
2C64                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2C64                STRUC_TOP:   .SET   STRUC_2   
2C64                STRUC_2:   .SET   STRUC_3   
2C64                STRUC_3:   .SET   STRUC_4   
2C64                STRUC_4:   .SET   STRUC_5   
2C64                STRUC_5:   .SET   STRUC_6   
2C64                STRUC_6:   .SET   STRUC_7   
2C64                STRUC_7:   .SET   STRUC_8   
2C64                STRUC_8:   .SET   STRUC_9   
2C64                STRUC_9:   .SET   STRUC_10   
2C64                STRUC_10:   .SET   STRUC_11   
2C64                STRUC_11:   .SET   STRUC_12   
2C64                STRUC_12:   .SET   0   
2C64                          ;*Macro unroll: INTERPRET
2C64   CF                     RST   $08   
2C65   57 0B                  DW   interpret   
2C67   8F 0E                  DW   exit_forth   
2C69                          ;*Macro unroll: EXPECT 200, "100 100 + = 200"
2C69   CD A6 09               CALL   printNum   
2C6C                          ;*Macro unroll:  loadWord H,L, B,C
2C6C   69                     LD   L,C   
2C6D   60                     LD   H,B   
2C6E   69                     LD   L,C   
2C6F                          ;*Macro unroll:  ppop0 B,C
2C6F   DD 2B                  DEC   IX   
2C71   DD 46 00               LD   B,(IX+0)   
2C74   DD 2B                  DEC   IX   
2C76   DD 4E 00               LD   C,(IX+0)   
2C79                          ;*Macro unroll:  CMP16 200
2C79   11 C8 00               LD   DE,200   
2C7C   B7                     OR   A   
2C7D   ED 52                  SBC   HL,DE   
2C7F                          ;*Macro unroll:  checkZeroWord H,L
2C7F   7D                     LD   A,L   
2C80   B4                     OR   H   
2C81   CA A4 2C               JP   z,tf_doneM_2526S3   
2C84   11 F3 0F               LD   DE,FAILED   
2C87   CD 5B 11               CALL   printPStr   
2C8A   11 94 2C               LD   DE,te_failM_2526S3   
2C8D   CD 5B 11               CALL   printPStr   
2C90   76                     HALT      
2C91                          ;*Macro unroll:  _skip
2C91   C3 91 2C               JP   $   
2C94                          ;*Macro unroll:  STRUC_PUSH $
2C94                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2C94                STRUC_12:   .SET   STRUC_11   
2C94                STRUC_11:   .SET   STRUC_10   
2C94                STRUC_10:   .SET   STRUC_9   
2C94                STRUC_9:   .SET   STRUC_8   
2C94                STRUC_8:   .SET   STRUC_7   
2C94                STRUC_7:   .SET   STRUC_6   
2C94                STRUC_6:   .SET   STRUC_5   
2C94                STRUC_5:   .SET   STRUC_4   
2C94                STRUC_4:   .SET   STRUC_3   
2C94                STRUC_3:   .SET   STRUC_2   
2C94                STRUC_2:   .SET   STRUC_TOP   
2C94                STRUC_TOP:   .SET   $   
2C94                TE_FAILM_2526S3:      
2C94   0F 31 30 30 20 31 30 30 20 2B 20 3D 20 32 30 30 .PSTR   "100 100 + = 200"   
2CA4                          ;*Macro unroll:  _endskip
2CA4                          ;*Macro unroll:  STRUC_FWD
2CA4                CUR_ADR:   .SET   $   
2C92                          .ORG   STRUC_TOP - 2   
2C92   A4 2C                  DW   CUR_ADR   
2CA4                          .ORG   CUR_ADR   
2CA4                          ;*Macro unroll:  STRUC_POP
2CA4                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CA4                STRUC_TOP:   .SET   STRUC_2   
2CA4                STRUC_2:   .SET   STRUC_3   
2CA4                STRUC_3:   .SET   STRUC_4   
2CA4                STRUC_4:   .SET   STRUC_5   
2CA4                STRUC_5:   .SET   STRUC_6   
2CA4                STRUC_6:   .SET   STRUC_7   
2CA4                STRUC_7:   .SET   STRUC_8   
2CA4                STRUC_8:   .SET   STRUC_9   
2CA4                STRUC_9:   .SET   STRUC_10   
2CA4                STRUC_10:   .SET   STRUC_11   
2CA4                STRUC_11:   .SET   STRUC_12   
2CA4                STRUC_12:   .SET   0   
2CA4                TF_DONEM_2526S3:      
2CA4                          ;*Macro unroll: TEST_SET_TEXT "100 10 + ."
2CA4   2A 45 30               LD   HL,(lineBufStart)   
2CA7   22 4B 30               LD   (lineBufTop),HL   
2CAA   22 49 30               LD   (currkey),HL   
2CAD   21 B6 2C               LD   HL,tst_textM_2527S5   
2CB0   22 61 32               LD   (char_pointer),HL   
2CB3                          ;*Macro unroll:  _skip
2CB3   C3 B3 2C               JP   $   
2CB6                          ;*Macro unroll:  STRUC_PUSH $
2CB6                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CB6                STRUC_12:   .SET   STRUC_11   
2CB6                STRUC_11:   .SET   STRUC_10   
2CB6                STRUC_10:   .SET   STRUC_9   
2CB6                STRUC_9:   .SET   STRUC_8   
2CB6                STRUC_8:   .SET   STRUC_7   
2CB6                STRUC_7:   .SET   STRUC_6   
2CB6                STRUC_6:   .SET   STRUC_5   
2CB6                STRUC_5:   .SET   STRUC_4   
2CB6                STRUC_4:   .SET   STRUC_3   
2CB6                STRUC_3:   .SET   STRUC_2   
2CB6                STRUC_2:   .SET   STRUC_TOP   
2CB6                STRUC_TOP:   .SET   $   
2CB6                TST_TEXTM_2527S5:      
2CB6   31 30 30 20 31 30 20 2B 20 2E 0D 0A FF 0D 0A DB   "100 10 + .","\r\n",-1,"\r\n"   
2CC5                          ;*Macro unroll:  _endskip
2CC5                          ;*Macro unroll:  STRUC_FWD
2CC5                CUR_ADR:   .SET   $   
2CB4                          .ORG   STRUC_TOP - 2   
2CB4   C5 2C                  DW   CUR_ADR   
2CC5                          .ORG   CUR_ADR   
2CC5                          ;*Macro unroll:  STRUC_POP
2CC5                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CC5                STRUC_TOP:   .SET   STRUC_2   
2CC5                STRUC_2:   .SET   STRUC_3   
2CC5                STRUC_3:   .SET   STRUC_4   
2CC5                STRUC_4:   .SET   STRUC_5   
2CC5                STRUC_5:   .SET   STRUC_6   
2CC5                STRUC_6:   .SET   STRUC_7   
2CC5                STRUC_7:   .SET   STRUC_8   
2CC5                STRUC_8:   .SET   STRUC_9   
2CC5                STRUC_9:   .SET   STRUC_10   
2CC5                STRUC_10:   .SET   STRUC_11   
2CC5                STRUC_11:   .SET   STRUC_12   
2CC5                STRUC_12:   .SET   0   
2CC5                          ;*Macro unroll: INTERPRET
2CC5   CF                     RST   $08   
2CC6   57 0B                  DW   interpret   
2CC8   8F 0E                  DW   exit_forth   
2CCA                          ;*Macro unroll: TEST_SET_TEXT "-10 abs"
2CCA   2A 45 30               LD   HL,(lineBufStart)   
2CCD   22 4B 30               LD   (lineBufTop),HL   
2CD0   22 49 30               LD   (currkey),HL   
2CD3   21 DC 2C               LD   HL,tst_textM_2529S8   
2CD6   22 61 32               LD   (char_pointer),HL   
2CD9                          ;*Macro unroll:  _skip
2CD9   C3 D9 2C               JP   $   
2CDC                          ;*Macro unroll:  STRUC_PUSH $
2CDC                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2CDC                STRUC_12:   .SET   STRUC_11   
2CDC                STRUC_11:   .SET   STRUC_10   
2CDC                STRUC_10:   .SET   STRUC_9   
2CDC                STRUC_9:   .SET   STRUC_8   
2CDC                STRUC_8:   .SET   STRUC_7   
2CDC                STRUC_7:   .SET   STRUC_6   
2CDC                STRUC_6:   .SET   STRUC_5   
2CDC                STRUC_5:   .SET   STRUC_4   
2CDC                STRUC_4:   .SET   STRUC_3   
2CDC                STRUC_3:   .SET   STRUC_2   
2CDC                STRUC_2:   .SET   STRUC_TOP   
2CDC                STRUC_TOP:   .SET   $   
2CDC                TST_TEXTM_2529S8:      
2CDC   2D 31 30 20 61 62 73 0D 0A FF 0D 0A DB   "-10 abs","\r\n",-1,"\r\n"   
2CE8                          ;*Macro unroll:  _endskip
2CE8                          ;*Macro unroll:  STRUC_FWD
2CE8                CUR_ADR:   .SET   $   
2CDA                          .ORG   STRUC_TOP - 2   
2CDA   E8 2C                  DW   CUR_ADR   
2CE8                          .ORG   CUR_ADR   
2CE8                          ;*Macro unroll:  STRUC_POP
2CE8                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2CE8                STRUC_TOP:   .SET   STRUC_2   
2CE8                STRUC_2:   .SET   STRUC_3   
2CE8                STRUC_3:   .SET   STRUC_4   
2CE8                STRUC_4:   .SET   STRUC_5   
2CE8                STRUC_5:   .SET   STRUC_6   
2CE8                STRUC_6:   .SET   STRUC_7   
2CE8                STRUC_7:   .SET   STRUC_8   
2CE8                STRUC_8:   .SET   STRUC_9   
2CE8                STRUC_9:   .SET   STRUC_10   
2CE8                STRUC_10:   .SET   STRUC_11   
2CE8                STRUC_11:   .SET   STRUC_12   
2CE8                STRUC_12:   .SET   0   
2CE8                          ;*Macro unroll: INTERPRET
2CE8   CF                     RST   $08   
2CE9   57 0B                  DW   interpret   
2CEB   8F 0E                  DW   exit_forth   
2CED                          ;*Macro unroll: EXPECT 10, "expect abs -10 to be 10"
2CED   CD A6 09               CALL   printNum   
2CF0                          ;*Macro unroll:  loadWord H,L, B,C
2CF0   69                     LD   L,C   
2CF1   60                     LD   H,B   
2CF2   69                     LD   L,C   
2CF3                          ;*Macro unroll:  ppop0 B,C
2CF3   DD 2B                  DEC   IX   
2CF5   DD 46 00               LD   B,(IX+0)   
2CF8   DD 2B                  DEC   IX   
2CFA   DD 4E 00               LD   C,(IX+0)   
2CFD                          ;*Macro unroll:  CMP16 10
2CFD   11 0A 00               LD   DE,10   
2D00   B7                     OR   A   
2D01   ED 52                  SBC   HL,DE   
2D03                          ;*Macro unroll:  checkZeroWord H,L
2D03   7D                     LD   A,L   
2D04   B4                     OR   H   
2D05   CA 2C 2D               JP   z,tf_doneM_2531S10   
2D08   11 F3 0F               LD   DE,FAILED   
2D0B   CD 5B 11               CALL   printPStr   
2D0E   11 18 2D               LD   DE,te_failM_2531S10   
2D11   CD 5B 11               CALL   printPStr   
2D14   76                     HALT      
2D15                          ;*Macro unroll:  _skip
2D15   C3 15 2D               JP   $   
2D18                          ;*Macro unroll:  STRUC_PUSH $
2D18                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D18                STRUC_12:   .SET   STRUC_11   
2D18                STRUC_11:   .SET   STRUC_10   
2D18                STRUC_10:   .SET   STRUC_9   
2D18                STRUC_9:   .SET   STRUC_8   
2D18                STRUC_8:   .SET   STRUC_7   
2D18                STRUC_7:   .SET   STRUC_6   
2D18                STRUC_6:   .SET   STRUC_5   
2D18                STRUC_5:   .SET   STRUC_4   
2D18                STRUC_4:   .SET   STRUC_3   
2D18                STRUC_3:   .SET   STRUC_2   
2D18                STRUC_2:   .SET   STRUC_TOP   
2D18                STRUC_TOP:   .SET   $   
2D18                TE_FAILM_2531S10:      
2D18   13 31 30 20 61 62 73 20 2D 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs -10 to be 10"   
2D2C                          ;*Macro unroll:  _endskip
2D2C                          ;*Macro unroll:  STRUC_FWD
2D2C                CUR_ADR:   .SET   $   
2D16                          .ORG   STRUC_TOP - 2   
2D16   2C 2D                  DW   CUR_ADR   
2D2C                          .ORG   CUR_ADR   
2D2C                          ;*Macro unroll:  STRUC_POP
2D2C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D2C                STRUC_TOP:   .SET   STRUC_2   
2D2C                STRUC_2:   .SET   STRUC_3   
2D2C                STRUC_3:   .SET   STRUC_4   
2D2C                STRUC_4:   .SET   STRUC_5   
2D2C                STRUC_5:   .SET   STRUC_6   
2D2C                STRUC_6:   .SET   STRUC_7   
2D2C                STRUC_7:   .SET   STRUC_8   
2D2C                STRUC_8:   .SET   STRUC_9   
2D2C                STRUC_9:   .SET   STRUC_10   
2D2C                STRUC_10:   .SET   STRUC_11   
2D2C                STRUC_11:   .SET   STRUC_12   
2D2C                STRUC_12:   .SET   0   
2D2C                TF_DONEM_2531S10:      
2D2C                          ;*Macro unroll: TEST_SET_TEXT "10 abs"
2D2C   2A 45 30               LD   HL,(lineBufStart)   
2D2F   22 4B 30               LD   (lineBufTop),HL   
2D32   22 49 30               LD   (currkey),HL   
2D35   21 3E 2D               LD   HL,tst_textM_2532S12   
2D38   22 61 32               LD   (char_pointer),HL   
2D3B                          ;*Macro unroll:  _skip
2D3B   C3 3B 2D               JP   $   
2D3E                          ;*Macro unroll:  STRUC_PUSH $
2D3E                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D3E                STRUC_12:   .SET   STRUC_11   
2D3E                STRUC_11:   .SET   STRUC_10   
2D3E                STRUC_10:   .SET   STRUC_9   
2D3E                STRUC_9:   .SET   STRUC_8   
2D3E                STRUC_8:   .SET   STRUC_7   
2D3E                STRUC_7:   .SET   STRUC_6   
2D3E                STRUC_6:   .SET   STRUC_5   
2D3E                STRUC_5:   .SET   STRUC_4   
2D3E                STRUC_4:   .SET   STRUC_3   
2D3E                STRUC_3:   .SET   STRUC_2   
2D3E                STRUC_2:   .SET   STRUC_TOP   
2D3E                STRUC_TOP:   .SET   $   
2D3E                TST_TEXTM_2532S12:      
2D3E   31 30 20 61 62 73 0D 0A FF 0D 0A DB   "10 abs","\r\n",-1,"\r\n"   
2D49                          ;*Macro unroll:  _endskip
2D49                          ;*Macro unroll:  STRUC_FWD
2D49                CUR_ADR:   .SET   $   
2D3C                          .ORG   STRUC_TOP - 2   
2D3C   49 2D                  DW   CUR_ADR   
2D49                          .ORG   CUR_ADR   
2D49                          ;*Macro unroll:  STRUC_POP
2D49                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D49                STRUC_TOP:   .SET   STRUC_2   
2D49                STRUC_2:   .SET   STRUC_3   
2D49                STRUC_3:   .SET   STRUC_4   
2D49                STRUC_4:   .SET   STRUC_5   
2D49                STRUC_5:   .SET   STRUC_6   
2D49                STRUC_6:   .SET   STRUC_7   
2D49                STRUC_7:   .SET   STRUC_8   
2D49                STRUC_8:   .SET   STRUC_9   
2D49                STRUC_9:   .SET   STRUC_10   
2D49                STRUC_10:   .SET   STRUC_11   
2D49                STRUC_11:   .SET   STRUC_12   
2D49                STRUC_12:   .SET   0   
2D49                          ;*Macro unroll: INTERPRET
2D49   CF                     RST   $08   
2D4A   57 0B                  DW   interpret   
2D4C   8F 0E                  DW   exit_forth   
2D4E                          ;*Macro unroll: EXPECT 10, "expect abs 10 to be 10"
2D4E   CD A6 09               CALL   printNum   
2D51                          ;*Macro unroll:  loadWord H,L, B,C
2D51   69                     LD   L,C   
2D52   60                     LD   H,B   
2D53   69                     LD   L,C   
2D54                          ;*Macro unroll:  ppop0 B,C
2D54   DD 2B                  DEC   IX   
2D56   DD 46 00               LD   B,(IX+0)   
2D59   DD 2B                  DEC   IX   
2D5B   DD 4E 00               LD   C,(IX+0)   
2D5E                          ;*Macro unroll:  CMP16 10
2D5E   11 0A 00               LD   DE,10   
2D61   B7                     OR   A   
2D62   ED 52                  SBC   HL,DE   
2D64                          ;*Macro unroll:  checkZeroWord H,L
2D64   7D                     LD   A,L   
2D65   B4                     OR   H   
2D66   CA 8C 2D               JP   z,tf_doneM_2534S14   
2D69   11 F3 0F               LD   DE,FAILED   
2D6C   CD 5B 11               CALL   printPStr   
2D6F   11 79 2D               LD   DE,te_failM_2534S14   
2D72   CD 5B 11               CALL   printPStr   
2D75   76                     HALT      
2D76                          ;*Macro unroll:  _skip
2D76   C3 76 2D               JP   $   
2D79                          ;*Macro unroll:  STRUC_PUSH $
2D79                STRUC_COUNT:   .SET   STRUC_COUNT + 1   
2D79                STRUC_12:   .SET   STRUC_11   
2D79                STRUC_11:   .SET   STRUC_10   
2D79                STRUC_10:   .SET   STRUC_9   
2D79                STRUC_9:   .SET   STRUC_8   
2D79                STRUC_8:   .SET   STRUC_7   
2D79                STRUC_7:   .SET   STRUC_6   
2D79                STRUC_6:   .SET   STRUC_5   
2D79                STRUC_5:   .SET   STRUC_4   
2D79                STRUC_4:   .SET   STRUC_3   
2D79                STRUC_3:   .SET   STRUC_2   
2D79                STRUC_2:   .SET   STRUC_TOP   
2D79                STRUC_TOP:   .SET   $   
2D79                TE_FAILM_2534S14:      
2D79   12 31 30 20 61 62 73 20 31 30 20 74 6F 20 62 65 20 31 30 .PSTR   "10 abs 10 to be 10"   
2D8C                          ;*Macro unroll:  _endskip
2D8C                          ;*Macro unroll:  STRUC_FWD
2D8C                CUR_ADR:   .SET   $   
2D77                          .ORG   STRUC_TOP - 2   
2D77   8C 2D                  DW   CUR_ADR   
2D8C                          .ORG   CUR_ADR   
2D8C                          ;*Macro unroll:  STRUC_POP
2D8C                STRUC_COUNT:   .SET   STRUC_COUNT - 1   
2D8C                STRUC_TOP:   .SET   STRUC_2   
2D8C                STRUC_2:   .SET   STRUC_3   
2D8C                STRUC_3:   .SET   STRUC_4   
2D8C                STRUC_4:   .SET   STRUC_5   
2D8C                STRUC_5:   .SET   STRUC_6   
2D8C                STRUC_6:   .SET   STRUC_7   
2D8C                STRUC_7:   .SET   STRUC_8   
2D8C                STRUC_8:   .SET   STRUC_9   
2D8C                STRUC_9:   .SET   STRUC_10   
2D8C                STRUC_10:   .SET   STRUC_11   
2D8C                STRUC_11:   .SET   STRUC_12   
2D8C                STRUC_12:   .SET   0   
2D8C                TF_DONEM_2534S14:      
2D8C                             ; TEST_SET_TEXT "100 buffer: xvar"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbJDIyLDAwc3NJaUI0ZVhvaSEsJDIy
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar pack"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "xvar count dup"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "str len = 3"
2D8C                             ; TEST_SET_TEXT "type"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lpNGkhLCQyMiwwMHNzSWlCcGJXMWxaR2xoZEdVZ2VIbDZJZz09ISwkMjI=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT 00bbMDBzc0lqb2dlREVnTGlJPSEsJDIyLDAwc3NJaUJqYjIxd2FXeGxaQ0I0ZVhvaSEsJDIyLDAwc3NJaUE3SWc9PSE=
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "x1"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "1 0 if 1 else 2 endif +"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 3, "1 false -> 1 2 -> 1 2 + -> 3"
2D8C                             ; TEST_SET_TEXT "0 1 if if 100 else 200 endif else 300 endif"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "select"
2D8C                             ; TEST_SET_TEXT "0 begin dup 5 < while dup . 1+ repeat"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 5, "Loop until limit < 5"
2D8C                             ; TEST_SET_TEXT "{ if 100 else 200 endif } define: q"
2D8C                             ; INTERPRET
2D8C                             ; TEST_SET_TEXT "0 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 200, "define: q 0 = 200"
2D8C                             ; TEST_SET_TEXT "1 q"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 100, "define: q 1 = 100"
2D8C                             ; rst $08
2D8C                             ; dw litstr
2D8C                             ; .pstr "Expected parse error"
2D8C                             ; dw type
2D8C                             ; dw exit_forth
2D8C                             ; ppushValue 999
2D8C                             ; TEST_SET_TEXT "$$123"
2D8C                             ; INTERPRET
2D8C                             ; EXPECT 999, "interpret $$123"
2D8C                          ;*Macro unroll:  PRINT_STR DONE
2D8C                          ;*Macro unroll:  ppush0 D,E
2D8C   DD 73 00               LD   (IX+0),E   
2D8F   DD 23                  INC   IX   
2D91   DD 72 00               LD   (IX+0),D   
2D94   DD 23                  INC   IX   
2D96   11 E8 0F               LD   DE,DONE   
2D99   CD 5B 11               CALL   printPStr   
2D9C                          ;*Macro unroll:  ppop0 D,E
2D9C   DD 2B                  DEC   IX   
2D9E   DD 56 00               LD   D,(IX+0)   
2DA1   DD 2B                  DEC   IX   
2DA3   DD 5E 00               LD   E,(IX+0)   
2DA6   76                     HALT      
2DA7                          ENDIF      
2DA7                          DS   RET_STACK_SIZE   ; return stack size
2EA7                RET_STACK:      ; return stack, grows down
2EA7                RPP:         ; RP0 grows down (into TIBB)
2EA7                DATA_STACK:      
2EA7                          DS   DATA_STACK_SIZE   ; TODO: change remove double data stack size
2FA7                SPP:         ; SP0 (should) grow down
2FA7                          ALIGN   $100   
3000                SERBUF:   DS   SER_BUFSIZE   
303F   00 00        SERINPTR:   DW   0   
3041   00 00        SERRDPTR:   DW   0   
3043   00 00        SERBUFUSED:   DW   0   
3045   00 00        LINEBUFSTART:   DW   0   
3047   00 00        LINEBUFSIZE:   DW   0   
3049   00 00        CURRKEY:   DW   0   
304B   00 00        LINEBUFTOP:   DW   0   
304D                LINEBUF:   DS   LINE_BUFSIZE   
30CD                WORDBUF:   DS   64   
310D                WORDBUF2:   DS   64   
314D                VAR_PAD:   DS   PAD_SIZE   
324D   00 00        EXITADDR:   DW   0   
324F   00 00        IS_LITERAL:   DW   0   ; Flag used to record if reading a literal
3251   00 00        VAR_HERE:   DW   0   
3253   00 00        VAR_INTP_STOP:   DW   0   
3255   00 00        VAR_STATE:   DW   0   
3257   00 00        VAR_NESTING:   DW   0   
3259   00 00        VAR_SP0:   DW   0   ;PAR_STACK
325B   00 00        VAR_BASE:   DW   0   
325D   00 00        VAR_LATEST_STR:   DW   0   
325F   00 00        VAR_LATEST:   DW   0   
3261                          IF   TESTMODE   
3261                             ; used for mocking getc
3261   00 00        CHAR_POINTER:   DW   0   
3263                          ENDIF      
3263                START_USER:      ; user allocated data starts here


TESTMODE:           0001 DEFINED AT LINE 3
MEM_SIZE:           10000 DEFINED AT LINE 1 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
ROM_SIZE:           2000 DEFINED AT LINE 2 IN constants.z80
                    > USED AT LINE 3 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
RAM_SIZE:           E000 DEFINED AT LINE 3 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
BM:                 0000 DEFINED AT LINE 5 IN constants.z80
                    > USED AT LINE 6 IN constants.z80
                    > USED AT LINE 8 IN constants.z80
                    > USED AT LINE 9 IN constants.z80
                    > USED AT LINE 11 IN constants.z80
EM:                 10000 DEFINED AT LINE 6 IN constants.z80
START_ROM:          0000 DEFINED AT LINE 8 IN constants.z80
                    > USED AT LINE 14
END_ROM:            2000 DEFINED AT LINE 9 IN constants.z80
START_RAM:          2000 DEFINED AT LINE 11 IN constants.z80
                    > USED AT LINE 12 IN constants.z80
                    > USED AT LINE 63
END_RAM:            10000 DEFINED AT LINE 12 IN constants.z80
RET_STACK_SIZE:     0100 DEFINED AT LINE 14 IN constants.z80
                    > USED AT LINE 2 IN variables.z80
DATA_STACK_SIZE:    0100 DEFINED AT LINE 15 IN constants.z80
                    > USED AT LINE 7 IN variables.z80
PAD_SIZE:           0100 DEFINED AT LINE 16 IN constants.z80
                    > USED AT LINE 23 IN variables.z80
SER_BUFSIZE:        003F DEFINED AT LINE 18 IN constants.z80
                    > USED AT LINE 35 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 11 IN variables.z80
SER_FULLSIZE:       0030 DEFINED AT LINE 19 IN constants.z80
                    > USED AT LINE 52 IN core-serial.z80
SER_EMPTYSIZE:      0005 DEFINED AT LINE 20 IN constants.z80
LINE_BUFSIZE:       0080 DEFINED AT LINE 21 IN constants.z80
                    > USED AT LINE 16 IN core-serial.z80
                    > USED AT LINE 19 IN variables.z80
IO_DATA:            0081 DEFINED AT LINE 23 IN constants.z80
IO_CTRL:            0080 DEFINED AT LINE 24 IN constants.z80
MSK_IMMED:          0080 DEFINED AT LINE 26 IN constants.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 85 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 26
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 11
                    > USED AT LINE 11
                    > USED AT LINE 11
MSK_HIDDEN:         0040 DEFINED AT LINE 27 IN constants.z80
                    > USED AT LINE 104 IN core-compiler.z80
                    > USED AT LINE 26
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
MSK_LENGTH:         003F DEFINED AT LINE 28 IN constants.z80
                    > USED AT LINE 26
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 62 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-utilities.z80
CALL_OPCODE:        00CD DEFINED AT LINE 30 IN constants.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
JP_OPCODE:          00C3 DEFINED AT LINE 31 IN constants.z80
                    > USED AT LINE 48 IN core-compiler.z80
LD_HL_OPCODE:       0021 DEFINED AT LINE 32 IN constants.z80
POP_HL_OPCODE:      00E1 DEFINED AT LINE 33 IN constants.z80
RET_OPCODE:         00C9 DEFINED AT LINE 34 IN constants.z80
RST08_OPCODE:       00CF DEFINED AT LINE 35 IN constants.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 8 IN core-extra.z80
RTS_HIGH:           00D6 DEFINED AT LINE 37 IN constants.z80
                    > USED AT LINE 54 IN core-serial.z80
RTS_LOW:            0096 DEFINED AT LINE 38 IN constants.z80
                    > USED AT LINE 23 IN core-kernel.z80
                    > USED AT LINE 19 IN core-serial.z80
LINK:               140C DEFINED AT LINE 9
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
                    > USED AT LINE 7
STRUC_COUNT:        2D8B DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
STRUC_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
STRUC_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
STRUC_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
STRUC_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
STRUC_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
STRUC_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
STRUC_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
STRUC_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
STRUC_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
STRUC_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
STRUC_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 106
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
STRUC_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 64
DLOOP_COUNT:        1407 DEFINED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
                    > USED AT LINE 29
                    > USED AT LINE 46
DLOOP_12:           0000 DEFINED AT LINE 59
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
                    > USED AT LINE 58
DLOOP_11:           0000 DEFINED AT LINE 58
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
                    > USED AT LINE 31
                    > USED AT LINE 57
DLOOP_10:           0000 DEFINED AT LINE 57
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
                    > USED AT LINE 32
                    > USED AT LINE 56
DLOOP_9:            0000 DEFINED AT LINE 56
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
                    > USED AT LINE 33
                    > USED AT LINE 55
DLOOP_8:            0000 DEFINED AT LINE 55
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
                    > USED AT LINE 34
                    > USED AT LINE 54
DLOOP_7:            0000 DEFINED AT LINE 54
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
                    > USED AT LINE 35
                    > USED AT LINE 53
DLOOP_6:            0000 DEFINED AT LINE 53
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
                    > USED AT LINE 36
                    > USED AT LINE 52
DLOOP_5:            0000 DEFINED AT LINE 52
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
                    > USED AT LINE 37
                    > USED AT LINE 51
DLOOP_4:            0000 DEFINED AT LINE 51
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
                    > USED AT LINE 38
                    > USED AT LINE 50
DLOOP_3:            0000 DEFINED AT LINE 50
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
                    > USED AT LINE 39
                    > USED AT LINE 49
DLOOP_2:            0000 DEFINED AT LINE 49
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
                    > USED AT LINE 40
                    > USED AT LINE 48
DLOOP_TOP:          0000 DEFINED AT LINE 48
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 89
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 89
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 103
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 41
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
                    > USED AT LINE 41
                    > USED AT LINE 84
                    > USED AT LINE 64
                    > USED AT LINE 97
                    > USED AT LINE 64
CPL_COUNT:          13CA DEFINED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 43
                    > USED AT LINE 43
CPL_10:             0000 DEFINED AT LINE 54
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
                    > USED AT LINE 53
CPL_9:              0000 DEFINED AT LINE 53
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
                    > USED AT LINE 30
                    > USED AT LINE 30
                    > USED AT LINE 52
                    > USED AT LINE 52
CPL_8:              0000 DEFINED AT LINE 52
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
                    > USED AT LINE 31
                    > USED AT LINE 31
                    > USED AT LINE 51
                    > USED AT LINE 51
CPL_7:              0000 DEFINED AT LINE 51
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
                    > USED AT LINE 32
                    > USED AT LINE 32
                    > USED AT LINE 50
                    > USED AT LINE 50
CPL_6:              0000 DEFINED AT LINE 50
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
                    > USED AT LINE 33
                    > USED AT LINE 33
                    > USED AT LINE 49
                    > USED AT LINE 49
CPL_5:              0000 DEFINED AT LINE 49
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
                    > USED AT LINE 34
                    > USED AT LINE 34
                    > USED AT LINE 48
                    > USED AT LINE 48
CPL_4:              0000 DEFINED AT LINE 48
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
                    > USED AT LINE 35
                    > USED AT LINE 35
                    > USED AT LINE 47
                    > USED AT LINE 47
CPL_3:              0000 DEFINED AT LINE 47
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
                    > USED AT LINE 36
                    > USED AT LINE 36
                    > USED AT LINE 46
                    > USED AT LINE 46
CPL_2:              0000 DEFINED AT LINE 46
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
                    > USED AT LINE 37
                    > USED AT LINE 37
                    > USED AT LINE 45
                    > USED AT LINE 45
CPL_TOP:            0000 DEFINED AT LINE 45
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 38
                    > USED AT LINE 38
                    > USED AT LINE 103
                    > USED AT LINE 59
                    > USED AT LINE 60
                    > USED AT LINE 59
                    > USED AT LINE 60
RST00:              0000 DEFINED AT LINE 15
RST08:              0008 DEFINED AT LINE 20
RST38:              0038 DEFINED AT LINE 24
RST66:              0066 DEFINED AT LINE 28
START:              0067 DEFINED AT LINE 31
                    > USED AT LINE 17
HEADER_ZLESS:       0073 DEFINED AT LINE 6
                    > USED AT LINE 9
ZLESS:              0078 DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 196 IN core-alu.z80
                    > USED AT LINE 206 IN core-alu.z80
                    > USED AT LINE 210 IN core-alu.z80
HEADER_ANDD:        0080 DEFINED AT LINE 6
                    > USED AT LINE 9
ANDD:               0086 DEFINED AT LINE 13
                    > USED AT LINE 5 IN core-extra.z80
                    > USED AT LINE 18 IN core-extra.z80
                    > USED AT LINE 29 IN core-extra.z80
HEADER_ORR:         0099 DEFINED AT LINE 6
                    > USED AT LINE 9
ORR:                009E DEFINED AT LINE 13
HEADER_XORR:        00B1 DEFINED AT LINE 6
                    > USED AT LINE 9
XORR:               00B7 DEFINED AT LINE 13
                    > USED AT LINE 195 IN core-alu.z80
                    > USED AT LINE 205 IN core-alu.z80
HEADER_PLUS:        00CA DEFINED AT LINE 6
                    > USED AT LINE 9
PLUS:               00CE DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 19 IN core-interpreter.z80
HEADER_INVER:       00DE DEFINED AT LINE 6
                    > USED AT LINE 9
INVER:              00E4 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 63 IN core-alu.z80
HEADER_NEGAT:       00ED DEFINED AT LINE 6
                    > USED AT LINE 9
NEGAT:              00F6 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-alu.z80
                    > USED AT LINE 75 IN core-alu.z80
                    > USED AT LINE 198 IN core-alu.z80
                    > USED AT LINE 218 IN core-alu.z80
                    > USED AT LINE 223 IN core-alu.z80
HEADER_DNEGA:       00FD DEFINED AT LINE 6
                    > USED AT LINE 9
DNEGA:              0107 DEFINED AT LINE 13
HEADER_SUBB:        011A DEFINED AT LINE 6
                    > USED AT LINE 9
SUBB:               011E DEFINED AT LINE 13
                    > USED AT LINE 6 IN core-utilities.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_ABS:         0125 DEFINED AT LINE 6
                    > USED AT LINE 9
ABS:                012B DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
ABS1:               0136 DEFINED AT LINE 76 IN core-alu.z80
HEADER_UPLUS:       0138 DEFINED AT LINE 6
                    > USED AT LINE 9
UPLUS:              013E DEFINED AT LINE 13
UMP2:               0158 DEFINED AT LINE 98 IN core-alu.z80
UMP1:               0159 DEFINED AT LINE 100 IN core-alu.z80
                    > USED AT LINE 97 IN core-alu.z80
HEADER_EQUAL:       015C DEFINED AT LINE 6
                    > USED AT LINE 9
EQUAL:              0160 DEFINED AT LINE 13
L_M_702S108:        0173 DEFINED AT LINE 75
                    > USED AT LINE 72
CUR_ADR:            2D8C DEFINED AT LINE 63
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 60
                    > USED AT LINE 61
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
                    > USED AT LINE 65
                    > USED AT LINE 66
HEADER_LESSTHAN:    017A DEFINED AT LINE 6
                    > USED AT LINE 9
LESSTHAN:           017E DEFINED AT LINE 13
                    > USED AT LINE 138 IN core-alu.z80
                    > USED AT LINE 256 IN core-alu.z80
                    > USED AT LINE 268 IN core-alu.z80
L_M_712S119:        0191 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_713S120:        0197 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_719S126:        01A9 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_GREATERTHAN: 01B5 DEFINED AT LINE 6
                    > USED AT LINE 9
GREATERTHAN:        01B9 DEFINED AT LINE 13
HEADER_ZEQUAL:      01D1 DEFINED AT LINE 6
                    > USED AT LINE 9
ZEQUAL:             01D6 DEFINED AT LINE 13
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 161 IN core-compiler.z80
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 187 IN core-interpreter.z80
                    > USED AT LINE 206 IN core-interpreter.z80
                    > USED AT LINE 91
L_M_734S143:        01DE DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_ZNOTEQUAL:   01E5 DEFINED AT LINE 6
                    > USED AT LINE 9
ZNOTEQUAL:          01EB DEFINED AT LINE 13
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 174 IN core-interpreter.z80
L_M_741S151:        01F3 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_OR:          01F9 DEFINED AT LINE 6
                    > USED AT LINE 9
OR:                 01FE DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-interpreter.z80
                    > USED AT LINE 210 IN core-interpreter.z80
HEADER_USTAR:       0211 DEFINED AT LINE 6
                    > USED AT LINE 9
USTAR:              0216 DEFINED AT LINE 13
                    > USED AT LINE 193 IN core-alu.z80
HEADER_USLASHMOD:   0230 DEFINED AT LINE 6
                    > USED AT LINE 9
USLASHMOD:          0238 DEFINED AT LINE 13
                    > USED AT LINE 214 IN core-alu.z80
HEADER_CELLS:       0254 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLS:              025C DEFINED AT LINE 13
HEADER_STAR:        025F DEFINED AT LINE 6
                    > USED AT LINE 9
STAR:               0263 DEFINED AT LINE 13
HEADER_SLASHMOD:    0283 DEFINED AT LINE 6
                    > USED AT LINE 9
SLASHMOD:           028A DEFINED AT LINE 13
                    > USED AT LINE 229 IN core-alu.z80
                    > USED AT LINE 235 IN core-alu.z80
HEADER_SLASH:       02BE DEFINED AT LINE 6
                    > USED AT LINE 9
SLASH:              02C2 DEFINED AT LINE 13
HEADER_MOD:         02CE DEFINED AT LINE 6
                    > USED AT LINE 9
MOD:                02D4 DEFINED AT LINE 13
HEADER_ONEMINUS:    02DE DEFINED AT LINE 6
                    > USED AT LINE 9
ONEMINUS:           02E3 DEFINED AT LINE 13
HEADER_TWOMINUS:    02E7 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOMINUS:           02EC DEFINED AT LINE 13
HEADER_CELLP:       02F1 DEFINED AT LINE 6
                    > USED AT LINE 9
CELLP:              02F9 DEFINED AT LINE 13
HEADER_MIN:         02FC DEFINED AT LINE 6
                    > USED AT LINE 9
MIN:                0302 DEFINED AT LINE 13
HEADER_MAX:         031C DEFINED AT LINE 6
                    > USED AT LINE 9
MAX:                0322 DEFINED AT LINE 13
HEADER_ONEP:        033C DEFINED AT LINE 6
                    > USED AT LINE 9
ONEP:               0341 DEFINED AT LINE 13
                    > USED AT LINE 58 IN core-alu.z80
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_TWOPLUS:     0345 DEFINED AT LINE 6
                    > USED AT LINE 9
TWOPLUS:            034A DEFINED AT LINE 13
                    > USED AT LINE 250 IN core-alu.z80
HEADER_TWOSTAR:     034F DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSTAR:            0354 DEFINED AT LINE 13
                    > USED AT LINE 187 IN core-alu.z80
HEADER_TWOSLASH:    035B DEFINED AT LINE 6
                    > USED AT LINE 9
TWOSLASH:           0360 DEFINED AT LINE 13
NEGATENUM:          0367 DEFINED AT LINE 304 IN core-alu.z80
                    > USED AT LINE 47 IN core-format.z80
                    > USED AT LINE 165 IN core-format.z80
DIVIDEWORDBYBYTE:   036F DEFINED AT LINE 321 IN core-alu.z80
                    > USED AT LINE 53 IN core-format.z80
L_M_890S324:        0377 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_893S327:        037F DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_898S332:        038B DEFINED AT LINE 75
                    > USED AT LINE 72
DIVIDEWORDBYWORD:   0390 DEFINED AT LINE 347 IN core-alu.z80
                    > USED AT LINE 180 IN core-alu.z80
L_M_916S352:        039C DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_920S356:        03A7 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_930S366:        03B6 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_934S370:        03C1 DEFINED AT LINE 75
                    > USED AT LINE 72
UNSIGNEDMULTIPLY:   03CA DEFINED AT LINE 389 IN core-alu.z80
                    > USED AT LINE 171 IN core-alu.z80
                    > USED AT LINE 123 IN core-format.z80
                    > USED AT LINE 153 IN core-format.z80
L_M_955S393:        03D5 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_960S398:        03E3 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_COLON:       03EC DEFINED AT LINE 6
                    > USED AT LINE 9
COLON:              03F0 DEFINED AT LINE 13
HEADER_SEMICOLON:   0414 DEFINED AT LINE 6
                    > USED AT LINE 9
SEMICOLON:          0418 DEFINED AT LINE 13
HEADER_COLONNONAME: 042C DEFINED AT LINE 6
                    > USED AT LINE 9
COLONNONAME:        0436 DEFINED AT LINE 13
HEADER_VARIABLE:    0448 DEFINED AT LINE 6
                    > USED AT LINE 9
VARIABLE:           0453 DEFINED AT LINE 13
HEADER_BUFFERCOLON: 0469 DEFINED AT LINE 6
                    > USED AT LINE 9
BUFFERCOLON:        0473 DEFINED AT LINE 13
HEADER_CREATE:      0483 DEFINED AT LINE 6
                    > USED AT LINE 9
CREATE:             048C DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-compiler.z80
                    > USED AT LINE 69 IN core-compiler.z80
XCREATE:            04B6 DEFINED AT LINE 51 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
HEADER_DOES:        04BE DEFINED AT LINE 6
                    > USED AT LINE 9
DOES:               04C6 DEFINED AT LINE 13
HEADER_CONSTANT:    04EC DEFINED AT LINE 6
                    > USED AT LINE 9
CONSTANT:           04F7 DEFINED AT LINE 13
                    > USED AT LINE 31 IN core-compiler.z80
                    > USED AT LINE 38 IN core-compiler.z80
HEADER_TICK:        0508 DEFINED AT LINE 6
                    > USED AT LINE 9
TICK:               050C DEFINED AT LINE 13
HEADER_IMMEDIATE:   0526 DEFINED AT LINE 6
                    > USED AT LINE 9
IMMEDIATE:          0532 DEFINED AT LINE 13
HEADER_FIND:        053E DEFINED AT LINE 6
                    > USED AT LINE 9
FIND:               0545 DEFINED AT LINE 13
HEADER_HIDDEN:      0557 DEFINED AT LINE 6
                    > USED AT LINE 9
HIDDEN:             0560 DEFINED AT LINE 13
HEADER_LBRAC:       0575 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRAC:              0579 DEFINED AT LINE 13
                    > USED AT LINE 16 IN core-compiler.z80
HEADER_RBRAC:       0582 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRAC:              0586 DEFINED AT LINE 13
                    > USED AT LINE 9 IN core-compiler.z80
                    > USED AT LINE 23 IN core-compiler.z80
DODOES:             058F DEFINED AT LINE 118 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
XDOES:              059F DEFINED AT LINE 125 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
HEADER_POSTPONE:    05B9 DEFINED AT LINE 6
                    > USED AT LINE 9
POSTPONE:           05C4 DEFINED AT LINE 13
POSTPONETOKEN:      05E2 DEFINED AT LINE 145 IN core-compiler.z80
                    > USED AT LINE 141 IN core-compiler.z80
POSTPONEWORD:       05FE DEFINED AT LINE 156 IN core-compiler.z80
                    > USED AT LINE 150 IN core-compiler.z80
POSTPONELITERAL:    063A DEFINED AT LINE 171 IN core-compiler.z80
                    > USED AT LINE 152 IN core-compiler.z80
HEADER_IF:          066B DEFINED AT LINE 6
                    > USED AT LINE 9
IF:                 0670 DEFINED AT LINE 13
HEADER_ELSE:        0686 DEFINED AT LINE 6
                    > USED AT LINE 9
ELSE:               068D DEFINED AT LINE 13
HEADER_ENDIF:       06A7 DEFINED AT LINE 6
                    > USED AT LINE 9
ENDIF:              06AF DEFINED AT LINE 13
XENDIF:             06B9 DEFINED AT LINE 23 IN core-control.z80
                    > USED AT LINE 14 IN core-control.z80
                    > USED AT LINE 19 IN core-control.z80
HEADER_BEGIN:       06CD DEFINED AT LINE 6
                    > USED AT LINE 9
BEGIN:              06D5 DEFINED AT LINE 13
HEADER_WHILE:       06E1 DEFINED AT LINE 6
                    > USED AT LINE 9
WHILE:              06E9 DEFINED AT LINE 13
HEADER_REPEAT:      06FF DEFINED AT LINE 6
                    > USED AT LINE 9
REPEAT:             0708 DEFINED AT LINE 13
HEADER_QBRAN:       072E DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN:              0738 DEFINED AT LINE 13
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 65
                    > USED AT LINE 91
HEADER_BRAN:        074C DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN:               0755 DEFINED AT LINE 13
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 60 IN core-control.z80
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 70
                    > USED AT LINE 81
                    > USED AT LINE 82
                    > USED AT LINE 103
HEADER_QBRAN1:      075E DEFINED AT LINE 6
                    > USED AT LINE 9
QBRAN1:             0769 DEFINED AT LINE 13
HEADER_BRAN1:       077D DEFINED AT LINE 6
                    > USED AT LINE 9
BRAN1:              0787 DEFINED AT LINE 13
                    > USED AT LINE 79 IN core-control.z80
HEADER_VERSION:     078F DEFINED AT LINE 6
                    > USED AT LINE 9
VERSION:            0799 DEFINED AT LINE 13
HEADER_RZ:          07A9 DEFINED AT LINE 6
                    > USED AT LINE 9
RZ:                 07AE DEFINED AT LINE 13
HEADER___MSK_IMMED: 07BE DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_HIDDEN: 07DA DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER___MSK_LENGTH: 07F7 DEFINED AT LINE 6
                    > USED AT LINE 9
HEADER_TRUE:        0814 DEFINED AT LINE 6
                    > USED AT LINE 9
TRUE:               081B DEFINED AT LINE 13
HEADER_FALSE:       082B DEFINED AT LINE 6
                    > USED AT LINE 9
FALSE:              0833 DEFINED AT LINE 13
HEADER_PAD:         0843 DEFINED AT LINE 6
                    > USED AT LINE 9
PAD:                0849 DEFINED AT LINE 13
HEADER_HERE:        0859 DEFINED AT LINE 6
                    > USED AT LINE 9
HERE:               0860 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 48 IN core-memory.z80
HEADER_INTP_STOP:   0870 DEFINED AT LINE 6
                    > USED AT LINE 9
INTP_STOP:          087C DEFINED AT LINE 13
HEADER_STATE:       088C DEFINED AT LINE 6
                    > USED AT LINE 9
STATE:              0894 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
HEADER_NESTING:     08A4 DEFINED AT LINE 6
                    > USED AT LINE 9
NESTING:            08AE DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
HEADER_SP0:         08BE DEFINED AT LINE 6
                    > USED AT LINE 9
SP0:                08C4 DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
HEADER_BASE:        08D4 DEFINED AT LINE 6
                    > USED AT LINE 9
BASE:               08DB DEFINED AT LINE 13
HEADER_LATESTSTR:   08EB DEFINED AT LINE 6
                    > USED AT LINE 9
LATESTSTR:          08F7 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 33 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
HEADER_LBRACE:      0907 DEFINED AT LINE 6
                    > USED AT LINE 9
LBRACE:             090B DEFINED AT LINE 13
                    > USED AT LINE 3 IN core-control.z80
                    > USED AT LINE 34 IN core-control.z80
HEADER_RBRACE:      092F DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACE:             0933 DEFINED AT LINE 13
                    > USED AT LINE 26 IN core-extra.z80
HEADER_RBRACEEXEC:  0953 DEFINED AT LINE 6
                    > USED AT LINE 9
RBRACEEXEC:         095B DEFINED AT LINE 13
                    > USED AT LINE 20 IN core-control.z80
                    > USED AT LINE 53 IN core-control.z80
HEADER_DOT:         097D DEFINED AT LINE 6
                    > USED AT LINE 9
DOT:                0981 DEFINED AT LINE 13
PRINTNUM:           09A6 DEFINED AT LINE 18 IN core-format.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
FORMATNUM:          09BF DEFINED AT LINE 39 IN core-format.z80
                    > USED AT LINE 9 IN core-format.z80
                    > USED AT LINE 26 IN core-format.z80
L_M_1298S42:        09C7 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1306S51:        09D5 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1315S60:        09E9 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1319S64:        09F4 DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBER:           0A04 DEFINED AT LINE 87 IN core-format.z80
                    > USED AT LINE 174 IN core-format.z80
L_M_1347S97:        0A18 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1357S107:       0A2A DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1363S113:       0A38 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1379S130:       0A53 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1383S134:       0A5F DEFINED AT LINE 75
                    > USED AT LINE 72
TONUMBEREXIT:       0A8A DEFINED AT LINE 160 IN core-format.z80
                    > USED AT LINE 132 IN core-format.z80
L_M_1409S163:       0A93 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_NUMBER:      0A9C DEFINED AT LINE 6
                    > USED AT LINE 9
NUMBER:             0AA5 DEFINED AT LINE 13
                    > USED AT LINE 174 IN core-compiler.z80
                    > USED AT LINE 206 IN core-interpreter.z80
HEADER_DECIMAL:     0ABF DEFINED AT LINE 6
                    > USED AT LINE 9
DECIMAL:            0AC9 DEFINED AT LINE 13
HEADER_HEX:         0AD7 DEFINED AT LINE 6
                    > USED AT LINE 9
HEX:                0ADD DEFINED AT LINE 13
HEADER_QUIT:        0AEB DEFINED AT LINE 6
                    > USED AT LINE 9
QUIT:               0AF2 DEFINED AT LINE 13
HEADER_WORD:        0B00 DEFINED AT LINE 6
                    > USED AT LINE 9
WORD:               0B07 DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_TCFA:        0B17 DEFINED AT LINE 6
                    > USED AT LINE 9
TCFA:               0B1E DEFINED AT LINE 13
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 189 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_EXECUTE:     0B34 DEFINED AT LINE 6
                    > USED AT LINE 9
EXECUTE:            0B3E DEFINED AT LINE 13
                    > USED AT LINE 33 IN core-extra.z80
                    > USED AT LINE 196 IN core-interpreter.z80
                    > USED AT LINE 199 IN core-interpreter.z80
HEADER_INTERPRET:   0B4B DEFINED AT LINE 6
                    > USED AT LINE 9
INTERPRET:          0B57 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-interpreter.z80
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
                    > USED AT LINE 20
LOOKUP:             0B82 DEFINED AT LINE 47 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-compiler.z80
L_M_1474S49:        0B8B DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1486S65:        0B9B DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1495S76:        0BAA DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_XWORD:       0BB7 DEFINED AT LINE 6
                    > USED AT LINE 9
XWORD:              0BBF DEFINED AT LINE 13
                    > USED AT LINE 11 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-strings.z80
XWORDSKIP:          0BC8 DEFINED AT LINE 97 IN core-interpreter.z80
                    > USED AT LINE 93 IN core-interpreter.z80
L_M_1519S103:       0C03 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1521S106:       0C0B DEFINED AT LINE 95
                    > USED AT LINE 92
L_M_1523S109:       0C13 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1529S116:       0C22 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1530S117:       0C27 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1533S120:       0C32 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1540S128:       0C44 DEFINED AT LINE 102
                    > USED AT LINE 99
L_M_1543S132:       0C4F DEFINED AT LINE 102
                    > USED AT LINE 99
XWORDREAD:          0C5C DEFINED AT LINE 144 IN core-interpreter.z80
                    > USED AT LINE 94 IN core-interpreter.z80
L_M_1559S151:       0C88 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1563S155:       0C90 DEFINED AT LINE 73
                    > USED AT LINE 70
INTERPTOKEN:        0CA6 DEFINED AT LINE 171 IN core-interpreter.z80
                    > USED AT LINE 35 IN core-interpreter.z80
INTERPWORD:         0CC2 DEFINED AT LINE 182 IN core-interpreter.z80
                    > USED AT LINE 176 IN core-interpreter.z80
INTERPLITERAL:      0D06 DEFINED AT LINE 203 IN core-interpreter.z80
                    > USED AT LINE 178 IN core-interpreter.z80
NESTPLUS:           0D45 DEFINED AT LINE 223 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-extra.z80
NESTMINUS:          0D4F DEFINED AT LINE 229 IN core-interpreter.z80
                    > USED AT LINE 15 IN core-extra.z80
HEADER_TYPE:        0D59 DEFINED AT LINE 6
                    > USED AT LINE 9
TYPE:               0D60 DEFINED AT LINE 13
                    > USED AT LINE 182 IN core-compiler.z80
                    > USED AT LINE 219 IN core-interpreter.z80
                    > USED AT LINE 54 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
HEADER_CR:          0D7A DEFINED AT LINE 6
                    > USED AT LINE 9
CR:                 0D7F DEFINED AT LINE 13
HEADER_ACCEPT:      0D85 DEFINED AT LINE 6
                    > USED AT LINE 9
ACCEPT:             0D8E DEFINED AT LINE 13
HEADER_KEY:         0DAA DEFINED AT LINE 6
                    > USED AT LINE 9
KEY:                0DB0 DEFINED AT LINE 13
HEADER_EMIT:        0DB9 DEFINED AT LINE 6
                    > USED AT LINE 9
EMIT:               0DC0 DEFINED AT LINE 13
HEADER_QKEY:        0DD1 DEFINED AT LINE 6
                    > USED AT LINE 9
QKEY:               0DD8 DEFINED AT LINE 13
L_M_1664S33:        0DEE DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_BL:          0DF4 DEFINED AT LINE 6
                    > USED AT LINE 9
BL:                 0DF9 DEFINED AT LINE 13
                    > USED AT LINE 46 IN core-compiler.z80
                    > USED AT LINE 77 IN core-compiler.z80
                    > USED AT LINE 136 IN core-compiler.z80
                    > USED AT LINE 29 IN core-interpreter.z80
HEADER_PRINT:       0E03 DEFINED AT LINE 6
                    > USED AT LINE 9
PRINT:              0E0B DEFINED AT LINE 13
HEADER_DOTQUOTE:    0E1D DEFINED AT LINE 6
                    > USED AT LINE 9
DOTQUOTE:           0E22 DEFINED AT LINE 13
INITFORTH:          0E40 DEFINED AT LINE 1 IN core-kernel.z80
                    > USED AT LINE 34
ENTER:              0E7B DEFINED AT LINE 29 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 3 IN core-kernel.z80
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 15
                    > USED AT LINE 2
                    > USED AT LINE 2
ENTER1:             0E7C DEFINED AT LINE 31 IN core-kernel.z80
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
                    > USED AT LINE 6
FORTH:              0E83 DEFINED AT LINE 40 IN core-kernel.z80
EXIT:               0E8C DEFINED AT LINE 47 IN core-kernel.z80
                    > USED AT LINE 77 IN core-alu.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
                    > USED AT LINE 14
EXIT_FORTH:         0E8F DEFINED AT LINE 51 IN core-kernel.z80
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
                    > USED AT LINE 21
HEADER_NOOP:        0E90 DEFINED AT LINE 6
                    > USED AT LINE 9
NOOP:               0E97 DEFINED AT LINE 13
HEADER_STORE:       0E9A DEFINED AT LINE 6
                    > USED AT LINE 9
STORE:              0E9E DEFINED AT LINE 13
                    > USED AT LINE 6 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 63 IN core-compiler.z80
                    > USED AT LINE 131 IN core-compiler.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 32 IN core-extra.z80
                    > USED AT LINE 33 IN core-strings.z80
HEADER_FETCH:       0EBB DEFINED AT LINE 6
                    > USED AT LINE 9
FETCH:              0EBF DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-compiler.z80
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 21 IN core-compiler.z80
                    > USED AT LINE 29 IN core-compiler.z80
                    > USED AT LINE 36 IN core-compiler.z80
                    > USED AT LINE 43 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 60 IN core-compiler.z80
                    > USED AT LINE 72 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
                    > USED AT LINE 5 IN core-control.z80
                    > USED AT LINE 11 IN core-control.z80
                    > USED AT LINE 26 IN core-control.z80
                    > USED AT LINE 35 IN core-control.z80
                    > USED AT LINE 41 IN core-control.z80
                    > USED AT LINE 49 IN core-control.z80
                    > USED AT LINE 51 IN core-control.z80
                    > USED AT LINE 3 IN core-extra.z80
                    > USED AT LINE 4 IN core-extra.z80
                    > USED AT LINE 7 IN core-extra.z80
                    > USED AT LINE 16 IN core-extra.z80
                    > USED AT LINE 17 IN core-extra.z80
                    > USED AT LINE 27 IN core-extra.z80
                    > USED AT LINE 28 IN core-extra.z80
                    > USED AT LINE 3 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-interpreter.z80
                    > USED AT LINE 190 IN core-interpreter.z80
                    > USED AT LINE 191 IN core-interpreter.z80
                    > USED AT LINE 208 IN core-interpreter.z80
                    > USED AT LINE 209 IN core-interpreter.z80
                    > USED AT LINE 52 IN core-io.z80
                    > USED AT LINE 22 IN core-strings.z80
                    > USED AT LINE 26 IN core-strings.z80
                    > USED AT LINE 34 IN core-strings.z80
                    > USED AT LINE 5 IN core-utilities.z80
                    > USED AT LINE 9 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_CSTORE:      0EC8 DEFINED AT LINE 6
                    > USED AT LINE 9
CSTORE:             0ECD DEFINED AT LINE 13
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
HEADER_CFETCH:      0EE7 DEFINED AT LINE 6
                    > USED AT LINE 9
CFETCH:             0EEC DEFINED AT LINE 13
                    > USED AT LINE 47 IN core-compiler.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 39 IN core-strings.z80
HEADER_RSPSTORE:    0EF3 DEFINED AT LINE 6
                    > USED AT LINE 9
RSPSTORE:           0EFA DEFINED AT LINE 13
HEADER_SPFETCH:     0F0A DEFINED AT LINE 6
                    > USED AT LINE 9
SPFETCH:            0F10 DEFINED AT LINE 13
                    > USED AT LINE 4 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
HEADER_SPSTORE:     0F22 DEFINED AT LINE 6
                    > USED AT LINE 9
SPSTORE:            0F28 DEFINED AT LINE 13
HEADER_ALLOT:       0F3A DEFINED AT LINE 6
                    > USED AT LINE 9
ALLOT:              0F42 DEFINED AT LINE 13
                    > USED AT LINE 30 IN core-compiler.z80
                    > USED AT LINE 37 IN core-compiler.z80
                    > USED AT LINE 40 IN core-strings.z80
HEADER_ADDSTORE:    0F4C DEFINED AT LINE 6
                    > USED AT LINE 9
ADDSTORE:           0F51 DEFINED AT LINE 13
                    > USED AT LINE 48 IN core-memory.z80
HEADER_COMMA:       0F71 DEFINED AT LINE 6
                    > USED AT LINE 9
COMMA:              0F75 DEFINED AT LINE 13
                    > USED AT LINE 69 IN core-compiler.z80
                    > USED AT LINE 164 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 167 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 177 IN core-compiler.z80
                    > USED AT LINE 194 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
                    > USED AT LINE 213 IN core-interpreter.z80
HEADER_CCOMMA:      0F8C DEFINED AT LINE 6
                    > USED AT LINE 9
CCOMMA:             0F91 DEFINED AT LINE 13
TXT_INTRO:          0FBA DEFINED AT LINE 1 IN core-messages.z80
TXT_NEWLINE:        0FE0 DEFINED AT LINE 3 IN core-messages.z80
                    > USED AT LINE 267 IN core-serial.z80
TXT_PROMPT:         0FE3 DEFINED AT LINE 4 IN core-messages.z80
                    > USED AT LINE 52
DONE:               0FE8 DEFINED AT LINE 7 IN core-messages.z80
                    > USED AT LINE 52
FAILED:             0FF3 DEFINED AT LINE 8 IN core-messages.z80
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
                    > USED AT LINE 28
INITSERIAL:         0FFE DEFINED AT LINE 3 IN core-serial.z80
                    > USED AT LINE 33
SERIALIN:           1027 DEFINED AT LINE 25 IN core-serial.z80
                    > USED AT LINE 25
L_M_1828S31:        1033 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1833S36:        1041 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1840S43:        1052 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1850S53:        1069 DEFINED AT LINE 75
                    > USED AT LINE 72
GETC:               1071 DEFINED AT LINE 69 IN core-serial.z80
                    > USED AT LINE 146 IN core-serial.z80
PUTC:               107C DEFINED AT LINE 115 IN core-serial.z80
                    > USED AT LINE 25 IN core-io.z80
                    > USED AT LINE 154 IN core-serial.z80
                    > USED AT LINE 157 IN core-serial.z80
                    > USED AT LINE 165 IN core-serial.z80
                    > USED AT LINE 190 IN core-serial.z80
                    > USED AT LINE 275 IN core-serial.z80
                    > USED AT LINE 43 IN core-utilities.z80
L_M_1908S117:       1082 DEFINED AT LINE 73
                    > USED AT LINE 70
INPUTREADY:         1090 DEFINED AT LINE 126 IN core-serial.z80
                    > USED AT LINE 31 IN core-io.z80
GETLINE:            1096 DEFINED AT LINE 137 IN core-serial.z80
                    > USED AT LINE 14 IN core-io.z80
                    > USED AT LINE 215 IN core-serial.z80
L_M_1932S144:       10BC DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1933S145:       10C1 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_1936S148:       10CC DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1938S150:       10D4 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_1952S164:       10F1 DEFINED AT LINE 75
                    > USED AT LINE 72
GETLINECHECK:       1103 DEFINED AT LINE 177 IN core-serial.z80
                    > USED AT LINE 169 IN core-serial.z80
                    > USED AT LINE 171 IN core-serial.z80
                    > USED AT LINE 174 IN core-serial.z80
PRINTROUTINE:       1112 DEFINED AT LINE 187 IN core-serial.z80
                    > USED AT LINE 244 IN core-serial.z80
                    > USED AT LINE 259 IN core-serial.z80
L_M_1974S188:       1117 DEFINED AT LINE 73
                    > USED AT LINE 70
GETKEY:             1126 DEFINED AT LINE 204 IN core-serial.z80
                    > USED AT LINE 104 IN core-interpreter.z80
                    > USED AT LINE 118 IN core-interpreter.z80
                    > USED AT LINE 159 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-io.z80
L_M_1996S212:       1139 DEFINED AT LINE 75
                    > USED AT LINE 72
PRINTPSTR:          115B DEFINED AT LINE 236 IN core-serial.z80
                    > USED AT LINE 45 IN core-io.z80
                    > USED AT LINE 53
                    > USED AT LINE 268 IN core-serial.z80
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 29
                    > USED AT LINE 31
                    > USED AT LINE 53
PRINTSTR:           116A DEFINED AT LINE 255 IN core-serial.z80
                    > USED AT LINE 10 IN core-format.z80
                    > USED AT LINE 27 IN core-format.z80
                    > USED AT LINE 3 IN core-io.z80
                    > USED AT LINE 41 IN core-utilities.z80
PRINTCR:            1174 DEFINED AT LINE 265 IN core-serial.z80
                    > USED AT LINE 8 IN core-io.z80
                    > USED AT LINE 184 IN core-serial.z80
                    > USED AT LINE 49 IN core-utilities.z80
PRINTSPACE:         117D DEFINED AT LINE 272 IN core-serial.z80
                    > USED AT LINE 11 IN core-format.z80
                    > USED AT LINE 28 IN core-format.z80
                    > USED AT LINE 155 IN core-serial.z80
                    > USED AT LINE 42 IN core-utilities.z80
HEADER_LIT:         1185 DEFINED AT LINE 6
                    > USED AT LINE 9
LIT:                118B DEFINED AT LINE 13
                    > USED AT LINE 53 IN core-alu.z80
                    > USED AT LINE 64 IN core-alu.z80
                    > USED AT LINE 5 IN core-compiler.z80
                    > USED AT LINE 7 IN core-compiler.z80
                    > USED AT LINE 14 IN core-compiler.z80
                    > USED AT LINE 22 IN core-compiler.z80
                    > USED AT LINE 28 IN core-compiler.z80
                    > USED AT LINE 48 IN core-compiler.z80
                    > USED AT LINE 49 IN core-compiler.z80
                    > USED AT LINE 58 IN core-compiler.z80
                    > USED AT LINE 59 IN core-compiler.z80
                    > USED AT LINE 61 IN core-compiler.z80
                    > USED AT LINE 64 IN core-compiler.z80
                    > USED AT LINE 129 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 160 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 163 IN core-compiler.z80
                    > USED AT LINE 165 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 176 IN core-compiler.z80
                    > USED AT LINE 4 IN core-control.z80
                    > USED AT LINE 10 IN core-control.z80
                    > USED AT LINE 12 IN core-control.z80
                    > USED AT LINE 40 IN core-control.z80
                    > USED AT LINE 42 IN core-control.z80
                    > USED AT LINE 47 IN core-control.z80
                    > USED AT LINE 8 IN core-extra.z80
                    > USED AT LINE 20 IN core-extra.z80
                    > USED AT LINE 182 IN core-format.z80
                    > USED AT LINE 187 IN core-format.z80
                    > USED AT LINE 9 IN core-interpreter.z80
                    > USED AT LINE 16 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 186 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 212 IN core-interpreter.z80
                    > USED AT LINE 40 IN core-io.z80
                    > USED AT LINE 56 IN core-io.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 24 IN core-strings.z80
                    > USED AT LINE 25 IN core-strings.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 29 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
                    > USED AT LINE 37 IN core-strings.z80
                    > USED AT LINE 38 IN core-strings.z80
                    > USED AT LINE 7 IN core-utilities.z80
                    > USED AT LINE 12 IN core-utilities.z80
                    > USED AT LINE 16 IN core-utilities.z80
HEADER_ROT:         119D DEFINED AT LINE 6
                    > USED AT LINE 9
ROT:                11A3 DEFINED AT LINE 13
                    > USED AT LINE 216 IN core-alu.z80
HEADER_NROT:        11D0 DEFINED AT LINE 6
                    > USED AT LINE 9
NROT:               11D7 DEFINED AT LINE 13
                    > USED AT LINE 194 IN core-alu.z80
                    > USED AT LINE 207 IN core-alu.z80
                    > USED AT LINE 211 IN core-alu.z80
                    > USED AT LINE 220 IN core-alu.z80
HEADER_DUPP:        1206 DEFINED AT LINE 6
                    > USED AT LINE 9
DUPP:               120C DEFINED AT LINE 13
                    > USED AT LINE 74 IN core-alu.z80
                    > USED AT LINE 137 IN core-compiler.z80
                    > USED AT LINE 148 IN core-compiler.z80
                    > USED AT LINE 159 IN core-compiler.z80
                    > USED AT LINE 25 IN core-control.z80
                    > USED AT LINE 50 IN core-control.z80
                    > USED AT LINE 31 IN core-extra.z80
                    > USED AT LINE 30 IN core-interpreter.z80
                    > USED AT LINE 174 IN core-interpreter.z80
                    > USED AT LINE 185 IN core-interpreter.z80
                    > USED AT LINE 11 IN core-strings.z80
                    > USED AT LINE 11 IN core-utilities.z80
                    > USED AT LINE 15 IN core-utilities.z80
HEADER_SWAP:        1219 DEFINED AT LINE 6
                    > USED AT LINE 9
SWAP:               1220 DEFINED AT LINE 13
                    > USED AT LINE 192 IN core-alu.z80
                    > USED AT LINE 213 IN core-alu.z80
                    > USED AT LINE 215 IN core-alu.z80
                    > USED AT LINE 221 IN core-alu.z80
                    > USED AT LINE 230 IN core-alu.z80
                    > USED AT LINE 260 IN core-alu.z80
                    > USED AT LINE 270 IN core-alu.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 13 IN core-control.z80
                    > USED AT LINE 27 IN core-control.z80
                    > USED AT LINE 48 IN core-control.z80
                    > USED AT LINE 52 IN core-control.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 12 IN core-strings.z80
                    > USED AT LINE 13 IN core-utilities.z80
HEADER_DROP:        1239 DEFINED AT LINE 6
                    > USED AT LINE 9
DROP:               1240 DEFINED AT LINE 13
                    > USED AT LINE 193 IN core-alu.z80
                    > USED AT LINE 230 IN core-alu.z80
                    > USED AT LINE 236 IN core-alu.z80
                    > USED AT LINE 258 IN core-alu.z80
                    > USED AT LINE 260 IN core-alu.z80
                    > USED AT LINE 270 IN core-alu.z80
                    > USED AT LINE 272 IN core-alu.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 139 IN core-compiler.z80
                    > USED AT LINE 158 IN core-compiler.z80
                    > USED AT LINE 173 IN core-compiler.z80
                    > USED AT LINE 179 IN core-compiler.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 32 IN core-interpreter.z80
                    > USED AT LINE 184 IN core-interpreter.z80
                    > USED AT LINE 205 IN core-interpreter.z80
                    > USED AT LINE 216 IN core-interpreter.z80
                    > USED AT LINE 18 IN core-utilities.z80
HEADER_OVER:        124D DEFINED AT LINE 6
                    > USED AT LINE 9
OVER:               1254 DEFINED AT LINE 13
                    > USED AT LINE 191 IN core-alu.z80
                    > USED AT LINE 191 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 204 IN core-alu.z80
                    > USED AT LINE 209 IN core-alu.z80
                    > USED AT LINE 255 IN core-alu.z80
                    > USED AT LINE 255 IN core-alu.z80
                    > USED AT LINE 267 IN core-alu.z80
                    > USED AT LINE 267 IN core-alu.z80
                    > USED AT LINE 62 IN core-compiler.z80
                    > USED AT LINE 130 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 147 IN core-compiler.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 173 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
HEADER_TOR:         1277 DEFINED AT LINE 6
                    > USED AT LINE 9
TOR:                127C DEFINED AT LINE 13
                    > USED AT LINE 63 IN core-alu.z80
                    > USED AT LINE 5 IN core-strings.z80
HEADER_RFROM:       128C DEFINED AT LINE 6
                    > USED AT LINE 9
RFROM:              1291 DEFINED AT LINE 13
                    > USED AT LINE 65 IN core-alu.z80
                    > USED AT LINE 53 IN core-compiler.z80
                    > USED AT LINE 71 IN core-compiler.z80
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 127 IN core-compiler.z80
                    > USED AT LINE 3 IN core-strings.z80
LITSTR:             12A1 DEFINED AT LINE 1 IN core-strings.z80
                    > USED AT LINE 180 IN core-compiler.z80
                    > USED AT LINE 217 IN core-interpreter.z80
                    > USED AT LINE 37 IN core-strings.z80
HEADER_COUNT:       12B3 DEFINED AT LINE 6
                    > USED AT LINE 9
COUNT:              12BB DEFINED AT LINE 13
                    > USED AT LINE 78 IN core-compiler.z80
                    > USED AT LINE 17 IN core-interpreter.z80
                    > USED AT LINE 4 IN core-strings.z80
                    > USED AT LINE 35 IN core-strings.z80
HEADER_SQUOTE:      12CD DEFINED AT LINE 6
                    > USED AT LINE 9
SQUOTE:             12D2 DEFINED AT LINE 13
HEADER_QT:          12D4 DEFINED AT LINE 6
                    > USED AT LINE 9
QT:                 12D8 DEFINED AT LINE 13
                    > USED AT LINE 51 IN core-io.z80
                    > USED AT LINE 18 IN core-strings.z80
COMPARESTR:         132C DEFINED AT LINE 53 IN core-strings.z80
                    > USED AT LINE 71 IN core-interpreter.z80
L_M_2155S56:        1334 DEFINED AT LINE 75
                    > USED AT LINE 72
L_M_2156S57:        1339 DEFINED AT LINE 73
                    > USED AT LINE 70
L_M_2160S61:        1343 DEFINED AT LINE 75
                    > USED AT LINE 72
HEADER_PACK:        1352 DEFINED AT LINE 6
                    > USED AT LINE 9
PACK:               1359 DEFINED AT LINE 13
HEADER_DOTS:        1379 DEFINED AT LINE 6
                    > USED AT LINE 9
DOTS:               137E DEFINED AT LINE 13
HEADER_WORDS:       13D0 DEFINED AT LINE 6
                    > USED AT LINE 9
WORDS:              13D8 DEFINED AT LINE 13
LISTWORDS:          13E0 DEFINED AT LINE 28 IN core-utilities.z80
                    > USED AT LINE 24 IN core-utilities.z80
L_M_2210S30:        13E9 DEFINED AT LINE 73
                    > USED AT LINE 70
HEADER_LATEST:      140C DEFINED AT LINE 6
                    > USED AT LINE 19 IN core-kernel.z80
                    > USED AT LINE 9
LATEST:             1415 DEFINED AT LINE 13
                    > USED AT LINE 8 IN core-compiler.z80
                    > USED AT LINE 15 IN core-compiler.z80
                    > USED AT LINE 44 IN core-compiler.z80
                    > USED AT LINE 45 IN core-compiler.z80
                    > USED AT LINE 128 IN core-compiler.z80
TESTS_START:        2000 DEFINED AT LINE 67
                    > USED AT LINE 37
TST_TEXTM_2280S7:   2012 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2282S9:   2048 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2284S11:  206F DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2286S13:   20A5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2286S13:   20AD DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2287S15:  20BF DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2289S17:  20E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2291S19:   211F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2291S19:   2127 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2292S21:  2139 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2294S23:  216B DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2296S25:  218A DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2298S28:  21A7 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2300S30:  21DB DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2302S32:  2201 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2304S35:  2220 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2306S37:  2249 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2308S39:   227F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2308S39:   2285 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2310S42:  22A4 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2312S44:   22DC DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2312S44:   22EC DEFINED AT LINE 37
                    > USED AT LINE 26
TE_FAILM_2313S45:   2317 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2313S45:   2329 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2314S47:  233B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2316S49:   2373 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2316S49:   2381 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2317S51:  2393 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2319S53:  23C0 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2321S55:   23F9 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2321S55:   240D DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2322S57:  241F DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2325S60:  2453 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2327S62:  2477 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2329S64:   24B0 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2329S64:   24C2 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2330S66:  24D4 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2333S69:  250A DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2335S71:   2542 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2335S71:   2552 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2338S75:  257E DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2340S78:  25B2 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2342S80:   25EE DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2342S80:   2605 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2344S83:  2624 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2346S85:   2660 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2346S85:   2677 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2347S87:  2689 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2350S92:  26D3 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2352S94:   270F DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2352S94:   2719 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2354S98:  2738 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2356S100:  2774 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2356S100:  277E DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2357S102: 2790 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2360S105: 27E9 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2362S107:  2826 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2362S107:  283B DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2363S110: 284D DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2365S112:  2885 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2365S112:  2899 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2366S114: 28AB DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2368S116:  28E5 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2368S116:  28EF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2369S118: 2901 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2373S123: 2940 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2375S125:  2978 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2375S125:  2984 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2376S127: 2996 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2378S130: 2A2C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2380S133: 2A4C DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2382S135: 2A77 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2384S137: 2A9B DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2386S139:  2AD3 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2386S139:  2ADF DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2387S141: 2AF1 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2389S143: 2B13 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2391S145:  2B4B DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2391S145:  2B57 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2392S146: 2B69 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2518S18:  2B89 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2520S20:   2BCA DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2520S20:   2BDA DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2521S22:  2BEC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2523S24:   2C2D DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2523S24:   2C44 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2524S1:   2C56 DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2526S3:    2C94 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2526S3:    2CA4 DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2527S5:   2CB6 DEFINED AT LINE 15
                    > USED AT LINE 11
TST_TEXTM_2529S8:   2CDC DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2531S10:   2D18 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2531S10:   2D2C DEFINED AT LINE 37
                    > USED AT LINE 26
TST_TEXTM_2532S12:  2D3E DEFINED AT LINE 15
                    > USED AT LINE 11
TE_FAILM_2534S14:   2D79 DEFINED AT LINE 34
                    > USED AT LINE 30
TF_DONEM_2534S14:   2D8C DEFINED AT LINE 37
                    > USED AT LINE 26
RET_STACK:          2EA7 DEFINED AT LINE 3 IN variables.z80
                    > USED AT LINE 32
                    > USED AT LINE 26
RPP:                2EA7 DEFINED AT LINE 4 IN variables.z80
DATA_STACK:         2EA7 DEFINED AT LINE 6 IN variables.z80
                    > USED AT LINE 2 IN core-kernel.z80
SPP:                2FA7 DEFINED AT LINE 8 IN variables.z80
SERBUF:             3000 DEFINED AT LINE 11 IN variables.z80
                    > USED AT LINE 7 IN core-serial.z80
                    > USED AT LINE 42 IN core-serial.z80
                    > USED AT LINE 44 IN core-serial.z80
SERINPTR:           303F DEFINED AT LINE 12 IN variables.z80
                    > USED AT LINE 8 IN core-serial.z80
                    > USED AT LINE 39 IN core-serial.z80
                    > USED AT LINE 46 IN core-serial.z80
SERRDPTR:           3041 DEFINED AT LINE 13 IN variables.z80
                    > USED AT LINE 9 IN core-serial.z80
SERBUFUSED:         3043 DEFINED AT LINE 14 IN variables.z80
                    > USED AT LINE 5 IN core-serial.z80
                    > USED AT LINE 34 IN core-serial.z80
                    > USED AT LINE 49 IN core-serial.z80
                    > USED AT LINE 51 IN core-serial.z80
                    > USED AT LINE 127 IN core-serial.z80
LINEBUFSTART:       3045 DEFINED AT LINE 15 IN variables.z80
                    > USED AT LINE 12 IN core-serial.z80
                    > USED AT LINE 213 IN core-serial.z80
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
                    > USED AT LINE 8
LINEBUFSIZE:        3047 DEFINED AT LINE 16 IN variables.z80
                    > USED AT LINE 17 IN core-serial.z80
                    > USED AT LINE 214 IN core-serial.z80
CURRKEY:            3049 DEFINED AT LINE 17 IN variables.z80
                    > USED AT LINE 13 IN core-serial.z80
                    > USED AT LINE 208 IN core-serial.z80
                    > USED AT LINE 217 IN core-serial.z80
                    > USED AT LINE 222 IN core-serial.z80
                    > USED AT LINE 225 IN core-serial.z80
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
                    > USED AT LINE 10
LINEBUFTOP:         304B DEFINED AT LINE 18 IN variables.z80
                    > USED AT LINE 14 IN core-serial.z80
                    > USED AT LINE 209 IN core-serial.z80
                    > USED AT LINE 220 IN core-serial.z80
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
                    > USED AT LINE 9
LINEBUF:            304D DEFINED AT LINE 19 IN variables.z80
                    > USED AT LINE 11 IN core-serial.z80
                    > USED AT LINE 216 IN core-serial.z80
WORDBUF:            30CD DEFINED AT LINE 21 IN variables.z80
                    > USED AT LINE 8 IN core-format.z80
                    > USED AT LINE 25 IN core-format.z80
                    > USED AT LINE 71 IN core-format.z80
                    > USED AT LINE 27 IN core-strings.z80
                    > USED AT LINE 31 IN core-strings.z80
WORDBUF2:           310D DEFINED AT LINE 22 IN variables.z80
                    > USED AT LINE 29 IN core-strings.z80
VAR_PAD:            314D DEFINED AT LINE 23 IN variables.z80
                    > USED AT LINE 19
EXITADDR:           324D DEFINED AT LINE 25 IN variables.z80
                    > USED AT LINE 41 IN core-kernel.z80
                    > USED AT LINE 43 IN core-kernel.z80
IS_LITERAL:         324F DEFINED AT LINE 26 IN variables.z80
                    > USED AT LINE 9 IN core-kernel.z80
VAR_HERE:           3251 DEFINED AT LINE 27 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 17 IN core-kernel.z80
                    > USED AT LINE 64 IN core-memory.z80
                    > USED AT LINE 66 IN core-memory.z80
                    > USED AT LINE 72 IN core-memory.z80
                    > USED AT LINE 75 IN core-memory.z80
VAR_INTP_STOP:      3253 DEFINED AT LINE 28 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 8 IN core-kernel.z80
VAR_STATE:          3255 DEFINED AT LINE 29 IN variables.z80
                    > USED AT LINE 110 IN core-compiler.z80
                    > USED AT LINE 115 IN core-compiler.z80
                    > USED AT LINE 19
                    > USED AT LINE 11 IN core-kernel.z80
VAR_NESTING:        3257 DEFINED AT LINE 30 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 224 IN core-interpreter.z80
                    > USED AT LINE 226 IN core-interpreter.z80
                    > USED AT LINE 230 IN core-interpreter.z80
                    > USED AT LINE 232 IN core-interpreter.z80
                    > USED AT LINE 10 IN core-kernel.z80
VAR_SP0:            3259 DEFINED AT LINE 31 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 4 IN core-kernel.z80
VAR_BASE:           325B DEFINED AT LINE 32 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 6 IN core-format.z80
                    > USED AT LINE 23 IN core-format.z80
                    > USED AT LINE 122 IN core-format.z80
                    > USED AT LINE 140 IN core-format.z80
                    > USED AT LINE 152 IN core-format.z80
                    > USED AT LINE 14 IN core-kernel.z80
VAR_LATEST_STR:     325D DEFINED AT LINE 33 IN variables.z80
                    > USED AT LINE 19
                    > USED AT LINE 21 IN core-kernel.z80
VAR_LATEST:         325F DEFINED AT LINE 34 IN variables.z80
                    > USED AT LINE 82 IN core-compiler.z80
                    > USED AT LINE 48 IN core-interpreter.z80
                    > USED AT LINE 20 IN core-kernel.z80
                    > USED AT LINE 29 IN core-utilities.z80
                    > USED AT LINE 19
CHAR_POINTER:       3261 DEFINED AT LINE 40 IN variables.z80
                    > USED AT LINE 73 IN core-serial.z80
                    > USED AT LINE 76 IN core-serial.z80
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
                    > USED AT LINE 12
START_USER:         3263 DEFINED AT LINE 82
                    > USED AT LINE 16 IN core-kernel.z80
